(async ()=>{
    function i$(e, t) {
        for(var n = 0; n < t.length; n++){
            const r = t[n];
            if (typeof r != "string" && !Array.isArray(r)) {
                for(const i in r)if (i !== "default" && !(i in e)) {
                    const o = Object.getOwnPropertyDescriptor(r, i);
                    o && Object.defineProperty(e, i, o.get ? o : {
                        enumerable: !0,
                        get: ()=>r[i]
                    });
                }
            }
        }
        return Object.freeze(Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }));
    }
    (function() {
        const t = document.createElement("link").relList;
        if (t && t.supports && t.supports("modulepreload")) return;
        for (const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);
        new MutationObserver((i)=>{
            for (const o of i)if (o.type === "childList") for (const s of o.addedNodes)s.tagName === "LINK" && s.rel === "modulepreload" && r(s);
        }).observe(document, {
            childList: !0,
            subtree: !0
        });
        function n(i) {
            const o = {};
            return i.integrity && (o.integrity = i.integrity), i.referrerPolicy && (o.referrerPolicy = i.referrerPolicy), i.crossOrigin === "use-credentials" ? o.credentials = "include" : i.crossOrigin === "anonymous" ? o.credentials = "omit" : o.credentials = "same-origin", o;
        }
        function r(i) {
            if (i.ep) return;
            i.ep = !0;
            const o = n(i);
            fetch(i.href, o);
        }
    })();
    var Ua = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
    function fi(e) {
        return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
    }
    function o$(e) {
        if (e.__esModule) return e;
        var t = e.default;
        if (typeof t == "function") {
            var n = function r() {
                return this instanceof r ? Reflect.construct(t, arguments, this.constructor) : t.apply(this, arguments);
            };
            n.prototype = t.prototype;
        } else n = {};
        return Object.defineProperty(n, "__esModule", {
            value: !0
        }), Object.keys(e).forEach(function(r) {
            var i = Object.getOwnPropertyDescriptor(e, r);
            Object.defineProperty(n, r, i.get ? i : {
                enumerable: !0,
                get: function() {
                    return e[r];
                }
            });
        }), n;
    }
    var Ax = {
        exports: {}
    }, Zu = {}, Fx = {
        exports: {}
    }, yt = {};
    var G_;
    function s$() {
        if (G_) return yt;
        G_ = 1;
        var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), o = Symbol.for("react.provider"), s = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), f = Symbol.for("react.memo"), p = Symbol.for("react.lazy"), m = Symbol.iterator;
        function g(U) {
            return U === null || typeof U != "object" ? null : (U = m && U[m] || U["@@iterator"], typeof U == "function" ? U : null);
        }
        var v = {
            isMounted: function() {
                return !1;
            },
            enqueueForceUpdate: function() {},
            enqueueReplaceState: function() {},
            enqueueSetState: function() {}
        }, x = Object.assign, b = {};
        function S(U, Z, J) {
            this.props = U, this.context = Z, this.refs = b, this.updater = J || v;
        }
        S.prototype.isReactComponent = {}, S.prototype.setState = function(U, Z) {
            if (typeof U != "object" && typeof U != "function" && U != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
            this.updater.enqueueSetState(this, U, Z, "setState");
        }, S.prototype.forceUpdate = function(U) {
            this.updater.enqueueForceUpdate(this, U, "forceUpdate");
        };
        function N() {}
        N.prototype = S.prototype;
        function _(U, Z, J) {
            this.props = U, this.context = Z, this.refs = b, this.updater = J || v;
        }
        var I = _.prototype = new N;
        I.constructor = _, x(I, S.prototype), I.isPureReactComponent = !0;
        var C = Array.isArray, A = Object.prototype.hasOwnProperty, R = {
            current: null
        }, D = {
            key: !0,
            ref: !0,
            __self: !0,
            __source: !0
        };
        function O(U, Z, J) {
            var X, te = {}, ie = null, ae = null;
            if (Z != null) for(X in Z.ref !== void 0 && (ae = Z.ref), Z.key !== void 0 && (ie = "" + Z.key), Z)A.call(Z, X) && !D.hasOwnProperty(X) && (te[X] = Z[X]);
            var ce = arguments.length - 2;
            if (ce === 1) te.children = J;
            else if (1 < ce) {
                for(var de = Array(ce), ve = 0; ve < ce; ve++)de[ve] = arguments[ve + 2];
                te.children = de;
            }
            if (U && U.defaultProps) for(X in ce = U.defaultProps, ce)te[X] === void 0 && (te[X] = ce[X]);
            return {
                $$typeof: e,
                type: U,
                key: ie,
                ref: ae,
                props: te,
                _owner: R.current
            };
        }
        function E(U, Z) {
            return {
                $$typeof: e,
                type: U.type,
                key: Z,
                ref: U.ref,
                props: U.props,
                _owner: U._owner
            };
        }
        function F(U) {
            return typeof U == "object" && U !== null && U.$$typeof === e;
        }
        function j(U) {
            var Z = {
                "=": "=0",
                ":": "=2"
            };
            return "$" + U.replace(/[=:]/g, function(J) {
                return Z[J];
            });
        }
        var M = /\/+/g;
        function L(U, Z) {
            return typeof U == "object" && U !== null && U.key != null ? j("" + U.key) : Z.toString(36);
        }
        function P(U, Z, J, X, te) {
            var ie = typeof U;
            (ie === "undefined" || ie === "boolean") && (U = null);
            var ae = !1;
            if (U === null) ae = !0;
            else switch(ie){
                case "string":
                case "number":
                    ae = !0;
                    break;
                case "object":
                    switch(U.$$typeof){
                        case e:
                        case t:
                            ae = !0;
                    }
            }
            if (ae) return ae = U, te = te(ae), U = X === "" ? "." + L(ae, 0) : X, C(te) ? (J = "", U != null && (J = U.replace(M, "$&/") + "/"), P(te, Z, J, "", function(ve) {
                return ve;
            })) : te != null && (F(te) && (te = E(te, J + (!te.key || ae && ae.key === te.key ? "" : ("" + te.key).replace(M, "$&/") + "/") + U)), Z.push(te)), 1;
            if (ae = 0, X = X === "" ? "." : X + ":", C(U)) for(var ce = 0; ce < U.length; ce++){
                ie = U[ce];
                var de = X + L(ie, ce);
                ae += P(ie, Z, J, de, te);
            }
            else if (de = g(U), typeof de == "function") for(U = de.call(U), ce = 0; !(ie = U.next()).done;)ie = ie.value, de = X + L(ie, ce++), ae += P(ie, Z, J, de, te);
            else if (ie === "object") throw Z = String(U), Error("Objects are not valid as a React child (found: " + (Z === "[object Object]" ? "object with keys {" + Object.keys(U).join(", ") + "}" : Z) + "). If you meant to render a collection of children, use an array instead.");
            return ae;
        }
        function V(U, Z, J) {
            if (U == null) return U;
            var X = [], te = 0;
            return P(U, X, "", "", function(ie) {
                return Z.call(J, ie, te++);
            }), X;
        }
        function z(U) {
            if (U._status === -1) {
                var Z = U._result;
                Z = Z(), Z.then(function(J) {
                    (U._status === 0 || U._status === -1) && (U._status = 1, U._result = J);
                }, function(J) {
                    (U._status === 0 || U._status === -1) && (U._status = 2, U._result = J);
                }), U._status === -1 && (U._status = 0, U._result = Z);
            }
            if (U._status === 1) return U._result.default;
            throw U._result;
        }
        var Q = {
            current: null
        }, K = {
            transition: null
        }, H = {
            ReactCurrentDispatcher: Q,
            ReactCurrentBatchConfig: K,
            ReactCurrentOwner: R
        };
        function G() {
            throw Error("act(...) is not supported in production builds of React.");
        }
        return yt.Children = {
            map: V,
            forEach: function(U, Z, J) {
                V(U, function() {
                    Z.apply(this, arguments);
                }, J);
            },
            count: function(U) {
                var Z = 0;
                return V(U, function() {
                    Z++;
                }), Z;
            },
            toArray: function(U) {
                return V(U, function(Z) {
                    return Z;
                }) || [];
            },
            only: function(U) {
                if (!F(U)) throw Error("React.Children.only expected to receive a single React element child.");
                return U;
            }
        }, yt.Component = S, yt.Fragment = n, yt.Profiler = i, yt.PureComponent = _, yt.StrictMode = r, yt.Suspense = u, yt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = H, yt.act = G, yt.cloneElement = function(U, Z, J) {
            if (U == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + U + ".");
            var X = x({}, U.props), te = U.key, ie = U.ref, ae = U._owner;
            if (Z != null) {
                if (Z.ref !== void 0 && (ie = Z.ref, ae = R.current), Z.key !== void 0 && (te = "" + Z.key), U.type && U.type.defaultProps) var ce = U.type.defaultProps;
                for(de in Z)A.call(Z, de) && !D.hasOwnProperty(de) && (X[de] = Z[de] === void 0 && ce !== void 0 ? ce[de] : Z[de]);
            }
            var de = arguments.length - 2;
            if (de === 1) X.children = J;
            else if (1 < de) {
                ce = Array(de);
                for(var ve = 0; ve < de; ve++)ce[ve] = arguments[ve + 2];
                X.children = ce;
            }
            return {
                $$typeof: e,
                type: U.type,
                key: te,
                ref: ie,
                props: X,
                _owner: ae
            };
        }, yt.createContext = function(U) {
            return U = {
                $$typeof: s,
                _currentValue: U,
                _currentValue2: U,
                _threadCount: 0,
                Provider: null,
                Consumer: null,
                _defaultValue: null,
                _globalName: null
            }, U.Provider = {
                $$typeof: o,
                _context: U
            }, U.Consumer = U;
        }, yt.createElement = O, yt.createFactory = function(U) {
            var Z = O.bind(null, U);
            return Z.type = U, Z;
        }, yt.createRef = function() {
            return {
                current: null
            };
        }, yt.forwardRef = function(U) {
            return {
                $$typeof: l,
                render: U
            };
        }, yt.isValidElement = F, yt.lazy = function(U) {
            return {
                $$typeof: p,
                _payload: {
                    _status: -1,
                    _result: U
                },
                _init: z
            };
        }, yt.memo = function(U, Z) {
            return {
                $$typeof: f,
                type: U,
                compare: Z === void 0 ? null : Z
            };
        }, yt.startTransition = function(U) {
            var Z = K.transition;
            K.transition = {};
            try {
                U();
            } finally{
                K.transition = Z;
            }
        }, yt.unstable_act = G, yt.useCallback = function(U, Z) {
            return Q.current.useCallback(U, Z);
        }, yt.useContext = function(U) {
            return Q.current.useContext(U);
        }, yt.useDebugValue = function() {}, yt.useDeferredValue = function(U) {
            return Q.current.useDeferredValue(U);
        }, yt.useEffect = function(U, Z) {
            return Q.current.useEffect(U, Z);
        }, yt.useId = function() {
            return Q.current.useId();
        }, yt.useImperativeHandle = function(U, Z, J) {
            return Q.current.useImperativeHandle(U, Z, J);
        }, yt.useInsertionEffect = function(U, Z) {
            return Q.current.useInsertionEffect(U, Z);
        }, yt.useLayoutEffect = function(U, Z) {
            return Q.current.useLayoutEffect(U, Z);
        }, yt.useMemo = function(U, Z) {
            return Q.current.useMemo(U, Z);
        }, yt.useReducer = function(U, Z, J) {
            return Q.current.useReducer(U, Z, J);
        }, yt.useRef = function(U) {
            return Q.current.useRef(U);
        }, yt.useState = function(U) {
            return Q.current.useState(U);
        }, yt.useSyncExternalStore = function(U, Z, J) {
            return Q.current.useSyncExternalStore(U, Z, J);
        }, yt.useTransition = function() {
            return Q.current.useTransition();
        }, yt.version = "18.3.1", yt;
    }
    var Q_;
    function If() {
        return Q_ || (Q_ = 1, Fx.exports = s$()), Fx.exports;
    }
    var J_;
    function a$() {
        if (J_) return Zu;
        J_ = 1;
        var e = If(), t = Symbol.for("react.element"), n = Symbol.for("react.fragment"), r = Object.prototype.hasOwnProperty, i = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, o = {
            key: !0,
            ref: !0,
            __self: !0,
            __source: !0
        };
        function s(l, u, f) {
            var p, m = {}, g = null, v = null;
            f !== void 0 && (g = "" + f), u.key !== void 0 && (g = "" + u.key), u.ref !== void 0 && (v = u.ref);
            for(p in u)r.call(u, p) && !o.hasOwnProperty(p) && (m[p] = u[p]);
            if (l && l.defaultProps) for(p in u = l.defaultProps, u)m[p] === void 0 && (m[p] = u[p]);
            return {
                $$typeof: t,
                type: l,
                key: g,
                ref: v,
                props: m,
                _owner: i.current
            };
        }
        return Zu.Fragment = n, Zu.jsx = s, Zu.jsxs = s, Zu;
    }
    var Z_;
    function l$() {
        return Z_ || (Z_ = 1, Ax.exports = a$()), Ax.exports;
    }
    var d = l$(), Xc = class {
        constructor(){
            this.listeners = new Set, this.subscribe = this.subscribe.bind(this);
        }
        subscribe(e) {
            return this.listeners.add(e), this.onSubscribe(), ()=>{
                this.listeners.delete(e), this.onUnsubscribe();
            };
        }
        hasListeners() {
            return this.listeners.size > 0;
        }
        onSubscribe() {}
        onUnsubscribe() {}
    }, il = typeof window > "u" || "Deno" in globalThis;
    function _i() {}
    function c$(e, t) {
        return typeof e == "function" ? e(t) : e;
    }
    function E0(e) {
        return typeof e == "number" && e >= 0 && e !== 1 / 0;
    }
    function WO(e, t) {
        return Math.max(e + (t || 0) - Date.now(), 0);
    }
    function vc(e, t) {
        return typeof e == "function" ? e(t) : e;
    }
    function Wi(e, t) {
        return typeof e == "function" ? e(t) : e;
    }
    function Y_(e, t) {
        const { type: n = "all", exact: r, fetchStatus: i, predicate: o, queryKey: s, stale: l } = e;
        if (s) {
            if (r) {
                if (t.queryHash !== VN(s, t.options)) return !1;
            } else if (!Md(t.queryKey, s)) return !1;
        }
        if (n !== "all") {
            const u = t.isActive();
            if (n === "active" && !u || n === "inactive" && u) return !1;
        }
        return !(typeof l == "boolean" && t.isStale() !== l || i && i !== t.state.fetchStatus || o && !o(t));
    }
    function X_(e, t) {
        const { exact: n, status: r, predicate: i, mutationKey: o } = e;
        if (o) {
            if (!t.options.mutationKey) return !1;
            if (n) {
                if (ol(t.options.mutationKey) !== ol(o)) return !1;
            } else if (!Md(t.options.mutationKey, o)) return !1;
        }
        return !(r && t.state.status !== r || i && !i(t));
    }
    function VN(e, t) {
        return (t?.queryKeyHashFn || ol)(e);
    }
    function ol(e) {
        return JSON.stringify(e, (t, n)=>k0(n) ? Object.keys(n).sort().reduce((r, i)=>(r[i] = n[i], r), {}) : n);
    }
    function Md(e, t) {
        return e === t ? !0 : typeof e != typeof t ? !1 : e && t && typeof e == "object" && typeof t == "object" ? !Object.keys(t).some((n)=>!Md(e[n], t[n])) : !1;
    }
    function UN(e, t) {
        if (e === t) return e;
        const n = eE(e) && eE(t);
        if (n || k0(e) && k0(t)) {
            const r = n ? e : Object.keys(e), i = r.length, o = n ? t : Object.keys(t), s = o.length, l = n ? [] : {};
            let u = 0;
            for(let f = 0; f < s; f++){
                const p = n ? f : o[f];
                (!n && r.includes(p) || n) && e[p] === void 0 && t[p] === void 0 ? (l[p] = void 0, u++) : (l[p] = UN(e[p], t[p]), l[p] === e[p] && e[p] !== void 0 && u++);
            }
            return i === s && u === i ? e : l;
        }
        return t;
    }
    function Am(e, t) {
        if (!t || Object.keys(e).length !== Object.keys(t).length) return !1;
        for(const n in e)if (e[n] !== t[n]) return !1;
        return !0;
    }
    function eE(e) {
        return Array.isArray(e) && e.length === Object.keys(e).length;
    }
    function k0(e) {
        if (!tE(e)) return !1;
        const t = e.constructor;
        if (t === void 0) return !0;
        const n = t.prototype;
        return !(!tE(n) || !n.hasOwnProperty("isPrototypeOf") || Object.getPrototypeOf(e) !== Object.prototype);
    }
    function tE(e) {
        return Object.prototype.toString.call(e) === "[object Object]";
    }
    function u$(e) {
        return new Promise((t)=>{
            setTimeout(t, e);
        });
    }
    function C0(e, t, n) {
        return typeof n.structuralSharing == "function" ? n.structuralSharing(e, t) : n.structuralSharing !== !1 ? UN(e, t) : t;
    }
    function d$(e) {
        return e;
    }
    function f$(e, t, n = 0) {
        const r = [
            ...e,
            t
        ];
        return n && r.length > n ? r.slice(1) : r;
    }
    function p$(e, t, n = 0) {
        const r = [
            t,
            ...e
        ];
        return n && r.length > n ? r.slice(0, -1) : r;
    }
    var HN = Symbol();
    function VO(e, t) {
        return !e.queryFn && t?.initialPromise ? ()=>t.initialPromise : !e.queryFn || e.queryFn === HN ? ()=>Promise.reject(new Error(`Missing queryFn: '${e.queryHash}'`)) : e.queryFn;
    }
    var h$ = class extends Xc {
        #e;
        #t;
        #n;
        constructor(){
            super(), this.#n = (e)=>{
                if (!il && window.addEventListener) {
                    const t = ()=>e();
                    return window.addEventListener("visibilitychange", t, !1), ()=>{
                        window.removeEventListener("visibilitychange", t);
                    };
                }
            };
        }
        onSubscribe() {
            this.#t || this.setEventListener(this.#n);
        }
        onUnsubscribe() {
            this.hasListeners() || (this.#t?.(), this.#t = void 0);
        }
        setEventListener(e) {
            this.#n = e, this.#t?.(), this.#t = e((t)=>{
                typeof t == "boolean" ? this.setFocused(t) : this.onFocus();
            });
        }
        setFocused(e) {
            this.#e !== e && (this.#e = e, this.onFocus());
        }
        onFocus() {
            const e = this.isFocused();
            this.listeners.forEach((t)=>{
                t(e);
            });
        }
        isFocused() {
            return typeof this.#e == "boolean" ? this.#e : globalThis.document?.visibilityState !== "hidden";
        }
    }, KN = new h$, m$ = class extends Xc {
        #e = !0;
        #t;
        #n;
        constructor(){
            super(), this.#n = (e)=>{
                if (!il && window.addEventListener) {
                    const t = ()=>e(!0), n = ()=>e(!1);
                    return window.addEventListener("online", t, !1), window.addEventListener("offline", n, !1), ()=>{
                        window.removeEventListener("online", t), window.removeEventListener("offline", n);
                    };
                }
            };
        }
        onSubscribe() {
            this.#t || this.setEventListener(this.#n);
        }
        onUnsubscribe() {
            this.hasListeners() || (this.#t?.(), this.#t = void 0);
        }
        setEventListener(e) {
            this.#n = e, this.#t?.(), this.#t = e(this.setOnline.bind(this));
        }
        setOnline(e) {
            this.#e !== e && (this.#e = e, this.listeners.forEach((n)=>{
                n(e);
            }));
        }
        isOnline() {
            return this.#e;
        }
    }, Fm = new m$;
    function j0() {
        let e, t;
        const n = new Promise((i, o)=>{
            e = i, t = o;
        });
        n.status = "pending", n.catch(()=>{});
        function r(i) {
            Object.assign(n, i), delete n.resolve, delete n.reject;
        }
        return n.resolve = (i)=>{
            r({
                status: "fulfilled",
                value: i
            }), e(i);
        }, n.reject = (i)=>{
            r({
                status: "rejected",
                reason: i
            }), t(i);
        }, n;
    }
    function g$(e) {
        return Math.min(1e3 * 2 ** e, 3e4);
    }
    function UO(e) {
        return (e ?? "online") === "online" ? Fm.isOnline() : !0;
    }
    var HO = class extends Error {
        constructor(e){
            super("CancelledError"), this.revert = e?.revert, this.silent = e?.silent;
        }
    };
    function Dx(e) {
        return e instanceof HO;
    }
    function KO(e) {
        let t = !1, n = 0, r = !1, i;
        const o = j0(), s = (b)=>{
            r || (g(new HO(b)), e.abort?.());
        }, l = ()=>{
            t = !0;
        }, u = ()=>{
            t = !1;
        }, f = ()=>KN.isFocused() && (e.networkMode === "always" || Fm.isOnline()) && e.canRun(), p = ()=>UO(e.networkMode) && e.canRun(), m = (b)=>{
            r || (r = !0, e.onSuccess?.(b), i?.(), o.resolve(b));
        }, g = (b)=>{
            r || (r = !0, e.onError?.(b), i?.(), o.reject(b));
        }, v = ()=>new Promise((b)=>{
                i = (S)=>{
                    (r || f()) && b(S);
                }, e.onPause?.();
            }).then(()=>{
                i = void 0, r || e.onContinue?.();
            }), x = ()=>{
            if (r) return;
            let b;
            const S = n === 0 ? e.initialPromise : void 0;
            try {
                b = S ?? e.fn();
            } catch (N) {
                b = Promise.reject(N);
            }
            Promise.resolve(b).then(m).catch((N)=>{
                if (r) return;
                const _ = e.retry ?? (il ? 0 : 3), I = e.retryDelay ?? g$, C = typeof I == "function" ? I(n, N) : I, A = _ === !0 || typeof _ == "number" && n < _ || typeof _ == "function" && _(n, N);
                if (t || !A) {
                    g(N);
                    return;
                }
                n++, e.onFail?.(n, N), u$(C).then(()=>f() ? void 0 : v()).then(()=>{
                    t ? g(N) : x();
                });
            });
        };
        return {
            promise: o,
            cancel: s,
            continue: ()=>(i?.(), o),
            cancelRetry: l,
            continueRetry: u,
            canStart: p,
            start: ()=>(p() ? x() : v().then(x), o)
        };
    }
    function y$() {
        let e = [], t = 0, n = (l)=>{
            l();
        }, r = (l)=>{
            l();
        }, i = (l)=>setTimeout(l, 0);
        const o = (l)=>{
            t ? e.push(l) : i(()=>{
                n(l);
            });
        }, s = ()=>{
            const l = e;
            e = [], l.length && i(()=>{
                r(()=>{
                    l.forEach((u)=>{
                        n(u);
                    });
                });
            });
        };
        return {
            batch: (l)=>{
                let u;
                t++;
                try {
                    u = l();
                } finally{
                    t--, t || s();
                }
                return u;
            },
            batchCalls: (l)=>(...u)=>{
                    o(()=>{
                        l(...u);
                    });
                },
            schedule: o,
            setNotifyFunction: (l)=>{
                n = l;
            },
            setBatchNotifyFunction: (l)=>{
                r = l;
            },
            setScheduler: (l)=>{
                i = l;
            }
        };
    }
    var kn = y$(), GO = class {
        #e;
        destroy() {
            this.clearGcTimeout();
        }
        scheduleGc() {
            this.clearGcTimeout(), E0(this.gcTime) && (this.#e = setTimeout(()=>{
                this.optionalRemove();
            }, this.gcTime));
        }
        updateGcTime(e) {
            this.gcTime = Math.max(this.gcTime || 0, e ?? (il ? 1 / 0 : 5 * 60 * 1e3));
        }
        clearGcTimeout() {
            this.#e && (clearTimeout(this.#e), this.#e = void 0);
        }
    }, v$ = class extends GO {
        #e;
        #t;
        #n;
        #r;
        #i;
        #a;
        #s;
        constructor(e){
            super(), this.#s = !1, this.#a = e.defaultOptions, this.setOptions(e.options), this.observers = [], this.#r = e.client, this.#n = this.#r.getQueryCache(), this.queryKey = e.queryKey, this.queryHash = e.queryHash, this.#e = x$(this.options), this.state = e.state ?? this.#e, this.scheduleGc();
        }
        get meta() {
            return this.options.meta;
        }
        get promise() {
            return this.#i?.promise;
        }
        setOptions(e) {
            this.options = {
                ...this.#a,
                ...e
            }, this.updateGcTime(this.options.gcTime);
        }
        optionalRemove() {
            !this.observers.length && this.state.fetchStatus === "idle" && this.#n.remove(this);
        }
        setData(e, t) {
            const n = C0(this.state.data, e, this.options);
            return this.#o({
                data: n,
                type: "success",
                dataUpdatedAt: t?.updatedAt,
                manual: t?.manual
            }), n;
        }
        setState(e, t) {
            this.#o({
                type: "setState",
                state: e,
                setStateOptions: t
            });
        }
        cancel(e) {
            const t = this.#i?.promise;
            return this.#i?.cancel(e), t ? t.then(_i).catch(_i) : Promise.resolve();
        }
        destroy() {
            super.destroy(), this.cancel({
                silent: !0
            });
        }
        reset() {
            this.destroy(), this.setState(this.#e);
        }
        isActive() {
            return this.observers.some((e)=>Wi(e.options.enabled, this) !== !1);
        }
        isDisabled() {
            return this.getObserversCount() > 0 ? !this.isActive() : this.options.queryFn === HN || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;
        }
        isStale() {
            return this.state.isInvalidated ? !0 : this.getObserversCount() > 0 ? this.observers.some((e)=>e.getCurrentResult().isStale) : this.state.data === void 0;
        }
        isStaleByTime(e = 0) {
            return this.state.isInvalidated || this.state.data === void 0 || !WO(this.state.dataUpdatedAt, e);
        }
        onFocus() {
            this.observers.find((t)=>t.shouldFetchOnWindowFocus())?.refetch({
                cancelRefetch: !1
            }), this.#i?.continue();
        }
        onOnline() {
            this.observers.find((t)=>t.shouldFetchOnReconnect())?.refetch({
                cancelRefetch: !1
            }), this.#i?.continue();
        }
        addObserver(e) {
            this.observers.includes(e) || (this.observers.push(e), this.clearGcTimeout(), this.#n.notify({
                type: "observerAdded",
                query: this,
                observer: e
            }));
        }
        removeObserver(e) {
            this.observers.includes(e) && (this.observers = this.observers.filter((t)=>t !== e), this.observers.length || (this.#i && (this.#s ? this.#i.cancel({
                revert: !0
            }) : this.#i.cancelRetry()), this.scheduleGc()), this.#n.notify({
                type: "observerRemoved",
                query: this,
                observer: e
            }));
        }
        getObserversCount() {
            return this.observers.length;
        }
        invalidate() {
            this.state.isInvalidated || this.#o({
                type: "invalidate"
            });
        }
        fetch(e, t) {
            if (this.state.fetchStatus !== "idle") {
                if (this.state.data !== void 0 && t?.cancelRefetch) this.cancel({
                    silent: !0
                });
                else if (this.#i) return this.#i.continueRetry(), this.#i.promise;
            }
            if (e && this.setOptions(e), !this.options.queryFn) {
                const l = this.observers.find((u)=>u.options.queryFn);
                l && this.setOptions(l.options);
            }
            const n = new AbortController, r = (l)=>{
                Object.defineProperty(l, "signal", {
                    enumerable: !0,
                    get: ()=>(this.#s = !0, n.signal)
                });
            }, i = ()=>{
                const l = VO(this.options, t), u = {
                    client: this.#r,
                    queryKey: this.queryKey,
                    meta: this.meta
                };
                return r(u), this.#s = !1, this.options.persister ? this.options.persister(l, u, this) : l(u);
            }, o = {
                fetchOptions: t,
                options: this.options,
                queryKey: this.queryKey,
                client: this.#r,
                state: this.state,
                fetchFn: i
            };
            r(o), this.options.behavior?.onFetch(o, this), this.#t = this.state, (this.state.fetchStatus === "idle" || this.state.fetchMeta !== o.fetchOptions?.meta) && this.#o({
                type: "fetch",
                meta: o.fetchOptions?.meta
            });
            const s = (l)=>{
                Dx(l) && l.silent || this.#o({
                    type: "error",
                    error: l
                }), Dx(l) || (this.#n.config.onError?.(l, this), this.#n.config.onSettled?.(this.state.data, l, this)), this.scheduleGc();
            };
            return this.#i = KO({
                initialPromise: t?.initialPromise,
                fn: o.fetchFn,
                abort: n.abort.bind(n),
                onSuccess: (l)=>{
                    if (l === void 0) {
                        s(new Error(`${this.queryHash} data is undefined`));
                        return;
                    }
                    try {
                        this.setData(l);
                    } catch (u) {
                        s(u);
                        return;
                    }
                    this.#n.config.onSuccess?.(l, this), this.#n.config.onSettled?.(l, this.state.error, this), this.scheduleGc();
                },
                onError: s,
                onFail: (l, u)=>{
                    this.#o({
                        type: "failed",
                        failureCount: l,
                        error: u
                    });
                },
                onPause: ()=>{
                    this.#o({
                        type: "pause"
                    });
                },
                onContinue: ()=>{
                    this.#o({
                        type: "continue"
                    });
                },
                retry: o.options.retry,
                retryDelay: o.options.retryDelay,
                networkMode: o.options.networkMode,
                canRun: ()=>!0
            }), this.#i.start();
        }
        #o(e) {
            const t = (n)=>{
                switch(e.type){
                    case "failed":
                        return {
                            ...n,
                            fetchFailureCount: e.failureCount,
                            fetchFailureReason: e.error
                        };
                    case "pause":
                        return {
                            ...n,
                            fetchStatus: "paused"
                        };
                    case "continue":
                        return {
                            ...n,
                            fetchStatus: "fetching"
                        };
                    case "fetch":
                        return {
                            ...n,
                            ...QO(n.data, this.options),
                            fetchMeta: e.meta ?? null
                        };
                    case "success":
                        return {
                            ...n,
                            data: e.data,
                            dataUpdateCount: n.dataUpdateCount + 1,
                            dataUpdatedAt: e.dataUpdatedAt ?? Date.now(),
                            error: null,
                            isInvalidated: !1,
                            status: "success",
                            ...!e.manual && {
                                fetchStatus: "idle",
                                fetchFailureCount: 0,
                                fetchFailureReason: null
                            }
                        };
                    case "error":
                        const r = e.error;
                        return Dx(r) && r.revert && this.#t ? {
                            ...this.#t,
                            fetchStatus: "idle"
                        } : {
                            ...n,
                            error: r,
                            errorUpdateCount: n.errorUpdateCount + 1,
                            errorUpdatedAt: Date.now(),
                            fetchFailureCount: n.fetchFailureCount + 1,
                            fetchFailureReason: r,
                            fetchStatus: "idle",
                            status: "error"
                        };
                    case "invalidate":
                        return {
                            ...n,
                            isInvalidated: !0
                        };
                    case "setState":
                        return {
                            ...n,
                            ...e.state
                        };
                }
            };
            this.state = t(this.state), kn.batch(()=>{
                this.observers.forEach((n)=>{
                    n.onQueryUpdate();
                }), this.#n.notify({
                    query: this,
                    type: "updated",
                    action: e
                });
            });
        }
    };
    function QO(e, t) {
        return {
            fetchFailureCount: 0,
            fetchFailureReason: null,
            fetchStatus: UO(t.networkMode) ? "fetching" : "paused",
            ...e === void 0 && {
                error: null,
                status: "pending"
            }
        };
    }
    function x$(e) {
        const t = typeof e.initialData == "function" ? e.initialData() : e.initialData, n = t !== void 0, r = n ? typeof e.initialDataUpdatedAt == "function" ? e.initialDataUpdatedAt() : e.initialDataUpdatedAt : 0;
        return {
            data: t,
            dataUpdateCount: 0,
            dataUpdatedAt: n ? r ?? Date.now() : 0,
            error: null,
            errorUpdateCount: 0,
            errorUpdatedAt: 0,
            fetchFailureCount: 0,
            fetchFailureReason: null,
            fetchMeta: null,
            isInvalidated: !1,
            status: n ? "success" : "pending",
            fetchStatus: "idle"
        };
    }
    var b$ = class extends Xc {
        constructor(e = {}){
            super(), this.config = e, this.#e = new Map;
        }
        #e;
        build(e, t, n) {
            const r = t.queryKey, i = t.queryHash ?? VN(r, t);
            let o = this.get(i);
            return o || (o = new v$({
                client: e,
                queryKey: r,
                queryHash: i,
                options: e.defaultQueryOptions(t),
                state: n,
                defaultOptions: e.getQueryDefaults(r)
            }), this.add(o)), o;
        }
        add(e) {
            this.#e.has(e.queryHash) || (this.#e.set(e.queryHash, e), this.notify({
                type: "added",
                query: e
            }));
        }
        remove(e) {
            const t = this.#e.get(e.queryHash);
            t && (e.destroy(), t === e && this.#e.delete(e.queryHash), this.notify({
                type: "removed",
                query: e
            }));
        }
        clear() {
            kn.batch(()=>{
                this.getAll().forEach((e)=>{
                    this.remove(e);
                });
            });
        }
        get(e) {
            return this.#e.get(e);
        }
        getAll() {
            return [
                ...this.#e.values()
            ];
        }
        find(e) {
            const t = {
                exact: !0,
                ...e
            };
            return this.getAll().find((n)=>Y_(t, n));
        }
        findAll(e = {}) {
            const t = this.getAll();
            return Object.keys(e).length > 0 ? t.filter((n)=>Y_(e, n)) : t;
        }
        notify(e) {
            kn.batch(()=>{
                this.listeners.forEach((t)=>{
                    t(e);
                });
            });
        }
        onFocus() {
            kn.batch(()=>{
                this.getAll().forEach((e)=>{
                    e.onFocus();
                });
            });
        }
        onOnline() {
            kn.batch(()=>{
                this.getAll().forEach((e)=>{
                    e.onOnline();
                });
            });
        }
    }, w$ = class extends GO {
        #e;
        #t;
        #n;
        constructor(e){
            super(), this.mutationId = e.mutationId, this.#t = e.mutationCache, this.#e = [], this.state = e.state || JO(), this.setOptions(e.options), this.scheduleGc();
        }
        setOptions(e) {
            this.options = e, this.updateGcTime(this.options.gcTime);
        }
        get meta() {
            return this.options.meta;
        }
        addObserver(e) {
            this.#e.includes(e) || (this.#e.push(e), this.clearGcTimeout(), this.#t.notify({
                type: "observerAdded",
                mutation: this,
                observer: e
            }));
        }
        removeObserver(e) {
            this.#e = this.#e.filter((t)=>t !== e), this.scheduleGc(), this.#t.notify({
                type: "observerRemoved",
                mutation: this,
                observer: e
            });
        }
        optionalRemove() {
            this.#e.length || (this.state.status === "pending" ? this.scheduleGc() : this.#t.remove(this));
        }
        continue() {
            return this.#n?.continue() ?? this.execute(this.state.variables);
        }
        async execute(e) {
            this.#n = KO({
                fn: ()=>this.options.mutationFn ? this.options.mutationFn(e) : Promise.reject(new Error("No mutationFn found")),
                onFail: (r, i)=>{
                    this.#r({
                        type: "failed",
                        failureCount: r,
                        error: i
                    });
                },
                onPause: ()=>{
                    this.#r({
                        type: "pause"
                    });
                },
                onContinue: ()=>{
                    this.#r({
                        type: "continue"
                    });
                },
                retry: this.options.retry ?? 0,
                retryDelay: this.options.retryDelay,
                networkMode: this.options.networkMode,
                canRun: ()=>this.#t.canRun(this)
            });
            const t = this.state.status === "pending", n = !this.#n.canStart();
            try {
                if (!t) {
                    this.#r({
                        type: "pending",
                        variables: e,
                        isPaused: n
                    }), await this.#t.config.onMutate?.(e, this);
                    const i = await this.options.onMutate?.(e);
                    i !== this.state.context && this.#r({
                        type: "pending",
                        context: i,
                        variables: e,
                        isPaused: n
                    });
                }
                const r = await this.#n.start();
                return await this.#t.config.onSuccess?.(r, e, this.state.context, this), await this.options.onSuccess?.(r, e, this.state.context), await this.#t.config.onSettled?.(r, null, this.state.variables, this.state.context, this), await this.options.onSettled?.(r, null, e, this.state.context), this.#r({
                    type: "success",
                    data: r
                }), r;
            } catch (r) {
                try {
                    throw await this.#t.config.onError?.(r, e, this.state.context, this), await this.options.onError?.(r, e, this.state.context), await this.#t.config.onSettled?.(void 0, r, this.state.variables, this.state.context, this), await this.options.onSettled?.(void 0, r, e, this.state.context), r;
                } finally{
                    this.#r({
                        type: "error",
                        error: r
                    });
                }
            } finally{
                this.#t.runNext(this);
            }
        }
        #r(e) {
            const t = (n)=>{
                switch(e.type){
                    case "failed":
                        return {
                            ...n,
                            failureCount: e.failureCount,
                            failureReason: e.error
                        };
                    case "pause":
                        return {
                            ...n,
                            isPaused: !0
                        };
                    case "continue":
                        return {
                            ...n,
                            isPaused: !1
                        };
                    case "pending":
                        return {
                            ...n,
                            context: e.context,
                            data: void 0,
                            failureCount: 0,
                            failureReason: null,
                            error: null,
                            isPaused: e.isPaused,
                            status: "pending",
                            variables: e.variables,
                            submittedAt: Date.now()
                        };
                    case "success":
                        return {
                            ...n,
                            data: e.data,
                            failureCount: 0,
                            failureReason: null,
                            error: null,
                            status: "success",
                            isPaused: !1
                        };
                    case "error":
                        return {
                            ...n,
                            data: void 0,
                            error: e.error,
                            failureCount: n.failureCount + 1,
                            failureReason: e.error,
                            isPaused: !1,
                            status: "error"
                        };
                }
            };
            this.state = t(this.state), kn.batch(()=>{
                this.#e.forEach((n)=>{
                    n.onMutationUpdate(e);
                }), this.#t.notify({
                    mutation: this,
                    type: "updated",
                    action: e
                });
            });
        }
    };
    function JO() {
        return {
            context: void 0,
            data: void 0,
            error: null,
            failureCount: 0,
            failureReason: null,
            isPaused: !1,
            status: "idle",
            variables: void 0,
            submittedAt: 0
        };
    }
    var N$ = class extends Xc {
        constructor(e = {}){
            super(), this.config = e, this.#e = new Set, this.#t = new Map, this.#n = 0;
        }
        #e;
        #t;
        #n;
        build(e, t, n) {
            const r = new w$({
                mutationCache: this,
                mutationId: ++this.#n,
                options: e.defaultMutationOptions(t),
                state: n
            });
            return this.add(r), r;
        }
        add(e) {
            this.#e.add(e);
            const t = wh(e);
            if (typeof t == "string") {
                const n = this.#t.get(t);
                n ? n.push(e) : this.#t.set(t, [
                    e
                ]);
            }
            this.notify({
                type: "added",
                mutation: e
            });
        }
        remove(e) {
            if (this.#e.delete(e)) {
                const t = wh(e);
                if (typeof t == "string") {
                    const n = this.#t.get(t);
                    if (n) if (n.length > 1) {
                        const r = n.indexOf(e);
                        r !== -1 && n.splice(r, 1);
                    } else n[0] === e && this.#t.delete(t);
                }
            }
            this.notify({
                type: "removed",
                mutation: e
            });
        }
        canRun(e) {
            const t = wh(e);
            if (typeof t == "string") {
                const r = this.#t.get(t)?.find((i)=>i.state.status === "pending");
                return !r || r === e;
            } else return !0;
        }
        runNext(e) {
            const t = wh(e);
            return typeof t == "string" ? this.#t.get(t)?.find((r)=>r !== e && r.state.isPaused)?.continue() ?? Promise.resolve() : Promise.resolve();
        }
        clear() {
            kn.batch(()=>{
                this.#e.forEach((e)=>{
                    this.notify({
                        type: "removed",
                        mutation: e
                    });
                }), this.#e.clear(), this.#t.clear();
            });
        }
        getAll() {
            return Array.from(this.#e);
        }
        find(e) {
            const t = {
                exact: !0,
                ...e
            };
            return this.getAll().find((n)=>X_(t, n));
        }
        findAll(e = {}) {
            return this.getAll().filter((t)=>X_(e, t));
        }
        notify(e) {
            kn.batch(()=>{
                this.listeners.forEach((t)=>{
                    t(e);
                });
            });
        }
        resumePausedMutations() {
            const e = this.getAll().filter((t)=>t.state.isPaused);
            return kn.batch(()=>Promise.all(e.map((t)=>t.continue().catch(_i))));
        }
    };
    function wh(e) {
        return e.options.scope?.id;
    }
    function nE(e) {
        return {
            onFetch: (t, n)=>{
                const r = t.options, i = t.fetchOptions?.meta?.fetchMore?.direction, o = t.state.data?.pages || [], s = t.state.data?.pageParams || [];
                let l = {
                    pages: [],
                    pageParams: []
                }, u = 0;
                const f = async ()=>{
                    let p = !1;
                    const m = (x)=>{
                        Object.defineProperty(x, "signal", {
                            enumerable: !0,
                            get: ()=>(t.signal.aborted ? p = !0 : t.signal.addEventListener("abort", ()=>{
                                    p = !0;
                                }), t.signal)
                        });
                    }, g = VO(t.options, t.fetchOptions), v = async (x, b, S)=>{
                        if (p) return Promise.reject();
                        if (b == null && x.pages.length) return Promise.resolve(x);
                        const N = {
                            client: t.client,
                            queryKey: t.queryKey,
                            pageParam: b,
                            direction: S ? "backward" : "forward",
                            meta: t.options.meta
                        };
                        m(N);
                        const _ = await g(N), { maxPages: I } = t.options, C = S ? p$ : f$;
                        return {
                            pages: C(x.pages, _, I),
                            pageParams: C(x.pageParams, b, I)
                        };
                    };
                    if (i && o.length) {
                        const x = i === "backward", b = x ? S$ : rE, S = {
                            pages: o,
                            pageParams: s
                        }, N = b(r, S);
                        l = await v(S, N, x);
                    } else {
                        const x = e ?? o.length;
                        do {
                            const b = u === 0 ? s[0] ?? r.initialPageParam : rE(r, l);
                            if (u > 0 && b == null) break;
                            l = await v(l, b), u++;
                        }while (u < x);
                    }
                    return l;
                };
                t.options.persister ? t.fetchFn = ()=>t.options.persister?.(f, {
                        client: t.client,
                        queryKey: t.queryKey,
                        meta: t.options.meta,
                        signal: t.signal
                    }, n) : t.fetchFn = f;
            }
        };
    }
    function rE(e, { pages: t, pageParams: n }) {
        const r = t.length - 1;
        return t.length > 0 ? e.getNextPageParam(t[r], t, n[r], n) : void 0;
    }
    function S$(e, { pages: t, pageParams: n }) {
        return t.length > 0 ? e.getPreviousPageParam?.(t[0], t, n[0], n) : void 0;
    }
    var I$ = class {
        #e;
        #t;
        #n;
        #r;
        #i;
        #a;
        #s;
        #o;
        constructor(e = {}){
            this.#e = e.queryCache || new b$, this.#t = e.mutationCache || new N$, this.#n = e.defaultOptions || {}, this.#r = new Map, this.#i = new Map, this.#a = 0;
        }
        mount() {
            this.#a++, this.#a === 1 && (this.#s = KN.subscribe(async (e)=>{
                e && (await this.resumePausedMutations(), this.#e.onFocus());
            }), this.#o = Fm.subscribe(async (e)=>{
                e && (await this.resumePausedMutations(), this.#e.onOnline());
            }));
        }
        unmount() {
            this.#a--, this.#a === 0 && (this.#s?.(), this.#s = void 0, this.#o?.(), this.#o = void 0);
        }
        isFetching(e) {
            return this.#e.findAll({
                ...e,
                fetchStatus: "fetching"
            }).length;
        }
        isMutating(e) {
            return this.#t.findAll({
                ...e,
                status: "pending"
            }).length;
        }
        getQueryData(e) {
            const t = this.defaultQueryOptions({
                queryKey: e
            });
            return this.#e.get(t.queryHash)?.state.data;
        }
        ensureQueryData(e) {
            const t = this.defaultQueryOptions(e), n = this.#e.build(this, t), r = n.state.data;
            return r === void 0 ? this.fetchQuery(e) : (e.revalidateIfStale && n.isStaleByTime(vc(t.staleTime, n)) && this.prefetchQuery(t), Promise.resolve(r));
        }
        getQueriesData(e) {
            return this.#e.findAll(e).map(({ queryKey: t, state: n })=>{
                const r = n.data;
                return [
                    t,
                    r
                ];
            });
        }
        setQueryData(e, t, n) {
            const r = this.defaultQueryOptions({
                queryKey: e
            }), o = this.#e.get(r.queryHash)?.state.data, s = c$(t, o);
            if (s !== void 0) return this.#e.build(this, r).setData(s, {
                ...n,
                manual: !0
            });
        }
        setQueriesData(e, t, n) {
            return kn.batch(()=>this.#e.findAll(e).map(({ queryKey: r })=>[
                        r,
                        this.setQueryData(r, t, n)
                    ]));
        }
        getQueryState(e) {
            const t = this.defaultQueryOptions({
                queryKey: e
            });
            return this.#e.get(t.queryHash)?.state;
        }
        removeQueries(e) {
            const t = this.#e;
            kn.batch(()=>{
                t.findAll(e).forEach((n)=>{
                    t.remove(n);
                });
            });
        }
        resetQueries(e, t) {
            const n = this.#e, r = {
                type: "active",
                ...e
            };
            return kn.batch(()=>(n.findAll(e).forEach((i)=>{
                    i.reset();
                }), this.refetchQueries(r, t)));
        }
        cancelQueries(e, t = {}) {
            const n = {
                revert: !0,
                ...t
            }, r = kn.batch(()=>this.#e.findAll(e).map((i)=>i.cancel(n)));
            return Promise.all(r).then(_i).catch(_i);
        }
        invalidateQueries(e, t = {}) {
            return kn.batch(()=>{
                if (this.#e.findAll(e).forEach((r)=>{
                    r.invalidate();
                }), e?.refetchType === "none") return Promise.resolve();
                const n = {
                    ...e,
                    type: e?.refetchType ?? e?.type ?? "active"
                };
                return this.refetchQueries(n, t);
            });
        }
        refetchQueries(e, t = {}) {
            const n = {
                ...t,
                cancelRefetch: t.cancelRefetch ?? !0
            }, r = kn.batch(()=>this.#e.findAll(e).filter((i)=>!i.isDisabled()).map((i)=>{
                    let o = i.fetch(void 0, n);
                    return n.throwOnError || (o = o.catch(_i)), i.state.fetchStatus === "paused" ? Promise.resolve() : o;
                }));
            return Promise.all(r).then(_i);
        }
        fetchQuery(e) {
            const t = this.defaultQueryOptions(e);
            t.retry === void 0 && (t.retry = !1);
            const n = this.#e.build(this, t);
            return n.isStaleByTime(vc(t.staleTime, n)) ? n.fetch(t) : Promise.resolve(n.state.data);
        }
        prefetchQuery(e) {
            return this.fetchQuery(e).then(_i).catch(_i);
        }
        fetchInfiniteQuery(e) {
            return e.behavior = nE(e.pages), this.fetchQuery(e);
        }
        prefetchInfiniteQuery(e) {
            return this.fetchInfiniteQuery(e).then(_i).catch(_i);
        }
        ensureInfiniteQueryData(e) {
            return e.behavior = nE(e.pages), this.ensureQueryData(e);
        }
        resumePausedMutations() {
            return Fm.isOnline() ? this.#t.resumePausedMutations() : Promise.resolve();
        }
        getQueryCache() {
            return this.#e;
        }
        getMutationCache() {
            return this.#t;
        }
        getDefaultOptions() {
            return this.#n;
        }
        setDefaultOptions(e) {
            this.#n = e;
        }
        setQueryDefaults(e, t) {
            this.#r.set(ol(e), {
                queryKey: e,
                defaultOptions: t
            });
        }
        getQueryDefaults(e) {
            const t = [
                ...this.#r.values()
            ], n = {};
            return t.forEach((r)=>{
                Md(e, r.queryKey) && Object.assign(n, r.defaultOptions);
            }), n;
        }
        setMutationDefaults(e, t) {
            this.#i.set(ol(e), {
                mutationKey: e,
                defaultOptions: t
            });
        }
        getMutationDefaults(e) {
            const t = [
                ...this.#i.values()
            ];
            let n = {};
            return t.forEach((r)=>{
                Md(e, r.mutationKey) && (n = {
                    ...n,
                    ...r.defaultOptions
                });
            }), n;
        }
        defaultQueryOptions(e) {
            if (e._defaulted) return e;
            const t = {
                ...this.#n.queries,
                ...this.getQueryDefaults(e.queryKey),
                ...e,
                _defaulted: !0
            };
            return t.queryHash || (t.queryHash = VN(t.queryKey, t)), t.refetchOnReconnect === void 0 && (t.refetchOnReconnect = t.networkMode !== "always"), t.throwOnError === void 0 && (t.throwOnError = !!t.suspense), !t.networkMode && t.persister && (t.networkMode = "offlineFirst"), t.queryFn === HN && (t.enabled = !1), t;
        }
        defaultMutationOptions(e) {
            return e?._defaulted ? e : {
                ...this.#n.mutations,
                ...e?.mutationKey && this.getMutationDefaults(e.mutationKey),
                ...e,
                _defaulted: !0
            };
        }
        clear() {
            this.#e.clear(), this.#t.clear();
        }
    }, _$ = class extends Xc {
        constructor(e, t){
            super(), this.options = t, this.#e = e, this.#o = null, this.#s = j0(), this.options.experimental_prefetchInRender || this.#s.reject(new Error("experimental_prefetchInRender feature flag is not enabled")), this.bindMethods(), this.setOptions(t);
        }
        #e;
        #t = void 0;
        #n = void 0;
        #r = void 0;
        #i;
        #a;
        #s;
        #o;
        #l;
        #u;
        #c;
        #f;
        #p;
        #d;
        #m = new Set;
        bindMethods() {
            this.refetch = this.refetch.bind(this);
        }
        onSubscribe() {
            this.listeners.size === 1 && (this.#t.addObserver(this), iE(this.#t, this.options) ? this.#h() : this.updateResult(), this.#x());
        }
        onUnsubscribe() {
            this.hasListeners() || this.destroy();
        }
        shouldFetchOnReconnect() {
            return R0(this.#t, this.options, this.options.refetchOnReconnect);
        }
        shouldFetchOnWindowFocus() {
            return R0(this.#t, this.options, this.options.refetchOnWindowFocus);
        }
        destroy() {
            this.listeners = new Set, this.#b(), this.#w(), this.#t.removeObserver(this);
        }
        setOptions(e, t) {
            const n = this.options, r = this.#t;
            if (this.options = this.#e.defaultQueryOptions(e), this.options.enabled !== void 0 && typeof this.options.enabled != "boolean" && typeof this.options.enabled != "function" && typeof Wi(this.options.enabled, this.#t) != "boolean") throw new Error("Expected enabled to be a boolean or a callback that returns a boolean");
            this.#N(), this.#t.setOptions(this.options), n._defaulted && !Am(this.options, n) && this.#e.getQueryCache().notify({
                type: "observerOptionsUpdated",
                query: this.#t,
                observer: this
            });
            const i = this.hasListeners();
            i && oE(this.#t, r, this.options, n) && this.#h(), this.updateResult(t), i && (this.#t !== r || Wi(this.options.enabled, this.#t) !== Wi(n.enabled, this.#t) || vc(this.options.staleTime, this.#t) !== vc(n.staleTime, this.#t)) && this.#g();
            const o = this.#y();
            i && (this.#t !== r || Wi(this.options.enabled, this.#t) !== Wi(n.enabled, this.#t) || o !== this.#d) && this.#v(o);
        }
        getOptimisticResult(e) {
            const t = this.#e.getQueryCache().build(this.#e, e), n = this.createResult(t, e);
            return k$(this, n) && (this.#r = n, this.#a = this.options, this.#i = this.#t.state), n;
        }
        getCurrentResult() {
            return this.#r;
        }
        trackResult(e, t) {
            const n = {};
            return Object.keys(e).forEach((r)=>{
                Object.defineProperty(n, r, {
                    configurable: !1,
                    enumerable: !0,
                    get: ()=>(this.trackProp(r), t?.(r), e[r])
                });
            }), n;
        }
        trackProp(e) {
            this.#m.add(e);
        }
        getCurrentQuery() {
            return this.#t;
        }
        refetch({ ...e } = {}) {
            return this.fetch({
                ...e
            });
        }
        fetchOptimistic(e) {
            const t = this.#e.defaultQueryOptions(e), n = this.#e.getQueryCache().build(this.#e, t);
            return n.fetch().then(()=>this.createResult(n, t));
        }
        fetch(e) {
            return this.#h({
                ...e,
                cancelRefetch: e.cancelRefetch ?? !0
            }).then(()=>(this.updateResult(), this.#r));
        }
        #h(e) {
            this.#N();
            let t = this.#t.fetch(this.options, e);
            return e?.throwOnError || (t = t.catch(_i)), t;
        }
        #g() {
            this.#b();
            const e = vc(this.options.staleTime, this.#t);
            if (il || this.#r.isStale || !E0(e)) return;
            const n = WO(this.#r.dataUpdatedAt, e) + 1;
            this.#f = setTimeout(()=>{
                this.#r.isStale || this.updateResult();
            }, n);
        }
        #y() {
            return (typeof this.options.refetchInterval == "function" ? this.options.refetchInterval(this.#t) : this.options.refetchInterval) ?? !1;
        }
        #v(e) {
            this.#w(), this.#d = e, !(il || Wi(this.options.enabled, this.#t) === !1 || !E0(this.#d) || this.#d === 0) && (this.#p = setInterval(()=>{
                (this.options.refetchIntervalInBackground || KN.isFocused()) && this.#h();
            }, this.#d));
        }
        #x() {
            this.#g(), this.#v(this.#y());
        }
        #b() {
            this.#f && (clearTimeout(this.#f), this.#f = void 0);
        }
        #w() {
            this.#p && (clearInterval(this.#p), this.#p = void 0);
        }
        createResult(e, t) {
            const n = this.#t, r = this.options, i = this.#r, o = this.#i, s = this.#a, u = e !== n ? e.state : this.#n, { state: f } = e;
            let p = {
                ...f
            }, m = !1, g;
            if (t._optimisticResults) {
                const D = this.hasListeners(), O = !D && iE(e, t), E = D && oE(e, n, t, r);
                (O || E) && (p = {
                    ...p,
                    ...QO(f.data, e.options)
                }), t._optimisticResults === "isRestoring" && (p.fetchStatus = "idle");
            }
            let { error: v, errorUpdatedAt: x, status: b } = p;
            if (t.select && p.data !== void 0) if (i && p.data === o?.data && t.select === this.#l) g = this.#u;
            else try {
                this.#l = t.select, g = t.select(p.data), g = C0(i?.data, g, t), this.#u = g, this.#o = null;
            } catch (D) {
                this.#o = D;
            }
            else g = p.data;
            if (t.placeholderData !== void 0 && g === void 0 && b === "pending") {
                let D;
                if (i?.isPlaceholderData && t.placeholderData === s?.placeholderData) D = i.data;
                else if (D = typeof t.placeholderData == "function" ? t.placeholderData(this.#c?.state.data, this.#c) : t.placeholderData, t.select && D !== void 0) try {
                    D = t.select(D), this.#o = null;
                } catch (O) {
                    this.#o = O;
                }
                D !== void 0 && (b = "success", g = C0(i?.data, D, t), m = !0);
            }
            this.#o && (v = this.#o, g = this.#u, x = Date.now(), b = "error");
            const S = p.fetchStatus === "fetching", N = b === "pending", _ = b === "error", I = N && S, C = g !== void 0, R = {
                status: b,
                fetchStatus: p.fetchStatus,
                isPending: N,
                isSuccess: b === "success",
                isError: _,
                isInitialLoading: I,
                isLoading: I,
                data: g,
                dataUpdatedAt: p.dataUpdatedAt,
                error: v,
                errorUpdatedAt: x,
                failureCount: p.fetchFailureCount,
                failureReason: p.fetchFailureReason,
                errorUpdateCount: p.errorUpdateCount,
                isFetched: p.dataUpdateCount > 0 || p.errorUpdateCount > 0,
                isFetchedAfterMount: p.dataUpdateCount > u.dataUpdateCount || p.errorUpdateCount > u.errorUpdateCount,
                isFetching: S,
                isRefetching: S && !N,
                isLoadingError: _ && !C,
                isPaused: p.fetchStatus === "paused",
                isPlaceholderData: m,
                isRefetchError: _ && C,
                isStale: GN(e, t),
                refetch: this.refetch,
                promise: this.#s
            };
            if (this.options.experimental_prefetchInRender) {
                const D = (F)=>{
                    R.status === "error" ? F.reject(R.error) : R.data !== void 0 && F.resolve(R.data);
                }, O = ()=>{
                    const F = this.#s = R.promise = j0();
                    D(F);
                }, E = this.#s;
                switch(E.status){
                    case "pending":
                        e.queryHash === n.queryHash && D(E);
                        break;
                    case "fulfilled":
                        (R.status === "error" || R.data !== E.value) && O();
                        break;
                    case "rejected":
                        (R.status !== "error" || R.error !== E.reason) && O();
                        break;
                }
            }
            return R;
        }
        updateResult(e) {
            const t = this.#r, n = this.createResult(this.#t, this.options);
            if (this.#i = this.#t.state, this.#a = this.options, this.#i.data !== void 0 && (this.#c = this.#t), Am(n, t)) return;
            this.#r = n;
            const r = {}, i = ()=>{
                if (!t) return !0;
                const { notifyOnChangeProps: o } = this.options, s = typeof o == "function" ? o() : o;
                if (s === "all" || !s && !this.#m.size) return !0;
                const l = new Set(s ?? this.#m);
                return this.options.throwOnError && l.add("error"), Object.keys(this.#r).some((u)=>{
                    const f = u;
                    return this.#r[f] !== t[f] && l.has(f);
                });
            };
            e?.listeners !== !1 && i() && (r.listeners = !0), this.#S({
                ...r,
                ...e
            });
        }
        #N() {
            const e = this.#e.getQueryCache().build(this.#e, this.options);
            if (e === this.#t) return;
            const t = this.#t;
            this.#t = e, this.#n = e.state, this.hasListeners() && (t?.removeObserver(this), e.addObserver(this));
        }
        onQueryUpdate() {
            this.updateResult(), this.hasListeners() && this.#x();
        }
        #S(e) {
            kn.batch(()=>{
                e.listeners && this.listeners.forEach((t)=>{
                    t(this.#r);
                }), this.#e.getQueryCache().notify({
                    query: this.#t,
                    type: "observerResultsUpdated"
                });
            });
        }
    };
    function E$(e, t) {
        return Wi(t.enabled, e) !== !1 && e.state.data === void 0 && !(e.state.status === "error" && t.retryOnMount === !1);
    }
    function iE(e, t) {
        return E$(e, t) || e.state.data !== void 0 && R0(e, t, t.refetchOnMount);
    }
    function R0(e, t, n) {
        if (Wi(t.enabled, e) !== !1) {
            const r = typeof n == "function" ? n(e) : n;
            return r === "always" || r !== !1 && GN(e, t);
        }
        return !1;
    }
    function oE(e, t, n, r) {
        return (e !== t || Wi(r.enabled, e) === !1) && (!n.suspense || e.state.status !== "error") && GN(e, n);
    }
    function GN(e, t) {
        return Wi(t.enabled, e) !== !1 && e.isStaleByTime(vc(t.staleTime, e));
    }
    function k$(e, t) {
        return !Am(e.getCurrentResult(), t);
    }
    var C$ = class extends Xc {
        #e;
        #t = void 0;
        #n;
        #r;
        constructor(t, n){
            super(), this.#e = t, this.setOptions(n), this.bindMethods(), this.#i();
        }
        bindMethods() {
            this.mutate = this.mutate.bind(this), this.reset = this.reset.bind(this);
        }
        setOptions(t) {
            const n = this.options;
            this.options = this.#e.defaultMutationOptions(t), Am(this.options, n) || this.#e.getMutationCache().notify({
                type: "observerOptionsUpdated",
                mutation: this.#n,
                observer: this
            }), n?.mutationKey && this.options.mutationKey && ol(n.mutationKey) !== ol(this.options.mutationKey) ? this.reset() : this.#n?.state.status === "pending" && this.#n.setOptions(this.options);
        }
        onUnsubscribe() {
            this.hasListeners() || this.#n?.removeObserver(this);
        }
        onMutationUpdate(t) {
            this.#i(), this.#a(t);
        }
        getCurrentResult() {
            return this.#t;
        }
        reset() {
            this.#n?.removeObserver(this), this.#n = void 0, this.#i(), this.#a();
        }
        mutate(t, n) {
            return this.#r = n, this.#n?.removeObserver(this), this.#n = this.#e.getMutationCache().build(this.#e, this.options), this.#n.addObserver(this), this.#n.execute(t);
        }
        #i() {
            const t = this.#n?.state ?? JO();
            this.#t = {
                ...t,
                isPending: t.status === "pending",
                isSuccess: t.status === "success",
                isError: t.status === "error",
                isIdle: t.status === "idle",
                mutate: this.mutate,
                reset: this.reset
            };
        }
        #a(t) {
            kn.batch(()=>{
                if (this.#r && this.hasListeners()) {
                    const n = this.#t.variables, r = this.#t.context;
                    t?.type === "success" ? (this.#r.onSuccess?.(t.data, n, r), this.#r.onSettled?.(t.data, null, n, r)) : t?.type === "error" && (this.#r.onError?.(t.error, n, r), this.#r.onSettled?.(void 0, t.error, n, r));
                }
                this.listeners.forEach((n)=>{
                    n(this.#t);
                });
            });
        }
    }, $ = If();
    const St = fi($), j$ = i$({
        __proto__: null,
        default: St
    }, [
        $
    ]);
    var ZO = $.createContext(void 0), Ug = (e)=>{
        const t = $.useContext(ZO);
        if (!t) throw new Error("No QueryClient set, use QueryClientProvider to set one");
        return t;
    }, R$ = ({ client: e, children: t })=>($.useEffect(()=>(e.mount(), ()=>{
                e.unmount();
            }), [
            e
        ]), d.jsx(ZO.Provider, {
            value: e,
            children: t
        })), YO = $.createContext(!1), O$ = ()=>$.useContext(YO);
    YO.Provider;
    function T$() {
        let e = !1;
        return {
            clearReset: ()=>{
                e = !1;
            },
            reset: ()=>{
                e = !0;
            },
            isReset: ()=>e
        };
    }
    var P$ = $.createContext(T$()), A$ = ()=>$.useContext(P$);
    function XO(e, t) {
        return typeof e == "function" ? e(...t) : !!e;
    }
    function O0() {}
    var F$ = (e, t)=>{
        (e.suspense || e.throwOnError || e.experimental_prefetchInRender) && (t.isReset() || (e.retryOnMount = !1));
    }, D$ = (e)=>{
        $.useEffect(()=>{
            e.clearReset();
        }, [
            e
        ]);
    }, M$ = ({ result: e, errorResetBoundary: t, throwOnError: n, query: r, suspense: i })=>e.isError && !t.isReset() && !e.isFetching && r && (i && e.data === void 0 || XO(n, [
            e.error,
            r
        ])), L$ = (e)=>{
        const t = e.staleTime;
        e.suspense && (e.staleTime = typeof t == "function" ? (...n)=>Math.max(t(...n), 1e3) : Math.max(t ?? 1e3, 1e3), typeof e.gcTime == "number" && (e.gcTime = Math.max(e.gcTime, 1e3)));
    }, $$ = (e, t)=>e.isLoading && e.isFetching && !t, q$ = (e, t)=>e?.suspense && t.isPending, sE = (e, t, n)=>t.fetchOptimistic(e).catch(()=>{
            n.clearReset();
        });
    function B$(e, t, n) {
        const r = Ug(), i = O$(), o = A$(), s = r.defaultQueryOptions(e);
        r.getDefaultOptions().queries?._experimental_beforeQuery?.(s), s._optimisticResults = i ? "isRestoring" : "optimistic", L$(s), F$(s, o), D$(o);
        const l = !r.getQueryCache().get(s.queryHash), [u] = $.useState(()=>new t(r, s)), f = u.getOptimisticResult(s), p = !i && e.subscribed !== !1;
        if ($.useSyncExternalStore($.useCallback((m)=>{
            const g = p ? u.subscribe(kn.batchCalls(m)) : O0;
            return u.updateResult(), g;
        }, [
            u,
            p
        ]), ()=>u.getCurrentResult(), ()=>u.getCurrentResult()), $.useEffect(()=>{
            u.setOptions(s, {
                listeners: !1
            });
        }, [
            s,
            u
        ]), q$(s, f)) throw sE(s, u, o);
        if (M$({
            result: f,
            errorResetBoundary: o,
            throwOnError: s.throwOnError,
            query: r.getQueryCache().get(s.queryHash),
            suspense: s.suspense
        })) throw f.error;
        return r.getDefaultOptions().queries?._experimental_afterQuery?.(s, f), s.experimental_prefetchInRender && !il && $$(f, i) && (l ? sE(s, u, o) : r.getQueryCache().get(s.queryHash)?.promise)?.catch(O0).finally(()=>{
            u.updateResult();
        }), s.notifyOnChangeProps ? f : u.trackResult(f);
    }
    function Dm(e, t) {
        return B$(e, _$);
    }
    function aE(e, t) {
        return e.findAll(t.filters).map((n)=>t.select ? t.select(n) : n.state);
    }
    function z$(e = {}, t) {
        const n = Ug().getMutationCache(), r = $.useRef(e), i = $.useRef(null);
        return i.current || (i.current = aE(n, e)), $.useEffect(()=>{
            r.current = e;
        }), $.useSyncExternalStore($.useCallback((o)=>n.subscribe(()=>{
                const s = UN(i.current, aE(n, r.current));
                i.current !== s && (i.current = s, kn.schedule(o));
            }), [
            n
        ]), ()=>i.current, ()=>i.current);
    }
    function Ye(e, t) {
        const n = Ug(), [r] = $.useState(()=>new C$(n, e));
        $.useEffect(()=>{
            r.setOptions(e);
        }, [
            r,
            e
        ]);
        const i = $.useSyncExternalStore($.useCallback((s)=>r.subscribe(kn.batchCalls(s)), [
            r
        ]), ()=>r.getCurrentResult(), ()=>r.getCurrentResult()), o = $.useCallback((s, l)=>{
            r.mutate(s, l).catch(O0);
        }, [
            r
        ]);
        if (i.error && XO(r.options.throwOnError, [
            i.error
        ])) throw i.error;
        return {
            ...i,
            mutate: o,
            mutateAsync: i.mutate
        };
    }
    var W$ = "Invariant failed";
    function Ki(e, t) {
        if (!e) throw new Error(W$);
    }
    function xc(e) {
        const t = e.resolvedLocation, n = e.location, r = t?.pathname !== n.pathname, i = t?.href !== n.href, o = t?.hash !== n.hash;
        return {
            fromLocation: t,
            toLocation: n,
            pathChanged: r,
            hrefChanged: i,
            hashChanged: o
        };
    }
    const V$ = "Error preloading route! ☝️";
    function Nd(e) {
        return e[e.length - 1];
    }
    function U$(e) {
        return typeof e == "function";
    }
    function Ha(e, t) {
        return U$(e) ? e(t) : e;
    }
    function T0(e, t) {
        return t.reduce((n, r)=>(n[r] = e[r], n), {});
    }
    function Si(e, t) {
        if (e === t) return e;
        const n = t, r = cE(e) && cE(n);
        if (r || Mm(e) && Mm(n)) {
            const i = r ? e : Object.keys(e), o = i.length, s = r ? n : Object.keys(n), l = s.length, u = r ? [] : {};
            let f = 0;
            for(let p = 0; p < l; p++){
                const m = r ? p : s[p];
                (!r && i.includes(m) || r) && e[m] === void 0 && n[m] === void 0 ? (u[m] = void 0, f++) : (u[m] = Si(e[m], n[m]), u[m] === e[m] && e[m] !== void 0 && f++);
            }
            return o === l && f === o ? e : u;
        }
        return n;
    }
    function Mm(e) {
        if (!lE(e)) return !1;
        const t = e.constructor;
        if (typeof t > "u") return !0;
        const n = t.prototype;
        return !(!lE(n) || !n.hasOwnProperty("isPrototypeOf"));
    }
    function lE(e) {
        return Object.prototype.toString.call(e) === "[object Object]";
    }
    function cE(e) {
        return Array.isArray(e) && e.length === Object.keys(e).length;
    }
    function uE(e, t) {
        let n = Object.keys(e);
        return t && (n = n.filter((r)=>e[r] !== void 0)), n;
    }
    function bc(e, t, n) {
        if (e === t) return !0;
        if (typeof e != typeof t) return !1;
        if (Mm(e) && Mm(t)) {
            const r = n?.ignoreUndefined ?? !0, i = uE(e, r), o = uE(t, r);
            return !n?.partial && i.length !== o.length ? !1 : o.every((s)=>bc(e[s], t[s], n));
        }
        return Array.isArray(e) && Array.isArray(t) ? e.length !== t.length ? !1 : !e.some((r, i)=>!bc(r, t[i], n)) : !1;
    }
    function sc(e) {
        let t, n;
        const r = new Promise((i, o)=>{
            t = i, n = o;
        });
        return r.status = "pending", r.resolve = (i)=>{
            r.status = "resolved", r.value = i, t(i), e?.(i);
        }, r.reject = (i)=>{
            r.status = "rejected", n(i);
        }, r;
    }
    function H$(e) {
        return /%[0-9A-Fa-f]{2}/.test(e);
    }
    function Ko(e) {
        return Hg(e.filter((t)=>t !== void 0).join("/"));
    }
    function Hg(e) {
        return e.replace(/\/{2,}/g, "/");
    }
    function QN(e) {
        return e === "/" ? e : e.replace(/^\/{1,}/, "");
    }
    function Ka(e) {
        return e === "/" ? e : e.replace(/\/{1,}$/, "");
    }
    function K$(e) {
        return Ka(QN(e));
    }
    function Lm(e, t) {
        return e.endsWith("/") && e !== "/" && e !== `${t}/` ? e.slice(0, -1) : e;
    }
    function G$(e, t, n) {
        return Lm(e, n) === Lm(t, n);
    }
    function Q$({ basepath: e, base: t, to: n, trailingSlash: r = "never", caseSensitive: i }) {
        var o, s;
        t = $m(e, t, i), n = $m(e, n, i);
        let l = Fc(t);
        const u = Fc(n);
        l.length > 1 && ((o = Nd(l)) == null ? void 0 : o.value) === "/" && l.pop(), u.forEach((p, m)=>{
            p.value === "/" ? m ? m === u.length - 1 && l.push(p) : l = [
                p
            ] : p.value === ".." ? l.pop() : p.value === "." || l.push(p);
        }), l.length > 1 && (((s = Nd(l)) == null ? void 0 : s.value) === "/" ? r === "never" && l.pop() : r === "always" && l.push({
            type: "pathname",
            value: "/"
        }));
        const f = Ko([
            e,
            ...l.map((p)=>p.value)
        ]);
        return Hg(f);
    }
    function Fc(e) {
        if (!e) return [];
        e = Hg(e);
        const t = [];
        if (e.slice(0, 1) === "/" && (e = e.substring(1), t.push({
            type: "pathname",
            value: "/"
        })), !e) return t;
        const n = e.split("/").filter(Boolean);
        return t.push(...n.map((r)=>r === "$" || r === "*" ? {
                type: "wildcard",
                value: r
            } : r.charAt(0) === "$" ? {
                type: "param",
                value: r
            } : {
                type: "pathname",
                value: decodeURI(r)
            })), e.slice(-1) === "/" && (e = e.substring(1), t.push({
            type: "pathname",
            value: "/"
        })), t;
    }
    function Nh({ path: e, params: t, leaveWildcards: n, leaveParams: r, decodeCharMap: i }) {
        const o = Fc(e);
        function s(f) {
            const p = t[f], m = typeof p == "string";
            return [
                "*",
                "_splat"
            ].includes(f) ? m ? encodeURI(p) : p : m ? J$(p, i) : p;
        }
        const l = {}, u = Ko(o.map((f)=>{
            if (f.type === "wildcard") {
                l._splat = t._splat;
                const p = s("_splat");
                return n ? `${f.value}${p ?? ""}` : p;
            }
            if (f.type === "param") {
                const p = f.value.substring(1);
                if (l[p] = t[p], r) {
                    const m = s(f.value);
                    return `${f.value}${m ?? ""}`;
                }
                return s(p) ?? "undefined";
            }
            return f.value;
        }));
        return {
            usedParams: l,
            interpolatedPath: u
        };
    }
    function J$(e, t) {
        let n = encodeURIComponent(e);
        if (t) for (const [r, i] of t)n = n.replaceAll(r, i);
        return n;
    }
    function Sh(e, t, n) {
        const r = Z$(e, t, n);
        if (!(n.to && !r)) return r ?? {};
    }
    function $m(e, t, n = !1) {
        const r = n ? e : e.toLowerCase(), i = n ? t : t.toLowerCase();
        switch(!0){
            case r === "/":
                return t;
            case i === r:
                return "";
            case t.length < e.length:
                return t;
            case i[r.length] !== "/":
                return t;
            case i.startsWith(r):
                return t.slice(e.length);
            default:
                return t;
        }
    }
    function Z$(e, t, n) {
        if (e !== "/" && !t.startsWith(e)) return;
        t = $m(e, t, n.caseSensitive);
        const r = $m(e, `${n.to ?? "$"}`, n.caseSensitive), i = Fc(t), o = Fc(r);
        t.startsWith("/") || i.unshift({
            type: "pathname",
            value: "/"
        }), r.startsWith("/") || o.unshift({
            type: "pathname",
            value: "/"
        });
        const s = {};
        return (()=>{
            for(let u = 0; u < Math.max(i.length, o.length); u++){
                const f = i[u], p = o[u], m = u >= i.length - 1, g = u >= o.length - 1;
                if (p) {
                    if (p.type === "wildcard") {
                        const v = decodeURI(Ko(i.slice(u).map((x)=>x.value)));
                        return s["*"] = v, s._splat = v, !0;
                    }
                    if (p.type === "pathname") {
                        if (p.value === "/" && !f?.value) return !0;
                        if (f) {
                            if (n.caseSensitive) {
                                if (p.value !== f.value) return !1;
                            } else if (p.value.toLowerCase() !== f.value.toLowerCase()) return !1;
                        }
                    }
                    if (!f) return !1;
                    if (p.type === "param") {
                        if (f.value === "/") return !1;
                        f.value.charAt(0) !== "$" && (s[p.value.substring(1)] = decodeURIComponent(f.value));
                    }
                }
                if (!m && g) return s["**"] = Ko(i.slice(u + 1).map((v)=>v.value)), !!n.fuzzy && p?.value !== "/";
            }
            return !0;
        })() ? s : void 0;
    }
    function Y$(e, t) {
        let n, r, i, o = "";
        for(n in e)if ((i = e[n]) !== void 0) if (Array.isArray(i)) for(r = 0; r < i.length; r++)o && (o += "&"), o += encodeURIComponent(n) + "=" + encodeURIComponent(i[r]);
        else o && (o += "&"), o += encodeURIComponent(n) + "=" + encodeURIComponent(i);
        return "" + o;
    }
    function dE(e) {
        if (!e) return "";
        const t = H$(e) ? decodeURIComponent(e) : decodeURIComponent(encodeURIComponent(e));
        return t === "false" ? !1 : t === "true" ? !0 : +t * 0 === 0 && +t + "" === t ? +t : t;
    }
    function X$(e, t) {
        let n, r;
        const i = {}, o = e.split("&");
        for(; n = o.shift();){
            const s = n.indexOf("=");
            if (s !== -1) {
                r = n.slice(0, s), r = decodeURIComponent(r);
                const l = n.slice(s + 1);
                i[r] !== void 0 ? i[r] = [].concat(i[r], dE(l)) : i[r] = dE(l);
            } else r = n, r = decodeURIComponent(r), i[r] = "";
        }
        return i;
    }
    const Lr = "__root__", eq = nq(JSON.parse), tq = rq(JSON.stringify, JSON.parse);
    function nq(e) {
        return (t)=>{
            t.substring(0, 1) === "?" && (t = t.substring(1));
            const n = X$(t);
            for(const r in n){
                const i = n[r];
                if (typeof i == "string") try {
                    n[r] = e(i);
                } catch  {}
            }
            return n;
        };
    }
    function rq(e, t) {
        function n(r) {
            if (typeof r == "object" && r !== null) try {
                return e(r);
            } catch  {}
            else if (typeof r == "string" && typeof t == "function") try {
                return t(r), e(r);
            } catch  {}
            return r;
        }
        return (r)=>{
            r = {
                ...r
            }, Object.keys(r).forEach((o)=>{
                const s = r[o];
                typeof s > "u" || s === void 0 ? delete r[o] : r[o] = n(s);
            });
            const i = Y$(r).toString();
            return i ? `?${i}` : "";
        };
    }
    const Vs = "__TSR_index", fE = "popstate", pE = "beforeunload";
    function eT(e) {
        let t = e.getLocation();
        const n = new Set, r = (s)=>{
            t = e.getLocation(), n.forEach((l)=>l({
                    location: t,
                    action: s
                }));
        }, i = (s)=>{
            e.notifyOnIndexChange ?? !0 ? r(s) : t = e.getLocation();
        }, o = async ({ task: s, navigateOpts: l, ...u })=>{
            var f, p;
            if (l?.ignoreBlocker ?? !1) {
                s();
                return;
            }
            const g = ((f = e.getBlockers) == null ? void 0 : f.call(e)) ?? [], v = u.type === "PUSH" || u.type === "REPLACE";
            if (typeof document < "u" && g.length && v) for (const x of g){
                const b = Ld(u.path, u.state);
                if (await x.blockerFn({
                    currentLocation: t,
                    nextLocation: b,
                    action: u.type
                })) {
                    (p = e.onBlocked) == null || p.call(e);
                    return;
                }
            }
            s();
        };
        return {
            get location () {
                return t;
            },
            get length () {
                return e.getLength();
            },
            subscribers: n,
            subscribe: (s)=>(n.add(s), ()=>{
                    n.delete(s);
                }),
            push: (s, l, u)=>{
                const f = t.state[Vs];
                l = P0(f + 1, l), o({
                    task: ()=>{
                        e.pushState(s, l), r({
                            type: "PUSH"
                        });
                    },
                    navigateOpts: u,
                    type: "PUSH",
                    path: s,
                    state: l
                });
            },
            replace: (s, l, u)=>{
                const f = t.state[Vs];
                l = P0(f, l), o({
                    task: ()=>{
                        e.replaceState(s, l), r({
                            type: "REPLACE"
                        });
                    },
                    navigateOpts: u,
                    type: "REPLACE",
                    path: s,
                    state: l
                });
            },
            go: (s, l)=>{
                o({
                    task: ()=>{
                        e.go(s), i({
                            type: "GO",
                            index: s
                        });
                    },
                    navigateOpts: l,
                    type: "GO"
                });
            },
            back: (s)=>{
                o({
                    task: ()=>{
                        e.back(s?.ignoreBlocker ?? !1), i({
                            type: "BACK"
                        });
                    },
                    navigateOpts: s,
                    type: "BACK"
                });
            },
            forward: (s)=>{
                o({
                    task: ()=>{
                        e.forward(s?.ignoreBlocker ?? !1), i({
                            type: "FORWARD"
                        });
                    },
                    navigateOpts: s,
                    type: "FORWARD"
                });
            },
            canGoBack: ()=>t.state[Vs] !== 0,
            createHref: (s)=>e.createHref(s),
            block: (s)=>{
                var l;
                if (!e.setBlockers) return ()=>{};
                const u = ((l = e.getBlockers) == null ? void 0 : l.call(e)) ?? [];
                return e.setBlockers([
                    ...u,
                    s
                ]), ()=>{
                    var f, p;
                    const m = ((f = e.getBlockers) == null ? void 0 : f.call(e)) ?? [];
                    (p = e.setBlockers) == null || p.call(e, m.filter((g)=>g !== s));
                };
            },
            flush: ()=>{
                var s;
                return (s = e.flush) == null ? void 0 : s.call(e);
            },
            destroy: ()=>{
                var s;
                return (s = e.destroy) == null ? void 0 : s.call(e);
            },
            notify: r
        };
    }
    function P0(e, t) {
        return t || (t = {}), {
            ...t,
            key: JN(),
            [Vs]: e
        };
    }
    function iq(e) {
        var t;
        const n = typeof document < "u" ? window : void 0, r = n.history.pushState, i = n.history.replaceState;
        let o = [];
        const s = ()=>o, l = (E)=>o = E, u = (E)=>E, f = ()=>Ld(`${n.location.pathname}${n.location.search}${n.location.hash}`, n.history.state);
        (t = n.history.state) != null && t.key || n.history.replaceState({
            [Vs]: 0,
            key: JN()
        }, "");
        let p = f(), m, g = !1, v = !1, x = !1, b = !1;
        const S = ()=>p;
        let N, _;
        const I = ()=>{
            N && (O._ignoreSubscribers = !0, (N.isPush ? n.history.pushState : n.history.replaceState)(N.state, "", N.href), O._ignoreSubscribers = !1, N = void 0, _ = void 0, m = void 0);
        }, C = (E, F, j)=>{
            const M = u(F);
            _ || (m = p), p = Ld(F, j), N = {
                href: M,
                state: j,
                isPush: N?.isPush || E === "push"
            }, _ || (_ = Promise.resolve().then(()=>I()));
        }, A = (E)=>{
            p = f(), O.notify({
                type: E
            });
        }, R = async ()=>{
            if (v) {
                v = !1;
                return;
            }
            const E = f(), F = E.state[Vs] - p.state[Vs], j = F === 1, M = F === -1, L = !j && !M || g;
            g = !1;
            const P = L ? "GO" : M ? "BACK" : "FORWARD", V = L ? {
                type: "GO",
                index: F
            } : {
                type: M ? "BACK" : "FORWARD"
            };
            if (x) x = !1;
            else {
                const z = s();
                if (typeof document < "u" && z.length) {
                    for (const Q of z)if (await Q.blockerFn({
                        currentLocation: p,
                        nextLocation: E,
                        action: P
                    })) {
                        v = !0, n.history.go(1), O.notify(V);
                        return;
                    }
                }
            }
            p = f(), O.notify(V);
        }, D = (E)=>{
            if (b) {
                b = !1;
                return;
            }
            let F = !1;
            const j = s();
            if (typeof document < "u" && j.length) for (const M of j){
                const L = M.enableBeforeUnload ?? !0;
                if (L === !0) {
                    F = !0;
                    break;
                }
                if (typeof L == "function" && L() === !0) {
                    F = !0;
                    break;
                }
            }
            if (F) return E.preventDefault(), E.returnValue = "";
        }, O = eT({
            getLocation: S,
            getLength: ()=>n.history.length,
            pushState: (E, F)=>C("push", E, F),
            replaceState: (E, F)=>C("replace", E, F),
            back: (E)=>(E && (x = !0), b = !0, n.history.back()),
            forward: (E)=>{
                E && (x = !0), b = !0, n.history.forward();
            },
            go: (E)=>{
                g = !0, n.history.go(E);
            },
            createHref: (E)=>u(E),
            flush: I,
            destroy: ()=>{
                n.history.pushState = r, n.history.replaceState = i, n.removeEventListener(pE, D, {
                    capture: !0
                }), n.removeEventListener(fE, R);
            },
            onBlocked: ()=>{
                m && p !== m && (p = m);
            },
            getBlockers: s,
            setBlockers: l,
            notifyOnIndexChange: !1
        });
        return n.addEventListener(pE, D, {
            capture: !0
        }), n.addEventListener(fE, R), n.history.pushState = function(...E) {
            const F = r.apply(n.history, E);
            return O._ignoreSubscribers || A("PUSH"), F;
        }, n.history.replaceState = function(...E) {
            const F = i.apply(n.history, E);
            return O._ignoreSubscribers || A("REPLACE"), F;
        }, O;
    }
    function oq(e = {
        initialEntries: [
            "/"
        ]
    }) {
        const t = e.initialEntries;
        let n = e.initialIndex ? Math.min(Math.max(e.initialIndex, 0), t.length - 1) : t.length - 1;
        const r = t.map((o, s)=>P0(s, void 0));
        return eT({
            getLocation: ()=>Ld(t[n], r[n]),
            getLength: ()=>t.length,
            pushState: (o, s)=>{
                n < t.length - 1 && (t.splice(n + 1), r.splice(n + 1)), r.push(s), t.push(o), n = Math.max(t.length - 1, 0);
            },
            replaceState: (o, s)=>{
                r[n] = s, t[n] = o;
            },
            back: ()=>{
                n = Math.max(n - 1, 0);
            },
            forward: ()=>{
                n = Math.min(n + 1, t.length - 1);
            },
            go: (o)=>{
                n = Math.min(Math.max(n + o, 0), t.length - 1);
            },
            createHref: (o)=>o
        });
    }
    function Ld(e, t) {
        const n = e.indexOf("#"), r = e.indexOf("?");
        return {
            href: e,
            pathname: e.substring(0, n > 0 ? r > 0 ? Math.min(n, r) : n : r > 0 ? r : e.length),
            hash: n > -1 ? e.substring(n) : "",
            search: r > -1 ? e.slice(r, n === -1 ? void 0 : n) : "",
            state: t || {
                [Vs]: 0,
                key: JN()
            }
        };
    }
    function JN() {
        return (Math.random() + 1).toString(36).substring(7);
    }
    function ZN(e) {
        const t = e.errorComponent ?? Kg;
        return d.jsx(sq, {
            getResetKey: e.getResetKey,
            onCatch: e.onCatch,
            children: ({ error: n, reset: r })=>n ? $.createElement(t, {
                    error: n,
                    reset: r
                }) : e.children
        });
    }
    class sq extends $.Component {
        constructor(){
            super(...arguments), this.state = {
                error: null
            };
        }
        static getDerivedStateFromProps(t) {
            return {
                resetKey: t.getResetKey()
            };
        }
        static getDerivedStateFromError(t) {
            return {
                error: t
            };
        }
        reset() {
            this.setState({
                error: null
            });
        }
        componentDidUpdate(t, n) {
            n.error && n.resetKey !== this.state.resetKey && this.reset();
        }
        componentDidCatch(t, n) {
            this.props.onCatch && this.props.onCatch(t, n);
        }
        render() {
            return this.props.children({
                error: this.state.resetKey !== this.props.getResetKey() ? null : this.state.error,
                reset: ()=>{
                    this.reset();
                }
            });
        }
    }
    function Kg({ error: e }) {
        const [t, n] = $.useState(!1);
        return d.jsxs("div", {
            style: {
                padding: ".5rem",
                maxWidth: "100%"
            },
            children: [
                d.jsxs("div", {
                    style: {
                        display: "flex",
                        alignItems: "center",
                        gap: ".5rem"
                    },
                    children: [
                        d.jsx("strong", {
                            style: {
                                fontSize: "1rem"
                            },
                            children: "Something went wrong!"
                        }),
                        d.jsx("button", {
                            style: {
                                appearance: "none",
                                fontSize: ".6em",
                                border: "1px solid currentColor",
                                padding: ".1rem .2rem",
                                fontWeight: "bold",
                                borderRadius: ".25rem"
                            },
                            onClick: ()=>n((r)=>!r),
                            children: t ? "Hide Error" : "Show Error"
                        })
                    ]
                }),
                d.jsx("div", {
                    style: {
                        height: ".25rem"
                    }
                }),
                t ? d.jsx("div", {
                    children: d.jsx("pre", {
                        style: {
                            fontSize: ".7em",
                            border: "1px solid red",
                            borderRadius: ".25rem",
                            padding: ".3rem",
                            color: "red",
                            overflow: "auto"
                        },
                        children: e.message ? d.jsx("code", {
                            children: e.message
                        }) : null
                    })
                }) : null
            ]
        });
    }
    var Mx = {
        exports: {}
    }, Lx = {}, $x = {
        exports: {}
    }, qx = {};
    var hE;
    function aq() {
        if (hE) return qx;
        hE = 1;
        var e = If();
        function t(m, g) {
            return m === g && (m !== 0 || 1 / m === 1 / g) || m !== m && g !== g;
        }
        var n = typeof Object.is == "function" ? Object.is : t, r = e.useState, i = e.useEffect, o = e.useLayoutEffect, s = e.useDebugValue;
        function l(m, g) {
            var v = g(), x = r({
                inst: {
                    value: v,
                    getSnapshot: g
                }
            }), b = x[0].inst, S = x[1];
            return o(function() {
                b.value = v, b.getSnapshot = g, u(b) && S({
                    inst: b
                });
            }, [
                m,
                v,
                g
            ]), i(function() {
                return u(b) && S({
                    inst: b
                }), m(function() {
                    u(b) && S({
                        inst: b
                    });
                });
            }, [
                m
            ]), s(v), v;
        }
        function u(m) {
            var g = m.getSnapshot;
            m = m.value;
            try {
                var v = g();
                return !n(m, v);
            } catch  {
                return !0;
            }
        }
        function f(m, g) {
            return g();
        }
        var p = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? f : l;
        return qx.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : p, qx;
    }
    var mE;
    function lq() {
        return mE || (mE = 1, $x.exports = aq()), $x.exports;
    }
    var gE;
    function cq() {
        if (gE) return Lx;
        gE = 1;
        var e = If(), t = lq();
        function n(f, p) {
            return f === p && (f !== 0 || 1 / f === 1 / p) || f !== f && p !== p;
        }
        var r = typeof Object.is == "function" ? Object.is : n, i = t.useSyncExternalStore, o = e.useRef, s = e.useEffect, l = e.useMemo, u = e.useDebugValue;
        return Lx.useSyncExternalStoreWithSelector = function(f, p, m, g, v) {
            var x = o(null);
            if (x.current === null) {
                var b = {
                    hasValue: !1,
                    value: null
                };
                x.current = b;
            } else b = x.current;
            x = l(function() {
                function N(R) {
                    if (!_) {
                        if (_ = !0, I = R, R = g(R), v !== void 0 && b.hasValue) {
                            var D = b.value;
                            if (v(D, R)) return C = D;
                        }
                        return C = R;
                    }
                    if (D = C, r(I, R)) return D;
                    var O = g(R);
                    return v !== void 0 && v(D, O) ? (I = R, D) : (I = R, C = O);
                }
                var _ = !1, I, C, A = m === void 0 ? null : m;
                return [
                    function() {
                        return N(p());
                    },
                    A === null ? void 0 : function() {
                        return N(A());
                    }
                ];
            }, [
                p,
                m,
                g,
                v
            ]);
            var S = i(f, x[0], x[1]);
            return s(function() {
                b.hasValue = !0, b.value = S;
            }, [
                S
            ]), u(S), S;
        }, Lx;
    }
    var yE;
    function uq() {
        return yE || (yE = 1, Mx.exports = cq()), Mx.exports;
    }
    var tT = uq();
    const dq = fi(tT), wc = new WeakMap, Zh = new WeakMap, qm = {
        current: []
    };
    let Bx = !1, Sd = 0;
    const ad = new Set, Ih = new Map;
    function nT(e) {
        const t = Array.from(e).sort((n, r)=>n instanceof Nc && n.options.deps.includes(r) ? 1 : r instanceof Nc && r.options.deps.includes(n) ? -1 : 0);
        for (const n of t){
            if (qm.current.includes(n)) continue;
            qm.current.push(n), n.recompute();
            const r = Zh.get(n);
            if (r) for (const i of r){
                const o = wc.get(i);
                o && nT(o);
            }
        }
    }
    function fq(e) {
        e.listeners.forEach((t)=>t({
                prevVal: e.prevState,
                currentVal: e.state
            }));
    }
    function pq(e) {
        e.listeners.forEach((t)=>t({
                prevVal: e.prevState,
                currentVal: e.state
            }));
    }
    function rT(e) {
        if (Sd > 0 && !Ih.has(e) && Ih.set(e, e.prevState), ad.add(e), !(Sd > 0) && !Bx) try {
            for(Bx = !0; ad.size > 0;){
                const t = Array.from(ad);
                ad.clear();
                for (const n of t){
                    const r = Ih.get(n) ?? n.prevState;
                    n.prevState = r, fq(n);
                }
                for (const n of t){
                    const r = wc.get(n);
                    r && (qm.current.push(n), nT(r));
                }
                for (const n of t){
                    const r = wc.get(n);
                    if (r) for (const i of r)pq(i);
                }
            }
        } finally{
            Bx = !1, qm.current = [], Ih.clear();
        }
    }
    function zx(e) {
        Sd++;
        try {
            e();
        } finally{
            if (Sd--, Sd === 0) {
                const t = Array.from(ad)[0];
                t && rT(t);
            }
        }
    }
    class A0 {
        constructor(t, n){
            this.listeners = new Set, this.subscribe = (r)=>{
                var i, o;
                this.listeners.add(r);
                const s = (o = (i = this.options) == null ? void 0 : i.onSubscribe) == null ? void 0 : o.call(i, r, this);
                return ()=>{
                    this.listeners.delete(r), s?.();
                };
            }, this.setState = (r)=>{
                var i, o, s;
                this.prevState = this.state, this.state = (i = this.options) != null && i.updateFn ? this.options.updateFn(this.prevState)(r) : r(this.prevState), (s = (o = this.options) == null ? void 0 : o.onUpdate) == null || s.call(o), rT(this);
            }, this.prevState = t, this.state = t, this.options = n;
        }
    }
    class Nc {
        constructor(t){
            this.listeners = new Set, this._subscriptions = [], this.lastSeenDepValues = [], this.getDepVals = ()=>{
                const n = [], r = [];
                for (const i of this.options.deps)n.push(i.prevState), r.push(i.state);
                return this.lastSeenDepValues = r, {
                    prevDepVals: n,
                    currDepVals: r,
                    prevVal: this.prevState ?? void 0
                };
            }, this.recompute = ()=>{
                var n, r;
                this.prevState = this.state;
                const { prevDepVals: i, currDepVals: o, prevVal: s } = this.getDepVals();
                this.state = this.options.fn({
                    prevDepVals: i,
                    currDepVals: o,
                    prevVal: s
                }), (r = (n = this.options).onUpdate) == null || r.call(n);
            }, this.checkIfRecalculationNeededDeeply = ()=>{
                for (const o of this.options.deps)o instanceof Nc && o.checkIfRecalculationNeededDeeply();
                let n = !1;
                const r = this.lastSeenDepValues, { currDepVals: i } = this.getDepVals();
                for(let o = 0; o < i.length; o++)if (i[o] !== r[o]) {
                    n = !0;
                    break;
                }
                n && this.recompute();
            }, this.mount = ()=>(this.registerOnGraph(), this.checkIfRecalculationNeededDeeply(), ()=>{
                    this.unregisterFromGraph();
                    for (const n of this._subscriptions)n();
                }), this.subscribe = (n)=>{
                var r, i;
                this.listeners.add(n);
                const o = (i = (r = this.options).onSubscribe) == null ? void 0 : i.call(r, n, this);
                return ()=>{
                    this.listeners.delete(n), o?.();
                };
            }, this.options = t, this.state = t.fn({
                prevDepVals: void 0,
                prevVal: void 0,
                currDepVals: this.getDepVals().currDepVals
            });
        }
        registerOnGraph(t = this.options.deps) {
            for (const n of t)if (n instanceof Nc) n.registerOnGraph(), this.registerOnGraph(n.options.deps);
            else if (n instanceof A0) {
                let r = wc.get(n);
                r || (r = new Set, wc.set(n, r)), r.add(this);
                let i = Zh.get(this);
                i || (i = new Set, Zh.set(this, i)), i.add(n);
            }
        }
        unregisterFromGraph(t = this.options.deps) {
            for (const n of t)if (n instanceof Nc) this.unregisterFromGraph(n.options.deps);
            else if (n instanceof A0) {
                const r = wc.get(n);
                r && r.delete(this);
                const i = Zh.get(this);
                i && i.delete(n);
            }
        }
    }
    function hq(e, t = (n)=>n) {
        return tT.useSyncExternalStoreWithSelector(e.subscribe, ()=>e.state, ()=>e.state, t, mq);
    }
    function mq(e, t) {
        if (Object.is(e, t)) return !0;
        if (typeof e != "object" || e === null || typeof t != "object" || t === null) return !1;
        if (e instanceof Map && t instanceof Map) {
            if (e.size !== t.size) return !1;
            for (const [r, i] of e)if (!t.has(r) || !Object.is(i, t.get(r))) return !1;
            return !0;
        }
        if (e instanceof Set && t instanceof Set) {
            if (e.size !== t.size) return !1;
            for (const r of e)if (!t.has(r)) return !1;
            return !0;
        }
        const n = Object.keys(e);
        if (n.length !== Object.keys(t).length) return !1;
        for(let r = 0; r < n.length; r++)if (!Object.prototype.hasOwnProperty.call(t, n[r]) || !Object.is(e[n[r]], t[n[r]])) return !1;
        return !0;
    }
    const Wx = $.createContext(null);
    function iT() {
        return typeof document > "u" ? Wx : window.__TSR_ROUTER_CONTEXT__ ? window.__TSR_ROUTER_CONTEXT__ : (window.__TSR_ROUTER_CONTEXT__ = Wx, Wx);
    }
    function Ti(e) {
        const t = $.useContext(iT());
        return e?.warn, t;
    }
    function lr(e) {
        const t = Ti({
            warn: e?.router === void 0
        }), n = e?.router || t, r = $.useRef(void 0);
        return hq(n.__store, (i)=>{
            if (e?.select) {
                if (e.structuralSharing ?? n.options.defaultStructuralSharing) {
                    const o = Si(r.current, e.select(i));
                    return r.current = o, o;
                }
                return e.select(i);
            }
            return i;
        });
    }
    const Gg = $.createContext(void 0), gq = $.createContext(void 0);
    function Xs(e) {
        const t = $.useContext(e.from ? gq : Gg);
        return lr({
            select: (r)=>{
                const i = r.matches.find((o)=>e.from ? e.from === o.routeId : o.id === t);
                if (Ki(!((e.shouldThrow ?? !0) && !i), `Could not find ${e.from ? `an active match from "${e.from}"` : "a nearest match!"}`), i !== void 0) return e.select ? e.select(i) : i;
            },
            structuralSharing: e.structuralSharing
        });
    }
    function On(e) {
        return Xs({
            from: e.from,
            strict: e.strict,
            structuralSharing: e.structuralSharing,
            select: (t)=>e.select ? e.select(t.loaderData) : t.loaderData
        });
    }
    function yq(e) {
        const { select: t, ...n } = e;
        return Xs({
            ...n,
            select: (r)=>t ? t(r.loaderDeps) : r.loaderDeps
        });
    }
    function Ke(e) {
        return Xs({
            from: e.from,
            strict: e.strict,
            shouldThrow: e.shouldThrow,
            structuralSharing: e.structuralSharing,
            select: (t)=>e.select ? e.select(t.params) : t.params
        });
    }
    function vq(e) {
        return Xs({
            from: e.from,
            strict: e.strict,
            shouldThrow: e.shouldThrow,
            structuralSharing: e.structuralSharing,
            select: (t)=>e.select ? e.select(t.search) : t.search
        });
    }
    function Ei(e) {
        return !!e?.isNotFound;
    }
    function xq(e) {
        const t = lr({
            select: (n)=>`not-found-${n.location.pathname}-${n.status}`
        });
        return d.jsx(ZN, {
            getResetKey: ()=>t,
            onCatch: (n, r)=>{
                var i;
                if (Ei(n)) (i = e.onCatch) == null || i.call(e, n, r);
                else throw n;
            },
            errorComponent: ({ error: n })=>{
                var r;
                if (Ei(n)) return (r = e.fallback) == null ? void 0 : r.call(e, n);
                throw n;
            },
            children: e.children
        });
    }
    function bq() {
        return d.jsx("p", {
            children: "Not Found"
        });
    }
    function gl(e) {
        const { navigate: t } = Ti();
        return $.useCallback((n)=>t({
                ...n
            }), [
            t
        ]);
    }
    let oT = class {
        constructor(t){
            this.init = (n)=>{
                var r, i;
                this.originalIndex = n.originalIndex;
                const o = this.options, s = !o?.path && !o?.id;
                this.parentRoute = (i = (r = this.options).getParentRoute) == null ? void 0 : i.call(r), s ? this._path = Lr : Ki(this.parentRoute);
                let l = s ? Lr : o.path;
                l && l !== "/" && (l = QN(l));
                const u = o?.id || l;
                let f = s ? Lr : Ko([
                    this.parentRoute.id === Lr ? "" : this.parentRoute.id,
                    u
                ]);
                l === Lr && (l = "/"), f !== Lr && (f = Ko([
                    "/",
                    f
                ]));
                const p = f === Lr ? "/" : Ko([
                    this.parentRoute.fullPath,
                    l
                ]);
                this._path = l, this._id = f, this._fullPath = p, this._to = p, this._ssr = o?.ssr ?? n.defaultSsr ?? !0;
            }, this.updateLoader = (n)=>(Object.assign(this.options, n), this), this.update = (n)=>(Object.assign(this.options, n), this), this.lazy = (n)=>(this.lazyFn = n, this), this.useMatch = (n)=>Xs({
                    select: n?.select,
                    from: this.id,
                    structuralSharing: n?.structuralSharing
                }), this.useRouteContext = (n)=>Xs({
                    ...n,
                    from: this.id,
                    select: (r)=>n?.select ? n.select(r.context) : r.context
                }), this.useSearch = (n)=>vq({
                    select: n?.select,
                    structuralSharing: n?.structuralSharing,
                    from: this.id
                }), this.useParams = (n)=>Ke({
                    select: n?.select,
                    structuralSharing: n?.structuralSharing,
                    from: this.id
                }), this.useLoaderDeps = (n)=>yq({
                    ...n,
                    from: this.id
                }), this.useLoaderData = (n)=>On({
                    ...n,
                    from: this.id
                }), this.useNavigate = ()=>gl({
                    from: this.id
                }), this.options = t || {}, this.isRoot = !t?.getParentRoute, Ki(!(t?.id && t?.path)), this.$$typeof = Symbol.for("react.memo");
        }
        get to() {
            return this._to;
        }
        get id() {
            return this._id;
        }
        get path() {
            return this._path;
        }
        get fullPath() {
            return this._fullPath;
        }
        get ssr() {
            return this._ssr;
        }
        addChildren(t) {
            return this._addFileChildren(t);
        }
        _addFileChildren(t) {
            return Array.isArray(t) && (this.children = t), typeof t == "object" && t !== null && (this.children = Object.values(t)), this;
        }
    };
    function wq(e) {
        return new oT(e);
    }
    function Nq() {
        return (e)=>Iq(e);
    }
    class Sq extends oT {
        constructor(t){
            super(t);
        }
        addChildren(t) {
            return super.addChildren(t), this;
        }
        _addFileChildren(t) {
            return super._addFileChildren(t), this;
        }
        _addFileTypes() {
            return this;
        }
    }
    function Iq(e) {
        return new Sq(e);
    }
    function Le(e) {
        return new _q(e, {
            silent: !0
        }).createRoute;
    }
    class _q {
        constructor(t, n){
            this.path = t, this.createRoute = (r)=>{
                this.silent;
                const i = wq(r);
                return i.isRoot = !1, i;
            }, this.silent = n?.silent;
        }
    }
    function _f(e) {
        if (e.isRedirect = !0, e.statusCode = e.statusCode || e.code || 307, e.headers = e.headers || {}, !e.reloadDocument) {
            e.reloadDocument = !1;
            try {
                new URL(`${e.href}`), e.reloadDocument = !0;
            } catch  {}
        }
        if (e.throw) throw e;
        return e;
    }
    function Ma(e) {
        return !!e?.isRedirect;
    }
    function Vx(e) {
        return !!e?.isRedirect && e.href;
    }
    function Yh(e) {
        return d.jsx(d.Fragment, {
            children: e.children
        });
    }
    function sT(e, t, n) {
        return t.options.notFoundComponent ? d.jsx(t.options.notFoundComponent, {
            data: n
        }) : e.options.defaultNotFoundComponent ? d.jsx(e.options.defaultNotFoundComponent, {
            data: n
        }) : d.jsx(bq, {});
    }
    var Ux, vE;
    function Eq() {
        if (vE) return Ux;
        vE = 1;
        const e = {}, t = e.hasOwnProperty, n = (O, E)=>{
            for(const F in O)t.call(O, F) && E(F, O[F]);
        }, r = (O, E)=>(E && n(E, (F, j)=>{
                O[F] = j;
            }), O), i = (O, E)=>{
            const F = O.length;
            let j = -1;
            for(; ++j < F;)E(O[j]);
        }, o = (O)=>"\\u" + ("0000" + O).slice(-4), s = (O, E)=>{
            let F = O.toString(16);
            return E ? F : F.toUpperCase();
        }, l = e.toString, u = Array.isArray, f = (O)=>typeof Buffer == "function" && Buffer.isBuffer(O), p = (O)=>l.call(O) == "[object Object]", m = (O)=>typeof O == "string" || l.call(O) == "[object String]", g = (O)=>typeof O == "number" || l.call(O) == "[object Number]", v = (O)=>typeof O == "bigint", x = (O)=>typeof O == "function", b = (O)=>l.call(O) == "[object Map]", S = (O)=>l.call(O) == "[object Set]", N = {
            "\\": "\\\\",
            "\b": "\\b",
            "\f": "\\f",
            "\n": "\\n",
            "\r": "\\r",
            "	": "\\t"
        }, _ = /[\\\b\f\n\r\t]/, I = /[0-9]/, C = /[\xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/, A = /([\uD800-\uDBFF][\uDC00-\uDFFF])|([\uD800-\uDFFF])|(['"`])|[^]/g, R = /([\uD800-\uDBFF][\uDC00-\uDFFF])|([\uD800-\uDFFF])|(['"`])|[^ !#-&\(-\[\]-_a-~]/g, D = (O, E)=>{
            const F = ()=>{
                Q = z, ++E.indentLevel, z = E.indent.repeat(E.indentLevel);
            }, j = {
                escapeEverything: !1,
                minimal: !1,
                isScriptContext: !1,
                quotes: "single",
                wrap: !1,
                es6: !1,
                json: !1,
                compact: !0,
                lowercaseHex: !1,
                numbers: "decimal",
                indent: "	",
                indentLevel: 0,
                __inline1__: !1,
                __inline2__: !1
            }, M = E && E.json;
            M && (j.quotes = "double", j.wrap = !0), E = r(j, E), E.quotes != "single" && E.quotes != "double" && E.quotes != "backtick" && (E.quotes = "single");
            const L = E.quotes == "double" ? '"' : E.quotes == "backtick" ? "`" : "'", P = E.compact, V = E.lowercaseHex;
            let z = E.indent.repeat(E.indentLevel), Q = "";
            const K = E.__inline1__, H = E.__inline2__, G = P ? "" : `
`;
            let U, Z = !0;
            const J = E.numbers == "binary", X = E.numbers == "octal", te = E.numbers == "decimal", ie = E.numbers == "hexadecimal";
            if (M && O && x(O.toJSON) && (O = O.toJSON()), !m(O)) {
                if (b(O)) return O.size == 0 ? "new Map()" : (P || (E.__inline1__ = !0, E.__inline2__ = !1), "new Map(" + D(Array.from(O), E) + ")");
                if (S(O)) return O.size == 0 ? "new Set()" : "new Set(" + D(Array.from(O), E) + ")";
                if (f(O)) return O.length == 0 ? "Buffer.from([])" : "Buffer.from(" + D(Array.from(O), E) + ")";
                if (u(O)) return U = [], E.wrap = !0, K && (E.__inline1__ = !1, E.__inline2__ = !0), H || F(), i(O, (ce)=>{
                    Z = !1, H && (E.__inline2__ = !1), U.push((P || H ? "" : z) + D(ce, E));
                }), Z ? "[]" : H ? "[" + U.join(", ") + "]" : "[" + G + U.join("," + G) + G + (P ? "" : Q) + "]";
                if (g(O) || v(O)) {
                    if (M) return JSON.stringify(Number(O));
                    let ce;
                    if (te) ce = String(O);
                    else if (ie) {
                        let de = O.toString(16);
                        V || (de = de.toUpperCase()), ce = "0x" + de;
                    } else J ? ce = "0b" + O.toString(2) : X && (ce = "0o" + O.toString(8));
                    return v(O) ? ce + "n" : ce;
                } else return v(O) ? M ? JSON.stringify(Number(O)) : O + "n" : p(O) ? (U = [], E.wrap = !0, F(), n(O, (ce, de)=>{
                    Z = !1, U.push((P ? "" : z) + D(ce, E) + ":" + (P ? "" : " ") + D(de, E));
                }), Z ? "{}" : "{" + G + U.join("," + G) + G + (P ? "" : Q) + "}") : M ? JSON.stringify(O) || "null" : String(O);
            }
            const ae = E.escapeEverything ? A : R;
            return U = O.replace(ae, (ce, de, ve, be, ge, we)=>{
                if (de) {
                    if (E.minimal) return de;
                    const Re = de.charCodeAt(0), $e = de.charCodeAt(1);
                    if (E.es6) {
                        const nt = (Re - 55296) * 1024 + $e - 56320 + 65536;
                        return "\\u{" + s(nt, V) + "}";
                    }
                    return o(s(Re, V)) + o(s($e, V));
                }
                if (ve) return o(s(ve.charCodeAt(0), V));
                if (ce == "\0" && !M && !I.test(we.charAt(ge + 1))) return "\\0";
                if (be) return be == L || E.escapeEverything ? "\\" + be : be;
                if (_.test(ce)) return N[ce];
                if (E.minimal && !C.test(ce)) return ce;
                const ke = s(ce.charCodeAt(0), V);
                return M || ke.length > 2 ? o(ke) : "\\x" + ("00" + ke).slice(-2);
            }), L == "`" && (U = U.replace(/\$\{/g, "\\${")), E.isScriptContext && (U = U.replace(/<\/(script|style)/gi, "<\\/$1").replace(/<!--/g, M ? "\\u003C!--" : "\\x3C!--")), E.wrap && (U = L + U + L), U;
        };
        return D.version = "3.0.2", Ux = D, Ux;
    }
    Eq();
    function kq({ children: e, log: t }) {
        return typeof document < "u" ? null : d.jsx("script", {
            className: "tsr-once",
            dangerouslySetInnerHTML: {
                __html: [
                    e,
                    "",
                    'if (typeof __TSR_SSR__ !== "undefined") __TSR_SSR__.cleanScripts()'
                ].filter(Boolean).join(`
`)
            }
        });
    }
    const Bm = "tsr-scroll-restoration-v1_3", Cq = typeof window < "u" && window.sessionStorage, jq = (e, t)=>{
        let n;
        return (...r)=>{
            n || (n = setTimeout(()=>{
                e(...r), n = null;
            }, t));
        };
    }, uc = Cq ? {
        state: JSON.parse(window.sessionStorage.getItem(Bm) || "null") || {},
        set: (t)=>(uc.state = Ha(t, uc.state) || uc.state, window.sessionStorage.setItem(Bm, JSON.stringify(uc.state)))
    } : void 0, F0 = (e)=>e.state.key || e.href;
    function Rq(e) {
        const t = [];
        let n;
        for(; n = e.parentNode;)t.unshift(`${e.tagName}:nth-child(${[].indexOf.call(n.children, e) + 1})`), e = n;
        return `${t.join(" > ")}`.toLowerCase();
    }
    let zm = !1;
    function aT(e, t, n, r, i) {
        var o;
        let s;
        try {
            s = JSON.parse(sessionStorage.getItem(e) || "{}");
        } catch (f) {
            console.error(f);
            return;
        }
        const l = t || ((o = window.history.state) == null ? void 0 : o.key), u = s[l];
        zm = !0, (()=>{
            if (r && u) {
                for(const p in u){
                    const m = u[p];
                    if (p === "window") window.scrollTo({
                        top: m.scrollY,
                        left: m.scrollX,
                        behavior: n
                    });
                    else if (p) {
                        const g = document.querySelector(p);
                        g && (g.scrollLeft = m.scrollX, g.scrollTop = m.scrollY);
                    }
                }
                return;
            }
            const f = window.location.hash.split("#")[1];
            if (f) {
                const p = (window.history.state || {}).__hashScrollIntoViewOptions ?? !0;
                if (p) {
                    const m = document.getElementById(f);
                    m && m.scrollIntoView(p);
                }
                return;
            }
            [
                "window",
                ...i?.filter((p)=>p !== "window") ?? []
            ].forEach((p)=>{
                const m = p === "window" ? window : document.querySelector(p);
                m && m.scrollTo({
                    top: 0,
                    left: 0,
                    behavior: n
                });
            });
        })(), zm = !1;
    }
    function Oq(e, t) {
        if ((e.options.scrollRestoration ?? !1) && (e.isScrollRestoring = !0), typeof document > "u" || e.isScrollRestorationSetup) return;
        e.isScrollRestorationSetup = !0, zm = !1;
        const r = e.options.getScrollRestorationKey || F0;
        window.history.scrollRestoration = "manual";
        const i = (o)=>{
            if (zm || !e.isScrollRestoring) return;
            let s = "";
            if (o.target === document || o.target === window) s = "window";
            else {
                const u = o.target.getAttribute("data-scroll-restoration-id");
                u ? s = `[data-scroll-restoration-id="${u}"]` : s = Rq(o.target);
            }
            const l = r(e.state.location);
            uc.set((u)=>{
                const f = u[l] = u[l] || {}, p = f[s] = f[s] || {};
                if (s === "window") p.scrollX = window.scrollX || 0, p.scrollY = window.scrollY || 0;
                else if (s) {
                    const m = document.querySelector(s);
                    m && (p.scrollX = m.scrollLeft || 0, p.scrollY = m.scrollTop || 0);
                }
                return u;
            });
        };
        typeof document < "u" && document.addEventListener("scroll", jq(i, 100), !0), e.subscribe("onRendered", (o)=>{
            const s = r(o.toLocation);
            if (!e.resetNextScroll) {
                e.resetNextScroll = !0;
                return;
            }
            aT(Bm, s, e.options.scrollRestorationBehavior, e.isScrollRestoring, e.options.scrollToTopSelectors), e.isScrollRestoring && uc.set((l)=>(l[s] = l[s] || {}, l));
        });
    }
    function Tq() {
        const e = Ti(), n = (e.options.getScrollRestorationKey || F0)(e.latestLocation), r = n !== F0(e.latestLocation) ? n : null;
        return !e.isScrollRestoring || !e.isServer ? null : d.jsx(kq, {
            children: `(${aT.toString()})(${JSON.stringify(Bm)},${JSON.stringify(r)}, undefined, true)`,
            log: !1
        });
    }
    const lT = $.memo(function({ matchId: t }) {
        var n, r;
        const i = Ti(), o = lr({
            select: (N)=>{
                var _;
                return (_ = N.matches.find((I)=>I.id === t)) == null ? void 0 : _.routeId;
            }
        });
        Ki(o);
        const s = i.routesById[o], l = s.options.pendingComponent ?? i.options.defaultPendingComponent, u = l ? d.jsx(l, {}) : null, f = s.options.errorComponent ?? i.options.defaultErrorComponent, p = s.options.onCatch ?? i.options.defaultOnCatch, m = s.isRoot ? s.options.notFoundComponent ?? ((n = i.options.notFoundRoute) == null ? void 0 : n.options.component) : s.options.notFoundComponent, g = (!s.isRoot || s.options.wrapInSuspense) && (s.options.wrapInSuspense ?? l ?? ((r = s.options.errorComponent) == null ? void 0 : r.preload)) ? $.Suspense : Yh, v = f ? ZN : Yh, x = m ? xq : Yh, b = lr({
            select: (N)=>N.loadedAt
        }), S = lr({
            select: (N)=>{
                var _;
                const I = N.matches.findIndex((C)=>C.id === t);
                return (_ = N.matches[I - 1]) == null ? void 0 : _.routeId;
            }
        });
        return d.jsxs(d.Fragment, {
            children: [
                d.jsx(Gg.Provider, {
                    value: t,
                    children: d.jsx(g, {
                        fallback: u,
                        children: d.jsx(v, {
                            getResetKey: ()=>b,
                            errorComponent: f || Kg,
                            onCatch: (N, _)=>{
                                if (Ei(N)) throw N;
                                p?.(N, _);
                            },
                            children: d.jsx(x, {
                                fallback: (N)=>{
                                    if (!m || N.routeId && N.routeId !== o || !N.routeId && !s.isRoot) throw N;
                                    return $.createElement(m, N);
                                },
                                children: d.jsx(Aq, {
                                    matchId: t
                                })
                            })
                        })
                    })
                }),
                S === Lr ? d.jsxs(d.Fragment, {
                    children: [
                        d.jsx(Pq, {}),
                        d.jsx(Tq, {})
                    ]
                }) : null
            ]
        });
    });
    function Pq() {
        var e;
        const t = Ti(), n = $.useRef(void 0);
        return d.jsx("script", {
            suppressHydrationWarning: !0,
            ref: (r)=>{
                r ? t.emit({
                    type: "onRendered",
                    ...xc(t.state)
                }) : n.current = t.state.resolvedLocation;
            }
        }, (e = t.state.resolvedLocation) == null ? void 0 : e.state.key);
    }
    const Aq = $.memo(function({ matchId: t }) {
        var n, r, i;
        const o = Ti(), { match: s, key: l, routeId: u } = lr({
            select: (g)=>{
                const v = g.matches.findIndex((I)=>I.id === t), x = g.matches[v], b = x.routeId, S = o.routesById[b].options.remountDeps ?? o.options.defaultRemountDeps, N = S?.({
                    routeId: b,
                    loaderDeps: x.loaderDeps,
                    params: x._strictParams,
                    search: x._strictSearch
                });
                return {
                    key: N ? JSON.stringify(N) : void 0,
                    routeId: b,
                    match: T0(x, [
                        "id",
                        "status",
                        "error"
                    ])
                };
            },
            structuralSharing: !0
        }), f = o.routesById[u], p = $.useMemo(()=>{
            const g = f.options.component ?? o.options.defaultComponent;
            return g ? d.jsx(g, {}, l) : d.jsx(Pi, {});
        }, [
            l,
            f.options.component,
            o.options.defaultComponent
        ]), m = (f.options.errorComponent ?? o.options.defaultErrorComponent) || Kg;
        if (s.status === "notFound") return Ki(Ei(s.error)), sT(o, f, s.error);
        if (s.status === "redirected") throw Ki(Ma(s.error)), (n = o.getMatch(s.id)) == null ? void 0 : n.loadPromise;
        if (s.status === "error") {
            if (o.isServer) return d.jsx(m, {
                error: s.error,
                reset: void 0,
                info: {
                    componentStack: ""
                }
            });
            throw s.error;
        }
        if (s.status === "pending") {
            const g = f.options.pendingMinMs ?? o.options.defaultPendingMinMs;
            if (g && !((r = o.getMatch(s.id)) != null && r.minPendingPromise) && !o.isServer) {
                const v = sc();
                Promise.resolve().then(()=>{
                    o.updateMatch(s.id, (x)=>({
                            ...x,
                            minPendingPromise: v
                        }));
                }), setTimeout(()=>{
                    v.resolve(), o.updateMatch(s.id, (x)=>({
                            ...x,
                            minPendingPromise: void 0
                        }));
                }, g);
            }
            throw (i = o.getMatch(s.id)) == null ? void 0 : i.loadPromise;
        }
        return p;
    }), Pi = $.memo(function() {
        const t = Ti(), n = $.useContext(Gg), r = lr({
            select: (f)=>{
                var p;
                return (p = f.matches.find((m)=>m.id === n)) == null ? void 0 : p.routeId;
            }
        }), i = t.routesById[r], o = lr({
            select: (f)=>{
                const m = f.matches.find((g)=>g.id === n);
                return Ki(m), m.globalNotFound;
            }
        }), s = lr({
            select: (f)=>{
                var p;
                const m = f.matches, g = m.findIndex((v)=>v.id === n);
                return (p = m[g + 1]) == null ? void 0 : p.id;
            }
        });
        if (o) return sT(t, i, void 0);
        if (!s) return null;
        const l = d.jsx(lT, {
            matchId: s
        }), u = t.options.defaultPendingComponent ? d.jsx(t.options.defaultPendingComponent, {}) : null;
        return n === Lr ? d.jsx($.Suspense, {
            fallback: u,
            children: l
        }) : l;
    });
    var Hx = {
        exports: {}
    }, Pr = {}, Kx = {
        exports: {}
    }, Gx = {};
    var xE;
    function Fq() {
        return xE || (xE = 1, function(e) {
            function t(K, H) {
                var G = K.length;
                K.push(H);
                e: for(; 0 < G;){
                    var U = G - 1 >>> 1, Z = K[U];
                    if (0 < i(Z, H)) K[U] = H, K[G] = Z, G = U;
                    else break e;
                }
            }
            function n(K) {
                return K.length === 0 ? null : K[0];
            }
            function r(K) {
                if (K.length === 0) return null;
                var H = K[0], G = K.pop();
                if (G !== H) {
                    K[0] = G;
                    e: for(var U = 0, Z = K.length, J = Z >>> 1; U < J;){
                        var X = 2 * (U + 1) - 1, te = K[X], ie = X + 1, ae = K[ie];
                        if (0 > i(te, G)) ie < Z && 0 > i(ae, te) ? (K[U] = ae, K[ie] = G, U = ie) : (K[U] = te, K[X] = G, U = X);
                        else if (ie < Z && 0 > i(ae, G)) K[U] = ae, K[ie] = G, U = ie;
                        else break e;
                    }
                }
                return H;
            }
            function i(K, H) {
                var G = K.sortIndex - H.sortIndex;
                return G !== 0 ? G : K.id - H.id;
            }
            if (typeof performance == "object" && typeof performance.now == "function") {
                var o = performance;
                e.unstable_now = function() {
                    return o.now();
                };
            } else {
                var s = Date, l = s.now();
                e.unstable_now = function() {
                    return s.now() - l;
                };
            }
            var u = [], f = [], p = 1, m = null, g = 3, v = !1, x = !1, b = !1, S = typeof setTimeout == "function" ? setTimeout : null, N = typeof clearTimeout == "function" ? clearTimeout : null, _ = typeof setImmediate < "u" ? setImmediate : null;
            typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
            function I(K) {
                for(var H = n(f); H !== null;){
                    if (H.callback === null) r(f);
                    else if (H.startTime <= K) r(f), H.sortIndex = H.expirationTime, t(u, H);
                    else break;
                    H = n(f);
                }
            }
            function C(K) {
                if (b = !1, I(K), !x) if (n(u) !== null) x = !0, z(A);
                else {
                    var H = n(f);
                    H !== null && Q(C, H.startTime - K);
                }
            }
            function A(K, H) {
                x = !1, b && (b = !1, N(O), O = -1), v = !0;
                var G = g;
                try {
                    for(I(H), m = n(u); m !== null && (!(m.expirationTime > H) || K && !j());){
                        var U = m.callback;
                        if (typeof U == "function") {
                            m.callback = null, g = m.priorityLevel;
                            var Z = U(m.expirationTime <= H);
                            H = e.unstable_now(), typeof Z == "function" ? m.callback = Z : m === n(u) && r(u), I(H);
                        } else r(u);
                        m = n(u);
                    }
                    if (m !== null) var J = !0;
                    else {
                        var X = n(f);
                        X !== null && Q(C, X.startTime - H), J = !1;
                    }
                    return J;
                } finally{
                    m = null, g = G, v = !1;
                }
            }
            var R = !1, D = null, O = -1, E = 5, F = -1;
            function j() {
                return !(e.unstable_now() - F < E);
            }
            function M() {
                if (D !== null) {
                    var K = e.unstable_now();
                    F = K;
                    var H = !0;
                    try {
                        H = D(!0, K);
                    } finally{
                        H ? L() : (R = !1, D = null);
                    }
                } else R = !1;
            }
            var L;
            if (typeof _ == "function") L = function() {
                _(M);
            };
            else if (typeof MessageChannel < "u") {
                var P = new MessageChannel, V = P.port2;
                P.port1.onmessage = M, L = function() {
                    V.postMessage(null);
                };
            } else L = function() {
                S(M, 0);
            };
            function z(K) {
                D = K, R || (R = !0, L());
            }
            function Q(K, H) {
                O = S(function() {
                    K(e.unstable_now());
                }, H);
            }
            e.unstable_IdlePriority = 5, e.unstable_ImmediatePriority = 1, e.unstable_LowPriority = 4, e.unstable_NormalPriority = 3, e.unstable_Profiling = null, e.unstable_UserBlockingPriority = 2, e.unstable_cancelCallback = function(K) {
                K.callback = null;
            }, e.unstable_continueExecution = function() {
                x || v || (x = !0, z(A));
            }, e.unstable_forceFrameRate = function(K) {
                0 > K || 125 < K ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : E = 0 < K ? Math.floor(1e3 / K) : 5;
            }, e.unstable_getCurrentPriorityLevel = function() {
                return g;
            }, e.unstable_getFirstCallbackNode = function() {
                return n(u);
            }, e.unstable_next = function(K) {
                switch(g){
                    case 1:
                    case 2:
                    case 3:
                        var H = 3;
                        break;
                    default:
                        H = g;
                }
                var G = g;
                g = H;
                try {
                    return K();
                } finally{
                    g = G;
                }
            }, e.unstable_pauseExecution = function() {}, e.unstable_requestPaint = function() {}, e.unstable_runWithPriority = function(K, H) {
                switch(K){
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        K = 3;
                }
                var G = g;
                g = K;
                try {
                    return H();
                } finally{
                    g = G;
                }
            }, e.unstable_scheduleCallback = function(K, H, G) {
                var U = e.unstable_now();
                switch(typeof G == "object" && G !== null ? (G = G.delay, G = typeof G == "number" && 0 < G ? U + G : U) : G = U, K){
                    case 1:
                        var Z = -1;
                        break;
                    case 2:
                        Z = 250;
                        break;
                    case 5:
                        Z = 1073741823;
                        break;
                    case 4:
                        Z = 1e4;
                        break;
                    default:
                        Z = 5e3;
                }
                return Z = G + Z, K = {
                    id: p++,
                    callback: H,
                    priorityLevel: K,
                    startTime: G,
                    expirationTime: Z,
                    sortIndex: -1
                }, G > U ? (K.sortIndex = G, t(f, K), n(u) === null && K === n(f) && (b ? (N(O), O = -1) : b = !0, Q(C, G - U))) : (K.sortIndex = Z, t(u, K), x || v || (x = !0, z(A))), K;
            }, e.unstable_shouldYield = j, e.unstable_wrapCallback = function(K) {
                var H = g;
                return function() {
                    var G = g;
                    g = H;
                    try {
                        return K.apply(this, arguments);
                    } finally{
                        g = G;
                    }
                };
            };
        }(Gx)), Gx;
    }
    var bE;
    function Dq() {
        return bE || (bE = 1, Kx.exports = Fq()), Kx.exports;
    }
    var wE;
    function Mq() {
        if (wE) return Pr;
        wE = 1;
        var e = If(), t = Dq();
        function n(a) {
            for(var c = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, h = 1; h < arguments.length; h++)c += "&args[]=" + encodeURIComponent(arguments[h]);
            return "Minified React error #" + a + "; visit " + c + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
        }
        var r = new Set, i = {};
        function o(a, c) {
            s(a, c), s(a + "Capture", c);
        }
        function s(a, c) {
            for(i[a] = c, a = 0; a < c.length; a++)r.add(c[a]);
        }
        var l = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), u = Object.prototype.hasOwnProperty, f = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, p = {}, m = {};
        function g(a) {
            return u.call(m, a) ? !0 : u.call(p, a) ? !1 : f.test(a) ? m[a] = !0 : (p[a] = !0, !1);
        }
        function v(a, c, h, y) {
            if (h !== null && h.type === 0) return !1;
            switch(typeof c){
                case "function":
                case "symbol":
                    return !0;
                case "boolean":
                    return y ? !1 : h !== null ? !h.acceptsBooleans : (a = a.toLowerCase().slice(0, 5), a !== "data-" && a !== "aria-");
                default:
                    return !1;
            }
        }
        function x(a, c, h, y) {
            if (c === null || typeof c > "u" || v(a, c, h, y)) return !0;
            if (y) return !1;
            if (h !== null) switch(h.type){
                case 3:
                    return !c;
                case 4:
                    return c === !1;
                case 5:
                    return isNaN(c);
                case 6:
                    return isNaN(c) || 1 > c;
            }
            return !1;
        }
        function b(a, c, h, y, w, k, W) {
            this.acceptsBooleans = c === 2 || c === 3 || c === 4, this.attributeName = y, this.attributeNamespace = w, this.mustUseProperty = h, this.propertyName = a, this.type = c, this.sanitizeURL = k, this.removeEmptyString = W;
        }
        var S = {};
        "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
            S[a] = new b(a, 0, !1, a, null, !1, !1);
        }), [
            [
                "acceptCharset",
                "accept-charset"
            ],
            [
                "className",
                "class"
            ],
            [
                "htmlFor",
                "for"
            ],
            [
                "httpEquiv",
                "http-equiv"
            ]
        ].forEach(function(a) {
            var c = a[0];
            S[c] = new b(c, 1, !1, a[1], null, !1, !1);
        }), [
            "contentEditable",
            "draggable",
            "spellCheck",
            "value"
        ].forEach(function(a) {
            S[a] = new b(a, 2, !1, a.toLowerCase(), null, !1, !1);
        }), [
            "autoReverse",
            "externalResourcesRequired",
            "focusable",
            "preserveAlpha"
        ].forEach(function(a) {
            S[a] = new b(a, 2, !1, a, null, !1, !1);
        }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
            S[a] = new b(a, 3, !1, a.toLowerCase(), null, !1, !1);
        }), [
            "checked",
            "multiple",
            "muted",
            "selected"
        ].forEach(function(a) {
            S[a] = new b(a, 3, !0, a, null, !1, !1);
        }), [
            "capture",
            "download"
        ].forEach(function(a) {
            S[a] = new b(a, 4, !1, a, null, !1, !1);
        }), [
            "cols",
            "rows",
            "size",
            "span"
        ].forEach(function(a) {
            S[a] = new b(a, 6, !1, a, null, !1, !1);
        }), [
            "rowSpan",
            "start"
        ].forEach(function(a) {
            S[a] = new b(a, 5, !1, a.toLowerCase(), null, !1, !1);
        });
        var N = /[\-:]([a-z])/g;
        function _(a) {
            return a[1].toUpperCase();
        }
        "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
            var c = a.replace(N, _);
            S[c] = new b(c, 1, !1, a, null, !1, !1);
        }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
            var c = a.replace(N, _);
            S[c] = new b(c, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
        }), [
            "xml:base",
            "xml:lang",
            "xml:space"
        ].forEach(function(a) {
            var c = a.replace(N, _);
            S[c] = new b(c, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
        }), [
            "tabIndex",
            "crossOrigin"
        ].forEach(function(a) {
            S[a] = new b(a, 1, !1, a.toLowerCase(), null, !1, !1);
        }), S.xlinkHref = new b("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), [
            "src",
            "href",
            "action",
            "formAction"
        ].forEach(function(a) {
            S[a] = new b(a, 1, !1, a.toLowerCase(), null, !0, !0);
        });
        function I(a, c, h, y) {
            var w = S.hasOwnProperty(c) ? S[c] : null;
            (w !== null ? w.type !== 0 : y || !(2 < c.length) || c[0] !== "o" && c[0] !== "O" || c[1] !== "n" && c[1] !== "N") && (x(c, h, w, y) && (h = null), y || w === null ? g(c) && (h === null ? a.removeAttribute(c) : a.setAttribute(c, "" + h)) : w.mustUseProperty ? a[w.propertyName] = h === null ? w.type === 3 ? !1 : "" : h : (c = w.attributeName, y = w.attributeNamespace, h === null ? a.removeAttribute(c) : (w = w.type, h = w === 3 || w === 4 && h === !0 ? "" : "" + h, y ? a.setAttributeNS(y, c, h) : a.setAttribute(c, h))));
        }
        var C = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, A = Symbol.for("react.element"), R = Symbol.for("react.portal"), D = Symbol.for("react.fragment"), O = Symbol.for("react.strict_mode"), E = Symbol.for("react.profiler"), F = Symbol.for("react.provider"), j = Symbol.for("react.context"), M = Symbol.for("react.forward_ref"), L = Symbol.for("react.suspense"), P = Symbol.for("react.suspense_list"), V = Symbol.for("react.memo"), z = Symbol.for("react.lazy"), Q = Symbol.for("react.offscreen"), K = Symbol.iterator;
        function H(a) {
            return a === null || typeof a != "object" ? null : (a = K && a[K] || a["@@iterator"], typeof a == "function" ? a : null);
        }
        var G = Object.assign, U;
        function Z(a) {
            if (U === void 0) try {
                throw Error();
            } catch (h) {
                var c = h.stack.trim().match(/\n( *(at )?)/);
                U = c && c[1] || "";
            }
            return `
` + U + a;
        }
        var J = !1;
        function X(a, c) {
            if (!a || J) return "";
            J = !0;
            var h = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            try {
                if (c) if (c = function() {
                    throw Error();
                }, Object.defineProperty(c.prototype, "props", {
                    set: function() {
                        throw Error();
                    }
                }), typeof Reflect == "object" && Reflect.construct) {
                    try {
                        Reflect.construct(c, []);
                    } catch (he) {
                        var y = he;
                    }
                    Reflect.construct(a, [], c);
                } else {
                    try {
                        c.call();
                    } catch (he) {
                        y = he;
                    }
                    a.call(c.prototype);
                }
                else {
                    try {
                        throw Error();
                    } catch (he) {
                        y = he;
                    }
                    a();
                }
            } catch (he) {
                if (he && y && typeof he.stack == "string") {
                    for(var w = he.stack.split(`
`), k = y.stack.split(`
`), W = w.length - 1, Y = k.length - 1; 1 <= W && 0 <= Y && w[W] !== k[Y];)Y--;
                    for(; 1 <= W && 0 <= Y; W--, Y--)if (w[W] !== k[Y]) {
                        if (W !== 1 || Y !== 1) do if (W--, Y--, 0 > Y || w[W] !== k[Y]) {
                            var re = `
` + w[W].replace(" at new ", " at ");
                            return a.displayName && re.includes("<anonymous>") && (re = re.replace("<anonymous>", a.displayName)), re;
                        }
                        while (1 <= W && 0 <= Y);
                        break;
                    }
                }
            } finally{
                J = !1, Error.prepareStackTrace = h;
            }
            return (a = a ? a.displayName || a.name : "") ? Z(a) : "";
        }
        function te(a) {
            switch(a.tag){
                case 5:
                    return Z(a.type);
                case 16:
                    return Z("Lazy");
                case 13:
                    return Z("Suspense");
                case 19:
                    return Z("SuspenseList");
                case 0:
                case 2:
                case 15:
                    return a = X(a.type, !1), a;
                case 11:
                    return a = X(a.type.render, !1), a;
                case 1:
                    return a = X(a.type, !0), a;
                default:
                    return "";
            }
        }
        function ie(a) {
            if (a == null) return null;
            if (typeof a == "function") return a.displayName || a.name || null;
            if (typeof a == "string") return a;
            switch(a){
                case D:
                    return "Fragment";
                case R:
                    return "Portal";
                case E:
                    return "Profiler";
                case O:
                    return "StrictMode";
                case L:
                    return "Suspense";
                case P:
                    return "SuspenseList";
            }
            if (typeof a == "object") switch(a.$$typeof){
                case j:
                    return (a.displayName || "Context") + ".Consumer";
                case F:
                    return (a._context.displayName || "Context") + ".Provider";
                case M:
                    var c = a.render;
                    return a = a.displayName, a || (a = c.displayName || c.name || "", a = a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef"), a;
                case V:
                    return c = a.displayName || null, c !== null ? c : ie(a.type) || "Memo";
                case z:
                    c = a._payload, a = a._init;
                    try {
                        return ie(a(c));
                    } catch  {}
            }
            return null;
        }
        function ae(a) {
            var c = a.type;
            switch(a.tag){
                case 24:
                    return "Cache";
                case 9:
                    return (c.displayName || "Context") + ".Consumer";
                case 10:
                    return (c._context.displayName || "Context") + ".Provider";
                case 18:
                    return "DehydratedFragment";
                case 11:
                    return a = c.render, a = a.displayName || a.name || "", c.displayName || (a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef");
                case 7:
                    return "Fragment";
                case 5:
                    return c;
                case 4:
                    return "Portal";
                case 3:
                    return "Root";
                case 6:
                    return "Text";
                case 16:
                    return ie(c);
                case 8:
                    return c === O ? "StrictMode" : "Mode";
                case 22:
                    return "Offscreen";
                case 12:
                    return "Profiler";
                case 21:
                    return "Scope";
                case 13:
                    return "Suspense";
                case 19:
                    return "SuspenseList";
                case 25:
                    return "TracingMarker";
                case 1:
                case 0:
                case 17:
                case 2:
                case 14:
                case 15:
                    if (typeof c == "function") return c.displayName || c.name || null;
                    if (typeof c == "string") return c;
            }
            return null;
        }
        function ce(a) {
            switch(typeof a){
                case "boolean":
                case "number":
                case "string":
                case "undefined":
                    return a;
                case "object":
                    return a;
                default:
                    return "";
            }
        }
        function de(a) {
            var c = a.type;
            return (a = a.nodeName) && a.toLowerCase() === "input" && (c === "checkbox" || c === "radio");
        }
        function ve(a) {
            var c = de(a) ? "checked" : "value", h = Object.getOwnPropertyDescriptor(a.constructor.prototype, c), y = "" + a[c];
            if (!a.hasOwnProperty(c) && typeof h < "u" && typeof h.get == "function" && typeof h.set == "function") {
                var w = h.get, k = h.set;
                return Object.defineProperty(a, c, {
                    configurable: !0,
                    get: function() {
                        return w.call(this);
                    },
                    set: function(W) {
                        y = "" + W, k.call(this, W);
                    }
                }), Object.defineProperty(a, c, {
                    enumerable: h.enumerable
                }), {
                    getValue: function() {
                        return y;
                    },
                    setValue: function(W) {
                        y = "" + W;
                    },
                    stopTracking: function() {
                        a._valueTracker = null, delete a[c];
                    }
                };
            }
        }
        function be(a) {
            a._valueTracker || (a._valueTracker = ve(a));
        }
        function ge(a) {
            if (!a) return !1;
            var c = a._valueTracker;
            if (!c) return !0;
            var h = c.getValue(), y = "";
            return a && (y = de(a) ? a.checked ? "true" : "false" : a.value), a = y, a !== h ? (c.setValue(a), !0) : !1;
        }
        function we(a) {
            if (a = a || (typeof document < "u" ? document : void 0), typeof a > "u") return null;
            try {
                return a.activeElement || a.body;
            } catch  {
                return a.body;
            }
        }
        function ke(a, c) {
            var h = c.checked;
            return G({}, c, {
                defaultChecked: void 0,
                defaultValue: void 0,
                value: void 0,
                checked: h ?? a._wrapperState.initialChecked
            });
        }
        function Re(a, c) {
            var h = c.defaultValue == null ? "" : c.defaultValue, y = c.checked != null ? c.checked : c.defaultChecked;
            h = ce(c.value != null ? c.value : h), a._wrapperState = {
                initialChecked: y,
                initialValue: h,
                controlled: c.type === "checkbox" || c.type === "radio" ? c.checked != null : c.value != null
            };
        }
        function $e(a, c) {
            c = c.checked, c != null && I(a, "checked", c, !1);
        }
        function nt(a, c) {
            $e(a, c);
            var h = ce(c.value), y = c.type;
            if (h != null) y === "number" ? (h === 0 && a.value === "" || a.value != h) && (a.value = "" + h) : a.value !== "" + h && (a.value = "" + h);
            else if (y === "submit" || y === "reset") {
                a.removeAttribute("value");
                return;
            }
            c.hasOwnProperty("value") ? ne(a, c.type, h) : c.hasOwnProperty("defaultValue") && ne(a, c.type, ce(c.defaultValue)), c.checked == null && c.defaultChecked != null && (a.defaultChecked = !!c.defaultChecked);
        }
        function ee(a, c, h) {
            if (c.hasOwnProperty("value") || c.hasOwnProperty("defaultValue")) {
                var y = c.type;
                if (!(y !== "submit" && y !== "reset" || c.value !== void 0 && c.value !== null)) return;
                c = "" + a._wrapperState.initialValue, h || c === a.value || (a.value = c), a.defaultValue = c;
            }
            h = a.name, h !== "" && (a.name = ""), a.defaultChecked = !!a._wrapperState.initialChecked, h !== "" && (a.name = h);
        }
        function ne(a, c, h) {
            (c !== "number" || we(a.ownerDocument) !== a) && (h == null ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + h && (a.defaultValue = "" + h));
        }
        var oe = Array.isArray;
        function le(a, c, h, y) {
            if (a = a.options, c) {
                c = {};
                for(var w = 0; w < h.length; w++)c["$" + h[w]] = !0;
                for(h = 0; h < a.length; h++)w = c.hasOwnProperty("$" + a[h].value), a[h].selected !== w && (a[h].selected = w), w && y && (a[h].defaultSelected = !0);
            } else {
                for(h = "" + ce(h), c = null, w = 0; w < a.length; w++){
                    if (a[w].value === h) {
                        a[w].selected = !0, y && (a[w].defaultSelected = !0);
                        return;
                    }
                    c !== null || a[w].disabled || (c = a[w]);
                }
                c !== null && (c.selected = !0);
            }
        }
        function me(a, c) {
            if (c.dangerouslySetInnerHTML != null) throw Error(n(91));
            return G({}, c, {
                value: void 0,
                defaultValue: void 0,
                children: "" + a._wrapperState.initialValue
            });
        }
        function xe(a, c) {
            var h = c.value;
            if (h == null) {
                if (h = c.children, c = c.defaultValue, h != null) {
                    if (c != null) throw Error(n(92));
                    if (oe(h)) {
                        if (1 < h.length) throw Error(n(93));
                        h = h[0];
                    }
                    c = h;
                }
                c == null && (c = ""), h = c;
            }
            a._wrapperState = {
                initialValue: ce(h)
            };
        }
        function pe(a, c) {
            var h = ce(c.value), y = ce(c.defaultValue);
            h != null && (h = "" + h, h !== a.value && (a.value = h), c.defaultValue == null && a.defaultValue !== h && (a.defaultValue = h)), y != null && (a.defaultValue = "" + y);
        }
        function Se(a) {
            var c = a.textContent;
            c === a._wrapperState.initialValue && c !== "" && c !== null && (a.value = c);
        }
        function Ge(a) {
            switch(a){
                case "svg":
                    return "http://www.w3.org/2000/svg";
                case "math":
                    return "http://www.w3.org/1998/Math/MathML";
                default:
                    return "http://www.w3.org/1999/xhtml";
            }
        }
        function Qe(a, c) {
            return a == null || a === "http://www.w3.org/1999/xhtml" ? Ge(c) : a === "http://www.w3.org/2000/svg" && c === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a;
        }
        var dt, nn = function(a) {
            return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(c, h, y, w) {
                MSApp.execUnsafeLocalFunction(function() {
                    return a(c, h, y, w);
                });
            } : a;
        }(function(a, c) {
            if (a.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in a) a.innerHTML = c;
            else {
                for(dt = dt || document.createElement("div"), dt.innerHTML = "<svg>" + c.valueOf().toString() + "</svg>", c = dt.firstChild; a.firstChild;)a.removeChild(a.firstChild);
                for(; c.firstChild;)a.appendChild(c.firstChild);
            }
        });
        function Gt(a, c) {
            if (c) {
                var h = a.firstChild;
                if (h && h === a.lastChild && h.nodeType === 3) {
                    h.nodeValue = c;
                    return;
                }
            }
            a.textContent = c;
        }
        var Un = {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0
        }, mi = [
            "Webkit",
            "ms",
            "Moz",
            "O"
        ];
        Object.keys(Un).forEach(function(a) {
            mi.forEach(function(c) {
                c = c + a.charAt(0).toUpperCase() + a.substring(1), Un[c] = Un[a];
            });
        });
        function _r(a, c, h) {
            return c == null || typeof c == "boolean" || c === "" ? "" : h || typeof c != "number" || c === 0 || Un.hasOwnProperty(a) && Un[a] ? ("" + c).trim() : c + "px";
        }
        function Er(a, c) {
            a = a.style;
            for(var h in c)if (c.hasOwnProperty(h)) {
                var y = h.indexOf("--") === 0, w = _r(h, c[h], y);
                h === "float" && (h = "cssFloat"), y ? a.setProperty(h, w) : a[h] = w;
            }
        }
        var Hn = G({
            menuitem: !0
        }, {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0
        });
        function Mn(a, c) {
            if (c) {
                if (Hn[a] && (c.children != null || c.dangerouslySetInnerHTML != null)) throw Error(n(137, a));
                if (c.dangerouslySetInnerHTML != null) {
                    if (c.children != null) throw Error(n(60));
                    if (typeof c.dangerouslySetInnerHTML != "object" || !("__html" in c.dangerouslySetInnerHTML)) throw Error(n(61));
                }
                if (c.style != null && typeof c.style != "object") throw Error(n(62));
            }
        }
        function kr(a, c) {
            if (a.indexOf("-") === -1) return typeof c.is == "string";
            switch(a){
                case "annotation-xml":
                case "color-profile":
                case "font-face":
                case "font-face-src":
                case "font-face-uri":
                case "font-face-format":
                case "font-face-name":
                case "missing-glyph":
                    return !1;
                default:
                    return !0;
            }
        }
        var Fi = null;
        function ro(a) {
            return a = a.target || a.srcElement || window, a.correspondingUseElement && (a = a.correspondingUseElement), a.nodeType === 3 ? a.parentNode : a;
        }
        var ss = null, as = null, ls = null;
        function ap(a) {
            if (a = Du(a)) {
                if (typeof ss != "function") throw Error(n(280));
                var c = a.stateNode;
                c && (c = Dp(c), ss(a.stateNode, a.type, c));
            }
        }
        function pu(a) {
            as ? ls ? ls.push(a) : ls = [
                a
            ] : as = a;
        }
        function lp() {
            if (as) {
                var a = as, c = ls;
                if (ls = as = null, ap(a), c) for(a = 0; a < c.length; a++)ap(c[a]);
            }
        }
        function cp(a, c) {
            return a(c);
        }
        function up() {}
        var hu = !1;
        function dp(a, c, h) {
            if (hu) return a(c, h);
            hu = !0;
            try {
                return cp(a, c, h);
            } finally{
                hu = !1, (as !== null || ls !== null) && (up(), lp());
            }
        }
        function ya(a, c) {
            var h = a.stateNode;
            if (h === null) return null;
            var y = Dp(h);
            if (y === null) return null;
            h = y[c];
            e: switch(c){
                case "onClick":
                case "onClickCapture":
                case "onDoubleClick":
                case "onDoubleClickCapture":
                case "onMouseDown":
                case "onMouseDownCapture":
                case "onMouseMove":
                case "onMouseMoveCapture":
                case "onMouseUp":
                case "onMouseUpCapture":
                case "onMouseEnter":
                    (y = !y.disabled) || (a = a.type, y = !(a === "button" || a === "input" || a === "select" || a === "textarea")), a = !y;
                    break e;
                default:
                    a = !1;
            }
            if (a) return null;
            if (h && typeof h != "function") throw Error(n(231, c, typeof h));
            return h;
        }
        var mu = !1;
        if (l) try {
            var va = {};
            Object.defineProperty(va, "passive", {
                get: function() {
                    mu = !0;
                }
            }), window.addEventListener("test", va, va), window.removeEventListener("test", va, va);
        } catch  {
            mu = !1;
        }
        function Wy(a, c, h, y, w, k, W, Y, re) {
            var he = Array.prototype.slice.call(arguments, 3);
            try {
                c.apply(h, he);
            } catch (Ie) {
                this.onError(Ie);
            }
        }
        var xa = !1, Nl = null, Sl = !1, gu = null, Vy = {
            onError: function(a) {
                xa = !0, Nl = a;
            }
        };
        function Uy(a, c, h, y, w, k, W, Y, re) {
            xa = !1, Nl = null, Wy.apply(Vy, arguments);
        }
        function fp(a, c, h, y, w, k, W, Y, re) {
            if (Uy.apply(this, arguments), xa) {
                if (xa) {
                    var he = Nl;
                    xa = !1, Nl = null;
                } else throw Error(n(198));
                Sl || (Sl = !0, gu = he);
            }
        }
        function io(a) {
            var c = a, h = a;
            if (a.alternate) for(; c.return;)c = c.return;
            else {
                a = c;
                do c = a, c.flags & 4098 && (h = c.return), a = c.return;
                while (a);
            }
            return c.tag === 3 ? h : null;
        }
        function pp(a) {
            if (a.tag === 13) {
                var c = a.memoizedState;
                if (c === null && (a = a.alternate, a !== null && (c = a.memoizedState)), c !== null) return c.dehydrated;
            }
            return null;
        }
        function hp(a) {
            if (io(a) !== a) throw Error(n(188));
        }
        function Hy(a) {
            var c = a.alternate;
            if (!c) {
                if (c = io(a), c === null) throw Error(n(188));
                return c !== a ? null : a;
            }
            for(var h = a, y = c;;){
                var w = h.return;
                if (w === null) break;
                var k = w.alternate;
                if (k === null) {
                    if (y = w.return, y !== null) {
                        h = y;
                        continue;
                    }
                    break;
                }
                if (w.child === k.child) {
                    for(k = w.child; k;){
                        if (k === h) return hp(w), a;
                        if (k === y) return hp(w), c;
                        k = k.sibling;
                    }
                    throw Error(n(188));
                }
                if (h.return !== y.return) h = w, y = k;
                else {
                    for(var W = !1, Y = w.child; Y;){
                        if (Y === h) {
                            W = !0, h = w, y = k;
                            break;
                        }
                        if (Y === y) {
                            W = !0, y = w, h = k;
                            break;
                        }
                        Y = Y.sibling;
                    }
                    if (!W) {
                        for(Y = k.child; Y;){
                            if (Y === h) {
                                W = !0, h = k, y = w;
                                break;
                            }
                            if (Y === y) {
                                W = !0, y = k, h = w;
                                break;
                            }
                            Y = Y.sibling;
                        }
                        if (!W) throw Error(n(189));
                    }
                }
                if (h.alternate !== y) throw Error(n(190));
            }
            if (h.tag !== 3) throw Error(n(188));
            return h.stateNode.current === h ? a : c;
        }
        function mp(a) {
            return a = Hy(a), a !== null ? gp(a) : null;
        }
        function gp(a) {
            if (a.tag === 5 || a.tag === 6) return a;
            for(a = a.child; a !== null;){
                var c = gp(a);
                if (c !== null) return c;
                a = a.sibling;
            }
            return null;
        }
        var yp = t.unstable_scheduleCallback, vp = t.unstable_cancelCallback, xp = t.unstable_shouldYield, Ky = t.unstable_requestPaint, rn = t.unstable_now, Gy = t.unstable_getCurrentPriorityLevel, yu = t.unstable_ImmediatePriority, bp = t.unstable_UserBlockingPriority, Il = t.unstable_NormalPriority, Qy = t.unstable_LowPriority, vu = t.unstable_IdlePriority, _l = null, gi = null;
        function Jy(a) {
            if (gi && typeof gi.onCommitFiberRoot == "function") try {
                gi.onCommitFiberRoot(_l, a, void 0, (a.current.flags & 128) === 128);
            } catch  {}
        }
        var Gr = Math.clz32 ? Math.clz32 : Xy, Zy = Math.log, Yy = Math.LN2;
        function Xy(a) {
            return a >>>= 0, a === 0 ? 32 : 31 - (Zy(a) / Yy | 0) | 0;
        }
        var ba = 64, El = 4194304;
        function wa(a) {
            switch(a & -a){
                case 1:
                    return 1;
                case 2:
                    return 2;
                case 4:
                    return 4;
                case 8:
                    return 8;
                case 16:
                    return 16;
                case 32:
                    return 32;
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                    return a & 4194240;
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    return a & 130023424;
                case 134217728:
                    return 134217728;
                case 268435456:
                    return 268435456;
                case 536870912:
                    return 536870912;
                case 1073741824:
                    return 1073741824;
                default:
                    return a;
            }
        }
        function cs(a, c) {
            var h = a.pendingLanes;
            if (h === 0) return 0;
            var y = 0, w = a.suspendedLanes, k = a.pingedLanes, W = h & 268435455;
            if (W !== 0) {
                var Y = W & ~w;
                Y !== 0 ? y = wa(Y) : (k &= W, k !== 0 && (y = wa(k)));
            } else W = h & ~w, W !== 0 ? y = wa(W) : k !== 0 && (y = wa(k));
            if (y === 0) return 0;
            if (c !== 0 && c !== y && !(c & w) && (w = y & -y, k = c & -c, w >= k || w === 16 && (k & 4194240) !== 0)) return c;
            if (y & 4 && (y |= h & 16), c = a.entangledLanes, c !== 0) for(a = a.entanglements, c &= y; 0 < c;)h = 31 - Gr(c), w = 1 << h, y |= a[h], c &= ~w;
            return y;
        }
        function ev(a, c) {
            switch(a){
                case 1:
                case 2:
                case 4:
                    return c + 250;
                case 8:
                case 16:
                case 32:
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                    return c + 5e3;
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    return -1;
                case 134217728:
                case 268435456:
                case 536870912:
                case 1073741824:
                    return -1;
                default:
                    return -1;
            }
        }
        function tv(a, c) {
            for(var h = a.suspendedLanes, y = a.pingedLanes, w = a.expirationTimes, k = a.pendingLanes; 0 < k;){
                var W = 31 - Gr(k), Y = 1 << W, re = w[W];
                re === -1 ? (!(Y & h) || Y & y) && (w[W] = ev(Y, c)) : re <= c && (a.expiredLanes |= Y), k &= ~Y;
            }
        }
        function kl(a) {
            return a = a.pendingLanes & -1073741825, a !== 0 ? a : a & 1073741824 ? 1073741824 : 0;
        }
        function _I() {
            var a = ba;
            return ba <<= 1, !(ba & 4194240) && (ba = 64), a;
        }
        function nv(a) {
            for(var c = [], h = 0; 31 > h; h++)c.push(a);
            return c;
        }
        function xu(a, c, h) {
            a.pendingLanes |= c, c !== 536870912 && (a.suspendedLanes = 0, a.pingedLanes = 0), a = a.eventTimes, c = 31 - Gr(c), a[c] = h;
        }
        function _L(a, c) {
            var h = a.pendingLanes & ~c;
            a.pendingLanes = c, a.suspendedLanes = 0, a.pingedLanes = 0, a.expiredLanes &= c, a.mutableReadLanes &= c, a.entangledLanes &= c, c = a.entanglements;
            var y = a.eventTimes;
            for(a = a.expirationTimes; 0 < h;){
                var w = 31 - Gr(h), k = 1 << w;
                c[w] = 0, y[w] = -1, a[w] = -1, h &= ~k;
            }
        }
        function rv(a, c) {
            var h = a.entangledLanes |= c;
            for(a = a.entanglements; h;){
                var y = 31 - Gr(h), w = 1 << y;
                w & c | a[y] & c && (a[y] |= c), h &= ~w;
            }
        }
        var Ct = 0;
        function EI(a) {
            return a &= -a, 1 < a ? 4 < a ? a & 268435455 ? 16 : 536870912 : 4 : 1;
        }
        var kI, iv, CI, jI, RI, ov = !1, wp = [], us = null, ds = null, fs = null, bu = new Map, wu = new Map, ps = [], EL = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
        function OI(a, c) {
            switch(a){
                case "focusin":
                case "focusout":
                    us = null;
                    break;
                case "dragenter":
                case "dragleave":
                    ds = null;
                    break;
                case "mouseover":
                case "mouseout":
                    fs = null;
                    break;
                case "pointerover":
                case "pointerout":
                    bu.delete(c.pointerId);
                    break;
                case "gotpointercapture":
                case "lostpointercapture":
                    wu.delete(c.pointerId);
            }
        }
        function Nu(a, c, h, y, w, k) {
            return a === null || a.nativeEvent !== k ? (a = {
                blockedOn: c,
                domEventName: h,
                eventSystemFlags: y,
                nativeEvent: k,
                targetContainers: [
                    w
                ]
            }, c !== null && (c = Du(c), c !== null && iv(c)), a) : (a.eventSystemFlags |= y, c = a.targetContainers, w !== null && c.indexOf(w) === -1 && c.push(w), a);
        }
        function kL(a, c, h, y, w) {
            switch(c){
                case "focusin":
                    return us = Nu(us, a, c, h, y, w), !0;
                case "dragenter":
                    return ds = Nu(ds, a, c, h, y, w), !0;
                case "mouseover":
                    return fs = Nu(fs, a, c, h, y, w), !0;
                case "pointerover":
                    var k = w.pointerId;
                    return bu.set(k, Nu(bu.get(k) || null, a, c, h, y, w)), !0;
                case "gotpointercapture":
                    return k = w.pointerId, wu.set(k, Nu(wu.get(k) || null, a, c, h, y, w)), !0;
            }
            return !1;
        }
        function TI(a) {
            var c = Na(a.target);
            if (c !== null) {
                var h = io(c);
                if (h !== null) {
                    if (c = h.tag, c === 13) {
                        if (c = pp(h), c !== null) {
                            a.blockedOn = c, RI(a.priority, function() {
                                CI(h);
                            });
                            return;
                        }
                    } else if (c === 3 && h.stateNode.current.memoizedState.isDehydrated) {
                        a.blockedOn = h.tag === 3 ? h.stateNode.containerInfo : null;
                        return;
                    }
                }
            }
            a.blockedOn = null;
        }
        function Np(a) {
            if (a.blockedOn !== null) return !1;
            for(var c = a.targetContainers; 0 < c.length;){
                var h = av(a.domEventName, a.eventSystemFlags, c[0], a.nativeEvent);
                if (h === null) {
                    h = a.nativeEvent;
                    var y = new h.constructor(h.type, h);
                    Fi = y, h.target.dispatchEvent(y), Fi = null;
                } else return c = Du(h), c !== null && iv(c), a.blockedOn = h, !1;
                c.shift();
            }
            return !0;
        }
        function PI(a, c, h) {
            Np(a) && h.delete(c);
        }
        function CL() {
            ov = !1, us !== null && Np(us) && (us = null), ds !== null && Np(ds) && (ds = null), fs !== null && Np(fs) && (fs = null), bu.forEach(PI), wu.forEach(PI);
        }
        function Su(a, c) {
            a.blockedOn === c && (a.blockedOn = null, ov || (ov = !0, t.unstable_scheduleCallback(t.unstable_NormalPriority, CL)));
        }
        function Iu(a) {
            function c(w) {
                return Su(w, a);
            }
            if (0 < wp.length) {
                Su(wp[0], a);
                for(var h = 1; h < wp.length; h++){
                    var y = wp[h];
                    y.blockedOn === a && (y.blockedOn = null);
                }
            }
            for(us !== null && Su(us, a), ds !== null && Su(ds, a), fs !== null && Su(fs, a), bu.forEach(c), wu.forEach(c), h = 0; h < ps.length; h++)y = ps[h], y.blockedOn === a && (y.blockedOn = null);
            for(; 0 < ps.length && (h = ps[0], h.blockedOn === null);)TI(h), h.blockedOn === null && ps.shift();
        }
        var Cl = C.ReactCurrentBatchConfig, Sp = !0;
        function jL(a, c, h, y) {
            var w = Ct, k = Cl.transition;
            Cl.transition = null;
            try {
                Ct = 1, sv(a, c, h, y);
            } finally{
                Ct = w, Cl.transition = k;
            }
        }
        function RL(a, c, h, y) {
            var w = Ct, k = Cl.transition;
            Cl.transition = null;
            try {
                Ct = 4, sv(a, c, h, y);
            } finally{
                Ct = w, Cl.transition = k;
            }
        }
        function sv(a, c, h, y) {
            if (Sp) {
                var w = av(a, c, h, y);
                if (w === null) Iv(a, c, y, Ip, h), OI(a, y);
                else if (kL(w, a, c, h, y)) y.stopPropagation();
                else if (OI(a, y), c & 4 && -1 < EL.indexOf(a)) {
                    for(; w !== null;){
                        var k = Du(w);
                        if (k !== null && kI(k), k = av(a, c, h, y), k === null && Iv(a, c, y, Ip, h), k === w) break;
                        w = k;
                    }
                    w !== null && y.stopPropagation();
                } else Iv(a, c, y, null, h);
            }
        }
        var Ip = null;
        function av(a, c, h, y) {
            if (Ip = null, a = ro(y), a = Na(a), a !== null) if (c = io(a), c === null) a = null;
            else if (h = c.tag, h === 13) {
                if (a = pp(c), a !== null) return a;
                a = null;
            } else if (h === 3) {
                if (c.stateNode.current.memoizedState.isDehydrated) return c.tag === 3 ? c.stateNode.containerInfo : null;
                a = null;
            } else c !== a && (a = null);
            return Ip = a, null;
        }
        function AI(a) {
            switch(a){
                case "cancel":
                case "click":
                case "close":
                case "contextmenu":
                case "copy":
                case "cut":
                case "auxclick":
                case "dblclick":
                case "dragend":
                case "dragstart":
                case "drop":
                case "focusin":
                case "focusout":
                case "input":
                case "invalid":
                case "keydown":
                case "keypress":
                case "keyup":
                case "mousedown":
                case "mouseup":
                case "paste":
                case "pause":
                case "play":
                case "pointercancel":
                case "pointerdown":
                case "pointerup":
                case "ratechange":
                case "reset":
                case "resize":
                case "seeked":
                case "submit":
                case "touchcancel":
                case "touchend":
                case "touchstart":
                case "volumechange":
                case "change":
                case "selectionchange":
                case "textInput":
                case "compositionstart":
                case "compositionend":
                case "compositionupdate":
                case "beforeblur":
                case "afterblur":
                case "beforeinput":
                case "blur":
                case "fullscreenchange":
                case "focus":
                case "hashchange":
                case "popstate":
                case "select":
                case "selectstart":
                    return 1;
                case "drag":
                case "dragenter":
                case "dragexit":
                case "dragleave":
                case "dragover":
                case "mousemove":
                case "mouseout":
                case "mouseover":
                case "pointermove":
                case "pointerout":
                case "pointerover":
                case "scroll":
                case "toggle":
                case "touchmove":
                case "wheel":
                case "mouseenter":
                case "mouseleave":
                case "pointerenter":
                case "pointerleave":
                    return 4;
                case "message":
                    switch(Gy()){
                        case yu:
                            return 1;
                        case bp:
                            return 4;
                        case Il:
                        case Qy:
                            return 16;
                        case vu:
                            return 536870912;
                        default:
                            return 16;
                    }
                default:
                    return 16;
            }
        }
        var hs = null, lv = null, _p = null;
        function FI() {
            if (_p) return _p;
            var a, c = lv, h = c.length, y, w = "value" in hs ? hs.value : hs.textContent, k = w.length;
            for(a = 0; a < h && c[a] === w[a]; a++);
            var W = h - a;
            for(y = 1; y <= W && c[h - y] === w[k - y]; y++);
            return _p = w.slice(a, 1 < y ? 1 - y : void 0);
        }
        function Ep(a) {
            var c = a.keyCode;
            return "charCode" in a ? (a = a.charCode, a === 0 && c === 13 && (a = 13)) : a = c, a === 10 && (a = 13), 32 <= a || a === 13 ? a : 0;
        }
        function kp() {
            return !0;
        }
        function DI() {
            return !1;
        }
        function Qr(a) {
            function c(h, y, w, k, W) {
                this._reactName = h, this._targetInst = w, this.type = y, this.nativeEvent = k, this.target = W, this.currentTarget = null;
                for(var Y in a)a.hasOwnProperty(Y) && (h = a[Y], this[Y] = h ? h(k) : k[Y]);
                return this.isDefaultPrevented = (k.defaultPrevented != null ? k.defaultPrevented : k.returnValue === !1) ? kp : DI, this.isPropagationStopped = DI, this;
            }
            return G(c.prototype, {
                preventDefault: function() {
                    this.defaultPrevented = !0;
                    var h = this.nativeEvent;
                    h && (h.preventDefault ? h.preventDefault() : typeof h.returnValue != "unknown" && (h.returnValue = !1), this.isDefaultPrevented = kp);
                },
                stopPropagation: function() {
                    var h = this.nativeEvent;
                    h && (h.stopPropagation ? h.stopPropagation() : typeof h.cancelBubble != "unknown" && (h.cancelBubble = !0), this.isPropagationStopped = kp);
                },
                persist: function() {},
                isPersistent: kp
            }), c;
        }
        var jl = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function(a) {
                return a.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0
        }, cv = Qr(jl), _u = G({}, jl, {
            view: 0,
            detail: 0
        }), OL = Qr(_u), uv, dv, Eu, Cp = G({}, _u, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: pv,
            button: 0,
            buttons: 0,
            relatedTarget: function(a) {
                return a.relatedTarget === void 0 ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
            },
            movementX: function(a) {
                return "movementX" in a ? a.movementX : (a !== Eu && (Eu && a.type === "mousemove" ? (uv = a.screenX - Eu.screenX, dv = a.screenY - Eu.screenY) : dv = uv = 0, Eu = a), uv);
            },
            movementY: function(a) {
                return "movementY" in a ? a.movementY : dv;
            }
        }), MI = Qr(Cp), TL = G({}, Cp, {
            dataTransfer: 0
        }), PL = Qr(TL), AL = G({}, _u, {
            relatedTarget: 0
        }), fv = Qr(AL), FL = G({}, jl, {
            animationName: 0,
            elapsedTime: 0,
            pseudoElement: 0
        }), DL = Qr(FL), ML = G({}, jl, {
            clipboardData: function(a) {
                return "clipboardData" in a ? a.clipboardData : window.clipboardData;
            }
        }), LL = Qr(ML), $L = G({}, jl, {
            data: 0
        }), LI = Qr($L), qL = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified"
        }, BL = {
            8: "Backspace",
            9: "Tab",
            12: "Clear",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            19: "Pause",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            45: "Insert",
            46: "Delete",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "NumLock",
            145: "ScrollLock",
            224: "Meta"
        }, zL = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey"
        };
        function WL(a) {
            var c = this.nativeEvent;
            return c.getModifierState ? c.getModifierState(a) : (a = zL[a]) ? !!c[a] : !1;
        }
        function pv() {
            return WL;
        }
        var VL = G({}, _u, {
            key: function(a) {
                if (a.key) {
                    var c = qL[a.key] || a.key;
                    if (c !== "Unidentified") return c;
                }
                return a.type === "keypress" ? (a = Ep(a), a === 13 ? "Enter" : String.fromCharCode(a)) : a.type === "keydown" || a.type === "keyup" ? BL[a.keyCode] || "Unidentified" : "";
            },
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: pv,
            charCode: function(a) {
                return a.type === "keypress" ? Ep(a) : 0;
            },
            keyCode: function(a) {
                return a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
            },
            which: function(a) {
                return a.type === "keypress" ? Ep(a) : a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
            }
        }), UL = Qr(VL), HL = G({}, Cp, {
            pointerId: 0,
            width: 0,
            height: 0,
            pressure: 0,
            tangentialPressure: 0,
            tiltX: 0,
            tiltY: 0,
            twist: 0,
            pointerType: 0,
            isPrimary: 0
        }), $I = Qr(HL), KL = G({}, _u, {
            touches: 0,
            targetTouches: 0,
            changedTouches: 0,
            altKey: 0,
            metaKey: 0,
            ctrlKey: 0,
            shiftKey: 0,
            getModifierState: pv
        }), GL = Qr(KL), QL = G({}, jl, {
            propertyName: 0,
            elapsedTime: 0,
            pseudoElement: 0
        }), JL = Qr(QL), ZL = G({}, Cp, {
            deltaX: function(a) {
                return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
            },
            deltaY: function(a) {
                return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
            },
            deltaZ: 0,
            deltaMode: 0
        }), YL = Qr(ZL), XL = [
            9,
            13,
            27,
            32
        ], hv = l && "CompositionEvent" in window, ku = null;
        l && "documentMode" in document && (ku = document.documentMode);
        var e2 = l && "TextEvent" in window && !ku, qI = l && (!hv || ku && 8 < ku && 11 >= ku), BI = " ", zI = !1;
        function WI(a, c) {
            switch(a){
                case "keyup":
                    return XL.indexOf(c.keyCode) !== -1;
                case "keydown":
                    return c.keyCode !== 229;
                case "keypress":
                case "mousedown":
                case "focusout":
                    return !0;
                default:
                    return !1;
            }
        }
        function VI(a) {
            return a = a.detail, typeof a == "object" && "data" in a ? a.data : null;
        }
        var Rl = !1;
        function t2(a, c) {
            switch(a){
                case "compositionend":
                    return VI(c);
                case "keypress":
                    return c.which !== 32 ? null : (zI = !0, BI);
                case "textInput":
                    return a = c.data, a === BI && zI ? null : a;
                default:
                    return null;
            }
        }
        function n2(a, c) {
            if (Rl) return a === "compositionend" || !hv && WI(a, c) ? (a = FI(), _p = lv = hs = null, Rl = !1, a) : null;
            switch(a){
                case "paste":
                    return null;
                case "keypress":
                    if (!(c.ctrlKey || c.altKey || c.metaKey) || c.ctrlKey && c.altKey) {
                        if (c.char && 1 < c.char.length) return c.char;
                        if (c.which) return String.fromCharCode(c.which);
                    }
                    return null;
                case "compositionend":
                    return qI && c.locale !== "ko" ? null : c.data;
                default:
                    return null;
            }
        }
        var r2 = {
            color: !0,
            date: !0,
            datetime: !0,
            "datetime-local": !0,
            email: !0,
            month: !0,
            number: !0,
            password: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0
        };
        function UI(a) {
            var c = a && a.nodeName && a.nodeName.toLowerCase();
            return c === "input" ? !!r2[a.type] : c === "textarea";
        }
        function HI(a, c, h, y) {
            pu(y), c = Pp(c, "onChange"), 0 < c.length && (h = new cv("onChange", "change", null, h, y), a.push({
                event: h,
                listeners: c
            }));
        }
        var Cu = null, ju = null;
        function i2(a) {
            u1(a, 0);
        }
        function jp(a) {
            var c = Fl(a);
            if (ge(c)) return a;
        }
        function o2(a, c) {
            if (a === "change") return c;
        }
        var KI = !1;
        if (l) {
            var mv;
            if (l) {
                var gv = "oninput" in document;
                if (!gv) {
                    var GI = document.createElement("div");
                    GI.setAttribute("oninput", "return;"), gv = typeof GI.oninput == "function";
                }
                mv = gv;
            } else mv = !1;
            KI = mv && (!document.documentMode || 9 < document.documentMode);
        }
        function QI() {
            Cu && (Cu.detachEvent("onpropertychange", JI), ju = Cu = null);
        }
        function JI(a) {
            if (a.propertyName === "value" && jp(ju)) {
                var c = [];
                HI(c, ju, a, ro(a)), dp(i2, c);
            }
        }
        function s2(a, c, h) {
            a === "focusin" ? (QI(), Cu = c, ju = h, Cu.attachEvent("onpropertychange", JI)) : a === "focusout" && QI();
        }
        function a2(a) {
            if (a === "selectionchange" || a === "keyup" || a === "keydown") return jp(ju);
        }
        function l2(a, c) {
            if (a === "click") return jp(c);
        }
        function c2(a, c) {
            if (a === "input" || a === "change") return jp(c);
        }
        function u2(a, c) {
            return a === c && (a !== 0 || 1 / a === 1 / c) || a !== a && c !== c;
        }
        var Di = typeof Object.is == "function" ? Object.is : u2;
        function Ru(a, c) {
            if (Di(a, c)) return !0;
            if (typeof a != "object" || a === null || typeof c != "object" || c === null) return !1;
            var h = Object.keys(a), y = Object.keys(c);
            if (h.length !== y.length) return !1;
            for(y = 0; y < h.length; y++){
                var w = h[y];
                if (!u.call(c, w) || !Di(a[w], c[w])) return !1;
            }
            return !0;
        }
        function ZI(a) {
            for(; a && a.firstChild;)a = a.firstChild;
            return a;
        }
        function YI(a, c) {
            var h = ZI(a);
            a = 0;
            for(var y; h;){
                if (h.nodeType === 3) {
                    if (y = a + h.textContent.length, a <= c && y >= c) return {
                        node: h,
                        offset: c - a
                    };
                    a = y;
                }
                e: {
                    for(; h;){
                        if (h.nextSibling) {
                            h = h.nextSibling;
                            break e;
                        }
                        h = h.parentNode;
                    }
                    h = void 0;
                }
                h = ZI(h);
            }
        }
        function XI(a, c) {
            return a && c ? a === c ? !0 : a && a.nodeType === 3 ? !1 : c && c.nodeType === 3 ? XI(a, c.parentNode) : "contains" in a ? a.contains(c) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(c) & 16) : !1 : !1;
        }
        function e1() {
            for(var a = window, c = we(); c instanceof a.HTMLIFrameElement;){
                try {
                    var h = typeof c.contentWindow.location.href == "string";
                } catch  {
                    h = !1;
                }
                if (h) a = c.contentWindow;
                else break;
                c = we(a.document);
            }
            return c;
        }
        function yv(a) {
            var c = a && a.nodeName && a.nodeName.toLowerCase();
            return c && (c === "input" && (a.type === "text" || a.type === "search" || a.type === "tel" || a.type === "url" || a.type === "password") || c === "textarea" || a.contentEditable === "true");
        }
        function d2(a) {
            var c = e1(), h = a.focusedElem, y = a.selectionRange;
            if (c !== h && h && h.ownerDocument && XI(h.ownerDocument.documentElement, h)) {
                if (y !== null && yv(h)) {
                    if (c = y.start, a = y.end, a === void 0 && (a = c), "selectionStart" in h) h.selectionStart = c, h.selectionEnd = Math.min(a, h.value.length);
                    else if (a = (c = h.ownerDocument || document) && c.defaultView || window, a.getSelection) {
                        a = a.getSelection();
                        var w = h.textContent.length, k = Math.min(y.start, w);
                        y = y.end === void 0 ? k : Math.min(y.end, w), !a.extend && k > y && (w = y, y = k, k = w), w = YI(h, k);
                        var W = YI(h, y);
                        w && W && (a.rangeCount !== 1 || a.anchorNode !== w.node || a.anchorOffset !== w.offset || a.focusNode !== W.node || a.focusOffset !== W.offset) && (c = c.createRange(), c.setStart(w.node, w.offset), a.removeAllRanges(), k > y ? (a.addRange(c), a.extend(W.node, W.offset)) : (c.setEnd(W.node, W.offset), a.addRange(c)));
                    }
                }
                for(c = [], a = h; a = a.parentNode;)a.nodeType === 1 && c.push({
                    element: a,
                    left: a.scrollLeft,
                    top: a.scrollTop
                });
                for(typeof h.focus == "function" && h.focus(), h = 0; h < c.length; h++)a = c[h], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
            }
        }
        var f2 = l && "documentMode" in document && 11 >= document.documentMode, Ol = null, vv = null, Ou = null, xv = !1;
        function t1(a, c, h) {
            var y = h.window === h ? h.document : h.nodeType === 9 ? h : h.ownerDocument;
            xv || Ol == null || Ol !== we(y) || (y = Ol, "selectionStart" in y && yv(y) ? y = {
                start: y.selectionStart,
                end: y.selectionEnd
            } : (y = (y.ownerDocument && y.ownerDocument.defaultView || window).getSelection(), y = {
                anchorNode: y.anchorNode,
                anchorOffset: y.anchorOffset,
                focusNode: y.focusNode,
                focusOffset: y.focusOffset
            }), Ou && Ru(Ou, y) || (Ou = y, y = Pp(vv, "onSelect"), 0 < y.length && (c = new cv("onSelect", "select", null, c, h), a.push({
                event: c,
                listeners: y
            }), c.target = Ol)));
        }
        function Rp(a, c) {
            var h = {};
            return h[a.toLowerCase()] = c.toLowerCase(), h["Webkit" + a] = "webkit" + c, h["Moz" + a] = "moz" + c, h;
        }
        var Tl = {
            animationend: Rp("Animation", "AnimationEnd"),
            animationiteration: Rp("Animation", "AnimationIteration"),
            animationstart: Rp("Animation", "AnimationStart"),
            transitionend: Rp("Transition", "TransitionEnd")
        }, bv = {}, n1 = {};
        l && (n1 = document.createElement("div").style, "AnimationEvent" in window || (delete Tl.animationend.animation, delete Tl.animationiteration.animation, delete Tl.animationstart.animation), "TransitionEvent" in window || delete Tl.transitionend.transition);
        function Op(a) {
            if (bv[a]) return bv[a];
            if (!Tl[a]) return a;
            var c = Tl[a], h;
            for(h in c)if (c.hasOwnProperty(h) && h in n1) return bv[a] = c[h];
            return a;
        }
        var r1 = Op("animationend"), i1 = Op("animationiteration"), o1 = Op("animationstart"), s1 = Op("transitionend"), a1 = new Map, l1 = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
        function ms(a, c) {
            a1.set(a, c), o(c, [
                a
            ]);
        }
        for(var wv = 0; wv < l1.length; wv++){
            var Nv = l1[wv], p2 = Nv.toLowerCase(), h2 = Nv[0].toUpperCase() + Nv.slice(1);
            ms(p2, "on" + h2);
        }
        ms(r1, "onAnimationEnd"), ms(i1, "onAnimationIteration"), ms(o1, "onAnimationStart"), ms("dblclick", "onDoubleClick"), ms("focusin", "onFocus"), ms("focusout", "onBlur"), ms(s1, "onTransitionEnd"), s("onMouseEnter", [
            "mouseout",
            "mouseover"
        ]), s("onMouseLeave", [
            "mouseout",
            "mouseover"
        ]), s("onPointerEnter", [
            "pointerout",
            "pointerover"
        ]), s("onPointerLeave", [
            "pointerout",
            "pointerover"
        ]), o("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), o("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), o("onBeforeInput", [
            "compositionend",
            "keypress",
            "textInput",
            "paste"
        ]), o("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), o("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), o("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
        var Tu = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), m2 = new Set("cancel close invalid load scroll toggle".split(" ").concat(Tu));
        function c1(a, c, h) {
            var y = a.type || "unknown-event";
            a.currentTarget = h, fp(y, c, void 0, a), a.currentTarget = null;
        }
        function u1(a, c) {
            c = (c & 4) !== 0;
            for(var h = 0; h < a.length; h++){
                var y = a[h], w = y.event;
                y = y.listeners;
                e: {
                    var k = void 0;
                    if (c) for(var W = y.length - 1; 0 <= W; W--){
                        var Y = y[W], re = Y.instance, he = Y.currentTarget;
                        if (Y = Y.listener, re !== k && w.isPropagationStopped()) break e;
                        c1(w, Y, he), k = re;
                    }
                    else for(W = 0; W < y.length; W++){
                        if (Y = y[W], re = Y.instance, he = Y.currentTarget, Y = Y.listener, re !== k && w.isPropagationStopped()) break e;
                        c1(w, Y, he), k = re;
                    }
                }
            }
            if (Sl) throw a = gu, Sl = !1, gu = null, a;
        }
        function Ut(a, c) {
            var h = c[Rv];
            h === void 0 && (h = c[Rv] = new Set);
            var y = a + "__bubble";
            h.has(y) || (d1(c, a, 2, !1), h.add(y));
        }
        function Sv(a, c, h) {
            var y = 0;
            c && (y |= 4), d1(h, a, y, c);
        }
        var Tp = "_reactListening" + Math.random().toString(36).slice(2);
        function Pu(a) {
            if (!a[Tp]) {
                a[Tp] = !0, r.forEach(function(h) {
                    h !== "selectionchange" && (m2.has(h) || Sv(h, !1, a), Sv(h, !0, a));
                });
                var c = a.nodeType === 9 ? a : a.ownerDocument;
                c === null || c[Tp] || (c[Tp] = !0, Sv("selectionchange", !1, c));
            }
        }
        function d1(a, c, h, y) {
            switch(AI(c)){
                case 1:
                    var w = jL;
                    break;
                case 4:
                    w = RL;
                    break;
                default:
                    w = sv;
            }
            h = w.bind(null, c, h, a), w = void 0, !mu || c !== "touchstart" && c !== "touchmove" && c !== "wheel" || (w = !0), y ? w !== void 0 ? a.addEventListener(c, h, {
                capture: !0,
                passive: w
            }) : a.addEventListener(c, h, !0) : w !== void 0 ? a.addEventListener(c, h, {
                passive: w
            }) : a.addEventListener(c, h, !1);
        }
        function Iv(a, c, h, y, w) {
            var k = y;
            if (!(c & 1) && !(c & 2) && y !== null) e: for(;;){
                if (y === null) return;
                var W = y.tag;
                if (W === 3 || W === 4) {
                    var Y = y.stateNode.containerInfo;
                    if (Y === w || Y.nodeType === 8 && Y.parentNode === w) break;
                    if (W === 4) for(W = y.return; W !== null;){
                        var re = W.tag;
                        if ((re === 3 || re === 4) && (re = W.stateNode.containerInfo, re === w || re.nodeType === 8 && re.parentNode === w)) return;
                        W = W.return;
                    }
                    for(; Y !== null;){
                        if (W = Na(Y), W === null) return;
                        if (re = W.tag, re === 5 || re === 6) {
                            y = k = W;
                            continue e;
                        }
                        Y = Y.parentNode;
                    }
                }
                y = y.return;
            }
            dp(function() {
                var he = k, Ie = ro(h), _e = [];
                e: {
                    var Ne = a1.get(a);
                    if (Ne !== void 0) {
                        var Ae = cv, ze = a;
                        switch(a){
                            case "keypress":
                                if (Ep(h) === 0) break e;
                            case "keydown":
                            case "keyup":
                                Ae = UL;
                                break;
                            case "focusin":
                                ze = "focus", Ae = fv;
                                break;
                            case "focusout":
                                ze = "blur", Ae = fv;
                                break;
                            case "beforeblur":
                            case "afterblur":
                                Ae = fv;
                                break;
                            case "click":
                                if (h.button === 2) break e;
                            case "auxclick":
                            case "dblclick":
                            case "mousedown":
                            case "mousemove":
                            case "mouseup":
                            case "mouseout":
                            case "mouseover":
                            case "contextmenu":
                                Ae = MI;
                                break;
                            case "drag":
                            case "dragend":
                            case "dragenter":
                            case "dragexit":
                            case "dragleave":
                            case "dragover":
                            case "dragstart":
                            case "drop":
                                Ae = PL;
                                break;
                            case "touchcancel":
                            case "touchend":
                            case "touchmove":
                            case "touchstart":
                                Ae = GL;
                                break;
                            case r1:
                            case i1:
                            case o1:
                                Ae = DL;
                                break;
                            case s1:
                                Ae = JL;
                                break;
                            case "scroll":
                                Ae = OL;
                                break;
                            case "wheel":
                                Ae = YL;
                                break;
                            case "copy":
                            case "cut":
                            case "paste":
                                Ae = LL;
                                break;
                            case "gotpointercapture":
                            case "lostpointercapture":
                            case "pointercancel":
                            case "pointerdown":
                            case "pointermove":
                            case "pointerout":
                            case "pointerover":
                            case "pointerup":
                                Ae = $I;
                        }
                        var We = (c & 4) !== 0, xn = !We && a === "scroll", ue = We ? Ne !== null ? Ne + "Capture" : null : Ne;
                        We = [];
                        for(var se = he, fe; se !== null;){
                            fe = se;
                            var Ce = fe.stateNode;
                            if (fe.tag === 5 && Ce !== null && (fe = Ce, ue !== null && (Ce = ya(se, ue), Ce != null && We.push(Au(se, Ce, fe)))), xn) break;
                            se = se.return;
                        }
                        0 < We.length && (Ne = new Ae(Ne, ze, null, h, Ie), _e.push({
                            event: Ne,
                            listeners: We
                        }));
                    }
                }
                if (!(c & 7)) {
                    e: {
                        if (Ne = a === "mouseover" || a === "pointerover", Ae = a === "mouseout" || a === "pointerout", Ne && h !== Fi && (ze = h.relatedTarget || h.fromElement) && (Na(ze) || ze[jo])) break e;
                        if ((Ae || Ne) && (Ne = Ie.window === Ie ? Ie : (Ne = Ie.ownerDocument) ? Ne.defaultView || Ne.parentWindow : window, Ae ? (ze = h.relatedTarget || h.toElement, Ae = he, ze = ze ? Na(ze) : null, ze !== null && (xn = io(ze), ze !== xn || ze.tag !== 5 && ze.tag !== 6) && (ze = null)) : (Ae = null, ze = he), Ae !== ze)) {
                            if (We = MI, Ce = "onMouseLeave", ue = "onMouseEnter", se = "mouse", (a === "pointerout" || a === "pointerover") && (We = $I, Ce = "onPointerLeave", ue = "onPointerEnter", se = "pointer"), xn = Ae == null ? Ne : Fl(Ae), fe = ze == null ? Ne : Fl(ze), Ne = new We(Ce, se + "leave", Ae, h, Ie), Ne.target = xn, Ne.relatedTarget = fe, Ce = null, Na(Ie) === he && (We = new We(ue, se + "enter", ze, h, Ie), We.target = fe, We.relatedTarget = xn, Ce = We), xn = Ce, Ae && ze) t: {
                                for(We = Ae, ue = ze, se = 0, fe = We; fe; fe = Pl(fe))se++;
                                for(fe = 0, Ce = ue; Ce; Ce = Pl(Ce))fe++;
                                for(; 0 < se - fe;)We = Pl(We), se--;
                                for(; 0 < fe - se;)ue = Pl(ue), fe--;
                                for(; se--;){
                                    if (We === ue || ue !== null && We === ue.alternate) break t;
                                    We = Pl(We), ue = Pl(ue);
                                }
                                We = null;
                            }
                            else We = null;
                            Ae !== null && f1(_e, Ne, Ae, We, !1), ze !== null && xn !== null && f1(_e, xn, ze, We, !0);
                        }
                    }
                    e: {
                        if (Ne = he ? Fl(he) : window, Ae = Ne.nodeName && Ne.nodeName.toLowerCase(), Ae === "select" || Ae === "input" && Ne.type === "file") var Ve = o2;
                        else if (UI(Ne)) if (KI) Ve = c2;
                        else {
                            Ve = a2;
                            var Je = s2;
                        }
                        else (Ae = Ne.nodeName) && Ae.toLowerCase() === "input" && (Ne.type === "checkbox" || Ne.type === "radio") && (Ve = l2);
                        if (Ve && (Ve = Ve(a, he))) {
                            HI(_e, Ve, h, Ie);
                            break e;
                        }
                        Je && Je(a, Ne, he), a === "focusout" && (Je = Ne._wrapperState) && Je.controlled && Ne.type === "number" && ne(Ne, "number", Ne.value);
                    }
                    switch(Je = he ? Fl(he) : window, a){
                        case "focusin":
                            (UI(Je) || Je.contentEditable === "true") && (Ol = Je, vv = he, Ou = null);
                            break;
                        case "focusout":
                            Ou = vv = Ol = null;
                            break;
                        case "mousedown":
                            xv = !0;
                            break;
                        case "contextmenu":
                        case "mouseup":
                        case "dragend":
                            xv = !1, t1(_e, h, Ie);
                            break;
                        case "selectionchange":
                            if (f2) break;
                        case "keydown":
                        case "keyup":
                            t1(_e, h, Ie);
                    }
                    var Ze;
                    if (hv) e: {
                        switch(a){
                            case "compositionstart":
                                var rt = "onCompositionStart";
                                break e;
                            case "compositionend":
                                rt = "onCompositionEnd";
                                break e;
                            case "compositionupdate":
                                rt = "onCompositionUpdate";
                                break e;
                        }
                        rt = void 0;
                    }
                    else Rl ? WI(a, h) && (rt = "onCompositionEnd") : a === "keydown" && h.keyCode === 229 && (rt = "onCompositionStart");
                    rt && (qI && h.locale !== "ko" && (Rl || rt !== "onCompositionStart" ? rt === "onCompositionEnd" && Rl && (Ze = FI()) : (hs = Ie, lv = "value" in hs ? hs.value : hs.textContent, Rl = !0)), Je = Pp(he, rt), 0 < Je.length && (rt = new LI(rt, a, null, h, Ie), _e.push({
                        event: rt,
                        listeners: Je
                    }), Ze ? rt.data = Ze : (Ze = VI(h), Ze !== null && (rt.data = Ze)))), (Ze = e2 ? t2(a, h) : n2(a, h)) && (he = Pp(he, "onBeforeInput"), 0 < he.length && (Ie = new LI("onBeforeInput", "beforeinput", null, h, Ie), _e.push({
                        event: Ie,
                        listeners: he
                    }), Ie.data = Ze));
                }
                u1(_e, c);
            });
        }
        function Au(a, c, h) {
            return {
                instance: a,
                listener: c,
                currentTarget: h
            };
        }
        function Pp(a, c) {
            for(var h = c + "Capture", y = []; a !== null;){
                var w = a, k = w.stateNode;
                w.tag === 5 && k !== null && (w = k, k = ya(a, h), k != null && y.unshift(Au(a, k, w)), k = ya(a, c), k != null && y.push(Au(a, k, w))), a = a.return;
            }
            return y;
        }
        function Pl(a) {
            if (a === null) return null;
            do a = a.return;
            while (a && a.tag !== 5);
            return a || null;
        }
        function f1(a, c, h, y, w) {
            for(var k = c._reactName, W = []; h !== null && h !== y;){
                var Y = h, re = Y.alternate, he = Y.stateNode;
                if (re !== null && re === y) break;
                Y.tag === 5 && he !== null && (Y = he, w ? (re = ya(h, k), re != null && W.unshift(Au(h, re, Y))) : w || (re = ya(h, k), re != null && W.push(Au(h, re, Y)))), h = h.return;
            }
            W.length !== 0 && a.push({
                event: c,
                listeners: W
            });
        }
        var g2 = /\r\n?/g, y2 = /\u0000|\uFFFD/g;
        function p1(a) {
            return (typeof a == "string" ? a : "" + a).replace(g2, `
`).replace(y2, "");
        }
        function Ap(a, c, h) {
            if (c = p1(c), p1(a) !== c && h) throw Error(n(425));
        }
        function Fp() {}
        var _v = null, Ev = null;
        function kv(a, c) {
            return a === "textarea" || a === "noscript" || typeof c.children == "string" || typeof c.children == "number" || typeof c.dangerouslySetInnerHTML == "object" && c.dangerouslySetInnerHTML !== null && c.dangerouslySetInnerHTML.__html != null;
        }
        var Cv = typeof setTimeout == "function" ? setTimeout : void 0, v2 = typeof clearTimeout == "function" ? clearTimeout : void 0, h1 = typeof Promise == "function" ? Promise : void 0, x2 = typeof queueMicrotask == "function" ? queueMicrotask : typeof h1 < "u" ? function(a) {
            return h1.resolve(null).then(a).catch(b2);
        } : Cv;
        function b2(a) {
            setTimeout(function() {
                throw a;
            });
        }
        function jv(a, c) {
            var h = c, y = 0;
            do {
                var w = h.nextSibling;
                if (a.removeChild(h), w && w.nodeType === 8) if (h = w.data, h === "/$") {
                    if (y === 0) {
                        a.removeChild(w), Iu(c);
                        return;
                    }
                    y--;
                } else h !== "$" && h !== "$?" && h !== "$!" || y++;
                h = w;
            }while (h);
            Iu(c);
        }
        function gs(a) {
            for(; a != null; a = a.nextSibling){
                var c = a.nodeType;
                if (c === 1 || c === 3) break;
                if (c === 8) {
                    if (c = a.data, c === "$" || c === "$!" || c === "$?") break;
                    if (c === "/$") return null;
                }
            }
            return a;
        }
        function m1(a) {
            a = a.previousSibling;
            for(var c = 0; a;){
                if (a.nodeType === 8) {
                    var h = a.data;
                    if (h === "$" || h === "$!" || h === "$?") {
                        if (c === 0) return a;
                        c--;
                    } else h === "/$" && c++;
                }
                a = a.previousSibling;
            }
            return null;
        }
        var Al = Math.random().toString(36).slice(2), oo = "__reactFiber$" + Al, Fu = "__reactProps$" + Al, jo = "__reactContainer$" + Al, Rv = "__reactEvents$" + Al, w2 = "__reactListeners$" + Al, N2 = "__reactHandles$" + Al;
        function Na(a) {
            var c = a[oo];
            if (c) return c;
            for(var h = a.parentNode; h;){
                if (c = h[jo] || h[oo]) {
                    if (h = c.alternate, c.child !== null || h !== null && h.child !== null) for(a = m1(a); a !== null;){
                        if (h = a[oo]) return h;
                        a = m1(a);
                    }
                    return c;
                }
                a = h, h = a.parentNode;
            }
            return null;
        }
        function Du(a) {
            return a = a[oo] || a[jo], !a || a.tag !== 5 && a.tag !== 6 && a.tag !== 13 && a.tag !== 3 ? null : a;
        }
        function Fl(a) {
            if (a.tag === 5 || a.tag === 6) return a.stateNode;
            throw Error(n(33));
        }
        function Dp(a) {
            return a[Fu] || null;
        }
        var Ov = [], Dl = -1;
        function ys(a) {
            return {
                current: a
            };
        }
        function Ht(a) {
            0 > Dl || (a.current = Ov[Dl], Ov[Dl] = null, Dl--);
        }
        function Mt(a, c) {
            Dl++, Ov[Dl] = a.current, a.current = c;
        }
        var vs = {}, tr = ys(vs), Cr = ys(!1), Sa = vs;
        function Ml(a, c) {
            var h = a.type.contextTypes;
            if (!h) return vs;
            var y = a.stateNode;
            if (y && y.__reactInternalMemoizedUnmaskedChildContext === c) return y.__reactInternalMemoizedMaskedChildContext;
            var w = {}, k;
            for(k in h)w[k] = c[k];
            return y && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = c, a.__reactInternalMemoizedMaskedChildContext = w), w;
        }
        function jr(a) {
            return a = a.childContextTypes, a != null;
        }
        function Mp() {
            Ht(Cr), Ht(tr);
        }
        function g1(a, c, h) {
            if (tr.current !== vs) throw Error(n(168));
            Mt(tr, c), Mt(Cr, h);
        }
        function y1(a, c, h) {
            var y = a.stateNode;
            if (c = c.childContextTypes, typeof y.getChildContext != "function") return h;
            y = y.getChildContext();
            for(var w in y)if (!(w in c)) throw Error(n(108, ae(a) || "Unknown", w));
            return G({}, h, y);
        }
        function Lp(a) {
            return a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || vs, Sa = tr.current, Mt(tr, a), Mt(Cr, Cr.current), !0;
        }
        function v1(a, c, h) {
            var y = a.stateNode;
            if (!y) throw Error(n(169));
            h ? (a = y1(a, c, Sa), y.__reactInternalMemoizedMergedChildContext = a, Ht(Cr), Ht(tr), Mt(tr, a)) : Ht(Cr), Mt(Cr, h);
        }
        var Ro = null, $p = !1, Tv = !1;
        function x1(a) {
            Ro === null ? Ro = [
                a
            ] : Ro.push(a);
        }
        function S2(a) {
            $p = !0, x1(a);
        }
        function xs() {
            if (!Tv && Ro !== null) {
                Tv = !0;
                var a = 0, c = Ct;
                try {
                    var h = Ro;
                    for(Ct = 1; a < h.length; a++){
                        var y = h[a];
                        do y = y(!0);
                        while (y !== null);
                    }
                    Ro = null, $p = !1;
                } catch (w) {
                    throw Ro !== null && (Ro = Ro.slice(a + 1)), yp(yu, xs), w;
                } finally{
                    Ct = c, Tv = !1;
                }
            }
            return null;
        }
        var Ll = [], $l = 0, qp = null, Bp = 0, yi = [], vi = 0, Ia = null, Oo = 1, To = "";
        function _a(a, c) {
            Ll[$l++] = Bp, Ll[$l++] = qp, qp = a, Bp = c;
        }
        function b1(a, c, h) {
            yi[vi++] = Oo, yi[vi++] = To, yi[vi++] = Ia, Ia = a;
            var y = Oo;
            a = To;
            var w = 32 - Gr(y) - 1;
            y &= ~(1 << w), h += 1;
            var k = 32 - Gr(c) + w;
            if (30 < k) {
                var W = w - w % 5;
                k = (y & (1 << W) - 1).toString(32), y >>= W, w -= W, Oo = 1 << 32 - Gr(c) + w | h << w | y, To = k + a;
            } else Oo = 1 << k | h << w | y, To = a;
        }
        function Pv(a) {
            a.return !== null && (_a(a, 1), b1(a, 1, 0));
        }
        function Av(a) {
            for(; a === qp;)qp = Ll[--$l], Ll[$l] = null, Bp = Ll[--$l], Ll[$l] = null;
            for(; a === Ia;)Ia = yi[--vi], yi[vi] = null, To = yi[--vi], yi[vi] = null, Oo = yi[--vi], yi[vi] = null;
        }
        var Jr = null, Zr = null, Qt = !1, Mi = null;
        function w1(a, c) {
            var h = Ni(5, null, null, 0);
            h.elementType = "DELETED", h.stateNode = c, h.return = a, c = a.deletions, c === null ? (a.deletions = [
                h
            ], a.flags |= 16) : c.push(h);
        }
        function N1(a, c) {
            switch(a.tag){
                case 5:
                    var h = a.type;
                    return c = c.nodeType !== 1 || h.toLowerCase() !== c.nodeName.toLowerCase() ? null : c, c !== null ? (a.stateNode = c, Jr = a, Zr = gs(c.firstChild), !0) : !1;
                case 6:
                    return c = a.pendingProps === "" || c.nodeType !== 3 ? null : c, c !== null ? (a.stateNode = c, Jr = a, Zr = null, !0) : !1;
                case 13:
                    return c = c.nodeType !== 8 ? null : c, c !== null ? (h = Ia !== null ? {
                        id: Oo,
                        overflow: To
                    } : null, a.memoizedState = {
                        dehydrated: c,
                        treeContext: h,
                        retryLane: 1073741824
                    }, h = Ni(18, null, null, 0), h.stateNode = c, h.return = a, a.child = h, Jr = a, Zr = null, !0) : !1;
                default:
                    return !1;
            }
        }
        function Fv(a) {
            return (a.mode & 1) !== 0 && (a.flags & 128) === 0;
        }
        function Dv(a) {
            if (Qt) {
                var c = Zr;
                if (c) {
                    var h = c;
                    if (!N1(a, c)) {
                        if (Fv(a)) throw Error(n(418));
                        c = gs(h.nextSibling);
                        var y = Jr;
                        c && N1(a, c) ? w1(y, h) : (a.flags = a.flags & -4097 | 2, Qt = !1, Jr = a);
                    }
                } else {
                    if (Fv(a)) throw Error(n(418));
                    a.flags = a.flags & -4097 | 2, Qt = !1, Jr = a;
                }
            }
        }
        function S1(a) {
            for(a = a.return; a !== null && a.tag !== 5 && a.tag !== 3 && a.tag !== 13;)a = a.return;
            Jr = a;
        }
        function zp(a) {
            if (a !== Jr) return !1;
            if (!Qt) return S1(a), Qt = !0, !1;
            var c;
            if ((c = a.tag !== 3) && !(c = a.tag !== 5) && (c = a.type, c = c !== "head" && c !== "body" && !kv(a.type, a.memoizedProps)), c && (c = Zr)) {
                if (Fv(a)) throw I1(), Error(n(418));
                for(; c;)w1(a, c), c = gs(c.nextSibling);
            }
            if (S1(a), a.tag === 13) {
                if (a = a.memoizedState, a = a !== null ? a.dehydrated : null, !a) throw Error(n(317));
                e: {
                    for(a = a.nextSibling, c = 0; a;){
                        if (a.nodeType === 8) {
                            var h = a.data;
                            if (h === "/$") {
                                if (c === 0) {
                                    Zr = gs(a.nextSibling);
                                    break e;
                                }
                                c--;
                            } else h !== "$" && h !== "$!" && h !== "$?" || c++;
                        }
                        a = a.nextSibling;
                    }
                    Zr = null;
                }
            } else Zr = Jr ? gs(a.stateNode.nextSibling) : null;
            return !0;
        }
        function I1() {
            for(var a = Zr; a;)a = gs(a.nextSibling);
        }
        function ql() {
            Zr = Jr = null, Qt = !1;
        }
        function Mv(a) {
            Mi === null ? Mi = [
                a
            ] : Mi.push(a);
        }
        var I2 = C.ReactCurrentBatchConfig;
        function Mu(a, c, h) {
            if (a = h.ref, a !== null && typeof a != "function" && typeof a != "object") {
                if (h._owner) {
                    if (h = h._owner, h) {
                        if (h.tag !== 1) throw Error(n(309));
                        var y = h.stateNode;
                    }
                    if (!y) throw Error(n(147, a));
                    var w = y, k = "" + a;
                    return c !== null && c.ref !== null && typeof c.ref == "function" && c.ref._stringRef === k ? c.ref : (c = function(W) {
                        var Y = w.refs;
                        W === null ? delete Y[k] : Y[k] = W;
                    }, c._stringRef = k, c);
                }
                if (typeof a != "string") throw Error(n(284));
                if (!h._owner) throw Error(n(290, a));
            }
            return a;
        }
        function Wp(a, c) {
            throw a = Object.prototype.toString.call(c), Error(n(31, a === "[object Object]" ? "object with keys {" + Object.keys(c).join(", ") + "}" : a));
        }
        function _1(a) {
            var c = a._init;
            return c(a._payload);
        }
        function E1(a) {
            function c(ue, se) {
                if (a) {
                    var fe = ue.deletions;
                    fe === null ? (ue.deletions = [
                        se
                    ], ue.flags |= 16) : fe.push(se);
                }
            }
            function h(ue, se) {
                if (!a) return null;
                for(; se !== null;)c(ue, se), se = se.sibling;
                return null;
            }
            function y(ue, se) {
                for(ue = new Map; se !== null;)se.key !== null ? ue.set(se.key, se) : ue.set(se.index, se), se = se.sibling;
                return ue;
            }
            function w(ue, se) {
                return ue = ks(ue, se), ue.index = 0, ue.sibling = null, ue;
            }
            function k(ue, se, fe) {
                return ue.index = fe, a ? (fe = ue.alternate, fe !== null ? (fe = fe.index, fe < se ? (ue.flags |= 2, se) : fe) : (ue.flags |= 2, se)) : (ue.flags |= 1048576, se);
            }
            function W(ue) {
                return a && ue.alternate === null && (ue.flags |= 2), ue;
            }
            function Y(ue, se, fe, Ce) {
                return se === null || se.tag !== 6 ? (se = Cx(fe, ue.mode, Ce), se.return = ue, se) : (se = w(se, fe), se.return = ue, se);
            }
            function re(ue, se, fe, Ce) {
                var Ve = fe.type;
                return Ve === D ? Ie(ue, se, fe.props.children, Ce, fe.key) : se !== null && (se.elementType === Ve || typeof Ve == "object" && Ve !== null && Ve.$$typeof === z && _1(Ve) === se.type) ? (Ce = w(se, fe.props), Ce.ref = Mu(ue, se, fe), Ce.return = ue, Ce) : (Ce = ph(fe.type, fe.key, fe.props, null, ue.mode, Ce), Ce.ref = Mu(ue, se, fe), Ce.return = ue, Ce);
            }
            function he(ue, se, fe, Ce) {
                return se === null || se.tag !== 4 || se.stateNode.containerInfo !== fe.containerInfo || se.stateNode.implementation !== fe.implementation ? (se = jx(fe, ue.mode, Ce), se.return = ue, se) : (se = w(se, fe.children || []), se.return = ue, se);
            }
            function Ie(ue, se, fe, Ce, Ve) {
                return se === null || se.tag !== 7 ? (se = Pa(fe, ue.mode, Ce, Ve), se.return = ue, se) : (se = w(se, fe), se.return = ue, se);
            }
            function _e(ue, se, fe) {
                if (typeof se == "string" && se !== "" || typeof se == "number") return se = Cx("" + se, ue.mode, fe), se.return = ue, se;
                if (typeof se == "object" && se !== null) {
                    switch(se.$$typeof){
                        case A:
                            return fe = ph(se.type, se.key, se.props, null, ue.mode, fe), fe.ref = Mu(ue, null, se), fe.return = ue, fe;
                        case R:
                            return se = jx(se, ue.mode, fe), se.return = ue, se;
                        case z:
                            var Ce = se._init;
                            return _e(ue, Ce(se._payload), fe);
                    }
                    if (oe(se) || H(se)) return se = Pa(se, ue.mode, fe, null), se.return = ue, se;
                    Wp(ue, se);
                }
                return null;
            }
            function Ne(ue, se, fe, Ce) {
                var Ve = se !== null ? se.key : null;
                if (typeof fe == "string" && fe !== "" || typeof fe == "number") return Ve !== null ? null : Y(ue, se, "" + fe, Ce);
                if (typeof fe == "object" && fe !== null) {
                    switch(fe.$$typeof){
                        case A:
                            return fe.key === Ve ? re(ue, se, fe, Ce) : null;
                        case R:
                            return fe.key === Ve ? he(ue, se, fe, Ce) : null;
                        case z:
                            return Ve = fe._init, Ne(ue, se, Ve(fe._payload), Ce);
                    }
                    if (oe(fe) || H(fe)) return Ve !== null ? null : Ie(ue, se, fe, Ce, null);
                    Wp(ue, fe);
                }
                return null;
            }
            function Ae(ue, se, fe, Ce, Ve) {
                if (typeof Ce == "string" && Ce !== "" || typeof Ce == "number") return ue = ue.get(fe) || null, Y(se, ue, "" + Ce, Ve);
                if (typeof Ce == "object" && Ce !== null) {
                    switch(Ce.$$typeof){
                        case A:
                            return ue = ue.get(Ce.key === null ? fe : Ce.key) || null, re(se, ue, Ce, Ve);
                        case R:
                            return ue = ue.get(Ce.key === null ? fe : Ce.key) || null, he(se, ue, Ce, Ve);
                        case z:
                            var Je = Ce._init;
                            return Ae(ue, se, fe, Je(Ce._payload), Ve);
                    }
                    if (oe(Ce) || H(Ce)) return ue = ue.get(fe) || null, Ie(se, ue, Ce, Ve, null);
                    Wp(se, Ce);
                }
                return null;
            }
            function ze(ue, se, fe, Ce) {
                for(var Ve = null, Je = null, Ze = se, rt = se = 0, qn = null; Ze !== null && rt < fe.length; rt++){
                    Ze.index > rt ? (qn = Ze, Ze = null) : qn = Ze.sibling;
                    var It = Ne(ue, Ze, fe[rt], Ce);
                    if (It === null) {
                        Ze === null && (Ze = qn);
                        break;
                    }
                    a && Ze && It.alternate === null && c(ue, Ze), se = k(It, se, rt), Je === null ? Ve = It : Je.sibling = It, Je = It, Ze = qn;
                }
                if (rt === fe.length) return h(ue, Ze), Qt && _a(ue, rt), Ve;
                if (Ze === null) {
                    for(; rt < fe.length; rt++)Ze = _e(ue, fe[rt], Ce), Ze !== null && (se = k(Ze, se, rt), Je === null ? Ve = Ze : Je.sibling = Ze, Je = Ze);
                    return Qt && _a(ue, rt), Ve;
                }
                for(Ze = y(ue, Ze); rt < fe.length; rt++)qn = Ae(Ze, ue, rt, fe[rt], Ce), qn !== null && (a && qn.alternate !== null && Ze.delete(qn.key === null ? rt : qn.key), se = k(qn, se, rt), Je === null ? Ve = qn : Je.sibling = qn, Je = qn);
                return a && Ze.forEach(function(Cs) {
                    return c(ue, Cs);
                }), Qt && _a(ue, rt), Ve;
            }
            function We(ue, se, fe, Ce) {
                var Ve = H(fe);
                if (typeof Ve != "function") throw Error(n(150));
                if (fe = Ve.call(fe), fe == null) throw Error(n(151));
                for(var Je = Ve = null, Ze = se, rt = se = 0, qn = null, It = fe.next(); Ze !== null && !It.done; rt++, It = fe.next()){
                    Ze.index > rt ? (qn = Ze, Ze = null) : qn = Ze.sibling;
                    var Cs = Ne(ue, Ze, It.value, Ce);
                    if (Cs === null) {
                        Ze === null && (Ze = qn);
                        break;
                    }
                    a && Ze && Cs.alternate === null && c(ue, Ze), se = k(Cs, se, rt), Je === null ? Ve = Cs : Je.sibling = Cs, Je = Cs, Ze = qn;
                }
                if (It.done) return h(ue, Ze), Qt && _a(ue, rt), Ve;
                if (Ze === null) {
                    for(; !It.done; rt++, It = fe.next())It = _e(ue, It.value, Ce), It !== null && (se = k(It, se, rt), Je === null ? Ve = It : Je.sibling = It, Je = It);
                    return Qt && _a(ue, rt), Ve;
                }
                for(Ze = y(ue, Ze); !It.done; rt++, It = fe.next())It = Ae(Ze, ue, rt, It.value, Ce), It !== null && (a && It.alternate !== null && Ze.delete(It.key === null ? rt : It.key), se = k(It, se, rt), Je === null ? Ve = It : Je.sibling = It, Je = It);
                return a && Ze.forEach(function(r$) {
                    return c(ue, r$);
                }), Qt && _a(ue, rt), Ve;
            }
            function xn(ue, se, fe, Ce) {
                if (typeof fe == "object" && fe !== null && fe.type === D && fe.key === null && (fe = fe.props.children), typeof fe == "object" && fe !== null) {
                    switch(fe.$$typeof){
                        case A:
                            e: {
                                for(var Ve = fe.key, Je = se; Je !== null;){
                                    if (Je.key === Ve) {
                                        if (Ve = fe.type, Ve === D) {
                                            if (Je.tag === 7) {
                                                h(ue, Je.sibling), se = w(Je, fe.props.children), se.return = ue, ue = se;
                                                break e;
                                            }
                                        } else if (Je.elementType === Ve || typeof Ve == "object" && Ve !== null && Ve.$$typeof === z && _1(Ve) === Je.type) {
                                            h(ue, Je.sibling), se = w(Je, fe.props), se.ref = Mu(ue, Je, fe), se.return = ue, ue = se;
                                            break e;
                                        }
                                        h(ue, Je);
                                        break;
                                    } else c(ue, Je);
                                    Je = Je.sibling;
                                }
                                fe.type === D ? (se = Pa(fe.props.children, ue.mode, Ce, fe.key), se.return = ue, ue = se) : (Ce = ph(fe.type, fe.key, fe.props, null, ue.mode, Ce), Ce.ref = Mu(ue, se, fe), Ce.return = ue, ue = Ce);
                            }
                            return W(ue);
                        case R:
                            e: {
                                for(Je = fe.key; se !== null;){
                                    if (se.key === Je) if (se.tag === 4 && se.stateNode.containerInfo === fe.containerInfo && se.stateNode.implementation === fe.implementation) {
                                        h(ue, se.sibling), se = w(se, fe.children || []), se.return = ue, ue = se;
                                        break e;
                                    } else {
                                        h(ue, se);
                                        break;
                                    }
                                    else c(ue, se);
                                    se = se.sibling;
                                }
                                se = jx(fe, ue.mode, Ce), se.return = ue, ue = se;
                            }
                            return W(ue);
                        case z:
                            return Je = fe._init, xn(ue, se, Je(fe._payload), Ce);
                    }
                    if (oe(fe)) return ze(ue, se, fe, Ce);
                    if (H(fe)) return We(ue, se, fe, Ce);
                    Wp(ue, fe);
                }
                return typeof fe == "string" && fe !== "" || typeof fe == "number" ? (fe = "" + fe, se !== null && se.tag === 6 ? (h(ue, se.sibling), se = w(se, fe), se.return = ue, ue = se) : (h(ue, se), se = Cx(fe, ue.mode, Ce), se.return = ue, ue = se), W(ue)) : h(ue, se);
            }
            return xn;
        }
        var Bl = E1(!0), k1 = E1(!1), Vp = ys(null), Up = null, zl = null, Lv = null;
        function $v() {
            Lv = zl = Up = null;
        }
        function qv(a) {
            var c = Vp.current;
            Ht(Vp), a._currentValue = c;
        }
        function Bv(a, c, h) {
            for(; a !== null;){
                var y = a.alternate;
                if ((a.childLanes & c) !== c ? (a.childLanes |= c, y !== null && (y.childLanes |= c)) : y !== null && (y.childLanes & c) !== c && (y.childLanes |= c), a === h) break;
                a = a.return;
            }
        }
        function Wl(a, c) {
            Up = a, Lv = zl = null, a = a.dependencies, a !== null && a.firstContext !== null && (a.lanes & c && (Rr = !0), a.firstContext = null);
        }
        function xi(a) {
            var c = a._currentValue;
            if (Lv !== a) if (a = {
                context: a,
                memoizedValue: c,
                next: null
            }, zl === null) {
                if (Up === null) throw Error(n(308));
                zl = a, Up.dependencies = {
                    lanes: 0,
                    firstContext: a
                };
            } else zl = zl.next = a;
            return c;
        }
        var Ea = null;
        function zv(a) {
            Ea === null ? Ea = [
                a
            ] : Ea.push(a);
        }
        function C1(a, c, h, y) {
            var w = c.interleaved;
            return w === null ? (h.next = h, zv(c)) : (h.next = w.next, w.next = h), c.interleaved = h, Po(a, y);
        }
        function Po(a, c) {
            a.lanes |= c;
            var h = a.alternate;
            for(h !== null && (h.lanes |= c), h = a, a = a.return; a !== null;)a.childLanes |= c, h = a.alternate, h !== null && (h.childLanes |= c), h = a, a = a.return;
            return h.tag === 3 ? h.stateNode : null;
        }
        var bs = !1;
        function Wv(a) {
            a.updateQueue = {
                baseState: a.memoizedState,
                firstBaseUpdate: null,
                lastBaseUpdate: null,
                shared: {
                    pending: null,
                    interleaved: null,
                    lanes: 0
                },
                effects: null
            };
        }
        function j1(a, c) {
            a = a.updateQueue, c.updateQueue === a && (c.updateQueue = {
                baseState: a.baseState,
                firstBaseUpdate: a.firstBaseUpdate,
                lastBaseUpdate: a.lastBaseUpdate,
                shared: a.shared,
                effects: a.effects
            });
        }
        function Ao(a, c) {
            return {
                eventTime: a,
                lane: c,
                tag: 0,
                payload: null,
                callback: null,
                next: null
            };
        }
        function ws(a, c, h) {
            var y = a.updateQueue;
            if (y === null) return null;
            if (y = y.shared, Nt & 2) {
                var w = y.pending;
                return w === null ? c.next = c : (c.next = w.next, w.next = c), y.pending = c, Po(a, h);
            }
            return w = y.interleaved, w === null ? (c.next = c, zv(y)) : (c.next = w.next, w.next = c), y.interleaved = c, Po(a, h);
        }
        function Hp(a, c, h) {
            if (c = c.updateQueue, c !== null && (c = c.shared, (h & 4194240) !== 0)) {
                var y = c.lanes;
                y &= a.pendingLanes, h |= y, c.lanes = h, rv(a, h);
            }
        }
        function R1(a, c) {
            var h = a.updateQueue, y = a.alternate;
            if (y !== null && (y = y.updateQueue, h === y)) {
                var w = null, k = null;
                if (h = h.firstBaseUpdate, h !== null) {
                    do {
                        var W = {
                            eventTime: h.eventTime,
                            lane: h.lane,
                            tag: h.tag,
                            payload: h.payload,
                            callback: h.callback,
                            next: null
                        };
                        k === null ? w = k = W : k = k.next = W, h = h.next;
                    }while (h !== null);
                    k === null ? w = k = c : k = k.next = c;
                } else w = k = c;
                h = {
                    baseState: y.baseState,
                    firstBaseUpdate: w,
                    lastBaseUpdate: k,
                    shared: y.shared,
                    effects: y.effects
                }, a.updateQueue = h;
                return;
            }
            a = h.lastBaseUpdate, a === null ? h.firstBaseUpdate = c : a.next = c, h.lastBaseUpdate = c;
        }
        function Kp(a, c, h, y) {
            var w = a.updateQueue;
            bs = !1;
            var k = w.firstBaseUpdate, W = w.lastBaseUpdate, Y = w.shared.pending;
            if (Y !== null) {
                w.shared.pending = null;
                var re = Y, he = re.next;
                re.next = null, W === null ? k = he : W.next = he, W = re;
                var Ie = a.alternate;
                Ie !== null && (Ie = Ie.updateQueue, Y = Ie.lastBaseUpdate, Y !== W && (Y === null ? Ie.firstBaseUpdate = he : Y.next = he, Ie.lastBaseUpdate = re));
            }
            if (k !== null) {
                var _e = w.baseState;
                W = 0, Ie = he = re = null, Y = k;
                do {
                    var Ne = Y.lane, Ae = Y.eventTime;
                    if ((y & Ne) === Ne) {
                        Ie !== null && (Ie = Ie.next = {
                            eventTime: Ae,
                            lane: 0,
                            tag: Y.tag,
                            payload: Y.payload,
                            callback: Y.callback,
                            next: null
                        });
                        e: {
                            var ze = a, We = Y;
                            switch(Ne = c, Ae = h, We.tag){
                                case 1:
                                    if (ze = We.payload, typeof ze == "function") {
                                        _e = ze.call(Ae, _e, Ne);
                                        break e;
                                    }
                                    _e = ze;
                                    break e;
                                case 3:
                                    ze.flags = ze.flags & -65537 | 128;
                                case 0:
                                    if (ze = We.payload, Ne = typeof ze == "function" ? ze.call(Ae, _e, Ne) : ze, Ne == null) break e;
                                    _e = G({}, _e, Ne);
                                    break e;
                                case 2:
                                    bs = !0;
                            }
                        }
                        Y.callback !== null && Y.lane !== 0 && (a.flags |= 64, Ne = w.effects, Ne === null ? w.effects = [
                            Y
                        ] : Ne.push(Y));
                    } else Ae = {
                        eventTime: Ae,
                        lane: Ne,
                        tag: Y.tag,
                        payload: Y.payload,
                        callback: Y.callback,
                        next: null
                    }, Ie === null ? (he = Ie = Ae, re = _e) : Ie = Ie.next = Ae, W |= Ne;
                    if (Y = Y.next, Y === null) {
                        if (Y = w.shared.pending, Y === null) break;
                        Ne = Y, Y = Ne.next, Ne.next = null, w.lastBaseUpdate = Ne, w.shared.pending = null;
                    }
                }while (!0);
                if (Ie === null && (re = _e), w.baseState = re, w.firstBaseUpdate = he, w.lastBaseUpdate = Ie, c = w.shared.interleaved, c !== null) {
                    w = c;
                    do W |= w.lane, w = w.next;
                    while (w !== c);
                } else k === null && (w.shared.lanes = 0);
                ja |= W, a.lanes = W, a.memoizedState = _e;
            }
        }
        function O1(a, c, h) {
            if (a = c.effects, c.effects = null, a !== null) for(c = 0; c < a.length; c++){
                var y = a[c], w = y.callback;
                if (w !== null) {
                    if (y.callback = null, y = h, typeof w != "function") throw Error(n(191, w));
                    w.call(y);
                }
            }
        }
        var Lu = {}, so = ys(Lu), $u = ys(Lu), qu = ys(Lu);
        function ka(a) {
            if (a === Lu) throw Error(n(174));
            return a;
        }
        function Vv(a, c) {
            switch(Mt(qu, c), Mt($u, a), Mt(so, Lu), a = c.nodeType, a){
                case 9:
                case 11:
                    c = (c = c.documentElement) ? c.namespaceURI : Qe(null, "");
                    break;
                default:
                    a = a === 8 ? c.parentNode : c, c = a.namespaceURI || null, a = a.tagName, c = Qe(c, a);
            }
            Ht(so), Mt(so, c);
        }
        function Vl() {
            Ht(so), Ht($u), Ht(qu);
        }
        function T1(a) {
            ka(qu.current);
            var c = ka(so.current), h = Qe(c, a.type);
            c !== h && (Mt($u, a), Mt(so, h));
        }
        function Uv(a) {
            $u.current === a && (Ht(so), Ht($u));
        }
        var on = ys(0);
        function Gp(a) {
            for(var c = a; c !== null;){
                if (c.tag === 13) {
                    var h = c.memoizedState;
                    if (h !== null && (h = h.dehydrated, h === null || h.data === "$?" || h.data === "$!")) return c;
                } else if (c.tag === 19 && c.memoizedProps.revealOrder !== void 0) {
                    if (c.flags & 128) return c;
                } else if (c.child !== null) {
                    c.child.return = c, c = c.child;
                    continue;
                }
                if (c === a) break;
                for(; c.sibling === null;){
                    if (c.return === null || c.return === a) return null;
                    c = c.return;
                }
                c.sibling.return = c.return, c = c.sibling;
            }
            return null;
        }
        var Hv = [];
        function Kv() {
            for(var a = 0; a < Hv.length; a++)Hv[a]._workInProgressVersionPrimary = null;
            Hv.length = 0;
        }
        var Qp = C.ReactCurrentDispatcher, Gv = C.ReactCurrentBatchConfig, Ca = 0, sn = null, Pn = null, Ln = null, Jp = !1, Bu = !1, zu = 0, _2 = 0;
        function nr() {
            throw Error(n(321));
        }
        function Qv(a, c) {
            if (c === null) return !1;
            for(var h = 0; h < c.length && h < a.length; h++)if (!Di(a[h], c[h])) return !1;
            return !0;
        }
        function Jv(a, c, h, y, w, k) {
            if (Ca = k, sn = c, c.memoizedState = null, c.updateQueue = null, c.lanes = 0, Qp.current = a === null || a.memoizedState === null ? j2 : R2, a = h(y, w), Bu) {
                k = 0;
                do {
                    if (Bu = !1, zu = 0, 25 <= k) throw Error(n(301));
                    k += 1, Ln = Pn = null, c.updateQueue = null, Qp.current = O2, a = h(y, w);
                }while (Bu);
            }
            if (Qp.current = Xp, c = Pn !== null && Pn.next !== null, Ca = 0, Ln = Pn = sn = null, Jp = !1, c) throw Error(n(300));
            return a;
        }
        function Zv() {
            var a = zu !== 0;
            return zu = 0, a;
        }
        function ao() {
            var a = {
                memoizedState: null,
                baseState: null,
                baseQueue: null,
                queue: null,
                next: null
            };
            return Ln === null ? sn.memoizedState = Ln = a : Ln = Ln.next = a, Ln;
        }
        function bi() {
            if (Pn === null) {
                var a = sn.alternate;
                a = a !== null ? a.memoizedState : null;
            } else a = Pn.next;
            var c = Ln === null ? sn.memoizedState : Ln.next;
            if (c !== null) Ln = c, Pn = a;
            else {
                if (a === null) throw Error(n(310));
                Pn = a, a = {
                    memoizedState: Pn.memoizedState,
                    baseState: Pn.baseState,
                    baseQueue: Pn.baseQueue,
                    queue: Pn.queue,
                    next: null
                }, Ln === null ? sn.memoizedState = Ln = a : Ln = Ln.next = a;
            }
            return Ln;
        }
        function Wu(a, c) {
            return typeof c == "function" ? c(a) : c;
        }
        function Yv(a) {
            var c = bi(), h = c.queue;
            if (h === null) throw Error(n(311));
            h.lastRenderedReducer = a;
            var y = Pn, w = y.baseQueue, k = h.pending;
            if (k !== null) {
                if (w !== null) {
                    var W = w.next;
                    w.next = k.next, k.next = W;
                }
                y.baseQueue = w = k, h.pending = null;
            }
            if (w !== null) {
                k = w.next, y = y.baseState;
                var Y = W = null, re = null, he = k;
                do {
                    var Ie = he.lane;
                    if ((Ca & Ie) === Ie) re !== null && (re = re.next = {
                        lane: 0,
                        action: he.action,
                        hasEagerState: he.hasEagerState,
                        eagerState: he.eagerState,
                        next: null
                    }), y = he.hasEagerState ? he.eagerState : a(y, he.action);
                    else {
                        var _e = {
                            lane: Ie,
                            action: he.action,
                            hasEagerState: he.hasEagerState,
                            eagerState: he.eagerState,
                            next: null
                        };
                        re === null ? (Y = re = _e, W = y) : re = re.next = _e, sn.lanes |= Ie, ja |= Ie;
                    }
                    he = he.next;
                }while (he !== null && he !== k);
                re === null ? W = y : re.next = Y, Di(y, c.memoizedState) || (Rr = !0), c.memoizedState = y, c.baseState = W, c.baseQueue = re, h.lastRenderedState = y;
            }
            if (a = h.interleaved, a !== null) {
                w = a;
                do k = w.lane, sn.lanes |= k, ja |= k, w = w.next;
                while (w !== a);
            } else w === null && (h.lanes = 0);
            return [
                c.memoizedState,
                h.dispatch
            ];
        }
        function Xv(a) {
            var c = bi(), h = c.queue;
            if (h === null) throw Error(n(311));
            h.lastRenderedReducer = a;
            var y = h.dispatch, w = h.pending, k = c.memoizedState;
            if (w !== null) {
                h.pending = null;
                var W = w = w.next;
                do k = a(k, W.action), W = W.next;
                while (W !== w);
                Di(k, c.memoizedState) || (Rr = !0), c.memoizedState = k, c.baseQueue === null && (c.baseState = k), h.lastRenderedState = k;
            }
            return [
                k,
                y
            ];
        }
        function P1() {}
        function A1(a, c) {
            var h = sn, y = bi(), w = c(), k = !Di(y.memoizedState, w);
            if (k && (y.memoizedState = w, Rr = !0), y = y.queue, ex(M1.bind(null, h, y, a), [
                a
            ]), y.getSnapshot !== c || k || Ln !== null && Ln.memoizedState.tag & 1) {
                if (h.flags |= 2048, Vu(9, D1.bind(null, h, y, w, c), void 0, null), $n === null) throw Error(n(349));
                Ca & 30 || F1(h, c, w);
            }
            return w;
        }
        function F1(a, c, h) {
            a.flags |= 16384, a = {
                getSnapshot: c,
                value: h
            }, c = sn.updateQueue, c === null ? (c = {
                lastEffect: null,
                stores: null
            }, sn.updateQueue = c, c.stores = [
                a
            ]) : (h = c.stores, h === null ? c.stores = [
                a
            ] : h.push(a));
        }
        function D1(a, c, h, y) {
            c.value = h, c.getSnapshot = y, L1(c) && $1(a);
        }
        function M1(a, c, h) {
            return h(function() {
                L1(c) && $1(a);
            });
        }
        function L1(a) {
            var c = a.getSnapshot;
            a = a.value;
            try {
                var h = c();
                return !Di(a, h);
            } catch  {
                return !0;
            }
        }
        function $1(a) {
            var c = Po(a, 1);
            c !== null && Bi(c, a, 1, -1);
        }
        function q1(a) {
            var c = ao();
            return typeof a == "function" && (a = a()), c.memoizedState = c.baseState = a, a = {
                pending: null,
                interleaved: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: Wu,
                lastRenderedState: a
            }, c.queue = a, a = a.dispatch = C2.bind(null, sn, a), [
                c.memoizedState,
                a
            ];
        }
        function Vu(a, c, h, y) {
            return a = {
                tag: a,
                create: c,
                destroy: h,
                deps: y,
                next: null
            }, c = sn.updateQueue, c === null ? (c = {
                lastEffect: null,
                stores: null
            }, sn.updateQueue = c, c.lastEffect = a.next = a) : (h = c.lastEffect, h === null ? c.lastEffect = a.next = a : (y = h.next, h.next = a, a.next = y, c.lastEffect = a)), a;
        }
        function B1() {
            return bi().memoizedState;
        }
        function Zp(a, c, h, y) {
            var w = ao();
            sn.flags |= a, w.memoizedState = Vu(1 | c, h, void 0, y === void 0 ? null : y);
        }
        function Yp(a, c, h, y) {
            var w = bi();
            y = y === void 0 ? null : y;
            var k = void 0;
            if (Pn !== null) {
                var W = Pn.memoizedState;
                if (k = W.destroy, y !== null && Qv(y, W.deps)) {
                    w.memoizedState = Vu(c, h, k, y);
                    return;
                }
            }
            sn.flags |= a, w.memoizedState = Vu(1 | c, h, k, y);
        }
        function z1(a, c) {
            return Zp(8390656, 8, a, c);
        }
        function ex(a, c) {
            return Yp(2048, 8, a, c);
        }
        function W1(a, c) {
            return Yp(4, 2, a, c);
        }
        function V1(a, c) {
            return Yp(4, 4, a, c);
        }
        function U1(a, c) {
            if (typeof c == "function") return a = a(), c(a), function() {
                c(null);
            };
            if (c != null) return a = a(), c.current = a, function() {
                c.current = null;
            };
        }
        function H1(a, c, h) {
            return h = h != null ? h.concat([
                a
            ]) : null, Yp(4, 4, U1.bind(null, c, a), h);
        }
        function tx() {}
        function K1(a, c) {
            var h = bi();
            c = c === void 0 ? null : c;
            var y = h.memoizedState;
            return y !== null && c !== null && Qv(c, y[1]) ? y[0] : (h.memoizedState = [
                a,
                c
            ], a);
        }
        function G1(a, c) {
            var h = bi();
            c = c === void 0 ? null : c;
            var y = h.memoizedState;
            return y !== null && c !== null && Qv(c, y[1]) ? y[0] : (a = a(), h.memoizedState = [
                a,
                c
            ], a);
        }
        function Q1(a, c, h) {
            return Ca & 21 ? (Di(h, c) || (h = _I(), sn.lanes |= h, ja |= h, a.baseState = !0), c) : (a.baseState && (a.baseState = !1, Rr = !0), a.memoizedState = h);
        }
        function E2(a, c) {
            var h = Ct;
            Ct = h !== 0 && 4 > h ? h : 4, a(!0);
            var y = Gv.transition;
            Gv.transition = {};
            try {
                a(!1), c();
            } finally{
                Ct = h, Gv.transition = y;
            }
        }
        function J1() {
            return bi().memoizedState;
        }
        function k2(a, c, h) {
            var y = _s(a);
            if (h = {
                lane: y,
                action: h,
                hasEagerState: !1,
                eagerState: null,
                next: null
            }, Z1(a)) Y1(c, h);
            else if (h = C1(a, c, h, y), h !== null) {
                var w = yr();
                Bi(h, a, y, w), X1(h, c, y);
            }
        }
        function C2(a, c, h) {
            var y = _s(a), w = {
                lane: y,
                action: h,
                hasEagerState: !1,
                eagerState: null,
                next: null
            };
            if (Z1(a)) Y1(c, w);
            else {
                var k = a.alternate;
                if (a.lanes === 0 && (k === null || k.lanes === 0) && (k = c.lastRenderedReducer, k !== null)) try {
                    var W = c.lastRenderedState, Y = k(W, h);
                    if (w.hasEagerState = !0, w.eagerState = Y, Di(Y, W)) {
                        var re = c.interleaved;
                        re === null ? (w.next = w, zv(c)) : (w.next = re.next, re.next = w), c.interleaved = w;
                        return;
                    }
                } catch  {} finally{}
                h = C1(a, c, w, y), h !== null && (w = yr(), Bi(h, a, y, w), X1(h, c, y));
            }
        }
        function Z1(a) {
            var c = a.alternate;
            return a === sn || c !== null && c === sn;
        }
        function Y1(a, c) {
            Bu = Jp = !0;
            var h = a.pending;
            h === null ? c.next = c : (c.next = h.next, h.next = c), a.pending = c;
        }
        function X1(a, c, h) {
            if (h & 4194240) {
                var y = c.lanes;
                y &= a.pendingLanes, h |= y, c.lanes = h, rv(a, h);
            }
        }
        var Xp = {
            readContext: xi,
            useCallback: nr,
            useContext: nr,
            useEffect: nr,
            useImperativeHandle: nr,
            useInsertionEffect: nr,
            useLayoutEffect: nr,
            useMemo: nr,
            useReducer: nr,
            useRef: nr,
            useState: nr,
            useDebugValue: nr,
            useDeferredValue: nr,
            useTransition: nr,
            useMutableSource: nr,
            useSyncExternalStore: nr,
            useId: nr,
            unstable_isNewReconciler: !1
        }, j2 = {
            readContext: xi,
            useCallback: function(a, c) {
                return ao().memoizedState = [
                    a,
                    c === void 0 ? null : c
                ], a;
            },
            useContext: xi,
            useEffect: z1,
            useImperativeHandle: function(a, c, h) {
                return h = h != null ? h.concat([
                    a
                ]) : null, Zp(4194308, 4, U1.bind(null, c, a), h);
            },
            useLayoutEffect: function(a, c) {
                return Zp(4194308, 4, a, c);
            },
            useInsertionEffect: function(a, c) {
                return Zp(4, 2, a, c);
            },
            useMemo: function(a, c) {
                var h = ao();
                return c = c === void 0 ? null : c, a = a(), h.memoizedState = [
                    a,
                    c
                ], a;
            },
            useReducer: function(a, c, h) {
                var y = ao();
                return c = h !== void 0 ? h(c) : c, y.memoizedState = y.baseState = c, a = {
                    pending: null,
                    interleaved: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: a,
                    lastRenderedState: c
                }, y.queue = a, a = a.dispatch = k2.bind(null, sn, a), [
                    y.memoizedState,
                    a
                ];
            },
            useRef: function(a) {
                var c = ao();
                return a = {
                    current: a
                }, c.memoizedState = a;
            },
            useState: q1,
            useDebugValue: tx,
            useDeferredValue: function(a) {
                return ao().memoizedState = a;
            },
            useTransition: function() {
                var a = q1(!1), c = a[0];
                return a = E2.bind(null, a[1]), ao().memoizedState = a, [
                    c,
                    a
                ];
            },
            useMutableSource: function() {},
            useSyncExternalStore: function(a, c, h) {
                var y = sn, w = ao();
                if (Qt) {
                    if (h === void 0) throw Error(n(407));
                    h = h();
                } else {
                    if (h = c(), $n === null) throw Error(n(349));
                    Ca & 30 || F1(y, c, h);
                }
                w.memoizedState = h;
                var k = {
                    value: h,
                    getSnapshot: c
                };
                return w.queue = k, z1(M1.bind(null, y, k, a), [
                    a
                ]), y.flags |= 2048, Vu(9, D1.bind(null, y, k, h, c), void 0, null), h;
            },
            useId: function() {
                var a = ao(), c = $n.identifierPrefix;
                if (Qt) {
                    var h = To, y = Oo;
                    h = (y & ~(1 << 32 - Gr(y) - 1)).toString(32) + h, c = ":" + c + "R" + h, h = zu++, 0 < h && (c += "H" + h.toString(32)), c += ":";
                } else h = _2++, c = ":" + c + "r" + h.toString(32) + ":";
                return a.memoizedState = c;
            },
            unstable_isNewReconciler: !1
        }, R2 = {
            readContext: xi,
            useCallback: K1,
            useContext: xi,
            useEffect: ex,
            useImperativeHandle: H1,
            useInsertionEffect: W1,
            useLayoutEffect: V1,
            useMemo: G1,
            useReducer: Yv,
            useRef: B1,
            useState: function() {
                return Yv(Wu);
            },
            useDebugValue: tx,
            useDeferredValue: function(a) {
                var c = bi();
                return Q1(c, Pn.memoizedState, a);
            },
            useTransition: function() {
                var a = Yv(Wu)[0], c = bi().memoizedState;
                return [
                    a,
                    c
                ];
            },
            useMutableSource: P1,
            useSyncExternalStore: A1,
            useId: J1,
            unstable_isNewReconciler: !1
        }, O2 = {
            readContext: xi,
            useCallback: K1,
            useContext: xi,
            useEffect: ex,
            useImperativeHandle: H1,
            useInsertionEffect: W1,
            useLayoutEffect: V1,
            useMemo: G1,
            useReducer: Xv,
            useRef: B1,
            useState: function() {
                return Xv(Wu);
            },
            useDebugValue: tx,
            useDeferredValue: function(a) {
                var c = bi();
                return Pn === null ? c.memoizedState = a : Q1(c, Pn.memoizedState, a);
            },
            useTransition: function() {
                var a = Xv(Wu)[0], c = bi().memoizedState;
                return [
                    a,
                    c
                ];
            },
            useMutableSource: P1,
            useSyncExternalStore: A1,
            useId: J1,
            unstable_isNewReconciler: !1
        };
        function Li(a, c) {
            if (a && a.defaultProps) {
                c = G({}, c), a = a.defaultProps;
                for(var h in a)c[h] === void 0 && (c[h] = a[h]);
                return c;
            }
            return c;
        }
        function nx(a, c, h, y) {
            c = a.memoizedState, h = h(y, c), h = h == null ? c : G({}, c, h), a.memoizedState = h, a.lanes === 0 && (a.updateQueue.baseState = h);
        }
        var eh = {
            isMounted: function(a) {
                return (a = a._reactInternals) ? io(a) === a : !1;
            },
            enqueueSetState: function(a, c, h) {
                a = a._reactInternals;
                var y = yr(), w = _s(a), k = Ao(y, w);
                k.payload = c, h != null && (k.callback = h), c = ws(a, k, w), c !== null && (Bi(c, a, w, y), Hp(c, a, w));
            },
            enqueueReplaceState: function(a, c, h) {
                a = a._reactInternals;
                var y = yr(), w = _s(a), k = Ao(y, w);
                k.tag = 1, k.payload = c, h != null && (k.callback = h), c = ws(a, k, w), c !== null && (Bi(c, a, w, y), Hp(c, a, w));
            },
            enqueueForceUpdate: function(a, c) {
                a = a._reactInternals;
                var h = yr(), y = _s(a), w = Ao(h, y);
                w.tag = 2, c != null && (w.callback = c), c = ws(a, w, y), c !== null && (Bi(c, a, y, h), Hp(c, a, y));
            }
        };
        function e_(a, c, h, y, w, k, W) {
            return a = a.stateNode, typeof a.shouldComponentUpdate == "function" ? a.shouldComponentUpdate(y, k, W) : c.prototype && c.prototype.isPureReactComponent ? !Ru(h, y) || !Ru(w, k) : !0;
        }
        function t_(a, c, h) {
            var y = !1, w = vs, k = c.contextType;
            return typeof k == "object" && k !== null ? k = xi(k) : (w = jr(c) ? Sa : tr.current, y = c.contextTypes, k = (y = y != null) ? Ml(a, w) : vs), c = new c(h, k), a.memoizedState = c.state !== null && c.state !== void 0 ? c.state : null, c.updater = eh, a.stateNode = c, c._reactInternals = a, y && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = w, a.__reactInternalMemoizedMaskedChildContext = k), c;
        }
        function n_(a, c, h, y) {
            a = c.state, typeof c.componentWillReceiveProps == "function" && c.componentWillReceiveProps(h, y), typeof c.UNSAFE_componentWillReceiveProps == "function" && c.UNSAFE_componentWillReceiveProps(h, y), c.state !== a && eh.enqueueReplaceState(c, c.state, null);
        }
        function rx(a, c, h, y) {
            var w = a.stateNode;
            w.props = h, w.state = a.memoizedState, w.refs = {}, Wv(a);
            var k = c.contextType;
            typeof k == "object" && k !== null ? w.context = xi(k) : (k = jr(c) ? Sa : tr.current, w.context = Ml(a, k)), w.state = a.memoizedState, k = c.getDerivedStateFromProps, typeof k == "function" && (nx(a, c, k, h), w.state = a.memoizedState), typeof c.getDerivedStateFromProps == "function" || typeof w.getSnapshotBeforeUpdate == "function" || typeof w.UNSAFE_componentWillMount != "function" && typeof w.componentWillMount != "function" || (c = w.state, typeof w.componentWillMount == "function" && w.componentWillMount(), typeof w.UNSAFE_componentWillMount == "function" && w.UNSAFE_componentWillMount(), c !== w.state && eh.enqueueReplaceState(w, w.state, null), Kp(a, h, w, y), w.state = a.memoizedState), typeof w.componentDidMount == "function" && (a.flags |= 4194308);
        }
        function Ul(a, c) {
            try {
                var h = "", y = c;
                do h += te(y), y = y.return;
                while (y);
                var w = h;
            } catch (k) {
                w = `
Error generating stack: ` + k.message + `
` + k.stack;
            }
            return {
                value: a,
                source: c,
                stack: w,
                digest: null
            };
        }
        function ix(a, c, h) {
            return {
                value: a,
                source: null,
                stack: h ?? null,
                digest: c ?? null
            };
        }
        function ox(a, c) {
            try {
                console.error(c.value);
            } catch (h) {
                setTimeout(function() {
                    throw h;
                });
            }
        }
        var T2 = typeof WeakMap == "function" ? WeakMap : Map;
        function r_(a, c, h) {
            h = Ao(-1, h), h.tag = 3, h.payload = {
                element: null
            };
            var y = c.value;
            return h.callback = function() {
                ah || (ah = !0, bx = y), ox(a, c);
            }, h;
        }
        function i_(a, c, h) {
            h = Ao(-1, h), h.tag = 3;
            var y = a.type.getDerivedStateFromError;
            if (typeof y == "function") {
                var w = c.value;
                h.payload = function() {
                    return y(w);
                }, h.callback = function() {
                    ox(a, c);
                };
            }
            var k = a.stateNode;
            return k !== null && typeof k.componentDidCatch == "function" && (h.callback = function() {
                ox(a, c), typeof y != "function" && (Ss === null ? Ss = new Set([
                    this
                ]) : Ss.add(this));
                var W = c.stack;
                this.componentDidCatch(c.value, {
                    componentStack: W !== null ? W : ""
                });
            }), h;
        }
        function o_(a, c, h) {
            var y = a.pingCache;
            if (y === null) {
                y = a.pingCache = new T2;
                var w = new Set;
                y.set(c, w);
            } else w = y.get(c), w === void 0 && (w = new Set, y.set(c, w));
            w.has(h) || (w.add(h), a = H2.bind(null, a, c, h), c.then(a, a));
        }
        function s_(a) {
            do {
                var c;
                if ((c = a.tag === 13) && (c = a.memoizedState, c = c !== null ? c.dehydrated !== null : !0), c) return a;
                a = a.return;
            }while (a !== null);
            return null;
        }
        function a_(a, c, h, y, w) {
            return a.mode & 1 ? (a.flags |= 65536, a.lanes = w, a) : (a === c ? a.flags |= 65536 : (a.flags |= 128, h.flags |= 131072, h.flags &= -52805, h.tag === 1 && (h.alternate === null ? h.tag = 17 : (c = Ao(-1, 1), c.tag = 2, ws(h, c, 1))), h.lanes |= 1), a);
        }
        var P2 = C.ReactCurrentOwner, Rr = !1;
        function gr(a, c, h, y) {
            c.child = a === null ? k1(c, null, h, y) : Bl(c, a.child, h, y);
        }
        function l_(a, c, h, y, w) {
            h = h.render;
            var k = c.ref;
            return Wl(c, w), y = Jv(a, c, h, y, k, w), h = Zv(), a !== null && !Rr ? (c.updateQueue = a.updateQueue, c.flags &= -2053, a.lanes &= ~w, Fo(a, c, w)) : (Qt && h && Pv(c), c.flags |= 1, gr(a, c, y, w), c.child);
        }
        function c_(a, c, h, y, w) {
            if (a === null) {
                var k = h.type;
                return typeof k == "function" && !kx(k) && k.defaultProps === void 0 && h.compare === null && h.defaultProps === void 0 ? (c.tag = 15, c.type = k, u_(a, c, k, y, w)) : (a = ph(h.type, null, y, c, c.mode, w), a.ref = c.ref, a.return = c, c.child = a);
            }
            if (k = a.child, !(a.lanes & w)) {
                var W = k.memoizedProps;
                if (h = h.compare, h = h !== null ? h : Ru, h(W, y) && a.ref === c.ref) return Fo(a, c, w);
            }
            return c.flags |= 1, a = ks(k, y), a.ref = c.ref, a.return = c, c.child = a;
        }
        function u_(a, c, h, y, w) {
            if (a !== null) {
                var k = a.memoizedProps;
                if (Ru(k, y) && a.ref === c.ref) if (Rr = !1, c.pendingProps = y = k, (a.lanes & w) !== 0) a.flags & 131072 && (Rr = !0);
                else return c.lanes = a.lanes, Fo(a, c, w);
            }
            return sx(a, c, h, y, w);
        }
        function d_(a, c, h) {
            var y = c.pendingProps, w = y.children, k = a !== null ? a.memoizedState : null;
            if (y.mode === "hidden") if (!(c.mode & 1)) c.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null
            }, Mt(Kl, Yr), Yr |= h;
            else {
                if (!(h & 1073741824)) return a = k !== null ? k.baseLanes | h : h, c.lanes = c.childLanes = 1073741824, c.memoizedState = {
                    baseLanes: a,
                    cachePool: null,
                    transitions: null
                }, c.updateQueue = null, Mt(Kl, Yr), Yr |= a, null;
                c.memoizedState = {
                    baseLanes: 0,
                    cachePool: null,
                    transitions: null
                }, y = k !== null ? k.baseLanes : h, Mt(Kl, Yr), Yr |= y;
            }
            else k !== null ? (y = k.baseLanes | h, c.memoizedState = null) : y = h, Mt(Kl, Yr), Yr |= y;
            return gr(a, c, w, h), c.child;
        }
        function f_(a, c) {
            var h = c.ref;
            (a === null && h !== null || a !== null && a.ref !== h) && (c.flags |= 512, c.flags |= 2097152);
        }
        function sx(a, c, h, y, w) {
            var k = jr(h) ? Sa : tr.current;
            return k = Ml(c, k), Wl(c, w), h = Jv(a, c, h, y, k, w), y = Zv(), a !== null && !Rr ? (c.updateQueue = a.updateQueue, c.flags &= -2053, a.lanes &= ~w, Fo(a, c, w)) : (Qt && y && Pv(c), c.flags |= 1, gr(a, c, h, w), c.child);
        }
        function p_(a, c, h, y, w) {
            if (jr(h)) {
                var k = !0;
                Lp(c);
            } else k = !1;
            if (Wl(c, w), c.stateNode === null) nh(a, c), t_(c, h, y), rx(c, h, y, w), y = !0;
            else if (a === null) {
                var W = c.stateNode, Y = c.memoizedProps;
                W.props = Y;
                var re = W.context, he = h.contextType;
                typeof he == "object" && he !== null ? he = xi(he) : (he = jr(h) ? Sa : tr.current, he = Ml(c, he));
                var Ie = h.getDerivedStateFromProps, _e = typeof Ie == "function" || typeof W.getSnapshotBeforeUpdate == "function";
                _e || typeof W.UNSAFE_componentWillReceiveProps != "function" && typeof W.componentWillReceiveProps != "function" || (Y !== y || re !== he) && n_(c, W, y, he), bs = !1;
                var Ne = c.memoizedState;
                W.state = Ne, Kp(c, y, W, w), re = c.memoizedState, Y !== y || Ne !== re || Cr.current || bs ? (typeof Ie == "function" && (nx(c, h, Ie, y), re = c.memoizedState), (Y = bs || e_(c, h, Y, y, Ne, re, he)) ? (_e || typeof W.UNSAFE_componentWillMount != "function" && typeof W.componentWillMount != "function" || (typeof W.componentWillMount == "function" && W.componentWillMount(), typeof W.UNSAFE_componentWillMount == "function" && W.UNSAFE_componentWillMount()), typeof W.componentDidMount == "function" && (c.flags |= 4194308)) : (typeof W.componentDidMount == "function" && (c.flags |= 4194308), c.memoizedProps = y, c.memoizedState = re), W.props = y, W.state = re, W.context = he, y = Y) : (typeof W.componentDidMount == "function" && (c.flags |= 4194308), y = !1);
            } else {
                W = c.stateNode, j1(a, c), Y = c.memoizedProps, he = c.type === c.elementType ? Y : Li(c.type, Y), W.props = he, _e = c.pendingProps, Ne = W.context, re = h.contextType, typeof re == "object" && re !== null ? re = xi(re) : (re = jr(h) ? Sa : tr.current, re = Ml(c, re));
                var Ae = h.getDerivedStateFromProps;
                (Ie = typeof Ae == "function" || typeof W.getSnapshotBeforeUpdate == "function") || typeof W.UNSAFE_componentWillReceiveProps != "function" && typeof W.componentWillReceiveProps != "function" || (Y !== _e || Ne !== re) && n_(c, W, y, re), bs = !1, Ne = c.memoizedState, W.state = Ne, Kp(c, y, W, w);
                var ze = c.memoizedState;
                Y !== _e || Ne !== ze || Cr.current || bs ? (typeof Ae == "function" && (nx(c, h, Ae, y), ze = c.memoizedState), (he = bs || e_(c, h, he, y, Ne, ze, re) || !1) ? (Ie || typeof W.UNSAFE_componentWillUpdate != "function" && typeof W.componentWillUpdate != "function" || (typeof W.componentWillUpdate == "function" && W.componentWillUpdate(y, ze, re), typeof W.UNSAFE_componentWillUpdate == "function" && W.UNSAFE_componentWillUpdate(y, ze, re)), typeof W.componentDidUpdate == "function" && (c.flags |= 4), typeof W.getSnapshotBeforeUpdate == "function" && (c.flags |= 1024)) : (typeof W.componentDidUpdate != "function" || Y === a.memoizedProps && Ne === a.memoizedState || (c.flags |= 4), typeof W.getSnapshotBeforeUpdate != "function" || Y === a.memoizedProps && Ne === a.memoizedState || (c.flags |= 1024), c.memoizedProps = y, c.memoizedState = ze), W.props = y, W.state = ze, W.context = re, y = he) : (typeof W.componentDidUpdate != "function" || Y === a.memoizedProps && Ne === a.memoizedState || (c.flags |= 4), typeof W.getSnapshotBeforeUpdate != "function" || Y === a.memoizedProps && Ne === a.memoizedState || (c.flags |= 1024), y = !1);
            }
            return ax(a, c, h, y, k, w);
        }
        function ax(a, c, h, y, w, k) {
            f_(a, c);
            var W = (c.flags & 128) !== 0;
            if (!y && !W) return w && v1(c, h, !1), Fo(a, c, k);
            y = c.stateNode, P2.current = c;
            var Y = W && typeof h.getDerivedStateFromError != "function" ? null : y.render();
            return c.flags |= 1, a !== null && W ? (c.child = Bl(c, a.child, null, k), c.child = Bl(c, null, Y, k)) : gr(a, c, Y, k), c.memoizedState = y.state, w && v1(c, h, !0), c.child;
        }
        function h_(a) {
            var c = a.stateNode;
            c.pendingContext ? g1(a, c.pendingContext, c.pendingContext !== c.context) : c.context && g1(a, c.context, !1), Vv(a, c.containerInfo);
        }
        function m_(a, c, h, y, w) {
            return ql(), Mv(w), c.flags |= 256, gr(a, c, h, y), c.child;
        }
        var lx = {
            dehydrated: null,
            treeContext: null,
            retryLane: 0
        };
        function cx(a) {
            return {
                baseLanes: a,
                cachePool: null,
                transitions: null
            };
        }
        function g_(a, c, h) {
            var y = c.pendingProps, w = on.current, k = !1, W = (c.flags & 128) !== 0, Y;
            if ((Y = W) || (Y = a !== null && a.memoizedState === null ? !1 : (w & 2) !== 0), Y ? (k = !0, c.flags &= -129) : (a === null || a.memoizedState !== null) && (w |= 1), Mt(on, w & 1), a === null) return Dv(c), a = c.memoizedState, a !== null && (a = a.dehydrated, a !== null) ? (c.mode & 1 ? a.data === "$!" ? c.lanes = 8 : c.lanes = 1073741824 : c.lanes = 1, null) : (W = y.children, a = y.fallback, k ? (y = c.mode, k = c.child, W = {
                mode: "hidden",
                children: W
            }, !(y & 1) && k !== null ? (k.childLanes = 0, k.pendingProps = W) : k = hh(W, y, 0, null), a = Pa(a, y, h, null), k.return = c, a.return = c, k.sibling = a, c.child = k, c.child.memoizedState = cx(h), c.memoizedState = lx, a) : ux(c, W));
            if (w = a.memoizedState, w !== null && (Y = w.dehydrated, Y !== null)) return A2(a, c, W, y, Y, w, h);
            if (k) {
                k = y.fallback, W = c.mode, w = a.child, Y = w.sibling;
                var re = {
                    mode: "hidden",
                    children: y.children
                };
                return !(W & 1) && c.child !== w ? (y = c.child, y.childLanes = 0, y.pendingProps = re, c.deletions = null) : (y = ks(w, re), y.subtreeFlags = w.subtreeFlags & 14680064), Y !== null ? k = ks(Y, k) : (k = Pa(k, W, h, null), k.flags |= 2), k.return = c, y.return = c, y.sibling = k, c.child = y, y = k, k = c.child, W = a.child.memoizedState, W = W === null ? cx(h) : {
                    baseLanes: W.baseLanes | h,
                    cachePool: null,
                    transitions: W.transitions
                }, k.memoizedState = W, k.childLanes = a.childLanes & ~h, c.memoizedState = lx, y;
            }
            return k = a.child, a = k.sibling, y = ks(k, {
                mode: "visible",
                children: y.children
            }), !(c.mode & 1) && (y.lanes = h), y.return = c, y.sibling = null, a !== null && (h = c.deletions, h === null ? (c.deletions = [
                a
            ], c.flags |= 16) : h.push(a)), c.child = y, c.memoizedState = null, y;
        }
        function ux(a, c) {
            return c = hh({
                mode: "visible",
                children: c
            }, a.mode, 0, null), c.return = a, a.child = c;
        }
        function th(a, c, h, y) {
            return y !== null && Mv(y), Bl(c, a.child, null, h), a = ux(c, c.pendingProps.children), a.flags |= 2, c.memoizedState = null, a;
        }
        function A2(a, c, h, y, w, k, W) {
            if (h) return c.flags & 256 ? (c.flags &= -257, y = ix(Error(n(422))), th(a, c, W, y)) : c.memoizedState !== null ? (c.child = a.child, c.flags |= 128, null) : (k = y.fallback, w = c.mode, y = hh({
                mode: "visible",
                children: y.children
            }, w, 0, null), k = Pa(k, w, W, null), k.flags |= 2, y.return = c, k.return = c, y.sibling = k, c.child = y, c.mode & 1 && Bl(c, a.child, null, W), c.child.memoizedState = cx(W), c.memoizedState = lx, k);
            if (!(c.mode & 1)) return th(a, c, W, null);
            if (w.data === "$!") {
                if (y = w.nextSibling && w.nextSibling.dataset, y) var Y = y.dgst;
                return y = Y, k = Error(n(419)), y = ix(k, y, void 0), th(a, c, W, y);
            }
            if (Y = (W & a.childLanes) !== 0, Rr || Y) {
                if (y = $n, y !== null) {
                    switch(W & -W){
                        case 4:
                            w = 2;
                            break;
                        case 16:
                            w = 8;
                            break;
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                        case 67108864:
                            w = 32;
                            break;
                        case 536870912:
                            w = 268435456;
                            break;
                        default:
                            w = 0;
                    }
                    w = w & (y.suspendedLanes | W) ? 0 : w, w !== 0 && w !== k.retryLane && (k.retryLane = w, Po(a, w), Bi(y, a, w, -1));
                }
                return Ex(), y = ix(Error(n(421))), th(a, c, W, y);
            }
            return w.data === "$?" ? (c.flags |= 128, c.child = a.child, c = K2.bind(null, a), w._reactRetry = c, null) : (a = k.treeContext, Zr = gs(w.nextSibling), Jr = c, Qt = !0, Mi = null, a !== null && (yi[vi++] = Oo, yi[vi++] = To, yi[vi++] = Ia, Oo = a.id, To = a.overflow, Ia = c), c = ux(c, y.children), c.flags |= 4096, c);
        }
        function y_(a, c, h) {
            a.lanes |= c;
            var y = a.alternate;
            y !== null && (y.lanes |= c), Bv(a.return, c, h);
        }
        function dx(a, c, h, y, w) {
            var k = a.memoizedState;
            k === null ? a.memoizedState = {
                isBackwards: c,
                rendering: null,
                renderingStartTime: 0,
                last: y,
                tail: h,
                tailMode: w
            } : (k.isBackwards = c, k.rendering = null, k.renderingStartTime = 0, k.last = y, k.tail = h, k.tailMode = w);
        }
        function v_(a, c, h) {
            var y = c.pendingProps, w = y.revealOrder, k = y.tail;
            if (gr(a, c, y.children, h), y = on.current, y & 2) y = y & 1 | 2, c.flags |= 128;
            else {
                if (a !== null && a.flags & 128) e: for(a = c.child; a !== null;){
                    if (a.tag === 13) a.memoizedState !== null && y_(a, h, c);
                    else if (a.tag === 19) y_(a, h, c);
                    else if (a.child !== null) {
                        a.child.return = a, a = a.child;
                        continue;
                    }
                    if (a === c) break e;
                    for(; a.sibling === null;){
                        if (a.return === null || a.return === c) break e;
                        a = a.return;
                    }
                    a.sibling.return = a.return, a = a.sibling;
                }
                y &= 1;
            }
            if (Mt(on, y), !(c.mode & 1)) c.memoizedState = null;
            else switch(w){
                case "forwards":
                    for(h = c.child, w = null; h !== null;)a = h.alternate, a !== null && Gp(a) === null && (w = h), h = h.sibling;
                    h = w, h === null ? (w = c.child, c.child = null) : (w = h.sibling, h.sibling = null), dx(c, !1, w, h, k);
                    break;
                case "backwards":
                    for(h = null, w = c.child, c.child = null; w !== null;){
                        if (a = w.alternate, a !== null && Gp(a) === null) {
                            c.child = w;
                            break;
                        }
                        a = w.sibling, w.sibling = h, h = w, w = a;
                    }
                    dx(c, !0, h, null, k);
                    break;
                case "together":
                    dx(c, !1, null, null, void 0);
                    break;
                default:
                    c.memoizedState = null;
            }
            return c.child;
        }
        function nh(a, c) {
            !(c.mode & 1) && a !== null && (a.alternate = null, c.alternate = null, c.flags |= 2);
        }
        function Fo(a, c, h) {
            if (a !== null && (c.dependencies = a.dependencies), ja |= c.lanes, !(h & c.childLanes)) return null;
            if (a !== null && c.child !== a.child) throw Error(n(153));
            if (c.child !== null) {
                for(a = c.child, h = ks(a, a.pendingProps), c.child = h, h.return = c; a.sibling !== null;)a = a.sibling, h = h.sibling = ks(a, a.pendingProps), h.return = c;
                h.sibling = null;
            }
            return c.child;
        }
        function F2(a, c, h) {
            switch(c.tag){
                case 3:
                    h_(c), ql();
                    break;
                case 5:
                    T1(c);
                    break;
                case 1:
                    jr(c.type) && Lp(c);
                    break;
                case 4:
                    Vv(c, c.stateNode.containerInfo);
                    break;
                case 10:
                    var y = c.type._context, w = c.memoizedProps.value;
                    Mt(Vp, y._currentValue), y._currentValue = w;
                    break;
                case 13:
                    if (y = c.memoizedState, y !== null) return y.dehydrated !== null ? (Mt(on, on.current & 1), c.flags |= 128, null) : h & c.child.childLanes ? g_(a, c, h) : (Mt(on, on.current & 1), a = Fo(a, c, h), a !== null ? a.sibling : null);
                    Mt(on, on.current & 1);
                    break;
                case 19:
                    if (y = (h & c.childLanes) !== 0, a.flags & 128) {
                        if (y) return v_(a, c, h);
                        c.flags |= 128;
                    }
                    if (w = c.memoizedState, w !== null && (w.rendering = null, w.tail = null, w.lastEffect = null), Mt(on, on.current), y) break;
                    return null;
                case 22:
                case 23:
                    return c.lanes = 0, d_(a, c, h);
            }
            return Fo(a, c, h);
        }
        var x_, fx, b_, w_;
        x_ = function(a, c) {
            for(var h = c.child; h !== null;){
                if (h.tag === 5 || h.tag === 6) a.appendChild(h.stateNode);
                else if (h.tag !== 4 && h.child !== null) {
                    h.child.return = h, h = h.child;
                    continue;
                }
                if (h === c) break;
                for(; h.sibling === null;){
                    if (h.return === null || h.return === c) return;
                    h = h.return;
                }
                h.sibling.return = h.return, h = h.sibling;
            }
        }, fx = function() {}, b_ = function(a, c, h, y) {
            var w = a.memoizedProps;
            if (w !== y) {
                a = c.stateNode, ka(so.current);
                var k = null;
                switch(h){
                    case "input":
                        w = ke(a, w), y = ke(a, y), k = [];
                        break;
                    case "select":
                        w = G({}, w, {
                            value: void 0
                        }), y = G({}, y, {
                            value: void 0
                        }), k = [];
                        break;
                    case "textarea":
                        w = me(a, w), y = me(a, y), k = [];
                        break;
                    default:
                        typeof w.onClick != "function" && typeof y.onClick == "function" && (a.onclick = Fp);
                }
                Mn(h, y);
                var W;
                h = null;
                for(he in w)if (!y.hasOwnProperty(he) && w.hasOwnProperty(he) && w[he] != null) if (he === "style") {
                    var Y = w[he];
                    for(W in Y)Y.hasOwnProperty(W) && (h || (h = {}), h[W] = "");
                } else he !== "dangerouslySetInnerHTML" && he !== "children" && he !== "suppressContentEditableWarning" && he !== "suppressHydrationWarning" && he !== "autoFocus" && (i.hasOwnProperty(he) ? k || (k = []) : (k = k || []).push(he, null));
                for(he in y){
                    var re = y[he];
                    if (Y = w?.[he], y.hasOwnProperty(he) && re !== Y && (re != null || Y != null)) if (he === "style") if (Y) {
                        for(W in Y)!Y.hasOwnProperty(W) || re && re.hasOwnProperty(W) || (h || (h = {}), h[W] = "");
                        for(W in re)re.hasOwnProperty(W) && Y[W] !== re[W] && (h || (h = {}), h[W] = re[W]);
                    } else h || (k || (k = []), k.push(he, h)), h = re;
                    else he === "dangerouslySetInnerHTML" ? (re = re ? re.__html : void 0, Y = Y ? Y.__html : void 0, re != null && Y !== re && (k = k || []).push(he, re)) : he === "children" ? typeof re != "string" && typeof re != "number" || (k = k || []).push(he, "" + re) : he !== "suppressContentEditableWarning" && he !== "suppressHydrationWarning" && (i.hasOwnProperty(he) ? (re != null && he === "onScroll" && Ut("scroll", a), k || Y === re || (k = [])) : (k = k || []).push(he, re));
                }
                h && (k = k || []).push("style", h);
                var he = k;
                (c.updateQueue = he) && (c.flags |= 4);
            }
        }, w_ = function(a, c, h, y) {
            h !== y && (c.flags |= 4);
        };
        function Uu(a, c) {
            if (!Qt) switch(a.tailMode){
                case "hidden":
                    c = a.tail;
                    for(var h = null; c !== null;)c.alternate !== null && (h = c), c = c.sibling;
                    h === null ? a.tail = null : h.sibling = null;
                    break;
                case "collapsed":
                    h = a.tail;
                    for(var y = null; h !== null;)h.alternate !== null && (y = h), h = h.sibling;
                    y === null ? c || a.tail === null ? a.tail = null : a.tail.sibling = null : y.sibling = null;
            }
        }
        function rr(a) {
            var c = a.alternate !== null && a.alternate.child === a.child, h = 0, y = 0;
            if (c) for(var w = a.child; w !== null;)h |= w.lanes | w.childLanes, y |= w.subtreeFlags & 14680064, y |= w.flags & 14680064, w.return = a, w = w.sibling;
            else for(w = a.child; w !== null;)h |= w.lanes | w.childLanes, y |= w.subtreeFlags, y |= w.flags, w.return = a, w = w.sibling;
            return a.subtreeFlags |= y, a.childLanes = h, c;
        }
        function D2(a, c, h) {
            var y = c.pendingProps;
            switch(Av(c), c.tag){
                case 2:
                case 16:
                case 15:
                case 0:
                case 11:
                case 7:
                case 8:
                case 12:
                case 9:
                case 14:
                    return rr(c), null;
                case 1:
                    return jr(c.type) && Mp(), rr(c), null;
                case 3:
                    return y = c.stateNode, Vl(), Ht(Cr), Ht(tr), Kv(), y.pendingContext && (y.context = y.pendingContext, y.pendingContext = null), (a === null || a.child === null) && (zp(c) ? c.flags |= 4 : a === null || a.memoizedState.isDehydrated && !(c.flags & 256) || (c.flags |= 1024, Mi !== null && (Sx(Mi), Mi = null))), fx(a, c), rr(c), null;
                case 5:
                    Uv(c);
                    var w = ka(qu.current);
                    if (h = c.type, a !== null && c.stateNode != null) b_(a, c, h, y, w), a.ref !== c.ref && (c.flags |= 512, c.flags |= 2097152);
                    else {
                        if (!y) {
                            if (c.stateNode === null) throw Error(n(166));
                            return rr(c), null;
                        }
                        if (a = ka(so.current), zp(c)) {
                            y = c.stateNode, h = c.type;
                            var k = c.memoizedProps;
                            switch(y[oo] = c, y[Fu] = k, a = (c.mode & 1) !== 0, h){
                                case "dialog":
                                    Ut("cancel", y), Ut("close", y);
                                    break;
                                case "iframe":
                                case "object":
                                case "embed":
                                    Ut("load", y);
                                    break;
                                case "video":
                                case "audio":
                                    for(w = 0; w < Tu.length; w++)Ut(Tu[w], y);
                                    break;
                                case "source":
                                    Ut("error", y);
                                    break;
                                case "img":
                                case "image":
                                case "link":
                                    Ut("error", y), Ut("load", y);
                                    break;
                                case "details":
                                    Ut("toggle", y);
                                    break;
                                case "input":
                                    Re(y, k), Ut("invalid", y);
                                    break;
                                case "select":
                                    y._wrapperState = {
                                        wasMultiple: !!k.multiple
                                    }, Ut("invalid", y);
                                    break;
                                case "textarea":
                                    xe(y, k), Ut("invalid", y);
                            }
                            Mn(h, k), w = null;
                            for(var W in k)if (k.hasOwnProperty(W)) {
                                var Y = k[W];
                                W === "children" ? typeof Y == "string" ? y.textContent !== Y && (k.suppressHydrationWarning !== !0 && Ap(y.textContent, Y, a), w = [
                                    "children",
                                    Y
                                ]) : typeof Y == "number" && y.textContent !== "" + Y && (k.suppressHydrationWarning !== !0 && Ap(y.textContent, Y, a), w = [
                                    "children",
                                    "" + Y
                                ]) : i.hasOwnProperty(W) && Y != null && W === "onScroll" && Ut("scroll", y);
                            }
                            switch(h){
                                case "input":
                                    be(y), ee(y, k, !0);
                                    break;
                                case "textarea":
                                    be(y), Se(y);
                                    break;
                                case "select":
                                case "option":
                                    break;
                                default:
                                    typeof k.onClick == "function" && (y.onclick = Fp);
                            }
                            y = w, c.updateQueue = y, y !== null && (c.flags |= 4);
                        } else {
                            W = w.nodeType === 9 ? w : w.ownerDocument, a === "http://www.w3.org/1999/xhtml" && (a = Ge(h)), a === "http://www.w3.org/1999/xhtml" ? h === "script" ? (a = W.createElement("div"), a.innerHTML = "<script><\/script>", a = a.removeChild(a.firstChild)) : typeof y.is == "string" ? a = W.createElement(h, {
                                is: y.is
                            }) : (a = W.createElement(h), h === "select" && (W = a, y.multiple ? W.multiple = !0 : y.size && (W.size = y.size))) : a = W.createElementNS(a, h), a[oo] = c, a[Fu] = y, x_(a, c, !1, !1), c.stateNode = a;
                            e: {
                                switch(W = kr(h, y), h){
                                    case "dialog":
                                        Ut("cancel", a), Ut("close", a), w = y;
                                        break;
                                    case "iframe":
                                    case "object":
                                    case "embed":
                                        Ut("load", a), w = y;
                                        break;
                                    case "video":
                                    case "audio":
                                        for(w = 0; w < Tu.length; w++)Ut(Tu[w], a);
                                        w = y;
                                        break;
                                    case "source":
                                        Ut("error", a), w = y;
                                        break;
                                    case "img":
                                    case "image":
                                    case "link":
                                        Ut("error", a), Ut("load", a), w = y;
                                        break;
                                    case "details":
                                        Ut("toggle", a), w = y;
                                        break;
                                    case "input":
                                        Re(a, y), w = ke(a, y), Ut("invalid", a);
                                        break;
                                    case "option":
                                        w = y;
                                        break;
                                    case "select":
                                        a._wrapperState = {
                                            wasMultiple: !!y.multiple
                                        }, w = G({}, y, {
                                            value: void 0
                                        }), Ut("invalid", a);
                                        break;
                                    case "textarea":
                                        xe(a, y), w = me(a, y), Ut("invalid", a);
                                        break;
                                    default:
                                        w = y;
                                }
                                Mn(h, w), Y = w;
                                for(k in Y)if (Y.hasOwnProperty(k)) {
                                    var re = Y[k];
                                    k === "style" ? Er(a, re) : k === "dangerouslySetInnerHTML" ? (re = re ? re.__html : void 0, re != null && nn(a, re)) : k === "children" ? typeof re == "string" ? (h !== "textarea" || re !== "") && Gt(a, re) : typeof re == "number" && Gt(a, "" + re) : k !== "suppressContentEditableWarning" && k !== "suppressHydrationWarning" && k !== "autoFocus" && (i.hasOwnProperty(k) ? re != null && k === "onScroll" && Ut("scroll", a) : re != null && I(a, k, re, W));
                                }
                                switch(h){
                                    case "input":
                                        be(a), ee(a, y, !1);
                                        break;
                                    case "textarea":
                                        be(a), Se(a);
                                        break;
                                    case "option":
                                        y.value != null && a.setAttribute("value", "" + ce(y.value));
                                        break;
                                    case "select":
                                        a.multiple = !!y.multiple, k = y.value, k != null ? le(a, !!y.multiple, k, !1) : y.defaultValue != null && le(a, !!y.multiple, y.defaultValue, !0);
                                        break;
                                    default:
                                        typeof w.onClick == "function" && (a.onclick = Fp);
                                }
                                switch(h){
                                    case "button":
                                    case "input":
                                    case "select":
                                    case "textarea":
                                        y = !!y.autoFocus;
                                        break e;
                                    case "img":
                                        y = !0;
                                        break e;
                                    default:
                                        y = !1;
                                }
                            }
                            y && (c.flags |= 4);
                        }
                        c.ref !== null && (c.flags |= 512, c.flags |= 2097152);
                    }
                    return rr(c), null;
                case 6:
                    if (a && c.stateNode != null) w_(a, c, a.memoizedProps, y);
                    else {
                        if (typeof y != "string" && c.stateNode === null) throw Error(n(166));
                        if (h = ka(qu.current), ka(so.current), zp(c)) {
                            if (y = c.stateNode, h = c.memoizedProps, y[oo] = c, (k = y.nodeValue !== h) && (a = Jr, a !== null)) switch(a.tag){
                                case 3:
                                    Ap(y.nodeValue, h, (a.mode & 1) !== 0);
                                    break;
                                case 5:
                                    a.memoizedProps.suppressHydrationWarning !== !0 && Ap(y.nodeValue, h, (a.mode & 1) !== 0);
                            }
                            k && (c.flags |= 4);
                        } else y = (h.nodeType === 9 ? h : h.ownerDocument).createTextNode(y), y[oo] = c, c.stateNode = y;
                    }
                    return rr(c), null;
                case 13:
                    if (Ht(on), y = c.memoizedState, a === null || a.memoizedState !== null && a.memoizedState.dehydrated !== null) {
                        if (Qt && Zr !== null && c.mode & 1 && !(c.flags & 128)) I1(), ql(), c.flags |= 98560, k = !1;
                        else if (k = zp(c), y !== null && y.dehydrated !== null) {
                            if (a === null) {
                                if (!k) throw Error(n(318));
                                if (k = c.memoizedState, k = k !== null ? k.dehydrated : null, !k) throw Error(n(317));
                                k[oo] = c;
                            } else ql(), !(c.flags & 128) && (c.memoizedState = null), c.flags |= 4;
                            rr(c), k = !1;
                        } else Mi !== null && (Sx(Mi), Mi = null), k = !0;
                        if (!k) return c.flags & 65536 ? c : null;
                    }
                    return c.flags & 128 ? (c.lanes = h, c) : (y = y !== null, y !== (a !== null && a.memoizedState !== null) && y && (c.child.flags |= 8192, c.mode & 1 && (a === null || on.current & 1 ? An === 0 && (An = 3) : Ex())), c.updateQueue !== null && (c.flags |= 4), rr(c), null);
                case 4:
                    return Vl(), fx(a, c), a === null && Pu(c.stateNode.containerInfo), rr(c), null;
                case 10:
                    return qv(c.type._context), rr(c), null;
                case 17:
                    return jr(c.type) && Mp(), rr(c), null;
                case 19:
                    if (Ht(on), k = c.memoizedState, k === null) return rr(c), null;
                    if (y = (c.flags & 128) !== 0, W = k.rendering, W === null) if (y) Uu(k, !1);
                    else {
                        if (An !== 0 || a !== null && a.flags & 128) for(a = c.child; a !== null;){
                            if (W = Gp(a), W !== null) {
                                for(c.flags |= 128, Uu(k, !1), y = W.updateQueue, y !== null && (c.updateQueue = y, c.flags |= 4), c.subtreeFlags = 0, y = h, h = c.child; h !== null;)k = h, a = y, k.flags &= 14680066, W = k.alternate, W === null ? (k.childLanes = 0, k.lanes = a, k.child = null, k.subtreeFlags = 0, k.memoizedProps = null, k.memoizedState = null, k.updateQueue = null, k.dependencies = null, k.stateNode = null) : (k.childLanes = W.childLanes, k.lanes = W.lanes, k.child = W.child, k.subtreeFlags = 0, k.deletions = null, k.memoizedProps = W.memoizedProps, k.memoizedState = W.memoizedState, k.updateQueue = W.updateQueue, k.type = W.type, a = W.dependencies, k.dependencies = a === null ? null : {
                                    lanes: a.lanes,
                                    firstContext: a.firstContext
                                }), h = h.sibling;
                                return Mt(on, on.current & 1 | 2), c.child;
                            }
                            a = a.sibling;
                        }
                        k.tail !== null && rn() > Gl && (c.flags |= 128, y = !0, Uu(k, !1), c.lanes = 4194304);
                    }
                    else {
                        if (!y) if (a = Gp(W), a !== null) {
                            if (c.flags |= 128, y = !0, h = a.updateQueue, h !== null && (c.updateQueue = h, c.flags |= 4), Uu(k, !0), k.tail === null && k.tailMode === "hidden" && !W.alternate && !Qt) return rr(c), null;
                        } else 2 * rn() - k.renderingStartTime > Gl && h !== 1073741824 && (c.flags |= 128, y = !0, Uu(k, !1), c.lanes = 4194304);
                        k.isBackwards ? (W.sibling = c.child, c.child = W) : (h = k.last, h !== null ? h.sibling = W : c.child = W, k.last = W);
                    }
                    return k.tail !== null ? (c = k.tail, k.rendering = c, k.tail = c.sibling, k.renderingStartTime = rn(), c.sibling = null, h = on.current, Mt(on, y ? h & 1 | 2 : h & 1), c) : (rr(c), null);
                case 22:
                case 23:
                    return _x(), y = c.memoizedState !== null, a !== null && a.memoizedState !== null !== y && (c.flags |= 8192), y && c.mode & 1 ? Yr & 1073741824 && (rr(c), c.subtreeFlags & 6 && (c.flags |= 8192)) : rr(c), null;
                case 24:
                    return null;
                case 25:
                    return null;
            }
            throw Error(n(156, c.tag));
        }
        function M2(a, c) {
            switch(Av(c), c.tag){
                case 1:
                    return jr(c.type) && Mp(), a = c.flags, a & 65536 ? (c.flags = a & -65537 | 128, c) : null;
                case 3:
                    return Vl(), Ht(Cr), Ht(tr), Kv(), a = c.flags, a & 65536 && !(a & 128) ? (c.flags = a & -65537 | 128, c) : null;
                case 5:
                    return Uv(c), null;
                case 13:
                    if (Ht(on), a = c.memoizedState, a !== null && a.dehydrated !== null) {
                        if (c.alternate === null) throw Error(n(340));
                        ql();
                    }
                    return a = c.flags, a & 65536 ? (c.flags = a & -65537 | 128, c) : null;
                case 19:
                    return Ht(on), null;
                case 4:
                    return Vl(), null;
                case 10:
                    return qv(c.type._context), null;
                case 22:
                case 23:
                    return _x(), null;
                case 24:
                    return null;
                default:
                    return null;
            }
        }
        var rh = !1, ir = !1, L2 = typeof WeakSet == "function" ? WeakSet : Set, Be = null;
        function Hl(a, c) {
            var h = a.ref;
            if (h !== null) if (typeof h == "function") try {
                h(null);
            } catch (y) {
                cn(a, c, y);
            }
            else h.current = null;
        }
        function px(a, c, h) {
            try {
                h();
            } catch (y) {
                cn(a, c, y);
            }
        }
        var N_ = !1;
        function $2(a, c) {
            if (_v = Sp, a = e1(), yv(a)) {
                if ("selectionStart" in a) var h = {
                    start: a.selectionStart,
                    end: a.selectionEnd
                };
                else e: {
                    h = (h = a.ownerDocument) && h.defaultView || window;
                    var y = h.getSelection && h.getSelection();
                    if (y && y.rangeCount !== 0) {
                        h = y.anchorNode;
                        var w = y.anchorOffset, k = y.focusNode;
                        y = y.focusOffset;
                        try {
                            h.nodeType, k.nodeType;
                        } catch  {
                            h = null;
                            break e;
                        }
                        var W = 0, Y = -1, re = -1, he = 0, Ie = 0, _e = a, Ne = null;
                        t: for(;;){
                            for(var Ae; _e !== h || w !== 0 && _e.nodeType !== 3 || (Y = W + w), _e !== k || y !== 0 && _e.nodeType !== 3 || (re = W + y), _e.nodeType === 3 && (W += _e.nodeValue.length), (Ae = _e.firstChild) !== null;)Ne = _e, _e = Ae;
                            for(;;){
                                if (_e === a) break t;
                                if (Ne === h && ++he === w && (Y = W), Ne === k && ++Ie === y && (re = W), (Ae = _e.nextSibling) !== null) break;
                                _e = Ne, Ne = _e.parentNode;
                            }
                            _e = Ae;
                        }
                        h = Y === -1 || re === -1 ? null : {
                            start: Y,
                            end: re
                        };
                    } else h = null;
                }
                h = h || {
                    start: 0,
                    end: 0
                };
            } else h = null;
            for(Ev = {
                focusedElem: a,
                selectionRange: h
            }, Sp = !1, Be = c; Be !== null;)if (c = Be, a = c.child, (c.subtreeFlags & 1028) !== 0 && a !== null) a.return = c, Be = a;
            else for(; Be !== null;){
                c = Be;
                try {
                    var ze = c.alternate;
                    if (c.flags & 1024) switch(c.tag){
                        case 0:
                        case 11:
                        case 15:
                            break;
                        case 1:
                            if (ze !== null) {
                                var We = ze.memoizedProps, xn = ze.memoizedState, ue = c.stateNode, se = ue.getSnapshotBeforeUpdate(c.elementType === c.type ? We : Li(c.type, We), xn);
                                ue.__reactInternalSnapshotBeforeUpdate = se;
                            }
                            break;
                        case 3:
                            var fe = c.stateNode.containerInfo;
                            fe.nodeType === 1 ? fe.textContent = "" : fe.nodeType === 9 && fe.documentElement && fe.removeChild(fe.documentElement);
                            break;
                        case 5:
                        case 6:
                        case 4:
                        case 17:
                            break;
                        default:
                            throw Error(n(163));
                    }
                } catch (Ce) {
                    cn(c, c.return, Ce);
                }
                if (a = c.sibling, a !== null) {
                    a.return = c.return, Be = a;
                    break;
                }
                Be = c.return;
            }
            return ze = N_, N_ = !1, ze;
        }
        function Hu(a, c, h) {
            var y = c.updateQueue;
            if (y = y !== null ? y.lastEffect : null, y !== null) {
                var w = y = y.next;
                do {
                    if ((w.tag & a) === a) {
                        var k = w.destroy;
                        w.destroy = void 0, k !== void 0 && px(c, h, k);
                    }
                    w = w.next;
                }while (w !== y);
            }
        }
        function ih(a, c) {
            if (c = c.updateQueue, c = c !== null ? c.lastEffect : null, c !== null) {
                var h = c = c.next;
                do {
                    if ((h.tag & a) === a) {
                        var y = h.create;
                        h.destroy = y();
                    }
                    h = h.next;
                }while (h !== c);
            }
        }
        function hx(a) {
            var c = a.ref;
            if (c !== null) {
                var h = a.stateNode;
                switch(a.tag){
                    case 5:
                        a = h;
                        break;
                    default:
                        a = h;
                }
                typeof c == "function" ? c(a) : c.current = a;
            }
        }
        function S_(a) {
            var c = a.alternate;
            c !== null && (a.alternate = null, S_(c)), a.child = null, a.deletions = null, a.sibling = null, a.tag === 5 && (c = a.stateNode, c !== null && (delete c[oo], delete c[Fu], delete c[Rv], delete c[w2], delete c[N2])), a.stateNode = null, a.return = null, a.dependencies = null, a.memoizedProps = null, a.memoizedState = null, a.pendingProps = null, a.stateNode = null, a.updateQueue = null;
        }
        function I_(a) {
            return a.tag === 5 || a.tag === 3 || a.tag === 4;
        }
        function __(a) {
            e: for(;;){
                for(; a.sibling === null;){
                    if (a.return === null || I_(a.return)) return null;
                    a = a.return;
                }
                for(a.sibling.return = a.return, a = a.sibling; a.tag !== 5 && a.tag !== 6 && a.tag !== 18;){
                    if (a.flags & 2 || a.child === null || a.tag === 4) continue e;
                    a.child.return = a, a = a.child;
                }
                if (!(a.flags & 2)) return a.stateNode;
            }
        }
        function mx(a, c, h) {
            var y = a.tag;
            if (y === 5 || y === 6) a = a.stateNode, c ? h.nodeType === 8 ? h.parentNode.insertBefore(a, c) : h.insertBefore(a, c) : (h.nodeType === 8 ? (c = h.parentNode, c.insertBefore(a, h)) : (c = h, c.appendChild(a)), h = h._reactRootContainer, h != null || c.onclick !== null || (c.onclick = Fp));
            else if (y !== 4 && (a = a.child, a !== null)) for(mx(a, c, h), a = a.sibling; a !== null;)mx(a, c, h), a = a.sibling;
        }
        function gx(a, c, h) {
            var y = a.tag;
            if (y === 5 || y === 6) a = a.stateNode, c ? h.insertBefore(a, c) : h.appendChild(a);
            else if (y !== 4 && (a = a.child, a !== null)) for(gx(a, c, h), a = a.sibling; a !== null;)gx(a, c, h), a = a.sibling;
        }
        var Kn = null, $i = !1;
        function Ns(a, c, h) {
            for(h = h.child; h !== null;)E_(a, c, h), h = h.sibling;
        }
        function E_(a, c, h) {
            if (gi && typeof gi.onCommitFiberUnmount == "function") try {
                gi.onCommitFiberUnmount(_l, h);
            } catch  {}
            switch(h.tag){
                case 5:
                    ir || Hl(h, c);
                case 6:
                    var y = Kn, w = $i;
                    Kn = null, Ns(a, c, h), Kn = y, $i = w, Kn !== null && ($i ? (a = Kn, h = h.stateNode, a.nodeType === 8 ? a.parentNode.removeChild(h) : a.removeChild(h)) : Kn.removeChild(h.stateNode));
                    break;
                case 18:
                    Kn !== null && ($i ? (a = Kn, h = h.stateNode, a.nodeType === 8 ? jv(a.parentNode, h) : a.nodeType === 1 && jv(a, h), Iu(a)) : jv(Kn, h.stateNode));
                    break;
                case 4:
                    y = Kn, w = $i, Kn = h.stateNode.containerInfo, $i = !0, Ns(a, c, h), Kn = y, $i = w;
                    break;
                case 0:
                case 11:
                case 14:
                case 15:
                    if (!ir && (y = h.updateQueue, y !== null && (y = y.lastEffect, y !== null))) {
                        w = y = y.next;
                        do {
                            var k = w, W = k.destroy;
                            k = k.tag, W !== void 0 && (k & 2 || k & 4) && px(h, c, W), w = w.next;
                        }while (w !== y);
                    }
                    Ns(a, c, h);
                    break;
                case 1:
                    if (!ir && (Hl(h, c), y = h.stateNode, typeof y.componentWillUnmount == "function")) try {
                        y.props = h.memoizedProps, y.state = h.memoizedState, y.componentWillUnmount();
                    } catch (Y) {
                        cn(h, c, Y);
                    }
                    Ns(a, c, h);
                    break;
                case 21:
                    Ns(a, c, h);
                    break;
                case 22:
                    h.mode & 1 ? (ir = (y = ir) || h.memoizedState !== null, Ns(a, c, h), ir = y) : Ns(a, c, h);
                    break;
                default:
                    Ns(a, c, h);
            }
        }
        function k_(a) {
            var c = a.updateQueue;
            if (c !== null) {
                a.updateQueue = null;
                var h = a.stateNode;
                h === null && (h = a.stateNode = new L2), c.forEach(function(y) {
                    var w = G2.bind(null, a, y);
                    h.has(y) || (h.add(y), y.then(w, w));
                });
            }
        }
        function qi(a, c) {
            var h = c.deletions;
            if (h !== null) for(var y = 0; y < h.length; y++){
                var w = h[y];
                try {
                    var k = a, W = c, Y = W;
                    e: for(; Y !== null;){
                        switch(Y.tag){
                            case 5:
                                Kn = Y.stateNode, $i = !1;
                                break e;
                            case 3:
                                Kn = Y.stateNode.containerInfo, $i = !0;
                                break e;
                            case 4:
                                Kn = Y.stateNode.containerInfo, $i = !0;
                                break e;
                        }
                        Y = Y.return;
                    }
                    if (Kn === null) throw Error(n(160));
                    E_(k, W, w), Kn = null, $i = !1;
                    var re = w.alternate;
                    re !== null && (re.return = null), w.return = null;
                } catch (he) {
                    cn(w, c, he);
                }
            }
            if (c.subtreeFlags & 12854) for(c = c.child; c !== null;)C_(c, a), c = c.sibling;
        }
        function C_(a, c) {
            var h = a.alternate, y = a.flags;
            switch(a.tag){
                case 0:
                case 11:
                case 14:
                case 15:
                    if (qi(c, a), lo(a), y & 4) {
                        try {
                            Hu(3, a, a.return), ih(3, a);
                        } catch (We) {
                            cn(a, a.return, We);
                        }
                        try {
                            Hu(5, a, a.return);
                        } catch (We) {
                            cn(a, a.return, We);
                        }
                    }
                    break;
                case 1:
                    qi(c, a), lo(a), y & 512 && h !== null && Hl(h, h.return);
                    break;
                case 5:
                    if (qi(c, a), lo(a), y & 512 && h !== null && Hl(h, h.return), a.flags & 32) {
                        var w = a.stateNode;
                        try {
                            Gt(w, "");
                        } catch (We) {
                            cn(a, a.return, We);
                        }
                    }
                    if (y & 4 && (w = a.stateNode, w != null)) {
                        var k = a.memoizedProps, W = h !== null ? h.memoizedProps : k, Y = a.type, re = a.updateQueue;
                        if (a.updateQueue = null, re !== null) try {
                            Y === "input" && k.type === "radio" && k.name != null && $e(w, k), kr(Y, W);
                            var he = kr(Y, k);
                            for(W = 0; W < re.length; W += 2){
                                var Ie = re[W], _e = re[W + 1];
                                Ie === "style" ? Er(w, _e) : Ie === "dangerouslySetInnerHTML" ? nn(w, _e) : Ie === "children" ? Gt(w, _e) : I(w, Ie, _e, he);
                            }
                            switch(Y){
                                case "input":
                                    nt(w, k);
                                    break;
                                case "textarea":
                                    pe(w, k);
                                    break;
                                case "select":
                                    var Ne = w._wrapperState.wasMultiple;
                                    w._wrapperState.wasMultiple = !!k.multiple;
                                    var Ae = k.value;
                                    Ae != null ? le(w, !!k.multiple, Ae, !1) : Ne !== !!k.multiple && (k.defaultValue != null ? le(w, !!k.multiple, k.defaultValue, !0) : le(w, !!k.multiple, k.multiple ? [] : "", !1));
                            }
                            w[Fu] = k;
                        } catch (We) {
                            cn(a, a.return, We);
                        }
                    }
                    break;
                case 6:
                    if (qi(c, a), lo(a), y & 4) {
                        if (a.stateNode === null) throw Error(n(162));
                        w = a.stateNode, k = a.memoizedProps;
                        try {
                            w.nodeValue = k;
                        } catch (We) {
                            cn(a, a.return, We);
                        }
                    }
                    break;
                case 3:
                    if (qi(c, a), lo(a), y & 4 && h !== null && h.memoizedState.isDehydrated) try {
                        Iu(c.containerInfo);
                    } catch (We) {
                        cn(a, a.return, We);
                    }
                    break;
                case 4:
                    qi(c, a), lo(a);
                    break;
                case 13:
                    qi(c, a), lo(a), w = a.child, w.flags & 8192 && (k = w.memoizedState !== null, w.stateNode.isHidden = k, !k || w.alternate !== null && w.alternate.memoizedState !== null || (xx = rn())), y & 4 && k_(a);
                    break;
                case 22:
                    if (Ie = h !== null && h.memoizedState !== null, a.mode & 1 ? (ir = (he = ir) || Ie, qi(c, a), ir = he) : qi(c, a), lo(a), y & 8192) {
                        if (he = a.memoizedState !== null, (a.stateNode.isHidden = he) && !Ie && a.mode & 1) for(Be = a, Ie = a.child; Ie !== null;){
                            for(_e = Be = Ie; Be !== null;){
                                switch(Ne = Be, Ae = Ne.child, Ne.tag){
                                    case 0:
                                    case 11:
                                    case 14:
                                    case 15:
                                        Hu(4, Ne, Ne.return);
                                        break;
                                    case 1:
                                        Hl(Ne, Ne.return);
                                        var ze = Ne.stateNode;
                                        if (typeof ze.componentWillUnmount == "function") {
                                            y = Ne, h = Ne.return;
                                            try {
                                                c = y, ze.props = c.memoizedProps, ze.state = c.memoizedState, ze.componentWillUnmount();
                                            } catch (We) {
                                                cn(y, h, We);
                                            }
                                        }
                                        break;
                                    case 5:
                                        Hl(Ne, Ne.return);
                                        break;
                                    case 22:
                                        if (Ne.memoizedState !== null) {
                                            O_(_e);
                                            continue;
                                        }
                                }
                                Ae !== null ? (Ae.return = Ne, Be = Ae) : O_(_e);
                            }
                            Ie = Ie.sibling;
                        }
                        e: for(Ie = null, _e = a;;){
                            if (_e.tag === 5) {
                                if (Ie === null) {
                                    Ie = _e;
                                    try {
                                        w = _e.stateNode, he ? (k = w.style, typeof k.setProperty == "function" ? k.setProperty("display", "none", "important") : k.display = "none") : (Y = _e.stateNode, re = _e.memoizedProps.style, W = re != null && re.hasOwnProperty("display") ? re.display : null, Y.style.display = _r("display", W));
                                    } catch (We) {
                                        cn(a, a.return, We);
                                    }
                                }
                            } else if (_e.tag === 6) {
                                if (Ie === null) try {
                                    _e.stateNode.nodeValue = he ? "" : _e.memoizedProps;
                                } catch (We) {
                                    cn(a, a.return, We);
                                }
                            } else if ((_e.tag !== 22 && _e.tag !== 23 || _e.memoizedState === null || _e === a) && _e.child !== null) {
                                _e.child.return = _e, _e = _e.child;
                                continue;
                            }
                            if (_e === a) break e;
                            for(; _e.sibling === null;){
                                if (_e.return === null || _e.return === a) break e;
                                Ie === _e && (Ie = null), _e = _e.return;
                            }
                            Ie === _e && (Ie = null), _e.sibling.return = _e.return, _e = _e.sibling;
                        }
                    }
                    break;
                case 19:
                    qi(c, a), lo(a), y & 4 && k_(a);
                    break;
                case 21:
                    break;
                default:
                    qi(c, a), lo(a);
            }
        }
        function lo(a) {
            var c = a.flags;
            if (c & 2) {
                try {
                    e: {
                        for(var h = a.return; h !== null;){
                            if (I_(h)) {
                                var y = h;
                                break e;
                            }
                            h = h.return;
                        }
                        throw Error(n(160));
                    }
                    switch(y.tag){
                        case 5:
                            var w = y.stateNode;
                            y.flags & 32 && (Gt(w, ""), y.flags &= -33);
                            var k = __(a);
                            gx(a, k, w);
                            break;
                        case 3:
                        case 4:
                            var W = y.stateNode.containerInfo, Y = __(a);
                            mx(a, Y, W);
                            break;
                        default:
                            throw Error(n(161));
                    }
                } catch (re) {
                    cn(a, a.return, re);
                }
                a.flags &= -3;
            }
            c & 4096 && (a.flags &= -4097);
        }
        function q2(a, c, h) {
            Be = a, j_(a);
        }
        function j_(a, c, h) {
            for(var y = (a.mode & 1) !== 0; Be !== null;){
                var w = Be, k = w.child;
                if (w.tag === 22 && y) {
                    var W = w.memoizedState !== null || rh;
                    if (!W) {
                        var Y = w.alternate, re = Y !== null && Y.memoizedState !== null || ir;
                        Y = rh;
                        var he = ir;
                        if (rh = W, (ir = re) && !he) for(Be = w; Be !== null;)W = Be, re = W.child, W.tag === 22 && W.memoizedState !== null ? T_(w) : re !== null ? (re.return = W, Be = re) : T_(w);
                        for(; k !== null;)Be = k, j_(k), k = k.sibling;
                        Be = w, rh = Y, ir = he;
                    }
                    R_(a);
                } else w.subtreeFlags & 8772 && k !== null ? (k.return = w, Be = k) : R_(a);
            }
        }
        function R_(a) {
            for(; Be !== null;){
                var c = Be;
                if (c.flags & 8772) {
                    var h = c.alternate;
                    try {
                        if (c.flags & 8772) switch(c.tag){
                            case 0:
                            case 11:
                            case 15:
                                ir || ih(5, c);
                                break;
                            case 1:
                                var y = c.stateNode;
                                if (c.flags & 4 && !ir) if (h === null) y.componentDidMount();
                                else {
                                    var w = c.elementType === c.type ? h.memoizedProps : Li(c.type, h.memoizedProps);
                                    y.componentDidUpdate(w, h.memoizedState, y.__reactInternalSnapshotBeforeUpdate);
                                }
                                var k = c.updateQueue;
                                k !== null && O1(c, k, y);
                                break;
                            case 3:
                                var W = c.updateQueue;
                                if (W !== null) {
                                    if (h = null, c.child !== null) switch(c.child.tag){
                                        case 5:
                                            h = c.child.stateNode;
                                            break;
                                        case 1:
                                            h = c.child.stateNode;
                                    }
                                    O1(c, W, h);
                                }
                                break;
                            case 5:
                                var Y = c.stateNode;
                                if (h === null && c.flags & 4) {
                                    h = Y;
                                    var re = c.memoizedProps;
                                    switch(c.type){
                                        case "button":
                                        case "input":
                                        case "select":
                                        case "textarea":
                                            re.autoFocus && h.focus();
                                            break;
                                        case "img":
                                            re.src && (h.src = re.src);
                                    }
                                }
                                break;
                            case 6:
                                break;
                            case 4:
                                break;
                            case 12:
                                break;
                            case 13:
                                if (c.memoizedState === null) {
                                    var he = c.alternate;
                                    if (he !== null) {
                                        var Ie = he.memoizedState;
                                        if (Ie !== null) {
                                            var _e = Ie.dehydrated;
                                            _e !== null && Iu(_e);
                                        }
                                    }
                                }
                                break;
                            case 19:
                            case 17:
                            case 21:
                            case 22:
                            case 23:
                            case 25:
                                break;
                            default:
                                throw Error(n(163));
                        }
                        ir || c.flags & 512 && hx(c);
                    } catch (Ne) {
                        cn(c, c.return, Ne);
                    }
                }
                if (c === a) {
                    Be = null;
                    break;
                }
                if (h = c.sibling, h !== null) {
                    h.return = c.return, Be = h;
                    break;
                }
                Be = c.return;
            }
        }
        function O_(a) {
            for(; Be !== null;){
                var c = Be;
                if (c === a) {
                    Be = null;
                    break;
                }
                var h = c.sibling;
                if (h !== null) {
                    h.return = c.return, Be = h;
                    break;
                }
                Be = c.return;
            }
        }
        function T_(a) {
            for(; Be !== null;){
                var c = Be;
                try {
                    switch(c.tag){
                        case 0:
                        case 11:
                        case 15:
                            var h = c.return;
                            try {
                                ih(4, c);
                            } catch (re) {
                                cn(c, h, re);
                            }
                            break;
                        case 1:
                            var y = c.stateNode;
                            if (typeof y.componentDidMount == "function") {
                                var w = c.return;
                                try {
                                    y.componentDidMount();
                                } catch (re) {
                                    cn(c, w, re);
                                }
                            }
                            var k = c.return;
                            try {
                                hx(c);
                            } catch (re) {
                                cn(c, k, re);
                            }
                            break;
                        case 5:
                            var W = c.return;
                            try {
                                hx(c);
                            } catch (re) {
                                cn(c, W, re);
                            }
                    }
                } catch (re) {
                    cn(c, c.return, re);
                }
                if (c === a) {
                    Be = null;
                    break;
                }
                var Y = c.sibling;
                if (Y !== null) {
                    Y.return = c.return, Be = Y;
                    break;
                }
                Be = c.return;
            }
        }
        var B2 = Math.ceil, oh = C.ReactCurrentDispatcher, yx = C.ReactCurrentOwner, wi = C.ReactCurrentBatchConfig, Nt = 0, $n = null, En = null, Gn = 0, Yr = 0, Kl = ys(0), An = 0, Ku = null, ja = 0, sh = 0, vx = 0, Gu = null, Or = null, xx = 0, Gl = 1 / 0, Do = null, ah = !1, bx = null, Ss = null, lh = !1, Is = null, ch = 0, Qu = 0, wx = null, uh = -1, dh = 0;
        function yr() {
            return Nt & 6 ? rn() : uh !== -1 ? uh : uh = rn();
        }
        function _s(a) {
            return a.mode & 1 ? Nt & 2 && Gn !== 0 ? Gn & -Gn : I2.transition !== null ? (dh === 0 && (dh = _I()), dh) : (a = Ct, a !== 0 || (a = window.event, a = a === void 0 ? 16 : AI(a.type)), a) : 1;
        }
        function Bi(a, c, h, y) {
            if (50 < Qu) throw Qu = 0, wx = null, Error(n(185));
            xu(a, h, y), (!(Nt & 2) || a !== $n) && (a === $n && (!(Nt & 2) && (sh |= h), An === 4 && Es(a, Gn)), Tr(a, y), h === 1 && Nt === 0 && !(c.mode & 1) && (Gl = rn() + 500, $p && xs()));
        }
        function Tr(a, c) {
            var h = a.callbackNode;
            tv(a, c);
            var y = cs(a, a === $n ? Gn : 0);
            if (y === 0) h !== null && vp(h), a.callbackNode = null, a.callbackPriority = 0;
            else if (c = y & -y, a.callbackPriority !== c) {
                if (h != null && vp(h), c === 1) a.tag === 0 ? S2(A_.bind(null, a)) : x1(A_.bind(null, a)), x2(function() {
                    !(Nt & 6) && xs();
                }), h = null;
                else {
                    switch(EI(y)){
                        case 1:
                            h = yu;
                            break;
                        case 4:
                            h = bp;
                            break;
                        case 16:
                            h = Il;
                            break;
                        case 536870912:
                            h = vu;
                            break;
                        default:
                            h = Il;
                    }
                    h = z_(h, P_.bind(null, a));
                }
                a.callbackPriority = c, a.callbackNode = h;
            }
        }
        function P_(a, c) {
            if (uh = -1, dh = 0, Nt & 6) throw Error(n(327));
            var h = a.callbackNode;
            if (Ql() && a.callbackNode !== h) return null;
            var y = cs(a, a === $n ? Gn : 0);
            if (y === 0) return null;
            if (y & 30 || y & a.expiredLanes || c) c = fh(a, y);
            else {
                c = y;
                var w = Nt;
                Nt |= 2;
                var k = D_();
                ($n !== a || Gn !== c) && (Do = null, Gl = rn() + 500, Oa(a, c));
                do try {
                    V2();
                    break;
                } catch (Y) {
                    F_(a, Y);
                }
                while (!0);
                $v(), oh.current = k, Nt = w, En !== null ? c = 0 : ($n = null, Gn = 0, c = An);
            }
            if (c !== 0) {
                if (c === 2 && (w = kl(a), w !== 0 && (y = w, c = Nx(a, w))), c === 1) throw h = Ku, Oa(a, 0), Es(a, y), Tr(a, rn()), h;
                if (c === 6) Es(a, y);
                else {
                    if (w = a.current.alternate, !(y & 30) && !z2(w) && (c = fh(a, y), c === 2 && (k = kl(a), k !== 0 && (y = k, c = Nx(a, k))), c === 1)) throw h = Ku, Oa(a, 0), Es(a, y), Tr(a, rn()), h;
                    switch(a.finishedWork = w, a.finishedLanes = y, c){
                        case 0:
                        case 1:
                            throw Error(n(345));
                        case 2:
                            Ta(a, Or, Do);
                            break;
                        case 3:
                            if (Es(a, y), (y & 130023424) === y && (c = xx + 500 - rn(), 10 < c)) {
                                if (cs(a, 0) !== 0) break;
                                if (w = a.suspendedLanes, (w & y) !== y) {
                                    yr(), a.pingedLanes |= a.suspendedLanes & w;
                                    break;
                                }
                                a.timeoutHandle = Cv(Ta.bind(null, a, Or, Do), c);
                                break;
                            }
                            Ta(a, Or, Do);
                            break;
                        case 4:
                            if (Es(a, y), (y & 4194240) === y) break;
                            for(c = a.eventTimes, w = -1; 0 < y;){
                                var W = 31 - Gr(y);
                                k = 1 << W, W = c[W], W > w && (w = W), y &= ~k;
                            }
                            if (y = w, y = rn() - y, y = (120 > y ? 120 : 480 > y ? 480 : 1080 > y ? 1080 : 1920 > y ? 1920 : 3e3 > y ? 3e3 : 4320 > y ? 4320 : 1960 * B2(y / 1960)) - y, 10 < y) {
                                a.timeoutHandle = Cv(Ta.bind(null, a, Or, Do), y);
                                break;
                            }
                            Ta(a, Or, Do);
                            break;
                        case 5:
                            Ta(a, Or, Do);
                            break;
                        default:
                            throw Error(n(329));
                    }
                }
            }
            return Tr(a, rn()), a.callbackNode === h ? P_.bind(null, a) : null;
        }
        function Nx(a, c) {
            var h = Gu;
            return a.current.memoizedState.isDehydrated && (Oa(a, c).flags |= 256), a = fh(a, c), a !== 2 && (c = Or, Or = h, c !== null && Sx(c)), a;
        }
        function Sx(a) {
            Or === null ? Or = a : Or.push.apply(Or, a);
        }
        function z2(a) {
            for(var c = a;;){
                if (c.flags & 16384) {
                    var h = c.updateQueue;
                    if (h !== null && (h = h.stores, h !== null)) for(var y = 0; y < h.length; y++){
                        var w = h[y], k = w.getSnapshot;
                        w = w.value;
                        try {
                            if (!Di(k(), w)) return !1;
                        } catch  {
                            return !1;
                        }
                    }
                }
                if (h = c.child, c.subtreeFlags & 16384 && h !== null) h.return = c, c = h;
                else {
                    if (c === a) break;
                    for(; c.sibling === null;){
                        if (c.return === null || c.return === a) return !0;
                        c = c.return;
                    }
                    c.sibling.return = c.return, c = c.sibling;
                }
            }
            return !0;
        }
        function Es(a, c) {
            for(c &= ~vx, c &= ~sh, a.suspendedLanes |= c, a.pingedLanes &= ~c, a = a.expirationTimes; 0 < c;){
                var h = 31 - Gr(c), y = 1 << h;
                a[h] = -1, c &= ~y;
            }
        }
        function A_(a) {
            if (Nt & 6) throw Error(n(327));
            Ql();
            var c = cs(a, 0);
            if (!(c & 1)) return Tr(a, rn()), null;
            var h = fh(a, c);
            if (a.tag !== 0 && h === 2) {
                var y = kl(a);
                y !== 0 && (c = y, h = Nx(a, y));
            }
            if (h === 1) throw h = Ku, Oa(a, 0), Es(a, c), Tr(a, rn()), h;
            if (h === 6) throw Error(n(345));
            return a.finishedWork = a.current.alternate, a.finishedLanes = c, Ta(a, Or, Do), Tr(a, rn()), null;
        }
        function Ix(a, c) {
            var h = Nt;
            Nt |= 1;
            try {
                return a(c);
            } finally{
                Nt = h, Nt === 0 && (Gl = rn() + 500, $p && xs());
            }
        }
        function Ra(a) {
            Is !== null && Is.tag === 0 && !(Nt & 6) && Ql();
            var c = Nt;
            Nt |= 1;
            var h = wi.transition, y = Ct;
            try {
                if (wi.transition = null, Ct = 1, a) return a();
            } finally{
                Ct = y, wi.transition = h, Nt = c, !(Nt & 6) && xs();
            }
        }
        function _x() {
            Yr = Kl.current, Ht(Kl);
        }
        function Oa(a, c) {
            a.finishedWork = null, a.finishedLanes = 0;
            var h = a.timeoutHandle;
            if (h !== -1 && (a.timeoutHandle = -1, v2(h)), En !== null) for(h = En.return; h !== null;){
                var y = h;
                switch(Av(y), y.tag){
                    case 1:
                        y = y.type.childContextTypes, y != null && Mp();
                        break;
                    case 3:
                        Vl(), Ht(Cr), Ht(tr), Kv();
                        break;
                    case 5:
                        Uv(y);
                        break;
                    case 4:
                        Vl();
                        break;
                    case 13:
                        Ht(on);
                        break;
                    case 19:
                        Ht(on);
                        break;
                    case 10:
                        qv(y.type._context);
                        break;
                    case 22:
                    case 23:
                        _x();
                }
                h = h.return;
            }
            if ($n = a, En = a = ks(a.current, null), Gn = Yr = c, An = 0, Ku = null, vx = sh = ja = 0, Or = Gu = null, Ea !== null) {
                for(c = 0; c < Ea.length; c++)if (h = Ea[c], y = h.interleaved, y !== null) {
                    h.interleaved = null;
                    var w = y.next, k = h.pending;
                    if (k !== null) {
                        var W = k.next;
                        k.next = w, y.next = W;
                    }
                    h.pending = y;
                }
                Ea = null;
            }
            return a;
        }
        function F_(a, c) {
            do {
                var h = En;
                try {
                    if ($v(), Qp.current = Xp, Jp) {
                        for(var y = sn.memoizedState; y !== null;){
                            var w = y.queue;
                            w !== null && (w.pending = null), y = y.next;
                        }
                        Jp = !1;
                    }
                    if (Ca = 0, Ln = Pn = sn = null, Bu = !1, zu = 0, yx.current = null, h === null || h.return === null) {
                        An = 1, Ku = c, En = null;
                        break;
                    }
                    e: {
                        var k = a, W = h.return, Y = h, re = c;
                        if (c = Gn, Y.flags |= 32768, re !== null && typeof re == "object" && typeof re.then == "function") {
                            var he = re, Ie = Y, _e = Ie.tag;
                            if (!(Ie.mode & 1) && (_e === 0 || _e === 11 || _e === 15)) {
                                var Ne = Ie.alternate;
                                Ne ? (Ie.updateQueue = Ne.updateQueue, Ie.memoizedState = Ne.memoizedState, Ie.lanes = Ne.lanes) : (Ie.updateQueue = null, Ie.memoizedState = null);
                            }
                            var Ae = s_(W);
                            if (Ae !== null) {
                                Ae.flags &= -257, a_(Ae, W, Y, k, c), Ae.mode & 1 && o_(k, he, c), c = Ae, re = he;
                                var ze = c.updateQueue;
                                if (ze === null) {
                                    var We = new Set;
                                    We.add(re), c.updateQueue = We;
                                } else ze.add(re);
                                break e;
                            } else {
                                if (!(c & 1)) {
                                    o_(k, he, c), Ex();
                                    break e;
                                }
                                re = Error(n(426));
                            }
                        } else if (Qt && Y.mode & 1) {
                            var xn = s_(W);
                            if (xn !== null) {
                                !(xn.flags & 65536) && (xn.flags |= 256), a_(xn, W, Y, k, c), Mv(Ul(re, Y));
                                break e;
                            }
                        }
                        k = re = Ul(re, Y), An !== 4 && (An = 2), Gu === null ? Gu = [
                            k
                        ] : Gu.push(k), k = W;
                        do {
                            switch(k.tag){
                                case 3:
                                    k.flags |= 65536, c &= -c, k.lanes |= c;
                                    var ue = r_(k, re, c);
                                    R1(k, ue);
                                    break e;
                                case 1:
                                    Y = re;
                                    var se = k.type, fe = k.stateNode;
                                    if (!(k.flags & 128) && (typeof se.getDerivedStateFromError == "function" || fe !== null && typeof fe.componentDidCatch == "function" && (Ss === null || !Ss.has(fe)))) {
                                        k.flags |= 65536, c &= -c, k.lanes |= c;
                                        var Ce = i_(k, Y, c);
                                        R1(k, Ce);
                                        break e;
                                    }
                            }
                            k = k.return;
                        }while (k !== null);
                    }
                    L_(h);
                } catch (Ve) {
                    c = Ve, En === h && h !== null && (En = h = h.return);
                    continue;
                }
                break;
            }while (!0);
        }
        function D_() {
            var a = oh.current;
            return oh.current = Xp, a === null ? Xp : a;
        }
        function Ex() {
            (An === 0 || An === 3 || An === 2) && (An = 4), $n === null || !(ja & 268435455) && !(sh & 268435455) || Es($n, Gn);
        }
        function fh(a, c) {
            var h = Nt;
            Nt |= 2;
            var y = D_();
            ($n !== a || Gn !== c) && (Do = null, Oa(a, c));
            do try {
                W2();
                break;
            } catch (w) {
                F_(a, w);
            }
            while (!0);
            if ($v(), Nt = h, oh.current = y, En !== null) throw Error(n(261));
            return $n = null, Gn = 0, An;
        }
        function W2() {
            for(; En !== null;)M_(En);
        }
        function V2() {
            for(; En !== null && !xp();)M_(En);
        }
        function M_(a) {
            var c = B_(a.alternate, a, Yr);
            a.memoizedProps = a.pendingProps, c === null ? L_(a) : En = c, yx.current = null;
        }
        function L_(a) {
            var c = a;
            do {
                var h = c.alternate;
                if (a = c.return, c.flags & 32768) {
                    if (h = M2(h, c), h !== null) {
                        h.flags &= 32767, En = h;
                        return;
                    }
                    if (a !== null) a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
                    else {
                        An = 6, En = null;
                        return;
                    }
                } else if (h = D2(h, c, Yr), h !== null) {
                    En = h;
                    return;
                }
                if (c = c.sibling, c !== null) {
                    En = c;
                    return;
                }
                En = c = a;
            }while (c !== null);
            An === 0 && (An = 5);
        }
        function Ta(a, c, h) {
            var y = Ct, w = wi.transition;
            try {
                wi.transition = null, Ct = 1, U2(a, c, h, y);
            } finally{
                wi.transition = w, Ct = y;
            }
            return null;
        }
        function U2(a, c, h, y) {
            do Ql();
            while (Is !== null);
            if (Nt & 6) throw Error(n(327));
            h = a.finishedWork;
            var w = a.finishedLanes;
            if (h === null) return null;
            if (a.finishedWork = null, a.finishedLanes = 0, h === a.current) throw Error(n(177));
            a.callbackNode = null, a.callbackPriority = 0;
            var k = h.lanes | h.childLanes;
            if (_L(a, k), a === $n && (En = $n = null, Gn = 0), !(h.subtreeFlags & 2064) && !(h.flags & 2064) || lh || (lh = !0, z_(Il, function() {
                return Ql(), null;
            })), k = (h.flags & 15990) !== 0, h.subtreeFlags & 15990 || k) {
                k = wi.transition, wi.transition = null;
                var W = Ct;
                Ct = 1;
                var Y = Nt;
                Nt |= 4, yx.current = null, $2(a, h), C_(h, a), d2(Ev), Sp = !!_v, Ev = _v = null, a.current = h, q2(h), Ky(), Nt = Y, Ct = W, wi.transition = k;
            } else a.current = h;
            if (lh && (lh = !1, Is = a, ch = w), k = a.pendingLanes, k === 0 && (Ss = null), Jy(h.stateNode), Tr(a, rn()), c !== null) for(y = a.onRecoverableError, h = 0; h < c.length; h++)w = c[h], y(w.value, {
                componentStack: w.stack,
                digest: w.digest
            });
            if (ah) throw ah = !1, a = bx, bx = null, a;
            return ch & 1 && a.tag !== 0 && Ql(), k = a.pendingLanes, k & 1 ? a === wx ? Qu++ : (Qu = 0, wx = a) : Qu = 0, xs(), null;
        }
        function Ql() {
            if (Is !== null) {
                var a = EI(ch), c = wi.transition, h = Ct;
                try {
                    if (wi.transition = null, Ct = 16 > a ? 16 : a, Is === null) var y = !1;
                    else {
                        if (a = Is, Is = null, ch = 0, Nt & 6) throw Error(n(331));
                        var w = Nt;
                        for(Nt |= 4, Be = a.current; Be !== null;){
                            var k = Be, W = k.child;
                            if (Be.flags & 16) {
                                var Y = k.deletions;
                                if (Y !== null) {
                                    for(var re = 0; re < Y.length; re++){
                                        var he = Y[re];
                                        for(Be = he; Be !== null;){
                                            var Ie = Be;
                                            switch(Ie.tag){
                                                case 0:
                                                case 11:
                                                case 15:
                                                    Hu(8, Ie, k);
                                            }
                                            var _e = Ie.child;
                                            if (_e !== null) _e.return = Ie, Be = _e;
                                            else for(; Be !== null;){
                                                Ie = Be;
                                                var Ne = Ie.sibling, Ae = Ie.return;
                                                if (S_(Ie), Ie === he) {
                                                    Be = null;
                                                    break;
                                                }
                                                if (Ne !== null) {
                                                    Ne.return = Ae, Be = Ne;
                                                    break;
                                                }
                                                Be = Ae;
                                            }
                                        }
                                    }
                                    var ze = k.alternate;
                                    if (ze !== null) {
                                        var We = ze.child;
                                        if (We !== null) {
                                            ze.child = null;
                                            do {
                                                var xn = We.sibling;
                                                We.sibling = null, We = xn;
                                            }while (We !== null);
                                        }
                                    }
                                    Be = k;
                                }
                            }
                            if (k.subtreeFlags & 2064 && W !== null) W.return = k, Be = W;
                            else e: for(; Be !== null;){
                                if (k = Be, k.flags & 2048) switch(k.tag){
                                    case 0:
                                    case 11:
                                    case 15:
                                        Hu(9, k, k.return);
                                }
                                var ue = k.sibling;
                                if (ue !== null) {
                                    ue.return = k.return, Be = ue;
                                    break e;
                                }
                                Be = k.return;
                            }
                        }
                        var se = a.current;
                        for(Be = se; Be !== null;){
                            W = Be;
                            var fe = W.child;
                            if (W.subtreeFlags & 2064 && fe !== null) fe.return = W, Be = fe;
                            else e: for(W = se; Be !== null;){
                                if (Y = Be, Y.flags & 2048) try {
                                    switch(Y.tag){
                                        case 0:
                                        case 11:
                                        case 15:
                                            ih(9, Y);
                                    }
                                } catch (Ve) {
                                    cn(Y, Y.return, Ve);
                                }
                                if (Y === W) {
                                    Be = null;
                                    break e;
                                }
                                var Ce = Y.sibling;
                                if (Ce !== null) {
                                    Ce.return = Y.return, Be = Ce;
                                    break e;
                                }
                                Be = Y.return;
                            }
                        }
                        if (Nt = w, xs(), gi && typeof gi.onPostCommitFiberRoot == "function") try {
                            gi.onPostCommitFiberRoot(_l, a);
                        } catch  {}
                        y = !0;
                    }
                    return y;
                } finally{
                    Ct = h, wi.transition = c;
                }
            }
            return !1;
        }
        function $_(a, c, h) {
            c = Ul(h, c), c = r_(a, c, 1), a = ws(a, c, 1), c = yr(), a !== null && (xu(a, 1, c), Tr(a, c));
        }
        function cn(a, c, h) {
            if (a.tag === 3) $_(a, a, h);
            else for(; c !== null;){
                if (c.tag === 3) {
                    $_(c, a, h);
                    break;
                } else if (c.tag === 1) {
                    var y = c.stateNode;
                    if (typeof c.type.getDerivedStateFromError == "function" || typeof y.componentDidCatch == "function" && (Ss === null || !Ss.has(y))) {
                        a = Ul(h, a), a = i_(c, a, 1), c = ws(c, a, 1), a = yr(), c !== null && (xu(c, 1, a), Tr(c, a));
                        break;
                    }
                }
                c = c.return;
            }
        }
        function H2(a, c, h) {
            var y = a.pingCache;
            y !== null && y.delete(c), c = yr(), a.pingedLanes |= a.suspendedLanes & h, $n === a && (Gn & h) === h && (An === 4 || An === 3 && (Gn & 130023424) === Gn && 500 > rn() - xx ? Oa(a, 0) : vx |= h), Tr(a, c);
        }
        function q_(a, c) {
            c === 0 && (a.mode & 1 ? (c = El, El <<= 1, !(El & 130023424) && (El = 4194304)) : c = 1);
            var h = yr();
            a = Po(a, c), a !== null && (xu(a, c, h), Tr(a, h));
        }
        function K2(a) {
            var c = a.memoizedState, h = 0;
            c !== null && (h = c.retryLane), q_(a, h);
        }
        function G2(a, c) {
            var h = 0;
            switch(a.tag){
                case 13:
                    var y = a.stateNode, w = a.memoizedState;
                    w !== null && (h = w.retryLane);
                    break;
                case 19:
                    y = a.stateNode;
                    break;
                default:
                    throw Error(n(314));
            }
            y !== null && y.delete(c), q_(a, h);
        }
        var B_;
        B_ = function(a, c, h) {
            if (a !== null) if (a.memoizedProps !== c.pendingProps || Cr.current) Rr = !0;
            else {
                if (!(a.lanes & h) && !(c.flags & 128)) return Rr = !1, F2(a, c, h);
                Rr = !!(a.flags & 131072);
            }
            else Rr = !1, Qt && c.flags & 1048576 && b1(c, Bp, c.index);
            switch(c.lanes = 0, c.tag){
                case 2:
                    var y = c.type;
                    nh(a, c), a = c.pendingProps;
                    var w = Ml(c, tr.current);
                    Wl(c, h), w = Jv(null, c, y, a, w, h);
                    var k = Zv();
                    return c.flags |= 1, typeof w == "object" && w !== null && typeof w.render == "function" && w.$$typeof === void 0 ? (c.tag = 1, c.memoizedState = null, c.updateQueue = null, jr(y) ? (k = !0, Lp(c)) : k = !1, c.memoizedState = w.state !== null && w.state !== void 0 ? w.state : null, Wv(c), w.updater = eh, c.stateNode = w, w._reactInternals = c, rx(c, y, a, h), c = ax(null, c, y, !0, k, h)) : (c.tag = 0, Qt && k && Pv(c), gr(null, c, w, h), c = c.child), c;
                case 16:
                    y = c.elementType;
                    e: {
                        switch(nh(a, c), a = c.pendingProps, w = y._init, y = w(y._payload), c.type = y, w = c.tag = J2(y), a = Li(y, a), w){
                            case 0:
                                c = sx(null, c, y, a, h);
                                break e;
                            case 1:
                                c = p_(null, c, y, a, h);
                                break e;
                            case 11:
                                c = l_(null, c, y, a, h);
                                break e;
                            case 14:
                                c = c_(null, c, y, Li(y.type, a), h);
                                break e;
                        }
                        throw Error(n(306, y, ""));
                    }
                    return c;
                case 0:
                    return y = c.type, w = c.pendingProps, w = c.elementType === y ? w : Li(y, w), sx(a, c, y, w, h);
                case 1:
                    return y = c.type, w = c.pendingProps, w = c.elementType === y ? w : Li(y, w), p_(a, c, y, w, h);
                case 3:
                    e: {
                        if (h_(c), a === null) throw Error(n(387));
                        y = c.pendingProps, k = c.memoizedState, w = k.element, j1(a, c), Kp(c, y, null, h);
                        var W = c.memoizedState;
                        if (y = W.element, k.isDehydrated) if (k = {
                            element: y,
                            isDehydrated: !1,
                            cache: W.cache,
                            pendingSuspenseBoundaries: W.pendingSuspenseBoundaries,
                            transitions: W.transitions
                        }, c.updateQueue.baseState = k, c.memoizedState = k, c.flags & 256) {
                            w = Ul(Error(n(423)), c), c = m_(a, c, y, h, w);
                            break e;
                        } else if (y !== w) {
                            w = Ul(Error(n(424)), c), c = m_(a, c, y, h, w);
                            break e;
                        } else for(Zr = gs(c.stateNode.containerInfo.firstChild), Jr = c, Qt = !0, Mi = null, h = k1(c, null, y, h), c.child = h; h;)h.flags = h.flags & -3 | 4096, h = h.sibling;
                        else {
                            if (ql(), y === w) {
                                c = Fo(a, c, h);
                                break e;
                            }
                            gr(a, c, y, h);
                        }
                        c = c.child;
                    }
                    return c;
                case 5:
                    return T1(c), a === null && Dv(c), y = c.type, w = c.pendingProps, k = a !== null ? a.memoizedProps : null, W = w.children, kv(y, w) ? W = null : k !== null && kv(y, k) && (c.flags |= 32), f_(a, c), gr(a, c, W, h), c.child;
                case 6:
                    return a === null && Dv(c), null;
                case 13:
                    return g_(a, c, h);
                case 4:
                    return Vv(c, c.stateNode.containerInfo), y = c.pendingProps, a === null ? c.child = Bl(c, null, y, h) : gr(a, c, y, h), c.child;
                case 11:
                    return y = c.type, w = c.pendingProps, w = c.elementType === y ? w : Li(y, w), l_(a, c, y, w, h);
                case 7:
                    return gr(a, c, c.pendingProps, h), c.child;
                case 8:
                    return gr(a, c, c.pendingProps.children, h), c.child;
                case 12:
                    return gr(a, c, c.pendingProps.children, h), c.child;
                case 10:
                    e: {
                        if (y = c.type._context, w = c.pendingProps, k = c.memoizedProps, W = w.value, Mt(Vp, y._currentValue), y._currentValue = W, k !== null) if (Di(k.value, W)) {
                            if (k.children === w.children && !Cr.current) {
                                c = Fo(a, c, h);
                                break e;
                            }
                        } else for(k = c.child, k !== null && (k.return = c); k !== null;){
                            var Y = k.dependencies;
                            if (Y !== null) {
                                W = k.child;
                                for(var re = Y.firstContext; re !== null;){
                                    if (re.context === y) {
                                        if (k.tag === 1) {
                                            re = Ao(-1, h & -h), re.tag = 2;
                                            var he = k.updateQueue;
                                            if (he !== null) {
                                                he = he.shared;
                                                var Ie = he.pending;
                                                Ie === null ? re.next = re : (re.next = Ie.next, Ie.next = re), he.pending = re;
                                            }
                                        }
                                        k.lanes |= h, re = k.alternate, re !== null && (re.lanes |= h), Bv(k.return, h, c), Y.lanes |= h;
                                        break;
                                    }
                                    re = re.next;
                                }
                            } else if (k.tag === 10) W = k.type === c.type ? null : k.child;
                            else if (k.tag === 18) {
                                if (W = k.return, W === null) throw Error(n(341));
                                W.lanes |= h, Y = W.alternate, Y !== null && (Y.lanes |= h), Bv(W, h, c), W = k.sibling;
                            } else W = k.child;
                            if (W !== null) W.return = k;
                            else for(W = k; W !== null;){
                                if (W === c) {
                                    W = null;
                                    break;
                                }
                                if (k = W.sibling, k !== null) {
                                    k.return = W.return, W = k;
                                    break;
                                }
                                W = W.return;
                            }
                            k = W;
                        }
                        gr(a, c, w.children, h), c = c.child;
                    }
                    return c;
                case 9:
                    return w = c.type, y = c.pendingProps.children, Wl(c, h), w = xi(w), y = y(w), c.flags |= 1, gr(a, c, y, h), c.child;
                case 14:
                    return y = c.type, w = Li(y, c.pendingProps), w = Li(y.type, w), c_(a, c, y, w, h);
                case 15:
                    return u_(a, c, c.type, c.pendingProps, h);
                case 17:
                    return y = c.type, w = c.pendingProps, w = c.elementType === y ? w : Li(y, w), nh(a, c), c.tag = 1, jr(y) ? (a = !0, Lp(c)) : a = !1, Wl(c, h), t_(c, y, w), rx(c, y, w, h), ax(null, c, y, !0, a, h);
                case 19:
                    return v_(a, c, h);
                case 22:
                    return d_(a, c, h);
            }
            throw Error(n(156, c.tag));
        };
        function z_(a, c) {
            return yp(a, c);
        }
        function Q2(a, c, h, y) {
            this.tag = a, this.key = h, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = c, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = y, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
        }
        function Ni(a, c, h, y) {
            return new Q2(a, c, h, y);
        }
        function kx(a) {
            return a = a.prototype, !(!a || !a.isReactComponent);
        }
        function J2(a) {
            if (typeof a == "function") return kx(a) ? 1 : 0;
            if (a != null) {
                if (a = a.$$typeof, a === M) return 11;
                if (a === V) return 14;
            }
            return 2;
        }
        function ks(a, c) {
            var h = a.alternate;
            return h === null ? (h = Ni(a.tag, c, a.key, a.mode), h.elementType = a.elementType, h.type = a.type, h.stateNode = a.stateNode, h.alternate = a, a.alternate = h) : (h.pendingProps = c, h.type = a.type, h.flags = 0, h.subtreeFlags = 0, h.deletions = null), h.flags = a.flags & 14680064, h.childLanes = a.childLanes, h.lanes = a.lanes, h.child = a.child, h.memoizedProps = a.memoizedProps, h.memoizedState = a.memoizedState, h.updateQueue = a.updateQueue, c = a.dependencies, h.dependencies = c === null ? null : {
                lanes: c.lanes,
                firstContext: c.firstContext
            }, h.sibling = a.sibling, h.index = a.index, h.ref = a.ref, h;
        }
        function ph(a, c, h, y, w, k) {
            var W = 2;
            if (y = a, typeof a == "function") kx(a) && (W = 1);
            else if (typeof a == "string") W = 5;
            else e: switch(a){
                case D:
                    return Pa(h.children, w, k, c);
                case O:
                    W = 8, w |= 8;
                    break;
                case E:
                    return a = Ni(12, h, c, w | 2), a.elementType = E, a.lanes = k, a;
                case L:
                    return a = Ni(13, h, c, w), a.elementType = L, a.lanes = k, a;
                case P:
                    return a = Ni(19, h, c, w), a.elementType = P, a.lanes = k, a;
                case Q:
                    return hh(h, w, k, c);
                default:
                    if (typeof a == "object" && a !== null) switch(a.$$typeof){
                        case F:
                            W = 10;
                            break e;
                        case j:
                            W = 9;
                            break e;
                        case M:
                            W = 11;
                            break e;
                        case V:
                            W = 14;
                            break e;
                        case z:
                            W = 16, y = null;
                            break e;
                    }
                    throw Error(n(130, a == null ? a : typeof a, ""));
            }
            return c = Ni(W, h, c, w), c.elementType = a, c.type = y, c.lanes = k, c;
        }
        function Pa(a, c, h, y) {
            return a = Ni(7, a, y, c), a.lanes = h, a;
        }
        function hh(a, c, h, y) {
            return a = Ni(22, a, y, c), a.elementType = Q, a.lanes = h, a.stateNode = {
                isHidden: !1
            }, a;
        }
        function Cx(a, c, h) {
            return a = Ni(6, a, null, c), a.lanes = h, a;
        }
        function jx(a, c, h) {
            return c = Ni(4, a.children !== null ? a.children : [], a.key, c), c.lanes = h, c.stateNode = {
                containerInfo: a.containerInfo,
                pendingChildren: null,
                implementation: a.implementation
            }, c;
        }
        function Z2(a, c, h, y, w) {
            this.tag = c, this.containerInfo = a, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = nv(0), this.expirationTimes = nv(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = nv(0), this.identifierPrefix = y, this.onRecoverableError = w, this.mutableSourceEagerHydrationData = null;
        }
        function Rx(a, c, h, y, w, k, W, Y, re) {
            return a = new Z2(a, c, h, Y, re), c === 1 ? (c = 1, k === !0 && (c |= 8)) : c = 0, k = Ni(3, null, null, c), a.current = k, k.stateNode = a, k.memoizedState = {
                element: y,
                isDehydrated: h,
                cache: null,
                transitions: null,
                pendingSuspenseBoundaries: null
            }, Wv(k), a;
        }
        function Y2(a, c, h) {
            var y = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
            return {
                $$typeof: R,
                key: y == null ? null : "" + y,
                children: a,
                containerInfo: c,
                implementation: h
            };
        }
        function W_(a) {
            if (!a) return vs;
            a = a._reactInternals;
            e: {
                if (io(a) !== a || a.tag !== 1) throw Error(n(170));
                var c = a;
                do {
                    switch(c.tag){
                        case 3:
                            c = c.stateNode.context;
                            break e;
                        case 1:
                            if (jr(c.type)) {
                                c = c.stateNode.__reactInternalMemoizedMergedChildContext;
                                break e;
                            }
                    }
                    c = c.return;
                }while (c !== null);
                throw Error(n(171));
            }
            if (a.tag === 1) {
                var h = a.type;
                if (jr(h)) return y1(a, h, c);
            }
            return c;
        }
        function V_(a, c, h, y, w, k, W, Y, re) {
            return a = Rx(h, y, !0, a, w, k, W, Y, re), a.context = W_(null), h = a.current, y = yr(), w = _s(h), k = Ao(y, w), k.callback = c ?? null, ws(h, k, w), a.current.lanes = w, xu(a, w, y), Tr(a, y), a;
        }
        function mh(a, c, h, y) {
            var w = c.current, k = yr(), W = _s(w);
            return h = W_(h), c.context === null ? c.context = h : c.pendingContext = h, c = Ao(k, W), c.payload = {
                element: a
            }, y = y === void 0 ? null : y, y !== null && (c.callback = y), a = ws(w, c, W), a !== null && (Bi(a, w, W, k), Hp(a, w, W)), W;
        }
        function gh(a) {
            if (a = a.current, !a.child) return null;
            switch(a.child.tag){
                case 5:
                    return a.child.stateNode;
                default:
                    return a.child.stateNode;
            }
        }
        function U_(a, c) {
            if (a = a.memoizedState, a !== null && a.dehydrated !== null) {
                var h = a.retryLane;
                a.retryLane = h !== 0 && h < c ? h : c;
            }
        }
        function Ox(a, c) {
            U_(a, c), (a = a.alternate) && U_(a, c);
        }
        function X2() {
            return null;
        }
        var H_ = typeof reportError == "function" ? reportError : function(a) {
            console.error(a);
        };
        function Tx(a) {
            this._internalRoot = a;
        }
        yh.prototype.render = Tx.prototype.render = function(a) {
            var c = this._internalRoot;
            if (c === null) throw Error(n(409));
            mh(a, c, null, null);
        }, yh.prototype.unmount = Tx.prototype.unmount = function() {
            var a = this._internalRoot;
            if (a !== null) {
                this._internalRoot = null;
                var c = a.containerInfo;
                Ra(function() {
                    mh(null, a, null, null);
                }), c[jo] = null;
            }
        };
        function yh(a) {
            this._internalRoot = a;
        }
        yh.prototype.unstable_scheduleHydration = function(a) {
            if (a) {
                var c = jI();
                a = {
                    blockedOn: null,
                    target: a,
                    priority: c
                };
                for(var h = 0; h < ps.length && c !== 0 && c < ps[h].priority; h++);
                ps.splice(h, 0, a), h === 0 && TI(a);
            }
        };
        function Px(a) {
            return !(!a || a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11);
        }
        function vh(a) {
            return !(!a || a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11 && (a.nodeType !== 8 || a.nodeValue !== " react-mount-point-unstable "));
        }
        function K_() {}
        function e$(a, c, h, y, w) {
            if (w) {
                if (typeof y == "function") {
                    var k = y;
                    y = function() {
                        var he = gh(W);
                        k.call(he);
                    };
                }
                var W = V_(c, y, a, 0, null, !1, !1, "", K_);
                return a._reactRootContainer = W, a[jo] = W.current, Pu(a.nodeType === 8 ? a.parentNode : a), Ra(), W;
            }
            for(; w = a.lastChild;)a.removeChild(w);
            if (typeof y == "function") {
                var Y = y;
                y = function() {
                    var he = gh(re);
                    Y.call(he);
                };
            }
            var re = Rx(a, 0, !1, null, null, !1, !1, "", K_);
            return a._reactRootContainer = re, a[jo] = re.current, Pu(a.nodeType === 8 ? a.parentNode : a), Ra(function() {
                mh(c, re, h, y);
            }), re;
        }
        function xh(a, c, h, y, w) {
            var k = h._reactRootContainer;
            if (k) {
                var W = k;
                if (typeof w == "function") {
                    var Y = w;
                    w = function() {
                        var re = gh(W);
                        Y.call(re);
                    };
                }
                mh(c, W, a, w);
            } else W = e$(h, c, a, w, y);
            return gh(W);
        }
        kI = function(a) {
            switch(a.tag){
                case 3:
                    var c = a.stateNode;
                    if (c.current.memoizedState.isDehydrated) {
                        var h = wa(c.pendingLanes);
                        h !== 0 && (rv(c, h | 1), Tr(c, rn()), !(Nt & 6) && (Gl = rn() + 500, xs()));
                    }
                    break;
                case 13:
                    Ra(function() {
                        var y = Po(a, 1);
                        if (y !== null) {
                            var w = yr();
                            Bi(y, a, 1, w);
                        }
                    }), Ox(a, 1);
            }
        }, iv = function(a) {
            if (a.tag === 13) {
                var c = Po(a, 134217728);
                if (c !== null) {
                    var h = yr();
                    Bi(c, a, 134217728, h);
                }
                Ox(a, 134217728);
            }
        }, CI = function(a) {
            if (a.tag === 13) {
                var c = _s(a), h = Po(a, c);
                if (h !== null) {
                    var y = yr();
                    Bi(h, a, c, y);
                }
                Ox(a, c);
            }
        }, jI = function() {
            return Ct;
        }, RI = function(a, c) {
            var h = Ct;
            try {
                return Ct = a, c();
            } finally{
                Ct = h;
            }
        }, ss = function(a, c, h) {
            switch(c){
                case "input":
                    if (nt(a, h), c = h.name, h.type === "radio" && c != null) {
                        for(h = a; h.parentNode;)h = h.parentNode;
                        for(h = h.querySelectorAll("input[name=" + JSON.stringify("" + c) + '][type="radio"]'), c = 0; c < h.length; c++){
                            var y = h[c];
                            if (y !== a && y.form === a.form) {
                                var w = Dp(y);
                                if (!w) throw Error(n(90));
                                ge(y), nt(y, w);
                            }
                        }
                    }
                    break;
                case "textarea":
                    pe(a, h);
                    break;
                case "select":
                    c = h.value, c != null && le(a, !!h.multiple, c, !1);
            }
        }, cp = Ix, up = Ra;
        var t$ = {
            usingClientEntryPoint: !1,
            Events: [
                Du,
                Fl,
                Dp,
                pu,
                lp,
                Ix
            ]
        }, Ju = {
            findFiberByHostInstance: Na,
            bundleType: 0,
            version: "18.3.1",
            rendererPackageName: "react-dom"
        }, n$ = {
            bundleType: Ju.bundleType,
            version: Ju.version,
            rendererPackageName: Ju.rendererPackageName,
            rendererConfig: Ju.rendererConfig,
            overrideHookState: null,
            overrideHookStateDeletePath: null,
            overrideHookStateRenamePath: null,
            overrideProps: null,
            overridePropsDeletePath: null,
            overridePropsRenamePath: null,
            setErrorHandler: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: C.ReactCurrentDispatcher,
            findHostInstanceByFiber: function(a) {
                return a = mp(a), a === null ? null : a.stateNode;
            },
            findFiberByHostInstance: Ju.findFiberByHostInstance || X2,
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null,
            reconcilerVersion: "18.3.1-next-f1338f8080-20240426"
        };
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
            var bh = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (!bh.isDisabled && bh.supportsFiber) try {
                _l = bh.inject(n$), gi = bh;
            } catch  {}
        }
        return Pr.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = t$, Pr.createPortal = function(a, c) {
            var h = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
            if (!Px(c)) throw Error(n(200));
            return Y2(a, c, null, h);
        }, Pr.createRoot = function(a, c) {
            if (!Px(a)) throw Error(n(299));
            var h = !1, y = "", w = H_;
            return c != null && (c.unstable_strictMode === !0 && (h = !0), c.identifierPrefix !== void 0 && (y = c.identifierPrefix), c.onRecoverableError !== void 0 && (w = c.onRecoverableError)), c = Rx(a, 1, !1, null, null, h, !1, y, w), a[jo] = c.current, Pu(a.nodeType === 8 ? a.parentNode : a), new Tx(c);
        }, Pr.findDOMNode = function(a) {
            if (a == null) return null;
            if (a.nodeType === 1) return a;
            var c = a._reactInternals;
            if (c === void 0) throw typeof a.render == "function" ? Error(n(188)) : (a = Object.keys(a).join(","), Error(n(268, a)));
            return a = mp(c), a = a === null ? null : a.stateNode, a;
        }, Pr.flushSync = function(a) {
            return Ra(a);
        }, Pr.hydrate = function(a, c, h) {
            if (!vh(c)) throw Error(n(200));
            return xh(null, a, c, !0, h);
        }, Pr.hydrateRoot = function(a, c, h) {
            if (!Px(a)) throw Error(n(405));
            var y = h != null && h.hydratedSources || null, w = !1, k = "", W = H_;
            if (h != null && (h.unstable_strictMode === !0 && (w = !0), h.identifierPrefix !== void 0 && (k = h.identifierPrefix), h.onRecoverableError !== void 0 && (W = h.onRecoverableError)), c = V_(c, null, a, 1, h ?? null, w, !1, k, W), a[jo] = c.current, Pu(a), y) for(a = 0; a < y.length; a++)h = y[a], w = h._getVersion, w = w(h._source), c.mutableSourceEagerHydrationData == null ? c.mutableSourceEagerHydrationData = [
                h,
                w
            ] : c.mutableSourceEagerHydrationData.push(h, w);
            return new yh(c);
        }, Pr.render = function(a, c, h) {
            if (!vh(c)) throw Error(n(200));
            return xh(null, a, c, !1, h);
        }, Pr.unmountComponentAtNode = function(a) {
            if (!vh(a)) throw Error(n(40));
            return a._reactRootContainer ? (Ra(function() {
                xh(null, null, a, !1, function() {
                    a._reactRootContainer = null, a[jo] = null;
                });
            }), !0) : !1;
        }, Pr.unstable_batchedUpdates = Ix, Pr.unstable_renderSubtreeIntoContainer = function(a, c, h, y) {
            if (!vh(h)) throw Error(n(200));
            if (a == null || a._reactInternals === void 0) throw Error(n(38));
            return xh(a, c, h, !1, y);
        }, Pr.version = "18.3.1-next-f1338f8080-20240426", Pr;
    }
    var NE;
    function cT() {
        if (NE) return Hx.exports;
        NE = 1;
        function e() {
            if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) try {
                __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
            } catch (t) {
                console.error(t);
            }
        }
        return e(), Hx.exports = Mq(), Hx.exports;
    }
    var Qg = cT();
    const ld = typeof window < "u" ? $.useLayoutEffect : $.useEffect;
    function Qx(e) {
        const t = $.useRef({
            value: e,
            prev: null
        }), n = t.current.value;
        return e !== n && (t.current = {
            value: e,
            prev: n
        }), t.current.prev;
    }
    function Lq(e, t, n = {}, r = {}) {
        const i = $.useRef(typeof IntersectionObserver == "function"), o = $.useRef(null);
        return $.useEffect(()=>{
            if (!(!e.current || !i.current || r.disabled)) return o.current = new IntersectionObserver(([s])=>{
                t(s);
            }, n), o.current.observe(e.current), ()=>{
                var s;
                (s = o.current) == null || s.disconnect();
            };
        }, [
            t,
            n,
            r.disabled,
            e
        ]), o.current;
    }
    function $q(e) {
        const t = $.useRef(null);
        return $.useImperativeHandle(e, ()=>t.current, []), t;
    }
    function qq(e, t) {
        const n = Ti(), [r, i] = $.useState(!1), o = $.useRef(!1), s = $q(t), { activeProps: l = ()=>({
                className: "active"
            }), inactiveProps: u = ()=>({}), activeOptions: f, to: p, preload: m, preloadDelay: g, hashScrollIntoView: v, replace: x, startTransition: b, resetScroll: S, viewTransition: N, children: _, target: I, disabled: C, style: A, className: R, onClick: D, onFocus: O, onMouseEnter: E, onMouseLeave: F, onTouchStart: j, ignoreBlocker: M, ...L } = e, { params: P, search: V, hash: z, state: Q, mask: K, reloadDocument: H, ...G } = L, U = $.useMemo(()=>{
            try {
                return new URL(`${p}`), "external";
            } catch  {}
            return "internal";
        }, [
            p
        ]), Z = lr({
            select: (oe)=>oe.location.search,
            structuralSharing: !0
        });
        e = {
            from: Xs({
                strict: !1,
                select: (oe)=>oe.pathname
            }),
            ...e
        };
        const X = $.useMemo(()=>n.buildLocation(e), [
            n,
            e,
            Z
        ]), te = $.useMemo(()=>e.reloadDocument ? !1 : m ?? n.options.defaultPreload, [
            n.options.defaultPreload,
            m,
            e.reloadDocument
        ]), ie = g ?? n.options.defaultPreloadDelay ?? 0, ae = lr({
            select: (oe)=>{
                if (f?.exact) {
                    if (!G$(oe.location.pathname, X.pathname, n.basepath)) return !1;
                } else {
                    const le = Lm(oe.location.pathname, n.basepath).split("/");
                    if (!Lm(X.pathname, n.basepath).split("/").every((pe, Se)=>pe === le[Se])) return !1;
                }
                return (f?.includeSearch ?? !0) && !bc(oe.location.search, X.search, {
                    partial: !f?.exact,
                    ignoreUndefined: !f?.explicitUndefined
                }) ? !1 : f?.includeHash ? oe.location.hash === X.hash : !0;
            }
        }), ce = $.useCallback(()=>{
            n.preloadRoute(e).catch((oe)=>{
                console.warn(oe), console.warn(V$);
            });
        }, [
            e,
            n
        ]), de = $.useCallback((oe)=>{
            oe?.isIntersecting && ce();
        }, [
            ce
        ]);
        if (Lq(s, de, {
            rootMargin: "100px"
        }, {
            disabled: !!C || te !== "viewport"
        }), ld(()=>{
            o.current || !C && te === "render" && (ce(), o.current = !0);
        }, [
            C,
            ce,
            te
        ]), U === "external") return {
            ...G,
            ref: s,
            type: U,
            href: p,
            ..._ && {
                children: _
            },
            ...I && {
                target: I
            },
            ...C && {
                disabled: C
            },
            ...A && {
                style: A
            },
            ...R && {
                className: R
            },
            ...D && {
                onClick: D
            },
            ...O && {
                onFocus: O
            },
            ...E && {
                onMouseEnter: E
            },
            ...F && {
                onMouseLeave: F
            },
            ...j && {
                onTouchStart: j
            }
        };
        const ve = (oe)=>{
            if (!C && !zq(oe) && !oe.defaultPrevented && (!I || I === "_self") && oe.button === 0) {
                oe.preventDefault(), Qg.flushSync(()=>{
                    i(!0);
                });
                const le = n.subscribe("onResolved", ()=>{
                    le(), i(!1);
                });
                return n.navigate({
                    ...e,
                    replace: x,
                    resetScroll: S,
                    hashScrollIntoView: v,
                    startTransition: b,
                    viewTransition: N,
                    ignoreBlocker: M
                });
            }
        }, be = (oe)=>{
            C || te && ce();
        }, ge = be, we = (oe)=>{
            if (C) return;
            const le = oe.target || {};
            if (te) {
                if (le.preloadTimeout) return;
                le.preloadTimeout = setTimeout(()=>{
                    le.preloadTimeout = null, ce();
                }, ie);
            }
        }, ke = (oe)=>{
            if (C) return;
            const le = oe.target || {};
            le.preloadTimeout && (clearTimeout(le.preloadTimeout), le.preloadTimeout = null);
        }, Re = (oe)=>(le)=>{
                var me;
                (me = le.persist) == null || me.call(le), oe.filter(Boolean).forEach((xe)=>{
                    le.defaultPrevented || xe(le);
                });
            }, $e = ae ? Ha(l, {}) ?? {} : {}, nt = ae ? {} : Ha(u, {}), ee = [
            R,
            $e.className,
            nt.className
        ].filter(Boolean).join(" "), ne = {
            ...A,
            ...$e.style,
            ...nt.style
        };
        return {
            ...G,
            ...$e,
            ...nt,
            href: C ? void 0 : X.maskedLocation ? n.history.createHref(X.maskedLocation.href) : n.history.createHref(X.href),
            ref: s,
            onClick: Re([
                D,
                ve
            ]),
            onFocus: Re([
                O,
                be
            ]),
            onMouseEnter: Re([
                E,
                we
            ]),
            onMouseLeave: Re([
                F,
                ke
            ]),
            onTouchStart: Re([
                j,
                ge
            ]),
            disabled: !!C,
            target: I,
            ...Object.keys(ne).length && {
                style: ne
            },
            ...ee && {
                className: ee
            },
            ...C && {
                role: "link",
                "aria-disabled": !0
            },
            ...ae && {
                "data-status": "active",
                "aria-current": "page"
            },
            ...r && {
                "data-transitioning": "transitioning"
            }
        };
    }
    function uT(e) {
        return $.forwardRef(function(n, r) {
            return d.jsx(Bq, {
                ...n,
                _asChild: e,
                ref: r
            });
        });
    }
    const Bq = $.forwardRef((e, t)=>{
        const { _asChild: n, ...r } = e, { type: i, ref: o, ...s } = qq(r, t), l = typeof r.children == "function" ? r.children({
            isActive: s["data-status"] === "active"
        }) : r.children;
        return typeof n > "u" && delete s.disabled, $.createElement(n || "a", {
            ...s,
            ref: o
        }, l);
    });
    function zq(e) {
        return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
    }
    function Wq() {
        const e = Ti(), t = $.useRef({
            router: e,
            mounted: !1
        }), n = lr({
            select: ({ isLoading: m })=>m
        }), [r, i] = $.useState(!1), o = lr({
            select: (m)=>m.matches.some((g)=>g.status === "pending"),
            structuralSharing: !0
        }), s = Qx(n), l = n || r || o, u = Qx(l), f = n || o, p = Qx(f);
        return e.isServer || (e.startReactTransition = (m)=>{
            i(!0), $.startTransition(()=>{
                m(), i(!1);
            });
        }), $.useEffect(()=>{
            const m = e.history.subscribe(e.load), g = e.buildLocation({
                to: e.latestLocation.pathname,
                search: !0,
                params: !0,
                hash: !0,
                state: !0,
                _includeValidateSearch: !0
            });
            return Ka(e.latestLocation.href) !== Ka(g.href) && e.commitLocation({
                ...g,
                replace: !0
            }), ()=>{
                m();
            };
        }, [
            e,
            e.history
        ]), ld(()=>{
            if (typeof window < "u" && e.clientSsr || t.current.router === e && t.current.mounted) return;
            t.current = {
                router: e,
                mounted: !0
            }, (async ()=>{
                try {
                    await e.load();
                } catch (g) {
                    console.error(g);
                }
            })();
        }, [
            e
        ]), ld(()=>{
            s && !n && e.emit({
                type: "onLoad",
                ...xc(e.state)
            });
        }, [
            s,
            e,
            n
        ]), ld(()=>{
            p && !f && e.emit({
                type: "onBeforeRouteMount",
                ...xc(e.state)
            });
        }, [
            f,
            p,
            e
        ]), ld(()=>{
            u && !l && (e.emit({
                type: "onResolved",
                ...xc(e.state)
            }), e.__store.setState((m)=>({
                    ...m,
                    status: "idle",
                    resolvedLocation: m.location
                })));
        }, [
            l,
            u,
            e
        ]), null;
    }
    function Vq() {
        const e = Ti(), t = e.options.defaultPendingComponent ? d.jsx(e.options.defaultPendingComponent, {}) : null, n = e.isServer || typeof document < "u" && e.clientSsr ? Yh : $.Suspense, r = d.jsxs(n, {
            fallback: t,
            children: [
                d.jsx(Wq, {}),
                d.jsx(Uq, {})
            ]
        });
        return e.options.InnerWrap ? d.jsx(e.options.InnerWrap, {
            children: r
        }) : r;
    }
    function Uq() {
        const e = lr({
            select: (n)=>{
                var r;
                return (r = n.matches[0]) == null ? void 0 : r.id;
            }
        }), t = lr({
            select: (n)=>n.loadedAt
        });
        return d.jsx(Gg.Provider, {
            value: e,
            children: d.jsx(ZN, {
                getResetKey: ()=>t,
                errorComponent: Kg,
                onCatch: (n)=>{
                    n.message || n.toString();
                },
                children: e ? d.jsx(lT, {
                    matchId: e
                }) : null
            })
        });
    }
    function Hq() {
        const e = Ti();
        return lr({
            select: (t)=>{
                var n;
                return [
                    t.location.href,
                    (n = t.resolvedLocation) == null ? void 0 : n.href,
                    t.status
                ];
            },
            structuralSharing: !0
        }), $.useCallback((t)=>{
            const { pending: n, caseSensitive: r, fuzzy: i, includeSearch: o, ...s } = t;
            return e.matchRoute(s, {
                pending: n,
                caseSensitive: r,
                fuzzy: i,
                includeSearch: o
            });
        }, [
            e
        ]);
    }
    const dT = [
        "component",
        "errorComponent",
        "pendingComponent",
        "notFoundComponent"
    ];
    function Kq(e) {
        var t;
        for (const n of dT)if ((t = e.options[n]) != null && t.preload) return !0;
        return !1;
    }
    function Jx(e, t) {
        if (e == null) return {};
        if ("~standard" in e) {
            const n = e["~standard"].validate(t);
            if (n instanceof Promise) throw new Wm("Async validation not supported");
            if (n.issues) throw new Wm(JSON.stringify(n.issues, void 0, 2), {
                cause: n
            });
            return n.value;
        }
        return "parse" in e ? e.parse(t) : typeof e == "function" ? e(t) : {};
    }
    function Gq(e) {
        return new Qq(e);
    }
    class Qq {
        constructor(t){
            this.tempLocationKey = `${Math.round(Math.random() * 1e7)}`, this.resetNextScroll = !0, this.shouldViewTransition = void 0, this.isViewTransitionTypesSupported = void 0, this.subscribers = new Set, this.isScrollRestoring = !1, this.isScrollRestorationSetup = !1, this.startReactTransition = (n)=>n(), this.update = (n)=>{
                var r;
                n.notFoundRoute && console.warn("The notFoundRoute API is deprecated and will be removed in the next major version. See https://tanstack.com/router/v1/docs/framework/react/guide/not-found-errors#migrating-from-notfoundroute for more info.");
                const i = this.options;
                this.options = {
                    ...this.options,
                    ...n
                }, this.isServer = this.options.isServer ?? typeof document > "u", this.pathParamsDecodeCharMap = this.options.pathParamsAllowedCharacters ? new Map(this.options.pathParamsAllowedCharacters.map((o)=>[
                        encodeURIComponent(o),
                        o
                    ])) : void 0, (!this.basepath || n.basepath && n.basepath !== i.basepath) && (n.basepath === void 0 || n.basepath === "" || n.basepath === "/" ? this.basepath = "/" : this.basepath = `/${K$(n.basepath)}`), (!this.history || this.options.history && this.options.history !== this.history) && (this.history = this.options.history ?? (this.isServer ? oq({
                    initialEntries: [
                        this.basepath || "/"
                    ]
                }) : iq()), this.latestLocation = this.parseLocation()), this.options.routeTree !== this.routeTree && (this.routeTree = this.options.routeTree, this.buildRouteTree()), this.__store || (this.__store = new A0(Zq(this.latestLocation), {
                    onUpdate: ()=>{
                        this.__store.state = {
                            ...this.state,
                            cachedMatches: this.state.cachedMatches.filter((o)=>![
                                    "redirected"
                                ].includes(o.status))
                        };
                    }
                }), Oq(this)), typeof window < "u" && "CSS" in window && typeof ((r = window.CSS) == null ? void 0 : r.supports) == "function" && (this.isViewTransitionTypesSupported = window.CSS.supports("selector(:active-view-transition-type(a)"));
            }, this.buildRouteTree = ()=>{
                this.routesById = {}, this.routesByPath = {};
                const n = this.options.notFoundRoute;
                n && (n.init({
                    originalIndex: 99999999999,
                    defaultSsr: this.options.defaultSsr
                }), this.routesById[n.id] = n);
                const r = (s)=>{
                    s.forEach((l, u)=>{
                        l.init({
                            originalIndex: u,
                            defaultSsr: this.options.defaultSsr
                        });
                        const f = this.routesById[l.id];
                        if (Ki(!f, `Duplicate routes found with id: ${String(l.id)}`), this.routesById[l.id] = l, !l.isRoot && l.path) {
                            const m = Ka(l.fullPath);
                            (!this.routesByPath[m] || l.fullPath.endsWith("/")) && (this.routesByPath[m] = l);
                        }
                        const p = l.children;
                        p?.length && r(p);
                    });
                };
                r([
                    this.routeTree
                ]);
                const i = [];
                Object.values(this.routesById).forEach((s, l)=>{
                    var u;
                    if (s.isRoot || !s.path) return;
                    const f = QN(s.fullPath), p = Fc(f);
                    for(; p.length > 1 && ((u = p[0]) == null ? void 0 : u.value) === "/";)p.shift();
                    const m = p.map((g)=>g.value === "/" ? .75 : g.type === "param" ? .5 : g.type === "wildcard" ? .25 : 1);
                    i.push({
                        child: s,
                        trimmed: f,
                        parsed: p,
                        index: l,
                        scores: m
                    });
                }), this.flatRoutes = i.sort((s, l)=>{
                    const u = Math.min(s.scores.length, l.scores.length);
                    for(let f = 0; f < u; f++)if (s.scores[f] !== l.scores[f]) return l.scores[f] - s.scores[f];
                    if (s.scores.length !== l.scores.length) return l.scores.length - s.scores.length;
                    for(let f = 0; f < u; f++)if (s.parsed[f].value !== l.parsed[f].value) return s.parsed[f].value > l.parsed[f].value ? 1 : -1;
                    return s.index - l.index;
                }).map((s, l)=>(s.child.rank = l, s.child));
            }, this.subscribe = (n, r)=>{
                const i = {
                    eventType: n,
                    fn: r
                };
                return this.subscribers.add(i), ()=>{
                    this.subscribers.delete(i);
                };
            }, this.emit = (n)=>{
                this.subscribers.forEach((r)=>{
                    r.eventType === n.type && r.fn(n);
                });
            }, this.parseLocation = (n, r)=>{
                const i = ({ pathname: u, search: f, hash: p, state: m })=>{
                    const g = this.options.parseSearch(f), v = this.options.stringifySearch(g);
                    return {
                        pathname: u,
                        searchStr: v,
                        search: Si(n?.search, g),
                        hash: p.split("#").reverse()[0] ?? "",
                        href: `${u}${v}${p}`,
                        state: Si(n?.state, m)
                    };
                }, o = i(r ?? this.history.location), { __tempLocation: s, __tempKey: l } = o.state;
                if (s && (!l || l === this.tempLocationKey)) {
                    const u = i(s);
                    return u.state.key = o.state.key, delete u.state.__tempLocation, {
                        ...u,
                        maskedLocation: o
                    };
                }
                return o;
            }, this.resolvePathWithBase = (n, r)=>Q$({
                    basepath: this.basepath,
                    base: n,
                    to: Hg(r),
                    trailingSlash: this.options.trailingSlash,
                    caseSensitive: this.options.caseSensitive
                }), this.getMatchedRoutes = (n, r)=>{
                let i = {};
                const o = Ka(n.pathname), s = (p)=>Sh(this.basepath, o, {
                        to: p.fullPath,
                        caseSensitive: p.options.caseSensitive ?? this.options.caseSensitive,
                        fuzzy: !0
                    });
                let l = r?.to !== void 0 ? this.routesByPath[r.to] : void 0;
                l ? i = s(l) : l = this.flatRoutes.find((p)=>{
                    const m = s(p);
                    return m ? (i = m, !0) : !1;
                });
                let u = l || this.routesById[Lr];
                const f = [
                    u
                ];
                for(; u.parentRoute;)u = u.parentRoute, f.unshift(u);
                return {
                    matchedRoutes: f,
                    routeParams: i,
                    foundRoute: l
                };
            }, this.cancelMatch = (n)=>{
                const r = this.getMatch(n);
                r && (r.abortController.abort(), clearTimeout(r.pendingTimeout));
            }, this.cancelMatches = ()=>{
                var n;
                (n = this.state.pendingMatches) == null || n.forEach((r)=>{
                    this.cancelMatch(r.id);
                });
            }, this.buildLocation = (n)=>{
                const r = (o = {}, s)=>{
                    var l, u, f, p, m, g;
                    const v = o._fromLocation ? this.matchRoutes(o._fromLocation, {
                        _buildLocation: !0
                    }) : this.state.matches, x = o.from != null ? v.find((j)=>Sh(this.basepath, Ka(j.pathname), {
                            to: o.from,
                            caseSensitive: !1,
                            fuzzy: !1
                        })) : void 0, b = x?.pathname || this.latestLocation.pathname;
                    Ki(o.from == null || x != null, "Could not find match for from: " + o.from);
                    const S = (l = this.state.pendingMatches) != null && l.length ? (u = Nd(this.state.pendingMatches)) == null ? void 0 : u.search : ((f = Nd(v)) == null ? void 0 : f.search) || this.latestLocation.search, N = s?.matchedRoutes.filter((j)=>v.find((M)=>M.routeId === j.id));
                    let _;
                    if (o.to) {
                        const j = x?.fullPath || this.latestLocation.pathname;
                        _ = this.resolvePathWithBase(j, `${o.to}`);
                    } else {
                        const j = this.routesById[(p = N?.find((M)=>{
                            const L = Nh({
                                path: M.fullPath,
                                params: s?.routeParams ?? {},
                                decodeCharMap: this.pathParamsDecodeCharMap
                            }).interpolatedPath;
                            return Ko([
                                this.basepath,
                                L
                            ]) === b;
                        })) == null ? void 0 : p.id];
                        _ = this.resolvePathWithBase(b, j?.to ?? b);
                    }
                    const I = {
                        ...(m = Nd(v)) == null ? void 0 : m.params
                    };
                    let C = (o.params ?? !0) === !0 ? I : {
                        ...I,
                        ...Ha(o.params, I)
                    };
                    Object.keys(C).length > 0 && s?.matchedRoutes.map((j)=>{
                        var M;
                        return ((M = j.options.params) == null ? void 0 : M.stringify) ?? j.options.stringifyParams;
                    }).filter(Boolean).forEach((j)=>{
                        C = {
                            ...C,
                            ...j(C)
                        };
                    }), _ = Nh({
                        path: _,
                        params: C ?? {},
                        leaveWildcards: !1,
                        leaveParams: n.leaveParams,
                        decodeCharMap: this.pathParamsDecodeCharMap
                    }).interpolatedPath;
                    let A = S;
                    if (n._includeValidateSearch && ((g = this.options.search) != null && g.strict)) {
                        let j = {};
                        s?.matchedRoutes.forEach((M)=>{
                            try {
                                M.options.validateSearch && (j = {
                                    ...j,
                                    ...Jx(M.options.validateSearch, {
                                        ...j,
                                        ...A
                                    }) ?? {}
                                });
                            } catch  {}
                        }), A = j;
                    }
                    A = ((j)=>{
                        const M = s?.matchedRoutes.reduce((V, z)=>{
                            var Q;
                            const K = [];
                            if ("search" in z.options) (Q = z.options.search) != null && Q.middlewares && K.push(...z.options.search.middlewares);
                            else if (z.options.preSearchFilters || z.options.postSearchFilters) {
                                const H = ({ search: G, next: U })=>{
                                    let Z = G;
                                    "preSearchFilters" in z.options && z.options.preSearchFilters && (Z = z.options.preSearchFilters.reduce((X, te)=>te(X), G));
                                    const J = U(Z);
                                    return "postSearchFilters" in z.options && z.options.postSearchFilters ? z.options.postSearchFilters.reduce((X, te)=>te(X), J) : J;
                                };
                                K.push(H);
                            }
                            if (n._includeValidateSearch && z.options.validateSearch) {
                                const H = ({ search: G, next: U })=>{
                                    try {
                                        const Z = U(G);
                                        return {
                                            ...Z,
                                            ...Jx(z.options.validateSearch, Z) ?? {}
                                        };
                                    } catch  {}
                                };
                                K.push(H);
                            }
                            return V.concat(K);
                        }, []) ?? [], L = ({ search: V })=>o.search ? o.search === !0 ? V : Ha(o.search, V) : {};
                        M.push(L);
                        const P = (V, z)=>{
                            if (V >= M.length) return z;
                            const Q = M[V];
                            return Q({
                                search: z,
                                next: (H)=>P(V + 1, H)
                            });
                        };
                        return P(0, j);
                    })(A), A = Si(S, A);
                    const D = this.options.stringifySearch(A), O = o.hash === !0 ? this.latestLocation.hash : o.hash ? Ha(o.hash, this.latestLocation.hash) : void 0, E = O ? `#${O}` : "";
                    let F = o.state === !0 ? this.latestLocation.state : o.state ? Ha(o.state, this.latestLocation.state) : {};
                    return F = Si(this.latestLocation.state, F), {
                        pathname: _,
                        search: A,
                        searchStr: D,
                        state: F,
                        hash: O ?? "",
                        href: `${_}${D}${E}`,
                        unmaskOnReload: o.unmaskOnReload
                    };
                }, i = (o = {}, s)=>{
                    var l;
                    const u = r(o);
                    let f = s ? r(s) : void 0;
                    if (!f) {
                        let g = {};
                        const v = (l = this.options.routeMasks) == null ? void 0 : l.find((x)=>{
                            const b = Sh(this.basepath, u.pathname, {
                                to: x.from,
                                caseSensitive: !1,
                                fuzzy: !1
                            });
                            return b ? (g = b, !0) : !1;
                        });
                        if (v) {
                            const { from: x, ...b } = v;
                            s = {
                                ...T0(n, [
                                    "from"
                                ]),
                                ...b,
                                params: g
                            }, f = r(s);
                        }
                    }
                    const p = this.getMatchedRoutes(u, o), m = r(o, p);
                    if (f) {
                        const g = this.getMatchedRoutes(f, s), v = r(s, g);
                        m.maskedLocation = v;
                    }
                    return m;
                };
                return n.mask ? i(n, {
                    ...T0(n, [
                        "from"
                    ]),
                    ...n.mask
                }) : i(n);
            }, this.commitLocation = ({ viewTransition: n, ignoreBlocker: r, ...i })=>{
                const o = ()=>{
                    const u = [
                        "key",
                        "__TSR_index",
                        "__hashScrollIntoViewOptions"
                    ];
                    u.forEach((p)=>{
                        i.state[p] = this.latestLocation.state[p];
                    });
                    const f = bc(i.state, this.latestLocation.state);
                    return u.forEach((p)=>{
                        delete i.state[p];
                    }), f;
                }, s = this.latestLocation.href === i.href, l = this.commitLocationPromise;
                if (this.commitLocationPromise = sc(()=>{
                    l?.resolve();
                }), s && o()) this.load();
                else {
                    let { maskedLocation: u, hashScrollIntoView: f, ...p } = i;
                    u && (p = {
                        ...u,
                        state: {
                            ...u.state,
                            __tempKey: void 0,
                            __tempLocation: {
                                ...p,
                                search: p.searchStr,
                                state: {
                                    ...p.state,
                                    __tempKey: void 0,
                                    __tempLocation: void 0,
                                    key: void 0
                                }
                            }
                        }
                    }, (p.unmaskOnReload ?? this.options.unmaskOnReload ?? !1) && (p.state.__tempKey = this.tempLocationKey)), p.state.__hashScrollIntoViewOptions = f ?? this.options.defaultHashScrollIntoView ?? !0, this.shouldViewTransition = n, this.history[i.replace ? "replace" : "push"](p.href, p.state, {
                        ignoreBlocker: r
                    });
                }
                return this.resetNextScroll = i.resetScroll ?? !0, this.history.subscribers.size || this.load(), this.commitLocationPromise;
            }, this.buildAndCommitLocation = ({ replace: n, resetScroll: r, hashScrollIntoView: i, viewTransition: o, ignoreBlocker: s, href: l, ...u } = {})=>{
                if (l) {
                    const p = this.history.location.state.__TSR_index, m = Ld(l, {
                        __TSR_index: n ? p : p + 1
                    });
                    u.to = m.pathname, u.search = this.options.parseSearch(m.search), u.hash = m.hash.slice(1);
                }
                const f = this.buildLocation({
                    ...u,
                    _includeValidateSearch: !0
                });
                return this.commitLocation({
                    ...f,
                    viewTransition: o,
                    replace: n,
                    resetScroll: r,
                    hashScrollIntoView: i,
                    ignoreBlocker: s
                });
            }, this.navigate = ({ to: n, reloadDocument: r, href: i, ...o })=>{
                if (r) {
                    if (!i) {
                        const s = this.buildLocation({
                            to: n,
                            ...o
                        });
                        i = this.history.createHref(s.href);
                    }
                    o.replace ? window.location.replace(i) : window.location.href = i;
                    return;
                }
                return this.buildAndCommitLocation({
                    ...o,
                    href: i,
                    to: n
                });
            }, this.load = async (n)=>{
                this.latestLocation = this.parseLocation(this.latestLocation);
                let r, i, o;
                for(o = new Promise((s)=>{
                    this.startReactTransition(async ()=>{
                        var l;
                        try {
                            const u = this.latestLocation, f = this.state.resolvedLocation;
                            this.cancelMatches();
                            let p;
                            zx(()=>{
                                p = this.matchRoutes(u), this.__store.setState((m)=>({
                                        ...m,
                                        status: "pending",
                                        isLoading: !0,
                                        location: u,
                                        pendingMatches: p,
                                        cachedMatches: m.cachedMatches.filter((g)=>!p.find((v)=>v.id === g.id))
                                    }));
                            }), this.state.redirect || this.emit({
                                type: "onBeforeNavigate",
                                ...xc({
                                    resolvedLocation: f,
                                    location: u
                                })
                            }), this.emit({
                                type: "onBeforeLoad",
                                ...xc({
                                    resolvedLocation: f,
                                    location: u
                                })
                            }), await this.loadMatches({
                                sync: n?.sync,
                                matches: p,
                                location: u,
                                onReady: async ()=>{
                                    this.startViewTransition(async ()=>{
                                        let m, g, v;
                                        zx(()=>{
                                            this.__store.setState((x)=>{
                                                const b = x.matches, S = x.pendingMatches || x.matches;
                                                return m = b.filter((N)=>!S.find((_)=>_.id === N.id)), g = S.filter((N)=>!b.find((_)=>_.id === N.id)), v = b.filter((N)=>S.find((_)=>_.id === N.id)), {
                                                    ...x,
                                                    isLoading: !1,
                                                    loadedAt: Date.now(),
                                                    matches: S,
                                                    pendingMatches: void 0,
                                                    cachedMatches: [
                                                        ...x.cachedMatches,
                                                        ...m.filter((N)=>N.status !== "error")
                                                    ]
                                                };
                                            }), this.clearExpiredCache();
                                        }), [
                                            [
                                                m,
                                                "onLeave"
                                            ],
                                            [
                                                g,
                                                "onEnter"
                                            ],
                                            [
                                                v,
                                                "onStay"
                                            ]
                                        ].forEach(([x, b])=>{
                                            x.forEach((S)=>{
                                                var N, _;
                                                (_ = (N = this.looseRoutesById[S.routeId].options)[b]) == null || _.call(N, S);
                                            });
                                        });
                                    });
                                }
                            });
                        } catch (u) {
                            Vx(u) ? (r = u, this.isServer || this.navigate({
                                ...r,
                                replace: !0,
                                ignoreBlocker: !0
                            })) : Ei(u) && (i = u), this.__store.setState((f)=>({
                                    ...f,
                                    statusCode: r ? r.statusCode : i ? 404 : f.matches.some((p)=>p.status === "error") ? 500 : 200,
                                    redirect: r
                                }));
                        }
                        this.latestLoadPromise === o && ((l = this.commitLocationPromise) == null || l.resolve(), this.latestLoadPromise = void 0, this.commitLocationPromise = void 0), s();
                    });
                }), this.latestLoadPromise = o, await o; this.latestLoadPromise && o !== this.latestLoadPromise;)await this.latestLoadPromise;
                this.hasNotFoundMatch() && this.__store.setState((s)=>({
                        ...s,
                        statusCode: 404
                    }));
            }, this.startViewTransition = (n)=>{
                const r = this.shouldViewTransition ?? this.options.defaultViewTransition;
                if (delete this.shouldViewTransition, r && typeof document < "u" && "startViewTransition" in document && typeof document.startViewTransition == "function") {
                    let i;
                    typeof r == "object" && this.isViewTransitionTypesSupported ? i = {
                        update: n,
                        types: r.types
                    } : i = n, document.startViewTransition(i);
                } else n();
            }, this.updateMatch = (n, r)=>{
                var i;
                let o;
                const s = (i = this.state.pendingMatches) == null ? void 0 : i.find((p)=>p.id === n), l = this.state.matches.find((p)=>p.id === n), u = this.state.cachedMatches.find((p)=>p.id === n), f = s ? "pendingMatches" : l ? "matches" : u ? "cachedMatches" : "";
                return f && this.__store.setState((p)=>{
                    var m;
                    return {
                        ...p,
                        [f]: (m = p[f]) == null ? void 0 : m.map((g)=>g.id === n ? o = r(g) : g)
                    };
                }), o;
            }, this.getMatch = (n)=>[
                    ...this.state.cachedMatches,
                    ...this.state.pendingMatches ?? [],
                    ...this.state.matches
                ].find((r)=>r.id === n), this.loadMatches = async ({ location: n, matches: r, preload: i, onReady: o, updateMatch: s = this.updateMatch, sync: l })=>{
                let u, f = !1;
                const p = async ()=>{
                    f || (f = !0, await o?.());
                }, m = (v)=>!!(i && !this.state.matches.find((x)=>x.id === v));
                !this.isServer && !this.state.matches.length && p();
                const g = (v, x)=>{
                    var b, S, N, _;
                    if (Vx(x) && !x.reloadDocument) throw x;
                    if (Ma(x) || Ei(x)) {
                        if (s(v.id, (I)=>({
                                ...I,
                                status: Ma(x) ? "redirected" : Ei(x) ? "notFound" : "error",
                                isFetching: !1,
                                error: x,
                                beforeLoadPromise: void 0,
                                loaderPromise: void 0
                            })), x.routeId || (x.routeId = v.routeId), (b = v.beforeLoadPromise) == null || b.resolve(), (S = v.loaderPromise) == null || S.resolve(), (N = v.loadPromise) == null || N.resolve(), Ma(x)) throw f = !0, x = this.resolveRedirect({
                            ...x,
                            _fromLocation: n
                        }), x;
                        if (Ei(x)) throw this._handleNotFound(r, x, {
                            updateMatch: s
                        }), (_ = this.serverSsr) == null || _.onMatchSettled({
                            router: this,
                            match: this.getMatch(v.id)
                        }), x;
                    }
                };
                try {
                    await new Promise((v, x)=>{
                        (async ()=>{
                            var b, S, N;
                            try {
                                const _ = (A, R, D)=>{
                                    var O, E;
                                    const { id: F, routeId: j } = r[A], M = this.looseRoutesById[j];
                                    if (R instanceof Promise) throw R;
                                    R.routerCode = D, u = u ?? A, g(this.getMatch(F), R);
                                    try {
                                        (E = (O = M.options).onError) == null || E.call(O, R);
                                    } catch (L) {
                                        R = L, g(this.getMatch(F), R);
                                    }
                                    s(F, (L)=>{
                                        var P, V;
                                        return (P = L.beforeLoadPromise) == null || P.resolve(), (V = L.loadPromise) == null || V.resolve(), {
                                            ...L,
                                            error: R,
                                            status: "error",
                                            isFetching: !1,
                                            updatedAt: Date.now(),
                                            abortController: new AbortController,
                                            beforeLoadPromise: void 0
                                        };
                                    });
                                };
                                for (const [A, { id: R, routeId: D }] of r.entries()){
                                    const O = this.getMatch(R), E = (b = r[A - 1]) == null ? void 0 : b.id, F = this.looseRoutesById[D], j = F.options.pendingMs ?? this.options.defaultPendingMs, M = !!(o && !this.isServer && !m(R) && (F.options.loader || F.options.beforeLoad) && typeof j == "number" && j !== 1 / 0 && (F.options.pendingComponent ?? this.options.defaultPendingComponent));
                                    let L = !0;
                                    if ((O.beforeLoadPromise || O.loaderPromise) && (M && setTimeout(()=>{
                                        try {
                                            p();
                                        } catch  {}
                                    }, j), await O.beforeLoadPromise, L = this.getMatch(R).status !== "success"), L) {
                                        try {
                                            s(R, (ie)=>({
                                                    ...ie,
                                                    loadPromise: sc(()=>{
                                                        var ae;
                                                        (ae = ie.loadPromise) == null || ae.resolve();
                                                    }),
                                                    beforeLoadPromise: sc()
                                                }));
                                            const P = new AbortController;
                                            let V;
                                            M && (V = setTimeout(()=>{
                                                try {
                                                    p();
                                                } catch  {}
                                            }, j));
                                            const { paramsError: z, searchError: Q } = this.getMatch(R);
                                            z && _(A, z, "PARSE_PARAMS"), Q && _(A, Q, "VALIDATE_SEARCH");
                                            const K = ()=>E ? this.getMatch(E).context : this.options.context ?? {};
                                            s(R, (ie)=>({
                                                    ...ie,
                                                    isFetching: "beforeLoad",
                                                    fetchCount: ie.fetchCount + 1,
                                                    abortController: P,
                                                    pendingTimeout: V,
                                                    context: {
                                                        ...K(),
                                                        ...ie.__routeContext
                                                    }
                                                }));
                                            const { search: H, params: G, context: U, cause: Z } = this.getMatch(R), J = m(R), X = {
                                                search: H,
                                                abortController: P,
                                                params: G,
                                                preload: J,
                                                context: U,
                                                location: n,
                                                navigate: (ie)=>this.navigate({
                                                        ...ie,
                                                        _fromLocation: n
                                                    }),
                                                buildLocation: this.buildLocation,
                                                cause: J ? "preload" : Z,
                                                matches: r
                                            }, te = await ((N = (S = F.options).beforeLoad) == null ? void 0 : N.call(S, X)) ?? {};
                                            (Ma(te) || Ei(te)) && _(A, te, "BEFORE_LOAD"), s(R, (ie)=>({
                                                    ...ie,
                                                    __beforeLoadContext: te,
                                                    context: {
                                                        ...K(),
                                                        ...ie.__routeContext,
                                                        ...te
                                                    },
                                                    abortController: P
                                                }));
                                        } catch (P) {
                                            _(A, P, "BEFORE_LOAD");
                                        }
                                        s(R, (P)=>{
                                            var V;
                                            return (V = P.beforeLoadPromise) == null || V.resolve(), {
                                                ...P,
                                                beforeLoadPromise: void 0,
                                                isFetching: !1
                                            };
                                        });
                                    }
                                }
                                const I = r.slice(0, u), C = [];
                                I.forEach(({ id: A, routeId: R }, D)=>{
                                    C.push((async ()=>{
                                        const { loaderPromise: O } = this.getMatch(A);
                                        let E = !1, F = !1;
                                        if (O) {
                                            await O;
                                            const j = this.getMatch(A);
                                            j.error && g(j, j.error);
                                        } else {
                                            const j = C[D - 1], M = this.looseRoutesById[R], L = ()=>{
                                                const { params: Z, loaderDeps: J, abortController: X, context: te, cause: ie } = this.getMatch(A), ae = m(A);
                                                return {
                                                    params: Z,
                                                    deps: J,
                                                    preload: !!ae,
                                                    parentMatchPromise: j,
                                                    abortController: X,
                                                    context: te,
                                                    location: n,
                                                    navigate: (ce)=>this.navigate({
                                                            ...ce,
                                                            _fromLocation: n
                                                        }),
                                                    cause: ae ? "preload" : ie,
                                                    route: M
                                                };
                                            }, P = Date.now() - this.getMatch(A).updatedAt, V = m(A), z = V ? M.options.preloadStaleTime ?? this.options.defaultPreloadStaleTime ?? 3e4 : M.options.staleTime ?? this.options.defaultStaleTime ?? 0, Q = M.options.shouldReload, K = typeof Q == "function" ? Q(L()) : Q;
                                            s(A, (Z)=>({
                                                    ...Z,
                                                    loaderPromise: sc(),
                                                    preload: !!V && !this.state.matches.find((J)=>J.id === A)
                                                }));
                                            const H = async ()=>{
                                                var Z, J, X, te, ie, ae, ce, de, ve, be, ge;
                                                try {
                                                    const we = async ()=>{
                                                        const ke = this.getMatch(A);
                                                        ke.minPendingPromise && await ke.minPendingPromise;
                                                    };
                                                    try {
                                                        this.loadRouteChunk(M), s(A, (me)=>({
                                                                ...me,
                                                                isFetching: "loader"
                                                            }));
                                                        const ke = await ((J = (Z = M.options).loader) == null ? void 0 : J.call(Z, L()));
                                                        g(this.getMatch(A), ke), await M._lazyPromise, await we();
                                                        const Re = {
                                                            matches: r,
                                                            match: this.getMatch(A),
                                                            params: this.getMatch(A).params,
                                                            loaderData: ke
                                                        }, $e = (te = (X = M.options).head) == null ? void 0 : te.call(X, Re), nt = $e?.meta, ee = $e?.links, ne = $e?.scripts, oe = (ae = (ie = M.options).scripts) == null ? void 0 : ae.call(ie, Re), le = (de = (ce = M.options).headers) == null ? void 0 : de.call(ce, {
                                                            loaderData: ke
                                                        });
                                                        s(A, (me)=>({
                                                                ...me,
                                                                error: void 0,
                                                                status: "success",
                                                                isFetching: !1,
                                                                updatedAt: Date.now(),
                                                                loaderData: ke,
                                                                meta: nt,
                                                                links: ee,
                                                                headScripts: ne,
                                                                headers: le,
                                                                scripts: oe
                                                            }));
                                                    } catch (ke) {
                                                        let Re = ke;
                                                        await we(), g(this.getMatch(A), ke);
                                                        try {
                                                            (be = (ve = M.options).onError) == null || be.call(ve, ke);
                                                        } catch ($e) {
                                                            Re = $e, g(this.getMatch(A), $e);
                                                        }
                                                        s(A, ($e)=>({
                                                                ...$e,
                                                                error: Re,
                                                                status: "error",
                                                                isFetching: !1
                                                            }));
                                                    }
                                                    (ge = this.serverSsr) == null || ge.onMatchSettled({
                                                        router: this,
                                                        match: this.getMatch(A)
                                                    }), await M._componentsPromise;
                                                } catch (we) {
                                                    s(A, (ke)=>({
                                                            ...ke,
                                                            loaderPromise: void 0
                                                        })), g(this.getMatch(A), we);
                                                }
                                            }, { status: G, invalid: U } = this.getMatch(A);
                                            E = G === "success" && (U || (K ?? P > z)), V && M.options.preload === !1 || (E && !l ? (F = !0, (async ()=>{
                                                try {
                                                    await H();
                                                    const { loaderPromise: Z, loadPromise: J } = this.getMatch(A);
                                                    Z?.resolve(), J?.resolve(), s(A, (X)=>({
                                                            ...X,
                                                            loaderPromise: void 0
                                                        }));
                                                } catch (Z) {
                                                    Vx(Z) && await this.navigate(Z);
                                                }
                                            })()) : (G !== "success" || E && l) && await H());
                                        }
                                        if (!F) {
                                            const { loaderPromise: j, loadPromise: M } = this.getMatch(A);
                                            j?.resolve(), M?.resolve();
                                        }
                                        return s(A, (j)=>({
                                                ...j,
                                                isFetching: F ? j.isFetching : !1,
                                                loaderPromise: F ? j.loaderPromise : void 0,
                                                invalid: !1
                                            })), this.getMatch(A);
                                    })());
                                }), await Promise.all(C), v();
                            } catch (_) {
                                x(_);
                            }
                        })();
                    }), await p();
                } catch (v) {
                    if (Ma(v) || Ei(v)) throw Ei(v) && !i && await p(), v;
                }
                return r;
            }, this.invalidate = (n)=>{
                const r = (i)=>{
                    var o;
                    return ((o = n?.filter) == null ? void 0 : o.call(n, i)) ?? !0 ? {
                        ...i,
                        invalid: !0,
                        ...i.status === "error" ? {
                            status: "pending",
                            error: void 0
                        } : {}
                    } : i;
                };
                return this.__store.setState((i)=>{
                    var o;
                    return {
                        ...i,
                        matches: i.matches.map(r),
                        cachedMatches: i.cachedMatches.map(r),
                        pendingMatches: (o = i.pendingMatches) == null ? void 0 : o.map(r)
                    };
                }), this.load({
                    sync: n?.sync
                });
            }, this.resolveRedirect = (n)=>{
                const r = n;
                return r.href || (r.href = this.buildLocation(r).href), r;
            }, this.clearCache = (n)=>{
                const r = n?.filter;
                r !== void 0 ? this.__store.setState((i)=>({
                        ...i,
                        cachedMatches: i.cachedMatches.filter((o)=>!r(o))
                    })) : this.__store.setState((i)=>({
                        ...i,
                        cachedMatches: []
                    }));
            }, this.clearExpiredCache = ()=>{
                const n = (r)=>{
                    const i = this.looseRoutesById[r.routeId];
                    if (!i.options.loader) return !0;
                    const o = (r.preload ? i.options.preloadGcTime ?? this.options.defaultPreloadGcTime : i.options.gcTime ?? this.options.defaultGcTime) ?? 5 * 60 * 1e3;
                    return !(r.status !== "error" && Date.now() - r.updatedAt < o);
                };
                this.clearCache({
                    filter: n
                });
            }, this.loadRouteChunk = (n)=>(n._lazyPromise === void 0 && (n.lazyFn ? n._lazyPromise = n.lazyFn().then((r)=>{
                    const { id: i, ...o } = r.options;
                    Object.assign(n.options, o);
                }) : n._lazyPromise = Promise.resolve()), n._componentsPromise === void 0 && (n._componentsPromise = n._lazyPromise.then(()=>Promise.all(dT.map(async (r)=>{
                        const i = n.options[r];
                        i?.preload && await i.preload();
                    })))), n._componentsPromise), this.preloadRoute = async (n)=>{
                const r = this.buildLocation(n);
                let i = this.matchRoutes(r, {
                    throwOnError: !0,
                    preload: !0,
                    dest: n
                });
                const o = new Set([
                    ...this.state.matches,
                    ...this.state.pendingMatches ?? []
                ].map((l)=>l.id)), s = new Set([
                    ...o,
                    ...this.state.cachedMatches.map((l)=>l.id)
                ]);
                zx(()=>{
                    i.forEach((l)=>{
                        s.has(l.id) || this.__store.setState((u)=>({
                                ...u,
                                cachedMatches: [
                                    ...u.cachedMatches,
                                    l
                                ]
                            }));
                    });
                });
                try {
                    return i = await this.loadMatches({
                        matches: i,
                        location: r,
                        preload: !0,
                        updateMatch: (l, u)=>{
                            o.has(l) ? i = i.map((f)=>f.id === l ? u(f) : f) : this.updateMatch(l, u);
                        }
                    }), i;
                } catch (l) {
                    if (Ma(l)) return l.reloadDocument ? void 0 : await this.preloadRoute({
                        ...l,
                        _fromLocation: r
                    });
                    Ei(l) || console.error(l);
                    return;
                }
            }, this.matchRoute = (n, r)=>{
                const i = {
                    ...n,
                    to: n.to ? this.resolvePathWithBase(n.from || "", n.to) : void 0,
                    params: n.params || {},
                    leaveParams: !0
                }, o = this.buildLocation(i);
                if (r?.pending && this.state.status !== "pending") return !1;
                const l = (r?.pending === void 0 ? !this.state.isLoading : r.pending) ? this.latestLocation : this.state.resolvedLocation || this.state.location, u = Sh(this.basepath, l.pathname, {
                    ...r,
                    to: o.pathname
                });
                return !u || n.params && !bc(u, n.params, {
                    partial: !0
                }) ? !1 : u && (r?.includeSearch ?? !0) ? bc(l.search, o.search, {
                    partial: !0
                }) ? u : !1 : u;
            }, this._handleNotFound = (n, r, { updateMatch: i = this.updateMatch } = {})=>{
                const o = Object.fromEntries(n.map((u)=>[
                        u.routeId,
                        u
                    ]));
                let s = (r.global ? this.looseRoutesById[Lr] : this.looseRoutesById[r.routeId]) || this.looseRoutesById[Lr];
                for(; !s.options.notFoundComponent && !this.options.defaultNotFoundComponent && s.id !== Lr;)s = s.parentRoute, Ki(s);
                const l = o[s.id];
                Ki(l, "Could not find match for route: " + s.id), i(l.id, (u)=>({
                        ...u,
                        status: "notFound",
                        error: r,
                        isFetching: !1
                    })), r.routerCode === "BEFORE_LOAD" && s.parentRoute && (r.routeId = s.parentRoute.id, this._handleNotFound(n, r, {
                    updateMatch: i
                }));
            }, this.hasNotFoundMatch = ()=>this.__store.state.matches.some((n)=>n.status === "notFound" || n.globalNotFound), this.update({
                defaultPreloadDelay: 50,
                defaultPendingMs: 1e3,
                defaultPendingMinMs: 500,
                context: void 0,
                ...t,
                caseSensitive: t.caseSensitive ?? !1,
                notFoundMode: t.notFoundMode ?? "fuzzy",
                stringifySearch: t.stringifySearch ?? tq,
                parseSearch: t.parseSearch ?? eq
            }), typeof document < "u" && (window.__TSR_ROUTER__ = this);
        }
        get state() {
            return this.__store.state;
        }
        get looseRoutesById() {
            return this.routesById;
        }
        matchRoutes(t, n, r) {
            return typeof t == "string" ? this.matchRoutesInternal({
                pathname: t,
                search: n
            }, r) : this.matchRoutesInternal(t, n);
        }
        matchRoutesInternal(t, n) {
            const { foundRoute: r, matchedRoutes: i, routeParams: o } = this.getMatchedRoutes(t, n?.dest);
            let s = !1;
            (r ? r.path !== "/" && o["**"] : Ka(t.pathname)) && (this.options.notFoundRoute ? i.push(this.options.notFoundRoute) : s = !0);
            const l = (()=>{
                if (s) {
                    if (this.options.notFoundMode !== "root") for(let m = i.length - 1; m >= 0; m--){
                        const g = i[m];
                        if (g.children) return g.id;
                    }
                    return Lr;
                }
            })(), u = i.map((m)=>{
                var g;
                let v;
                const x = ((g = m.options.params) == null ? void 0 : g.parse) ?? m.options.parseParams;
                if (x) try {
                    const b = x(o);
                    Object.assign(o, b);
                } catch (b) {
                    if (v = new Jq(b.message, {
                        cause: b
                    }), n?.throwOnError) throw v;
                    return v;
                }
            }), f = [], p = (m)=>m?.id ? m.context ?? this.options.context ?? {} : this.options.context ?? {};
            return i.forEach((m, g)=>{
                var v, x;
                const b = f[g - 1], [S, N, _] = (()=>{
                    const L = b?.search ?? t.search, P = b?._strictSearch ?? {};
                    try {
                        const V = Jx(m.options.validateSearch, {
                            ...L
                        }) ?? {};
                        return [
                            {
                                ...L,
                                ...V
                            },
                            {
                                ...P,
                                ...V
                            },
                            void 0
                        ];
                    } catch (V) {
                        let z = V;
                        if (V instanceof Wm || (z = new Wm(V.message, {
                            cause: V
                        })), n?.throwOnError) throw z;
                        return [
                            L,
                            {},
                            z
                        ];
                    }
                })(), I = ((x = (v = m.options).loaderDeps) == null ? void 0 : x.call(v, {
                    search: S
                })) ?? "", C = I ? JSON.stringify(I) : "", { usedParams: A, interpolatedPath: R } = Nh({
                    path: m.fullPath,
                    params: o,
                    decodeCharMap: this.pathParamsDecodeCharMap
                }), D = Nh({
                    path: m.id,
                    params: o,
                    leaveWildcards: !0,
                    decodeCharMap: this.pathParamsDecodeCharMap
                }).interpolatedPath + C, O = this.getMatch(D), E = this.state.matches.find((L)=>L.routeId === m.id), F = E ? "stay" : "enter";
                let j;
                if (O) j = {
                    ...O,
                    cause: F,
                    params: E ? Si(E.params, o) : o,
                    _strictParams: A,
                    search: Si(E ? E.search : O.search, S),
                    _strictSearch: N
                };
                else {
                    const L = m.options.loader || m.options.beforeLoad || m.lazyFn || Kq(m) ? "pending" : "success";
                    j = {
                        id: D,
                        index: g,
                        routeId: m.id,
                        params: E ? Si(E.params, o) : o,
                        _strictParams: A,
                        pathname: Ko([
                            this.basepath,
                            R
                        ]),
                        updatedAt: Date.now(),
                        search: E ? Si(E.search, S) : S,
                        _strictSearch: N,
                        searchError: void 0,
                        status: L,
                        isFetching: !1,
                        error: void 0,
                        paramsError: u[g],
                        __routeContext: {},
                        __beforeLoadContext: {},
                        context: {},
                        abortController: new AbortController,
                        fetchCount: 0,
                        cause: F,
                        loaderDeps: E ? Si(E.loaderDeps, I) : I,
                        invalid: !1,
                        preload: !1,
                        links: void 0,
                        scripts: void 0,
                        headScripts: void 0,
                        meta: void 0,
                        staticData: m.options.staticData || {},
                        loadPromise: sc(),
                        fullPath: m.fullPath
                    };
                }
                n?.preload || (j.globalNotFound = l === m.id), j.searchError = _;
                const M = p(b);
                j.context = {
                    ...M,
                    ...j.__routeContext,
                    ...j.__beforeLoadContext
                }, f.push(j);
            }), f.forEach((m, g)=>{
                var v, x, b, S, N, _, I, C;
                const A = this.looseRoutesById[m.routeId];
                if (!this.getMatch(m.id) && n?._buildLocation !== !0) {
                    const D = f[g - 1], O = p(D), E = {
                        deps: m.loaderDeps,
                        params: m.params,
                        context: O,
                        location: t,
                        navigate: (F)=>this.navigate({
                                ...F,
                                _fromLocation: t
                            }),
                        buildLocation: this.buildLocation,
                        cause: m.cause,
                        abortController: m.abortController,
                        preload: !!m.preload,
                        matches: f
                    };
                    m.__routeContext = ((x = (v = A.options).context) == null ? void 0 : x.call(v, E)) ?? {}, m.context = {
                        ...O,
                        ...m.__routeContext,
                        ...m.__beforeLoadContext
                    };
                }
                if (m.status === "success") {
                    m.headers = (S = (b = A.options).headers) == null ? void 0 : S.call(b, {
                        loaderData: m.loaderData
                    });
                    const D = {
                        matches: f,
                        match: m,
                        params: m.params,
                        loaderData: m.loaderData
                    }, O = (_ = (N = A.options).head) == null ? void 0 : _.call(N, D);
                    m.links = O?.links, m.headScripts = O?.scripts, m.meta = O?.meta, m.scripts = (C = (I = A.options).scripts) == null ? void 0 : C.call(I, D);
                }
            }), f;
        }
    }
    class Wm extends Error {
    }
    class Jq extends Error {
    }
    function Zq(e) {
        return {
            loadedAt: 0,
            isLoading: !1,
            isTransitioning: !1,
            status: "idle",
            resolvedLocation: void 0,
            location: e,
            matches: [],
            pendingMatches: [],
            cachedMatches: [],
            statusCode: 200
        };
    }
    function Yq({ router: e, children: t, ...n }) {
        e.update({
            ...e.options,
            ...n,
            context: {
                ...e.options.context,
                ...n.context
            }
        });
        const r = iT(), i = d.jsx(r.Provider, {
            value: e,
            children: t
        });
        return e.options.Wrap ? d.jsx(e.options.Wrap, {
            children: i
        }) : i;
    }
    function Xq({ router: e, ...t }) {
        return d.jsx(Yq, {
            router: e,
            ...t,
            children: d.jsx(Vq, {})
        });
    }
    function Wt(e) {
        return Xs({
            ...e,
            select: (t)=>e.select ? e.select(t.context) : t.context
        });
    }
    let eB = {
        data: ""
    }, tB = (e)=>typeof window == "object" ? ((e ? e.querySelector("#_goober") : window._goober) || Object.assign((e || document.head).appendChild(document.createElement("style")), {
            innerHTML: " ",
            id: "_goober"
        })).firstChild : e || eB, nB = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g, rB = /\/\*[^]*?\*\/|  +/g, SE = /\n+/g, Ms = (e, t)=>{
        let n = "", r = "", i = "";
        for(let o in e){
            let s = e[o];
            o[0] == "@" ? o[1] == "i" ? n = o + " " + s + ";" : r += o[1] == "f" ? Ms(s, o) : o + "{" + Ms(s, o[1] == "k" ? "" : t) + "}" : typeof s == "object" ? r += Ms(s, t ? t.replace(/([^,])+/g, (l)=>o.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g, (u)=>/&/.test(u) ? u.replace(/&/g, l) : l ? l + " " + u : u)) : o) : s != null && (o = /^--/.test(o) ? o : o.replace(/[A-Z]/g, "-$&").toLowerCase(), i += Ms.p ? Ms.p(o, s) : o + ":" + s + ";");
        }
        return n + (t && i ? t + "{" + i + "}" : i) + r;
    }, Mo = {}, fT = (e)=>{
        if (typeof e == "object") {
            let t = "";
            for(let n in e)t += n + fT(e[n]);
            return t;
        }
        return e;
    }, iB = (e, t, n, r, i)=>{
        let o = fT(e), s = Mo[o] || (Mo[o] = ((u)=>{
            let f = 0, p = 11;
            for(; f < u.length;)p = 101 * p + u.charCodeAt(f++) >>> 0;
            return "go" + p;
        })(o));
        if (!Mo[s]) {
            let u = o !== e ? e : ((f)=>{
                let p, m, g = [
                    {}
                ];
                for(; p = nB.exec(f.replace(rB, ""));)p[4] ? g.shift() : p[3] ? (m = p[3].replace(SE, " ").trim(), g.unshift(g[0][m] = g[0][m] || {})) : g[0][p[1]] = p[2].replace(SE, " ").trim();
                return g[0];
            })(e);
            Mo[s] = Ms(i ? {
                ["@keyframes " + s]: u
            } : u, n ? "" : "." + s);
        }
        let l = n && Mo.g ? Mo.g : null;
        return n && (Mo.g = Mo[s]), ((u, f, p, m)=>{
            m ? f.data = f.data.replace(m, u) : f.data.indexOf(u) === -1 && (f.data = p ? u + f.data : f.data + u);
        })(Mo[s], t, r, l), s;
    }, oB = (e, t, n)=>e.reduce((r, i, o)=>{
            let s = t[o];
            if (s && s.call) {
                let l = s(n), u = l && l.props && l.props.className || /^go/.test(l) && l;
                s = u ? "." + u : l && typeof l == "object" ? l.props ? "" : Ms(l, "") : l === !1 ? "" : l;
            }
            return r + i + (s ?? "");
        }, "");
    function Jg(e) {
        let t = this || {}, n = e.call ? e(t.p) : e;
        return iB(n.unshift ? n.raw ? oB(n, [].slice.call(arguments, 1), t.p) : n.reduce((r, i)=>Object.assign(r, i && i.call ? i(t.p) : i), {}) : n, tB(t.target), t.g, t.o, t.k);
    }
    let pT, D0, M0;
    Jg.bind({
        g: 1
    });
    let Zo = Jg.bind({
        k: 1
    });
    function sB(e, t, n, r) {
        Ms.p = t, pT = e, D0 = n, M0 = r;
    }
    function ua(e, t) {
        let n = this || {};
        return function() {
            let r = arguments;
            function i(o, s) {
                let l = Object.assign({}, o), u = l.className || i.className;
                n.p = Object.assign({
                    theme: D0 && D0()
                }, l), n.o = / *go\d+/.test(u), l.className = Jg.apply(n, r) + (u ? " " + u : "");
                let f = e;
                return e[0] && (f = l.as || e, delete l.as), M0 && f[0] && M0(l), pT(f, l);
            }
            return t ? t(i) : i;
        };
    }
    var aB = (e)=>typeof e == "function", Vm = (e, t)=>aB(e) ? e(t) : e, lB = (()=>{
        let e = 0;
        return ()=>(++e).toString();
    })(), hT = (()=>{
        let e;
        return ()=>{
            if (e === void 0 && typeof window < "u") {
                let t = matchMedia("(prefers-reduced-motion: reduce)");
                e = !t || t.matches;
            }
            return e;
        };
    })(), cB = 20, mT = (e, t)=>{
        switch(t.type){
            case 0:
                return {
                    ...e,
                    toasts: [
                        t.toast,
                        ...e.toasts
                    ].slice(0, cB)
                };
            case 1:
                return {
                    ...e,
                    toasts: e.toasts.map((o)=>o.id === t.toast.id ? {
                            ...o,
                            ...t.toast
                        } : o)
                };
            case 2:
                let { toast: n } = t;
                return mT(e, {
                    type: e.toasts.find((o)=>o.id === n.id) ? 1 : 0,
                    toast: n
                });
            case 3:
                let { toastId: r } = t;
                return {
                    ...e,
                    toasts: e.toasts.map((o)=>o.id === r || r === void 0 ? {
                            ...o,
                            dismissed: !0,
                            visible: !1
                        } : o)
                };
            case 4:
                return t.toastId === void 0 ? {
                    ...e,
                    toasts: []
                } : {
                    ...e,
                    toasts: e.toasts.filter((o)=>o.id !== t.toastId)
                };
            case 5:
                return {
                    ...e,
                    pausedAt: t.time
                };
            case 6:
                let i = t.time - (e.pausedAt || 0);
                return {
                    ...e,
                    pausedAt: void 0,
                    toasts: e.toasts.map((o)=>({
                            ...o,
                            pauseDuration: o.pauseDuration + i
                        }))
                };
        }
    }, Xh = [], Ga = {
        toasts: [],
        pausedAt: void 0
    }, yl = (e)=>{
        Ga = mT(Ga, e), Xh.forEach((t)=>{
            t(Ga);
        });
    }, uB = {
        blank: 4e3,
        error: 4e3,
        success: 2e3,
        loading: 1 / 0,
        custom: 4e3
    }, dB = (e = {})=>{
        let [t, n] = $.useState(Ga), r = $.useRef(Ga);
        $.useEffect(()=>(r.current !== Ga && n(Ga), Xh.push(n), ()=>{
                let o = Xh.indexOf(n);
                o > -1 && Xh.splice(o, 1);
            }), []);
        let i = t.toasts.map((o)=>{
            var s, l, u;
            return {
                ...e,
                ...e[o.type],
                ...o,
                removeDelay: o.removeDelay || ((s = e[o.type]) == null ? void 0 : s.removeDelay) || e?.removeDelay,
                duration: o.duration || ((l = e[o.type]) == null ? void 0 : l.duration) || e?.duration || uB[o.type],
                style: {
                    ...e.style,
                    ...(u = e[o.type]) == null ? void 0 : u.style,
                    ...o.style
                }
            };
        });
        return {
            ...t,
            toasts: i
        };
    }, fB = (e, t = "blank", n)=>({
            createdAt: Date.now(),
            visible: !0,
            dismissed: !1,
            type: t,
            ariaProps: {
                role: "status",
                "aria-live": "polite"
            },
            message: e,
            pauseDuration: 0,
            ...n,
            id: n?.id || lB()
        }), Ef = (e)=>(t, n)=>{
            let r = fB(t, e, n);
            return yl({
                type: 2,
                toast: r
            }), r.id;
        }, _t = (e, t)=>Ef("blank")(e, t);
    _t.error = Ef("error");
    _t.success = Ef("success");
    _t.loading = Ef("loading");
    _t.custom = Ef("custom");
    _t.dismiss = (e)=>{
        yl({
            type: 3,
            toastId: e
        });
    };
    _t.remove = (e)=>yl({
            type: 4,
            toastId: e
        });
    _t.promise = (e, t, n)=>{
        let r = _t.loading(t.loading, {
            ...n,
            ...n?.loading
        });
        return typeof e == "function" && (e = e()), e.then((i)=>{
            let o = t.success ? Vm(t.success, i) : void 0;
            return o ? _t.success(o, {
                id: r,
                ...n,
                ...n?.success
            }) : _t.dismiss(r), i;
        }).catch((i)=>{
            let o = t.error ? Vm(t.error, i) : void 0;
            o ? _t.error(o, {
                id: r,
                ...n,
                ...n?.error
            }) : _t.dismiss(r);
        }), e;
    };
    var pB = (e, t)=>{
        yl({
            type: 1,
            toast: {
                id: e,
                height: t
            }
        });
    }, hB = ()=>{
        yl({
            type: 5,
            time: Date.now()
        });
    }, Id = new Map, mB = 1e3, gB = (e, t = mB)=>{
        if (Id.has(e)) return;
        let n = setTimeout(()=>{
            Id.delete(e), yl({
                type: 4,
                toastId: e
            });
        }, t);
        Id.set(e, n);
    }, yB = (e)=>{
        let { toasts: t, pausedAt: n } = dB(e);
        $.useEffect(()=>{
            if (n) return;
            let o = Date.now(), s = t.map((l)=>{
                if (l.duration === 1 / 0) return;
                let u = (l.duration || 0) + l.pauseDuration - (o - l.createdAt);
                if (u < 0) {
                    l.visible && _t.dismiss(l.id);
                    return;
                }
                return setTimeout(()=>_t.dismiss(l.id), u);
            });
            return ()=>{
                s.forEach((l)=>l && clearTimeout(l));
            };
        }, [
            t,
            n
        ]);
        let r = $.useCallback(()=>{
            n && yl({
                type: 6,
                time: Date.now()
            });
        }, [
            n
        ]), i = $.useCallback((o, s)=>{
            let { reverseOrder: l = !1, gutter: u = 8, defaultPosition: f } = s || {}, p = t.filter((v)=>(v.position || f) === (o.position || f) && v.height), m = p.findIndex((v)=>v.id === o.id), g = p.filter((v, x)=>x < m && v.visible).length;
            return p.filter((v)=>v.visible).slice(...l ? [
                g + 1
            ] : [
                0,
                g
            ]).reduce((v, x)=>v + (x.height || 0) + u, 0);
        }, [
            t
        ]);
        return $.useEffect(()=>{
            t.forEach((o)=>{
                if (o.dismissed) gB(o.id, o.removeDelay);
                else {
                    let s = Id.get(o.id);
                    s && (clearTimeout(s), Id.delete(o.id));
                }
            });
        }, [
            t
        ]), {
            toasts: t,
            handlers: {
                updateHeight: pB,
                startPause: hB,
                endPause: r,
                calculateOffset: i
            }
        };
    }, vB = Zo`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
 transform: scale(1) rotate(45deg);
  opacity: 1;
}`, xB = Zo`
from {
  transform: scale(0);
  opacity: 0;
}
to {
  transform: scale(1);
  opacity: 1;
}`, bB = Zo`
from {
  transform: scale(0) rotate(90deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(90deg);
	opacity: 1;
}`, wB = ua("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${(e)=>e.primary || "#ff4b4b"};
  position: relative;
  transform: rotate(45deg);

  animation: ${vB} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;

  &:after,
  &:before {
    content: '';
    animation: ${xB} 0.15s ease-out forwards;
    animation-delay: 150ms;
    position: absolute;
    border-radius: 3px;
    opacity: 0;
    background: ${(e)=>e.secondary || "#fff"};
    bottom: 9px;
    left: 4px;
    height: 2px;
    width: 12px;
  }

  &:before {
    animation: ${bB} 0.15s ease-out forwards;
    animation-delay: 180ms;
    transform: rotate(90deg);
  }
`, NB = Zo`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
`, SB = ua("div")`
  width: 12px;
  height: 12px;
  box-sizing: border-box;
  border: 2px solid;
  border-radius: 100%;
  border-color: ${(e)=>e.secondary || "#e0e0e0"};
  border-right-color: ${(e)=>e.primary || "#616161"};
  animation: ${NB} 1s linear infinite;
`, IB = Zo`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(45deg);
	opacity: 1;
}`, _B = Zo`
0% {
	height: 0;
	width: 0;
	opacity: 0;
}
40% {
  height: 0;
	width: 6px;
	opacity: 1;
}
100% {
  opacity: 1;
  height: 10px;
}`, EB = ua("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${(e)=>e.primary || "#61d345"};
  position: relative;
  transform: rotate(45deg);

  animation: ${IB} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;
  &:after {
    content: '';
    box-sizing: border-box;
    animation: ${_B} 0.2s ease-out forwards;
    opacity: 0;
    animation-delay: 200ms;
    position: absolute;
    border-right: 2px solid;
    border-bottom: 2px solid;
    border-color: ${(e)=>e.secondary || "#fff"};
    bottom: 6px;
    left: 6px;
    height: 10px;
    width: 6px;
  }
`, kB = ua("div")`
  position: absolute;
`, CB = ua("div")`
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 20px;
  min-height: 20px;
`, jB = Zo`
from {
  transform: scale(0.6);
  opacity: 0.4;
}
to {
  transform: scale(1);
  opacity: 1;
}`, RB = ua("div")`
  position: relative;
  transform: scale(0.6);
  opacity: 0.4;
  min-width: 20px;
  animation: ${jB} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
`, OB = ({ toast: e })=>{
        let { icon: t, type: n, iconTheme: r } = e;
        return t !== void 0 ? typeof t == "string" ? $.createElement(RB, null, t) : t : n === "blank" ? null : $.createElement(CB, null, $.createElement(SB, {
            ...r
        }), n !== "loading" && $.createElement(kB, null, n === "error" ? $.createElement(wB, {
            ...r
        }) : $.createElement(EB, {
            ...r
        })));
    }, TB = (e)=>`
0% {transform: translate3d(0,${e * -200}%,0) scale(.6); opacity:.5;}
100% {transform: translate3d(0,0,0) scale(1); opacity:1;}
`, PB = (e)=>`
0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}
100% {transform: translate3d(0,${e * -150}%,-1px) scale(.6); opacity:0;}
`, AB = "0%{opacity:0;} 100%{opacity:1;}", FB = "0%{opacity:1;} 100%{opacity:0;}", DB = ua("div")`
  display: flex;
  align-items: center;
  background: #fff;
  color: #363636;
  line-height: 1.3;
  will-change: transform;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);
  max-width: 350px;
  pointer-events: auto;
  padding: 8px 10px;
  border-radius: 8px;
`, MB = ua("div")`
  display: flex;
  justify-content: center;
  margin: 4px 10px;
  color: inherit;
  flex: 1 1 auto;
  white-space: pre-line;
`, LB = (e, t)=>{
        let n = e.includes("top") ? 1 : -1, [r, i] = hT() ? [
            AB,
            FB
        ] : [
            TB(n),
            PB(n)
        ];
        return {
            animation: t ? `${Zo(r)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards` : `${Zo(i)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`
        };
    }, $B = $.memo(({ toast: e, position: t, style: n, children: r })=>{
        let i = e.height ? LB(e.position || t || "top-center", e.visible) : {
            opacity: 0
        }, o = $.createElement(OB, {
            toast: e
        }), s = $.createElement(MB, {
            ...e.ariaProps
        }, Vm(e.message, e));
        return $.createElement(DB, {
            className: e.className,
            style: {
                ...i,
                ...n,
                ...e.style
            }
        }, typeof r == "function" ? r({
            icon: o,
            message: s
        }) : $.createElement($.Fragment, null, o, s));
    });
    sB($.createElement);
    var qB = ({ id: e, className: t, style: n, onHeightUpdate: r, children: i })=>{
        let o = $.useCallback((s)=>{
            if (s) {
                let l = ()=>{
                    let u = s.getBoundingClientRect().height;
                    r(e, u);
                };
                l(), new MutationObserver(l).observe(s, {
                    subtree: !0,
                    childList: !0,
                    characterData: !0
                });
            }
        }, [
            e,
            r
        ]);
        return $.createElement("div", {
            ref: o,
            className: t,
            style: n
        }, i);
    }, BB = (e, t)=>{
        let n = e.includes("top"), r = n ? {
            top: 0
        } : {
            bottom: 0
        }, i = e.includes("center") ? {
            justifyContent: "center"
        } : e.includes("right") ? {
            justifyContent: "flex-end"
        } : {};
        return {
            left: 0,
            right: 0,
            display: "flex",
            position: "absolute",
            transition: hT() ? void 0 : "all 230ms cubic-bezier(.21,1.02,.73,1)",
            transform: `translateY(${t * (n ? 1 : -1)}px)`,
            ...r,
            ...i
        };
    }, zB = Jg`
  z-index: 9999;
  > * {
    pointer-events: auto;
  }
`, _h = 16, gT = ({ reverseOrder: e, position: t = "top-center", toastOptions: n, gutter: r, children: i, containerStyle: o, containerClassName: s })=>{
        let { toasts: l, handlers: u } = yB(n);
        return $.createElement("div", {
            id: "_rht_toaster",
            style: {
                position: "fixed",
                zIndex: 9999,
                top: _h,
                left: _h,
                right: _h,
                bottom: _h,
                pointerEvents: "none",
                ...o
            },
            className: s,
            onMouseEnter: u.startPause,
            onMouseLeave: u.endPause
        }, l.map((f)=>{
            let p = f.position || t, m = u.calculateOffset(f, {
                reverseOrder: e,
                gutter: r,
                defaultPosition: t
            }), g = BB(p, m);
            return $.createElement(qB, {
                id: f.id,
                key: f.id,
                onHeightUpdate: u.updateHeight,
                className: f.visible ? zB : "",
                style: g
            }, f.type === "custom" ? Vm(f.message, f) : i ? i(f) : $.createElement($B, {
                toast: f,
                position: p
            }));
        }));
    }, WB = _t;
    function yT(e, t) {
        return function() {
            return e.apply(t, arguments);
        };
    }
    const { toString: VB } = Object.prototype, { getPrototypeOf: YN } = Object, Zg = ((e)=>(t)=>{
            const n = VB.call(t);
            return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
        })(Object.create(null)), eo = (e)=>(e = e.toLowerCase(), (t)=>Zg(t) === e), Yg = (e)=>(t)=>typeof t === e, { isArray: eu } = Array, $d = Yg("undefined");
    function UB(e) {
        return e !== null && !$d(e) && e.constructor !== null && !$d(e.constructor) && si(e.constructor.isBuffer) && e.constructor.isBuffer(e);
    }
    const vT = eo("ArrayBuffer");
    function HB(e) {
        let t;
        return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? t = ArrayBuffer.isView(e) : t = e && e.buffer && vT(e.buffer), t;
    }
    const KB = Yg("string"), si = Yg("function"), xT = Yg("number"), Xg = (e)=>e !== null && typeof e == "object", GB = (e)=>e === !0 || e === !1, em = (e)=>{
        if (Zg(e) !== "object") return !1;
        const t = YN(e);
        return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
    }, QB = eo("Date"), JB = eo("File"), ZB = eo("Blob"), YB = eo("FileList"), XB = (e)=>Xg(e) && si(e.pipe), e3 = (e)=>{
        let t;
        return e && (typeof FormData == "function" && e instanceof FormData || si(e.append) && ((t = Zg(e)) === "formdata" || t === "object" && si(e.toString) && e.toString() === "[object FormData]"));
    }, t3 = eo("URLSearchParams"), [n3, r3, i3, o3] = [
        "ReadableStream",
        "Request",
        "Response",
        "Headers"
    ].map(eo), s3 = (e)=>e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
    function kf(e, t, { allOwnKeys: n = !1 } = {}) {
        if (e === null || typeof e > "u") return;
        let r, i;
        if (typeof e != "object" && (e = [
            e
        ]), eu(e)) for(r = 0, i = e.length; r < i; r++)t.call(null, e[r], r, e);
        else {
            const o = n ? Object.getOwnPropertyNames(e) : Object.keys(e), s = o.length;
            let l;
            for(r = 0; r < s; r++)l = o[r], t.call(null, e[l], l, e);
        }
    }
    function bT(e, t) {
        t = t.toLowerCase();
        const n = Object.keys(e);
        let r = n.length, i;
        for(; r-- > 0;)if (i = n[r], t === i.toLowerCase()) return i;
        return null;
    }
    const Qa = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global, wT = (e)=>!$d(e) && e !== Qa;
    function L0() {
        const { caseless: e } = wT(this) && this || {}, t = {}, n = (r, i)=>{
            const o = e && bT(t, i) || i;
            em(t[o]) && em(r) ? t[o] = L0(t[o], r) : em(r) ? t[o] = L0({}, r) : eu(r) ? t[o] = r.slice() : t[o] = r;
        };
        for(let r = 0, i = arguments.length; r < i; r++)arguments[r] && kf(arguments[r], n);
        return t;
    }
    const a3 = (e, t, n, { allOwnKeys: r } = {})=>(kf(t, (i, o)=>{
            n && si(i) ? e[o] = yT(i, n) : e[o] = i;
        }, {
            allOwnKeys: r
        }), e), l3 = (e)=>(e.charCodeAt(0) === 65279 && (e = e.slice(1)), e), c3 = (e, t, n, r)=>{
        e.prototype = Object.create(t.prototype, r), e.prototype.constructor = e, Object.defineProperty(e, "super", {
            value: t.prototype
        }), n && Object.assign(e.prototype, n);
    }, u3 = (e, t, n, r)=>{
        let i, o, s;
        const l = {};
        if (t = t || {}, e == null) return t;
        do {
            for(i = Object.getOwnPropertyNames(e), o = i.length; o-- > 0;)s = i[o], (!r || r(s, e, t)) && !l[s] && (t[s] = e[s], l[s] = !0);
            e = n !== !1 && YN(e);
        }while (e && (!n || n(e, t)) && e !== Object.prototype);
        return t;
    }, d3 = (e, t, n)=>{
        e = String(e), (n === void 0 || n > e.length) && (n = e.length), n -= t.length;
        const r = e.indexOf(t, n);
        return r !== -1 && r === n;
    }, f3 = (e)=>{
        if (!e) return null;
        if (eu(e)) return e;
        let t = e.length;
        if (!xT(t)) return null;
        const n = new Array(t);
        for(; t-- > 0;)n[t] = e[t];
        return n;
    }, p3 = ((e)=>(t)=>e && t instanceof e)(typeof Uint8Array < "u" && YN(Uint8Array)), h3 = (e, t)=>{
        const r = (e && e[Symbol.iterator]).call(e);
        let i;
        for(; (i = r.next()) && !i.done;){
            const o = i.value;
            t.call(e, o[0], o[1]);
        }
    }, m3 = (e, t)=>{
        let n;
        const r = [];
        for(; (n = e.exec(t)) !== null;)r.push(n);
        return r;
    }, g3 = eo("HTMLFormElement"), y3 = (e)=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function(n, r, i) {
            return r.toUpperCase() + i;
        }), IE = (({ hasOwnProperty: e })=>(t, n)=>e.call(t, n))(Object.prototype), v3 = eo("RegExp"), NT = (e, t)=>{
        const n = Object.getOwnPropertyDescriptors(e), r = {};
        kf(n, (i, o)=>{
            let s;
            (s = t(i, o, e)) !== !1 && (r[o] = s || i);
        }), Object.defineProperties(e, r);
    }, x3 = (e)=>{
        NT(e, (t, n)=>{
            if (si(e) && [
                "arguments",
                "caller",
                "callee"
            ].indexOf(n) !== -1) return !1;
            const r = e[n];
            if (si(r)) {
                if (t.enumerable = !1, "writable" in t) {
                    t.writable = !1;
                    return;
                }
                t.set || (t.set = ()=>{
                    throw Error("Can not rewrite read-only method '" + n + "'");
                });
            }
        });
    }, b3 = (e, t)=>{
        const n = {}, r = (i)=>{
            i.forEach((o)=>{
                n[o] = !0;
            });
        };
        return eu(e) ? r(e) : r(String(e).split(t)), n;
    }, w3 = ()=>{}, N3 = (e, t)=>e != null && Number.isFinite(e = +e) ? e : t, Zx = "abcdefghijklmnopqrstuvwxyz", _E = "0123456789", ST = {
        DIGIT: _E,
        ALPHA: Zx,
        ALPHA_DIGIT: Zx + Zx.toUpperCase() + _E
    }, S3 = (e = 16, t = ST.ALPHA_DIGIT)=>{
        let n = "";
        const { length: r } = t;
        for(; e--;)n += t[Math.random() * r | 0];
        return n;
    };
    function I3(e) {
        return !!(e && si(e.append) && e[Symbol.toStringTag] === "FormData" && e[Symbol.iterator]);
    }
    const _3 = (e)=>{
        const t = new Array(10), n = (r, i)=>{
            if (Xg(r)) {
                if (t.indexOf(r) >= 0) return;
                if (!("toJSON" in r)) {
                    t[i] = r;
                    const o = eu(r) ? [] : {};
                    return kf(r, (s, l)=>{
                        const u = n(s, i + 1);
                        !$d(u) && (o[l] = u);
                    }), t[i] = void 0, o;
                }
            }
            return r;
        };
        return n(e, 0);
    }, E3 = eo("AsyncFunction"), k3 = (e)=>e && (Xg(e) || si(e)) && si(e.then) && si(e.catch), IT = ((e, t)=>e ? setImmediate : t ? ((n, r)=>(Qa.addEventListener("message", ({ source: i, data: o })=>{
                i === Qa && o === n && r.length && r.shift()();
            }, !1), (i)=>{
                r.push(i), Qa.postMessage(n, "*");
            }))(`axios@${Math.random()}`, []) : (n)=>setTimeout(n))(typeof setImmediate == "function", si(Qa.postMessage)), C3 = typeof queueMicrotask < "u" ? queueMicrotask.bind(Qa) : typeof process < "u" && process.nextTick || IT, ye = {
        isArray: eu,
        isArrayBuffer: vT,
        isBuffer: UB,
        isFormData: e3,
        isArrayBufferView: HB,
        isString: KB,
        isNumber: xT,
        isBoolean: GB,
        isObject: Xg,
        isPlainObject: em,
        isReadableStream: n3,
        isRequest: r3,
        isResponse: i3,
        isHeaders: o3,
        isUndefined: $d,
        isDate: QB,
        isFile: JB,
        isBlob: ZB,
        isRegExp: v3,
        isFunction: si,
        isStream: XB,
        isURLSearchParams: t3,
        isTypedArray: p3,
        isFileList: YB,
        forEach: kf,
        merge: L0,
        extend: a3,
        trim: s3,
        stripBOM: l3,
        inherits: c3,
        toFlatObject: u3,
        kindOf: Zg,
        kindOfTest: eo,
        endsWith: d3,
        toArray: f3,
        forEachEntry: h3,
        matchAll: m3,
        isHTMLForm: g3,
        hasOwnProperty: IE,
        hasOwnProp: IE,
        reduceDescriptors: NT,
        freezeMethods: x3,
        toObjectSet: b3,
        toCamelCase: y3,
        noop: w3,
        toFiniteNumber: N3,
        findKey: bT,
        global: Qa,
        isContextDefined: wT,
        ALPHABET: ST,
        generateString: S3,
        isSpecCompliantForm: I3,
        toJSONObject: _3,
        isAsyncFn: E3,
        isThenable: k3,
        setImmediate: IT,
        asap: C3
    };
    function ct(e, t, n, r, i) {
        Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = e, this.name = "AxiosError", t && (this.code = t), n && (this.config = n), r && (this.request = r), i && (this.response = i, this.status = i.status ? i.status : null);
    }
    ye.inherits(ct, Error, {
        toJSON: function() {
            return {
                message: this.message,
                name: this.name,
                description: this.description,
                number: this.number,
                fileName: this.fileName,
                lineNumber: this.lineNumber,
                columnNumber: this.columnNumber,
                stack: this.stack,
                config: ye.toJSONObject(this.config),
                code: this.code,
                status: this.status
            };
        }
    });
    const _T = ct.prototype, ET = {};
    [
        "ERR_BAD_OPTION_VALUE",
        "ERR_BAD_OPTION",
        "ECONNABORTED",
        "ETIMEDOUT",
        "ERR_NETWORK",
        "ERR_FR_TOO_MANY_REDIRECTS",
        "ERR_DEPRECATED",
        "ERR_BAD_RESPONSE",
        "ERR_BAD_REQUEST",
        "ERR_CANCELED",
        "ERR_NOT_SUPPORT",
        "ERR_INVALID_URL"
    ].forEach((e)=>{
        ET[e] = {
            value: e
        };
    });
    Object.defineProperties(ct, ET);
    Object.defineProperty(_T, "isAxiosError", {
        value: !0
    });
    ct.from = (e, t, n, r, i, o)=>{
        const s = Object.create(_T);
        return ye.toFlatObject(e, s, function(u) {
            return u !== Error.prototype;
        }, (l)=>l !== "isAxiosError"), ct.call(s, e.message, t, n, r, i), s.cause = e, s.name = e.name, o && Object.assign(s, o), s;
    };
    const j3 = null;
    function $0(e) {
        return ye.isPlainObject(e) || ye.isArray(e);
    }
    function kT(e) {
        return ye.endsWith(e, "[]") ? e.slice(0, -2) : e;
    }
    function EE(e, t, n) {
        return e ? e.concat(t).map(function(i, o) {
            return i = kT(i), !n && o ? "[" + i + "]" : i;
        }).join(n ? "." : "") : t;
    }
    function R3(e) {
        return ye.isArray(e) && !e.some($0);
    }
    const O3 = ye.toFlatObject(ye, {}, null, function(t) {
        return /^is[A-Z]/.test(t);
    });
    function ey(e, t, n) {
        if (!ye.isObject(e)) throw new TypeError("target must be an object");
        t = t || new FormData, n = ye.toFlatObject(n, {
            metaTokens: !0,
            dots: !1,
            indexes: !1
        }, !1, function(b, S) {
            return !ye.isUndefined(S[b]);
        });
        const r = n.metaTokens, i = n.visitor || p, o = n.dots, s = n.indexes, u = (n.Blob || typeof Blob < "u" && Blob) && ye.isSpecCompliantForm(t);
        if (!ye.isFunction(i)) throw new TypeError("visitor must be a function");
        function f(x) {
            if (x === null) return "";
            if (ye.isDate(x)) return x.toISOString();
            if (!u && ye.isBlob(x)) throw new ct("Blob is not supported. Use a Buffer instead.");
            return ye.isArrayBuffer(x) || ye.isTypedArray(x) ? u && typeof Blob == "function" ? new Blob([
                x
            ]) : Buffer.from(x) : x;
        }
        function p(x, b, S) {
            let N = x;
            if (x && !S && typeof x == "object") {
                if (ye.endsWith(b, "{}")) b = r ? b : b.slice(0, -2), x = JSON.stringify(x);
                else if (ye.isArray(x) && R3(x) || (ye.isFileList(x) || ye.endsWith(b, "[]")) && (N = ye.toArray(x))) return b = kT(b), N.forEach(function(I, C) {
                    !(ye.isUndefined(I) || I === null) && t.append(s === !0 ? EE([
                        b
                    ], C, o) : s === null ? b : b + "[]", f(I));
                }), !1;
            }
            return $0(x) ? !0 : (t.append(EE(S, b, o), f(x)), !1);
        }
        const m = [], g = Object.assign(O3, {
            defaultVisitor: p,
            convertValue: f,
            isVisitable: $0
        });
        function v(x, b) {
            if (!ye.isUndefined(x)) {
                if (m.indexOf(x) !== -1) throw Error("Circular reference detected in " + b.join("."));
                m.push(x), ye.forEach(x, function(N, _) {
                    (!(ye.isUndefined(N) || N === null) && i.call(t, N, ye.isString(_) ? _.trim() : _, b, g)) === !0 && v(N, b ? b.concat(_) : [
                        _
                    ]);
                }), m.pop();
            }
        }
        if (!ye.isObject(e)) throw new TypeError("data must be an object");
        return v(e), t;
    }
    function kE(e) {
        const t = {
            "!": "%21",
            "'": "%27",
            "(": "%28",
            ")": "%29",
            "~": "%7E",
            "%20": "+",
            "%00": "\0"
        };
        return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(r) {
            return t[r];
        });
    }
    function XN(e, t) {
        this._pairs = [], e && ey(e, this, t);
    }
    const CT = XN.prototype;
    CT.append = function(t, n) {
        this._pairs.push([
            t,
            n
        ]);
    };
    CT.toString = function(t) {
        const n = t ? function(r) {
            return t.call(this, r, kE);
        } : kE;
        return this._pairs.map(function(i) {
            return n(i[0]) + "=" + n(i[1]);
        }, "").join("&");
    };
    function T3(e) {
        return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
    }
    function jT(e, t, n) {
        if (!t) return e;
        const r = n && n.encode || T3;
        ye.isFunction(n) && (n = {
            serialize: n
        });
        const i = n && n.serialize;
        let o;
        if (i ? o = i(t, n) : o = ye.isURLSearchParams(t) ? t.toString() : new XN(t, n).toString(r), o) {
            const s = e.indexOf("#");
            s !== -1 && (e = e.slice(0, s)), e += (e.indexOf("?") === -1 ? "?" : "&") + o;
        }
        return e;
    }
    class CE {
        constructor(){
            this.handlers = [];
        }
        use(t, n, r) {
            return this.handlers.push({
                fulfilled: t,
                rejected: n,
                synchronous: r ? r.synchronous : !1,
                runWhen: r ? r.runWhen : null
            }), this.handlers.length - 1;
        }
        eject(t) {
            this.handlers[t] && (this.handlers[t] = null);
        }
        clear() {
            this.handlers && (this.handlers = []);
        }
        forEach(t) {
            ye.forEach(this.handlers, function(r) {
                r !== null && t(r);
            });
        }
    }
    const RT = {
        silentJSONParsing: !0,
        forcedJSONParsing: !0,
        clarifyTimeoutError: !1
    }, P3 = typeof URLSearchParams < "u" ? URLSearchParams : XN, A3 = typeof FormData < "u" ? FormData : null, F3 = typeof Blob < "u" ? Blob : null, D3 = {
        isBrowser: !0,
        classes: {
            URLSearchParams: P3,
            FormData: A3,
            Blob: F3
        },
        protocols: [
            "http",
            "https",
            "file",
            "blob",
            "url",
            "data"
        ]
    }, eS = typeof window < "u" && typeof document < "u", q0 = typeof navigator == "object" && navigator || void 0, M3 = eS && (!q0 || [
        "ReactNative",
        "NativeScript",
        "NS"
    ].indexOf(q0.product) < 0), L3 = typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && typeof self.importScripts == "function", $3 = eS && window.location.href || "http://localhost", q3 = Object.freeze(Object.defineProperty({
        __proto__: null,
        hasBrowserEnv: eS,
        hasStandardBrowserEnv: M3,
        hasStandardBrowserWebWorkerEnv: L3,
        navigator: q0,
        origin: $3
    }, Symbol.toStringTag, {
        value: "Module"
    })), ar = {
        ...q3,
        ...D3
    };
    function B3(e, t) {
        return ey(e, new ar.classes.URLSearchParams, Object.assign({
            visitor: function(n, r, i, o) {
                return ar.isNode && ye.isBuffer(n) ? (this.append(r, n.toString("base64")), !1) : o.defaultVisitor.apply(this, arguments);
            }
        }, t));
    }
    function z3(e) {
        return ye.matchAll(/\w+|\[(\w*)]/g, e).map((t)=>t[0] === "[]" ? "" : t[1] || t[0]);
    }
    function W3(e) {
        const t = {}, n = Object.keys(e);
        let r;
        const i = n.length;
        let o;
        for(r = 0; r < i; r++)o = n[r], t[o] = e[o];
        return t;
    }
    function OT(e) {
        function t(n, r, i, o) {
            let s = n[o++];
            if (s === "__proto__") return !0;
            const l = Number.isFinite(+s), u = o >= n.length;
            return s = !s && ye.isArray(i) ? i.length : s, u ? (ye.hasOwnProp(i, s) ? i[s] = [
                i[s],
                r
            ] : i[s] = r, !l) : ((!i[s] || !ye.isObject(i[s])) && (i[s] = []), t(n, r, i[s], o) && ye.isArray(i[s]) && (i[s] = W3(i[s])), !l);
        }
        if (ye.isFormData(e) && ye.isFunction(e.entries)) {
            const n = {};
            return ye.forEachEntry(e, (r, i)=>{
                t(z3(r), i, n, 0);
            }), n;
        }
        return null;
    }
    function V3(e, t, n) {
        if (ye.isString(e)) try {
            return (t || JSON.parse)(e), ye.trim(e);
        } catch (r) {
            if (r.name !== "SyntaxError") throw r;
        }
        return (n || JSON.stringify)(e);
    }
    const Cf = {
        transitional: RT,
        adapter: [
            "xhr",
            "http",
            "fetch"
        ],
        transformRequest: [
            function(t, n) {
                const r = n.getContentType() || "", i = r.indexOf("application/json") > -1, o = ye.isObject(t);
                if (o && ye.isHTMLForm(t) && (t = new FormData(t)), ye.isFormData(t)) return i ? JSON.stringify(OT(t)) : t;
                if (ye.isArrayBuffer(t) || ye.isBuffer(t) || ye.isStream(t) || ye.isFile(t) || ye.isBlob(t) || ye.isReadableStream(t)) return t;
                if (ye.isArrayBufferView(t)) return t.buffer;
                if (ye.isURLSearchParams(t)) return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), t.toString();
                let l;
                if (o) {
                    if (r.indexOf("application/x-www-form-urlencoded") > -1) return B3(t, this.formSerializer).toString();
                    if ((l = ye.isFileList(t)) || r.indexOf("multipart/form-data") > -1) {
                        const u = this.env && this.env.FormData;
                        return ey(l ? {
                            "files[]": t
                        } : t, u && new u, this.formSerializer);
                    }
                }
                return o || i ? (n.setContentType("application/json", !1), V3(t)) : t;
            }
        ],
        transformResponse: [
            function(t) {
                const n = this.transitional || Cf.transitional, r = n && n.forcedJSONParsing, i = this.responseType === "json";
                if (ye.isResponse(t) || ye.isReadableStream(t)) return t;
                if (t && ye.isString(t) && (r && !this.responseType || i)) {
                    const s = !(n && n.silentJSONParsing) && i;
                    try {
                        return JSON.parse(t);
                    } catch (l) {
                        if (s) throw l.name === "SyntaxError" ? ct.from(l, ct.ERR_BAD_RESPONSE, this, null, this.response) : l;
                    }
                }
                return t;
            }
        ],
        timeout: 0,
        xsrfCookieName: "XSRF-TOKEN",
        xsrfHeaderName: "X-XSRF-TOKEN",
        maxContentLength: -1,
        maxBodyLength: -1,
        env: {
            FormData: ar.classes.FormData,
            Blob: ar.classes.Blob
        },
        validateStatus: function(t) {
            return t >= 200 && t < 300;
        },
        headers: {
            common: {
                Accept: "application/json, text/plain, */*",
                "Content-Type": void 0
            }
        }
    };
    ye.forEach([
        "delete",
        "get",
        "head",
        "post",
        "put",
        "patch"
    ], (e)=>{
        Cf.headers[e] = {};
    });
    const U3 = ye.toObjectSet([
        "age",
        "authorization",
        "content-length",
        "content-type",
        "etag",
        "expires",
        "from",
        "host",
        "if-modified-since",
        "if-unmodified-since",
        "last-modified",
        "location",
        "max-forwards",
        "proxy-authorization",
        "referer",
        "retry-after",
        "user-agent"
    ]), H3 = (e)=>{
        const t = {};
        let n, r, i;
        return e && e.split(`
`).forEach(function(s) {
            i = s.indexOf(":"), n = s.substring(0, i).trim().toLowerCase(), r = s.substring(i + 1).trim(), !(!n || t[n] && U3[n]) && (n === "set-cookie" ? t[n] ? t[n].push(r) : t[n] = [
                r
            ] : t[n] = t[n] ? t[n] + ", " + r : r);
        }), t;
    }, jE = Symbol("internals");
    function Yu(e) {
        return e && String(e).trim().toLowerCase();
    }
    function tm(e) {
        return e === !1 || e == null ? e : ye.isArray(e) ? e.map(tm) : String(e);
    }
    function K3(e) {
        const t = Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
        let r;
        for(; r = n.exec(e);)t[r[1]] = r[2];
        return t;
    }
    const G3 = (e)=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
    function Yx(e, t, n, r, i) {
        if (ye.isFunction(r)) return r.call(this, t, n);
        if (i && (t = n), !!ye.isString(t)) {
            if (ye.isString(r)) return t.indexOf(r) !== -1;
            if (ye.isRegExp(r)) return r.test(t);
        }
    }
    function Q3(e) {
        return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, n, r)=>n.toUpperCase() + r);
    }
    function J3(e, t) {
        const n = ye.toCamelCase(" " + t);
        [
            "get",
            "set",
            "has"
        ].forEach((r)=>{
            Object.defineProperty(e, r + n, {
                value: function(i, o, s) {
                    return this[r].call(this, t, i, o, s);
                },
                configurable: !0
            });
        });
    }
    let Br = class {
        constructor(t){
            t && this.set(t);
        }
        set(t, n, r) {
            const i = this;
            function o(l, u, f) {
                const p = Yu(u);
                if (!p) throw new Error("header name must be a non-empty string");
                const m = ye.findKey(i, p);
                (!m || i[m] === void 0 || f === !0 || f === void 0 && i[m] !== !1) && (i[m || u] = tm(l));
            }
            const s = (l, u)=>ye.forEach(l, (f, p)=>o(f, p, u));
            if (ye.isPlainObject(t) || t instanceof this.constructor) s(t, n);
            else if (ye.isString(t) && (t = t.trim()) && !G3(t)) s(H3(t), n);
            else if (ye.isHeaders(t)) for (const [l, u] of t.entries())o(u, l, r);
            else t != null && o(n, t, r);
            return this;
        }
        get(t, n) {
            if (t = Yu(t), t) {
                const r = ye.findKey(this, t);
                if (r) {
                    const i = this[r];
                    if (!n) return i;
                    if (n === !0) return K3(i);
                    if (ye.isFunction(n)) return n.call(this, i, r);
                    if (ye.isRegExp(n)) return n.exec(i);
                    throw new TypeError("parser must be boolean|regexp|function");
                }
            }
        }
        has(t, n) {
            if (t = Yu(t), t) {
                const r = ye.findKey(this, t);
                return !!(r && this[r] !== void 0 && (!n || Yx(this, this[r], r, n)));
            }
            return !1;
        }
        delete(t, n) {
            const r = this;
            let i = !1;
            function o(s) {
                if (s = Yu(s), s) {
                    const l = ye.findKey(r, s);
                    l && (!n || Yx(r, r[l], l, n)) && (delete r[l], i = !0);
                }
            }
            return ye.isArray(t) ? t.forEach(o) : o(t), i;
        }
        clear(t) {
            const n = Object.keys(this);
            let r = n.length, i = !1;
            for(; r--;){
                const o = n[r];
                (!t || Yx(this, this[o], o, t, !0)) && (delete this[o], i = !0);
            }
            return i;
        }
        normalize(t) {
            const n = this, r = {};
            return ye.forEach(this, (i, o)=>{
                const s = ye.findKey(r, o);
                if (s) {
                    n[s] = tm(i), delete n[o];
                    return;
                }
                const l = t ? Q3(o) : String(o).trim();
                l !== o && delete n[o], n[l] = tm(i), r[l] = !0;
            }), this;
        }
        concat(...t) {
            return this.constructor.concat(this, ...t);
        }
        toJSON(t) {
            const n = Object.create(null);
            return ye.forEach(this, (r, i)=>{
                r != null && r !== !1 && (n[i] = t && ye.isArray(r) ? r.join(", ") : r);
            }), n;
        }
        [Symbol.iterator]() {
            return Object.entries(this.toJSON())[Symbol.iterator]();
        }
        toString() {
            return Object.entries(this.toJSON()).map(([t, n])=>t + ": " + n).join(`
`);
        }
        get [Symbol.toStringTag]() {
            return "AxiosHeaders";
        }
        static from(t) {
            return t instanceof this ? t : new this(t);
        }
        static concat(t, ...n) {
            const r = new this(t);
            return n.forEach((i)=>r.set(i)), r;
        }
        static accessor(t) {
            const r = (this[jE] = this[jE] = {
                accessors: {}
            }).accessors, i = this.prototype;
            function o(s) {
                const l = Yu(s);
                r[l] || (J3(i, s), r[l] = !0);
            }
            return ye.isArray(t) ? t.forEach(o) : o(t), this;
        }
    };
    Br.accessor([
        "Content-Type",
        "Content-Length",
        "Accept",
        "Accept-Encoding",
        "User-Agent",
        "Authorization"
    ]);
    ye.reduceDescriptors(Br.prototype, ({ value: e }, t)=>{
        let n = t[0].toUpperCase() + t.slice(1);
        return {
            get: ()=>e,
            set (r) {
                this[n] = r;
            }
        };
    });
    ye.freezeMethods(Br);
    function Xx(e, t) {
        const n = this || Cf, r = t || n, i = Br.from(r.headers);
        let o = r.data;
        return ye.forEach(e, function(l) {
            o = l.call(n, o, i.normalize(), t ? t.status : void 0);
        }), i.normalize(), o;
    }
    function TT(e) {
        return !!(e && e.__CANCEL__);
    }
    function tu(e, t, n) {
        ct.call(this, e ?? "canceled", ct.ERR_CANCELED, t, n), this.name = "CanceledError";
    }
    ye.inherits(tu, ct, {
        __CANCEL__: !0
    });
    function PT(e, t, n) {
        const r = n.config.validateStatus;
        !n.status || !r || r(n.status) ? e(n) : t(new ct("Request failed with status code " + n.status, [
            ct.ERR_BAD_REQUEST,
            ct.ERR_BAD_RESPONSE
        ][Math.floor(n.status / 100) - 4], n.config, n.request, n));
    }
    function Z3(e) {
        const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
        return t && t[1] || "";
    }
    function Y3(e, t) {
        e = e || 10;
        const n = new Array(e), r = new Array(e);
        let i = 0, o = 0, s;
        return t = t !== void 0 ? t : 1e3, function(u) {
            const f = Date.now(), p = r[o];
            s || (s = f), n[i] = u, r[i] = f;
            let m = o, g = 0;
            for(; m !== i;)g += n[m++], m = m % e;
            if (i = (i + 1) % e, i === o && (o = (o + 1) % e), f - s < t) return;
            const v = p && f - p;
            return v ? Math.round(g * 1e3 / v) : void 0;
        };
    }
    function X3(e, t) {
        let n = 0, r = 1e3 / t, i, o;
        const s = (f, p = Date.now())=>{
            n = p, i = null, o && (clearTimeout(o), o = null), e.apply(null, f);
        };
        return [
            (...f)=>{
                const p = Date.now(), m = p - n;
                m >= r ? s(f, p) : (i = f, o || (o = setTimeout(()=>{
                    o = null, s(i);
                }, r - m)));
            },
            ()=>i && s(i)
        ];
    }
    const Um = (e, t, n = 3)=>{
        let r = 0;
        const i = Y3(50, 250);
        return X3((o)=>{
            const s = o.loaded, l = o.lengthComputable ? o.total : void 0, u = s - r, f = i(u), p = s <= l;
            r = s;
            const m = {
                loaded: s,
                total: l,
                progress: l ? s / l : void 0,
                bytes: u,
                rate: f || void 0,
                estimated: f && l && p ? (l - s) / f : void 0,
                event: o,
                lengthComputable: l != null,
                [t ? "download" : "upload"]: !0
            };
            e(m);
        }, n);
    }, RE = (e, t)=>{
        const n = e != null;
        return [
            (r)=>t[0]({
                    lengthComputable: n,
                    total: e,
                    loaded: r
                }),
            t[1]
        ];
    }, OE = (e)=>(...t)=>ye.asap(()=>e(...t)), e4 = ar.hasStandardBrowserEnv ? ((e, t)=>(n)=>(n = new URL(n, ar.origin), e.protocol === n.protocol && e.host === n.host && (t || e.port === n.port)))(new URL(ar.origin), ar.navigator && /(msie|trident)/i.test(ar.navigator.userAgent)) : ()=>!0, t4 = ar.hasStandardBrowserEnv ? {
        write (e, t, n, r, i, o) {
            const s = [
                e + "=" + encodeURIComponent(t)
            ];
            ye.isNumber(n) && s.push("expires=" + new Date(n).toGMTString()), ye.isString(r) && s.push("path=" + r), ye.isString(i) && s.push("domain=" + i), o === !0 && s.push("secure"), document.cookie = s.join("; ");
        },
        read (e) {
            const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
            return t ? decodeURIComponent(t[3]) : null;
        },
        remove (e) {
            this.write(e, "", Date.now() - 864e5);
        }
    } : {
        write () {},
        read () {
            return null;
        },
        remove () {}
    };
    function n4(e) {
        return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
    }
    function r4(e, t) {
        return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e;
    }
    function AT(e, t) {
        return e && !n4(t) ? r4(e, t) : t;
    }
    const TE = (e)=>e instanceof Br ? {
            ...e
        } : e;
    function sl(e, t) {
        t = t || {};
        const n = {};
        function r(f, p, m, g) {
            return ye.isPlainObject(f) && ye.isPlainObject(p) ? ye.merge.call({
                caseless: g
            }, f, p) : ye.isPlainObject(p) ? ye.merge({}, p) : ye.isArray(p) ? p.slice() : p;
        }
        function i(f, p, m, g) {
            if (ye.isUndefined(p)) {
                if (!ye.isUndefined(f)) return r(void 0, f, m, g);
            } else return r(f, p, m, g);
        }
        function o(f, p) {
            if (!ye.isUndefined(p)) return r(void 0, p);
        }
        function s(f, p) {
            if (ye.isUndefined(p)) {
                if (!ye.isUndefined(f)) return r(void 0, f);
            } else return r(void 0, p);
        }
        function l(f, p, m) {
            if (m in t) return r(f, p);
            if (m in e) return r(void 0, f);
        }
        const u = {
            url: o,
            method: o,
            data: o,
            baseURL: s,
            transformRequest: s,
            transformResponse: s,
            paramsSerializer: s,
            timeout: s,
            timeoutMessage: s,
            withCredentials: s,
            withXSRFToken: s,
            adapter: s,
            responseType: s,
            xsrfCookieName: s,
            xsrfHeaderName: s,
            onUploadProgress: s,
            onDownloadProgress: s,
            decompress: s,
            maxContentLength: s,
            maxBodyLength: s,
            beforeRedirect: s,
            transport: s,
            httpAgent: s,
            httpsAgent: s,
            cancelToken: s,
            socketPath: s,
            responseEncoding: s,
            validateStatus: l,
            headers: (f, p, m)=>i(TE(f), TE(p), m, !0)
        };
        return ye.forEach(Object.keys(Object.assign({}, e, t)), function(p) {
            const m = u[p] || i, g = m(e[p], t[p], p);
            ye.isUndefined(g) && m !== l || (n[p] = g);
        }), n;
    }
    const FT = (e)=>{
        const t = sl({}, e);
        let { data: n, withXSRFToken: r, xsrfHeaderName: i, xsrfCookieName: o, headers: s, auth: l } = t;
        t.headers = s = Br.from(s), t.url = jT(AT(t.baseURL, t.url), e.params, e.paramsSerializer), l && s.set("Authorization", "Basic " + btoa((l.username || "") + ":" + (l.password ? unescape(encodeURIComponent(l.password)) : "")));
        let u;
        if (ye.isFormData(n)) {
            if (ar.hasStandardBrowserEnv || ar.hasStandardBrowserWebWorkerEnv) s.setContentType(void 0);
            else if ((u = s.getContentType()) !== !1) {
                const [f, ...p] = u ? u.split(";").map((m)=>m.trim()).filter(Boolean) : [];
                s.setContentType([
                    f || "multipart/form-data",
                    ...p
                ].join("; "));
            }
        }
        if (ar.hasStandardBrowserEnv && (r && ye.isFunction(r) && (r = r(t)), r || r !== !1 && e4(t.url))) {
            const f = i && o && t4.read(o);
            f && s.set(i, f);
        }
        return t;
    }, i4 = typeof XMLHttpRequest < "u", o4 = i4 && function(e) {
        return new Promise(function(n, r) {
            const i = FT(e);
            let o = i.data;
            const s = Br.from(i.headers).normalize();
            let { responseType: l, onUploadProgress: u, onDownloadProgress: f } = i, p, m, g, v, x;
            function b() {
                v && v(), x && x(), i.cancelToken && i.cancelToken.unsubscribe(p), i.signal && i.signal.removeEventListener("abort", p);
            }
            let S = new XMLHttpRequest;
            S.open(i.method.toUpperCase(), i.url, !0), S.timeout = i.timeout;
            function N() {
                if (!S) return;
                const I = Br.from("getAllResponseHeaders" in S && S.getAllResponseHeaders()), A = {
                    data: !l || l === "text" || l === "json" ? S.responseText : S.response,
                    status: S.status,
                    statusText: S.statusText,
                    headers: I,
                    config: e,
                    request: S
                };
                PT(function(D) {
                    n(D), b();
                }, function(D) {
                    r(D), b();
                }, A), S = null;
            }
            "onloadend" in S ? S.onloadend = N : S.onreadystatechange = function() {
                !S || S.readyState !== 4 || S.status === 0 && !(S.responseURL && S.responseURL.indexOf("file:") === 0) || setTimeout(N);
            }, S.onabort = function() {
                S && (r(new ct("Request aborted", ct.ECONNABORTED, e, S)), S = null);
            }, S.onerror = function() {
                r(new ct("Network Error", ct.ERR_NETWORK, e, S)), S = null;
            }, S.ontimeout = function() {
                let C = i.timeout ? "timeout of " + i.timeout + "ms exceeded" : "timeout exceeded";
                const A = i.transitional || RT;
                i.timeoutErrorMessage && (C = i.timeoutErrorMessage), r(new ct(C, A.clarifyTimeoutError ? ct.ETIMEDOUT : ct.ECONNABORTED, e, S)), S = null;
            }, o === void 0 && s.setContentType(null), "setRequestHeader" in S && ye.forEach(s.toJSON(), function(C, A) {
                S.setRequestHeader(A, C);
            }), ye.isUndefined(i.withCredentials) || (S.withCredentials = !!i.withCredentials), l && l !== "json" && (S.responseType = i.responseType), f && ([g, x] = Um(f, !0), S.addEventListener("progress", g)), u && S.upload && ([m, v] = Um(u), S.upload.addEventListener("progress", m), S.upload.addEventListener("loadend", v)), (i.cancelToken || i.signal) && (p = (I)=>{
                S && (r(!I || I.type ? new tu(null, e, S) : I), S.abort(), S = null);
            }, i.cancelToken && i.cancelToken.subscribe(p), i.signal && (i.signal.aborted ? p() : i.signal.addEventListener("abort", p)));
            const _ = Z3(i.url);
            if (_ && ar.protocols.indexOf(_) === -1) {
                r(new ct("Unsupported protocol " + _ + ":", ct.ERR_BAD_REQUEST, e));
                return;
            }
            S.send(o || null);
        });
    }, s4 = (e, t)=>{
        const { length: n } = e = e ? e.filter(Boolean) : [];
        if (t || n) {
            let r = new AbortController, i;
            const o = function(f) {
                if (!i) {
                    i = !0, l();
                    const p = f instanceof Error ? f : this.reason;
                    r.abort(p instanceof ct ? p : new tu(p instanceof Error ? p.message : p));
                }
            };
            let s = t && setTimeout(()=>{
                s = null, o(new ct(`timeout ${t} of ms exceeded`, ct.ETIMEDOUT));
            }, t);
            const l = ()=>{
                e && (s && clearTimeout(s), s = null, e.forEach((f)=>{
                    f.unsubscribe ? f.unsubscribe(o) : f.removeEventListener("abort", o);
                }), e = null);
            };
            e.forEach((f)=>f.addEventListener("abort", o));
            const { signal: u } = r;
            return u.unsubscribe = ()=>ye.asap(l), u;
        }
    }, a4 = function*(e, t) {
        let n = e.byteLength;
        if (n < t) {
            yield e;
            return;
        }
        let r = 0, i;
        for(; r < n;)i = r + t, yield e.slice(r, i), r = i;
    }, l4 = async function*(e, t) {
        for await (const n of c4(e))yield* a4(n, t);
    }, c4 = async function*(e) {
        if (e[Symbol.asyncIterator]) {
            yield* e;
            return;
        }
        const t = e.getReader();
        try {
            for(;;){
                const { done: n, value: r } = await t.read();
                if (n) break;
                yield r;
            }
        } finally{
            await t.cancel();
        }
    }, PE = (e, t, n, r)=>{
        const i = l4(e, t);
        let o = 0, s, l = (u)=>{
            s || (s = !0, r && r(u));
        };
        return new ReadableStream({
            async pull (u) {
                try {
                    const { done: f, value: p } = await i.next();
                    if (f) {
                        l(), u.close();
                        return;
                    }
                    let m = p.byteLength;
                    if (n) {
                        let g = o += m;
                        n(g);
                    }
                    u.enqueue(new Uint8Array(p));
                } catch (f) {
                    throw l(f), f;
                }
            },
            cancel (u) {
                return l(u), i.return();
            }
        }, {
            highWaterMark: 2
        });
    }, ty = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", DT = ty && typeof ReadableStream == "function", u4 = ty && (typeof TextEncoder == "function" ? ((e)=>(t)=>e.encode(t))(new TextEncoder) : async (e)=>new Uint8Array(await new Response(e).arrayBuffer())), MT = (e, ...t)=>{
        try {
            return !!e(...t);
        } catch  {
            return !1;
        }
    }, d4 = DT && MT(()=>{
        let e = !1;
        const t = new Request(ar.origin, {
            body: new ReadableStream,
            method: "POST",
            get duplex () {
                return e = !0, "half";
            }
        }).headers.has("Content-Type");
        return e && !t;
    }), AE = 64 * 1024, B0 = DT && MT(()=>ye.isReadableStream(new Response("").body)), Hm = {
        stream: B0 && ((e)=>e.body)
    };
    ty && ((e)=>{
        [
            "text",
            "arrayBuffer",
            "blob",
            "formData",
            "stream"
        ].forEach((t)=>{
            !Hm[t] && (Hm[t] = ye.isFunction(e[t]) ? (n)=>n[t]() : (n, r)=>{
                throw new ct(`Response type '${t}' is not supported`, ct.ERR_NOT_SUPPORT, r);
            });
        });
    })(new Response);
    const f4 = async (e)=>{
        if (e == null) return 0;
        if (ye.isBlob(e)) return e.size;
        if (ye.isSpecCompliantForm(e)) return (await new Request(ar.origin, {
            method: "POST",
            body: e
        }).arrayBuffer()).byteLength;
        if (ye.isArrayBufferView(e) || ye.isArrayBuffer(e)) return e.byteLength;
        if (ye.isURLSearchParams(e) && (e = e + ""), ye.isString(e)) return (await u4(e)).byteLength;
    }, p4 = async (e, t)=>{
        const n = ye.toFiniteNumber(e.getContentLength());
        return n ?? f4(t);
    }, h4 = ty && (async (e)=>{
        let { url: t, method: n, data: r, signal: i, cancelToken: o, timeout: s, onDownloadProgress: l, onUploadProgress: u, responseType: f, headers: p, withCredentials: m = "same-origin", fetchOptions: g } = FT(e);
        f = f ? (f + "").toLowerCase() : "text";
        let v = s4([
            i,
            o && o.toAbortSignal()
        ], s), x;
        const b = v && v.unsubscribe && (()=>{
            v.unsubscribe();
        });
        let S;
        try {
            if (u && d4 && n !== "get" && n !== "head" && (S = await p4(p, r)) !== 0) {
                let A = new Request(t, {
                    method: "POST",
                    body: r,
                    duplex: "half"
                }), R;
                if (ye.isFormData(r) && (R = A.headers.get("content-type")) && p.setContentType(R), A.body) {
                    const [D, O] = RE(S, Um(OE(u)));
                    r = PE(A.body, AE, D, O);
                }
            }
            ye.isString(m) || (m = m ? "include" : "omit");
            const N = "credentials" in Request.prototype;
            x = new Request(t, {
                ...g,
                signal: v,
                method: n.toUpperCase(),
                headers: p.normalize().toJSON(),
                body: r,
                duplex: "half",
                credentials: N ? m : void 0
            });
            let _ = await fetch(x);
            const I = B0 && (f === "stream" || f === "response");
            if (B0 && (l || I && b)) {
                const A = {};
                [
                    "status",
                    "statusText",
                    "headers"
                ].forEach((E)=>{
                    A[E] = _[E];
                });
                const R = ye.toFiniteNumber(_.headers.get("content-length")), [D, O] = l && RE(R, Um(OE(l), !0)) || [];
                _ = new Response(PE(_.body, AE, D, ()=>{
                    O && O(), b && b();
                }), A);
            }
            f = f || "text";
            let C = await Hm[ye.findKey(Hm, f) || "text"](_, e);
            return !I && b && b(), await new Promise((A, R)=>{
                PT(A, R, {
                    data: C,
                    headers: Br.from(_.headers),
                    status: _.status,
                    statusText: _.statusText,
                    config: e,
                    request: x
                });
            });
        } catch (N) {
            throw b && b(), N && N.name === "TypeError" && /fetch/i.test(N.message) ? Object.assign(new ct("Network Error", ct.ERR_NETWORK, e, x), {
                cause: N.cause || N
            }) : ct.from(N, N && N.code, e, x);
        }
    }), z0 = {
        http: j3,
        xhr: o4,
        fetch: h4
    };
    ye.forEach(z0, (e, t)=>{
        if (e) {
            try {
                Object.defineProperty(e, "name", {
                    value: t
                });
            } catch  {}
            Object.defineProperty(e, "adapterName", {
                value: t
            });
        }
    });
    const FE = (e)=>`- ${e}`, m4 = (e)=>ye.isFunction(e) || e === null || e === !1, LT = {
        getAdapter: (e)=>{
            e = ye.isArray(e) ? e : [
                e
            ];
            const { length: t } = e;
            let n, r;
            const i = {};
            for(let o = 0; o < t; o++){
                n = e[o];
                let s;
                if (r = n, !m4(n) && (r = z0[(s = String(n)).toLowerCase()], r === void 0)) throw new ct(`Unknown adapter '${s}'`);
                if (r) break;
                i[s || "#" + o] = r;
            }
            if (!r) {
                const o = Object.entries(i).map(([l, u])=>`adapter ${l} ` + (u === !1 ? "is not supported by the environment" : "is not available in the build"));
                let s = t ? o.length > 1 ? `since :
` + o.map(FE).join(`
`) : " " + FE(o[0]) : "as no adapter specified";
                throw new ct("There is no suitable adapter to dispatch the request " + s, "ERR_NOT_SUPPORT");
            }
            return r;
        },
        adapters: z0
    };
    function eb(e) {
        if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted) throw new tu(null, e);
    }
    function DE(e) {
        return eb(e), e.headers = Br.from(e.headers), e.data = Xx.call(e, e.transformRequest), [
            "post",
            "put",
            "patch"
        ].indexOf(e.method) !== -1 && e.headers.setContentType("application/x-www-form-urlencoded", !1), LT.getAdapter(e.adapter || Cf.adapter)(e).then(function(r) {
            return eb(e), r.data = Xx.call(e, e.transformResponse, r), r.headers = Br.from(r.headers), r;
        }, function(r) {
            return TT(r) || (eb(e), r && r.response && (r.response.data = Xx.call(e, e.transformResponse, r.response), r.response.headers = Br.from(r.response.headers))), Promise.reject(r);
        });
    }
    const $T = "1.7.9", ny = {};
    [
        "object",
        "boolean",
        "number",
        "function",
        "string",
        "symbol"
    ].forEach((e, t)=>{
        ny[e] = function(r) {
            return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
        };
    });
    const ME = {};
    ny.transitional = function(t, n, r) {
        function i(o, s) {
            return "[Axios v" + $T + "] Transitional option '" + o + "'" + s + (r ? ". " + r : "");
        }
        return (o, s, l)=>{
            if (t === !1) throw new ct(i(s, " has been removed" + (n ? " in " + n : "")), ct.ERR_DEPRECATED);
            return n && !ME[s] && (ME[s] = !0, console.warn(i(s, " has been deprecated since v" + n + " and will be removed in the near future"))), t ? t(o, s, l) : !0;
        };
    };
    ny.spelling = function(t) {
        return (n, r)=>(console.warn(`${r} is likely a misspelling of ${t}`), !0);
    };
    function g4(e, t, n) {
        if (typeof e != "object") throw new ct("options must be an object", ct.ERR_BAD_OPTION_VALUE);
        const r = Object.keys(e);
        let i = r.length;
        for(; i-- > 0;){
            const o = r[i], s = t[o];
            if (s) {
                const l = e[o], u = l === void 0 || s(l, o, e);
                if (u !== !0) throw new ct("option " + o + " must be " + u, ct.ERR_BAD_OPTION_VALUE);
                continue;
            }
            if (n !== !0) throw new ct("Unknown option " + o, ct.ERR_BAD_OPTION);
        }
    }
    const nm = {
        assertOptions: g4,
        validators: ny
    }, co = nm.validators;
    let Xa = class {
        constructor(t){
            this.defaults = t, this.interceptors = {
                request: new CE,
                response: new CE
            };
        }
        async request(t, n) {
            try {
                return await this._request(t, n);
            } catch (r) {
                if (r instanceof Error) {
                    let i = {};
                    Error.captureStackTrace ? Error.captureStackTrace(i) : i = new Error;
                    const o = i.stack ? i.stack.replace(/^.+\n/, "") : "";
                    try {
                        r.stack ? o && !String(r.stack).endsWith(o.replace(/^.+\n.+\n/, "")) && (r.stack += `
` + o) : r.stack = o;
                    } catch  {}
                }
                throw r;
            }
        }
        _request(t, n) {
            typeof t == "string" ? (n = n || {}, n.url = t) : n = t || {}, n = sl(this.defaults, n);
            const { transitional: r, paramsSerializer: i, headers: o } = n;
            r !== void 0 && nm.assertOptions(r, {
                silentJSONParsing: co.transitional(co.boolean),
                forcedJSONParsing: co.transitional(co.boolean),
                clarifyTimeoutError: co.transitional(co.boolean)
            }, !1), i != null && (ye.isFunction(i) ? n.paramsSerializer = {
                serialize: i
            } : nm.assertOptions(i, {
                encode: co.function,
                serialize: co.function
            }, !0)), nm.assertOptions(n, {
                baseUrl: co.spelling("baseURL"),
                withXsrfToken: co.spelling("withXSRFToken")
            }, !0), n.method = (n.method || this.defaults.method || "get").toLowerCase();
            let s = o && ye.merge(o.common, o[n.method]);
            o && ye.forEach([
                "delete",
                "get",
                "head",
                "post",
                "put",
                "patch",
                "common"
            ], (x)=>{
                delete o[x];
            }), n.headers = Br.concat(s, o);
            const l = [];
            let u = !0;
            this.interceptors.request.forEach(function(b) {
                typeof b.runWhen == "function" && b.runWhen(n) === !1 || (u = u && b.synchronous, l.unshift(b.fulfilled, b.rejected));
            });
            const f = [];
            this.interceptors.response.forEach(function(b) {
                f.push(b.fulfilled, b.rejected);
            });
            let p, m = 0, g;
            if (!u) {
                const x = [
                    DE.bind(this),
                    void 0
                ];
                for(x.unshift.apply(x, l), x.push.apply(x, f), g = x.length, p = Promise.resolve(n); m < g;)p = p.then(x[m++], x[m++]);
                return p;
            }
            g = l.length;
            let v = n;
            for(m = 0; m < g;){
                const x = l[m++], b = l[m++];
                try {
                    v = x(v);
                } catch (S) {
                    b.call(this, S);
                    break;
                }
            }
            try {
                p = DE.call(this, v);
            } catch (x) {
                return Promise.reject(x);
            }
            for(m = 0, g = f.length; m < g;)p = p.then(f[m++], f[m++]);
            return p;
        }
        getUri(t) {
            t = sl(this.defaults, t);
            const n = AT(t.baseURL, t.url);
            return jT(n, t.params, t.paramsSerializer);
        }
    };
    ye.forEach([
        "delete",
        "get",
        "head",
        "options"
    ], function(t) {
        Xa.prototype[t] = function(n, r) {
            return this.request(sl(r || {}, {
                method: t,
                url: n,
                data: (r || {}).data
            }));
        };
    });
    ye.forEach([
        "post",
        "put",
        "patch"
    ], function(t) {
        function n(r) {
            return function(o, s, l) {
                return this.request(sl(l || {}, {
                    method: t,
                    headers: r ? {
                        "Content-Type": "multipart/form-data"
                    } : {},
                    url: o,
                    data: s
                }));
            };
        }
        Xa.prototype[t] = n(), Xa.prototype[t + "Form"] = n(!0);
    });
    let y4 = class qT {
        constructor(t){
            if (typeof t != "function") throw new TypeError("executor must be a function.");
            let n;
            this.promise = new Promise(function(o) {
                n = o;
            });
            const r = this;
            this.promise.then((i)=>{
                if (!r._listeners) return;
                let o = r._listeners.length;
                for(; o-- > 0;)r._listeners[o](i);
                r._listeners = null;
            }), this.promise.then = (i)=>{
                let o;
                const s = new Promise((l)=>{
                    r.subscribe(l), o = l;
                }).then(i);
                return s.cancel = function() {
                    r.unsubscribe(o);
                }, s;
            }, t(function(o, s, l) {
                r.reason || (r.reason = new tu(o, s, l), n(r.reason));
            });
        }
        throwIfRequested() {
            if (this.reason) throw this.reason;
        }
        subscribe(t) {
            if (this.reason) {
                t(this.reason);
                return;
            }
            this._listeners ? this._listeners.push(t) : this._listeners = [
                t
            ];
        }
        unsubscribe(t) {
            if (!this._listeners) return;
            const n = this._listeners.indexOf(t);
            n !== -1 && this._listeners.splice(n, 1);
        }
        toAbortSignal() {
            const t = new AbortController, n = (r)=>{
                t.abort(r);
            };
            return this.subscribe(n), t.signal.unsubscribe = ()=>this.unsubscribe(n), t.signal;
        }
        static source() {
            let t;
            return {
                token: new qT(function(i) {
                    t = i;
                }),
                cancel: t
            };
        }
    };
    function v4(e) {
        return function(n) {
            return e.apply(null, n);
        };
    }
    function x4(e) {
        return ye.isObject(e) && e.isAxiosError === !0;
    }
    const W0 = {
        Continue: 100,
        SwitchingProtocols: 101,
        Processing: 102,
        EarlyHints: 103,
        Ok: 200,
        Created: 201,
        Accepted: 202,
        NonAuthoritativeInformation: 203,
        NoContent: 204,
        ResetContent: 205,
        PartialContent: 206,
        MultiStatus: 207,
        AlreadyReported: 208,
        ImUsed: 226,
        MultipleChoices: 300,
        MovedPermanently: 301,
        Found: 302,
        SeeOther: 303,
        NotModified: 304,
        UseProxy: 305,
        Unused: 306,
        TemporaryRedirect: 307,
        PermanentRedirect: 308,
        BadRequest: 400,
        Unauthorized: 401,
        PaymentRequired: 402,
        Forbidden: 403,
        NotFound: 404,
        MethodNotAllowed: 405,
        NotAcceptable: 406,
        ProxyAuthenticationRequired: 407,
        RequestTimeout: 408,
        Conflict: 409,
        Gone: 410,
        LengthRequired: 411,
        PreconditionFailed: 412,
        PayloadTooLarge: 413,
        UriTooLong: 414,
        UnsupportedMediaType: 415,
        RangeNotSatisfiable: 416,
        ExpectationFailed: 417,
        ImATeapot: 418,
        MisdirectedRequest: 421,
        UnprocessableEntity: 422,
        Locked: 423,
        FailedDependency: 424,
        TooEarly: 425,
        UpgradeRequired: 426,
        PreconditionRequired: 428,
        TooManyRequests: 429,
        RequestHeaderFieldsTooLarge: 431,
        UnavailableForLegalReasons: 451,
        InternalServerError: 500,
        NotImplemented: 501,
        BadGateway: 502,
        ServiceUnavailable: 503,
        GatewayTimeout: 504,
        HttpVersionNotSupported: 505,
        VariantAlsoNegotiates: 506,
        InsufficientStorage: 507,
        LoopDetected: 508,
        NotExtended: 510,
        NetworkAuthenticationRequired: 511
    };
    Object.entries(W0).forEach(([e, t])=>{
        W0[t] = e;
    });
    function BT(e) {
        const t = new Xa(e), n = yT(Xa.prototype.request, t);
        return ye.extend(n, Xa.prototype, t, {
            allOwnKeys: !0
        }), ye.extend(n, t, null, {
            allOwnKeys: !0
        }), n.create = function(i) {
            return BT(sl(e, i));
        }, n;
    }
    const Sn = BT(Cf);
    Sn.Axios = Xa;
    Sn.CanceledError = tu;
    Sn.CancelToken = y4;
    Sn.isCancel = TT;
    Sn.VERSION = $T;
    Sn.toFormData = ey;
    Sn.AxiosError = ct;
    Sn.Cancel = Sn.CanceledError;
    Sn.all = function(t) {
        return Promise.all(t);
    };
    Sn.spread = v4;
    Sn.isAxiosError = x4;
    Sn.mergeConfig = sl;
    Sn.AxiosHeaders = Br;
    Sn.formToJSON = (e)=>OT(ye.isHTMLForm(e) ? new FormData(e) : e);
    Sn.getAdapter = LT.getAdapter;
    Sn.HttpStatusCode = W0;
    Sn.default = Sn;
    const { Axios: Eie, AxiosError: b4, CanceledError: kie, isCancel: Cie, CancelToken: jie, VERSION: Rie, all: Oie, Cancel: Tie, isAxiosError: Pie, spread: Aie, toFormData: Fie, AxiosHeaders: Die, HttpStatusCode: Mie, formToJSON: Lie, getAdapter: $ie, mergeConfig: qie } = Sn, tS = ({ error: e, schema: t, onError: n })=>{
        if (e instanceof b4) {
            const i = t.safeParse(e.response?.data);
            return i.success && n({
                error: e,
                data: i.data
            }), i.success;
        }
        return !1;
    };
    var tb, LE;
    function w4() {
        if (LE) return tb;
        LE = 1;
        function e(r) {
            this.queue = [], this.timeslotRequests = 0, this.interceptors = {
                request: null,
                response: null
            }, this.handleRequest = this.handleRequest.bind(this), this.handleResponse = this.handleResponse.bind(this), this.enable(r);
        }
        e.prototype.getMaxRPS = function() {
            var r = this.perMilliseconds / 1e3;
            return this.maxRequests / r;
        }, e.prototype.getQueue = function() {
            return this.queue;
        }, e.prototype.setMaxRPS = function(r) {
            this.setRateLimitOptions({
                maxRequests: r,
                perMilliseconds: 1e3
            });
        }, e.prototype.setRateLimitOptions = function(r) {
            r.maxRPS ? this.setMaxRPS(r.maxRPS) : (this.perMilliseconds = r.perMilliseconds, this.maxRequests = r.maxRequests);
        }, e.prototype.enable = function(r) {
            function i(o) {
                return Promise.reject(o);
            }
            this.interceptors.request = r.interceptors.request.use(this.handleRequest, i), this.interceptors.response = r.interceptors.response.use(this.handleResponse, i);
        };
        function t(r) {
            r.cancelToken && r.cancelToken.throwIfRequested();
        }
        e.prototype.handleRequest = function(r) {
            return new Promise(function(i, o) {
                this.push({
                    resolve: function() {
                        try {
                            t(r);
                        } catch (s) {
                            return o(s), !1;
                        }
                        return i(r), !0;
                    }
                });
            }.bind(this));
        }, e.prototype.handleResponse = function(r) {
            return this.shift(), r;
        }, e.prototype.push = function(r) {
            this.queue.push(r), this.shiftInitial();
        }, e.prototype.shiftInitial = function() {
            setTimeout(function() {
                return this.shift();
            }.bind(this), 0);
        }, e.prototype.shift = function() {
            if (this.queue.length) {
                if (this.timeslotRequests === this.maxRequests) {
                    this.timeoutId && typeof this.timeoutId.ref == "function" && this.timeoutId.ref();
                    return;
                }
                var r = this.queue.shift(), i = r.resolve();
                if (this.timeslotRequests === 0 && (this.timeoutId = setTimeout(function() {
                    this.timeslotRequests = 0, this.shift();
                }.bind(this), this.perMilliseconds), typeof this.timeoutId.unref == "function" && this.queue.length === 0 && this.timeoutId.unref()), !i) {
                    this.shift();
                    return;
                }
                this.timeslotRequests += 1;
            }
        };
        function n(r, i) {
            var o = new e(r);
            return o.setRateLimitOptions(i), r.getQueue = e.prototype.getQueue.bind(o), r.getMaxRPS = e.prototype.getMaxRPS.bind(o), r.setMaxRPS = e.prototype.setMaxRPS.bind(o), r.setRateLimitOptions = e.prototype.setRateLimitOptions.bind(o), r;
        }
        return tb = n, tb;
    }
    var N4 = w4();
    const S4 = fi(N4), I4 = ({ instance: e, limit: t } = {})=>S4(e || Sn, t || {
            maxRequests: 5,
            perMilliseconds: 100
        }), nS = "-", _4 = (e)=>{
        const t = k4(e), { conflictingClassGroups: n, conflictingClassGroupModifiers: r } = e;
        return {
            getClassGroupId: (s)=>{
                const l = s.split(nS);
                return l[0] === "" && l.length !== 1 && l.shift(), zT(l, t) || E4(s);
            },
            getConflictingClassGroupIds: (s, l)=>{
                const u = n[s] || [];
                return l && r[s] ? [
                    ...u,
                    ...r[s]
                ] : u;
            }
        };
    }, zT = (e, t)=>{
        if (e.length === 0) return t.classGroupId;
        const n = e[0], r = t.nextPart.get(n), i = r ? zT(e.slice(1), r) : void 0;
        if (i) return i;
        if (t.validators.length === 0) return;
        const o = e.join(nS);
        return t.validators.find(({ validator: s })=>s(o))?.classGroupId;
    }, $E = /^\[(.+)\]$/, E4 = (e)=>{
        if ($E.test(e)) {
            const t = $E.exec(e)[1], n = t?.substring(0, t.indexOf(":"));
            if (n) return "arbitrary.." + n;
        }
    }, k4 = (e)=>{
        const { theme: t, classGroups: n } = e, r = {
            nextPart: new Map,
            validators: []
        };
        for(const i in n)V0(n[i], r, i, t);
        return r;
    }, V0 = (e, t, n, r)=>{
        e.forEach((i)=>{
            if (typeof i == "string") {
                const o = i === "" ? t : qE(t, i);
                o.classGroupId = n;
                return;
            }
            if (typeof i == "function") {
                if (C4(i)) {
                    V0(i(r), t, n, r);
                    return;
                }
                t.validators.push({
                    validator: i,
                    classGroupId: n
                });
                return;
            }
            Object.entries(i).forEach(([o, s])=>{
                V0(s, qE(t, o), n, r);
            });
        });
    }, qE = (e, t)=>{
        let n = e;
        return t.split(nS).forEach((r)=>{
            n.nextPart.has(r) || n.nextPart.set(r, {
                nextPart: new Map,
                validators: []
            }), n = n.nextPart.get(r);
        }), n;
    }, C4 = (e)=>e.isThemeGetter, j4 = (e)=>{
        if (e < 1) return {
            get: ()=>{},
            set: ()=>{}
        };
        let t = 0, n = new Map, r = new Map;
        const i = (o, s)=>{
            n.set(o, s), t++, t > e && (t = 0, r = n, n = new Map);
        };
        return {
            get (o) {
                let s = n.get(o);
                if (s !== void 0) return s;
                if ((s = r.get(o)) !== void 0) return i(o, s), s;
            },
            set (o, s) {
                n.has(o) ? n.set(o, s) : i(o, s);
            }
        };
    }, U0 = "!", H0 = ":", R4 = H0.length, O4 = (e)=>{
        const { prefix: t, experimentalParseClassName: n } = e;
        let r = (i)=>{
            const o = [];
            let s = 0, l = 0, u = 0, f;
            for(let x = 0; x < i.length; x++){
                let b = i[x];
                if (s === 0 && l === 0) {
                    if (b === H0) {
                        o.push(i.slice(u, x)), u = x + R4;
                        continue;
                    }
                    if (b === "/") {
                        f = x;
                        continue;
                    }
                }
                b === "[" ? s++ : b === "]" ? s-- : b === "(" ? l++ : b === ")" && l--;
            }
            const p = o.length === 0 ? i : i.substring(u), m = T4(p), g = m !== p, v = f && f > u ? f - u : void 0;
            return {
                modifiers: o,
                hasImportantModifier: g,
                baseClassName: m,
                maybePostfixModifierPosition: v
            };
        };
        if (t) {
            const i = t + H0, o = r;
            r = (s)=>s.startsWith(i) ? o(s.substring(i.length)) : {
                    isExternal: !0,
                    modifiers: [],
                    hasImportantModifier: !1,
                    baseClassName: s,
                    maybePostfixModifierPosition: void 0
                };
        }
        if (n) {
            const i = r;
            r = (o)=>n({
                    className: o,
                    parseClassName: i
                });
        }
        return r;
    }, T4 = (e)=>e.endsWith(U0) ? e.substring(0, e.length - 1) : e.startsWith(U0) ? e.substring(1) : e, P4 = (e)=>{
        const t = Object.fromEntries(e.orderSensitiveModifiers.map((r)=>[
                r,
                !0
            ]));
        return (r)=>{
            if (r.length <= 1) return r;
            const i = [];
            let o = [];
            return r.forEach((s)=>{
                s[0] === "[" || t[s] ? (i.push(...o.sort(), s), o = []) : o.push(s);
            }), i.push(...o.sort()), i;
        };
    }, A4 = (e)=>({
            cache: j4(e.cacheSize),
            parseClassName: O4(e),
            sortModifiers: P4(e),
            ..._4(e)
        }), F4 = /\s+/, D4 = (e, t)=>{
        const { parseClassName: n, getClassGroupId: r, getConflictingClassGroupIds: i, sortModifiers: o } = t, s = [], l = e.trim().split(F4);
        let u = "";
        for(let f = l.length - 1; f >= 0; f -= 1){
            const p = l[f], { isExternal: m, modifiers: g, hasImportantModifier: v, baseClassName: x, maybePostfixModifierPosition: b } = n(p);
            if (m) {
                u = p + (u.length > 0 ? " " + u : u);
                continue;
            }
            let S = !!b, N = r(S ? x.substring(0, b) : x);
            if (!N) {
                if (!S) {
                    u = p + (u.length > 0 ? " " + u : u);
                    continue;
                }
                if (N = r(x), !N) {
                    u = p + (u.length > 0 ? " " + u : u);
                    continue;
                }
                S = !1;
            }
            const _ = o(g).join(":"), I = v ? _ + U0 : _, C = I + N;
            if (s.includes(C)) continue;
            s.push(C);
            const A = i(N, S);
            for(let R = 0; R < A.length; ++R){
                const D = A[R];
                s.push(I + D);
            }
            u = p + (u.length > 0 ? " " + u : u);
        }
        return u;
    };
    function M4() {
        let e = 0, t, n, r = "";
        for(; e < arguments.length;)(t = arguments[e++]) && (n = WT(t)) && (r && (r += " "), r += n);
        return r;
    }
    const WT = (e)=>{
        if (typeof e == "string") return e;
        let t, n = "";
        for(let r = 0; r < e.length; r++)e[r] && (t = WT(e[r])) && (n && (n += " "), n += t);
        return n;
    };
    function L4(e, ...t) {
        let n, r, i, o = s;
        function s(u) {
            const f = t.reduce((p, m)=>m(p), e());
            return n = A4(f), r = n.cache.get, i = n.cache.set, o = l, l(u);
        }
        function l(u) {
            const f = r(u);
            if (f) return f;
            const p = D4(u, n);
            return i(u, p), p;
        }
        return function() {
            return o(M4.apply(null, arguments));
        };
    }
    const Bn = (e)=>{
        const t = (n)=>n[e] || [];
        return t.isThemeGetter = !0, t;
    }, VT = /^\[(?:(\w[\w-]*):)?(.+)\]$/i, UT = /^\((?:(\w[\w-]*):)?(.+)\)$/i, $4 = /^\d+\/\d+$/, q4 = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, B4 = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, z4 = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, W4 = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, V4 = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Jl = (e)=>$4.test(e), vt = (e)=>!!e && !Number.isNaN(Number(e)), Aa = (e)=>!!e && Number.isInteger(Number(e)), BE = (e)=>e.endsWith("%") && vt(e.slice(0, -1)), js = (e)=>q4.test(e), U4 = ()=>!0, H4 = (e)=>B4.test(e) && !z4.test(e), rS = ()=>!1, K4 = (e)=>W4.test(e), G4 = (e)=>V4.test(e), Q4 = (e)=>!Fe(e) && !De(e), J4 = (e)=>nu(e, GT, rS), Fe = (e)=>VT.test(e), Fa = (e)=>nu(e, QT, H4), nb = (e)=>nu(e, az, vt), Z4 = (e)=>nu(e, HT, rS), Y4 = (e)=>nu(e, KT, G4), X4 = (e)=>nu(e, rS, K4), De = (e)=>UT.test(e), Eh = (e)=>ru(e, QT), ez = (e)=>ru(e, lz), tz = (e)=>ru(e, HT), nz = (e)=>ru(e, GT), rz = (e)=>ru(e, KT), iz = (e)=>ru(e, cz, !0), nu = (e, t, n)=>{
        const r = VT.exec(e);
        return r ? r[1] ? t(r[1]) : n(r[2]) : !1;
    }, ru = (e, t, n = !1)=>{
        const r = UT.exec(e);
        return r ? r[1] ? t(r[1]) : n : !1;
    }, HT = (e)=>e === "position", oz = new Set([
        "image",
        "url"
    ]), KT = (e)=>oz.has(e), sz = new Set([
        "length",
        "size",
        "percentage"
    ]), GT = (e)=>sz.has(e), QT = (e)=>e === "length", az = (e)=>e === "number", lz = (e)=>e === "family-name", cz = (e)=>e === "shadow", uz = ()=>{
        const e = Bn("color"), t = Bn("font"), n = Bn("text"), r = Bn("font-weight"), i = Bn("tracking"), o = Bn("leading"), s = Bn("breakpoint"), l = Bn("container"), u = Bn("spacing"), f = Bn("radius"), p = Bn("shadow"), m = Bn("inset-shadow"), g = Bn("drop-shadow"), v = Bn("blur"), x = Bn("perspective"), b = Bn("aspect"), S = Bn("ease"), N = Bn("animate"), _ = ()=>[
                "auto",
                "avoid",
                "all",
                "avoid-page",
                "page",
                "left",
                "right",
                "column"
            ], I = ()=>[
                "bottom",
                "center",
                "left",
                "left-bottom",
                "left-top",
                "right",
                "right-bottom",
                "right-top",
                "top"
            ], C = ()=>[
                "auto",
                "hidden",
                "clip",
                "visible",
                "scroll"
            ], A = ()=>[
                "auto",
                "contain",
                "none"
            ], R = ()=>[
                Jl,
                "px",
                "full",
                "auto",
                De,
                Fe,
                u
            ], D = ()=>[
                Aa,
                "none",
                "subgrid",
                De,
                Fe
            ], O = ()=>[
                "auto",
                {
                    span: [
                        "full",
                        Aa,
                        De,
                        Fe
                    ]
                },
                De,
                Fe
            ], E = ()=>[
                Aa,
                "auto",
                De,
                Fe
            ], F = ()=>[
                "auto",
                "min",
                "max",
                "fr",
                De,
                Fe
            ], j = ()=>[
                De,
                Fe,
                u
            ], M = ()=>[
                "start",
                "end",
                "center",
                "between",
                "around",
                "evenly",
                "stretch",
                "baseline"
            ], L = ()=>[
                "start",
                "end",
                "center",
                "stretch"
            ], P = ()=>[
                De,
                Fe,
                u
            ], V = ()=>[
                "px",
                ...P()
            ], z = ()=>[
                "px",
                "auto",
                ...P()
            ], Q = ()=>[
                Jl,
                "auto",
                "px",
                "full",
                "dvw",
                "dvh",
                "lvw",
                "lvh",
                "svw",
                "svh",
                "min",
                "max",
                "fit",
                De,
                Fe,
                u
            ], K = ()=>[
                e,
                De,
                Fe
            ], H = ()=>[
                BE,
                Fa
            ], G = ()=>[
                "",
                "none",
                "full",
                f,
                De,
                Fe
            ], U = ()=>[
                "",
                vt,
                Eh,
                Fa
            ], Z = ()=>[
                "solid",
                "dashed",
                "dotted",
                "double"
            ], J = ()=>[
                "normal",
                "multiply",
                "screen",
                "overlay",
                "darken",
                "lighten",
                "color-dodge",
                "color-burn",
                "hard-light",
                "soft-light",
                "difference",
                "exclusion",
                "hue",
                "saturation",
                "color",
                "luminosity"
            ], X = ()=>[
                "",
                "none",
                v,
                De,
                Fe
            ], te = ()=>[
                "center",
                "top",
                "top-right",
                "right",
                "bottom-right",
                "bottom",
                "bottom-left",
                "left",
                "top-left",
                De,
                Fe
            ], ie = ()=>[
                "none",
                vt,
                De,
                Fe
            ], ae = ()=>[
                "none",
                vt,
                De,
                Fe
            ], ce = ()=>[
                vt,
                De,
                Fe
            ], de = ()=>[
                Jl,
                "full",
                "px",
                De,
                Fe,
                u
            ];
        return {
            cacheSize: 500,
            theme: {
                animate: [
                    "spin",
                    "ping",
                    "pulse",
                    "bounce"
                ],
                aspect: [
                    "video"
                ],
                blur: [
                    js
                ],
                breakpoint: [
                    js
                ],
                color: [
                    U4
                ],
                container: [
                    js
                ],
                "drop-shadow": [
                    js
                ],
                ease: [
                    "in",
                    "out",
                    "in-out"
                ],
                font: [
                    Q4
                ],
                "font-weight": [
                    "thin",
                    "extralight",
                    "light",
                    "normal",
                    "medium",
                    "semibold",
                    "bold",
                    "extrabold",
                    "black"
                ],
                "inset-shadow": [
                    js
                ],
                leading: [
                    "none",
                    "tight",
                    "snug",
                    "normal",
                    "relaxed",
                    "loose"
                ],
                perspective: [
                    "dramatic",
                    "near",
                    "normal",
                    "midrange",
                    "distant",
                    "none"
                ],
                radius: [
                    js
                ],
                shadow: [
                    js
                ],
                spacing: [
                    vt
                ],
                text: [
                    js
                ],
                tracking: [
                    "tighter",
                    "tight",
                    "normal",
                    "wide",
                    "wider",
                    "widest"
                ]
            },
            classGroups: {
                aspect: [
                    {
                        aspect: [
                            "auto",
                            "square",
                            Jl,
                            Fe,
                            De,
                            b
                        ]
                    }
                ],
                container: [
                    "container"
                ],
                columns: [
                    {
                        columns: [
                            vt,
                            Fe,
                            De,
                            l
                        ]
                    }
                ],
                "break-after": [
                    {
                        "break-after": _()
                    }
                ],
                "break-before": [
                    {
                        "break-before": _()
                    }
                ],
                "break-inside": [
                    {
                        "break-inside": [
                            "auto",
                            "avoid",
                            "avoid-page",
                            "avoid-column"
                        ]
                    }
                ],
                "box-decoration": [
                    {
                        "box-decoration": [
                            "slice",
                            "clone"
                        ]
                    }
                ],
                box: [
                    {
                        box: [
                            "border",
                            "content"
                        ]
                    }
                ],
                display: [
                    "block",
                    "inline-block",
                    "inline",
                    "flex",
                    "inline-flex",
                    "table",
                    "inline-table",
                    "table-caption",
                    "table-cell",
                    "table-column",
                    "table-column-group",
                    "table-footer-group",
                    "table-header-group",
                    "table-row-group",
                    "table-row",
                    "flow-root",
                    "grid",
                    "inline-grid",
                    "contents",
                    "list-item",
                    "hidden"
                ],
                sr: [
                    "sr-only",
                    "not-sr-only"
                ],
                float: [
                    {
                        float: [
                            "right",
                            "left",
                            "none",
                            "start",
                            "end"
                        ]
                    }
                ],
                clear: [
                    {
                        clear: [
                            "left",
                            "right",
                            "both",
                            "none",
                            "start",
                            "end"
                        ]
                    }
                ],
                isolation: [
                    "isolate",
                    "isolation-auto"
                ],
                "object-fit": [
                    {
                        object: [
                            "contain",
                            "cover",
                            "fill",
                            "none",
                            "scale-down"
                        ]
                    }
                ],
                "object-position": [
                    {
                        object: [
                            ...I(),
                            Fe,
                            De
                        ]
                    }
                ],
                overflow: [
                    {
                        overflow: C()
                    }
                ],
                "overflow-x": [
                    {
                        "overflow-x": C()
                    }
                ],
                "overflow-y": [
                    {
                        "overflow-y": C()
                    }
                ],
                overscroll: [
                    {
                        overscroll: A()
                    }
                ],
                "overscroll-x": [
                    {
                        "overscroll-x": A()
                    }
                ],
                "overscroll-y": [
                    {
                        "overscroll-y": A()
                    }
                ],
                position: [
                    "static",
                    "fixed",
                    "absolute",
                    "relative",
                    "sticky"
                ],
                inset: [
                    {
                        inset: R()
                    }
                ],
                "inset-x": [
                    {
                        "inset-x": R()
                    }
                ],
                "inset-y": [
                    {
                        "inset-y": R()
                    }
                ],
                start: [
                    {
                        start: R()
                    }
                ],
                end: [
                    {
                        end: R()
                    }
                ],
                top: [
                    {
                        top: R()
                    }
                ],
                right: [
                    {
                        right: R()
                    }
                ],
                bottom: [
                    {
                        bottom: R()
                    }
                ],
                left: [
                    {
                        left: R()
                    }
                ],
                visibility: [
                    "visible",
                    "invisible",
                    "collapse"
                ],
                z: [
                    {
                        z: [
                            Aa,
                            "auto",
                            De,
                            Fe
                        ]
                    }
                ],
                basis: [
                    {
                        basis: [
                            Jl,
                            "full",
                            "auto",
                            De,
                            Fe,
                            l,
                            u
                        ]
                    }
                ],
                "flex-direction": [
                    {
                        flex: [
                            "row",
                            "row-reverse",
                            "col",
                            "col-reverse"
                        ]
                    }
                ],
                "flex-wrap": [
                    {
                        flex: [
                            "nowrap",
                            "wrap",
                            "wrap-reverse"
                        ]
                    }
                ],
                flex: [
                    {
                        flex: [
                            vt,
                            Jl,
                            "auto",
                            "initial",
                            "none",
                            Fe
                        ]
                    }
                ],
                grow: [
                    {
                        grow: [
                            "",
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                shrink: [
                    {
                        shrink: [
                            "",
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                order: [
                    {
                        order: [
                            Aa,
                            "first",
                            "last",
                            "none",
                            De,
                            Fe
                        ]
                    }
                ],
                "grid-cols": [
                    {
                        "grid-cols": D()
                    }
                ],
                "col-start-end": [
                    {
                        col: O()
                    }
                ],
                "col-start": [
                    {
                        "col-start": E()
                    }
                ],
                "col-end": [
                    {
                        "col-end": E()
                    }
                ],
                "grid-rows": [
                    {
                        "grid-rows": D()
                    }
                ],
                "row-start-end": [
                    {
                        row: O()
                    }
                ],
                "row-start": [
                    {
                        "row-start": E()
                    }
                ],
                "row-end": [
                    {
                        "row-end": E()
                    }
                ],
                "grid-flow": [
                    {
                        "grid-flow": [
                            "row",
                            "col",
                            "dense",
                            "row-dense",
                            "col-dense"
                        ]
                    }
                ],
                "auto-cols": [
                    {
                        "auto-cols": F()
                    }
                ],
                "auto-rows": [
                    {
                        "auto-rows": F()
                    }
                ],
                gap: [
                    {
                        gap: j()
                    }
                ],
                "gap-x": [
                    {
                        "gap-x": j()
                    }
                ],
                "gap-y": [
                    {
                        "gap-y": j()
                    }
                ],
                "justify-content": [
                    {
                        justify: [
                            ...M(),
                            "normal"
                        ]
                    }
                ],
                "justify-items": [
                    {
                        "justify-items": [
                            ...L(),
                            "normal"
                        ]
                    }
                ],
                "justify-self": [
                    {
                        "justify-self": [
                            "auto",
                            ...L()
                        ]
                    }
                ],
                "align-content": [
                    {
                        content: [
                            "normal",
                            ...M()
                        ]
                    }
                ],
                "align-items": [
                    {
                        items: [
                            ...L(),
                            "baseline"
                        ]
                    }
                ],
                "align-self": [
                    {
                        self: [
                            "auto",
                            ...L(),
                            "baseline"
                        ]
                    }
                ],
                "place-content": [
                    {
                        "place-content": M()
                    }
                ],
                "place-items": [
                    {
                        "place-items": [
                            ...L(),
                            "baseline"
                        ]
                    }
                ],
                "place-self": [
                    {
                        "place-self": [
                            "auto",
                            ...L()
                        ]
                    }
                ],
                p: [
                    {
                        p: V()
                    }
                ],
                px: [
                    {
                        px: V()
                    }
                ],
                py: [
                    {
                        py: V()
                    }
                ],
                ps: [
                    {
                        ps: V()
                    }
                ],
                pe: [
                    {
                        pe: V()
                    }
                ],
                pt: [
                    {
                        pt: V()
                    }
                ],
                pr: [
                    {
                        pr: V()
                    }
                ],
                pb: [
                    {
                        pb: V()
                    }
                ],
                pl: [
                    {
                        pl: V()
                    }
                ],
                m: [
                    {
                        m: z()
                    }
                ],
                mx: [
                    {
                        mx: z()
                    }
                ],
                my: [
                    {
                        my: z()
                    }
                ],
                ms: [
                    {
                        ms: z()
                    }
                ],
                me: [
                    {
                        me: z()
                    }
                ],
                mt: [
                    {
                        mt: z()
                    }
                ],
                mr: [
                    {
                        mr: z()
                    }
                ],
                mb: [
                    {
                        mb: z()
                    }
                ],
                ml: [
                    {
                        ml: z()
                    }
                ],
                "space-x": [
                    {
                        "space-x": P()
                    }
                ],
                "space-x-reverse": [
                    "space-x-reverse"
                ],
                "space-y": [
                    {
                        "space-y": P()
                    }
                ],
                "space-y-reverse": [
                    "space-y-reverse"
                ],
                size: [
                    {
                        size: Q()
                    }
                ],
                w: [
                    {
                        w: [
                            l,
                            "screen",
                            ...Q()
                        ]
                    }
                ],
                "min-w": [
                    {
                        "min-w": [
                            l,
                            "screen",
                            "none",
                            ...Q()
                        ]
                    }
                ],
                "max-w": [
                    {
                        "max-w": [
                            l,
                            "screen",
                            "none",
                            "prose",
                            {
                                screen: [
                                    s
                                ]
                            },
                            ...Q()
                        ]
                    }
                ],
                h: [
                    {
                        h: [
                            "screen",
                            ...Q()
                        ]
                    }
                ],
                "min-h": [
                    {
                        "min-h": [
                            "screen",
                            "none",
                            ...Q()
                        ]
                    }
                ],
                "max-h": [
                    {
                        "max-h": [
                            "screen",
                            ...Q()
                        ]
                    }
                ],
                "font-size": [
                    {
                        text: [
                            "base",
                            n,
                            Eh,
                            Fa
                        ]
                    }
                ],
                "font-smoothing": [
                    "antialiased",
                    "subpixel-antialiased"
                ],
                "font-style": [
                    "italic",
                    "not-italic"
                ],
                "font-weight": [
                    {
                        font: [
                            r,
                            De,
                            nb
                        ]
                    }
                ],
                "font-stretch": [
                    {
                        "font-stretch": [
                            "ultra-condensed",
                            "extra-condensed",
                            "condensed",
                            "semi-condensed",
                            "normal",
                            "semi-expanded",
                            "expanded",
                            "extra-expanded",
                            "ultra-expanded",
                            BE,
                            Fe
                        ]
                    }
                ],
                "font-family": [
                    {
                        font: [
                            ez,
                            Fe,
                            t
                        ]
                    }
                ],
                "fvn-normal": [
                    "normal-nums"
                ],
                "fvn-ordinal": [
                    "ordinal"
                ],
                "fvn-slashed-zero": [
                    "slashed-zero"
                ],
                "fvn-figure": [
                    "lining-nums",
                    "oldstyle-nums"
                ],
                "fvn-spacing": [
                    "proportional-nums",
                    "tabular-nums"
                ],
                "fvn-fraction": [
                    "diagonal-fractions",
                    "stacked-fractions"
                ],
                tracking: [
                    {
                        tracking: [
                            i,
                            De,
                            Fe
                        ]
                    }
                ],
                "line-clamp": [
                    {
                        "line-clamp": [
                            vt,
                            "none",
                            De,
                            nb
                        ]
                    }
                ],
                leading: [
                    {
                        leading: [
                            De,
                            Fe,
                            o,
                            u
                        ]
                    }
                ],
                "list-image": [
                    {
                        "list-image": [
                            "none",
                            De,
                            Fe
                        ]
                    }
                ],
                "list-style-position": [
                    {
                        list: [
                            "inside",
                            "outside"
                        ]
                    }
                ],
                "list-style-type": [
                    {
                        list: [
                            "disc",
                            "decimal",
                            "none",
                            De,
                            Fe
                        ]
                    }
                ],
                "text-alignment": [
                    {
                        text: [
                            "left",
                            "center",
                            "right",
                            "justify",
                            "start",
                            "end"
                        ]
                    }
                ],
                "placeholder-color": [
                    {
                        placeholder: K()
                    }
                ],
                "text-color": [
                    {
                        text: K()
                    }
                ],
                "text-decoration": [
                    "underline",
                    "overline",
                    "line-through",
                    "no-underline"
                ],
                "text-decoration-style": [
                    {
                        decoration: [
                            ...Z(),
                            "wavy"
                        ]
                    }
                ],
                "text-decoration-thickness": [
                    {
                        decoration: [
                            vt,
                            "from-font",
                            "auto",
                            De,
                            Fa
                        ]
                    }
                ],
                "text-decoration-color": [
                    {
                        decoration: K()
                    }
                ],
                "underline-offset": [
                    {
                        "underline-offset": [
                            vt,
                            "auto",
                            De,
                            Fe
                        ]
                    }
                ],
                "text-transform": [
                    "uppercase",
                    "lowercase",
                    "capitalize",
                    "normal-case"
                ],
                "text-overflow": [
                    "truncate",
                    "text-ellipsis",
                    "text-clip"
                ],
                "text-wrap": [
                    {
                        text: [
                            "wrap",
                            "nowrap",
                            "balance",
                            "pretty"
                        ]
                    }
                ],
                indent: [
                    {
                        indent: [
                            "px",
                            ...P()
                        ]
                    }
                ],
                "vertical-align": [
                    {
                        align: [
                            "baseline",
                            "top",
                            "middle",
                            "bottom",
                            "text-top",
                            "text-bottom",
                            "sub",
                            "super",
                            De,
                            Fe
                        ]
                    }
                ],
                whitespace: [
                    {
                        whitespace: [
                            "normal",
                            "nowrap",
                            "pre",
                            "pre-line",
                            "pre-wrap",
                            "break-spaces"
                        ]
                    }
                ],
                break: [
                    {
                        break: [
                            "normal",
                            "words",
                            "all",
                            "keep"
                        ]
                    }
                ],
                hyphens: [
                    {
                        hyphens: [
                            "none",
                            "manual",
                            "auto"
                        ]
                    }
                ],
                content: [
                    {
                        content: [
                            "none",
                            De,
                            Fe
                        ]
                    }
                ],
                "bg-attachment": [
                    {
                        bg: [
                            "fixed",
                            "local",
                            "scroll"
                        ]
                    }
                ],
                "bg-clip": [
                    {
                        "bg-clip": [
                            "border",
                            "padding",
                            "content",
                            "text"
                        ]
                    }
                ],
                "bg-origin": [
                    {
                        "bg-origin": [
                            "border",
                            "padding",
                            "content"
                        ]
                    }
                ],
                "bg-position": [
                    {
                        bg: [
                            ...I(),
                            tz,
                            Z4
                        ]
                    }
                ],
                "bg-repeat": [
                    {
                        bg: [
                            "no-repeat",
                            {
                                repeat: [
                                    "",
                                    "x",
                                    "y",
                                    "space",
                                    "round"
                                ]
                            }
                        ]
                    }
                ],
                "bg-size": [
                    {
                        bg: [
                            "auto",
                            "cover",
                            "contain",
                            nz,
                            J4
                        ]
                    }
                ],
                "bg-image": [
                    {
                        bg: [
                            "none",
                            {
                                linear: [
                                    {
                                        to: [
                                            "t",
                                            "tr",
                                            "r",
                                            "br",
                                            "b",
                                            "bl",
                                            "l",
                                            "tl"
                                        ]
                                    },
                                    Aa,
                                    De,
                                    Fe
                                ],
                                radial: [
                                    "",
                                    De,
                                    Fe
                                ],
                                conic: [
                                    Aa,
                                    De,
                                    Fe
                                ]
                            },
                            rz,
                            Y4
                        ]
                    }
                ],
                "bg-color": [
                    {
                        bg: K()
                    }
                ],
                "gradient-from-pos": [
                    {
                        from: H()
                    }
                ],
                "gradient-via-pos": [
                    {
                        via: H()
                    }
                ],
                "gradient-to-pos": [
                    {
                        to: H()
                    }
                ],
                "gradient-from": [
                    {
                        from: K()
                    }
                ],
                "gradient-via": [
                    {
                        via: K()
                    }
                ],
                "gradient-to": [
                    {
                        to: K()
                    }
                ],
                rounded: [
                    {
                        rounded: G()
                    }
                ],
                "rounded-s": [
                    {
                        "rounded-s": G()
                    }
                ],
                "rounded-e": [
                    {
                        "rounded-e": G()
                    }
                ],
                "rounded-t": [
                    {
                        "rounded-t": G()
                    }
                ],
                "rounded-r": [
                    {
                        "rounded-r": G()
                    }
                ],
                "rounded-b": [
                    {
                        "rounded-b": G()
                    }
                ],
                "rounded-l": [
                    {
                        "rounded-l": G()
                    }
                ],
                "rounded-ss": [
                    {
                        "rounded-ss": G()
                    }
                ],
                "rounded-se": [
                    {
                        "rounded-se": G()
                    }
                ],
                "rounded-ee": [
                    {
                        "rounded-ee": G()
                    }
                ],
                "rounded-es": [
                    {
                        "rounded-es": G()
                    }
                ],
                "rounded-tl": [
                    {
                        "rounded-tl": G()
                    }
                ],
                "rounded-tr": [
                    {
                        "rounded-tr": G()
                    }
                ],
                "rounded-br": [
                    {
                        "rounded-br": G()
                    }
                ],
                "rounded-bl": [
                    {
                        "rounded-bl": G()
                    }
                ],
                "border-w": [
                    {
                        border: U()
                    }
                ],
                "border-w-x": [
                    {
                        "border-x": U()
                    }
                ],
                "border-w-y": [
                    {
                        "border-y": U()
                    }
                ],
                "border-w-s": [
                    {
                        "border-s": U()
                    }
                ],
                "border-w-e": [
                    {
                        "border-e": U()
                    }
                ],
                "border-w-t": [
                    {
                        "border-t": U()
                    }
                ],
                "border-w-r": [
                    {
                        "border-r": U()
                    }
                ],
                "border-w-b": [
                    {
                        "border-b": U()
                    }
                ],
                "border-w-l": [
                    {
                        "border-l": U()
                    }
                ],
                "divide-x": [
                    {
                        "divide-x": U()
                    }
                ],
                "divide-x-reverse": [
                    "divide-x-reverse"
                ],
                "divide-y": [
                    {
                        "divide-y": U()
                    }
                ],
                "divide-y-reverse": [
                    "divide-y-reverse"
                ],
                "border-style": [
                    {
                        border: [
                            ...Z(),
                            "hidden",
                            "none"
                        ]
                    }
                ],
                "divide-style": [
                    {
                        divide: [
                            ...Z(),
                            "hidden",
                            "none"
                        ]
                    }
                ],
                "border-color": [
                    {
                        border: K()
                    }
                ],
                "border-color-x": [
                    {
                        "border-x": K()
                    }
                ],
                "border-color-y": [
                    {
                        "border-y": K()
                    }
                ],
                "border-color-s": [
                    {
                        "border-s": K()
                    }
                ],
                "border-color-e": [
                    {
                        "border-e": K()
                    }
                ],
                "border-color-t": [
                    {
                        "border-t": K()
                    }
                ],
                "border-color-r": [
                    {
                        "border-r": K()
                    }
                ],
                "border-color-b": [
                    {
                        "border-b": K()
                    }
                ],
                "border-color-l": [
                    {
                        "border-l": K()
                    }
                ],
                "divide-color": [
                    {
                        divide: K()
                    }
                ],
                "outline-style": [
                    {
                        outline: [
                            ...Z(),
                            "none",
                            "hidden"
                        ]
                    }
                ],
                "outline-offset": [
                    {
                        "outline-offset": [
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "outline-w": [
                    {
                        outline: [
                            "",
                            vt,
                            Eh,
                            Fa
                        ]
                    }
                ],
                "outline-color": [
                    {
                        outline: [
                            e
                        ]
                    }
                ],
                shadow: [
                    {
                        shadow: [
                            "",
                            "none",
                            p,
                            iz,
                            X4
                        ]
                    }
                ],
                "shadow-color": [
                    {
                        shadow: K()
                    }
                ],
                "inset-shadow": [
                    {
                        "inset-shadow": [
                            "none",
                            De,
                            Fe,
                            m
                        ]
                    }
                ],
                "inset-shadow-color": [
                    {
                        "inset-shadow": K()
                    }
                ],
                "ring-w": [
                    {
                        ring: U()
                    }
                ],
                "ring-w-inset": [
                    "ring-inset"
                ],
                "ring-color": [
                    {
                        ring: K()
                    }
                ],
                "ring-offset-w": [
                    {
                        "ring-offset": [
                            vt,
                            Fa
                        ]
                    }
                ],
                "ring-offset-color": [
                    {
                        "ring-offset": K()
                    }
                ],
                "inset-ring-w": [
                    {
                        "inset-ring": U()
                    }
                ],
                "inset-ring-color": [
                    {
                        "inset-ring": K()
                    }
                ],
                opacity: [
                    {
                        opacity: [
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "mix-blend": [
                    {
                        "mix-blend": [
                            ...J(),
                            "plus-darker",
                            "plus-lighter"
                        ]
                    }
                ],
                "bg-blend": [
                    {
                        "bg-blend": J()
                    }
                ],
                filter: [
                    {
                        filter: [
                            "",
                            "none",
                            De,
                            Fe
                        ]
                    }
                ],
                blur: [
                    {
                        blur: X()
                    }
                ],
                brightness: [
                    {
                        brightness: [
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                contrast: [
                    {
                        contrast: [
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "drop-shadow": [
                    {
                        "drop-shadow": [
                            "",
                            "none",
                            g,
                            De,
                            Fe
                        ]
                    }
                ],
                grayscale: [
                    {
                        grayscale: [
                            "",
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "hue-rotate": [
                    {
                        "hue-rotate": [
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                invert: [
                    {
                        invert: [
                            "",
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                saturate: [
                    {
                        saturate: [
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                sepia: [
                    {
                        sepia: [
                            "",
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "backdrop-filter": [
                    {
                        "backdrop-filter": [
                            "",
                            "none",
                            De,
                            Fe
                        ]
                    }
                ],
                "backdrop-blur": [
                    {
                        "backdrop-blur": X()
                    }
                ],
                "backdrop-brightness": [
                    {
                        "backdrop-brightness": [
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "backdrop-contrast": [
                    {
                        "backdrop-contrast": [
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "backdrop-grayscale": [
                    {
                        "backdrop-grayscale": [
                            "",
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "backdrop-hue-rotate": [
                    {
                        "backdrop-hue-rotate": [
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "backdrop-invert": [
                    {
                        "backdrop-invert": [
                            "",
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "backdrop-opacity": [
                    {
                        "backdrop-opacity": [
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "backdrop-saturate": [
                    {
                        "backdrop-saturate": [
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "backdrop-sepia": [
                    {
                        "backdrop-sepia": [
                            "",
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                "border-collapse": [
                    {
                        border: [
                            "collapse",
                            "separate"
                        ]
                    }
                ],
                "border-spacing": [
                    {
                        "border-spacing": P()
                    }
                ],
                "border-spacing-x": [
                    {
                        "border-spacing-x": P()
                    }
                ],
                "border-spacing-y": [
                    {
                        "border-spacing-y": P()
                    }
                ],
                "table-layout": [
                    {
                        table: [
                            "auto",
                            "fixed"
                        ]
                    }
                ],
                caption: [
                    {
                        caption: [
                            "top",
                            "bottom"
                        ]
                    }
                ],
                transition: [
                    {
                        transition: [
                            "",
                            "all",
                            "colors",
                            "opacity",
                            "shadow",
                            "transform",
                            "none",
                            De,
                            Fe
                        ]
                    }
                ],
                "transition-behavior": [
                    {
                        transition: [
                            "normal",
                            "discrete"
                        ]
                    }
                ],
                duration: [
                    {
                        duration: [
                            vt,
                            "initial",
                            De,
                            Fe
                        ]
                    }
                ],
                ease: [
                    {
                        ease: [
                            "linear",
                            "initial",
                            S,
                            De,
                            Fe
                        ]
                    }
                ],
                delay: [
                    {
                        delay: [
                            vt,
                            De,
                            Fe
                        ]
                    }
                ],
                animate: [
                    {
                        animate: [
                            "none",
                            N,
                            De,
                            Fe
                        ]
                    }
                ],
                backface: [
                    {
                        backface: [
                            "hidden",
                            "visible"
                        ]
                    }
                ],
                perspective: [
                    {
                        perspective: [
                            x,
                            De,
                            Fe
                        ]
                    }
                ],
                "perspective-origin": [
                    {
                        "perspective-origin": te()
                    }
                ],
                rotate: [
                    {
                        rotate: ie()
                    }
                ],
                "rotate-x": [
                    {
                        "rotate-x": ie()
                    }
                ],
                "rotate-y": [
                    {
                        "rotate-y": ie()
                    }
                ],
                "rotate-z": [
                    {
                        "rotate-z": ie()
                    }
                ],
                scale: [
                    {
                        scale: ae()
                    }
                ],
                "scale-x": [
                    {
                        "scale-x": ae()
                    }
                ],
                "scale-y": [
                    {
                        "scale-y": ae()
                    }
                ],
                "scale-z": [
                    {
                        "scale-z": ae()
                    }
                ],
                "scale-3d": [
                    "scale-3d"
                ],
                skew: [
                    {
                        skew: ce()
                    }
                ],
                "skew-x": [
                    {
                        "skew-x": ce()
                    }
                ],
                "skew-y": [
                    {
                        "skew-y": ce()
                    }
                ],
                transform: [
                    {
                        transform: [
                            De,
                            Fe,
                            "",
                            "none",
                            "gpu",
                            "cpu"
                        ]
                    }
                ],
                "transform-origin": [
                    {
                        origin: te()
                    }
                ],
                "transform-style": [
                    {
                        transform: [
                            "3d",
                            "flat"
                        ]
                    }
                ],
                translate: [
                    {
                        translate: de()
                    }
                ],
                "translate-x": [
                    {
                        "translate-x": de()
                    }
                ],
                "translate-y": [
                    {
                        "translate-y": de()
                    }
                ],
                "translate-z": [
                    {
                        "translate-z": de()
                    }
                ],
                "translate-none": [
                    "translate-none"
                ],
                accent: [
                    {
                        accent: K()
                    }
                ],
                appearance: [
                    {
                        appearance: [
                            "none",
                            "auto"
                        ]
                    }
                ],
                "caret-color": [
                    {
                        caret: K()
                    }
                ],
                "color-scheme": [
                    {
                        scheme: [
                            "normal",
                            "dark",
                            "light",
                            "light-dark",
                            "only-dark",
                            "only-light"
                        ]
                    }
                ],
                cursor: [
                    {
                        cursor: [
                            "auto",
                            "default",
                            "pointer",
                            "wait",
                            "text",
                            "move",
                            "help",
                            "not-allowed",
                            "none",
                            "context-menu",
                            "progress",
                            "cell",
                            "crosshair",
                            "vertical-text",
                            "alias",
                            "copy",
                            "no-drop",
                            "grab",
                            "grabbing",
                            "all-scroll",
                            "col-resize",
                            "row-resize",
                            "n-resize",
                            "e-resize",
                            "s-resize",
                            "w-resize",
                            "ne-resize",
                            "nw-resize",
                            "se-resize",
                            "sw-resize",
                            "ew-resize",
                            "ns-resize",
                            "nesw-resize",
                            "nwse-resize",
                            "zoom-in",
                            "zoom-out",
                            De,
                            Fe
                        ]
                    }
                ],
                "field-sizing": [
                    {
                        "field-sizing": [
                            "fixed",
                            "content"
                        ]
                    }
                ],
                "pointer-events": [
                    {
                        "pointer-events": [
                            "auto",
                            "none"
                        ]
                    }
                ],
                resize: [
                    {
                        resize: [
                            "none",
                            "",
                            "y",
                            "x"
                        ]
                    }
                ],
                "scroll-behavior": [
                    {
                        scroll: [
                            "auto",
                            "smooth"
                        ]
                    }
                ],
                "scroll-m": [
                    {
                        "scroll-m": P()
                    }
                ],
                "scroll-mx": [
                    {
                        "scroll-mx": P()
                    }
                ],
                "scroll-my": [
                    {
                        "scroll-my": P()
                    }
                ],
                "scroll-ms": [
                    {
                        "scroll-ms": P()
                    }
                ],
                "scroll-me": [
                    {
                        "scroll-me": P()
                    }
                ],
                "scroll-mt": [
                    {
                        "scroll-mt": P()
                    }
                ],
                "scroll-mr": [
                    {
                        "scroll-mr": P()
                    }
                ],
                "scroll-mb": [
                    {
                        "scroll-mb": P()
                    }
                ],
                "scroll-ml": [
                    {
                        "scroll-ml": P()
                    }
                ],
                "scroll-p": [
                    {
                        "scroll-p": P()
                    }
                ],
                "scroll-px": [
                    {
                        "scroll-px": P()
                    }
                ],
                "scroll-py": [
                    {
                        "scroll-py": P()
                    }
                ],
                "scroll-ps": [
                    {
                        "scroll-ps": P()
                    }
                ],
                "scroll-pe": [
                    {
                        "scroll-pe": P()
                    }
                ],
                "scroll-pt": [
                    {
                        "scroll-pt": P()
                    }
                ],
                "scroll-pr": [
                    {
                        "scroll-pr": P()
                    }
                ],
                "scroll-pb": [
                    {
                        "scroll-pb": P()
                    }
                ],
                "scroll-pl": [
                    {
                        "scroll-pl": P()
                    }
                ],
                "snap-align": [
                    {
                        snap: [
                            "start",
                            "end",
                            "center",
                            "align-none"
                        ]
                    }
                ],
                "snap-stop": [
                    {
                        snap: [
                            "normal",
                            "always"
                        ]
                    }
                ],
                "snap-type": [
                    {
                        snap: [
                            "none",
                            "x",
                            "y",
                            "both"
                        ]
                    }
                ],
                "snap-strictness": [
                    {
                        snap: [
                            "mandatory",
                            "proximity"
                        ]
                    }
                ],
                touch: [
                    {
                        touch: [
                            "auto",
                            "none",
                            "manipulation"
                        ]
                    }
                ],
                "touch-x": [
                    {
                        "touch-pan": [
                            "x",
                            "left",
                            "right"
                        ]
                    }
                ],
                "touch-y": [
                    {
                        "touch-pan": [
                            "y",
                            "up",
                            "down"
                        ]
                    }
                ],
                "touch-pz": [
                    "touch-pinch-zoom"
                ],
                select: [
                    {
                        select: [
                            "none",
                            "text",
                            "all",
                            "auto"
                        ]
                    }
                ],
                "will-change": [
                    {
                        "will-change": [
                            "auto",
                            "scroll",
                            "contents",
                            "transform",
                            De,
                            Fe
                        ]
                    }
                ],
                fill: [
                    {
                        fill: [
                            "none",
                            ...K()
                        ]
                    }
                ],
                "stroke-w": [
                    {
                        stroke: [
                            vt,
                            Eh,
                            Fa,
                            nb
                        ]
                    }
                ],
                stroke: [
                    {
                        stroke: [
                            "none",
                            ...K()
                        ]
                    }
                ],
                "forced-color-adjust": [
                    {
                        "forced-color-adjust": [
                            "auto",
                            "none"
                        ]
                    }
                ]
            },
            conflictingClassGroups: {
                overflow: [
                    "overflow-x",
                    "overflow-y"
                ],
                overscroll: [
                    "overscroll-x",
                    "overscroll-y"
                ],
                inset: [
                    "inset-x",
                    "inset-y",
                    "start",
                    "end",
                    "top",
                    "right",
                    "bottom",
                    "left"
                ],
                "inset-x": [
                    "right",
                    "left"
                ],
                "inset-y": [
                    "top",
                    "bottom"
                ],
                flex: [
                    "basis",
                    "grow",
                    "shrink"
                ],
                gap: [
                    "gap-x",
                    "gap-y"
                ],
                p: [
                    "px",
                    "py",
                    "ps",
                    "pe",
                    "pt",
                    "pr",
                    "pb",
                    "pl"
                ],
                px: [
                    "pr",
                    "pl"
                ],
                py: [
                    "pt",
                    "pb"
                ],
                m: [
                    "mx",
                    "my",
                    "ms",
                    "me",
                    "mt",
                    "mr",
                    "mb",
                    "ml"
                ],
                mx: [
                    "mr",
                    "ml"
                ],
                my: [
                    "mt",
                    "mb"
                ],
                size: [
                    "w",
                    "h"
                ],
                "font-size": [
                    "leading"
                ],
                "fvn-normal": [
                    "fvn-ordinal",
                    "fvn-slashed-zero",
                    "fvn-figure",
                    "fvn-spacing",
                    "fvn-fraction"
                ],
                "fvn-ordinal": [
                    "fvn-normal"
                ],
                "fvn-slashed-zero": [
                    "fvn-normal"
                ],
                "fvn-figure": [
                    "fvn-normal"
                ],
                "fvn-spacing": [
                    "fvn-normal"
                ],
                "fvn-fraction": [
                    "fvn-normal"
                ],
                "line-clamp": [
                    "display",
                    "overflow"
                ],
                rounded: [
                    "rounded-s",
                    "rounded-e",
                    "rounded-t",
                    "rounded-r",
                    "rounded-b",
                    "rounded-l",
                    "rounded-ss",
                    "rounded-se",
                    "rounded-ee",
                    "rounded-es",
                    "rounded-tl",
                    "rounded-tr",
                    "rounded-br",
                    "rounded-bl"
                ],
                "rounded-s": [
                    "rounded-ss",
                    "rounded-es"
                ],
                "rounded-e": [
                    "rounded-se",
                    "rounded-ee"
                ],
                "rounded-t": [
                    "rounded-tl",
                    "rounded-tr"
                ],
                "rounded-r": [
                    "rounded-tr",
                    "rounded-br"
                ],
                "rounded-b": [
                    "rounded-br",
                    "rounded-bl"
                ],
                "rounded-l": [
                    "rounded-tl",
                    "rounded-bl"
                ],
                "border-spacing": [
                    "border-spacing-x",
                    "border-spacing-y"
                ],
                "border-w": [
                    "border-w-s",
                    "border-w-e",
                    "border-w-t",
                    "border-w-r",
                    "border-w-b",
                    "border-w-l"
                ],
                "border-w-x": [
                    "border-w-r",
                    "border-w-l"
                ],
                "border-w-y": [
                    "border-w-t",
                    "border-w-b"
                ],
                "border-color": [
                    "border-color-s",
                    "border-color-e",
                    "border-color-t",
                    "border-color-r",
                    "border-color-b",
                    "border-color-l"
                ],
                "border-color-x": [
                    "border-color-r",
                    "border-color-l"
                ],
                "border-color-y": [
                    "border-color-t",
                    "border-color-b"
                ],
                translate: [
                    "translate-x",
                    "translate-y",
                    "translate-none"
                ],
                "translate-none": [
                    "translate",
                    "translate-x",
                    "translate-y",
                    "translate-z"
                ],
                "scroll-m": [
                    "scroll-mx",
                    "scroll-my",
                    "scroll-ms",
                    "scroll-me",
                    "scroll-mt",
                    "scroll-mr",
                    "scroll-mb",
                    "scroll-ml"
                ],
                "scroll-mx": [
                    "scroll-mr",
                    "scroll-ml"
                ],
                "scroll-my": [
                    "scroll-mt",
                    "scroll-mb"
                ],
                "scroll-p": [
                    "scroll-px",
                    "scroll-py",
                    "scroll-ps",
                    "scroll-pe",
                    "scroll-pt",
                    "scroll-pr",
                    "scroll-pb",
                    "scroll-pl"
                ],
                "scroll-px": [
                    "scroll-pr",
                    "scroll-pl"
                ],
                "scroll-py": [
                    "scroll-pt",
                    "scroll-pb"
                ],
                touch: [
                    "touch-x",
                    "touch-y",
                    "touch-pz"
                ],
                "touch-x": [
                    "touch"
                ],
                "touch-y": [
                    "touch"
                ],
                "touch-pz": [
                    "touch"
                ]
            },
            conflictingClassGroupModifiers: {
                "font-size": [
                    "leading"
                ]
            },
            orderSensitiveModifiers: [
                "before",
                "after",
                "placeholder",
                "file",
                "marker",
                "selection",
                "first-line",
                "first-letter",
                "backdrop",
                "*",
                "**"
            ]
        };
    }, JT = L4(uz), K0 = new Proxy(()=>K0, {
        get: ()=>K0
    });
    function lt({ use: e, slot: t, variant: n, match: r = [], defaults: i }) {
        return ({ css: o, ...s } = {})=>({
                slots: new Proxy({}, {
                    get: (l, u)=>({ css: f, ...p } = {})=>{
                            const m = [], g = e, v = {
                                ...g?.()?.config.defaults,
                                ...i,
                                ...s,
                                ...p
                            };
                            m.push(g?.(v)?.slots[u]?.(v)), m.push(Array.isArray(t[u]) ? t[u] : [
                                t[u]
                            ]);
                            for (const [x, b] of Object.entries(v)){
                                const S = n[x]?.[b];
                                S && m.push(S);
                            }
                            for (const x of r)Object.entries(x.if).every(([b, S])=>S === v[b]) && m.push(x.then?.[u]);
                            return m.push(o?.[u]), m.push(f), JT(m);
                        }
                }),
                config: {
                    defaults: {
                        ...e?.()?.config.defaults,
                        ...i
                    },
                    values: {
                        ...e?.()?.config.defaults,
                        ...i,
                        ...s
                    }
                },
                type: K0()
            });
    }
    const it = JT;
    var rb, zE;
    function ZT() {
        return zE || (zE = 1, rb = Object), rb;
    }
    var ib, WE;
    function dz() {
        return WE || (WE = 1, ib = Error), ib;
    }
    var ob, VE;
    function fz() {
        return VE || (VE = 1, ob = EvalError), ob;
    }
    var sb, UE;
    function pz() {
        return UE || (UE = 1, sb = RangeError), sb;
    }
    var ab, HE;
    function hz() {
        return HE || (HE = 1, ab = ReferenceError), ab;
    }
    var lb, KE;
    function mz() {
        return KE || (KE = 1, lb = SyntaxError), lb;
    }
    var cb, GE;
    function YT() {
        return GE || (GE = 1, cb = TypeError), cb;
    }
    var ub, QE;
    function gz() {
        return QE || (QE = 1, ub = URIError), ub;
    }
    var db, JE;
    function yz() {
        return JE || (JE = 1, db = Math.abs), db;
    }
    var fb, ZE;
    function vz() {
        return ZE || (ZE = 1, fb = Math.floor), fb;
    }
    var pb, YE;
    function xz() {
        return YE || (YE = 1, pb = Math.max), pb;
    }
    var hb, XE;
    function bz() {
        return XE || (XE = 1, hb = Math.min), hb;
    }
    var mb, ek;
    function wz() {
        return ek || (ek = 1, mb = Math.pow), mb;
    }
    var gb, tk;
    function Nz() {
        return tk || (tk = 1, gb = Math.round), gb;
    }
    var yb, nk;
    function Sz() {
        return nk || (nk = 1, yb = Number.isNaN || function(t) {
            return t !== t;
        }), yb;
    }
    var vb, rk;
    function Iz() {
        if (rk) return vb;
        rk = 1;
        var e = Sz();
        return vb = function(n) {
            return e(n) || n === 0 ? n : n < 0 ? -1 : 1;
        }, vb;
    }
    var xb, ik;
    function _z() {
        return ik || (ik = 1, xb = Object.getOwnPropertyDescriptor), xb;
    }
    var bb, ok;
    function XT() {
        if (ok) return bb;
        ok = 1;
        var e = _z();
        if (e) try {
            e([], "length");
        } catch  {
            e = null;
        }
        return bb = e, bb;
    }
    var wb, sk;
    function Ez() {
        if (sk) return wb;
        sk = 1;
        var e = Object.defineProperty || !1;
        if (e) try {
            e({}, "a", {
                value: 1
            });
        } catch  {
            e = !1;
        }
        return wb = e, wb;
    }
    var Nb, ak;
    function eP() {
        return ak || (ak = 1, Nb = function() {
            if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") return !1;
            if (typeof Symbol.iterator == "symbol") return !0;
            var t = {}, n = Symbol("test"), r = Object(n);
            if (typeof n == "string" || Object.prototype.toString.call(n) !== "[object Symbol]" || Object.prototype.toString.call(r) !== "[object Symbol]") return !1;
            var i = 42;
            t[n] = i;
            for(var o in t)return !1;
            if (typeof Object.keys == "function" && Object.keys(t).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(t).length !== 0) return !1;
            var s = Object.getOwnPropertySymbols(t);
            if (s.length !== 1 || s[0] !== n || !Object.prototype.propertyIsEnumerable.call(t, n)) return !1;
            if (typeof Object.getOwnPropertyDescriptor == "function") {
                var l = Object.getOwnPropertyDescriptor(t, n);
                if (l.value !== i || l.enumerable !== !0) return !1;
            }
            return !0;
        }), Nb;
    }
    var Sb, lk;
    function kz() {
        if (lk) return Sb;
        lk = 1;
        var e = typeof Symbol < "u" && Symbol, t = eP();
        return Sb = function() {
            return typeof e != "function" || typeof Symbol != "function" || typeof e("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : t();
        }, Sb;
    }
    var Ib, ck;
    function tP() {
        return ck || (ck = 1, Ib = typeof Reflect < "u" && Reflect.getPrototypeOf || null), Ib;
    }
    var _b, uk;
    function nP() {
        if (uk) return _b;
        uk = 1;
        var e = ZT();
        return _b = e.getPrototypeOf || null, _b;
    }
    var Eb, dk;
    function Cz() {
        if (dk) return Eb;
        dk = 1;
        var e = "Function.prototype.bind called on incompatible ", t = Object.prototype.toString, n = Math.max, r = "[object Function]", i = function(u, f) {
            for(var p = [], m = 0; m < u.length; m += 1)p[m] = u[m];
            for(var g = 0; g < f.length; g += 1)p[g + u.length] = f[g];
            return p;
        }, o = function(u, f) {
            for(var p = [], m = f, g = 0; m < u.length; m += 1, g += 1)p[g] = u[m];
            return p;
        }, s = function(l, u) {
            for(var f = "", p = 0; p < l.length; p += 1)f += l[p], p + 1 < l.length && (f += u);
            return f;
        };
        return Eb = function(u) {
            var f = this;
            if (typeof f != "function" || t.apply(f) !== r) throw new TypeError(e + f);
            for(var p = o(arguments, 1), m, g = function() {
                if (this instanceof m) {
                    var N = f.apply(this, i(p, arguments));
                    return Object(N) === N ? N : this;
                }
                return f.apply(u, i(p, arguments));
            }, v = n(0, f.length - p.length), x = [], b = 0; b < v; b++)x[b] = "$" + b;
            if (m = Function("binder", "return function (" + s(x, ",") + "){ return binder.apply(this,arguments); }")(g), f.prototype) {
                var S = function() {};
                S.prototype = f.prototype, m.prototype = new S, S.prototype = null;
            }
            return m;
        }, Eb;
    }
    var kb, fk;
    function ry() {
        if (fk) return kb;
        fk = 1;
        var e = Cz();
        return kb = Function.prototype.bind || e, kb;
    }
    var Cb, pk;
    function iS() {
        return pk || (pk = 1, Cb = Function.prototype.call), Cb;
    }
    var jb, hk;
    function rP() {
        return hk || (hk = 1, jb = Function.prototype.apply), jb;
    }
    var Rb, mk;
    function jz() {
        return mk || (mk = 1, Rb = typeof Reflect < "u" && Reflect && Reflect.apply), Rb;
    }
    var Ob, gk;
    function Rz() {
        if (gk) return Ob;
        gk = 1;
        var e = ry(), t = rP(), n = iS(), r = jz();
        return Ob = r || e.call(n, t), Ob;
    }
    var Tb, yk;
    function iP() {
        if (yk) return Tb;
        yk = 1;
        var e = ry(), t = YT(), n = iS(), r = Rz();
        return Tb = function(o) {
            if (o.length < 1 || typeof o[0] != "function") throw new t("a function is required");
            return r(e, n, o);
        }, Tb;
    }
    var Pb, vk;
    function Oz() {
        if (vk) return Pb;
        vk = 1;
        var e = iP(), t = XT(), n;
        try {
            n = [].__proto__ === Array.prototype;
        } catch (s) {
            if (!s || typeof s != "object" || !("code" in s) || s.code !== "ERR_PROTO_ACCESS") throw s;
        }
        var r = !!n && t && t(Object.prototype, "__proto__"), i = Object, o = i.getPrototypeOf;
        return Pb = r && typeof r.get == "function" ? e([
            r.get
        ]) : typeof o == "function" ? function(l) {
            return o(l == null ? l : i(l));
        } : !1, Pb;
    }
    var Ab, xk;
    function Tz() {
        if (xk) return Ab;
        xk = 1;
        var e = tP(), t = nP(), n = Oz();
        return Ab = e ? function(i) {
            return e(i);
        } : t ? function(i) {
            if (!i || typeof i != "object" && typeof i != "function") throw new TypeError("getProto: not an object");
            return t(i);
        } : n ? function(i) {
            return n(i);
        } : null, Ab;
    }
    var Fb, bk;
    function Pz() {
        if (bk) return Fb;
        bk = 1;
        var e = Function.prototype.call, t = Object.prototype.hasOwnProperty, n = ry();
        return Fb = n.call(e, t), Fb;
    }
    var Db, wk;
    function Az() {
        if (wk) return Db;
        wk = 1;
        var e, t = ZT(), n = dz(), r = fz(), i = pz(), o = hz(), s = mz(), l = YT(), u = gz(), f = yz(), p = vz(), m = xz(), g = bz(), v = wz(), x = Nz(), b = Iz(), S = Function, N = function(de) {
            try {
                return S('"use strict"; return (' + de + ").constructor;")();
            } catch  {}
        }, _ = XT(), I = Ez(), C = function() {
            throw new l;
        }, A = _ ? function() {
            try {
                return arguments.callee, C;
            } catch  {
                try {
                    return _(arguments, "callee").get;
                } catch  {
                    return C;
                }
            }
        }() : C, R = kz()(), D = Tz(), O = nP(), E = tP(), F = rP(), j = iS(), M = {}, L = typeof Uint8Array > "u" || !D ? e : D(Uint8Array), P = {
            __proto__: null,
            "%AggregateError%": typeof AggregateError > "u" ? e : AggregateError,
            "%Array%": Array,
            "%ArrayBuffer%": typeof ArrayBuffer > "u" ? e : ArrayBuffer,
            "%ArrayIteratorPrototype%": R && D ? D([][Symbol.iterator]()) : e,
            "%AsyncFromSyncIteratorPrototype%": e,
            "%AsyncFunction%": M,
            "%AsyncGenerator%": M,
            "%AsyncGeneratorFunction%": M,
            "%AsyncIteratorPrototype%": M,
            "%Atomics%": typeof Atomics > "u" ? e : Atomics,
            "%BigInt%": typeof BigInt > "u" ? e : BigInt,
            "%BigInt64Array%": typeof BigInt64Array > "u" ? e : BigInt64Array,
            "%BigUint64Array%": typeof BigUint64Array > "u" ? e : BigUint64Array,
            "%Boolean%": Boolean,
            "%DataView%": typeof DataView > "u" ? e : DataView,
            "%Date%": Date,
            "%decodeURI%": decodeURI,
            "%decodeURIComponent%": decodeURIComponent,
            "%encodeURI%": encodeURI,
            "%encodeURIComponent%": encodeURIComponent,
            "%Error%": n,
            "%eval%": eval,
            "%EvalError%": r,
            "%Float32Array%": typeof Float32Array > "u" ? e : Float32Array,
            "%Float64Array%": typeof Float64Array > "u" ? e : Float64Array,
            "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? e : FinalizationRegistry,
            "%Function%": S,
            "%GeneratorFunction%": M,
            "%Int8Array%": typeof Int8Array > "u" ? e : Int8Array,
            "%Int16Array%": typeof Int16Array > "u" ? e : Int16Array,
            "%Int32Array%": typeof Int32Array > "u" ? e : Int32Array,
            "%isFinite%": isFinite,
            "%isNaN%": isNaN,
            "%IteratorPrototype%": R && D ? D(D([][Symbol.iterator]())) : e,
            "%JSON%": typeof JSON == "object" ? JSON : e,
            "%Map%": typeof Map > "u" ? e : Map,
            "%MapIteratorPrototype%": typeof Map > "u" || !R || !D ? e : D(new Map()[Symbol.iterator]()),
            "%Math%": Math,
            "%Number%": Number,
            "%Object%": t,
            "%Object.getOwnPropertyDescriptor%": _,
            "%parseFloat%": parseFloat,
            "%parseInt%": parseInt,
            "%Promise%": typeof Promise > "u" ? e : Promise,
            "%Proxy%": typeof Proxy > "u" ? e : Proxy,
            "%RangeError%": i,
            "%ReferenceError%": o,
            "%Reflect%": typeof Reflect > "u" ? e : Reflect,
            "%RegExp%": RegExp,
            "%Set%": typeof Set > "u" ? e : Set,
            "%SetIteratorPrototype%": typeof Set > "u" || !R || !D ? e : D(new Set()[Symbol.iterator]()),
            "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? e : SharedArrayBuffer,
            "%String%": String,
            "%StringIteratorPrototype%": R && D ? D(""[Symbol.iterator]()) : e,
            "%Symbol%": R ? Symbol : e,
            "%SyntaxError%": s,
            "%ThrowTypeError%": A,
            "%TypedArray%": L,
            "%TypeError%": l,
            "%Uint8Array%": typeof Uint8Array > "u" ? e : Uint8Array,
            "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? e : Uint8ClampedArray,
            "%Uint16Array%": typeof Uint16Array > "u" ? e : Uint16Array,
            "%Uint32Array%": typeof Uint32Array > "u" ? e : Uint32Array,
            "%URIError%": u,
            "%WeakMap%": typeof WeakMap > "u" ? e : WeakMap,
            "%WeakRef%": typeof WeakRef > "u" ? e : WeakRef,
            "%WeakSet%": typeof WeakSet > "u" ? e : WeakSet,
            "%Function.prototype.call%": j,
            "%Function.prototype.apply%": F,
            "%Object.defineProperty%": I,
            "%Object.getPrototypeOf%": O,
            "%Math.abs%": f,
            "%Math.floor%": p,
            "%Math.max%": m,
            "%Math.min%": g,
            "%Math.pow%": v,
            "%Math.round%": x,
            "%Math.sign%": b,
            "%Reflect.getPrototypeOf%": E
        };
        if (D) try {
            null.error;
        } catch (de) {
            var V = D(D(de));
            P["%Error.prototype%"] = V;
        }
        var z = function de(ve) {
            var be;
            if (ve === "%AsyncFunction%") be = N("async function () {}");
            else if (ve === "%GeneratorFunction%") be = N("function* () {}");
            else if (ve === "%AsyncGeneratorFunction%") be = N("async function* () {}");
            else if (ve === "%AsyncGenerator%") {
                var ge = de("%AsyncGeneratorFunction%");
                ge && (be = ge.prototype);
            } else if (ve === "%AsyncIteratorPrototype%") {
                var we = de("%AsyncGenerator%");
                we && D && (be = D(we.prototype));
            }
            return P[ve] = be, be;
        }, Q = {
            __proto__: null,
            "%ArrayBufferPrototype%": [
                "ArrayBuffer",
                "prototype"
            ],
            "%ArrayPrototype%": [
                "Array",
                "prototype"
            ],
            "%ArrayProto_entries%": [
                "Array",
                "prototype",
                "entries"
            ],
            "%ArrayProto_forEach%": [
                "Array",
                "prototype",
                "forEach"
            ],
            "%ArrayProto_keys%": [
                "Array",
                "prototype",
                "keys"
            ],
            "%ArrayProto_values%": [
                "Array",
                "prototype",
                "values"
            ],
            "%AsyncFunctionPrototype%": [
                "AsyncFunction",
                "prototype"
            ],
            "%AsyncGenerator%": [
                "AsyncGeneratorFunction",
                "prototype"
            ],
            "%AsyncGeneratorPrototype%": [
                "AsyncGeneratorFunction",
                "prototype",
                "prototype"
            ],
            "%BooleanPrototype%": [
                "Boolean",
                "prototype"
            ],
            "%DataViewPrototype%": [
                "DataView",
                "prototype"
            ],
            "%DatePrototype%": [
                "Date",
                "prototype"
            ],
            "%ErrorPrototype%": [
                "Error",
                "prototype"
            ],
            "%EvalErrorPrototype%": [
                "EvalError",
                "prototype"
            ],
            "%Float32ArrayPrototype%": [
                "Float32Array",
                "prototype"
            ],
            "%Float64ArrayPrototype%": [
                "Float64Array",
                "prototype"
            ],
            "%FunctionPrototype%": [
                "Function",
                "prototype"
            ],
            "%Generator%": [
                "GeneratorFunction",
                "prototype"
            ],
            "%GeneratorPrototype%": [
                "GeneratorFunction",
                "prototype",
                "prototype"
            ],
            "%Int8ArrayPrototype%": [
                "Int8Array",
                "prototype"
            ],
            "%Int16ArrayPrototype%": [
                "Int16Array",
                "prototype"
            ],
            "%Int32ArrayPrototype%": [
                "Int32Array",
                "prototype"
            ],
            "%JSONParse%": [
                "JSON",
                "parse"
            ],
            "%JSONStringify%": [
                "JSON",
                "stringify"
            ],
            "%MapPrototype%": [
                "Map",
                "prototype"
            ],
            "%NumberPrototype%": [
                "Number",
                "prototype"
            ],
            "%ObjectPrototype%": [
                "Object",
                "prototype"
            ],
            "%ObjProto_toString%": [
                "Object",
                "prototype",
                "toString"
            ],
            "%ObjProto_valueOf%": [
                "Object",
                "prototype",
                "valueOf"
            ],
            "%PromisePrototype%": [
                "Promise",
                "prototype"
            ],
            "%PromiseProto_then%": [
                "Promise",
                "prototype",
                "then"
            ],
            "%Promise_all%": [
                "Promise",
                "all"
            ],
            "%Promise_reject%": [
                "Promise",
                "reject"
            ],
            "%Promise_resolve%": [
                "Promise",
                "resolve"
            ],
            "%RangeErrorPrototype%": [
                "RangeError",
                "prototype"
            ],
            "%ReferenceErrorPrototype%": [
                "ReferenceError",
                "prototype"
            ],
            "%RegExpPrototype%": [
                "RegExp",
                "prototype"
            ],
            "%SetPrototype%": [
                "Set",
                "prototype"
            ],
            "%SharedArrayBufferPrototype%": [
                "SharedArrayBuffer",
                "prototype"
            ],
            "%StringPrototype%": [
                "String",
                "prototype"
            ],
            "%SymbolPrototype%": [
                "Symbol",
                "prototype"
            ],
            "%SyntaxErrorPrototype%": [
                "SyntaxError",
                "prototype"
            ],
            "%TypedArrayPrototype%": [
                "TypedArray",
                "prototype"
            ],
            "%TypeErrorPrototype%": [
                "TypeError",
                "prototype"
            ],
            "%Uint8ArrayPrototype%": [
                "Uint8Array",
                "prototype"
            ],
            "%Uint8ClampedArrayPrototype%": [
                "Uint8ClampedArray",
                "prototype"
            ],
            "%Uint16ArrayPrototype%": [
                "Uint16Array",
                "prototype"
            ],
            "%Uint32ArrayPrototype%": [
                "Uint32Array",
                "prototype"
            ],
            "%URIErrorPrototype%": [
                "URIError",
                "prototype"
            ],
            "%WeakMapPrototype%": [
                "WeakMap",
                "prototype"
            ],
            "%WeakSetPrototype%": [
                "WeakSet",
                "prototype"
            ]
        }, K = ry(), H = Pz(), G = K.call(j, Array.prototype.concat), U = K.call(F, Array.prototype.splice), Z = K.call(j, String.prototype.replace), J = K.call(j, String.prototype.slice), X = K.call(j, RegExp.prototype.exec), te = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, ie = /\\(\\)?/g, ae = function(ve) {
            var be = J(ve, 0, 1), ge = J(ve, -1);
            if (be === "%" && ge !== "%") throw new s("invalid intrinsic syntax, expected closing `%`");
            if (ge === "%" && be !== "%") throw new s("invalid intrinsic syntax, expected opening `%`");
            var we = [];
            return Z(ve, te, function(ke, Re, $e, nt) {
                we[we.length] = $e ? Z(nt, ie, "$1") : Re || ke;
            }), we;
        }, ce = function(ve, be) {
            var ge = ve, we;
            if (H(Q, ge) && (we = Q[ge], ge = "%" + we[0] + "%"), H(P, ge)) {
                var ke = P[ge];
                if (ke === M && (ke = z(ge)), typeof ke > "u" && !be) throw new l("intrinsic " + ve + " exists, but is not available. Please file an issue!");
                return {
                    alias: we,
                    name: ge,
                    value: ke
                };
            }
            throw new s("intrinsic " + ve + " does not exist!");
        };
        return Db = function(ve, be) {
            if (typeof ve != "string" || ve.length === 0) throw new l("intrinsic name must be a non-empty string");
            if (arguments.length > 1 && typeof be != "boolean") throw new l('"allowMissing" argument must be a boolean');
            if (X(/^%?[^%]*%?$/, ve) === null) throw new s("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
            var ge = ae(ve), we = ge.length > 0 ? ge[0] : "", ke = ce("%" + we + "%", be), Re = ke.name, $e = ke.value, nt = !1, ee = ke.alias;
            ee && (we = ee[0], U(ge, G([
                0,
                1
            ], ee)));
            for(var ne = 1, oe = !0; ne < ge.length; ne += 1){
                var le = ge[ne], me = J(le, 0, 1), xe = J(le, -1);
                if ((me === '"' || me === "'" || me === "`" || xe === '"' || xe === "'" || xe === "`") && me !== xe) throw new s("property names with quotes must have matching quotes");
                if ((le === "constructor" || !oe) && (nt = !0), we += "." + le, Re = "%" + we + "%", H(P, Re)) $e = P[Re];
                else if ($e != null) {
                    if (!(le in $e)) {
                        if (!be) throw new l("base intrinsic for " + ve + " exists, but the property is not available.");
                        return;
                    }
                    if (_ && ne + 1 >= ge.length) {
                        var pe = _($e, le);
                        oe = !!pe, oe && "get" in pe && !("originalValue" in pe.get) ? $e = pe.get : $e = $e[le];
                    } else oe = H($e, le), $e = $e[le];
                    oe && !nt && (P[Re] = $e);
                }
            }
            return $e;
        }, Db;
    }
    var Mb, Nk;
    function Fz() {
        if (Nk) return Mb;
        Nk = 1;
        var e = Az(), t = iP(), n = t([
            e("%String.prototype.indexOf%")
        ]);
        return Mb = function(i, o) {
            var s = e(i, !!o);
            return typeof s == "function" && n(i, ".prototype.") > -1 ? t([
                s
            ]) : s;
        }, Mb;
    }
    var Lb, Sk;
    function Dz() {
        if (Sk) return Lb;
        Sk = 1;
        var e = eP();
        return Lb = function() {
            return e() && !!Symbol.toStringTag;
        }, Lb;
    }
    var $b, Ik;
    function Mz() {
        if (Ik) return $b;
        Ik = 1;
        var e = Fz(), t = e("String.prototype.valueOf"), n = function(l) {
            try {
                return t(l), !0;
            } catch  {
                return !1;
            }
        }, r = e("Object.prototype.toString"), i = "[object String]", o = Dz()();
        return $b = function(l) {
            return typeof l == "string" ? !0 : !l || typeof l != "object" ? !1 : o ? n(l) : r(l) === i;
        }, $b;
    }
    var Lz = Mz();
    const $z = fi(Lz), jf = (e)=>$z(e), qz = (e, t, n = {})=>{
        const r = [];
        return e.filter((o, s)=>{
            const l = n.regionLowerCase ? o.toLowerCase() : o;
            if (t.includes(l)) return r.push({
                index: s,
                appLocale: l
            }), !0;
            const { isAvailable: u, appLocale: f } = Bz(l, t, n);
            return u && r.push({
                index: s,
                appLocale: n.regionLowerCase ? f.toLowerCase() : f
            }), u;
        }).map((o, s)=>!r || r.length === 0 ? o : r[s]?.appLocale);
    }, Bz = (e, t, n = {})=>{
        n?.languageOnly || (n.languageOnly = !1);
        let r = e;
        return {
            isAvailable: t.some((o)=>{
                if (!rm() && !n.languageOnly && e.split("-")[1] === void 0) return !1;
                const s = rm() ? new Intl.Locale(e).minimize().language : e.split("-")[0], l = rm() ? new Intl.Locale(o).minimize().language : o.split("-")[0], u = s === l;
                return u && (r = o), u;
            }),
            appLocale: r
        };
    }, zz = (e = {})=>{
        e?.regionLowerCase || (e.regionLowerCase = !1);
        let t = [];
        return Intl && "DateTimeFormat" in Intl ? t = [
            Intl.DateTimeFormat().resolvedOptions().locale
        ] : typeof window == "object" && window?.navigator?.languages && (t = [
            ...window.navigator.languages
        ]), t.map((n)=>e.regionLowerCase ? n.toLowerCase() : n);
    }, rm = ()=>Intl && "Locale" in Intl, Wz = (e, t = {})=>{
        t?.regionLowerCase || (t.regionLowerCase = !1), t?.languageOnly || (t.languageOnly = !1);
        const n = e.map((r)=>{
            const i = r.split("-");
            if (t.languageOnly) return i[0];
            const o = rm() ? new Intl.Locale(r).maximize() : {
                language: i[0],
                script: i.length === 3 ? i[1] : void 0,
                region: i.length === 3 ? i[2] : i[1]
            }, { language: s, script: l } = o;
            let { region: u } = o;
            return t.regionLowerCase && u && (u = u.toLowerCase()), i.length > 2 ? `${s}-${l}-${u}` : u ? `${s}-${u}` : s;
        });
        return [
            ...new Set(n)
        ];
    }, Vz = (e, t, n = {})=>{
        n.regionLowerCase || (n.regionLowerCase = !1), n.languageOnly || (n.languageOnly = !1);
        const r = zz(n), i = Wz([
            ...r,
            e
        ], n);
        return qz(i, t, n)[0] || e;
    }, Uz = ({ available: e, fallback: t })=>Vz(t, e, {
            languageOnly: !0
        });
    var qb = {
        exports: {}
    };
    const Hz = {}, Kz = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: Hz
    }, Symbol.toStringTag, {
        value: "Module"
    })), _k = o$(Kz);
    var Ek;
    function Gz() {
        return Ek || (Ek = 1, function(e) {
            (function() {
                var t = "input is invalid type", n = typeof window == "object", r = n ? window : {};
                r.JS_SHA256_NO_WINDOW && (n = !1);
                var i = !n && typeof self == "object", o = !r.JS_SHA256_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node;
                o ? r = Ua : i && (r = self);
                var s = !r.JS_SHA256_NO_COMMON_JS && !0 && e.exports, l = !r.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", u = "0123456789abcdef".split(""), f = [
                    -2147483648,
                    8388608,
                    32768,
                    128
                ], p = [
                    24,
                    16,
                    8,
                    0
                ], m = [
                    1116352408,
                    1899447441,
                    3049323471,
                    3921009573,
                    961987163,
                    1508970993,
                    2453635748,
                    2870763221,
                    3624381080,
                    310598401,
                    607225278,
                    1426881987,
                    1925078388,
                    2162078206,
                    2614888103,
                    3248222580,
                    3835390401,
                    4022224774,
                    264347078,
                    604807628,
                    770255983,
                    1249150122,
                    1555081692,
                    1996064986,
                    2554220882,
                    2821834349,
                    2952996808,
                    3210313671,
                    3336571891,
                    3584528711,
                    113926993,
                    338241895,
                    666307205,
                    773529912,
                    1294757372,
                    1396182291,
                    1695183700,
                    1986661051,
                    2177026350,
                    2456956037,
                    2730485921,
                    2820302411,
                    3259730800,
                    3345764771,
                    3516065817,
                    3600352804,
                    4094571909,
                    275423344,
                    430227734,
                    506948616,
                    659060556,
                    883997877,
                    958139571,
                    1322822218,
                    1537002063,
                    1747873779,
                    1955562222,
                    2024104815,
                    2227730452,
                    2361852424,
                    2428436474,
                    2756734187,
                    3204031479,
                    3329325298
                ], g = [
                    "hex",
                    "array",
                    "digest",
                    "arrayBuffer"
                ], v = [];
                (r.JS_SHA256_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(R) {
                    return Object.prototype.toString.call(R) === "[object Array]";
                }), l && (r.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(R) {
                    return typeof R == "object" && R.buffer && R.buffer.constructor === ArrayBuffer;
                });
                var x = function(R, D) {
                    return function(O) {
                        return new I(D, !0).update(O)[R]();
                    };
                }, b = function(R) {
                    var D = x("hex", R);
                    o && (D = S(D, R)), D.create = function() {
                        return new I(R);
                    }, D.update = function(F) {
                        return D.create().update(F);
                    };
                    for(var O = 0; O < g.length; ++O){
                        var E = g[O];
                        D[E] = x(E, R);
                    }
                    return D;
                }, S = function(R, D) {
                    var O = _k, E = _k.Buffer, F = D ? "sha224" : "sha256", j;
                    E.from && !r.JS_SHA256_NO_BUFFER_FROM ? j = E.from : j = function(L) {
                        return new E(L);
                    };
                    var M = function(L) {
                        if (typeof L == "string") return O.createHash(F).update(L, "utf8").digest("hex");
                        if (L == null) throw new Error(t);
                        return L.constructor === ArrayBuffer && (L = new Uint8Array(L)), Array.isArray(L) || ArrayBuffer.isView(L) || L.constructor === E ? O.createHash(F).update(j(L)).digest("hex") : R(L);
                    };
                    return M;
                }, N = function(R, D) {
                    return function(O, E) {
                        return new C(O, D, !0).update(E)[R]();
                    };
                }, _ = function(R) {
                    var D = N("hex", R);
                    D.create = function(F) {
                        return new C(F, R);
                    }, D.update = function(F, j) {
                        return D.create(F).update(j);
                    };
                    for(var O = 0; O < g.length; ++O){
                        var E = g[O];
                        D[E] = N(E, R);
                    }
                    return D;
                };
                function I(R, D) {
                    D ? (v[0] = v[16] = v[1] = v[2] = v[3] = v[4] = v[5] = v[6] = v[7] = v[8] = v[9] = v[10] = v[11] = v[12] = v[13] = v[14] = v[15] = 0, this.blocks = v) : this.blocks = [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ], R ? (this.h0 = 3238371032, this.h1 = 914150663, this.h2 = 812702999, this.h3 = 4144912697, this.h4 = 4290775857, this.h5 = 1750603025, this.h6 = 1694076839, this.h7 = 3204075428) : (this.h0 = 1779033703, this.h1 = 3144134277, this.h2 = 1013904242, this.h3 = 2773480762, this.h4 = 1359893119, this.h5 = 2600822924, this.h6 = 528734635, this.h7 = 1541459225), this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = !1, this.first = !0, this.is224 = R;
                }
                I.prototype.update = function(R) {
                    if (!this.finalized) {
                        var D, O = typeof R;
                        if (O !== "string") {
                            if (O === "object") {
                                if (R === null) throw new Error(t);
                                if (l && R.constructor === ArrayBuffer) R = new Uint8Array(R);
                                else if (!Array.isArray(R) && (!l || !ArrayBuffer.isView(R))) throw new Error(t);
                            } else throw new Error(t);
                            D = !0;
                        }
                        for(var E, F = 0, j, M = R.length, L = this.blocks; F < M;){
                            if (this.hashed && (this.hashed = !1, L[0] = this.block, this.block = L[16] = L[1] = L[2] = L[3] = L[4] = L[5] = L[6] = L[7] = L[8] = L[9] = L[10] = L[11] = L[12] = L[13] = L[14] = L[15] = 0), D) for(j = this.start; F < M && j < 64; ++F)L[j >>> 2] |= R[F] << p[j++ & 3];
                            else for(j = this.start; F < M && j < 64; ++F)E = R.charCodeAt(F), E < 128 ? L[j >>> 2] |= E << p[j++ & 3] : E < 2048 ? (L[j >>> 2] |= (192 | E >>> 6) << p[j++ & 3], L[j >>> 2] |= (128 | E & 63) << p[j++ & 3]) : E < 55296 || E >= 57344 ? (L[j >>> 2] |= (224 | E >>> 12) << p[j++ & 3], L[j >>> 2] |= (128 | E >>> 6 & 63) << p[j++ & 3], L[j >>> 2] |= (128 | E & 63) << p[j++ & 3]) : (E = 65536 + ((E & 1023) << 10 | R.charCodeAt(++F) & 1023), L[j >>> 2] |= (240 | E >>> 18) << p[j++ & 3], L[j >>> 2] |= (128 | E >>> 12 & 63) << p[j++ & 3], L[j >>> 2] |= (128 | E >>> 6 & 63) << p[j++ & 3], L[j >>> 2] |= (128 | E & 63) << p[j++ & 3]);
                            this.lastByteIndex = j, this.bytes += j - this.start, j >= 64 ? (this.block = L[16], this.start = j - 64, this.hash(), this.hashed = !0) : this.start = j;
                        }
                        return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this;
                    }
                }, I.prototype.finalize = function() {
                    if (!this.finalized) {
                        this.finalized = !0;
                        var R = this.blocks, D = this.lastByteIndex;
                        R[16] = this.block, R[D >>> 2] |= f[D & 3], this.block = R[16], D >= 56 && (this.hashed || this.hash(), R[0] = this.block, R[16] = R[1] = R[2] = R[3] = R[4] = R[5] = R[6] = R[7] = R[8] = R[9] = R[10] = R[11] = R[12] = R[13] = R[14] = R[15] = 0), R[14] = this.hBytes << 3 | this.bytes >>> 29, R[15] = this.bytes << 3, this.hash();
                    }
                }, I.prototype.hash = function() {
                    var R = this.h0, D = this.h1, O = this.h2, E = this.h3, F = this.h4, j = this.h5, M = this.h6, L = this.h7, P = this.blocks, V, z, Q, K, H, G, U, Z, J, X, te;
                    for(V = 16; V < 64; ++V)H = P[V - 15], z = (H >>> 7 | H << 25) ^ (H >>> 18 | H << 14) ^ H >>> 3, H = P[V - 2], Q = (H >>> 17 | H << 15) ^ (H >>> 19 | H << 13) ^ H >>> 10, P[V] = P[V - 16] + z + P[V - 7] + Q << 0;
                    for(te = D & O, V = 0; V < 64; V += 4)this.first ? (this.is224 ? (Z = 300032, H = P[0] - 1413257819, L = H - 150054599 << 0, E = H + 24177077 << 0) : (Z = 704751109, H = P[0] - 210244248, L = H - 1521486534 << 0, E = H + 143694565 << 0), this.first = !1) : (z = (R >>> 2 | R << 30) ^ (R >>> 13 | R << 19) ^ (R >>> 22 | R << 10), Q = (F >>> 6 | F << 26) ^ (F >>> 11 | F << 21) ^ (F >>> 25 | F << 7), Z = R & D, K = Z ^ R & O ^ te, U = F & j ^ ~F & M, H = L + Q + U + m[V] + P[V], G = z + K, L = E + H << 0, E = H + G << 0), z = (E >>> 2 | E << 30) ^ (E >>> 13 | E << 19) ^ (E >>> 22 | E << 10), Q = (L >>> 6 | L << 26) ^ (L >>> 11 | L << 21) ^ (L >>> 25 | L << 7), J = E & R, K = J ^ E & D ^ Z, U = L & F ^ ~L & j, H = M + Q + U + m[V + 1] + P[V + 1], G = z + K, M = O + H << 0, O = H + G << 0, z = (O >>> 2 | O << 30) ^ (O >>> 13 | O << 19) ^ (O >>> 22 | O << 10), Q = (M >>> 6 | M << 26) ^ (M >>> 11 | M << 21) ^ (M >>> 25 | M << 7), X = O & E, K = X ^ O & R ^ J, U = M & L ^ ~M & F, H = j + Q + U + m[V + 2] + P[V + 2], G = z + K, j = D + H << 0, D = H + G << 0, z = (D >>> 2 | D << 30) ^ (D >>> 13 | D << 19) ^ (D >>> 22 | D << 10), Q = (j >>> 6 | j << 26) ^ (j >>> 11 | j << 21) ^ (j >>> 25 | j << 7), te = D & O, K = te ^ D & E ^ X, U = j & M ^ ~j & L, H = F + Q + U + m[V + 3] + P[V + 3], G = z + K, F = R + H << 0, R = H + G << 0, this.chromeBugWorkAround = !0;
                    this.h0 = this.h0 + R << 0, this.h1 = this.h1 + D << 0, this.h2 = this.h2 + O << 0, this.h3 = this.h3 + E << 0, this.h4 = this.h4 + F << 0, this.h5 = this.h5 + j << 0, this.h6 = this.h6 + M << 0, this.h7 = this.h7 + L << 0;
                }, I.prototype.hex = function() {
                    this.finalize();
                    var R = this.h0, D = this.h1, O = this.h2, E = this.h3, F = this.h4, j = this.h5, M = this.h6, L = this.h7, P = u[R >>> 28 & 15] + u[R >>> 24 & 15] + u[R >>> 20 & 15] + u[R >>> 16 & 15] + u[R >>> 12 & 15] + u[R >>> 8 & 15] + u[R >>> 4 & 15] + u[R & 15] + u[D >>> 28 & 15] + u[D >>> 24 & 15] + u[D >>> 20 & 15] + u[D >>> 16 & 15] + u[D >>> 12 & 15] + u[D >>> 8 & 15] + u[D >>> 4 & 15] + u[D & 15] + u[O >>> 28 & 15] + u[O >>> 24 & 15] + u[O >>> 20 & 15] + u[O >>> 16 & 15] + u[O >>> 12 & 15] + u[O >>> 8 & 15] + u[O >>> 4 & 15] + u[O & 15] + u[E >>> 28 & 15] + u[E >>> 24 & 15] + u[E >>> 20 & 15] + u[E >>> 16 & 15] + u[E >>> 12 & 15] + u[E >>> 8 & 15] + u[E >>> 4 & 15] + u[E & 15] + u[F >>> 28 & 15] + u[F >>> 24 & 15] + u[F >>> 20 & 15] + u[F >>> 16 & 15] + u[F >>> 12 & 15] + u[F >>> 8 & 15] + u[F >>> 4 & 15] + u[F & 15] + u[j >>> 28 & 15] + u[j >>> 24 & 15] + u[j >>> 20 & 15] + u[j >>> 16 & 15] + u[j >>> 12 & 15] + u[j >>> 8 & 15] + u[j >>> 4 & 15] + u[j & 15] + u[M >>> 28 & 15] + u[M >>> 24 & 15] + u[M >>> 20 & 15] + u[M >>> 16 & 15] + u[M >>> 12 & 15] + u[M >>> 8 & 15] + u[M >>> 4 & 15] + u[M & 15];
                    return this.is224 || (P += u[L >>> 28 & 15] + u[L >>> 24 & 15] + u[L >>> 20 & 15] + u[L >>> 16 & 15] + u[L >>> 12 & 15] + u[L >>> 8 & 15] + u[L >>> 4 & 15] + u[L & 15]), P;
                }, I.prototype.toString = I.prototype.hex, I.prototype.digest = function() {
                    this.finalize();
                    var R = this.h0, D = this.h1, O = this.h2, E = this.h3, F = this.h4, j = this.h5, M = this.h6, L = this.h7, P = [
                        R >>> 24 & 255,
                        R >>> 16 & 255,
                        R >>> 8 & 255,
                        R & 255,
                        D >>> 24 & 255,
                        D >>> 16 & 255,
                        D >>> 8 & 255,
                        D & 255,
                        O >>> 24 & 255,
                        O >>> 16 & 255,
                        O >>> 8 & 255,
                        O & 255,
                        E >>> 24 & 255,
                        E >>> 16 & 255,
                        E >>> 8 & 255,
                        E & 255,
                        F >>> 24 & 255,
                        F >>> 16 & 255,
                        F >>> 8 & 255,
                        F & 255,
                        j >>> 24 & 255,
                        j >>> 16 & 255,
                        j >>> 8 & 255,
                        j & 255,
                        M >>> 24 & 255,
                        M >>> 16 & 255,
                        M >>> 8 & 255,
                        M & 255
                    ];
                    return this.is224 || P.push(L >>> 24 & 255, L >>> 16 & 255, L >>> 8 & 255, L & 255), P;
                }, I.prototype.array = I.prototype.digest, I.prototype.arrayBuffer = function() {
                    this.finalize();
                    var R = new ArrayBuffer(this.is224 ? 28 : 32), D = new DataView(R);
                    return D.setUint32(0, this.h0), D.setUint32(4, this.h1), D.setUint32(8, this.h2), D.setUint32(12, this.h3), D.setUint32(16, this.h4), D.setUint32(20, this.h5), D.setUint32(24, this.h6), this.is224 || D.setUint32(28, this.h7), R;
                };
                function C(R, D, O) {
                    var E, F = typeof R;
                    if (F === "string") {
                        var j = [], M = R.length, L = 0, P;
                        for(E = 0; E < M; ++E)P = R.charCodeAt(E), P < 128 ? j[L++] = P : P < 2048 ? (j[L++] = 192 | P >>> 6, j[L++] = 128 | P & 63) : P < 55296 || P >= 57344 ? (j[L++] = 224 | P >>> 12, j[L++] = 128 | P >>> 6 & 63, j[L++] = 128 | P & 63) : (P = 65536 + ((P & 1023) << 10 | R.charCodeAt(++E) & 1023), j[L++] = 240 | P >>> 18, j[L++] = 128 | P >>> 12 & 63, j[L++] = 128 | P >>> 6 & 63, j[L++] = 128 | P & 63);
                        R = j;
                    } else if (F === "object") {
                        if (R === null) throw new Error(t);
                        if (l && R.constructor === ArrayBuffer) R = new Uint8Array(R);
                        else if (!Array.isArray(R) && (!l || !ArrayBuffer.isView(R))) throw new Error(t);
                    } else throw new Error(t);
                    R.length > 64 && (R = new I(D, !0).update(R).array());
                    var V = [], z = [];
                    for(E = 0; E < 64; ++E){
                        var Q = R[E] || 0;
                        V[E] = 92 ^ Q, z[E] = 54 ^ Q;
                    }
                    I.call(this, D, O), this.update(z), this.oKeyPad = V, this.inner = !0, this.sharedMemory = O;
                }
                C.prototype = new I, C.prototype.finalize = function() {
                    if (I.prototype.finalize.call(this), this.inner) {
                        this.inner = !1;
                        var R = this.array();
                        I.call(this, this.is224, this.sharedMemory), this.update(this.oKeyPad), this.update(R), I.prototype.finalize.call(this);
                    }
                };
                var A = b();
                A.sha256 = A, A.sha224 = b(!0), A.sha256.hmac = _(), A.sha224.hmac = _(!0), s ? e.exports = A : (r.sha256 = A.sha256, r.sha224 = A.sha224);
            })();
        }(qb)), qb.exports;
    }
    var G0 = Gz();
    const Qz = G0.sha224, oP = ({ index: e, key: t, fallback: n })=>e[Qz(t)]?.value ?? e[t]?.value ?? n ?? t, Jz = ({ index: e, key: t, fallback: n })=>oP({
            index: e,
            key: t,
            fallback: n
        }), Zz = ({ index: e, key: t, fallback: n })=>oP({
            index: e,
            key: t,
            fallback: n
        }), Wr = {
        index: {},
        push (e) {
            this.index = {
                ...this.index,
                ...e
            };
        },
        text: (e, t)=>Jz({
                index: Wr.index,
                key: e,
                fallback: t
            }),
        rich: (e, t)=>Zz({
                index: Wr.index,
                key: e,
                fallback: t
            })
    };
    function Us(e) {
        return typeof e > "u" || e === void 0;
    }
    function li(e) {
        return typeof e == "string";
    }
    function iy(e) {
        return typeof e == "number";
    }
    function Km(e) {
        return typeof e == "boolean";
    }
    function oS(e) {
        return e === null;
    }
    function Yz(e) {
        return e instanceof Date;
    }
    function sS(e) {
        return typeof e == "bigint";
    }
    function pi(e) {
        return typeof e == "function";
    }
    function po(e) {
        return typeof e == "object" && e !== null;
    }
    function q(e) {
        return Object.freeze(e);
    }
    function kh(e) {
        return Yo(e) ? e : [
            e
        ];
    }
    function Yo(e) {
        return Array.isArray(e);
    }
    function Hs(e) {
        return e;
    }
    const Ot = q({
        is (e) {
            return e.kind === "AlterTableNode";
        },
        create (e) {
            return q({
                kind: "AlterTableNode",
                table: e
            });
        },
        cloneWithTableProps (e, t) {
            return q({
                ...e,
                ...t
            });
        },
        cloneWithColumnAlteration (e, t) {
            return q({
                ...e,
                columnAlterations: e.columnAlterations ? [
                    ...e.columnAlterations,
                    t
                ] : [
                    t
                ]
            });
        }
    }), Yt = q({
        is (e) {
            return e.kind === "IdentifierNode";
        },
        create (e) {
            return q({
                kind: "IdentifierNode",
                name: e
            });
        }
    }), zo = q({
        is (e) {
            return e.kind === "CreateIndexNode";
        },
        create (e) {
            return q({
                kind: "CreateIndexNode",
                name: Yt.create(e)
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        },
        cloneWithColumns (e, t) {
            return q({
                ...e,
                columns: [
                    ...e.columns || [],
                    ...t
                ]
            });
        }
    }), sP = q({
        is (e) {
            return e.kind === "CreateSchemaNode";
        },
        create (e, t) {
            return q({
                kind: "CreateSchemaNode",
                schema: Yt.create(e),
                ...t
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    }), Xz = [
        "preserve rows",
        "delete rows",
        "drop"
    ], Xr = q({
        is (e) {
            return e.kind === "CreateTableNode";
        },
        create (e) {
            return q({
                kind: "CreateTableNode",
                table: e,
                columns: q([])
            });
        },
        cloneWithColumn (e, t) {
            return q({
                ...e,
                columns: q([
                    ...e.columns,
                    t
                ])
            });
        },
        cloneWithConstraint (e, t) {
            return q({
                ...e,
                constraints: e.constraints ? q([
                    ...e.constraints,
                    t
                ]) : q([
                    t
                ])
            });
        },
        cloneWithFrontModifier (e, t) {
            return q({
                ...e,
                frontModifiers: e.frontModifiers ? q([
                    ...e.frontModifiers,
                    t
                ]) : q([
                    t
                ])
            });
        },
        cloneWithEndModifier (e, t) {
            return q({
                ...e,
                endModifiers: e.endModifiers ? q([
                    ...e.endModifiers,
                    t
                ]) : q([
                    t
                ])
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    }), ea = q({
        is (e) {
            return e.kind === "SchemableIdentifierNode";
        },
        create (e) {
            return q({
                kind: "SchemableIdentifierNode",
                identifier: Yt.create(e)
            });
        },
        createWithSchema (e, t) {
            return q({
                kind: "SchemableIdentifierNode",
                schema: Yt.create(e),
                identifier: Yt.create(t)
            });
        }
    }), _d = q({
        is (e) {
            return e.kind === "DropIndexNode";
        },
        create (e, t) {
            return q({
                kind: "DropIndexNode",
                name: ea.create(e),
                ...t
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    }), Q0 = q({
        is (e) {
            return e.kind === "DropSchemaNode";
        },
        create (e, t) {
            return q({
                kind: "DropSchemaNode",
                schema: Yt.create(e),
                ...t
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    }), J0 = q({
        is (e) {
            return e.kind === "DropTableNode";
        },
        create (e, t) {
            return q({
                kind: "DropTableNode",
                table: e,
                ...t
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    }), da = q({
        is (e) {
            return e.kind === "AliasNode";
        },
        create (e, t) {
            return q({
                kind: "AliasNode",
                node: e,
                alias: t
            });
        }
    }), Ks = q({
        is (e) {
            return e.kind === "TableNode";
        },
        create (e) {
            return q({
                kind: "TableNode",
                table: ea.create(e)
            });
        },
        createWithSchema (e, t) {
            return q({
                kind: "TableNode",
                table: ea.createWithSchema(e, t)
            });
        }
    });
    function Vr(e) {
        return po(e) && pi(e.toOperationNode);
    }
    function eW(e) {
        return po(e) && "expressionType" in e && Vr(e);
    }
    function tW(e) {
        return po(e) && "expression" in e && li(e.alias) && Vr(e);
    }
    const Lo = q({
        is (e) {
            return e.kind === "SelectModifierNode";
        },
        create (e, t) {
            return q({
                kind: "SelectModifierNode",
                modifier: e,
                of: t
            });
        },
        createWithExpression (e) {
            return q({
                kind: "SelectModifierNode",
                rawModifier: e
            });
        }
    }), ta = q({
        is (e) {
            return e.kind === "AndNode";
        },
        create (e, t) {
            return q({
                kind: "AndNode",
                left: e,
                right: t
            });
        }
    }), iu = q({
        is (e) {
            return e.kind === "OrNode";
        },
        create (e, t) {
            return q({
                kind: "OrNode",
                left: e,
                right: t
            });
        }
    }), Bb = q({
        is (e) {
            return e.kind === "OnNode";
        },
        create (e) {
            return q({
                kind: "OnNode",
                on: e
            });
        },
        cloneWithOperation (e, t, n) {
            return q({
                ...e,
                on: t === "And" ? ta.create(e.on, n) : iu.create(e.on, n)
            });
        }
    }), Ed = q({
        is (e) {
            return e.kind === "JoinNode";
        },
        create (e, t) {
            return q({
                kind: "JoinNode",
                joinType: e,
                table: t,
                on: void 0
            });
        },
        createWithOn (e, t, n) {
            return q({
                kind: "JoinNode",
                joinType: e,
                table: t,
                on: Bb.create(n)
            });
        },
        cloneWithOn (e, t) {
            return q({
                ...e,
                on: e.on ? Bb.cloneWithOperation(e.on, "And", t) : Bb.create(t)
            });
        }
    }), Dc = q({
        is (e) {
            return e.kind === "BinaryOperationNode";
        },
        create (e, t, n) {
            return q({
                kind: "BinaryOperationNode",
                leftOperand: e,
                operator: t,
                rightOperand: n
            });
        }
    }), nW = [
        "=",
        "==",
        "!=",
        "<>",
        ">",
        ">=",
        "<",
        "<=",
        "in",
        "not in",
        "is",
        "is not",
        "like",
        "not like",
        "match",
        "ilike",
        "not ilike",
        "@>",
        "<@",
        "^@",
        "&&",
        "?",
        "?&",
        "?|",
        "!<",
        "!>",
        "<=>",
        "!~",
        "~",
        "~*",
        "!~*",
        "@@",
        "@@@",
        "!!",
        "<->",
        "regexp",
        "is distinct from",
        "is not distinct from"
    ], rW = [
        "+",
        "-",
        "*",
        "/",
        "%",
        "^",
        "&",
        "|",
        "#",
        "<<",
        ">>"
    ], aP = [
        "->",
        "->>"
    ], iW = [
        ...nW,
        ...rW,
        "&&",
        "||"
    ], oW = [
        "exists",
        "not exists"
    ], sW = [
        "not",
        "-",
        ...oW
    ], aW = [
        ...iW,
        ...aP,
        ...sW,
        "between",
        "between symmetric"
    ], na = q({
        is (e) {
            return e.kind === "OperatorNode";
        },
        create (e) {
            return q({
                kind: "OperatorNode",
                operator: e
            });
        }
    });
    function kk(e) {
        return li(e) && aP.includes(e);
    }
    const In = q({
        is (e) {
            return e.kind === "ColumnNode";
        },
        create (e) {
            return q({
                kind: "ColumnNode",
                column: Yt.create(e)
            });
        }
    }), aS = q({
        is (e) {
            return e.kind === "SelectAllNode";
        },
        create () {
            return q({
                kind: "SelectAllNode"
            });
        }
    }), oy = q({
        is (e) {
            return e.kind === "ReferenceNode";
        },
        create (e, t) {
            return q({
                kind: "ReferenceNode",
                table: t,
                column: e
            });
        },
        createSelectAll (e) {
            return q({
                kind: "ReferenceNode",
                table: e,
                column: aS.create()
            });
        }
    });
    class lW {
        #e;
        get dynamicReference() {
            return this.#e;
        }
        get refType() {}
        constructor(t){
            this.#e = t;
        }
        toOperationNode() {
            return fP(this.#e);
        }
    }
    function lP(e) {
        return po(e) && Vr(e) && li(e.dynamicReference);
    }
    const Z0 = q({
        is (e) {
            return e.kind === "OrderByItemNode";
        },
        create (e, t) {
            return q({
                kind: "OrderByItemNode",
                orderBy: e,
                direction: t
            });
        }
    }), sr = q({
        is (e) {
            return e.kind === "RawNode";
        },
        create (e, t) {
            return q({
                kind: "RawNode",
                sqlFragments: q(e),
                parameters: q(t)
            });
        },
        createWithSql (e) {
            return sr.create([
                e
            ], []);
        },
        createWithChild (e) {
            return sr.create([
                "",
                ""
            ], [
                e
            ]);
        },
        createWithChildren (e) {
            return sr.create(new Array(e.length + 1).fill(""), e);
        }
    });
    function cP(e) {
        return e === "asc" || e === "desc";
    }
    function Rf(e) {
        if (e.length === 2) return [
            zb(e[0], e[1])
        ];
        if (e.length === 1) {
            const [t] = e;
            return Array.isArray(t) ? t.map((n)=>zb(n)) : [
                zb(t)
            ];
        }
        throw new Error(`Invalid number of arguments at order by! expected 1-2, received ${e.length}`);
    }
    function zb(e, t) {
        const n = cW(e);
        if (Z0.is(n)) {
            if (t) throw new Error("Cannot specify direction twice!");
            return n;
        }
        return Z0.create(n, uP(t));
    }
    function cW(e) {
        if (Ff(e)) return vl(e);
        if (lP(e)) return e.toOperationNode();
        const [t, n] = e.split(" ");
        if (n) {
            if (!cP(n)) throw new Error(`Invalid order by direction: ${n}`);
            return Z0.create(Xo(t), uP(n));
        }
        return Xo(e);
    }
    function uP(e) {
        if (e) return e === "asc" || e === "desc" ? sr.createWithSql(e) : e.toOperationNode();
    }
    const Gm = q({
        is (e) {
            return e.kind === "JSONReferenceNode";
        },
        create (e, t) {
            return q({
                kind: "JSONReferenceNode",
                reference: e,
                traversal: t
            });
        },
        cloneWithTraversal (e, t) {
            return q({
                ...e,
                traversal: t
            });
        }
    }), dP = q({
        is (e) {
            return e.kind === "JSONOperatorChainNode";
        },
        create (e) {
            return q({
                kind: "JSONOperatorChainNode",
                operator: e,
                values: q([])
            });
        },
        cloneWithValue (e, t) {
            return q({
                ...e,
                values: q([
                    ...e.values,
                    t
                ])
            });
        }
    }), kd = q({
        is (e) {
            return e.kind === "JSONPathNode";
        },
        create (e) {
            return q({
                kind: "JSONPathNode",
                inOperator: e,
                pathLegs: q([])
            });
        },
        cloneWithLeg (e, t) {
            return q({
                ...e,
                pathLegs: q([
                    ...e.pathLegs,
                    t
                ])
            });
        }
    });
    function fP(e) {
        return li(e) ? Xo(e) : e.toOperationNode();
    }
    function qd(e) {
        return Yo(e) ? e.map((t)=>ri(t)) : [
            ri(e)
        ];
    }
    function ri(e) {
        return Ff(e) ? vl(e) : fP(e);
    }
    function uW(e, t) {
        const n = Xo(e);
        if (kk(t)) return Gm.create(n, dP.create(na.create(t)));
        const r = t.slice(0, -1);
        if (kk(r)) return Gm.create(n, kd.create(na.create(r)));
        throw new Error(`Invalid JSON operator: ${t}`);
    }
    function Xo(e) {
        const t = ".";
        if (!e.includes(t)) return oy.create(In.create(e));
        const n = e.split(t).map(lS);
        if (n.length === 3) return fW(n);
        if (n.length === 2) return pW(n);
        throw new Error(`invalid column reference ${e}`);
    }
    function dW(e) {
        const t = " as ";
        if (e.includes(t)) {
            const [n, r] = e.split(t).map(lS);
            return da.create(Xo(n), Yt.create(r));
        } else return Xo(e);
    }
    function pP(e) {
        return In.create(e);
    }
    function Qm(e) {
        const t = " ";
        if (e.includes(t)) {
            const [n, r] = e.split(t).map(lS);
            if (!cP(r)) throw new Error(`invalid order direction "${r}" next to "${n}"`);
            return Rf([
                n,
                r
            ])[0];
        } else return pP(e);
    }
    function fW(e) {
        const [t, n, r] = e;
        return oy.create(In.create(r), Ks.createWithSchema(t, n));
    }
    function pW(e) {
        const [t, n] = e;
        return oy.create(In.create(n), Ks.create(t));
    }
    function lS(e) {
        return e.trim();
    }
    const hP = q({
        is (e) {
            return e.kind === "PrimitiveValueListNode";
        },
        create (e) {
            return q({
                kind: "PrimitiveValueListNode",
                values: q([
                    ...e
                ])
            });
        }
    }), cS = q({
        is (e) {
            return e.kind === "ValueListNode";
        },
        create (e) {
            return q({
                kind: "ValueListNode",
                values: q(e)
            });
        }
    }), wo = q({
        is (e) {
            return e.kind === "ValueNode";
        },
        create (e) {
            return q({
                kind: "ValueNode",
                value: e
            });
        },
        createImmediate (e) {
            return q({
                kind: "ValueNode",
                value: e,
                immediate: !0
            });
        }
    });
    function hW(e) {
        return Yo(e) ? mW(e) : Cn(e);
    }
    function Cn(e) {
        return Ff(e) ? vl(e) : wo.create(e);
    }
    function uS(e) {
        return iy(e) || Km(e) || oS(e);
    }
    function dS(e) {
        if (!uS(e)) throw new Error(`unsafe immediate value ${JSON.stringify(e)}`);
        return wo.createImmediate(e);
    }
    function mW(e) {
        return e.some(Ff) ? cS.create(e.map((t)=>Cn(t))) : hP.create(e);
    }
    const Mc = q({
        is (e) {
            return e.kind === "ParensNode";
        },
        create (e) {
            return q({
                kind: "ParensNode",
                node: e
            });
        }
    });
    function Xn(e) {
        if (e.length === 3) return fS(e[0], e[1], e[2]);
        if (e.length === 1) return Cn(e[0]);
        throw new Error(`invalid arguments: ${JSON.stringify(e)}`);
    }
    function fS(e, t, n) {
        return gW(t) && mP(n) ? Dc.create(ri(e), Y0(t), wo.createImmediate(n)) : Dc.create(ri(e), Y0(t), hW(n));
    }
    function No(e, t, n) {
        return Dc.create(ri(e), Y0(t), ri(n));
    }
    function Ck(e, t) {
        return Jm(Object.entries(e).filter(([, n])=>!Us(n)).map(([n, r])=>fS(n, mP(r) ? "is" : "=", r)), t);
    }
    function Jm(e, t, n = !0) {
        const r = t === "and" ? ta.create : iu.create;
        if (e.length === 0) return Dc.create(wo.createImmediate(1), na.create("="), wo.createImmediate(t === "and" ? 1 : 0));
        let i = jk(e[0]);
        for(let o = 1; o < e.length; ++o)i = r(i, jk(e[o]));
        return e.length > 1 && n ? Mc.create(i) : i;
    }
    function gW(e) {
        return e === "is" || e === "is not";
    }
    function mP(e) {
        return oS(e) || Km(e);
    }
    function Y0(e) {
        if (li(e) && aW.includes(e)) return na.create(e);
        if (Vr(e)) return e.toOperationNode();
        throw new Error(`invalid operator ${JSON.stringify(e)}`);
    }
    function jk(e) {
        return Vr(e) ? e.toOperationNode() : e;
    }
    const ra = q({
        is (e) {
            return e.kind === "OrderByNode";
        },
        create (e) {
            return q({
                kind: "OrderByNode",
                items: q([
                    ...e
                ])
            });
        },
        cloneWithItems (e, t) {
            return q({
                ...e,
                items: q([
                    ...e.items,
                    ...t
                ])
            });
        }
    }), Rk = q({
        is (e) {
            return e.kind === "PartitionByNode";
        },
        create (e) {
            return q({
                kind: "PartitionByNode",
                items: q(e)
            });
        },
        cloneWithItems (e, t) {
            return q({
                ...e,
                items: q([
                    ...e.items,
                    ...t
                ])
            });
        }
    }), X0 = q({
        is (e) {
            return e.kind === "OverNode";
        },
        create () {
            return q({
                kind: "OverNode"
            });
        },
        cloneWithOrderByItems (e, t) {
            return q({
                ...e,
                orderBy: e.orderBy ? ra.cloneWithItems(e.orderBy, t) : ra.create(t)
            });
        },
        cloneWithPartitionByItems (e, t) {
            return q({
                ...e,
                partitionBy: e.partitionBy ? Rk.cloneWithItems(e.partitionBy, t) : Rk.create(t)
            });
        }
    }), Zm = q({
        is (e) {
            return e.kind === "FromNode";
        },
        create (e) {
            return q({
                kind: "FromNode",
                froms: q(e)
            });
        },
        cloneWithFroms (e, t) {
            return q({
                ...e,
                froms: q([
                    ...e.froms,
                    ...t
                ])
            });
        }
    }), Ok = q({
        is (e) {
            return e.kind === "GroupByNode";
        },
        create (e) {
            return q({
                kind: "GroupByNode",
                items: q(e)
            });
        },
        cloneWithItems (e, t) {
            return q({
                ...e,
                items: q([
                    ...e.items,
                    ...t
                ])
            });
        }
    }), Tk = q({
        is (e) {
            return e.kind === "HavingNode";
        },
        create (e) {
            return q({
                kind: "HavingNode",
                having: e
            });
        },
        cloneWithOperation (e, t, n) {
            return q({
                ...e,
                having: t === "And" ? ta.create(e.having, n) : iu.create(e.having, n)
            });
        }
    }), Rt = q({
        is (e) {
            return e.kind === "SelectQueryNode";
        },
        create (e) {
            return q({
                kind: "SelectQueryNode",
                ...e && {
                    with: e
                }
            });
        },
        createFrom (e, t) {
            return q({
                kind: "SelectQueryNode",
                from: Zm.create(e),
                ...t && {
                    with: t
                }
            });
        },
        cloneWithSelections (e, t) {
            return q({
                ...e,
                selections: e.selections ? q([
                    ...e.selections,
                    ...t
                ]) : q(t)
            });
        },
        cloneWithDistinctOn (e, t) {
            return q({
                ...e,
                distinctOn: e.distinctOn ? q([
                    ...e.distinctOn,
                    ...t
                ]) : q(t)
            });
        },
        cloneWithFrontModifier (e, t) {
            return q({
                ...e,
                frontModifiers: e.frontModifiers ? q([
                    ...e.frontModifiers,
                    t
                ]) : q([
                    t
                ])
            });
        },
        cloneWithOrderByItems (e, t) {
            return q({
                ...e,
                orderBy: e.orderBy ? ra.cloneWithItems(e.orderBy, t) : ra.create(t)
            });
        },
        cloneWithGroupByItems (e, t) {
            return q({
                ...e,
                groupBy: e.groupBy ? Ok.cloneWithItems(e.groupBy, t) : Ok.create(t)
            });
        },
        cloneWithLimit (e, t) {
            return q({
                ...e,
                limit: t
            });
        },
        cloneWithOffset (e, t) {
            return q({
                ...e,
                offset: t
            });
        },
        cloneWithFetch (e, t) {
            return q({
                ...e,
                fetch: t
            });
        },
        cloneWithHaving (e, t) {
            return q({
                ...e,
                having: e.having ? Tk.cloneWithOperation(e.having, "And", t) : Tk.create(t)
            });
        },
        cloneWithSetOperations (e, t) {
            return q({
                ...e,
                setOperations: e.setOperations ? q([
                    ...e.setOperations,
                    ...t
                ]) : q([
                    ...t
                ])
            });
        },
        cloneWithoutSelections (e) {
            return q({
                ...e,
                selections: []
            });
        },
        cloneWithoutLimit (e) {
            return q({
                ...e,
                limit: void 0
            });
        },
        cloneWithoutOffset (e) {
            return q({
                ...e,
                offset: void 0
            });
        },
        cloneWithoutOrderBy (e) {
            return q({
                ...e,
                orderBy: void 0
            });
        },
        cloneWithoutGroupBy (e) {
            return q({
                ...e,
                groupBy: void 0
            });
        }
    });
    function pt(e, t) {
        Object.defineProperties(e.prototype, {
            then: {
                enumerable: !1,
                value: ()=>{
                    throw new Error(t);
                }
            }
        });
    }
    class Sc {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        on(...t) {
            return new Sc({
                ...this.#e,
                joinNode: Ed.cloneWithOn(this.#e.joinNode, Xn(t))
            });
        }
        onRef(t, n, r) {
            return new Sc({
                ...this.#e,
                joinNode: Ed.cloneWithOn(this.#e.joinNode, No(t, n, r))
            });
        }
        onTrue() {
            return new Sc({
                ...this.#e,
                joinNode: Ed.cloneWithOn(this.#e.joinNode, sr.createWithSql("true"))
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.joinNode;
        }
    }
    pt(Sc, "don't await JoinBuilder instances. They are never executed directly and are always just a part of a query.");
    const yW = q({
        is (e) {
            return e.kind === "PartitionByItemNode";
        },
        create (e) {
            return q({
                kind: "PartitionByItemNode",
                partitionBy: e
            });
        }
    });
    function vW(e) {
        return qd(e).map(yW.create);
    }
    class Bd {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        orderBy(t, n) {
            return new Bd({
                overNode: X0.cloneWithOrderByItems(this.#e.overNode, Rf([
                    t,
                    n
                ]))
            });
        }
        partitionBy(t) {
            return new Bd({
                overNode: X0.cloneWithPartitionByItems(this.#e.overNode, vW(t))
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.overNode;
        }
    }
    pt(Bd, "don't await OverBuilder instances. They are never executed directly and are always just a part of a query.");
    const Cd = q({
        is (e) {
            return e.kind === "SelectionNode";
        },
        create (e) {
            return q({
                kind: "SelectionNode",
                selection: e
            });
        },
        createSelectAll () {
            return q({
                kind: "SelectionNode",
                selection: aS.create()
            });
        },
        createSelectAllFromTable (e) {
            return q({
                kind: "SelectionNode",
                selection: oy.createSelectAll(e)
            });
        }
    });
    function Zi(e) {
        return pi(e) ? Zi(e(su())) : Yo(e) ? e.map((t)=>Pk(t)) : [
            Pk(e)
        ];
    }
    function Pk(e) {
        return li(e) ? Cd.create(dW(e)) : lP(e) ? Cd.create(e.toOperationNode()) : Cd.create(CP(e));
    }
    function So(e) {
        return e ? Array.isArray(e) ? e.map(Ak) : [
            Ak(e)
        ] : [
            Cd.createSelectAll()
        ];
    }
    function Ak(e) {
        if (li(e)) return Cd.createSelectAllFromTable(wn(e));
        throw new Error(`invalid value selectAll expression: ${JSON.stringify(e)}`);
    }
    const xW = q({
        is (e) {
            return e.kind === "ValuesNode";
        },
        create (e) {
            return q({
                kind: "ValuesNode",
                values: q(e)
            });
        }
    }), bW = q({
        is (e) {
            return e.kind === "DefaultInsertValueNode";
        },
        create () {
            return q({
                kind: "DefaultInsertValueNode"
            });
        }
    });
    function gP(e) {
        const t = pi(e) ? e(su()) : e, n = Yo(t) ? t : q([
            t
        ]);
        return wW(n);
    }
    function wW(e) {
        const t = NW(e);
        return [
            q([
                ...t.keys()
            ].map(In.create)),
            xW.create(e.map((n)=>SW(n, t)))
        ];
    }
    function NW(e) {
        const t = new Map;
        for (const n of e){
            const r = Object.keys(n);
            for (const i of r)!t.has(i) && n[i] !== void 0 && t.set(i, t.size);
        }
        return t;
    }
    function SW(e, t) {
        const n = Object.keys(e), r = Array.from({
            length: t.size
        });
        let i = !1;
        for (const s of n){
            const l = t.get(s);
            if (Us(l)) continue;
            const u = e[s];
            (Us(u) || Ff(u)) && (i = !0), r[l] = u;
        }
        if (n.length < t.size || i) {
            const s = bW.create();
            return cS.create(r.map((l)=>Us(l) ? s : Cn(l)));
        }
        return hP.create(r);
    }
    const ti = q({
        is (e) {
            return e.kind === "InsertQueryNode";
        },
        create (e, t, n) {
            return q({
                kind: "InsertQueryNode",
                into: e,
                ...t && {
                    with: t
                },
                replace: n
            });
        },
        createWithoutInto () {
            return q({
                kind: "InsertQueryNode"
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    }), Ic = q({
        is (e) {
            return e.kind === "UpdateQueryNode";
        },
        create (e, t) {
            return q({
                kind: "UpdateQueryNode",
                table: e,
                ...t && {
                    with: t
                }
            });
        },
        createWithoutTable () {
            return q({
                kind: "UpdateQueryNode"
            });
        },
        cloneWithFromItems (e, t) {
            return q({
                ...e,
                from: e.from ? Zm.cloneWithFroms(e.from, t) : Zm.create(t)
            });
        },
        cloneWithUpdates (e, t) {
            return q({
                ...e,
                updates: e.updates ? q([
                    ...e.updates,
                    ...t
                ]) : t
            });
        },
        cloneWithLimit (e, t) {
            return q({
                ...e,
                limit: t
            });
        }
    }), Fk = q({
        is (e) {
            return e.kind === "UsingNode";
        },
        create (e) {
            return q({
                kind: "UsingNode",
                tables: q(e)
            });
        },
        cloneWithTables (e, t) {
            return q({
                ...e,
                tables: q([
                    ...e.tables,
                    ...t
                ])
            });
        }
    }), za = q({
        is (e) {
            return e.kind === "DeleteQueryNode";
        },
        create (e, t) {
            return q({
                kind: "DeleteQueryNode",
                from: Zm.create(e),
                ...t && {
                    with: t
                }
            });
        },
        cloneWithOrderByItems (e, t) {
            return q({
                ...e,
                orderBy: e.orderBy ? ra.cloneWithItems(e.orderBy, t) : ra.create(t)
            });
        },
        cloneWithoutOrderBy (e) {
            return q({
                ...e,
                orderBy: void 0
            });
        },
        cloneWithLimit (e, t) {
            return q({
                ...e,
                limit: t
            });
        },
        cloneWithoutLimit (e) {
            return q({
                ...e,
                limit: void 0
            });
        },
        cloneWithUsing (e, t) {
            return q({
                ...e,
                using: e.using !== void 0 ? Fk.cloneWithTables(e.using, t) : Fk.create(t)
            });
        }
    }), Mr = q({
        is (e) {
            return e.kind === "WhereNode";
        },
        create (e) {
            return q({
                kind: "WhereNode",
                where: e
            });
        },
        cloneWithOperation (e, t, n) {
            return q({
                ...e,
                where: t === "And" ? ta.create(e.where, n) : iu.create(e.where, n)
            });
        }
    }), Dk = q({
        is (e) {
            return e.kind === "ReturningNode";
        },
        create (e) {
            return q({
                kind: "ReturningNode",
                selections: q(e)
            });
        },
        cloneWithSelections (e, t) {
            return q({
                ...e,
                selections: e.selections ? q([
                    ...e.selections,
                    ...t
                ]) : q(t)
            });
        }
    }), IW = q({
        is (e) {
            return e.kind === "ExplainNode";
        },
        create (e, t) {
            return q({
                kind: "ExplainNode",
                format: e,
                options: t
            });
        }
    }), Of = q({
        is (e) {
            return e.kind === "WhenNode";
        },
        create (e) {
            return q({
                kind: "WhenNode",
                condition: e
            });
        },
        cloneWithResult (e, t) {
            return q({
                ...e,
                result: t
            });
        }
    }), $r = q({
        is (e) {
            return e.kind === "MergeQueryNode";
        },
        create (e, t) {
            return q({
                kind: "MergeQueryNode",
                into: e,
                ...t && {
                    with: t
                }
            });
        },
        cloneWithUsing (e, t) {
            return q({
                ...e,
                using: t
            });
        },
        cloneWithWhen (e, t) {
            return q({
                ...e,
                whens: e.whens ? q([
                    ...e.whens,
                    t
                ]) : q([
                    t
                ])
            });
        },
        cloneWithThen (e, t) {
            return q({
                ...e,
                whens: e.whens ? q([
                    ...e.whens.slice(0, -1),
                    Of.cloneWithResult(e.whens[e.whens.length - 1], t)
                ]) : void 0
            });
        }
    }), Mk = q({
        is (e) {
            return e.kind === "OutputNode";
        },
        create (e) {
            return q({
                kind: "OutputNode",
                selections: q(e)
            });
        },
        cloneWithSelections (e, t) {
            return q({
                ...e,
                selections: e.selections ? q([
                    ...e.selections,
                    ...t
                ]) : q(t)
            });
        }
    }), qe = q({
        is (e) {
            return Rt.is(e) || ti.is(e) || Ic.is(e) || za.is(e) || $r.is(e);
        },
        cloneWithEndModifier (e, t) {
            return q({
                ...e,
                endModifiers: e.endModifiers ? q([
                    ...e.endModifiers,
                    t
                ]) : q([
                    t
                ])
            });
        },
        cloneWithWhere (e, t) {
            return q({
                ...e,
                where: e.where ? Mr.cloneWithOperation(e.where, "And", t) : Mr.create(t)
            });
        },
        cloneWithJoin (e, t) {
            return q({
                ...e,
                joins: e.joins ? q([
                    ...e.joins,
                    t
                ]) : q([
                    t
                ])
            });
        },
        cloneWithReturning (e, t) {
            return q({
                ...e,
                returning: e.returning ? Dk.cloneWithSelections(e.returning, t) : Dk.create(t)
            });
        },
        cloneWithoutReturning (e) {
            return q({
                ...e,
                returning: void 0
            });
        },
        cloneWithoutWhere (e) {
            return q({
                ...e,
                where: void 0
            });
        },
        cloneWithExplain (e, t, n) {
            return q({
                ...e,
                explain: IW.create(t, n?.toOperationNode())
            });
        },
        cloneWithTop (e, t) {
            return q({
                ...e,
                top: t
            });
        },
        cloneWithOutput (e, t) {
            return q({
                ...e,
                output: e.output ? Mk.cloneWithSelections(e.output, t) : Mk.create(t)
            });
        }
    }), yP = q({
        is (e) {
            return e.kind === "ColumnUpdateNode";
        },
        create (e, t) {
            return q({
                kind: "ColumnUpdateNode",
                column: e,
                value: t
            });
        }
    });
    function _W(...e) {
        return e.length === 2 ? [
            yP.create(ri(e[0]), Cn(e[1]))
        ] : pS(e[0]);
    }
    function pS(e) {
        const t = pi(e) ? e(su()) : e;
        return Object.entries(t).filter(([n, r])=>r !== void 0).map(([n, r])=>yP.create(In.create(n), Cn(r)));
    }
    const EW = q({
        is (e) {
            return e.kind === "OnDuplicateKeyNode";
        },
        create (e) {
            return q({
                kind: "OnDuplicateKeyNode",
                updates: e
            });
        }
    });
    class kW {
        insertId;
        numInsertedOrUpdatedRows;
        constructor(t, n){
            this.insertId = t, this.numInsertedOrUpdatedRows = n;
        }
    }
    class Tf extends Error {
        node;
        constructor(t){
            super("no result"), this.node = t;
        }
    }
    function Pf(e) {
        return Object.prototype.hasOwnProperty.call(e, "prototype");
    }
    const ei = q({
        is (e) {
            return e.kind === "OnConflictNode";
        },
        create () {
            return q({
                kind: "OnConflictNode"
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        },
        cloneWithIndexWhere (e, t) {
            return q({
                ...e,
                indexWhere: e.indexWhere ? Mr.cloneWithOperation(e.indexWhere, "And", t) : Mr.create(t)
            });
        },
        cloneWithIndexOrWhere (e, t) {
            return q({
                ...e,
                indexWhere: e.indexWhere ? Mr.cloneWithOperation(e.indexWhere, "Or", t) : Mr.create(t)
            });
        },
        cloneWithUpdateWhere (e, t) {
            return q({
                ...e,
                updateWhere: e.updateWhere ? Mr.cloneWithOperation(e.updateWhere, "And", t) : Mr.create(t)
            });
        },
        cloneWithUpdateOrWhere (e, t) {
            return q({
                ...e,
                updateWhere: e.updateWhere ? Mr.cloneWithOperation(e.updateWhere, "Or", t) : Mr.create(t)
            });
        },
        cloneWithoutIndexWhere (e) {
            return q({
                ...e,
                indexWhere: void 0
            });
        },
        cloneWithoutUpdateWhere (e) {
            return q({
                ...e,
                updateWhere: void 0
            });
        }
    });
    class fo {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        column(t) {
            const n = In.create(t);
            return new fo({
                ...this.#e,
                onConflictNode: ei.cloneWith(this.#e.onConflictNode, {
                    columns: this.#e.onConflictNode.columns ? q([
                        ...this.#e.onConflictNode.columns,
                        n
                    ]) : q([
                        n
                    ])
                })
            });
        }
        columns(t) {
            const n = t.map(In.create);
            return new fo({
                ...this.#e,
                onConflictNode: ei.cloneWith(this.#e.onConflictNode, {
                    columns: this.#e.onConflictNode.columns ? q([
                        ...this.#e.onConflictNode.columns,
                        ...n
                    ]) : q(n)
                })
            });
        }
        constraint(t) {
            return new fo({
                ...this.#e,
                onConflictNode: ei.cloneWith(this.#e.onConflictNode, {
                    constraint: Yt.create(t)
                })
            });
        }
        expression(t) {
            return new fo({
                ...this.#e,
                onConflictNode: ei.cloneWith(this.#e.onConflictNode, {
                    indexExpression: t.toOperationNode()
                })
            });
        }
        where(...t) {
            return new fo({
                ...this.#e,
                onConflictNode: ei.cloneWithIndexWhere(this.#e.onConflictNode, Xn(t))
            });
        }
        whereRef(t, n, r) {
            return new fo({
                ...this.#e,
                onConflictNode: ei.cloneWithIndexWhere(this.#e.onConflictNode, No(t, n, r))
            });
        }
        clearWhere() {
            return new fo({
                ...this.#e,
                onConflictNode: ei.cloneWithoutIndexWhere(this.#e.onConflictNode)
            });
        }
        doNothing() {
            return new vP({
                ...this.#e,
                onConflictNode: ei.cloneWith(this.#e.onConflictNode, {
                    doNothing: !0
                })
            });
        }
        doUpdateSet(t) {
            return new _c({
                ...this.#e,
                onConflictNode: ei.cloneWith(this.#e.onConflictNode, {
                    updates: pS(t)
                })
            });
        }
        $call(t) {
            return t(this);
        }
    }
    pt(fo, "don't await OnConflictBuilder instances.");
    class vP {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        toOperationNode() {
            return this.#e.onConflictNode;
        }
    }
    pt(vP, "don't await OnConflictDoNothingBuilder instances.");
    class _c {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        where(...t) {
            return new _c({
                ...this.#e,
                onConflictNode: ei.cloneWithUpdateWhere(this.#e.onConflictNode, Xn(t))
            });
        }
        whereRef(t, n, r) {
            return new _c({
                ...this.#e,
                onConflictNode: ei.cloneWithUpdateWhere(this.#e.onConflictNode, No(t, n, r))
            });
        }
        clearWhere() {
            return new _c({
                ...this.#e,
                onConflictNode: ei.cloneWithoutUpdateWhere(this.#e.onConflictNode)
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.onConflictNode;
        }
    }
    pt(_c, "don't await OnConflictUpdateBuilder instances.");
    const CW = q({
        is (e) {
            return e.kind === "TopNode";
        },
        create (e, t) {
            return q({
                kind: "TopNode",
                expression: e,
                modifiers: t
            });
        }
    });
    function ou(e, t) {
        if (!iy(e) && !sS(e)) throw new Error(`Invalid top expression: ${e}`);
        if (!Us(t) && !jW(t)) throw new Error(`Invalid top modifiers: ${t}`);
        return CW.create(e, t);
    }
    function jW(e) {
        return e === "percent" || e === "with ties" || e === "percent with ties";
    }
    class Jt {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        values(t) {
            const [n, r] = gP(t);
            return new Jt({
                ...this.#e,
                queryNode: ti.cloneWith(this.#e.queryNode, {
                    columns: n,
                    values: r
                })
            });
        }
        columns(t) {
            return new Jt({
                ...this.#e,
                queryNode: ti.cloneWith(this.#e.queryNode, {
                    columns: q(t.map(In.create))
                })
            });
        }
        expression(t) {
            return new Jt({
                ...this.#e,
                queryNode: ti.cloneWith(this.#e.queryNode, {
                    values: vl(t)
                })
            });
        }
        defaultValues() {
            return new Jt({
                ...this.#e,
                queryNode: ti.cloneWith(this.#e.queryNode, {
                    defaultValues: !0
                })
            });
        }
        modifyEnd(t) {
            return new Jt({
                ...this.#e,
                queryNode: qe.cloneWithEndModifier(this.#e.queryNode, t.toOperationNode())
            });
        }
        ignore() {
            return new Jt({
                ...this.#e,
                queryNode: ti.cloneWith(this.#e.queryNode, {
                    ignore: !0
                })
            });
        }
        top(t, n) {
            return new Jt({
                ...this.#e,
                queryNode: qe.cloneWithTop(this.#e.queryNode, ou(t, n))
            });
        }
        onConflict(t) {
            return new Jt({
                ...this.#e,
                queryNode: ti.cloneWith(this.#e.queryNode, {
                    onConflict: t(new fo({
                        onConflictNode: ei.create()
                    })).toOperationNode()
                })
            });
        }
        onDuplicateKeyUpdate(t) {
            return new Jt({
                ...this.#e,
                queryNode: ti.cloneWith(this.#e.queryNode, {
                    onDuplicateKey: EW.create(pS(t))
                })
            });
        }
        returning(t) {
            return new Jt({
                ...this.#e,
                queryNode: qe.cloneWithReturning(this.#e.queryNode, Zi(t))
            });
        }
        returningAll() {
            return new Jt({
                ...this.#e,
                queryNode: qe.cloneWithReturning(this.#e.queryNode, So())
            });
        }
        output(t) {
            return new Jt({
                ...this.#e,
                queryNode: qe.cloneWithOutput(this.#e.queryNode, Zi(t))
            });
        }
        outputAll(t) {
            return new Jt({
                ...this.#e,
                queryNode: qe.cloneWithOutput(this.#e.queryNode, So(t))
            });
        }
        clearReturning() {
            return new Jt({
                ...this.#e,
                queryNode: qe.cloneWithoutReturning(this.#e.queryNode)
            });
        }
        $call(t) {
            return t(this);
        }
        $if(t, n) {
            return t ? n(this) : new Jt({
                ...this.#e
            });
        }
        $castTo() {
            return new Jt(this.#e);
        }
        $narrowType() {
            return new Jt(this.#e);
        }
        $assertType() {
            return new Jt(this.#e);
        }
        withPlugin(t) {
            return new Jt({
                ...this.#e,
                executor: this.#e.executor.withPlugin(t)
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const t = this.compile(), n = await this.#e.executor.executeQuery(t, this.#e.queryId), { adapter: r } = this.#e.executor, i = t.query;
            return i.returning && r.supportsReturning || i.output && r.supportsOutput ? n.rows : [
                new kW(n.insertId, n.numAffectedRows ?? n.numUpdatedOrDeletedRows)
            ];
        }
        async executeTakeFirst() {
            const [t] = await this.execute();
            return t;
        }
        async executeTakeFirstOrThrow(t = Tf) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw Pf(t) ? new t(this.toOperationNode()) : t(this.toOperationNode());
            return n;
        }
        async *stream(t = 100) {
            const n = this.compile(), r = this.#e.executor.stream(n, t, this.#e.queryId);
            for await (const i of r)yield* i.rows;
        }
        async explain(t, n) {
            return await new Jt({
                ...this.#e,
                queryNode: qe.cloneWithExplain(this.#e.queryNode, t, n)
            }).execute();
        }
    }
    pt(Jt, "don't await InsertQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
    class RW {
        numDeletedRows;
        constructor(t){
            this.numDeletedRows = t;
        }
    }
    const hS = q({
        is (e) {
            return e.kind === "LimitNode";
        },
        create (e) {
            return q({
                kind: "LimitNode",
                limit: e
            });
        }
    });
    class jt {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        where(...t) {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithWhere(this.#e.queryNode, Xn(t))
            });
        }
        whereRef(t, n, r) {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithWhere(this.#e.queryNode, No(t, n, r))
            });
        }
        clearWhere() {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithoutWhere(this.#e.queryNode)
            });
        }
        top(t, n) {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithTop(this.#e.queryNode, ou(t, n))
            });
        }
        using(t) {
            return new jt({
                ...this.#e,
                queryNode: za.cloneWithUsing(this.#e.queryNode, Vd(t))
            });
        }
        innerJoin(...t) {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("InnerJoin", t))
            });
        }
        leftJoin(...t) {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("LeftJoin", t))
            });
        }
        rightJoin(...t) {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("RightJoin", t))
            });
        }
        fullJoin(...t) {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("FullJoin", t))
            });
        }
        returning(t) {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithReturning(this.#e.queryNode, Zi(t))
            });
        }
        returningAll(t) {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithReturning(this.#e.queryNode, So(t))
            });
        }
        output(t) {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithOutput(this.#e.queryNode, Zi(t))
            });
        }
        outputAll(t) {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithOutput(this.#e.queryNode, So(t))
            });
        }
        clearReturning() {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithoutReturning(this.#e.queryNode)
            });
        }
        clearLimit() {
            return new jt({
                ...this.#e,
                queryNode: za.cloneWithoutLimit(this.#e.queryNode)
            });
        }
        clearOrderBy() {
            return new jt({
                ...this.#e,
                queryNode: za.cloneWithoutOrderBy(this.#e.queryNode)
            });
        }
        orderBy(t, n) {
            return new jt({
                ...this.#e,
                queryNode: za.cloneWithOrderByItems(this.#e.queryNode, Rf([
                    t,
                    n
                ]))
            });
        }
        limit(t) {
            return new jt({
                ...this.#e,
                queryNode: za.cloneWithLimit(this.#e.queryNode, hS.create(Cn(t)))
            });
        }
        modifyEnd(t) {
            return new jt({
                ...this.#e,
                queryNode: qe.cloneWithEndModifier(this.#e.queryNode, t.toOperationNode())
            });
        }
        $call(t) {
            return t(this);
        }
        $if(t, n) {
            return t ? n(this) : new jt({
                ...this.#e
            });
        }
        $castTo() {
            return new jt(this.#e);
        }
        $narrowType() {
            return new jt(this.#e);
        }
        $assertType() {
            return new jt(this.#e);
        }
        withPlugin(t) {
            return new jt({
                ...this.#e,
                executor: this.#e.executor.withPlugin(t)
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const t = this.compile(), n = await this.#e.executor.executeQuery(t, this.#e.queryId), { adapter: r } = this.#e.executor, i = t.query;
            return i.returning && r.supportsReturning || i.output && r.supportsOutput ? n.rows : [
                new RW(n.numAffectedRows ?? n.numUpdatedOrDeletedRows ?? BigInt(0))
            ];
        }
        async executeTakeFirst() {
            const [t] = await this.execute();
            return t;
        }
        async executeTakeFirstOrThrow(t = Tf) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw Pf(t) ? new t(this.toOperationNode()) : t(this.toOperationNode());
            return n;
        }
        async *stream(t = 100) {
            const n = this.compile(), r = this.#e.executor.stream(n, t, this.#e.queryId);
            for await (const i of r)yield* i.rows;
        }
        async explain(t, n) {
            return await new jt({
                ...this.#e,
                queryNode: qe.cloneWithExplain(this.#e.queryNode, t, n)
            }).execute();
        }
    }
    pt(jt, "don't await DeleteQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
    class OW {
        numUpdatedRows;
        numChangedRows;
        constructor(t, n){
            this.numUpdatedRows = t, this.numChangedRows = n;
        }
    }
    class At {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        where(...t) {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithWhere(this.#e.queryNode, Xn(t))
            });
        }
        whereRef(t, n, r) {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithWhere(this.#e.queryNode, No(t, n, r))
            });
        }
        clearWhere() {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithoutWhere(this.#e.queryNode)
            });
        }
        top(t, n) {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithTop(this.#e.queryNode, ou(t, n))
            });
        }
        from(t) {
            return new At({
                ...this.#e,
                queryNode: Ic.cloneWithFromItems(this.#e.queryNode, Vd(t))
            });
        }
        innerJoin(...t) {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("InnerJoin", t))
            });
        }
        leftJoin(...t) {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("LeftJoin", t))
            });
        }
        rightJoin(...t) {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("RightJoin", t))
            });
        }
        fullJoin(...t) {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("FullJoin", t))
            });
        }
        limit(t) {
            return new At({
                ...this.#e,
                queryNode: Ic.cloneWithLimit(this.#e.queryNode, hS.create(Cn(t)))
            });
        }
        set(...t) {
            return new At({
                ...this.#e,
                queryNode: Ic.cloneWithUpdates(this.#e.queryNode, _W(...t))
            });
        }
        returning(t) {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithReturning(this.#e.queryNode, Zi(t))
            });
        }
        returningAll(t) {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithReturning(this.#e.queryNode, So(t))
            });
        }
        output(t) {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithOutput(this.#e.queryNode, Zi(t))
            });
        }
        outputAll(t) {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithOutput(this.#e.queryNode, So(t))
            });
        }
        modifyEnd(t) {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithEndModifier(this.#e.queryNode, t.toOperationNode())
            });
        }
        clearReturning() {
            return new At({
                ...this.#e,
                queryNode: qe.cloneWithoutReturning(this.#e.queryNode)
            });
        }
        $call(t) {
            return t(this);
        }
        $if(t, n) {
            return t ? n(this) : new At({
                ...this.#e
            });
        }
        $castTo() {
            return new At(this.#e);
        }
        $narrowType() {
            return new At(this.#e);
        }
        $assertType() {
            return new At(this.#e);
        }
        withPlugin(t) {
            return new At({
                ...this.#e,
                executor: this.#e.executor.withPlugin(t)
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const t = this.compile(), n = await this.#e.executor.executeQuery(t, this.#e.queryId), { adapter: r } = this.#e.executor, i = t.query;
            return i.returning && r.supportsReturning || i.output && r.supportsOutput ? n.rows : [
                new OW(n.numAffectedRows ?? n.numUpdatedOrDeletedRows ?? BigInt(0), n.numChangedRows)
            ];
        }
        async executeTakeFirst() {
            const [t] = await this.execute();
            return t;
        }
        async executeTakeFirstOrThrow(t = Tf) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw Pf(t) ? new t(this.toOperationNode()) : t(this.toOperationNode());
            return n;
        }
        async *stream(t = 100) {
            const n = this.compile(), r = this.#e.executor.stream(n, t, this.#e.queryId);
            for await (const i of r)yield* i.rows;
        }
        async explain(t, n) {
            return await new At({
                ...this.#e,
                queryNode: qe.cloneWithExplain(this.#e.queryNode, t, n)
            }).execute();
        }
    }
    pt(At, "don't await UpdateQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
    const Lk = q({
        is (e) {
            return e.kind === "CommonTableExpressionNameNode";
        },
        create (e, t) {
            return q({
                kind: "CommonTableExpressionNameNode",
                table: Ks.create(e),
                columns: t ? q(t.map(In.create)) : void 0
            });
        }
    }), Ym = q({
        is (e) {
            return e.kind === "CommonTableExpressionNode";
        },
        create (e, t) {
            return q({
                kind: "CommonTableExpressionNode",
                name: e,
                expression: t
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    });
    class zd {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        materialized() {
            return new zd({
                ...this.#e,
                node: Ym.cloneWith(this.#e.node, {
                    materialized: !0
                })
            });
        }
        notMaterialized() {
            return new zd({
                ...this.#e,
                node: Ym.cloneWith(this.#e.node, {
                    materialized: !1
                })
            });
        }
        toOperationNode() {
            return this.#e.node;
        }
    }
    pt(zd, "don't await CTEBuilder instances. They are never executed directly and are always just a part of a query.");
    function $k(e, t) {
        const n = t(WW()).toOperationNode();
        return pi(e) ? e(TW(n)).toOperationNode() : Ym.create(xP(e), n);
    }
    function TW(e) {
        return (t)=>new zd({
                node: Ym.create(xP(t), e)
            });
    }
    function xP(e) {
        if (e.includes("(")) {
            const t = e.split(/[\(\)]/), n = t[0], r = t[1].split(",").map((i)=>i.trim());
            return Lk.create(n, r);
        } else return Lk.create(e);
    }
    const Ch = q({
        is (e) {
            return e.kind === "WithNode";
        },
        create (e, t) {
            return q({
                kind: "WithNode",
                expressions: q([
                    e
                ]),
                ...t
            });
        },
        cloneWithExpression (e, t) {
            return q({
                ...e,
                expressions: q([
                    ...e.expressions,
                    t
                ])
            });
        }
    }), qk = [
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I",
        "J",
        "K",
        "L",
        "M",
        "N",
        "O",
        "P",
        "Q",
        "R",
        "S",
        "T",
        "U",
        "V",
        "W",
        "X",
        "Y",
        "Z",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "k",
        "l",
        "m",
        "n",
        "o",
        "p",
        "q",
        "r",
        "s",
        "t",
        "u",
        "v",
        "w",
        "x",
        "y",
        "z",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
    ];
    function PW(e) {
        let t = "";
        for(let n = 0; n < e; ++n)t += AW();
        return t;
    }
    function AW() {
        return qk[~~(Math.random() * qk.length)];
    }
    function Tt() {
        return new FW;
    }
    class FW {
        #e;
        get queryId() {
            return this.#e === void 0 && (this.#e = PW(8)), this.#e;
        }
    }
    class bP {
        nodeStack = [];
        #e = q({
            AliasNode: this.transformAlias.bind(this),
            ColumnNode: this.transformColumn.bind(this),
            IdentifierNode: this.transformIdentifier.bind(this),
            SchemableIdentifierNode: this.transformSchemableIdentifier.bind(this),
            RawNode: this.transformRaw.bind(this),
            ReferenceNode: this.transformReference.bind(this),
            SelectQueryNode: this.transformSelectQuery.bind(this),
            SelectionNode: this.transformSelection.bind(this),
            TableNode: this.transformTable.bind(this),
            FromNode: this.transformFrom.bind(this),
            SelectAllNode: this.transformSelectAll.bind(this),
            AndNode: this.transformAnd.bind(this),
            OrNode: this.transformOr.bind(this),
            ValueNode: this.transformValue.bind(this),
            ValueListNode: this.transformValueList.bind(this),
            PrimitiveValueListNode: this.transformPrimitiveValueList.bind(this),
            ParensNode: this.transformParens.bind(this),
            JoinNode: this.transformJoin.bind(this),
            OperatorNode: this.transformOperator.bind(this),
            WhereNode: this.transformWhere.bind(this),
            InsertQueryNode: this.transformInsertQuery.bind(this),
            DeleteQueryNode: this.transformDeleteQuery.bind(this),
            ReturningNode: this.transformReturning.bind(this),
            CreateTableNode: this.transformCreateTable.bind(this),
            AddColumnNode: this.transformAddColumn.bind(this),
            ColumnDefinitionNode: this.transformColumnDefinition.bind(this),
            DropTableNode: this.transformDropTable.bind(this),
            DataTypeNode: this.transformDataType.bind(this),
            OrderByNode: this.transformOrderBy.bind(this),
            OrderByItemNode: this.transformOrderByItem.bind(this),
            GroupByNode: this.transformGroupBy.bind(this),
            GroupByItemNode: this.transformGroupByItem.bind(this),
            UpdateQueryNode: this.transformUpdateQuery.bind(this),
            ColumnUpdateNode: this.transformColumnUpdate.bind(this),
            LimitNode: this.transformLimit.bind(this),
            OffsetNode: this.transformOffset.bind(this),
            OnConflictNode: this.transformOnConflict.bind(this),
            OnDuplicateKeyNode: this.transformOnDuplicateKey.bind(this),
            CreateIndexNode: this.transformCreateIndex.bind(this),
            DropIndexNode: this.transformDropIndex.bind(this),
            ListNode: this.transformList.bind(this),
            PrimaryKeyConstraintNode: this.transformPrimaryKeyConstraint.bind(this),
            UniqueConstraintNode: this.transformUniqueConstraint.bind(this),
            ReferencesNode: this.transformReferences.bind(this),
            CheckConstraintNode: this.transformCheckConstraint.bind(this),
            WithNode: this.transformWith.bind(this),
            CommonTableExpressionNode: this.transformCommonTableExpression.bind(this),
            CommonTableExpressionNameNode: this.transformCommonTableExpressionName.bind(this),
            HavingNode: this.transformHaving.bind(this),
            CreateSchemaNode: this.transformCreateSchema.bind(this),
            DropSchemaNode: this.transformDropSchema.bind(this),
            AlterTableNode: this.transformAlterTable.bind(this),
            DropColumnNode: this.transformDropColumn.bind(this),
            RenameColumnNode: this.transformRenameColumn.bind(this),
            AlterColumnNode: this.transformAlterColumn.bind(this),
            ModifyColumnNode: this.transformModifyColumn.bind(this),
            AddConstraintNode: this.transformAddConstraint.bind(this),
            DropConstraintNode: this.transformDropConstraint.bind(this),
            ForeignKeyConstraintNode: this.transformForeignKeyConstraint.bind(this),
            CreateViewNode: this.transformCreateView.bind(this),
            DropViewNode: this.transformDropView.bind(this),
            GeneratedNode: this.transformGenerated.bind(this),
            DefaultValueNode: this.transformDefaultValue.bind(this),
            OnNode: this.transformOn.bind(this),
            ValuesNode: this.transformValues.bind(this),
            SelectModifierNode: this.transformSelectModifier.bind(this),
            CreateTypeNode: this.transformCreateType.bind(this),
            DropTypeNode: this.transformDropType.bind(this),
            ExplainNode: this.transformExplain.bind(this),
            DefaultInsertValueNode: this.transformDefaultInsertValue.bind(this),
            AggregateFunctionNode: this.transformAggregateFunction.bind(this),
            OverNode: this.transformOver.bind(this),
            PartitionByNode: this.transformPartitionBy.bind(this),
            PartitionByItemNode: this.transformPartitionByItem.bind(this),
            SetOperationNode: this.transformSetOperation.bind(this),
            BinaryOperationNode: this.transformBinaryOperation.bind(this),
            UnaryOperationNode: this.transformUnaryOperation.bind(this),
            UsingNode: this.transformUsing.bind(this),
            FunctionNode: this.transformFunction.bind(this),
            CaseNode: this.transformCase.bind(this),
            WhenNode: this.transformWhen.bind(this),
            JSONReferenceNode: this.transformJSONReference.bind(this),
            JSONPathNode: this.transformJSONPath.bind(this),
            JSONPathLegNode: this.transformJSONPathLeg.bind(this),
            JSONOperatorChainNode: this.transformJSONOperatorChain.bind(this),
            TupleNode: this.transformTuple.bind(this),
            MergeQueryNode: this.transformMergeQuery.bind(this),
            MatchedNode: this.transformMatched.bind(this),
            AddIndexNode: this.transformAddIndex.bind(this),
            CastNode: this.transformCast.bind(this),
            FetchNode: this.transformFetch.bind(this),
            TopNode: this.transformTop.bind(this),
            OutputNode: this.transformOutput.bind(this)
        });
        transformNode(t) {
            if (!t) return t;
            this.nodeStack.push(t);
            const n = this.transformNodeImpl(t);
            return this.nodeStack.pop(), q(n);
        }
        transformNodeImpl(t) {
            return this.#e[t.kind](t);
        }
        transformNodeList(t) {
            return t && q(t.map((n)=>this.transformNode(n)));
        }
        transformSelectQuery(t) {
            return {
                kind: "SelectQueryNode",
                from: this.transformNode(t.from),
                selections: this.transformNodeList(t.selections),
                distinctOn: this.transformNodeList(t.distinctOn),
                joins: this.transformNodeList(t.joins),
                groupBy: this.transformNode(t.groupBy),
                orderBy: this.transformNode(t.orderBy),
                where: this.transformNode(t.where),
                frontModifiers: this.transformNodeList(t.frontModifiers),
                endModifiers: this.transformNodeList(t.endModifiers),
                limit: this.transformNode(t.limit),
                offset: this.transformNode(t.offset),
                with: this.transformNode(t.with),
                having: this.transformNode(t.having),
                explain: this.transformNode(t.explain),
                setOperations: this.transformNodeList(t.setOperations),
                fetch: this.transformNode(t.fetch),
                top: this.transformNode(t.top)
            };
        }
        transformSelection(t) {
            return {
                kind: "SelectionNode",
                selection: this.transformNode(t.selection)
            };
        }
        transformColumn(t) {
            return {
                kind: "ColumnNode",
                column: this.transformNode(t.column)
            };
        }
        transformAlias(t) {
            return {
                kind: "AliasNode",
                node: this.transformNode(t.node),
                alias: this.transformNode(t.alias)
            };
        }
        transformTable(t) {
            return {
                kind: "TableNode",
                table: this.transformNode(t.table)
            };
        }
        transformFrom(t) {
            return {
                kind: "FromNode",
                froms: this.transformNodeList(t.froms)
            };
        }
        transformReference(t) {
            return {
                kind: "ReferenceNode",
                column: this.transformNode(t.column),
                table: this.transformNode(t.table)
            };
        }
        transformAnd(t) {
            return {
                kind: "AndNode",
                left: this.transformNode(t.left),
                right: this.transformNode(t.right)
            };
        }
        transformOr(t) {
            return {
                kind: "OrNode",
                left: this.transformNode(t.left),
                right: this.transformNode(t.right)
            };
        }
        transformValueList(t) {
            return {
                kind: "ValueListNode",
                values: this.transformNodeList(t.values)
            };
        }
        transformParens(t) {
            return {
                kind: "ParensNode",
                node: this.transformNode(t.node)
            };
        }
        transformJoin(t) {
            return {
                kind: "JoinNode",
                joinType: t.joinType,
                table: this.transformNode(t.table),
                on: this.transformNode(t.on)
            };
        }
        transformRaw(t) {
            return {
                kind: "RawNode",
                sqlFragments: q([
                    ...t.sqlFragments
                ]),
                parameters: this.transformNodeList(t.parameters)
            };
        }
        transformWhere(t) {
            return {
                kind: "WhereNode",
                where: this.transformNode(t.where)
            };
        }
        transformInsertQuery(t) {
            return {
                kind: "InsertQueryNode",
                into: this.transformNode(t.into),
                columns: this.transformNodeList(t.columns),
                values: this.transformNode(t.values),
                returning: this.transformNode(t.returning),
                onConflict: this.transformNode(t.onConflict),
                onDuplicateKey: this.transformNode(t.onDuplicateKey),
                endModifiers: this.transformNodeList(t.endModifiers),
                with: this.transformNode(t.with),
                ignore: t.ignore,
                replace: t.replace,
                explain: this.transformNode(t.explain),
                defaultValues: t.defaultValues,
                top: this.transformNode(t.top),
                output: this.transformNode(t.output)
            };
        }
        transformValues(t) {
            return {
                kind: "ValuesNode",
                values: this.transformNodeList(t.values)
            };
        }
        transformDeleteQuery(t) {
            return {
                kind: "DeleteQueryNode",
                from: this.transformNode(t.from),
                using: this.transformNode(t.using),
                joins: this.transformNodeList(t.joins),
                where: this.transformNode(t.where),
                returning: this.transformNode(t.returning),
                endModifiers: this.transformNodeList(t.endModifiers),
                with: this.transformNode(t.with),
                orderBy: this.transformNode(t.orderBy),
                limit: this.transformNode(t.limit),
                explain: this.transformNode(t.explain),
                top: this.transformNode(t.top),
                output: this.transformNode(t.output)
            };
        }
        transformReturning(t) {
            return {
                kind: "ReturningNode",
                selections: this.transformNodeList(t.selections)
            };
        }
        transformCreateTable(t) {
            return {
                kind: "CreateTableNode",
                table: this.transformNode(t.table),
                columns: this.transformNodeList(t.columns),
                constraints: this.transformNodeList(t.constraints),
                temporary: t.temporary,
                ifNotExists: t.ifNotExists,
                onCommit: t.onCommit,
                frontModifiers: this.transformNodeList(t.frontModifiers),
                endModifiers: this.transformNodeList(t.endModifiers),
                selectQuery: this.transformNode(t.selectQuery)
            };
        }
        transformColumnDefinition(t) {
            return {
                kind: "ColumnDefinitionNode",
                column: this.transformNode(t.column),
                dataType: this.transformNode(t.dataType),
                references: this.transformNode(t.references),
                primaryKey: t.primaryKey,
                autoIncrement: t.autoIncrement,
                unique: t.unique,
                notNull: t.notNull,
                unsigned: t.unsigned,
                defaultTo: this.transformNode(t.defaultTo),
                check: this.transformNode(t.check),
                generated: this.transformNode(t.generated),
                frontModifiers: this.transformNodeList(t.frontModifiers),
                endModifiers: this.transformNodeList(t.endModifiers),
                nullsNotDistinct: t.nullsNotDistinct,
                identity: t.identity,
                ifNotExists: t.ifNotExists
            };
        }
        transformAddColumn(t) {
            return {
                kind: "AddColumnNode",
                column: this.transformNode(t.column)
            };
        }
        transformDropTable(t) {
            return {
                kind: "DropTableNode",
                table: this.transformNode(t.table),
                ifExists: t.ifExists,
                cascade: t.cascade
            };
        }
        transformOrderBy(t) {
            return {
                kind: "OrderByNode",
                items: this.transformNodeList(t.items)
            };
        }
        transformOrderByItem(t) {
            return {
                kind: "OrderByItemNode",
                orderBy: this.transformNode(t.orderBy),
                direction: this.transformNode(t.direction)
            };
        }
        transformGroupBy(t) {
            return {
                kind: "GroupByNode",
                items: this.transformNodeList(t.items)
            };
        }
        transformGroupByItem(t) {
            return {
                kind: "GroupByItemNode",
                groupBy: this.transformNode(t.groupBy)
            };
        }
        transformUpdateQuery(t) {
            return {
                kind: "UpdateQueryNode",
                table: this.transformNode(t.table),
                from: this.transformNode(t.from),
                joins: this.transformNodeList(t.joins),
                where: this.transformNode(t.where),
                updates: this.transformNodeList(t.updates),
                returning: this.transformNode(t.returning),
                endModifiers: this.transformNodeList(t.endModifiers),
                with: this.transformNode(t.with),
                explain: this.transformNode(t.explain),
                limit: this.transformNode(t.limit),
                top: this.transformNode(t.top),
                output: this.transformNode(t.output)
            };
        }
        transformColumnUpdate(t) {
            return {
                kind: "ColumnUpdateNode",
                column: this.transformNode(t.column),
                value: this.transformNode(t.value)
            };
        }
        transformLimit(t) {
            return {
                kind: "LimitNode",
                limit: this.transformNode(t.limit)
            };
        }
        transformOffset(t) {
            return {
                kind: "OffsetNode",
                offset: this.transformNode(t.offset)
            };
        }
        transformOnConflict(t) {
            return {
                kind: "OnConflictNode",
                columns: this.transformNodeList(t.columns),
                constraint: this.transformNode(t.constraint),
                indexExpression: this.transformNode(t.indexExpression),
                indexWhere: this.transformNode(t.indexWhere),
                updates: this.transformNodeList(t.updates),
                updateWhere: this.transformNode(t.updateWhere),
                doNothing: t.doNothing
            };
        }
        transformOnDuplicateKey(t) {
            return {
                kind: "OnDuplicateKeyNode",
                updates: this.transformNodeList(t.updates)
            };
        }
        transformCreateIndex(t) {
            return {
                kind: "CreateIndexNode",
                name: this.transformNode(t.name),
                table: this.transformNode(t.table),
                columns: this.transformNodeList(t.columns),
                unique: t.unique,
                using: this.transformNode(t.using),
                ifNotExists: t.ifNotExists,
                where: this.transformNode(t.where),
                nullsNotDistinct: t.nullsNotDistinct
            };
        }
        transformList(t) {
            return {
                kind: "ListNode",
                items: this.transformNodeList(t.items)
            };
        }
        transformDropIndex(t) {
            return {
                kind: "DropIndexNode",
                name: this.transformNode(t.name),
                table: this.transformNode(t.table),
                ifExists: t.ifExists,
                cascade: t.cascade
            };
        }
        transformPrimaryKeyConstraint(t) {
            return {
                kind: "PrimaryKeyConstraintNode",
                columns: this.transformNodeList(t.columns),
                name: this.transformNode(t.name)
            };
        }
        transformUniqueConstraint(t) {
            return {
                kind: "UniqueConstraintNode",
                columns: this.transformNodeList(t.columns),
                name: this.transformNode(t.name),
                nullsNotDistinct: t.nullsNotDistinct
            };
        }
        transformForeignKeyConstraint(t) {
            return {
                kind: "ForeignKeyConstraintNode",
                columns: this.transformNodeList(t.columns),
                references: this.transformNode(t.references),
                name: this.transformNode(t.name),
                onDelete: t.onDelete,
                onUpdate: t.onUpdate
            };
        }
        transformSetOperation(t) {
            return {
                kind: "SetOperationNode",
                operator: t.operator,
                expression: this.transformNode(t.expression),
                all: t.all
            };
        }
        transformReferences(t) {
            return {
                kind: "ReferencesNode",
                table: this.transformNode(t.table),
                columns: this.transformNodeList(t.columns),
                onDelete: t.onDelete,
                onUpdate: t.onUpdate
            };
        }
        transformCheckConstraint(t) {
            return {
                kind: "CheckConstraintNode",
                expression: this.transformNode(t.expression),
                name: this.transformNode(t.name)
            };
        }
        transformWith(t) {
            return {
                kind: "WithNode",
                expressions: this.transformNodeList(t.expressions),
                recursive: t.recursive
            };
        }
        transformCommonTableExpression(t) {
            return {
                kind: "CommonTableExpressionNode",
                name: this.transformNode(t.name),
                materialized: t.materialized,
                expression: this.transformNode(t.expression)
            };
        }
        transformCommonTableExpressionName(t) {
            return {
                kind: "CommonTableExpressionNameNode",
                table: this.transformNode(t.table),
                columns: this.transformNodeList(t.columns)
            };
        }
        transformHaving(t) {
            return {
                kind: "HavingNode",
                having: this.transformNode(t.having)
            };
        }
        transformCreateSchema(t) {
            return {
                kind: "CreateSchemaNode",
                schema: this.transformNode(t.schema),
                ifNotExists: t.ifNotExists
            };
        }
        transformDropSchema(t) {
            return {
                kind: "DropSchemaNode",
                schema: this.transformNode(t.schema),
                ifExists: t.ifExists,
                cascade: t.cascade
            };
        }
        transformAlterTable(t) {
            return {
                kind: "AlterTableNode",
                table: this.transformNode(t.table),
                renameTo: this.transformNode(t.renameTo),
                setSchema: this.transformNode(t.setSchema),
                columnAlterations: this.transformNodeList(t.columnAlterations),
                addConstraint: this.transformNode(t.addConstraint),
                dropConstraint: this.transformNode(t.dropConstraint),
                addIndex: this.transformNode(t.addIndex),
                dropIndex: this.transformNode(t.dropIndex)
            };
        }
        transformDropColumn(t) {
            return {
                kind: "DropColumnNode",
                column: this.transformNode(t.column)
            };
        }
        transformRenameColumn(t) {
            return {
                kind: "RenameColumnNode",
                column: this.transformNode(t.column),
                renameTo: this.transformNode(t.renameTo)
            };
        }
        transformAlterColumn(t) {
            return {
                kind: "AlterColumnNode",
                column: this.transformNode(t.column),
                dataType: this.transformNode(t.dataType),
                dataTypeExpression: this.transformNode(t.dataTypeExpression),
                setDefault: this.transformNode(t.setDefault),
                dropDefault: t.dropDefault,
                setNotNull: t.setNotNull,
                dropNotNull: t.dropNotNull
            };
        }
        transformModifyColumn(t) {
            return {
                kind: "ModifyColumnNode",
                column: this.transformNode(t.column)
            };
        }
        transformAddConstraint(t) {
            return {
                kind: "AddConstraintNode",
                constraint: this.transformNode(t.constraint)
            };
        }
        transformDropConstraint(t) {
            return {
                kind: "DropConstraintNode",
                constraintName: this.transformNode(t.constraintName),
                ifExists: t.ifExists,
                modifier: t.modifier
            };
        }
        transformCreateView(t) {
            return {
                kind: "CreateViewNode",
                name: this.transformNode(t.name),
                temporary: t.temporary,
                orReplace: t.orReplace,
                ifNotExists: t.ifNotExists,
                materialized: t.materialized,
                columns: this.transformNodeList(t.columns),
                as: this.transformNode(t.as)
            };
        }
        transformDropView(t) {
            return {
                kind: "DropViewNode",
                name: this.transformNode(t.name),
                ifExists: t.ifExists,
                materialized: t.materialized,
                cascade: t.cascade
            };
        }
        transformGenerated(t) {
            return {
                kind: "GeneratedNode",
                byDefault: t.byDefault,
                always: t.always,
                identity: t.identity,
                stored: t.stored,
                expression: this.transformNode(t.expression)
            };
        }
        transformDefaultValue(t) {
            return {
                kind: "DefaultValueNode",
                defaultValue: this.transformNode(t.defaultValue)
            };
        }
        transformOn(t) {
            return {
                kind: "OnNode",
                on: this.transformNode(t.on)
            };
        }
        transformSelectModifier(t) {
            return {
                kind: "SelectModifierNode",
                modifier: t.modifier,
                rawModifier: this.transformNode(t.rawModifier),
                of: this.transformNodeList(t.of)
            };
        }
        transformCreateType(t) {
            return {
                kind: "CreateTypeNode",
                name: this.transformNode(t.name),
                enum: this.transformNode(t.enum)
            };
        }
        transformDropType(t) {
            return {
                kind: "DropTypeNode",
                name: this.transformNode(t.name),
                ifExists: t.ifExists
            };
        }
        transformExplain(t) {
            return {
                kind: "ExplainNode",
                format: t.format,
                options: this.transformNode(t.options)
            };
        }
        transformSchemableIdentifier(t) {
            return {
                kind: "SchemableIdentifierNode",
                schema: this.transformNode(t.schema),
                identifier: this.transformNode(t.identifier)
            };
        }
        transformAggregateFunction(t) {
            return {
                kind: "AggregateFunctionNode",
                aggregated: this.transformNodeList(t.aggregated),
                distinct: t.distinct,
                orderBy: this.transformNode(t.orderBy),
                filter: this.transformNode(t.filter),
                func: t.func,
                over: this.transformNode(t.over)
            };
        }
        transformOver(t) {
            return {
                kind: "OverNode",
                orderBy: this.transformNode(t.orderBy),
                partitionBy: this.transformNode(t.partitionBy)
            };
        }
        transformPartitionBy(t) {
            return {
                kind: "PartitionByNode",
                items: this.transformNodeList(t.items)
            };
        }
        transformPartitionByItem(t) {
            return {
                kind: "PartitionByItemNode",
                partitionBy: this.transformNode(t.partitionBy)
            };
        }
        transformBinaryOperation(t) {
            return {
                kind: "BinaryOperationNode",
                leftOperand: this.transformNode(t.leftOperand),
                operator: this.transformNode(t.operator),
                rightOperand: this.transformNode(t.rightOperand)
            };
        }
        transformUnaryOperation(t) {
            return {
                kind: "UnaryOperationNode",
                operator: this.transformNode(t.operator),
                operand: this.transformNode(t.operand)
            };
        }
        transformUsing(t) {
            return {
                kind: "UsingNode",
                tables: this.transformNodeList(t.tables)
            };
        }
        transformFunction(t) {
            return {
                kind: "FunctionNode",
                func: t.func,
                arguments: this.transformNodeList(t.arguments)
            };
        }
        transformCase(t) {
            return {
                kind: "CaseNode",
                value: this.transformNode(t.value),
                when: this.transformNodeList(t.when),
                else: this.transformNode(t.else),
                isStatement: t.isStatement
            };
        }
        transformWhen(t) {
            return {
                kind: "WhenNode",
                condition: this.transformNode(t.condition),
                result: this.transformNode(t.result)
            };
        }
        transformJSONReference(t) {
            return {
                kind: "JSONReferenceNode",
                reference: this.transformNode(t.reference),
                traversal: this.transformNode(t.traversal)
            };
        }
        transformJSONPath(t) {
            return {
                kind: "JSONPathNode",
                inOperator: this.transformNode(t.inOperator),
                pathLegs: this.transformNodeList(t.pathLegs)
            };
        }
        transformJSONPathLeg(t) {
            return {
                kind: "JSONPathLegNode",
                type: t.type,
                value: t.value
            };
        }
        transformJSONOperatorChain(t) {
            return {
                kind: "JSONOperatorChainNode",
                operator: this.transformNode(t.operator),
                values: this.transformNodeList(t.values)
            };
        }
        transformTuple(t) {
            return {
                kind: "TupleNode",
                values: this.transformNodeList(t.values)
            };
        }
        transformMergeQuery(t) {
            return {
                kind: "MergeQueryNode",
                into: this.transformNode(t.into),
                using: this.transformNode(t.using),
                whens: this.transformNodeList(t.whens),
                with: this.transformNode(t.with),
                top: this.transformNode(t.top),
                endModifiers: this.transformNodeList(t.endModifiers),
                output: this.transformNode(t.output)
            };
        }
        transformMatched(t) {
            return {
                kind: "MatchedNode",
                not: t.not,
                bySource: t.bySource
            };
        }
        transformAddIndex(t) {
            return {
                kind: "AddIndexNode",
                name: this.transformNode(t.name),
                columns: this.transformNodeList(t.columns),
                unique: t.unique,
                using: this.transformNode(t.using),
                ifNotExists: t.ifNotExists
            };
        }
        transformCast(t) {
            return {
                kind: "CastNode",
                expression: this.transformNode(t.expression),
                dataType: this.transformNode(t.dataType)
            };
        }
        transformFetch(t) {
            return {
                kind: "FetchNode",
                rowCount: this.transformNode(t.rowCount),
                modifier: t.modifier
            };
        }
        transformTop(t) {
            return {
                kind: "TopNode",
                expression: t.expression,
                modifiers: t.modifiers
            };
        }
        transformOutput(t) {
            return {
                kind: "OutputNode",
                selections: this.transformNodeList(t.selections)
            };
        }
        transformDataType(t) {
            return t;
        }
        transformSelectAll(t) {
            return t;
        }
        transformIdentifier(t) {
            return t;
        }
        transformValue(t) {
            return t;
        }
        transformPrimitiveValueList(t) {
            return t;
        }
        transformOperator(t) {
            return t;
        }
        transformDefaultInsertValue(t) {
            return t;
        }
    }
    const DW = q({
        AlterTableNode: !0,
        CreateIndexNode: !0,
        CreateSchemaNode: !0,
        CreateTableNode: !0,
        CreateTypeNode: !0,
        CreateViewNode: !0,
        DeleteQueryNode: !0,
        DropIndexNode: !0,
        DropSchemaNode: !0,
        DropTableNode: !0,
        DropTypeNode: !0,
        DropViewNode: !0,
        InsertQueryNode: !0,
        RawNode: !0,
        SelectQueryNode: !0,
        UpdateQueryNode: !0,
        MergeQueryNode: !0
    });
    class MW extends bP {
        #e;
        #t = new Set;
        #n = new Set;
        constructor(t){
            super(), this.#e = t;
        }
        transformNodeImpl(t) {
            if (!this.#r(t)) return super.transformNodeImpl(t);
            const n = this.#a(t);
            for (const o of n)this.#n.add(o);
            const r = this.#i(t);
            for (const o of r)this.#t.add(o);
            const i = super.transformNodeImpl(t);
            for (const o of r)this.#t.delete(o);
            for (const o of n)this.#n.delete(o);
            return i;
        }
        transformSchemableIdentifier(t) {
            const n = super.transformSchemableIdentifier(t);
            return n.schema || !this.#t.has(t.identifier.name) ? n : {
                ...n,
                schema: Yt.create(this.#e)
            };
        }
        transformReferences(t) {
            const n = super.transformReferences(t);
            return n.table.table.schema ? n : {
                ...n,
                table: Ks.createWithSchema(this.#e, n.table.table.identifier.name)
            };
        }
        #r(t) {
            return t.kind in DW;
        }
        #i(t) {
            const n = new Set;
            if ("name" in t && t.name && ea.is(t.name) && this.#o(t.name, n), "from" in t && t.from) for (const r of t.from.froms)this.#s(r, n);
            if ("into" in t && t.into && this.#s(t.into, n), "table" in t && t.table && this.#s(t.table, n), "joins" in t && t.joins) for (const r of t.joins)this.#s(r.table, n);
            return "using" in t && t.using && this.#s(t.using, n), n;
        }
        #a(t) {
            const n = new Set;
            return "with" in t && t.with && this.#l(t.with, n), n;
        }
        #s(t, n) {
            const r = Ks.is(t) ? t : da.is(t) && Ks.is(t.node) ? t.node : null;
            r && this.#o(r.table, n);
        }
        #o(t, n) {
            const r = t.identifier.name;
            !this.#t.has(r) && !this.#n.has(r) && n.add(r);
        }
        #l(t, n) {
            for (const r of t.expressions){
                const i = r.name.table.table.identifier.name;
                this.#n.has(i) || n.add(i);
            }
        }
    }
    class Af {
        #e;
        constructor(t){
            this.#e = new MW(t);
        }
        transformQuery(t) {
            return this.#e.transformNode(t.node);
        }
        async transformResult(t) {
            return t.result;
        }
    }
    const LW = q({
        is (e) {
            return e.kind === "MatchedNode";
        },
        create (e, t = !1) {
            return q({
                kind: "MatchedNode",
                not: e,
                bySource: t
            });
        }
    });
    function Bk(e, t, n) {
        return Of.create(Jm([
            LW.create(!e.isMatched, e.bySource),
            ...t && t.length > 0 ? [
                t.length === 3 && n ? No(t[0], t[1], t[2]) : Xn(t)
            ] : []
        ], "and", !1));
    }
    function jd(e) {
        return li(e) ? sr.create([
            e
        ], []) : Vr(e) ? e.toOperationNode() : e;
    }
    class zk {
        #e;
        #t;
        #n;
        constructor(){
            this.#e = new Promise((t, n)=>{
                this.#n = n, this.#t = t;
            });
        }
        get promise() {
            return this.#e;
        }
        resolve = (t)=>{
            this.#t && this.#t(t);
        };
        reject = (t)=>{
            this.#n && this.#n(t);
        };
    }
    const Wk = new Set;
    function $W(e) {
        Wk.has(e) || (Wk.add(e), console.log(e));
    }
    const qW = q([]);
    class wP {
        #e;
        constructor(t = qW){
            this.#e = t;
        }
        get plugins() {
            return this.#e;
        }
        transformQuery(t, n) {
            for (const r of this.#e){
                const i = r.transformQuery({
                    node: t,
                    queryId: n
                });
                if (i.kind === t.kind) t = i;
                else throw new Error([
                    "KyselyPlugin.transformQuery must return a node",
                    "of the same kind that was given to it.",
                    `The plugin was given a ${t.kind}`,
                    `but it returned a ${i.kind}`
                ].join(" "));
            }
            return t;
        }
        async executeQuery(t, n) {
            return await this.provideConnection(async (r)=>{
                const i = await r.executeQuery(t), o = await this.#t(i, n);
                return BW(i, o), o;
            });
        }
        async *stream(t, n, r) {
            const i = new zk, o = new zk;
            this.provideConnection(async (l)=>(i.resolve(l), await o.promise)).catch((l)=>i.reject(l));
            const s = await i.promise;
            try {
                for await (const l of s.streamQuery(t, n))yield await this.#t(l, r);
            } finally{
                o.resolve();
            }
        }
        async #t(t, n) {
            for (const r of this.#e)t = await r.transformResult({
                result: t,
                queryId: n
            });
            return t;
        }
    }
    function BW(e, t) {
        const { numAffectedRows: n } = e;
        n === void 0 && e.numUpdatedOrDeletedRows === void 0 || n !== void 0 && t.numAffectedRows !== void 0 || $W("kysely:warning: outdated driver/plugin detected! QueryResult.numUpdatedOrDeletedRows is deprecated and will be removed in a future release.");
    }
    class dc extends wP {
        get adapter() {
            throw new Error("this query cannot be compiled to SQL");
        }
        compileQuery() {
            throw new Error("this query cannot be compiled to SQL");
        }
        provideConnection() {
            throw new Error("this query cannot be executed");
        }
        withConnectionProvider() {
            throw new Error("this query cannot have a connection provider");
        }
        withPlugin(t) {
            return new dc([
                ...this.plugins,
                t
            ]);
        }
        withPlugins(t) {
            return new dc([
                ...this.plugins,
                ...t
            ]);
        }
        withPluginAtFront(t) {
            return new dc([
                t,
                ...this.plugins
            ]);
        }
        withoutPlugins() {
            return new dc([]);
        }
    }
    const sy = new dc;
    class zW {
        numChangedRows;
        constructor(t){
            this.numChangedRows = t;
        }
    }
    class Ja {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        modifyEnd(t) {
            return new Ja({
                ...this.#e,
                queryNode: qe.cloneWithEndModifier(this.#e.queryNode, t.toOperationNode())
            });
        }
        top(t, n) {
            return new Ja({
                ...this.#e,
                queryNode: qe.cloneWithTop(this.#e.queryNode, ou(t, n))
            });
        }
        using(...t) {
            return new ii({
                ...this.#e,
                queryNode: $r.cloneWithUsing(this.#e.queryNode, br("Using", t))
            });
        }
        output(t) {
            return new Ja({
                ...this.#e,
                queryNode: qe.cloneWithOutput(this.#e.queryNode, Zi(t))
            });
        }
        outputAll(t) {
            return new Ja({
                ...this.#e,
                queryNode: qe.cloneWithOutput(this.#e.queryNode, So(t))
            });
        }
    }
    pt(Ja, "don't await MergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");
    class ii {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        modifyEnd(t) {
            return new ii({
                ...this.#e,
                queryNode: qe.cloneWithEndModifier(this.#e.queryNode, t.toOperationNode())
            });
        }
        top(t, n) {
            return new ii({
                ...this.#e,
                queryNode: qe.cloneWithTop(this.#e.queryNode, ou(t, n))
            });
        }
        whenMatched() {
            return this.#t([]);
        }
        whenMatchedAnd(...t) {
            return this.#t(t);
        }
        whenMatchedAndRef(t, n, r) {
            return this.#t([
                t,
                n,
                r
            ], !0);
        }
        #t(t, n) {
            return new eN({
                ...this.#e,
                queryNode: $r.cloneWithWhen(this.#e.queryNode, Bk({
                    isMatched: !0
                }, t, n))
            });
        }
        whenNotMatched() {
            return this.#n([]);
        }
        whenNotMatchedAnd(...t) {
            return this.#n(t);
        }
        whenNotMatchedAndRef(t, n, r) {
            return this.#n([
                t,
                n,
                r
            ], !0);
        }
        whenNotMatchedBySource() {
            return this.#n([], !1, !0);
        }
        whenNotMatchedBySourceAnd(...t) {
            return this.#n(t, !1, !0);
        }
        whenNotMatchedBySourceAndRef(t, n, r) {
            return this.#n([
                t,
                n,
                r
            ], !0, !0);
        }
        output(t) {
            return new ii({
                ...this.#e,
                queryNode: qe.cloneWithOutput(this.#e.queryNode, Zi(t))
            });
        }
        outputAll(t) {
            return new ii({
                ...this.#e,
                queryNode: qe.cloneWithOutput(this.#e.queryNode, So(t))
            });
        }
        #n(t, n = !1, r = !1) {
            const i = {
                ...this.#e,
                queryNode: $r.cloneWithWhen(this.#e.queryNode, Bk({
                    isMatched: !1,
                    bySource: r
                }, t, n))
            }, o = r ? eN : NP;
            return new o(i);
        }
        $call(t) {
            return t(this);
        }
        $if(t, n) {
            return t ? n(this) : new ii({
                ...this.#e
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const t = this.compile(), n = await this.#e.executor.executeQuery(t, this.#e.queryId);
            return t.query.output && this.#e.executor.adapter.supportsOutput ? n.rows : [
                new zW(n.numAffectedRows)
            ];
        }
        async executeTakeFirst() {
            const [t] = await this.execute();
            return t;
        }
        async executeTakeFirstOrThrow(t = Tf) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw Pf(t) ? new t(this.toOperationNode()) : t(this.toOperationNode());
            return n;
        }
    }
    pt(ii, "don't await WheneableMergeQueryBuilder instances directly. To execute the query you need to call `execute`.");
    class eN {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        thenDelete() {
            return new ii({
                ...this.#e,
                queryNode: $r.cloneWithThen(this.#e.queryNode, jd("delete"))
            });
        }
        thenDoNothing() {
            return new ii({
                ...this.#e,
                queryNode: $r.cloneWithThen(this.#e.queryNode, jd("do nothing"))
            });
        }
        thenUpdate(t) {
            return new ii({
                ...this.#e,
                queryNode: $r.cloneWithThen(this.#e.queryNode, jd(t(new At({
                    queryId: this.#e.queryId,
                    executor: sy,
                    queryNode: Ic.createWithoutTable()
                }))))
            });
        }
        thenUpdateSet(...t) {
            return this.thenUpdate((n)=>n.set(...t));
        }
    }
    pt(eN, "don't await MatchedThenableMergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");
    class NP {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        thenDoNothing() {
            return new ii({
                ...this.#e,
                queryNode: $r.cloneWithThen(this.#e.queryNode, jd("do nothing"))
            });
        }
        thenInsertValues(t) {
            const [n, r] = gP(t);
            return new ii({
                ...this.#e,
                queryNode: $r.cloneWithThen(this.#e.queryNode, jd(ti.cloneWith(ti.createWithoutInto(), {
                    columns: n,
                    values: r
                })))
            });
        }
    }
    pt(NP, "don't await NotMatchedThenableMergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");
    class Ls {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        selectFrom(t) {
            return tN({
                queryId: Tt(),
                executor: this.#e.executor,
                queryNode: Rt.createFrom(Vd(t), this.#e.withNode)
            });
        }
        selectNoFrom(t) {
            return tN({
                queryId: Tt(),
                executor: this.#e.executor,
                queryNode: Rt.cloneWithSelections(Rt.create(this.#e.withNode), Zi(t))
            });
        }
        insertInto(t) {
            return new Jt({
                queryId: Tt(),
                executor: this.#e.executor,
                queryNode: ti.create(wn(t), this.#e.withNode)
            });
        }
        replaceInto(t) {
            return new Jt({
                queryId: Tt(),
                executor: this.#e.executor,
                queryNode: ti.create(wn(t), this.#e.withNode, !0)
            });
        }
        deleteFrom(t) {
            return new jt({
                queryId: Tt(),
                executor: this.#e.executor,
                queryNode: za.create(Vd(t), this.#e.withNode)
            });
        }
        updateTable(t) {
            return new At({
                queryId: Tt(),
                executor: this.#e.executor,
                queryNode: Ic.create(Ud(t), this.#e.withNode)
            });
        }
        mergeInto(t) {
            return new Ja({
                queryId: Tt(),
                executor: this.#e.executor,
                queryNode: $r.create(jP(t), this.#e.withNode)
            });
        }
        with(t, n) {
            const r = $k(t, n);
            return new Ls({
                ...this.#e,
                withNode: this.#e.withNode ? Ch.cloneWithExpression(this.#e.withNode, r) : Ch.create(r)
            });
        }
        withRecursive(t, n) {
            const r = $k(t, n);
            return new Ls({
                ...this.#e,
                withNode: this.#e.withNode ? Ch.cloneWithExpression(this.#e.withNode, r) : Ch.create(r, {
                    recursive: !0
                })
            });
        }
        withPlugin(t) {
            return new Ls({
                ...this.#e,
                executor: this.#e.executor.withPlugin(t)
            });
        }
        withoutPlugins() {
            return new Ls({
                ...this.#e,
                executor: this.#e.executor.withoutPlugins()
            });
        }
        withSchema(t) {
            return new Ls({
                ...this.#e,
                executor: this.#e.executor.withPluginAtFront(new Af(t))
            });
        }
    }
    function WW() {
        return new Ls({
            executor: sy
        });
    }
    function VW(e, t) {
        return new Sc({
            joinNode: Ed.create(e, Ud(t))
        });
    }
    function UW() {
        return new Bd({
            overNode: X0.create()
        });
    }
    function br(e, t) {
        if (t.length === 3) return KW(e, t[0], t[1], t[2]);
        if (t.length === 2) return HW(e, t[0], t[1]);
        throw new Error("not implemented");
    }
    function HW(e, t, n) {
        return n(VW(e, t)).toOperationNode();
    }
    function KW(e, t, n, r) {
        return Ed.createWithOn(e, Ud(t), No(n, "=", r));
    }
    const GW = q({
        is (e) {
            return e.kind === "OffsetNode";
        },
        create (e) {
            return q({
                kind: "OffsetNode",
                offset: e
            });
        }
    }), QW = q({
        is (e) {
            return e.kind === "GroupByItemNode";
        },
        create (e) {
            return q({
                kind: "GroupByItemNode",
                groupBy: e
            });
        }
    });
    function JW(e) {
        return e = pi(e) ? e(su()) : e, qd(e).map(QW.create);
    }
    const SP = q({
        is (e) {
            return e.kind === "SetOperationNode";
        },
        create (e, t, n) {
            return q({
                kind: "SetOperationNode",
                operator: e,
                expression: t,
                all: n
            });
        }
    });
    function Zl(e, t, n) {
        return pi(t) && (t = t(gS())), Yo(t) || (t = [
            t
        ]), t.map((r)=>SP.create(e, vl(r), n));
    }
    class Ft {
        #e;
        constructor(t){
            this.#e = t;
        }
        get expressionType() {}
        as(t) {
            return new mS(this, t);
        }
        or(...t) {
            return new Xm(iu.create(this.#e, Xn(t)));
        }
        and(...t) {
            return new eg(ta.create(this.#e, Xn(t)));
        }
        $castTo() {
            return new Ft(this.#e);
        }
        $notNull() {
            return new Ft(this.#e);
        }
        toOperationNode() {
            return this.#e;
        }
    }
    class mS {
        #e;
        #t;
        constructor(t, n){
            this.#e = t, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        toOperationNode() {
            return da.create(this.#e.toOperationNode(), Vr(this.#t) ? this.#t.toOperationNode() : Yt.create(this.#t));
        }
    }
    class Xm {
        #e;
        constructor(t){
            this.#e = t;
        }
        get expressionType() {}
        as(t) {
            return new mS(this, t);
        }
        or(...t) {
            return new Xm(iu.create(this.#e, Xn(t)));
        }
        $castTo() {
            return new Xm(this.#e);
        }
        toOperationNode() {
            return Mc.create(this.#e);
        }
    }
    class eg {
        #e;
        constructor(t){
            this.#e = t;
        }
        get expressionType() {}
        as(t) {
            return new mS(this, t);
        }
        and(...t) {
            return new eg(ta.create(this.#e, Xn(t)));
        }
        $castTo() {
            return new eg(this.#e);
        }
        toOperationNode() {
            return Mc.create(this.#e);
        }
    }
    const ZW = {
        is (e) {
            return e.kind === "FetchNode";
        },
        create (e, t) {
            return {
                kind: "FetchNode",
                rowCount: wo.create(e),
                modifier: t
            };
        }
    };
    function YW(e, t) {
        if (!iy(e) && !sS(e)) throw new Error(`Invalid fetch row count: ${e}`);
        if (!XW(t)) throw new Error(`Invalid fetch modifier: ${t}`);
        return ZW.create(e, t);
    }
    function XW(e) {
        return e === "only" || e === "with ties";
    }
    class Xe {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        get expressionType() {}
        get isSelectQueryBuilder() {
            return !0;
        }
        where(...t) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithWhere(this.#e.queryNode, Xn(t))
            });
        }
        whereRef(t, n, r) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithWhere(this.#e.queryNode, No(t, n, r))
            });
        }
        having(...t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithHaving(this.#e.queryNode, Xn(t))
            });
        }
        havingRef(t, n, r) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithHaving(this.#e.queryNode, No(t, n, r))
            });
        }
        select(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithSelections(this.#e.queryNode, Zi(t))
            });
        }
        distinctOn(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithDistinctOn(this.#e.queryNode, qd(t))
            });
        }
        modifyFront(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithFrontModifier(this.#e.queryNode, Lo.createWithExpression(t.toOperationNode()))
            });
        }
        modifyEnd(t) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithEndModifier(this.#e.queryNode, Lo.createWithExpression(t.toOperationNode()))
            });
        }
        distinct() {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithFrontModifier(this.#e.queryNode, Lo.create("Distinct"))
            });
        }
        forUpdate(t) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithEndModifier(this.#e.queryNode, Lo.create("ForUpdate", t ? kh(t).map(wn) : void 0))
            });
        }
        forShare(t) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithEndModifier(this.#e.queryNode, Lo.create("ForShare", t ? kh(t).map(wn) : void 0))
            });
        }
        forKeyShare(t) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithEndModifier(this.#e.queryNode, Lo.create("ForKeyShare", t ? kh(t).map(wn) : void 0))
            });
        }
        forNoKeyUpdate(t) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithEndModifier(this.#e.queryNode, Lo.create("ForNoKeyUpdate", t ? kh(t).map(wn) : void 0))
            });
        }
        skipLocked() {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithEndModifier(this.#e.queryNode, Lo.create("SkipLocked"))
            });
        }
        noWait() {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithEndModifier(this.#e.queryNode, Lo.create("NoWait"))
            });
        }
        selectAll(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithSelections(this.#e.queryNode, So(t))
            });
        }
        innerJoin(...t) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("InnerJoin", t))
            });
        }
        leftJoin(...t) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("LeftJoin", t))
            });
        }
        rightJoin(...t) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("RightJoin", t))
            });
        }
        fullJoin(...t) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("FullJoin", t))
            });
        }
        innerJoinLateral(...t) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("LateralInnerJoin", t))
            });
        }
        leftJoinLateral(...t) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithJoin(this.#e.queryNode, br("LateralLeftJoin", t))
            });
        }
        orderBy(...t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithOrderByItems(this.#e.queryNode, Rf(t))
            });
        }
        groupBy(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithGroupByItems(this.#e.queryNode, JW(t))
            });
        }
        limit(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithLimit(this.#e.queryNode, hS.create(Cn(t)))
            });
        }
        offset(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithOffset(this.#e.queryNode, GW.create(Cn(t)))
            });
        }
        fetch(t, n = "only") {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithFetch(this.#e.queryNode, YW(t, n))
            });
        }
        top(t, n) {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithTop(this.#e.queryNode, ou(t, n))
            });
        }
        union(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithSetOperations(this.#e.queryNode, Zl("union", t, !1))
            });
        }
        unionAll(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithSetOperations(this.#e.queryNode, Zl("union", t, !0))
            });
        }
        intersect(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithSetOperations(this.#e.queryNode, Zl("intersect", t, !1))
            });
        }
        intersectAll(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithSetOperations(this.#e.queryNode, Zl("intersect", t, !0))
            });
        }
        except(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithSetOperations(this.#e.queryNode, Zl("except", t, !1))
            });
        }
        exceptAll(t) {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithSetOperations(this.#e.queryNode, Zl("except", t, !0))
            });
        }
        as(t) {
            return new IP(this, t);
        }
        clearSelect() {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithoutSelections(this.#e.queryNode)
            });
        }
        clearWhere() {
            return new Xe({
                ...this.#e,
                queryNode: qe.cloneWithoutWhere(this.#e.queryNode)
            });
        }
        clearLimit() {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithoutLimit(this.#e.queryNode)
            });
        }
        clearOffset() {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithoutOffset(this.#e.queryNode)
            });
        }
        clearOrderBy() {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithoutOrderBy(this.#e.queryNode)
            });
        }
        clearGroupBy() {
            return new Xe({
                ...this.#e,
                queryNode: Rt.cloneWithoutGroupBy(this.#e.queryNode)
            });
        }
        $call(t) {
            return t(this);
        }
        $if(t, n) {
            return t ? n(this) : new Xe({
                ...this.#e
            });
        }
        $castTo() {
            return new Xe(this.#e);
        }
        $narrowType() {
            return new Xe(this.#e);
        }
        $assertType() {
            return new Xe(this.#e);
        }
        $asTuple() {
            return new Ft(this.toOperationNode());
        }
        withPlugin(t) {
            return new Xe({
                ...this.#e,
                executor: this.#e.executor.withPlugin(t)
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const t = this.compile();
            return (await this.#e.executor.executeQuery(t, this.#e.queryId)).rows;
        }
        async executeTakeFirst() {
            const [t] = await this.execute();
            return t;
        }
        async executeTakeFirstOrThrow(t = Tf) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw Pf(t) ? new t(this.toOperationNode()) : t(this.toOperationNode());
            return n;
        }
        async *stream(t = 100) {
            const n = this.compile(), r = this.#e.executor.stream(n, t, this.#e.queryId);
            for await (const i of r)yield* i.rows;
        }
        async explain(t, n) {
            return await new Xe({
                ...this.#e,
                queryNode: qe.cloneWithExplain(this.#e.queryNode, t, n)
            }).execute();
        }
    }
    pt(Xe, "don't await SelectQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
    function tN(e) {
        return new Xe(e);
    }
    class IP {
        #e;
        #t;
        constructor(t, n){
            this.#e = t, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        get isAliasedSelectQueryBuilder() {
            return !0;
        }
        toOperationNode() {
            return da.create(this.#e.toOperationNode(), Yt.create(this.#t));
        }
    }
    pt(IP, "don't await AliasedSelectQueryBuilder instances directly. AliasedSelectQueryBuilder should never be executed directly since it's always a part of another query.");
    const $s = q({
        is (e) {
            return e.kind === "AggregateFunctionNode";
        },
        create (e, t = []) {
            return q({
                kind: "AggregateFunctionNode",
                func: e,
                aggregated: t
            });
        },
        cloneWithDistinct (e) {
            return q({
                ...e,
                distinct: !0
            });
        },
        cloneWithOrderBy (e, t) {
            return q({
                ...e,
                orderBy: e.orderBy ? ra.cloneWithItems(e.orderBy, t) : ra.create(t)
            });
        },
        cloneWithFilter (e, t) {
            return q({
                ...e,
                filter: e.filter ? Mr.cloneWithOperation(e.filter, "And", t) : Mr.create(t)
            });
        },
        cloneWithOrFilter (e, t) {
            return q({
                ...e,
                filter: e.filter ? Mr.cloneWithOperation(e.filter, "Or", t) : Mr.create(t)
            });
        },
        cloneWithOver (e, t) {
            return q({
                ...e,
                over: t
            });
        }
    }), Vk = q({
        is (e) {
            return e.kind === "FunctionNode";
        },
        create (e, t) {
            return q({
                kind: "FunctionNode",
                func: e,
                arguments: t
            });
        }
    });
    class ki {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        get expressionType() {}
        as(t) {
            return new e5(this, t);
        }
        distinct() {
            return new ki({
                ...this.#e,
                aggregateFunctionNode: $s.cloneWithDistinct(this.#e.aggregateFunctionNode)
            });
        }
        orderBy(t, n) {
            return new ki({
                ...this.#e,
                aggregateFunctionNode: $s.cloneWithOrderBy(this.#e.aggregateFunctionNode, Rf([
                    t,
                    n
                ]))
            });
        }
        filterWhere(...t) {
            return new ki({
                ...this.#e,
                aggregateFunctionNode: $s.cloneWithFilter(this.#e.aggregateFunctionNode, Xn(t))
            });
        }
        filterWhereRef(t, n, r) {
            return new ki({
                ...this.#e,
                aggregateFunctionNode: $s.cloneWithFilter(this.#e.aggregateFunctionNode, No(t, n, r))
            });
        }
        over(t) {
            const n = UW();
            return new ki({
                ...this.#e,
                aggregateFunctionNode: $s.cloneWithOver(this.#e.aggregateFunctionNode, (t ? t(n) : n).toOperationNode())
            });
        }
        $call(t) {
            return t(this);
        }
        $castTo() {
            return new ki(this.#e);
        }
        $notNull() {
            return new ki(this.#e);
        }
        toOperationNode() {
            return this.#e.aggregateFunctionNode;
        }
    }
    pt(ki, "don't await AggregateFunctionBuilder instances. They are never executed directly and are always just a part of a query.");
    class e5 {
        #e;
        #t;
        constructor(t, n){
            this.#e = t, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        toOperationNode() {
            return da.create(this.#e.toOperationNode(), Yt.create(this.#t));
        }
    }
    function _P() {
        const e = (n, r)=>new Ft(Vk.create(n, qd(r ?? []))), t = (n, r)=>new ki({
                aggregateFunctionNode: $s.create(n, r ? qd(r) : void 0)
            });
        return Object.assign(e, {
            agg: t,
            avg (n) {
                return t("avg", [
                    n
                ]);
            },
            coalesce (...n) {
                return e("coalesce", n);
            },
            count (n) {
                return t("count", [
                    n
                ]);
            },
            countAll (n) {
                return new ki({
                    aggregateFunctionNode: $s.create("count", So(n))
                });
            },
            max (n) {
                return t("max", [
                    n
                ]);
            },
            min (n) {
                return t("min", [
                    n
                ]);
            },
            sum (n) {
                return t("sum", [
                    n
                ]);
            },
            any (n) {
                return e("any", [
                    n
                ]);
            },
            jsonAgg (n) {
                return new ki({
                    aggregateFunctionNode: $s.create("json_agg", [
                        li(n) ? wn(n) : n.toOperationNode()
                    ])
                });
            },
            toJson (n) {
                return new Ft(Vk.create("to_json", [
                    li(n) ? wn(n) : n.toOperationNode()
                ]));
            }
        });
    }
    const t5 = q({
        is (e) {
            return e.kind === "UnaryOperationNode";
        },
        create (e, t) {
            return q({
                kind: "UnaryOperationNode",
                operator: e,
                operand: t
            });
        }
    });
    function n5(e, t) {
        return t5.create(na.create(e), ri(t));
    }
    const mo = q({
        is (e) {
            return e.kind === "CaseNode";
        },
        create (e) {
            return q({
                kind: "CaseNode",
                value: e
            });
        },
        cloneWithWhen (e, t) {
            return q({
                ...e,
                when: q(e.when ? [
                    ...e.when,
                    t
                ] : [
                    t
                ])
            });
        },
        cloneWithThen (e, t) {
            return q({
                ...e,
                when: e.when ? q([
                    ...e.when.slice(0, -1),
                    Of.cloneWithResult(e.when[e.when.length - 1], t)
                ]) : void 0
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    });
    class EP {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        when(...t) {
            return new kP({
                ...this.#e,
                node: mo.cloneWithWhen(this.#e.node, Of.create(Xn(t)))
            });
        }
    }
    class kP {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        then(t) {
            return new r5({
                ...this.#e,
                node: mo.cloneWithThen(this.#e.node, uS(t) ? dS(t) : Cn(t))
            });
        }
    }
    class r5 {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        when(...t) {
            return new kP({
                ...this.#e,
                node: mo.cloneWithWhen(this.#e.node, Of.create(Xn(t)))
            });
        }
        else(t) {
            return new i5({
                ...this.#e,
                node: mo.cloneWith(this.#e.node, {
                    else: uS(t) ? dS(t) : Cn(t)
                })
            });
        }
        end() {
            return new Ft(mo.cloneWith(this.#e.node, {
                isStatement: !1
            }));
        }
        endCase() {
            return new Ft(mo.cloneWith(this.#e.node, {
                isStatement: !0
            }));
        }
    }
    class i5 {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        end() {
            return new Ft(mo.cloneWith(this.#e.node, {
                isStatement: !1
            }));
        }
        endCase() {
            return new Ft(mo.cloneWith(this.#e.node, {
                isStatement: !0
            }));
        }
    }
    const Uk = q({
        is (e) {
            return e.kind === "JSONPathLegNode";
        },
        create (e, t) {
            return q({
                kind: "JSONPathLegNode",
                type: e,
                value: t
            });
        }
    });
    class nN {
        #e;
        constructor(t){
            this.#e = t;
        }
        at(t) {
            return this.#t("ArrayLocation", t);
        }
        key(t) {
            return this.#t("Member", t);
        }
        #t(t, n) {
            return Gm.is(this.#e) ? new Wd(Gm.cloneWithTraversal(this.#e, kd.is(this.#e.traversal) ? kd.cloneWithLeg(this.#e.traversal, Uk.create(t, n)) : dP.cloneWithValue(this.#e.traversal, wo.createImmediate(n)))) : new Wd(kd.cloneWithLeg(this.#e, Uk.create(t, n)));
        }
    }
    class Wd extends nN {
        #e;
        constructor(t){
            super(t), this.#e = t;
        }
        get expressionType() {}
        as(t) {
            return new o5(this, t);
        }
        $castTo() {
            return new Wd(this.#e);
        }
        $notNull() {
            return new Wd(this.#e);
        }
        toOperationNode() {
            return this.#e;
        }
    }
    class o5 {
        #e;
        #t;
        constructor(t, n){
            this.#e = t, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        toOperationNode() {
            return da.create(this.#e.toOperationNode(), Vr(this.#t) ? this.#t.toOperationNode() : Yt.create(this.#t));
        }
    }
    const Hk = q({
        is (e) {
            return e.kind === "TupleNode";
        },
        create (e) {
            return q({
                kind: "TupleNode",
                values: q(e)
            });
        }
    }), s5 = [
        "varchar",
        "char",
        "text",
        "integer",
        "int2",
        "int4",
        "int8",
        "smallint",
        "bigint",
        "boolean",
        "real",
        "double precision",
        "float4",
        "float8",
        "decimal",
        "numeric",
        "binary",
        "bytea",
        "date",
        "datetime",
        "time",
        "timetz",
        "timestamp",
        "timestamptz",
        "serial",
        "bigserial",
        "uuid",
        "json",
        "jsonb",
        "blob",
        "varbinary",
        "int4range",
        "int4multirange",
        "int8range",
        "int8multirange",
        "numrange",
        "nummultirange",
        "tsrange",
        "tsmultirange",
        "tstzrange",
        "tstzmultirange",
        "daterange",
        "datemultirange"
    ], a5 = [
        /^varchar\(\d+\)$/,
        /^char\(\d+\)$/,
        /^decimal\(\d+, \d+\)$/,
        /^numeric\(\d+, \d+\)$/,
        /^binary\(\d+\)$/,
        /^datetime\(\d+\)$/,
        /^time\(\d+\)$/,
        /^timetz\(\d+\)$/,
        /^timestamp\(\d+\)$/,
        /^timestamptz\(\d+\)$/,
        /^varbinary\(\d+\)$/
    ], l5 = q({
        is (e) {
            return e.kind === "DataTypeNode";
        },
        create (e) {
            return q({
                kind: "DataTypeNode",
                dataType: e
            });
        }
    });
    function c5(e) {
        return !!(s5.includes(e) || a5.some((t)=>t.test(e)));
    }
    function al(e) {
        if (Vr(e)) return e.toOperationNode();
        if (c5(e)) return l5.create(e);
        throw new Error(`invalid column data type ${JSON.stringify(e)}`);
    }
    const u5 = q({
        is (e) {
            return e.kind === "CastNode";
        },
        create (e, t) {
            return q({
                kind: "CastNode",
                expression: e,
                dataType: t
            });
        }
    });
    function gS(e = sy) {
        function t(i, o, s) {
            return new Ft(fS(i, o, s));
        }
        function n(i, o) {
            return new Ft(n5(i, o));
        }
        const r = Object.assign(t, {
            fn: void 0,
            eb: void 0,
            selectFrom (i) {
                return tN({
                    queryId: Tt(),
                    executor: e,
                    queryNode: Rt.createFrom(Vd(i))
                });
            },
            case (i) {
                return new EP({
                    node: mo.create(Us(i) ? void 0 : ri(i))
                });
            },
            ref (i, o) {
                return Us(o) ? new Ft(Xo(i)) : new nN(uW(i, o));
            },
            jsonPath () {
                return new nN(kd.create());
            },
            table (i) {
                return new Ft(wn(i));
            },
            val (i) {
                return new Ft(Cn(i));
            },
            refTuple (...i) {
                return new Ft(Hk.create(i.map(ri)));
            },
            tuple (...i) {
                return new Ft(Hk.create(i.map(Cn)));
            },
            lit (i) {
                return new Ft(dS(i));
            },
            unary: n,
            not (i) {
                return n("not", i);
            },
            exists (i) {
                return n("exists", i);
            },
            neg (i) {
                return n("-", i);
            },
            between (i, o, s) {
                return new Ft(Dc.create(ri(i), na.create("between"), ta.create(Cn(o), Cn(s))));
            },
            betweenSymmetric (i, o, s) {
                return new Ft(Dc.create(ri(i), na.create("between symmetric"), ta.create(Cn(o), Cn(s))));
            },
            and (i) {
                return Yo(i) ? new Ft(Jm(i, "and")) : new Ft(Ck(i, "and"));
            },
            or (i) {
                return Yo(i) ? new Ft(Jm(i, "or")) : new Ft(Ck(i, "or"));
            },
            parens (...i) {
                const o = Xn(i);
                return Mc.is(o) ? new Ft(o) : new Ft(Mc.create(o));
            },
            cast (i, o) {
                return new Ft(u5.create(ri(i), al(o)));
            },
            withSchema (i) {
                return gS(e.withPluginAtFront(new Af(i)));
            }
        });
        return r.fn = _P(), r.eb = r, r;
    }
    function su(e) {
        return gS();
    }
    function vl(e) {
        if (Vr(e)) return e.toOperationNode();
        if (pi(e)) return e(su()).toOperationNode();
        throw new Error(`invalid expression: ${JSON.stringify(e)}`);
    }
    function CP(e) {
        if (Vr(e)) return e.toOperationNode();
        if (pi(e)) return e(su()).toOperationNode();
        throw new Error(`invalid aliased expression: ${JSON.stringify(e)}`);
    }
    function Ff(e) {
        return eW(e) || tW(e) || pi(e);
    }
    function Vd(e) {
        return Yo(e) ? e.map((t)=>Ud(t)) : [
            Ud(e)
        ];
    }
    function Ud(e) {
        return li(e) ? jP(e) : CP(e);
    }
    function jP(e) {
        const t = " as ";
        if (e.includes(t)) {
            const [n, r] = e.split(t).map(RP);
            return da.create(wn(n), Yt.create(r));
        } else return wn(e);
    }
    function wn(e) {
        const t = ".";
        if (e.includes(t)) {
            const [n, r] = e.split(t).map(RP);
            return Ks.createWithSchema(n, r);
        } else return Ks.create(e);
    }
    function RP(e) {
        return e.trim();
    }
    const OP = q({
        is (e) {
            return e.kind === "AddColumnNode";
        },
        create (e) {
            return q({
                kind: "AddColumnNode",
                column: e
            });
        }
    }), Zt = q({
        is (e) {
            return e.kind === "ColumnDefinitionNode";
        },
        create (e, t) {
            return q({
                kind: "ColumnDefinitionNode",
                column: In.create(e),
                dataType: t
            });
        },
        cloneWithFrontModifier (e, t) {
            return q({
                ...e,
                frontModifiers: e.frontModifiers ? q([
                    ...e.frontModifiers,
                    t
                ]) : [
                    t
                ]
            });
        },
        cloneWithEndModifier (e, t) {
            return q({
                ...e,
                endModifiers: e.endModifiers ? q([
                    ...e.endModifiers,
                    t
                ]) : [
                    t
                ]
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    }), TP = q({
        is (e) {
            return e.kind === "DropColumnNode";
        },
        create (e) {
            return q({
                kind: "DropColumnNode",
                column: In.create(e)
            });
        }
    }), PP = q({
        is (e) {
            return e.kind === "RenameColumnNode";
        },
        create (e, t) {
            return q({
                kind: "RenameColumnNode",
                column: In.create(e),
                renameTo: In.create(t)
            });
        }
    }), yS = q({
        is (e) {
            return e.kind === "CheckConstraintNode";
        },
        create (e, t) {
            return q({
                kind: "CheckConstraintNode",
                expression: e,
                name: t ? Yt.create(t) : void 0
            });
        }
    }), d5 = [
        "no action",
        "restrict",
        "cascade",
        "set null",
        "set default"
    ], im = q({
        is (e) {
            return e.kind === "ReferencesNode";
        },
        create (e, t) {
            return q({
                kind: "ReferencesNode",
                table: e,
                columns: q([
                    ...t
                ])
            });
        },
        cloneWithOnDelete (e, t) {
            return q({
                ...e,
                onDelete: t
            });
        },
        cloneWithOnUpdate (e, t) {
            return q({
                ...e,
                onUpdate: t
            });
        }
    });
    function AP(e) {
        return Vr(e) ? e.toOperationNode() : wo.createImmediate(e);
    }
    const jh = q({
        is (e) {
            return e.kind === "GeneratedNode";
        },
        create (e) {
            return q({
                kind: "GeneratedNode",
                ...e
            });
        },
        createWithExpression (e) {
            return q({
                kind: "GeneratedNode",
                always: !0,
                expression: e
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    }), f5 = q({
        is (e) {
            return e.kind === "DefaultValueNode";
        },
        create (e) {
            return q({
                kind: "DefaultValueNode",
                defaultValue: e
            });
        }
    });
    function tg(e) {
        if (d5.includes(e)) return e;
        throw new Error(`invalid OnModifyForeignAction ${e}`);
    }
    class $t {
        #e;
        constructor(t){
            this.#e = t;
        }
        autoIncrement() {
            return new $t(Zt.cloneWith(this.#e, {
                autoIncrement: !0
            }));
        }
        identity() {
            return new $t(Zt.cloneWith(this.#e, {
                identity: !0
            }));
        }
        primaryKey() {
            return new $t(Zt.cloneWith(this.#e, {
                primaryKey: !0
            }));
        }
        references(t) {
            const n = Xo(t);
            if (!n.table || aS.is(n.column)) throw new Error(`invalid call references('${t}'). The reference must have format table.column or schema.table.column`);
            return new $t(Zt.cloneWith(this.#e, {
                references: im.create(n.table, [
                    n.column
                ])
            }));
        }
        onDelete(t) {
            if (!this.#e.references) throw new Error("on delete constraint can only be added for foreign keys");
            return new $t(Zt.cloneWith(this.#e, {
                references: im.cloneWithOnDelete(this.#e.references, tg(t))
            }));
        }
        onUpdate(t) {
            if (!this.#e.references) throw new Error("on update constraint can only be added for foreign keys");
            return new $t(Zt.cloneWith(this.#e, {
                references: im.cloneWithOnUpdate(this.#e.references, tg(t))
            }));
        }
        unique() {
            return new $t(Zt.cloneWith(this.#e, {
                unique: !0
            }));
        }
        notNull() {
            return new $t(Zt.cloneWith(this.#e, {
                notNull: !0
            }));
        }
        unsigned() {
            return new $t(Zt.cloneWith(this.#e, {
                unsigned: !0
            }));
        }
        defaultTo(t) {
            return new $t(Zt.cloneWith(this.#e, {
                defaultTo: f5.create(AP(t))
            }));
        }
        check(t) {
            return new $t(Zt.cloneWith(this.#e, {
                check: yS.create(t.toOperationNode())
            }));
        }
        generatedAlwaysAs(t) {
            return new $t(Zt.cloneWith(this.#e, {
                generated: jh.createWithExpression(t.toOperationNode())
            }));
        }
        generatedAlwaysAsIdentity() {
            return new $t(Zt.cloneWith(this.#e, {
                generated: jh.create({
                    identity: !0,
                    always: !0
                })
            }));
        }
        generatedByDefaultAsIdentity() {
            return new $t(Zt.cloneWith(this.#e, {
                generated: jh.create({
                    identity: !0,
                    byDefault: !0
                })
            }));
        }
        stored() {
            if (!this.#e.generated) throw new Error("stored() can only be called after generatedAlwaysAs");
            return new $t(Zt.cloneWith(this.#e, {
                generated: jh.cloneWith(this.#e.generated, {
                    stored: !0
                })
            }));
        }
        modifyFront(t) {
            return new $t(Zt.cloneWithFrontModifier(this.#e, t.toOperationNode()));
        }
        nullsNotDistinct() {
            return new $t(Zt.cloneWith(this.#e, {
                nullsNotDistinct: !0
            }));
        }
        ifNotExists() {
            return new $t(Zt.cloneWith(this.#e, {
                ifNotExists: !0
            }));
        }
        modifyEnd(t) {
            return new $t(Zt.cloneWithEndModifier(this.#e, t.toOperationNode()));
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e;
        }
    }
    pt($t, "don't await ColumnDefinitionBuilder instances directly.");
    const FP = q({
        is (e) {
            return e.kind === "ModifyColumnNode";
        },
        create (e) {
            return q({
                kind: "ModifyColumnNode",
                column: e
            });
        }
    }), ng = q({
        is (e) {
            return e.kind === "ForeignKeyConstraintNode";
        },
        create (e, t, n, r) {
            return q({
                kind: "ForeignKeyConstraintNode",
                columns: e,
                references: im.create(t, n),
                name: r ? Yt.create(r) : void 0
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    });
    class Lc {
        #e;
        constructor(t){
            this.#e = t;
        }
        onDelete(t) {
            return new Lc(ng.cloneWith(this.#e, {
                onDelete: tg(t)
            }));
        }
        onUpdate(t) {
            return new Lc(ng.cloneWith(this.#e, {
                onUpdate: tg(t)
            }));
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e;
        }
    }
    pt(Lc, "don't await ForeignKeyConstraintBuilder instances directly.");
    const om = q({
        is (e) {
            return e.kind === "AddConstraintNode";
        },
        create (e) {
            return q({
                kind: "AddConstraintNode",
                constraint: e
            });
        }
    }), vS = q({
        is (e) {
            return e.kind === "UniqueConstraintNode";
        },
        create (e, t, n) {
            return q({
                kind: "UniqueConstraintNode",
                columns: q(e.map(In.create)),
                name: t ? Yt.create(t) : void 0,
                nullsNotDistinct: n
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    }), sm = q({
        is (e) {
            return e.kind === "DropConstraintNode";
        },
        create (e) {
            return q({
                kind: "DropConstraintNode",
                constraintName: Yt.create(e)
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    }), Xu = q({
        is (e) {
            return e.kind === "AlterColumnNode";
        },
        create (e, t, n) {
            return q({
                kind: "AlterColumnNode",
                column: In.create(e),
                [t]: n
            });
        }
    });
    class xS {
        #e;
        constructor(t){
            this.#e = t;
        }
        setDataType(t) {
            return new ac(Xu.create(this.#e, "dataType", al(t)));
        }
        setDefault(t) {
            return new ac(Xu.create(this.#e, "setDefault", AP(t)));
        }
        dropDefault() {
            return new ac(Xu.create(this.#e, "dropDefault", !0));
        }
        setNotNull() {
            return new ac(Xu.create(this.#e, "setNotNull", !0));
        }
        dropNotNull() {
            return new ac(Xu.create(this.#e, "dropNotNull", !0));
        }
        $call(t) {
            return t(this);
        }
    }
    pt(xS, "don't await AlterColumnBuilder instances");
    class ac {
        #e;
        constructor(t){
            this.#e = t;
        }
        toOperationNode() {
            return this.#e;
        }
    }
    pt(ac, "don't await AlteredColumnBuilder instances");
    class La {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(La, "don't await AlterTableExecutor instances directly. To execute the query you need to call `execute`");
    class Hd {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        onDelete(t) {
            return new Hd({
                ...this.#e,
                constraintBuilder: this.#e.constraintBuilder.onDelete(t)
            });
        }
        onUpdate(t) {
            return new Hd({
                ...this.#e,
                constraintBuilder: this.#e.constraintBuilder.onUpdate(t)
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(Ot.cloneWithTableProps(this.#e.node, {
                addConstraint: om.create(this.#e.constraintBuilder.toOperationNode())
            }), this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(Hd, "don't await AlterTableAddForeignKeyConstraintBuilder instances directly. To execute the query you need to call `execute`");
    class Ec {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        ifExists() {
            return new Ec({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    dropConstraint: sm.cloneWith(this.#e.node.dropConstraint, {
                        ifExists: !0
                    })
                })
            });
        }
        cascade() {
            return new Ec({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    dropConstraint: sm.cloneWith(this.#e.node.dropConstraint, {
                        modifier: "cascade"
                    })
                })
            });
        }
        restrict() {
            return new Ec({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    dropConstraint: sm.cloneWith(this.#e.node.dropConstraint, {
                        modifier: "restrict"
                    })
                })
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(Ec, "don't await AlterTableDropConstraintBuilder instances directly. To execute the query you need to call `execute`");
    const DP = q({
        is (e) {
            return e.kind === "PrimaryKeyConstraintNode";
        },
        create (e, t) {
            return q({
                kind: "PrimaryKeyConstraintNode",
                columns: q(e.map(In.create)),
                name: t ? Yt.create(t) : void 0
            });
        }
    }), lc = q({
        is (e) {
            return e.kind === "AddIndexNode";
        },
        create (e) {
            return q({
                kind: "AddIndexNode",
                name: Yt.create(e)
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        },
        cloneWithColumns (e, t) {
            return q({
                ...e,
                columns: [
                    ...e.columns || [],
                    ...t
                ]
            });
        }
    });
    class qs {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        unique() {
            return new qs({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    addIndex: lc.cloneWith(this.#e.node.addIndex, {
                        unique: !0
                    })
                })
            });
        }
        column(t) {
            return new qs({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    addIndex: lc.cloneWithColumns(this.#e.node.addIndex, [
                        Qm(t)
                    ])
                })
            });
        }
        columns(t) {
            return new qs({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    addIndex: lc.cloneWithColumns(this.#e.node.addIndex, t.map(Qm))
                })
            });
        }
        expression(t) {
            return new qs({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    addIndex: lc.cloneWithColumns(this.#e.node.addIndex, [
                        t.toOperationNode()
                    ])
                })
            });
        }
        using(t) {
            return new qs({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    addIndex: lc.cloneWith(this.#e.node.addIndex, {
                        using: sr.createWithSql(t)
                    })
                })
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(qs, "don't await AlterTableAddIndexBuilder instances directly. To execute the query you need to call `execute`");
    class Df {
        #e;
        constructor(t){
            this.#e = t;
        }
        toOperationNode() {
            return this.#e;
        }
        nullsNotDistinct() {
            return new Df(vS.cloneWith(this.#e, {
                nullsNotDistinct: !0
            }));
        }
    }
    pt(Df, "don't await UniqueConstraintNodeBuilder instances directly.");
    class MP {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        renameTo(t) {
            return new La({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    renameTo: wn(t)
                })
            });
        }
        setSchema(t) {
            return new La({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    setSchema: Yt.create(t)
                })
            });
        }
        alterColumn(t, n) {
            const r = n(new xS(t));
            return new ji({
                ...this.#e,
                node: Ot.cloneWithColumnAlteration(this.#e.node, r.toOperationNode())
            });
        }
        dropColumn(t) {
            return new ji({
                ...this.#e,
                node: Ot.cloneWithColumnAlteration(this.#e.node, TP.create(t))
            });
        }
        renameColumn(t, n) {
            return new ji({
                ...this.#e,
                node: Ot.cloneWithColumnAlteration(this.#e.node, PP.create(t, n))
            });
        }
        addColumn(t, n, r = Hs) {
            const i = r(new $t(Zt.create(t, al(n))));
            return new ji({
                ...this.#e,
                node: Ot.cloneWithColumnAlteration(this.#e.node, OP.create(i.toOperationNode()))
            });
        }
        modifyColumn(t, n, r = Hs) {
            const i = r(new $t(Zt.create(t, al(n))));
            return new ji({
                ...this.#e,
                node: Ot.cloneWithColumnAlteration(this.#e.node, FP.create(i.toOperationNode()))
            });
        }
        addUniqueConstraint(t, n, r = Hs) {
            const i = r(new Df(vS.create(n, t)));
            return new La({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    addConstraint: om.create(i.toOperationNode())
                })
            });
        }
        addCheckConstraint(t, n) {
            return new La({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    addConstraint: om.create(yS.create(n.toOperationNode(), t))
                })
            });
        }
        addForeignKeyConstraint(t, n, r, i) {
            return new Hd({
                ...this.#e,
                constraintBuilder: new Lc(ng.create(n.map(In.create), wn(r), i.map(In.create), t))
            });
        }
        addPrimaryKeyConstraint(t, n) {
            return new La({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    addConstraint: om.create(DP.create(n, t))
                })
            });
        }
        dropConstraint(t) {
            return new Ec({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    dropConstraint: sm.create(t)
                })
            });
        }
        addIndex(t) {
            return new qs({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    addIndex: lc.create(t)
                })
            });
        }
        dropIndex(t) {
            return new La({
                ...this.#e,
                node: Ot.cloneWithTableProps(this.#e.node, {
                    dropIndex: _d.create(t)
                })
            });
        }
        $call(t) {
            return t(this);
        }
    }
    pt(MP, "don't await AlterTableBuilder instances");
    class ji {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        alterColumn(t, n) {
            const r = n(new xS(t));
            return new ji({
                ...this.#e,
                node: Ot.cloneWithColumnAlteration(this.#e.node, r.toOperationNode())
            });
        }
        dropColumn(t) {
            return new ji({
                ...this.#e,
                node: Ot.cloneWithColumnAlteration(this.#e.node, TP.create(t))
            });
        }
        renameColumn(t, n) {
            return new ji({
                ...this.#e,
                node: Ot.cloneWithColumnAlteration(this.#e.node, PP.create(t, n))
            });
        }
        addColumn(t, n, r = Hs) {
            const i = r(new $t(Zt.create(t, al(n))));
            return new ji({
                ...this.#e,
                node: Ot.cloneWithColumnAlteration(this.#e.node, OP.create(i.toOperationNode()))
            });
        }
        modifyColumn(t, n, r = Hs) {
            const i = r(new $t(Zt.create(t, al(n))));
            return new ji({
                ...this.#e,
                node: Ot.cloneWithColumnAlteration(this.#e.node, FP.create(i.toOperationNode()))
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(ji, "don't await AlterTableColumnAlteringBuilder instances directly. To execute the query you need to call `execute`");
    class LP extends bP {
        transformValue(t) {
            return {
                ...super.transformValue(t),
                immediate: !0
            };
        }
    }
    class Ii {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        ifNotExists() {
            return new Ii({
                ...this.#e,
                node: zo.cloneWith(this.#e.node, {
                    ifNotExists: !0
                })
            });
        }
        unique() {
            return new Ii({
                ...this.#e,
                node: zo.cloneWith(this.#e.node, {
                    unique: !0
                })
            });
        }
        nullsNotDistinct() {
            return new Ii({
                ...this.#e,
                node: zo.cloneWith(this.#e.node, {
                    nullsNotDistinct: !0
                })
            });
        }
        on(t) {
            return new Ii({
                ...this.#e,
                node: zo.cloneWith(this.#e.node, {
                    table: wn(t)
                })
            });
        }
        column(t) {
            return new Ii({
                ...this.#e,
                node: zo.cloneWithColumns(this.#e.node, [
                    Qm(t)
                ])
            });
        }
        columns(t) {
            return new Ii({
                ...this.#e,
                node: zo.cloneWithColumns(this.#e.node, t.map(Qm))
            });
        }
        expression(t) {
            return new Ii({
                ...this.#e,
                node: zo.cloneWithColumns(this.#e.node, [
                    t.toOperationNode()
                ])
            });
        }
        using(t) {
            return new Ii({
                ...this.#e,
                node: zo.cloneWith(this.#e.node, {
                    using: sr.createWithSql(t)
                })
            });
        }
        where(...t) {
            const n = new LP;
            return new Ii({
                ...this.#e,
                node: qe.cloneWithWhere(this.#e.node, n.transformNode(Xn(t)))
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(Ii, "don't await CreateIndexBuilder instances directly. To execute the query you need to call `execute`");
    class ay {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        ifNotExists() {
            return new ay({
                ...this.#e,
                node: sP.cloneWith(this.#e.node, {
                    ifNotExists: !0
                })
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(ay, "don't await CreateSchemaBuilder instances directly. To execute the query you need to call `execute`");
    function p5(e) {
        if (Xz.includes(e)) return e;
        throw new Error(`invalid OnCommitAction ${e}`);
    }
    class Ar {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        temporary() {
            return new Ar({
                ...this.#e,
                node: Xr.cloneWith(this.#e.node, {
                    temporary: !0
                })
            });
        }
        onCommit(t) {
            return new Ar({
                ...this.#e,
                node: Xr.cloneWith(this.#e.node, {
                    onCommit: p5(t)
                })
            });
        }
        ifNotExists() {
            return new Ar({
                ...this.#e,
                node: Xr.cloneWith(this.#e.node, {
                    ifNotExists: !0
                })
            });
        }
        addColumn(t, n, r = Hs) {
            const i = r(new $t(Zt.create(t, al(n))));
            return new Ar({
                ...this.#e,
                node: Xr.cloneWithColumn(this.#e.node, i.toOperationNode())
            });
        }
        addPrimaryKeyConstraint(t, n) {
            return new Ar({
                ...this.#e,
                node: Xr.cloneWithConstraint(this.#e.node, DP.create(n, t))
            });
        }
        addUniqueConstraint(t, n, r = Hs) {
            const i = r(new Df(vS.create(n, t)));
            return new Ar({
                ...this.#e,
                node: Xr.cloneWithConstraint(this.#e.node, i.toOperationNode())
            });
        }
        addCheckConstraint(t, n) {
            return new Ar({
                ...this.#e,
                node: Xr.cloneWithConstraint(this.#e.node, yS.create(n.toOperationNode(), t))
            });
        }
        addForeignKeyConstraint(t, n, r, i, o = Hs) {
            const s = o(new Lc(ng.create(n.map(In.create), wn(r), i.map(In.create), t)));
            return new Ar({
                ...this.#e,
                node: Xr.cloneWithConstraint(this.#e.node, s.toOperationNode())
            });
        }
        modifyFront(t) {
            return new Ar({
                ...this.#e,
                node: Xr.cloneWithFrontModifier(this.#e.node, t.toOperationNode())
            });
        }
        modifyEnd(t) {
            return new Ar({
                ...this.#e,
                node: Xr.cloneWithEndModifier(this.#e.node, t.toOperationNode())
            });
        }
        as(t) {
            return new Ar({
                ...this.#e,
                node: Xr.cloneWith(this.#e.node, {
                    selectQuery: vl(t)
                })
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(Ar, "don't await CreateTableBuilder instances directly. To execute the query you need to call `execute`");
    class kc {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        on(t) {
            return new kc({
                ...this.#e,
                node: _d.cloneWith(this.#e.node, {
                    table: wn(t)
                })
            });
        }
        ifExists() {
            return new kc({
                ...this.#e,
                node: _d.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        cascade() {
            return new kc({
                ...this.#e,
                node: _d.cloneWith(this.#e.node, {
                    cascade: !0
                })
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(kc, "don't await DropIndexBuilder instances directly. To execute the query you need to call `execute`");
    class Kd {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        ifExists() {
            return new Kd({
                ...this.#e,
                node: Q0.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        cascade() {
            return new Kd({
                ...this.#e,
                node: Q0.cloneWith(this.#e.node, {
                    cascade: !0
                })
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(Kd, "don't await DropSchemaBuilder instances directly. To execute the query you need to call `execute`");
    class Gd {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        ifExists() {
            return new Gd({
                ...this.#e,
                node: J0.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        cascade() {
            return new Gd({
                ...this.#e,
                node: J0.cloneWith(this.#e.node, {
                    cascade: !0
                })
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(Gd, "don't await DropTableBuilder instances directly. To execute the query you need to call `execute`");
    const Fs = q({
        is (e) {
            return e.kind === "CreateViewNode";
        },
        create (e) {
            return q({
                kind: "CreateViewNode",
                name: ea.create(e)
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    });
    class h5 {
        #e = new LP;
        transformQuery(t) {
            return this.#e.transformNode(t.node);
        }
        transformResult(t) {
            return Promise.resolve(t.result);
        }
    }
    class Vo {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        temporary() {
            return new Vo({
                ...this.#e,
                node: Fs.cloneWith(this.#e.node, {
                    temporary: !0
                })
            });
        }
        materialized() {
            return new Vo({
                ...this.#e,
                node: Fs.cloneWith(this.#e.node, {
                    materialized: !0
                })
            });
        }
        ifNotExists() {
            return new Vo({
                ...this.#e,
                node: Fs.cloneWith(this.#e.node, {
                    ifNotExists: !0
                })
            });
        }
        orReplace() {
            return new Vo({
                ...this.#e,
                node: Fs.cloneWith(this.#e.node, {
                    orReplace: !0
                })
            });
        }
        columns(t) {
            return new Vo({
                ...this.#e,
                node: Fs.cloneWith(this.#e.node, {
                    columns: t.map(pP)
                })
            });
        }
        as(t) {
            const n = t.withPlugin(new h5).toOperationNode();
            return new Vo({
                ...this.#e,
                node: Fs.cloneWith(this.#e.node, {
                    as: n
                })
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(Vo, "don't await CreateViewBuilder instances directly. To execute the query you need to call `execute`");
    const am = q({
        is (e) {
            return e.kind === "DropViewNode";
        },
        create (e) {
            return q({
                kind: "DropViewNode",
                name: ea.create(e)
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    });
    class Cc {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        materialized() {
            return new Cc({
                ...this.#e,
                node: am.cloneWith(this.#e.node, {
                    materialized: !0
                })
            });
        }
        ifExists() {
            return new Cc({
                ...this.#e,
                node: am.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        cascade() {
            return new Cc({
                ...this.#e,
                node: am.cloneWith(this.#e.node, {
                    cascade: !0
                })
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(Cc, "don't await DropViewBuilder instances directly. To execute the query you need to call `execute`");
    const $P = q({
        is (e) {
            return e.kind === "CreateTypeNode";
        },
        create (e) {
            return q({
                kind: "CreateTypeNode",
                name: e
            });
        },
        cloneWithEnum (e, t) {
            return q({
                ...e,
                enum: cS.create(t.map((n)=>wo.createImmediate(n)))
            });
        }
    });
    class ly {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        asEnum(t) {
            return new ly({
                ...this.#e,
                node: $P.cloneWithEnum(this.#e.node, t)
            });
        }
        $call(t) {
            return t(this);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(ly, "don't await CreateTypeBuilder instances directly. To execute the query you need to call `execute`");
    const qP = q({
        is (e) {
            return e.kind === "DropTypeNode";
        },
        create (e) {
            return q({
                kind: "DropTypeNode",
                name: e
            });
        },
        cloneWith (e, t) {
            return q({
                ...e,
                ...t
            });
        }
    });
    class cy {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        ifExists() {
            return new cy({
                ...this.#e,
                node: qP.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        $call(t) {
            return t(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    pt(cy, "don't await DropTypeBuilder instances directly. To execute the query you need to call `execute`");
    function Kk(e) {
        const t = ".";
        if (e.includes(t)) {
            const n = e.split(t).map(m5);
            if (n.length === 2) return ea.createWithSchema(n[0], n[1]);
            throw new Error(`invalid schemable identifier ${e}`);
        } else return ea.create(e);
    }
    function m5(e) {
        return e.trim();
    }
    class Rd {
        #e;
        constructor(t){
            this.#e = t;
        }
        createTable(t) {
            return new Ar({
                queryId: Tt(),
                executor: this.#e,
                node: Xr.create(wn(t))
            });
        }
        dropTable(t) {
            return new Gd({
                queryId: Tt(),
                executor: this.#e,
                node: J0.create(wn(t))
            });
        }
        createIndex(t) {
            return new Ii({
                queryId: Tt(),
                executor: this.#e,
                node: zo.create(t)
            });
        }
        dropIndex(t) {
            return new kc({
                queryId: Tt(),
                executor: this.#e,
                node: _d.create(t)
            });
        }
        createSchema(t) {
            return new ay({
                queryId: Tt(),
                executor: this.#e,
                node: sP.create(t)
            });
        }
        dropSchema(t) {
            return new Kd({
                queryId: Tt(),
                executor: this.#e,
                node: Q0.create(t)
            });
        }
        alterTable(t) {
            return new MP({
                queryId: Tt(),
                executor: this.#e,
                node: Ot.create(wn(t))
            });
        }
        createView(t) {
            return new Vo({
                queryId: Tt(),
                executor: this.#e,
                node: Fs.create(t)
            });
        }
        dropView(t) {
            return new Cc({
                queryId: Tt(),
                executor: this.#e,
                node: am.create(t)
            });
        }
        createType(t) {
            return new ly({
                queryId: Tt(),
                executor: this.#e,
                node: $P.create(Kk(t))
            });
        }
        dropType(t) {
            return new cy({
                queryId: Tt(),
                executor: this.#e,
                node: qP.create(Kk(t))
            });
        }
        withPlugin(t) {
            return new Rd(this.#e.withPlugin(t));
        }
        withoutPlugins() {
            return new Rd(this.#e.withoutPlugins());
        }
        withSchema(t) {
            return new Rd(this.#e.withPluginAtFront(new Af(t)));
        }
    }
    class g5 {
        ref(t) {
            return new lW(t);
        }
    }
    class y5 {
        #e;
        constructor(t){
            this.#e = t;
        }
        async provideConnection(t) {
            const n = await this.#e.acquireConnection();
            try {
                return await t(n);
            } finally{
                await this.#e.releaseConnection(n);
            }
        }
    }
    class Wa extends wP {
        #e;
        #t;
        #n;
        constructor(t, n, r, i = []){
            super(i), this.#e = t, this.#t = n, this.#n = r;
        }
        get adapter() {
            return this.#t;
        }
        compileQuery(t) {
            return this.#e.compileQuery(t);
        }
        provideConnection(t) {
            return this.#n.provideConnection(t);
        }
        withPlugins(t) {
            return new Wa(this.#e, this.#t, this.#n, [
                ...this.plugins,
                ...t
            ]);
        }
        withPlugin(t) {
            return new Wa(this.#e, this.#t, this.#n, [
                ...this.plugins,
                t
            ]);
        }
        withPluginAtFront(t) {
            return new Wa(this.#e, this.#t, this.#n, [
                t,
                ...this.plugins
            ]);
        }
        withConnectionProvider(t) {
            return new Wa(this.#e, this.#t, t, [
                ...this.plugins
            ]);
        }
        withoutPlugins() {
            return new Wa(this.#e, this.#t, this.#n, []);
        }
    }
    function Gk() {
        return typeof performance < "u" && pi(performance.now) ? performance.now() : Date.now();
    }
    class v5 {
        #e;
        #t;
        #n;
        #r;
        #i;
        #a = new WeakSet;
        constructor(t, n){
            this.#r = !1, this.#e = t, this.#t = n;
        }
        async init() {
            if (this.#i) throw new Error("driver has already been destroyed");
            this.#n || (this.#n = this.#e.init().then(()=>{
                this.#r = !0;
            }).catch((t)=>(this.#n = void 0, Promise.reject(t)))), await this.#n;
        }
        async acquireConnection() {
            if (this.#i) throw new Error("driver has already been destroyed");
            this.#r || await this.init();
            const t = await this.#e.acquireConnection();
            return this.#a.has(t) || (this.#s() && this.#o(t), this.#a.add(t)), t;
        }
        async releaseConnection(t) {
            await this.#e.releaseConnection(t);
        }
        beginTransaction(t, n) {
            return this.#e.beginTransaction(t, n);
        }
        commitTransaction(t) {
            return this.#e.commitTransaction(t);
        }
        rollbackTransaction(t) {
            return this.#e.rollbackTransaction(t);
        }
        async destroy() {
            this.#n && (await this.#n, this.#i || (this.#i = this.#e.destroy().catch((t)=>(this.#i = void 0, Promise.reject(t)))), await this.#i);
        }
        #s() {
            return this.#t.isLevelEnabled("query") || this.#t.isLevelEnabled("error");
        }
        #o(t) {
            const n = t.executeQuery;
            t.executeQuery = async (r)=>{
                let i;
                const o = Gk();
                try {
                    return await n.call(t, r);
                } catch (s) {
                    throw i = s, await this.#l(s, r, o), s;
                } finally{
                    i || await this.#u(r, o);
                }
            };
        }
        async #l(t, n, r) {
            await this.#t.error(()=>({
                    level: "error",
                    error: t,
                    query: n,
                    queryDurationMillis: this.#c(r)
                }));
        }
        async #u(t, n) {
            await this.#t.query(()=>({
                    level: "query",
                    query: t,
                    queryDurationMillis: this.#c(n)
                }));
        }
        #c(t) {
            return Gk() - t;
        }
    }
    const x5 = ()=>{};
    class BP {
        #e;
        #t;
        constructor(t){
            this.#e = t;
        }
        async provideConnection(t) {
            for(; this.#t;)await this.#t.catch(x5);
            return this.#t = this.#n(t).finally(()=>{
                this.#t = void 0;
            }), this.#t;
        }
        async #n(t) {
            return await t(this.#e);
        }
    }
    const b5 = [
        "read uncommitted",
        "read committed",
        "repeatable read",
        "serializable",
        "snapshot"
    ];
    q([
        "query",
        "error"
    ]);
    class w5 {
        #e;
        #t;
        constructor(t){
            pi(t) ? (this.#t = t, this.#e = q({
                query: !0,
                error: !0
            })) : (this.#t = N5, this.#e = q({
                query: t.includes("query"),
                error: t.includes("error")
            }));
        }
        isLevelEnabled(t) {
            return this.#e[t];
        }
        async query(t) {
            this.#e.query && await this.#t(t());
        }
        async error(t) {
            this.#e.error && await this.#t(t());
        }
    }
    function N5(e) {
        e.level === "query" ? (console.log(`kysely:query: ${e.query.sql}`), console.log(`kysely:query: duration: ${e.queryDurationMillis.toFixed(1)}ms`)) : e.level === "error" && (e.error instanceof Error ? console.error(`kysely:error: ${e.error.stack ?? e.error.message}`) : console.error(`kysely:error: ${JSON.stringify({
            error: e.error,
            query: e.query.sql,
            queryDurationMillis: e.queryDurationMillis
        })}`));
    }
    function S5(e) {
        return po(e) && pi(e.compile);
    }
    let bS = class cd extends Ls {
        #e;
        constructor(t){
            let n, r;
            if (I5(t)) n = {
                executor: t.executor
            }, r = {
                ...t
            };
            else {
                const i = t.dialect, o = i.createDriver(), s = i.createQueryCompiler(), l = i.createAdapter(), u = new w5(t.log ?? []), f = new v5(o, u), p = new y5(f), m = new Wa(s, l, p, t.plugins ?? []);
                n = {
                    executor: m
                }, r = {
                    config: t,
                    executor: m,
                    dialect: i,
                    driver: f
                };
            }
            super(n), this.#e = q(r);
        }
        get schema() {
            return new Rd(this.#e.executor);
        }
        get dynamic() {
            return new g5;
        }
        get introspection() {
            return this.#e.dialect.createIntrospector(this.withoutPlugins());
        }
        case(t) {
            return new EP({
                node: mo.create(Us(t) ? void 0 : vl(t))
            });
        }
        get fn() {
            return _P();
        }
        transaction() {
            return new uy({
                ...this.#e
            });
        }
        connection() {
            return new zP({
                ...this.#e
            });
        }
        withPlugin(t) {
            return new cd({
                ...this.#e,
                executor: this.#e.executor.withPlugin(t)
            });
        }
        withoutPlugins() {
            return new cd({
                ...this.#e,
                executor: this.#e.executor.withoutPlugins()
            });
        }
        withSchema(t) {
            return new cd({
                ...this.#e,
                executor: this.#e.executor.withPluginAtFront(new Af(t))
            });
        }
        withTables() {
            return new cd({
                ...this.#e
            });
        }
        async destroy() {
            await this.#e.driver.destroy();
        }
        get isTransaction() {
            return !1;
        }
        getExecutor() {
            return this.#e.executor;
        }
        executeQuery(t, n = Tt()) {
            const r = S5(t) ? t.compile() : t;
            return this.getExecutor().executeQuery(r, n);
        }
    };
    class fc extends bS {
        #e;
        constructor(t){
            super(t), this.#e = t;
        }
        get isTransaction() {
            return !0;
        }
        transaction() {
            throw new Error("calling the transaction method for a Transaction is not supported");
        }
        connection() {
            throw new Error("calling the connection method for a Transaction is not supported");
        }
        async destroy() {
            throw new Error("calling the destroy method for a Transaction is not supported");
        }
        withPlugin(t) {
            return new fc({
                ...this.#e,
                executor: this.#e.executor.withPlugin(t)
            });
        }
        withoutPlugins() {
            return new fc({
                ...this.#e,
                executor: this.#e.executor.withoutPlugins()
            });
        }
        withSchema(t) {
            return new fc({
                ...this.#e,
                executor: this.#e.executor.withPluginAtFront(new Af(t))
            });
        }
        withTables() {
            return new fc({
                ...this.#e
            });
        }
    }
    function I5(e) {
        return po(e) && po(e.config) && po(e.driver) && po(e.executor) && po(e.dialect);
    }
    class zP {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        async execute(t) {
            return this.#e.executor.provideConnection(async (n)=>{
                const r = this.#e.executor.withConnectionProvider(new BP(n)), i = new bS({
                    ...this.#e,
                    executor: r
                });
                return await t(i);
            });
        }
    }
    pt(zP, "don't await ConnectionBuilder instances directly. To execute the query you need to call the `execute` method");
    class uy {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        setIsolationLevel(t) {
            return new uy({
                ...this.#e,
                isolationLevel: t
            });
        }
        async execute(t) {
            const { isolationLevel: n, ...r } = this.#e, i = {
                isolationLevel: n
            };
            return _5(i), this.#e.executor.provideConnection(async (o)=>{
                const s = this.#e.executor.withConnectionProvider(new BP(o)), l = new fc({
                    ...r,
                    executor: s
                });
                try {
                    await this.#e.driver.beginTransaction(o, i);
                    const u = await t(l);
                    return await this.#e.driver.commitTransaction(o), u;
                } catch (u) {
                    throw await this.#e.driver.rollbackTransaction(o), u;
                }
            });
        }
    }
    pt(uy, "don't await TransactionBuilder instances directly. To execute the transaction you need to call the `execute` method");
    function _5(e) {
        if (e.isolationLevel && !b5.includes(e.isolationLevel)) throw new Error(`invalid transaction isolation level ${e.isolationLevel}`);
    }
    class jc {
        #e;
        constructor(t){
            this.#e = q(t);
        }
        get expressionType() {}
        get isRawBuilder() {
            return !0;
        }
        as(t) {
            return new WP(this, t);
        }
        $castTo() {
            return new jc({
                ...this.#e
            });
        }
        $notNull() {
            return new jc(this.#e);
        }
        withPlugin(t) {
            return new jc({
                ...this.#e,
                plugins: this.#e.plugins !== void 0 ? q([
                    ...this.#e.plugins,
                    t
                ]) : q([
                    t
                ])
            });
        }
        toOperationNode() {
            return this.#n(this.#t());
        }
        compile(t) {
            return this.#r(this.#t(t));
        }
        async execute(t) {
            const n = this.#t(t);
            return n.executeQuery(this.#r(n), this.#e.queryId);
        }
        #t(t) {
            const n = t !== void 0 ? t.getExecutor() : sy;
            return this.#e.plugins !== void 0 ? n.withPlugins(this.#e.plugins) : n;
        }
        #n(t) {
            return t.transformQuery(this.#e.rawNode, this.#e.queryId);
        }
        #r(t) {
            return t.compileQuery(this.#n(t), this.#e.queryId);
        }
    }
    function Rs(e) {
        return new jc(e);
    }
    pt(jc, "don't await RawBuilder instances directly. To execute the query you need to call `execute`");
    class WP {
        #e;
        #t;
        constructor(t, n){
            this.#e = t, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        get rawBuilder() {
            return this.#e;
        }
        toOperationNode() {
            return da.create(this.#e.toOperationNode(), Vr(this.#t) ? this.#t.toOperationNode() : Yt.create(this.#t));
        }
    }
    pt(WP, "don't await AliasedRawBuilder instances directly. AliasedRawBuilder should never be executed directly since it's always a part of another query.");
    const un = Object.assign((e, ...t)=>Rs({
            queryId: Tt(),
            rawNode: sr.create(e, t?.map(Qk) ?? [])
        }), {
        ref (e) {
            return Rs({
                queryId: Tt(),
                rawNode: sr.createWithChild(Xo(e))
            });
        },
        val (e) {
            return Rs({
                queryId: Tt(),
                rawNode: sr.createWithChild(Cn(e))
            });
        },
        value (e) {
            return this.val(e);
        },
        table (e) {
            return Rs({
                queryId: Tt(),
                rawNode: sr.createWithChild(wn(e))
            });
        },
        id (...e) {
            const t = new Array(e.length + 1).fill(".");
            return t[0] = "", t[t.length - 1] = "", Rs({
                queryId: Tt(),
                rawNode: sr.create(t, e.map(Yt.create))
            });
        },
        lit (e) {
            return Rs({
                queryId: Tt(),
                rawNode: sr.createWithChild(wo.createImmediate(e))
            });
        },
        literal (e) {
            return this.lit(e);
        },
        raw (e) {
            return Rs({
                queryId: Tt(),
                rawNode: sr.createWithSql(e)
            });
        },
        join (e, t = un`, `) {
            const n = new Array(2 * e.length - 1), r = t.toOperationNode();
            for(let i = 0; i < e.length; ++i)n[2 * i] = Qk(e[i]), i !== e.length - 1 && (n[2 * i + 1] = r);
            return Rs({
                queryId: Tt(),
                rawNode: sr.createWithChildren(n)
            });
        }
    });
    function Qk(e) {
        return Vr(e) ? e.toOperationNode() : Cn(e);
    }
    class E5 {
        nodeStack = [];
        get parentNode() {
            return this.nodeStack[this.nodeStack.length - 2];
        }
        #e = q({
            AliasNode: this.visitAlias.bind(this),
            ColumnNode: this.visitColumn.bind(this),
            IdentifierNode: this.visitIdentifier.bind(this),
            SchemableIdentifierNode: this.visitSchemableIdentifier.bind(this),
            RawNode: this.visitRaw.bind(this),
            ReferenceNode: this.visitReference.bind(this),
            SelectQueryNode: this.visitSelectQuery.bind(this),
            SelectionNode: this.visitSelection.bind(this),
            TableNode: this.visitTable.bind(this),
            FromNode: this.visitFrom.bind(this),
            SelectAllNode: this.visitSelectAll.bind(this),
            AndNode: this.visitAnd.bind(this),
            OrNode: this.visitOr.bind(this),
            ValueNode: this.visitValue.bind(this),
            ValueListNode: this.visitValueList.bind(this),
            PrimitiveValueListNode: this.visitPrimitiveValueList.bind(this),
            ParensNode: this.visitParens.bind(this),
            JoinNode: this.visitJoin.bind(this),
            OperatorNode: this.visitOperator.bind(this),
            WhereNode: this.visitWhere.bind(this),
            InsertQueryNode: this.visitInsertQuery.bind(this),
            DeleteQueryNode: this.visitDeleteQuery.bind(this),
            ReturningNode: this.visitReturning.bind(this),
            CreateTableNode: this.visitCreateTable.bind(this),
            AddColumnNode: this.visitAddColumn.bind(this),
            ColumnDefinitionNode: this.visitColumnDefinition.bind(this),
            DropTableNode: this.visitDropTable.bind(this),
            DataTypeNode: this.visitDataType.bind(this),
            OrderByNode: this.visitOrderBy.bind(this),
            OrderByItemNode: this.visitOrderByItem.bind(this),
            GroupByNode: this.visitGroupBy.bind(this),
            GroupByItemNode: this.visitGroupByItem.bind(this),
            UpdateQueryNode: this.visitUpdateQuery.bind(this),
            ColumnUpdateNode: this.visitColumnUpdate.bind(this),
            LimitNode: this.visitLimit.bind(this),
            OffsetNode: this.visitOffset.bind(this),
            OnConflictNode: this.visitOnConflict.bind(this),
            OnDuplicateKeyNode: this.visitOnDuplicateKey.bind(this),
            CreateIndexNode: this.visitCreateIndex.bind(this),
            DropIndexNode: this.visitDropIndex.bind(this),
            ListNode: this.visitList.bind(this),
            PrimaryKeyConstraintNode: this.visitPrimaryKeyConstraint.bind(this),
            UniqueConstraintNode: this.visitUniqueConstraint.bind(this),
            ReferencesNode: this.visitReferences.bind(this),
            CheckConstraintNode: this.visitCheckConstraint.bind(this),
            WithNode: this.visitWith.bind(this),
            CommonTableExpressionNode: this.visitCommonTableExpression.bind(this),
            CommonTableExpressionNameNode: this.visitCommonTableExpressionName.bind(this),
            HavingNode: this.visitHaving.bind(this),
            CreateSchemaNode: this.visitCreateSchema.bind(this),
            DropSchemaNode: this.visitDropSchema.bind(this),
            AlterTableNode: this.visitAlterTable.bind(this),
            DropColumnNode: this.visitDropColumn.bind(this),
            RenameColumnNode: this.visitRenameColumn.bind(this),
            AlterColumnNode: this.visitAlterColumn.bind(this),
            ModifyColumnNode: this.visitModifyColumn.bind(this),
            AddConstraintNode: this.visitAddConstraint.bind(this),
            DropConstraintNode: this.visitDropConstraint.bind(this),
            ForeignKeyConstraintNode: this.visitForeignKeyConstraint.bind(this),
            CreateViewNode: this.visitCreateView.bind(this),
            DropViewNode: this.visitDropView.bind(this),
            GeneratedNode: this.visitGenerated.bind(this),
            DefaultValueNode: this.visitDefaultValue.bind(this),
            OnNode: this.visitOn.bind(this),
            ValuesNode: this.visitValues.bind(this),
            SelectModifierNode: this.visitSelectModifier.bind(this),
            CreateTypeNode: this.visitCreateType.bind(this),
            DropTypeNode: this.visitDropType.bind(this),
            ExplainNode: this.visitExplain.bind(this),
            DefaultInsertValueNode: this.visitDefaultInsertValue.bind(this),
            AggregateFunctionNode: this.visitAggregateFunction.bind(this),
            OverNode: this.visitOver.bind(this),
            PartitionByNode: this.visitPartitionBy.bind(this),
            PartitionByItemNode: this.visitPartitionByItem.bind(this),
            SetOperationNode: this.visitSetOperation.bind(this),
            BinaryOperationNode: this.visitBinaryOperation.bind(this),
            UnaryOperationNode: this.visitUnaryOperation.bind(this),
            UsingNode: this.visitUsing.bind(this),
            FunctionNode: this.visitFunction.bind(this),
            CaseNode: this.visitCase.bind(this),
            WhenNode: this.visitWhen.bind(this),
            JSONReferenceNode: this.visitJSONReference.bind(this),
            JSONPathNode: this.visitJSONPath.bind(this),
            JSONPathLegNode: this.visitJSONPathLeg.bind(this),
            JSONOperatorChainNode: this.visitJSONOperatorChain.bind(this),
            TupleNode: this.visitTuple.bind(this),
            MergeQueryNode: this.visitMergeQuery.bind(this),
            MatchedNode: this.visitMatched.bind(this),
            AddIndexNode: this.visitAddIndex.bind(this),
            CastNode: this.visitCast.bind(this),
            FetchNode: this.visitFetch.bind(this),
            TopNode: this.visitTop.bind(this),
            OutputNode: this.visitOutput.bind(this)
        });
        visitNode = (t)=>{
            this.nodeStack.push(t), this.#e[t.kind](t), this.nodeStack.pop();
        };
    }
    class k5 extends E5 {
        #e = "";
        #t = [];
        get numParameters() {
            return this.#t.length;
        }
        compileQuery(t) {
            return this.#e = "", this.#t = [], this.nodeStack.splice(0, this.nodeStack.length), this.visitNode(t), q({
                query: t,
                sql: this.getSql(),
                parameters: [
                    ...this.#t
                ]
            });
        }
        getSql() {
            return this.#e;
        }
        visitSelectQuery(t) {
            const n = this.parentNode !== void 0 && !Mc.is(this.parentNode) && !ti.is(this.parentNode) && !Xr.is(this.parentNode) && !Fs.is(this.parentNode) && !SP.is(this.parentNode);
            this.parentNode === void 0 && t.explain && (this.visitNode(t.explain), this.append(" ")), n && this.append("("), t.with && (this.visitNode(t.with), this.append(" ")), this.append("select"), t.distinctOn && (this.append(" "), this.compileDistinctOn(t.distinctOn)), t.frontModifiers?.length && (this.append(" "), this.compileList(t.frontModifiers, " ")), t.top && (this.append(" "), this.visitNode(t.top)), t.selections && (this.append(" "), this.compileList(t.selections)), t.from && (this.append(" "), this.visitNode(t.from)), t.joins && (this.append(" "), this.compileList(t.joins, " ")), t.where && (this.append(" "), this.visitNode(t.where)), t.groupBy && (this.append(" "), this.visitNode(t.groupBy)), t.having && (this.append(" "), this.visitNode(t.having)), t.setOperations && (this.append(" "), this.compileList(t.setOperations, " ")), t.orderBy && (this.append(" "), this.visitNode(t.orderBy)), t.limit && (this.append(" "), this.visitNode(t.limit)), t.offset && (this.append(" "), this.visitNode(t.offset)), t.fetch && (this.append(" "), this.visitNode(t.fetch)), t.endModifiers?.length && (this.append(" "), this.compileList(this.sortSelectModifiers([
                ...t.endModifiers
            ]), " ")), n && this.append(")");
        }
        visitFrom(t) {
            this.append("from "), this.compileList(t.froms);
        }
        visitSelection(t) {
            this.visitNode(t.selection);
        }
        visitColumn(t) {
            this.visitNode(t.column);
        }
        compileDistinctOn(t) {
            this.append("distinct on ("), this.compileList(t), this.append(")");
        }
        compileList(t, n = ", ") {
            const r = t.length - 1;
            for(let i = 0; i <= r; i++)this.visitNode(t[i]), i < r && this.append(n);
        }
        visitWhere(t) {
            this.append("where "), this.visitNode(t.where);
        }
        visitHaving(t) {
            this.append("having "), this.visitNode(t.having);
        }
        visitInsertQuery(t) {
            const n = this.nodeStack.find(qe.is), r = n !== t;
            !r && t.explain && (this.visitNode(t.explain), this.append(" ")), r && !$r.is(n) && this.append("("), t.with && (this.visitNode(t.with), this.append(" ")), this.append(t.replace ? "replace" : "insert"), t.ignore && this.append(" ignore"), t.top && (this.append(" "), this.visitNode(t.top)), t.into && (this.append(" into "), this.visitNode(t.into)), t.columns && (this.append(" ("), this.compileList(t.columns), this.append(")")), t.output && (this.append(" "), this.visitNode(t.output)), t.values && (this.append(" "), this.visitNode(t.values)), t.defaultValues && (this.append(" "), this.append("default values")), t.onConflict && (this.append(" "), this.visitNode(t.onConflict)), t.onDuplicateKey && (this.append(" "), this.visitNode(t.onDuplicateKey)), t.returning && (this.append(" "), this.visitNode(t.returning)), r && !$r.is(n) && this.append(")"), t.endModifiers?.length && (this.append(" "), this.compileList(t.endModifiers, " "));
        }
        visitValues(t) {
            this.append("values "), this.compileList(t.values);
        }
        visitDeleteQuery(t) {
            const n = this.nodeStack.find(qe.is) !== t;
            !n && t.explain && (this.visitNode(t.explain), this.append(" ")), n && this.append("("), t.with && (this.visitNode(t.with), this.append(" ")), this.append("delete "), t.top && (this.visitNode(t.top), this.append(" ")), this.visitNode(t.from), t.output && (this.append(" "), this.visitNode(t.output)), t.using && (this.append(" "), this.visitNode(t.using)), t.joins && (this.append(" "), this.compileList(t.joins, " ")), t.where && (this.append(" "), this.visitNode(t.where)), t.orderBy && (this.append(" "), this.visitNode(t.orderBy)), t.limit && (this.append(" "), this.visitNode(t.limit)), t.returning && (this.append(" "), this.visitNode(t.returning)), n && this.append(")"), t.endModifiers?.length && (this.append(" "), this.compileList(t.endModifiers, " "));
        }
        visitReturning(t) {
            this.append("returning "), this.compileList(t.selections);
        }
        visitAlias(t) {
            this.visitNode(t.node), this.append(" as "), this.visitNode(t.alias);
        }
        visitReference(t) {
            t.table && (this.visitNode(t.table), this.append(".")), this.visitNode(t.column);
        }
        visitSelectAll(t) {
            this.append("*");
        }
        visitIdentifier(t) {
            this.append(this.getLeftIdentifierWrapper()), this.compileUnwrappedIdentifier(t), this.append(this.getRightIdentifierWrapper());
        }
        compileUnwrappedIdentifier(t) {
            if (!li(t.name)) throw new Error("a non-string identifier was passed to compileUnwrappedIdentifier.");
            this.append(this.sanitizeIdentifier(t.name));
        }
        visitAnd(t) {
            this.visitNode(t.left), this.append(" and "), this.visitNode(t.right);
        }
        visitOr(t) {
            this.visitNode(t.left), this.append(" or "), this.visitNode(t.right);
        }
        visitValue(t) {
            t.immediate ? this.appendImmediateValue(t.value) : this.appendValue(t.value);
        }
        visitValueList(t) {
            this.append("("), this.compileList(t.values), this.append(")");
        }
        visitTuple(t) {
            this.append("("), this.compileList(t.values), this.append(")");
        }
        visitPrimitiveValueList(t) {
            this.append("(");
            const { values: n } = t;
            for(let r = 0; r < n.length; ++r)this.appendValue(n[r]), r !== n.length - 1 && this.append(", ");
            this.append(")");
        }
        visitParens(t) {
            this.append("("), this.visitNode(t.node), this.append(")");
        }
        visitJoin(t) {
            this.append(j5[t.joinType]), this.append(" "), this.visitNode(t.table), t.on && (this.append(" "), this.visitNode(t.on));
        }
        visitOn(t) {
            this.append("on "), this.visitNode(t.on);
        }
        visitRaw(t) {
            const { sqlFragments: n, parameters: r } = t;
            for(let i = 0; i < n.length; ++i)this.append(n[i]), r.length > i && this.visitNode(r[i]);
        }
        visitOperator(t) {
            this.append(t.operator);
        }
        visitTable(t) {
            this.visitNode(t.table);
        }
        visitSchemableIdentifier(t) {
            t.schema && (this.visitNode(t.schema), this.append(".")), this.visitNode(t.identifier);
        }
        visitCreateTable(t) {
            this.append("create "), t.frontModifiers && t.frontModifiers.length > 0 && (this.compileList(t.frontModifiers, " "), this.append(" ")), t.temporary && this.append("temporary "), this.append("table "), t.ifNotExists && this.append("if not exists "), this.visitNode(t.table), t.selectQuery ? (this.append(" as "), this.visitNode(t.selectQuery)) : (this.append(" ("), this.compileList([
                ...t.columns,
                ...t.constraints ?? []
            ]), this.append(")"), t.onCommit && (this.append(" on commit "), this.append(t.onCommit)), t.endModifiers && t.endModifiers.length > 0 && (this.append(" "), this.compileList(t.endModifiers, " ")));
        }
        visitColumnDefinition(t) {
            t.ifNotExists && this.append("if not exists "), this.visitNode(t.column), this.append(" "), this.visitNode(t.dataType), t.unsigned && this.append(" unsigned"), t.frontModifiers && t.frontModifiers.length > 0 && (this.append(" "), this.compileList(t.frontModifiers, " ")), t.generated && (this.append(" "), this.visitNode(t.generated)), t.identity && this.append(" identity"), t.defaultTo && (this.append(" "), this.visitNode(t.defaultTo)), t.notNull && this.append(" not null"), t.unique && this.append(" unique"), t.nullsNotDistinct && this.append(" nulls not distinct"), t.primaryKey && this.append(" primary key"), t.autoIncrement && (this.append(" "), this.append(this.getAutoIncrement())), t.references && (this.append(" "), this.visitNode(t.references)), t.check && (this.append(" "), this.visitNode(t.check)), t.endModifiers && t.endModifiers.length > 0 && (this.append(" "), this.compileList(t.endModifiers, " "));
        }
        getAutoIncrement() {
            return "auto_increment";
        }
        visitReferences(t) {
            this.append("references "), this.visitNode(t.table), this.append(" ("), this.compileList(t.columns), this.append(")"), t.onDelete && (this.append(" on delete "), this.append(t.onDelete)), t.onUpdate && (this.append(" on update "), this.append(t.onUpdate));
        }
        visitDropTable(t) {
            this.append("drop table "), t.ifExists && this.append("if exists "), this.visitNode(t.table), t.cascade && this.append(" cascade");
        }
        visitDataType(t) {
            this.append(t.dataType);
        }
        visitOrderBy(t) {
            this.append("order by "), this.compileList(t.items);
        }
        visitOrderByItem(t) {
            this.visitNode(t.orderBy), t.direction && (this.append(" "), this.visitNode(t.direction));
        }
        visitGroupBy(t) {
            this.append("group by "), this.compileList(t.items);
        }
        visitGroupByItem(t) {
            this.visitNode(t.groupBy);
        }
        visitUpdateQuery(t) {
            const n = this.nodeStack.find(qe.is), r = n !== t;
            !r && t.explain && (this.visitNode(t.explain), this.append(" ")), r && !$r.is(n) && this.append("("), t.with && (this.visitNode(t.with), this.append(" ")), this.append("update "), t.top && (this.visitNode(t.top), this.append(" ")), t.table && (this.visitNode(t.table), this.append(" ")), this.append("set "), t.updates && this.compileList(t.updates), t.output && (this.append(" "), this.visitNode(t.output)), t.from && (this.append(" "), this.visitNode(t.from)), t.joins && (this.append(" "), this.compileList(t.joins, " ")), t.where && (this.append(" "), this.visitNode(t.where)), t.limit && (this.append(" "), this.visitNode(t.limit)), t.returning && (this.append(" "), this.visitNode(t.returning)), r && !$r.is(n) && this.append(")"), t.endModifiers?.length && (this.append(" "), this.compileList(t.endModifiers, " "));
        }
        visitColumnUpdate(t) {
            this.visitNode(t.column), this.append(" = "), this.visitNode(t.value);
        }
        visitLimit(t) {
            this.append("limit "), this.visitNode(t.limit);
        }
        visitOffset(t) {
            this.append("offset "), this.visitNode(t.offset);
        }
        visitOnConflict(t) {
            this.append("on conflict"), t.columns ? (this.append(" ("), this.compileList(t.columns), this.append(")")) : t.constraint ? (this.append(" on constraint "), this.visitNode(t.constraint)) : t.indexExpression && (this.append(" ("), this.visitNode(t.indexExpression), this.append(")")), t.indexWhere && (this.append(" "), this.visitNode(t.indexWhere)), t.doNothing === !0 ? this.append(" do nothing") : t.updates && (this.append(" do update set "), this.compileList(t.updates), t.updateWhere && (this.append(" "), this.visitNode(t.updateWhere)));
        }
        visitOnDuplicateKey(t) {
            this.append("on duplicate key update "), this.compileList(t.updates);
        }
        visitCreateIndex(t) {
            this.append("create "), t.unique && this.append("unique "), this.append("index "), t.ifNotExists && this.append("if not exists "), this.visitNode(t.name), t.table && (this.append(" on "), this.visitNode(t.table)), t.using && (this.append(" using "), this.visitNode(t.using)), t.columns && (this.append(" ("), this.compileList(t.columns), this.append(")")), t.nullsNotDistinct && this.append(" nulls not distinct"), t.where && (this.append(" "), this.visitNode(t.where));
        }
        visitDropIndex(t) {
            this.append("drop index "), t.ifExists && this.append("if exists "), this.visitNode(t.name), t.table && (this.append(" on "), this.visitNode(t.table)), t.cascade && this.append(" cascade");
        }
        visitCreateSchema(t) {
            this.append("create schema "), t.ifNotExists && this.append("if not exists "), this.visitNode(t.schema);
        }
        visitDropSchema(t) {
            this.append("drop schema "), t.ifExists && this.append("if exists "), this.visitNode(t.schema), t.cascade && this.append(" cascade");
        }
        visitPrimaryKeyConstraint(t) {
            t.name && (this.append("constraint "), this.visitNode(t.name), this.append(" ")), this.append("primary key ("), this.compileList(t.columns), this.append(")");
        }
        visitUniqueConstraint(t) {
            t.name && (this.append("constraint "), this.visitNode(t.name), this.append(" ")), this.append("unique"), t.nullsNotDistinct && this.append(" nulls not distinct"), this.append(" ("), this.compileList(t.columns), this.append(")");
        }
        visitCheckConstraint(t) {
            t.name && (this.append("constraint "), this.visitNode(t.name), this.append(" ")), this.append("check ("), this.visitNode(t.expression), this.append(")");
        }
        visitForeignKeyConstraint(t) {
            t.name && (this.append("constraint "), this.visitNode(t.name), this.append(" ")), this.append("foreign key ("), this.compileList(t.columns), this.append(") "), this.visitNode(t.references), t.onDelete && (this.append(" on delete "), this.append(t.onDelete)), t.onUpdate && (this.append(" on update "), this.append(t.onUpdate));
        }
        visitList(t) {
            this.compileList(t.items);
        }
        visitWith(t) {
            this.append("with "), t.recursive && this.append("recursive "), this.compileList(t.expressions);
        }
        visitCommonTableExpression(t) {
            this.visitNode(t.name), this.append(" as "), Km(t.materialized) && (t.materialized || this.append("not "), this.append("materialized ")), this.visitNode(t.expression);
        }
        visitCommonTableExpressionName(t) {
            this.visitNode(t.table), t.columns && (this.append("("), this.compileList(t.columns), this.append(")"));
        }
        visitAlterTable(t) {
            this.append("alter table "), this.visitNode(t.table), this.append(" "), t.renameTo && (this.append("rename to "), this.visitNode(t.renameTo)), t.setSchema && (this.append("set schema "), this.visitNode(t.setSchema)), t.addConstraint && this.visitNode(t.addConstraint), t.dropConstraint && this.visitNode(t.dropConstraint), t.columnAlterations && this.compileColumnAlterations(t.columnAlterations), t.addIndex && this.visitNode(t.addIndex), t.dropIndex && this.visitNode(t.dropIndex);
        }
        visitAddColumn(t) {
            this.append("add column "), this.visitNode(t.column);
        }
        visitRenameColumn(t) {
            this.append("rename column "), this.visitNode(t.column), this.append(" to "), this.visitNode(t.renameTo);
        }
        visitDropColumn(t) {
            this.append("drop column "), this.visitNode(t.column);
        }
        visitAlterColumn(t) {
            this.append("alter column "), this.visitNode(t.column), this.append(" "), t.dataType && (this.announcesNewColumnDataType() && this.append("type "), this.visitNode(t.dataType), t.dataTypeExpression && (this.append("using "), this.visitNode(t.dataTypeExpression))), t.setDefault && (this.append("set default "), this.visitNode(t.setDefault)), t.dropDefault && this.append("drop default"), t.setNotNull && this.append("set not null"), t.dropNotNull && this.append("drop not null");
        }
        visitModifyColumn(t) {
            this.append("modify column "), this.visitNode(t.column);
        }
        visitAddConstraint(t) {
            this.append("add "), this.visitNode(t.constraint);
        }
        visitDropConstraint(t) {
            this.append("drop constraint "), t.ifExists && this.append("if exists "), this.visitNode(t.constraintName), t.modifier === "cascade" ? this.append(" cascade") : t.modifier === "restrict" && this.append(" restrict");
        }
        visitSetOperation(t) {
            this.append(t.operator), this.append(" "), t.all && this.append("all "), this.visitNode(t.expression);
        }
        visitCreateView(t) {
            this.append("create "), t.orReplace && this.append("or replace "), t.materialized && this.append("materialized "), t.temporary && this.append("temporary "), this.append("view "), t.ifNotExists && this.append("if not exists "), this.visitNode(t.name), this.append(" "), t.columns && (this.append("("), this.compileList(t.columns), this.append(") ")), t.as && (this.append("as "), this.visitNode(t.as));
        }
        visitDropView(t) {
            this.append("drop "), t.materialized && this.append("materialized "), this.append("view "), t.ifExists && this.append("if exists "), this.visitNode(t.name), t.cascade && this.append(" cascade");
        }
        visitGenerated(t) {
            this.append("generated "), t.always && this.append("always "), t.byDefault && this.append("by default "), this.append("as "), t.identity && this.append("identity"), t.expression && (this.append("("), this.visitNode(t.expression), this.append(")")), t.stored && this.append(" stored");
        }
        visitDefaultValue(t) {
            this.append("default "), this.visitNode(t.defaultValue);
        }
        visitSelectModifier(t) {
            t.rawModifier ? this.visitNode(t.rawModifier) : this.append(C5[t.modifier]), t.of && (this.append(" of "), this.compileList(t.of, ", "));
        }
        visitCreateType(t) {
            this.append("create type "), this.visitNode(t.name), t.enum && (this.append(" as enum "), this.visitNode(t.enum));
        }
        visitDropType(t) {
            this.append("drop type "), t.ifExists && this.append("if exists "), this.visitNode(t.name);
        }
        visitExplain(t) {
            this.append("explain"), (t.options || t.format) && (this.append(" "), this.append(this.getLeftExplainOptionsWrapper()), t.options && (this.visitNode(t.options), t.format && this.append(this.getExplainOptionsDelimiter())), t.format && (this.append("format"), this.append(this.getExplainOptionAssignment()), this.append(t.format)), this.append(this.getRightExplainOptionsWrapper()));
        }
        visitDefaultInsertValue(t) {
            this.append("default");
        }
        visitAggregateFunction(t) {
            this.append(t.func), this.append("("), t.distinct && this.append("distinct "), this.compileList(t.aggregated), t.orderBy && (this.append(" "), this.visitNode(t.orderBy)), this.append(")"), t.filter && (this.append(" filter("), this.visitNode(t.filter), this.append(")")), t.over && (this.append(" "), this.visitNode(t.over));
        }
        visitOver(t) {
            this.append("over("), t.partitionBy && (this.visitNode(t.partitionBy), t.orderBy && this.append(" ")), t.orderBy && this.visitNode(t.orderBy), this.append(")");
        }
        visitPartitionBy(t) {
            this.append("partition by "), this.compileList(t.items);
        }
        visitPartitionByItem(t) {
            this.visitNode(t.partitionBy);
        }
        visitBinaryOperation(t) {
            this.visitNode(t.leftOperand), this.append(" "), this.visitNode(t.operator), this.append(" "), this.visitNode(t.rightOperand);
        }
        visitUnaryOperation(t) {
            this.visitNode(t.operator), this.isMinusOperator(t.operator) || this.append(" "), this.visitNode(t.operand);
        }
        isMinusOperator(t) {
            return na.is(t) && t.operator === "-";
        }
        visitUsing(t) {
            this.append("using "), this.compileList(t.tables);
        }
        visitFunction(t) {
            this.append(t.func), this.append("("), this.compileList(t.arguments), this.append(")");
        }
        visitCase(t) {
            this.append("case"), t.value && (this.append(" "), this.visitNode(t.value)), t.when && (this.append(" "), this.compileList(t.when, " ")), t.else && (this.append(" else "), this.visitNode(t.else)), this.append(" end"), t.isStatement && this.append(" case");
        }
        visitWhen(t) {
            this.append("when "), this.visitNode(t.condition), t.result && (this.append(" then "), this.visitNode(t.result));
        }
        visitJSONReference(t) {
            this.visitNode(t.reference), this.visitNode(t.traversal);
        }
        visitJSONPath(t) {
            t.inOperator && this.visitNode(t.inOperator), this.append("'$");
            for (const n of t.pathLegs)this.visitNode(n);
            this.append("'");
        }
        visitJSONPathLeg(t) {
            const n = t.type === "ArrayLocation";
            this.append(n ? "[" : "."), this.append(String(t.value)), n && this.append("]");
        }
        visitJSONOperatorChain(t) {
            for(let n = 0, r = t.values.length; n < r; n++)n === r - 1 ? this.visitNode(t.operator) : this.append("->"), this.visitNode(t.values[n]);
        }
        visitMergeQuery(t) {
            t.with && (this.visitNode(t.with), this.append(" ")), this.append("merge "), t.top && (this.visitNode(t.top), this.append(" ")), this.append("into "), this.visitNode(t.into), t.using && (this.append(" "), this.visitNode(t.using)), t.whens && (this.append(" "), this.compileList(t.whens, " ")), t.output && (this.append(" "), this.visitNode(t.output)), t.endModifiers?.length && (this.append(" "), this.compileList(t.endModifiers, " "));
        }
        visitMatched(t) {
            t.not && this.append("not "), this.append("matched"), t.bySource && this.append(" by source");
        }
        visitAddIndex(t) {
            this.append("add "), t.unique && this.append("unique "), this.append("index "), this.visitNode(t.name), t.columns && (this.append(" ("), this.compileList(t.columns), this.append(")")), t.using && (this.append(" using "), this.visitNode(t.using));
        }
        visitCast(t) {
            this.append("cast("), this.visitNode(t.expression), this.append(" as "), this.visitNode(t.dataType), this.append(")");
        }
        visitFetch(t) {
            this.append("fetch next "), this.visitNode(t.rowCount), this.append(` rows ${t.modifier}`);
        }
        visitOutput(t) {
            this.append("output "), this.compileList(t.selections);
        }
        visitTop(t) {
            this.append(`top(${t.expression})`), t.modifiers && this.append(` ${t.modifiers}`);
        }
        append(t) {
            this.#e += t;
        }
        appendValue(t) {
            this.addParameter(t), this.append(this.getCurrentParameterPlaceholder());
        }
        getLeftIdentifierWrapper() {
            return '"';
        }
        getRightIdentifierWrapper() {
            return '"';
        }
        getCurrentParameterPlaceholder() {
            return "$" + this.numParameters;
        }
        getLeftExplainOptionsWrapper() {
            return "(";
        }
        getExplainOptionAssignment() {
            return " ";
        }
        getExplainOptionsDelimiter() {
            return ", ";
        }
        getRightExplainOptionsWrapper() {
            return ")";
        }
        sanitizeIdentifier(t) {
            const n = this.getLeftIdentifierWrapper(), r = this.getRightIdentifierWrapper();
            let i = "";
            for (const o of t)i += o, o === n ? i += n : o === r && (i += r);
            return i;
        }
        addParameter(t) {
            this.#t.push(t);
        }
        appendImmediateValue(t) {
            if (li(t)) this.append(`'${t}'`);
            else if (iy(t) || Km(t)) this.append(t.toString());
            else if (oS(t)) this.append("null");
            else if (Yz(t)) this.appendImmediateValue(t.toISOString());
            else if (sS(t)) this.appendImmediateValue(t.toString());
            else throw new Error(`invalid immediate value ${t}`);
        }
        sortSelectModifiers(t) {
            return t.sort((n, r)=>n.modifier && r.modifier ? Jk[n.modifier] - Jk[r.modifier] : 1), q(t);
        }
        compileColumnAlterations(t) {
            this.compileList(t);
        }
        announcesNewColumnDataType() {
            return !0;
        }
    }
    const C5 = q({
        ForKeyShare: "for key share",
        ForNoKeyUpdate: "for no key update",
        ForUpdate: "for update",
        ForShare: "for share",
        NoWait: "nowait",
        SkipLocked: "skip locked",
        Distinct: "distinct"
    }), Jk = q({
        ForKeyShare: 1,
        ForNoKeyUpdate: 1,
        ForUpdate: 1,
        ForShare: 1,
        NoWait: 2,
        SkipLocked: 2,
        Distinct: 0
    }), j5 = q({
        InnerJoin: "inner join",
        LeftJoin: "left join",
        RightJoin: "right join",
        FullJoin: "full join",
        LateralInnerJoin: "inner join lateral",
        LateralLeftJoin: "left join lateral",
        Using: "using"
    });
    class R5 {
        get supportsCreateIfNotExists() {
            return !0;
        }
        get supportsTransactionalDdl() {
            return !1;
        }
        get supportsReturning() {
            return !1;
        }
        get supportsOutput() {
            return !1;
        }
    }
    const O5 = /"/g;
    class T5 extends k5 {
        getCurrentParameterPlaceholder() {
            return "?";
        }
        getLeftExplainOptionsWrapper() {
            return "";
        }
        getRightExplainOptionsWrapper() {
            return "";
        }
        getLeftIdentifierWrapper() {
            return '"';
        }
        getRightIdentifierWrapper() {
            return '"';
        }
        getAutoIncrement() {
            return "autoincrement";
        }
        sanitizeIdentifier(t) {
            return t.replace(O5, '""');
        }
        visitDefaultInsertValue(t) {
            this.append("null");
        }
    }
    const P5 = "kysely_migration", A5 = "kysely_migration_lock";
    q({
        __noMigrations__: !0
    });
    class F5 {
        #e;
        constructor(t){
            this.#e = t;
        }
        async getSchemas() {
            return [];
        }
        async getTables(t = {
            withInternalKyselyTables: !1
        }) {
            let n = this.#e.selectFrom("sqlite_master").where("type", "in", [
                "table",
                "view"
            ]).where("name", "not like", "sqlite_%").select("name").orderBy("name").$castTo();
            t.withInternalKyselyTables || (n = n.where("name", "!=", P5).where("name", "!=", A5));
            const r = await n.execute();
            return Promise.all(r.map(({ name: i })=>this.#t(i)));
        }
        async getMetadata(t) {
            return {
                tables: await this.getTables(t)
            };
        }
        async #t(t) {
            const n = this.#e, r = await n.selectFrom("sqlite_master").where("name", "=", t).select([
                "sql",
                "type"
            ]).$castTo().executeTakeFirstOrThrow(), i = r.sql?.split(/[\(\),]/)?.find((s)=>s.toLowerCase().includes("autoincrement"))?.trimStart()?.split(/\s+/)?.[0]?.replace(/["`]/g, ""), o = await n.selectFrom(un`pragma_table_info(${t})`.as("table_info")).select([
                "name",
                "type",
                "notnull",
                "dflt_value"
            ]).orderBy("cid").execute();
            return {
                name: t,
                isView: r.type === "view",
                columns: o.map((s)=>({
                        name: s.name,
                        dataType: s.type,
                        isNullable: !s.notnull,
                        isAutoIncrementing: s.name === i,
                        hasDefaultValue: s.dflt_value != null,
                        comment: void 0
                    }))
            };
        }
    }
    class D5 extends R5 {
        get supportsTransactionalDdl() {
            return !1;
        }
        get supportsReturning() {
            return !0;
        }
        async acquireMigrationLock(t, n) {}
        async releaseMigrationLock(t, n) {}
    }
    const Gs = {
        jsonObject (e) {
            const t = un.join(Object.entries(e).map(([n, r])=>un`${n}, ${r}`));
            return un`json_object(${t})`;
        },
        jsonGroupArray (e) {
            return un`json_group_array(${Gs.jsonObject(e)})`;
        }
    }, VP = {
        hash (e) {
            return G0.sha224(e);
        },
        verify (e, t) {
            return G0.sha224(e) === t;
        }
    };
    var bt;
    (function(e) {
        e.assertEqual = (i)=>i;
        function t(i) {}
        e.assertIs = t;
        function n(i) {
            throw new Error;
        }
        e.assertNever = n, e.arrayToEnum = (i)=>{
            const o = {};
            for (const s of i)o[s] = s;
            return o;
        }, e.getValidEnumValues = (i)=>{
            const o = e.objectKeys(i).filter((l)=>typeof i[i[l]] != "number"), s = {};
            for (const l of o)s[l] = i[l];
            return e.objectValues(s);
        }, e.objectValues = (i)=>e.objectKeys(i).map(function(o) {
                return i[o];
            }), e.objectKeys = typeof Object.keys == "function" ? (i)=>Object.keys(i) : (i)=>{
            const o = [];
            for(const s in i)Object.prototype.hasOwnProperty.call(i, s) && o.push(s);
            return o;
        }, e.find = (i, o)=>{
            for (const s of i)if (o(s)) return s;
        }, e.isInteger = typeof Number.isInteger == "function" ? (i)=>Number.isInteger(i) : (i)=>typeof i == "number" && isFinite(i) && Math.floor(i) === i;
        function r(i, o = " | ") {
            return i.map((s)=>typeof s == "string" ? `'${s}'` : s).join(o);
        }
        e.joinValues = r, e.jsonStringifyReplacer = (i, o)=>typeof o == "bigint" ? o.toString() : o;
    })(bt || (bt = {}));
    var rN;
    (function(e) {
        e.mergeShapes = (t, n)=>({
                ...t,
                ...n
            });
    })(rN || (rN = {}));
    const Me = bt.arrayToEnum([
        "string",
        "nan",
        "number",
        "integer",
        "float",
        "boolean",
        "date",
        "bigint",
        "symbol",
        "function",
        "undefined",
        "null",
        "array",
        "object",
        "unknown",
        "promise",
        "void",
        "never",
        "map",
        "set"
    ]), Uo = (e)=>{
        switch(typeof e){
            case "undefined":
                return Me.undefined;
            case "string":
                return Me.string;
            case "number":
                return isNaN(e) ? Me.nan : Me.number;
            case "boolean":
                return Me.boolean;
            case "function":
                return Me.function;
            case "bigint":
                return Me.bigint;
            case "symbol":
                return Me.symbol;
            case "object":
                return Array.isArray(e) ? Me.array : e === null ? Me.null : e.then && typeof e.then == "function" && e.catch && typeof e.catch == "function" ? Me.promise : typeof Map < "u" && e instanceof Map ? Me.map : typeof Set < "u" && e instanceof Set ? Me.set : typeof Date < "u" && e instanceof Date ? Me.date : Me.object;
            default:
                return Me.unknown;
        }
    }, Ee = bt.arrayToEnum([
        "invalid_type",
        "invalid_literal",
        "custom",
        "invalid_union",
        "invalid_union_discriminator",
        "invalid_enum_value",
        "unrecognized_keys",
        "invalid_arguments",
        "invalid_return_type",
        "invalid_date",
        "invalid_string",
        "too_small",
        "too_big",
        "invalid_intersection_types",
        "not_multiple_of",
        "not_finite"
    ]), M5 = (e)=>JSON.stringify(e, null, 2).replace(/"([^"]+)":/g, "$1:");
    class ai extends Error {
        get errors() {
            return this.issues;
        }
        constructor(t){
            super(), this.issues = [], this.addIssue = (r)=>{
                this.issues = [
                    ...this.issues,
                    r
                ];
            }, this.addIssues = (r = [])=>{
                this.issues = [
                    ...this.issues,
                    ...r
                ];
            };
            const n = new.target.prototype;
            Object.setPrototypeOf ? Object.setPrototypeOf(this, n) : this.__proto__ = n, this.name = "ZodError", this.issues = t;
        }
        format(t) {
            const n = t || function(o) {
                return o.message;
            }, r = {
                _errors: []
            }, i = (o)=>{
                for (const s of o.issues)if (s.code === "invalid_union") s.unionErrors.map(i);
                else if (s.code === "invalid_return_type") i(s.returnTypeError);
                else if (s.code === "invalid_arguments") i(s.argumentsError);
                else if (s.path.length === 0) r._errors.push(n(s));
                else {
                    let l = r, u = 0;
                    for(; u < s.path.length;){
                        const f = s.path[u];
                        u === s.path.length - 1 ? (l[f] = l[f] || {
                            _errors: []
                        }, l[f]._errors.push(n(s))) : l[f] = l[f] || {
                            _errors: []
                        }, l = l[f], u++;
                    }
                }
            };
            return i(this), r;
        }
        static assert(t) {
            if (!(t instanceof ai)) throw new Error(`Not a ZodError: ${t}`);
        }
        toString() {
            return this.message;
        }
        get message() {
            return JSON.stringify(this.issues, bt.jsonStringifyReplacer, 2);
        }
        get isEmpty() {
            return this.issues.length === 0;
        }
        flatten(t = (n)=>n.message) {
            const n = {}, r = [];
            for (const i of this.issues)i.path.length > 0 ? (n[i.path[0]] = n[i.path[0]] || [], n[i.path[0]].push(t(i))) : r.push(t(i));
            return {
                formErrors: r,
                fieldErrors: n
            };
        }
        get formErrors() {
            return this.flatten();
        }
    }
    ai.create = (e)=>new ai(e);
    const $c = (e, t)=>{
        let n;
        switch(e.code){
            case Ee.invalid_type:
                e.received === Me.undefined ? n = "Required" : n = `Expected ${e.expected}, received ${e.received}`;
                break;
            case Ee.invalid_literal:
                n = `Invalid literal value, expected ${JSON.stringify(e.expected, bt.jsonStringifyReplacer)}`;
                break;
            case Ee.unrecognized_keys:
                n = `Unrecognized key(s) in object: ${bt.joinValues(e.keys, ", ")}`;
                break;
            case Ee.invalid_union:
                n = "Invalid input";
                break;
            case Ee.invalid_union_discriminator:
                n = `Invalid discriminator value. Expected ${bt.joinValues(e.options)}`;
                break;
            case Ee.invalid_enum_value:
                n = `Invalid enum value. Expected ${bt.joinValues(e.options)}, received '${e.received}'`;
                break;
            case Ee.invalid_arguments:
                n = "Invalid function arguments";
                break;
            case Ee.invalid_return_type:
                n = "Invalid function return type";
                break;
            case Ee.invalid_date:
                n = "Invalid date";
                break;
            case Ee.invalid_string:
                typeof e.validation == "object" ? "includes" in e.validation ? (n = `Invalid input: must include "${e.validation.includes}"`, typeof e.validation.position == "number" && (n = `${n} at one or more positions greater than or equal to ${e.validation.position}`)) : "startsWith" in e.validation ? n = `Invalid input: must start with "${e.validation.startsWith}"` : "endsWith" in e.validation ? n = `Invalid input: must end with "${e.validation.endsWith}"` : bt.assertNever(e.validation) : e.validation !== "regex" ? n = `Invalid ${e.validation}` : n = "Invalid";
                break;
            case Ee.too_small:
                e.type === "array" ? n = `Array must contain ${e.exact ? "exactly" : e.inclusive ? "at least" : "more than"} ${e.minimum} element(s)` : e.type === "string" ? n = `String must contain ${e.exact ? "exactly" : e.inclusive ? "at least" : "over"} ${e.minimum} character(s)` : e.type === "number" ? n = `Number must be ${e.exact ? "exactly equal to " : e.inclusive ? "greater than or equal to " : "greater than "}${e.minimum}` : e.type === "date" ? n = `Date must be ${e.exact ? "exactly equal to " : e.inclusive ? "greater than or equal to " : "greater than "}${new Date(Number(e.minimum))}` : n = "Invalid input";
                break;
            case Ee.too_big:
                e.type === "array" ? n = `Array must contain ${e.exact ? "exactly" : e.inclusive ? "at most" : "less than"} ${e.maximum} element(s)` : e.type === "string" ? n = `String must contain ${e.exact ? "exactly" : e.inclusive ? "at most" : "under"} ${e.maximum} character(s)` : e.type === "number" ? n = `Number must be ${e.exact ? "exactly" : e.inclusive ? "less than or equal to" : "less than"} ${e.maximum}` : e.type === "bigint" ? n = `BigInt must be ${e.exact ? "exactly" : e.inclusive ? "less than or equal to" : "less than"} ${e.maximum}` : e.type === "date" ? n = `Date must be ${e.exact ? "exactly" : e.inclusive ? "smaller than or equal to" : "smaller than"} ${new Date(Number(e.maximum))}` : n = "Invalid input";
                break;
            case Ee.custom:
                n = "Invalid input";
                break;
            case Ee.invalid_intersection_types:
                n = "Intersection results could not be merged";
                break;
            case Ee.not_multiple_of:
                n = `Number must be a multiple of ${e.multipleOf}`;
                break;
            case Ee.not_finite:
                n = "Number must be finite";
                break;
            default:
                n = t.defaultError, bt.assertNever(e);
        }
        return {
            message: n
        };
    };
    let UP = $c;
    function L5(e) {
        UP = e;
    }
    function rg() {
        return UP;
    }
    const ig = (e)=>{
        const { data: t, path: n, errorMaps: r, issueData: i } = e, o = [
            ...n,
            ...i.path || []
        ], s = {
            ...i,
            path: o
        };
        if (i.message !== void 0) return {
            ...i,
            path: o,
            message: i.message
        };
        let l = "";
        const u = r.filter((f)=>!!f).slice().reverse();
        for (const f of u)l = f(s, {
            data: t,
            defaultError: l
        }).message;
        return {
            ...i,
            path: o,
            message: l
        };
    }, $5 = [];
    function Oe(e, t) {
        const n = rg(), r = ig({
            issueData: t,
            data: e.data,
            path: e.path,
            errorMaps: [
                e.common.contextualErrorMap,
                e.schemaErrorMap,
                n,
                n === $c ? void 0 : $c
            ].filter((i)=>!!i)
        });
        e.common.issues.push(r);
    }
    class ur {
        constructor(){
            this.value = "valid";
        }
        dirty() {
            this.value === "valid" && (this.value = "dirty");
        }
        abort() {
            this.value !== "aborted" && (this.value = "aborted");
        }
        static mergeArray(t, n) {
            const r = [];
            for (const i of n){
                if (i.status === "aborted") return tt;
                i.status === "dirty" && t.dirty(), r.push(i.value);
            }
            return {
                status: t.value,
                value: r
            };
        }
        static async mergeObjectAsync(t, n) {
            const r = [];
            for (const i of n){
                const o = await i.key, s = await i.value;
                r.push({
                    key: o,
                    value: s
                });
            }
            return ur.mergeObjectSync(t, r);
        }
        static mergeObjectSync(t, n) {
            const r = {};
            for (const i of n){
                const { key: o, value: s } = i;
                if (o.status === "aborted" || s.status === "aborted") return tt;
                o.status === "dirty" && t.dirty(), s.status === "dirty" && t.dirty(), o.value !== "__proto__" && (typeof s.value < "u" || i.alwaysSet) && (r[o.value] = s.value);
            }
            return {
                status: t.value,
                value: r
            };
        }
    }
    const tt = Object.freeze({
        status: "aborted"
    }), pc = (e)=>({
            status: "dirty",
            value: e
        }), Sr = (e)=>({
            status: "valid",
            value: e
        }), iN = (e)=>e.status === "aborted", oN = (e)=>e.status === "dirty", ll = (e)=>e.status === "valid", Qd = (e)=>typeof Promise < "u" && e instanceof Promise;
    function og(e, t, n, r) {
        if (typeof t == "function" ? e !== t || !0 : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return t.get(e);
    }
    function HP(e, t, n, r, i) {
        if (typeof t == "function" ? e !== t || !0 : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return t.set(e, n), n;
    }
    var Ue;
    (function(e) {
        e.errToObj = (t)=>typeof t == "string" ? {
                message: t
            } : t || {}, e.toString = (t)=>typeof t == "string" ? t : t?.message;
    })(Ue || (Ue = {}));
    var ud, dd;
    class Io {
        constructor(t, n, r, i){
            this._cachedPath = [], this.parent = t, this.data = n, this._path = r, this._key = i;
        }
        get path() {
            return this._cachedPath.length || (this._key instanceof Array ? this._cachedPath.push(...this._path, ...this._key) : this._cachedPath.push(...this._path, this._key)), this._cachedPath;
        }
    }
    const Zk = (e, t)=>{
        if (ll(t)) return {
            success: !0,
            data: t.value
        };
        if (!e.common.issues.length) throw new Error("Validation failed but no issues detected.");
        return {
            success: !1,
            get error () {
                if (this._error) return this._error;
                const n = new ai(e.common.issues);
                return this._error = n, this._error;
            }
        };
    };
    function ut(e) {
        if (!e) return {};
        const { errorMap: t, invalid_type_error: n, required_error: r, description: i } = e;
        if (t && (n || r)) throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
        return t ? {
            errorMap: t,
            description: i
        } : {
            errorMap: (s, l)=>{
                var u, f;
                const { message: p } = e;
                return s.code === "invalid_enum_value" ? {
                    message: p ?? l.defaultError
                } : typeof l.data > "u" ? {
                    message: (u = p ?? r) !== null && u !== void 0 ? u : l.defaultError
                } : s.code !== "invalid_type" ? {
                    message: l.defaultError
                } : {
                    message: (f = p ?? n) !== null && f !== void 0 ? f : l.defaultError
                };
            },
            description: i
        };
    }
    class ht {
        get description() {
            return this._def.description;
        }
        _getType(t) {
            return Uo(t.data);
        }
        _getOrReturnCtx(t, n) {
            return n || {
                common: t.parent.common,
                data: t.data,
                parsedType: Uo(t.data),
                schemaErrorMap: this._def.errorMap,
                path: t.path,
                parent: t.parent
            };
        }
        _processInputParams(t) {
            return {
                status: new ur,
                ctx: {
                    common: t.parent.common,
                    data: t.data,
                    parsedType: Uo(t.data),
                    schemaErrorMap: this._def.errorMap,
                    path: t.path,
                    parent: t.parent
                }
            };
        }
        _parseSync(t) {
            const n = this._parse(t);
            if (Qd(n)) throw new Error("Synchronous parse encountered promise.");
            return n;
        }
        _parseAsync(t) {
            const n = this._parse(t);
            return Promise.resolve(n);
        }
        parse(t, n) {
            const r = this.safeParse(t, n);
            if (r.success) return r.data;
            throw r.error;
        }
        safeParse(t, n) {
            var r;
            const i = {
                common: {
                    issues: [],
                    async: (r = n?.async) !== null && r !== void 0 ? r : !1,
                    contextualErrorMap: n?.errorMap
                },
                path: n?.path || [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: t,
                parsedType: Uo(t)
            }, o = this._parseSync({
                data: t,
                path: i.path,
                parent: i
            });
            return Zk(i, o);
        }
        "~validate"(t) {
            var n, r;
            const i = {
                common: {
                    issues: [],
                    async: !!this["~standard"].async
                },
                path: [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: t,
                parsedType: Uo(t)
            };
            if (!this["~standard"].async) try {
                const o = this._parseSync({
                    data: t,
                    path: [],
                    parent: i
                });
                return ll(o) ? {
                    value: o.value
                } : {
                    issues: i.common.issues
                };
            } catch (o) {
                !((r = (n = o?.message) === null || n === void 0 ? void 0 : n.toLowerCase()) === null || r === void 0) && r.includes("encountered") && (this["~standard"].async = !0), i.common = {
                    issues: [],
                    async: !0
                };
            }
            return this._parseAsync({
                data: t,
                path: [],
                parent: i
            }).then((o)=>ll(o) ? {
                    value: o.value
                } : {
                    issues: i.common.issues
                });
        }
        async parseAsync(t, n) {
            const r = await this.safeParseAsync(t, n);
            if (r.success) return r.data;
            throw r.error;
        }
        async safeParseAsync(t, n) {
            const r = {
                common: {
                    issues: [],
                    contextualErrorMap: n?.errorMap,
                    async: !0
                },
                path: n?.path || [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: t,
                parsedType: Uo(t)
            }, i = this._parse({
                data: t,
                path: r.path,
                parent: r
            }), o = await (Qd(i) ? i : Promise.resolve(i));
            return Zk(r, o);
        }
        refine(t, n) {
            const r = (i)=>typeof n == "string" || typeof n > "u" ? {
                    message: n
                } : typeof n == "function" ? n(i) : n;
            return this._refinement((i, o)=>{
                const s = t(i), l = ()=>o.addIssue({
                        code: Ee.custom,
                        ...r(i)
                    });
                return typeof Promise < "u" && s instanceof Promise ? s.then((u)=>u ? !0 : (l(), !1)) : s ? !0 : (l(), !1);
            });
        }
        refinement(t, n) {
            return this._refinement((r, i)=>t(r) ? !0 : (i.addIssue(typeof n == "function" ? n(r, i) : n), !1));
        }
        _refinement(t) {
            return new Yi({
                schema: this,
                typeName: et.ZodEffects,
                effect: {
                    type: "refinement",
                    refinement: t
                }
            });
        }
        superRefine(t) {
            return this._refinement(t);
        }
        constructor(t){
            this.spa = this.safeParseAsync, this._def = t, this.parse = this.parse.bind(this), this.safeParse = this.safeParse.bind(this), this.parseAsync = this.parseAsync.bind(this), this.safeParseAsync = this.safeParseAsync.bind(this), this.spa = this.spa.bind(this), this.refine = this.refine.bind(this), this.refinement = this.refinement.bind(this), this.superRefine = this.superRefine.bind(this), this.optional = this.optional.bind(this), this.nullable = this.nullable.bind(this), this.nullish = this.nullish.bind(this), this.array = this.array.bind(this), this.promise = this.promise.bind(this), this.or = this.or.bind(this), this.and = this.and.bind(this), this.transform = this.transform.bind(this), this.brand = this.brand.bind(this), this.default = this.default.bind(this), this.catch = this.catch.bind(this), this.describe = this.describe.bind(this), this.pipe = this.pipe.bind(this), this.readonly = this.readonly.bind(this), this.isNullable = this.isNullable.bind(this), this.isOptional = this.isOptional.bind(this), this["~standard"] = {
                version: 1,
                vendor: "zod",
                validate: (n)=>this["~validate"](n)
            };
        }
        optional() {
            return yo.create(this, this._def);
        }
        nullable() {
            return aa.create(this, this._def);
        }
        nullish() {
            return this.nullable().optional();
        }
        array() {
            return Ji.create(this);
        }
        promise() {
            return Bc.create(this, this._def);
        }
        or(t) {
            return Xd.create([
                this,
                t
            ], this._def);
        }
        and(t) {
            return ef.create(this, t, this._def);
        }
        transform(t) {
            return new Yi({
                ...ut(this._def),
                schema: this,
                typeName: et.ZodEffects,
                effect: {
                    type: "transform",
                    transform: t
                }
            });
        }
        default(t) {
            const n = typeof t == "function" ? t : ()=>t;
            return new sf({
                ...ut(this._def),
                innerType: this,
                defaultValue: n,
                typeName: et.ZodDefault
            });
        }
        brand() {
            return new wS({
                typeName: et.ZodBranded,
                type: this,
                ...ut(this._def)
            });
        }
        catch(t) {
            const n = typeof t == "function" ? t : ()=>t;
            return new af({
                ...ut(this._def),
                innerType: this,
                catchValue: n,
                typeName: et.ZodCatch
            });
        }
        describe(t) {
            const n = this.constructor;
            return new n({
                ...this._def,
                description: t
            });
        }
        pipe(t) {
            return Mf.create(this, t);
        }
        readonly() {
            return lf.create(this);
        }
        isOptional() {
            return this.safeParse(void 0).success;
        }
        isNullable() {
            return this.safeParse(null).success;
        }
    }
    const q5 = /^c[^\s-]{8,}$/i, B5 = /^[0-9a-z]+$/, z5 = /^[0-9A-HJKMNP-TV-Z]{26}$/i, W5 = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i, V5 = /^[a-z0-9_-]{21}$/i, U5 = /^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/, H5 = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/, K5 = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i, G5 = "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";
    let Wb;
    const Q5 = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/, J5 = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/, Z5 = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/, Y5 = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/, X5 = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/, eV = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/, KP = "((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))", tV = new RegExp(`^${KP}$`);
    function GP(e) {
        let t = "([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";
        return e.precision ? t = `${t}\\.\\d{${e.precision}}` : e.precision == null && (t = `${t}(\\.\\d+)?`), t;
    }
    function nV(e) {
        return new RegExp(`^${GP(e)}$`);
    }
    function QP(e) {
        let t = `${KP}T${GP(e)}`;
        const n = [];
        return n.push(e.local ? "Z?" : "Z"), e.offset && n.push("([+-]\\d{2}:?\\d{2})"), t = `${t}(${n.join("|")})`, new RegExp(`^${t}$`);
    }
    function rV(e, t) {
        return !!((t === "v4" || !t) && Q5.test(e) || (t === "v6" || !t) && Z5.test(e));
    }
    function iV(e, t) {
        if (!U5.test(e)) return !1;
        try {
            const [n] = e.split("."), r = n.replace(/-/g, "+").replace(/_/g, "/").padEnd(n.length + (4 - n.length % 4) % 4, "="), i = JSON.parse(atob(r));
            return !(typeof i != "object" || i === null || !i.typ || !i.alg || t && i.alg !== t);
        } catch  {
            return !1;
        }
    }
    function oV(e, t) {
        return !!((t === "v4" || !t) && J5.test(e) || (t === "v6" || !t) && Y5.test(e));
    }
    class Gi extends ht {
        _parse(t) {
            if (this._def.coerce && (t.data = String(t.data)), this._getType(t) !== Me.string) {
                const o = this._getOrReturnCtx(t);
                return Oe(o, {
                    code: Ee.invalid_type,
                    expected: Me.string,
                    received: o.parsedType
                }), tt;
            }
            const r = new ur;
            let i;
            for (const o of this._def.checks)if (o.kind === "min") t.data.length < o.value && (i = this._getOrReturnCtx(t, i), Oe(i, {
                code: Ee.too_small,
                minimum: o.value,
                type: "string",
                inclusive: !0,
                exact: !1,
                message: o.message
            }), r.dirty());
            else if (o.kind === "max") t.data.length > o.value && (i = this._getOrReturnCtx(t, i), Oe(i, {
                code: Ee.too_big,
                maximum: o.value,
                type: "string",
                inclusive: !0,
                exact: !1,
                message: o.message
            }), r.dirty());
            else if (o.kind === "length") {
                const s = t.data.length > o.value, l = t.data.length < o.value;
                (s || l) && (i = this._getOrReturnCtx(t, i), s ? Oe(i, {
                    code: Ee.too_big,
                    maximum: o.value,
                    type: "string",
                    inclusive: !0,
                    exact: !0,
                    message: o.message
                }) : l && Oe(i, {
                    code: Ee.too_small,
                    minimum: o.value,
                    type: "string",
                    inclusive: !0,
                    exact: !0,
                    message: o.message
                }), r.dirty());
            } else if (o.kind === "email") K5.test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "email",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "emoji") Wb || (Wb = new RegExp(G5, "u")), Wb.test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "emoji",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "uuid") W5.test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "uuid",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "nanoid") V5.test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "nanoid",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "cuid") q5.test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "cuid",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "cuid2") B5.test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "cuid2",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "ulid") z5.test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "ulid",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "url") try {
                new URL(t.data);
            } catch  {
                i = this._getOrReturnCtx(t, i), Oe(i, {
                    validation: "url",
                    code: Ee.invalid_string,
                    message: o.message
                }), r.dirty();
            }
            else o.kind === "regex" ? (o.regex.lastIndex = 0, o.regex.test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "regex",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty())) : o.kind === "trim" ? t.data = t.data.trim() : o.kind === "includes" ? t.data.includes(o.value, o.position) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                code: Ee.invalid_string,
                validation: {
                    includes: o.value,
                    position: o.position
                },
                message: o.message
            }), r.dirty()) : o.kind === "toLowerCase" ? t.data = t.data.toLowerCase() : o.kind === "toUpperCase" ? t.data = t.data.toUpperCase() : o.kind === "startsWith" ? t.data.startsWith(o.value) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                code: Ee.invalid_string,
                validation: {
                    startsWith: o.value
                },
                message: o.message
            }), r.dirty()) : o.kind === "endsWith" ? t.data.endsWith(o.value) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                code: Ee.invalid_string,
                validation: {
                    endsWith: o.value
                },
                message: o.message
            }), r.dirty()) : o.kind === "datetime" ? QP(o).test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                code: Ee.invalid_string,
                validation: "datetime",
                message: o.message
            }), r.dirty()) : o.kind === "date" ? tV.test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                code: Ee.invalid_string,
                validation: "date",
                message: o.message
            }), r.dirty()) : o.kind === "time" ? nV(o).test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                code: Ee.invalid_string,
                validation: "time",
                message: o.message
            }), r.dirty()) : o.kind === "duration" ? H5.test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "duration",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty()) : o.kind === "ip" ? rV(t.data, o.version) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "ip",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty()) : o.kind === "jwt" ? iV(t.data, o.alg) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "jwt",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty()) : o.kind === "cidr" ? oV(t.data, o.version) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "cidr",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty()) : o.kind === "base64" ? X5.test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "base64",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty()) : o.kind === "base64url" ? eV.test(t.data) || (i = this._getOrReturnCtx(t, i), Oe(i, {
                validation: "base64url",
                code: Ee.invalid_string,
                message: o.message
            }), r.dirty()) : bt.assertNever(o);
            return {
                status: r.value,
                value: t.data
            };
        }
        _regex(t, n, r) {
            return this.refinement((i)=>t.test(i), {
                validation: n,
                code: Ee.invalid_string,
                ...Ue.errToObj(r)
            });
        }
        _addCheck(t) {
            return new Gi({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    t
                ]
            });
        }
        email(t) {
            return this._addCheck({
                kind: "email",
                ...Ue.errToObj(t)
            });
        }
        url(t) {
            return this._addCheck({
                kind: "url",
                ...Ue.errToObj(t)
            });
        }
        emoji(t) {
            return this._addCheck({
                kind: "emoji",
                ...Ue.errToObj(t)
            });
        }
        uuid(t) {
            return this._addCheck({
                kind: "uuid",
                ...Ue.errToObj(t)
            });
        }
        nanoid(t) {
            return this._addCheck({
                kind: "nanoid",
                ...Ue.errToObj(t)
            });
        }
        cuid(t) {
            return this._addCheck({
                kind: "cuid",
                ...Ue.errToObj(t)
            });
        }
        cuid2(t) {
            return this._addCheck({
                kind: "cuid2",
                ...Ue.errToObj(t)
            });
        }
        ulid(t) {
            return this._addCheck({
                kind: "ulid",
                ...Ue.errToObj(t)
            });
        }
        base64(t) {
            return this._addCheck({
                kind: "base64",
                ...Ue.errToObj(t)
            });
        }
        base64url(t) {
            return this._addCheck({
                kind: "base64url",
                ...Ue.errToObj(t)
            });
        }
        jwt(t) {
            return this._addCheck({
                kind: "jwt",
                ...Ue.errToObj(t)
            });
        }
        ip(t) {
            return this._addCheck({
                kind: "ip",
                ...Ue.errToObj(t)
            });
        }
        cidr(t) {
            return this._addCheck({
                kind: "cidr",
                ...Ue.errToObj(t)
            });
        }
        datetime(t) {
            var n, r;
            return typeof t == "string" ? this._addCheck({
                kind: "datetime",
                precision: null,
                offset: !1,
                local: !1,
                message: t
            }) : this._addCheck({
                kind: "datetime",
                precision: typeof t?.precision > "u" ? null : t?.precision,
                offset: (n = t?.offset) !== null && n !== void 0 ? n : !1,
                local: (r = t?.local) !== null && r !== void 0 ? r : !1,
                ...Ue.errToObj(t?.message)
            });
        }
        date(t) {
            return this._addCheck({
                kind: "date",
                message: t
            });
        }
        time(t) {
            return typeof t == "string" ? this._addCheck({
                kind: "time",
                precision: null,
                message: t
            }) : this._addCheck({
                kind: "time",
                precision: typeof t?.precision > "u" ? null : t?.precision,
                ...Ue.errToObj(t?.message)
            });
        }
        duration(t) {
            return this._addCheck({
                kind: "duration",
                ...Ue.errToObj(t)
            });
        }
        regex(t, n) {
            return this._addCheck({
                kind: "regex",
                regex: t,
                ...Ue.errToObj(n)
            });
        }
        includes(t, n) {
            return this._addCheck({
                kind: "includes",
                value: t,
                position: n?.position,
                ...Ue.errToObj(n?.message)
            });
        }
        startsWith(t, n) {
            return this._addCheck({
                kind: "startsWith",
                value: t,
                ...Ue.errToObj(n)
            });
        }
        endsWith(t, n) {
            return this._addCheck({
                kind: "endsWith",
                value: t,
                ...Ue.errToObj(n)
            });
        }
        min(t, n) {
            return this._addCheck({
                kind: "min",
                value: t,
                ...Ue.errToObj(n)
            });
        }
        max(t, n) {
            return this._addCheck({
                kind: "max",
                value: t,
                ...Ue.errToObj(n)
            });
        }
        length(t, n) {
            return this._addCheck({
                kind: "length",
                value: t,
                ...Ue.errToObj(n)
            });
        }
        nonempty(t) {
            return this.min(1, Ue.errToObj(t));
        }
        trim() {
            return new Gi({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: "trim"
                    }
                ]
            });
        }
        toLowerCase() {
            return new Gi({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: "toLowerCase"
                    }
                ]
            });
        }
        toUpperCase() {
            return new Gi({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: "toUpperCase"
                    }
                ]
            });
        }
        get isDatetime() {
            return !!this._def.checks.find((t)=>t.kind === "datetime");
        }
        get isDate() {
            return !!this._def.checks.find((t)=>t.kind === "date");
        }
        get isTime() {
            return !!this._def.checks.find((t)=>t.kind === "time");
        }
        get isDuration() {
            return !!this._def.checks.find((t)=>t.kind === "duration");
        }
        get isEmail() {
            return !!this._def.checks.find((t)=>t.kind === "email");
        }
        get isURL() {
            return !!this._def.checks.find((t)=>t.kind === "url");
        }
        get isEmoji() {
            return !!this._def.checks.find((t)=>t.kind === "emoji");
        }
        get isUUID() {
            return !!this._def.checks.find((t)=>t.kind === "uuid");
        }
        get isNANOID() {
            return !!this._def.checks.find((t)=>t.kind === "nanoid");
        }
        get isCUID() {
            return !!this._def.checks.find((t)=>t.kind === "cuid");
        }
        get isCUID2() {
            return !!this._def.checks.find((t)=>t.kind === "cuid2");
        }
        get isULID() {
            return !!this._def.checks.find((t)=>t.kind === "ulid");
        }
        get isIP() {
            return !!this._def.checks.find((t)=>t.kind === "ip");
        }
        get isCIDR() {
            return !!this._def.checks.find((t)=>t.kind === "cidr");
        }
        get isBase64() {
            return !!this._def.checks.find((t)=>t.kind === "base64");
        }
        get isBase64url() {
            return !!this._def.checks.find((t)=>t.kind === "base64url");
        }
        get minLength() {
            let t = null;
            for (const n of this._def.checks)n.kind === "min" && (t === null || n.value > t) && (t = n.value);
            return t;
        }
        get maxLength() {
            let t = null;
            for (const n of this._def.checks)n.kind === "max" && (t === null || n.value < t) && (t = n.value);
            return t;
        }
    }
    Gi.create = (e)=>{
        var t;
        return new Gi({
            checks: [],
            typeName: et.ZodString,
            coerce: (t = e?.coerce) !== null && t !== void 0 ? t : !1,
            ...ut(e)
        });
    };
    function sV(e, t) {
        const n = (e.toString().split(".")[1] || "").length, r = (t.toString().split(".")[1] || "").length, i = n > r ? n : r, o = parseInt(e.toFixed(i).replace(".", "")), s = parseInt(t.toFixed(i).replace(".", ""));
        return o % s / Math.pow(10, i);
    }
    class ia extends ht {
        constructor(){
            super(...arguments), this.min = this.gte, this.max = this.lte, this.step = this.multipleOf;
        }
        _parse(t) {
            if (this._def.coerce && (t.data = Number(t.data)), this._getType(t) !== Me.number) {
                const o = this._getOrReturnCtx(t);
                return Oe(o, {
                    code: Ee.invalid_type,
                    expected: Me.number,
                    received: o.parsedType
                }), tt;
            }
            let r;
            const i = new ur;
            for (const o of this._def.checks)o.kind === "int" ? bt.isInteger(t.data) || (r = this._getOrReturnCtx(t, r), Oe(r, {
                code: Ee.invalid_type,
                expected: "integer",
                received: "float",
                message: o.message
            }), i.dirty()) : o.kind === "min" ? (o.inclusive ? t.data < o.value : t.data <= o.value) && (r = this._getOrReturnCtx(t, r), Oe(r, {
                code: Ee.too_small,
                minimum: o.value,
                type: "number",
                inclusive: o.inclusive,
                exact: !1,
                message: o.message
            }), i.dirty()) : o.kind === "max" ? (o.inclusive ? t.data > o.value : t.data >= o.value) && (r = this._getOrReturnCtx(t, r), Oe(r, {
                code: Ee.too_big,
                maximum: o.value,
                type: "number",
                inclusive: o.inclusive,
                exact: !1,
                message: o.message
            }), i.dirty()) : o.kind === "multipleOf" ? sV(t.data, o.value) !== 0 && (r = this._getOrReturnCtx(t, r), Oe(r, {
                code: Ee.not_multiple_of,
                multipleOf: o.value,
                message: o.message
            }), i.dirty()) : o.kind === "finite" ? Number.isFinite(t.data) || (r = this._getOrReturnCtx(t, r), Oe(r, {
                code: Ee.not_finite,
                message: o.message
            }), i.dirty()) : bt.assertNever(o);
            return {
                status: i.value,
                value: t.data
            };
        }
        gte(t, n) {
            return this.setLimit("min", t, !0, Ue.toString(n));
        }
        gt(t, n) {
            return this.setLimit("min", t, !1, Ue.toString(n));
        }
        lte(t, n) {
            return this.setLimit("max", t, !0, Ue.toString(n));
        }
        lt(t, n) {
            return this.setLimit("max", t, !1, Ue.toString(n));
        }
        setLimit(t, n, r, i) {
            return new ia({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: t,
                        value: n,
                        inclusive: r,
                        message: Ue.toString(i)
                    }
                ]
            });
        }
        _addCheck(t) {
            return new ia({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    t
                ]
            });
        }
        int(t) {
            return this._addCheck({
                kind: "int",
                message: Ue.toString(t)
            });
        }
        positive(t) {
            return this._addCheck({
                kind: "min",
                value: 0,
                inclusive: !1,
                message: Ue.toString(t)
            });
        }
        negative(t) {
            return this._addCheck({
                kind: "max",
                value: 0,
                inclusive: !1,
                message: Ue.toString(t)
            });
        }
        nonpositive(t) {
            return this._addCheck({
                kind: "max",
                value: 0,
                inclusive: !0,
                message: Ue.toString(t)
            });
        }
        nonnegative(t) {
            return this._addCheck({
                kind: "min",
                value: 0,
                inclusive: !0,
                message: Ue.toString(t)
            });
        }
        multipleOf(t, n) {
            return this._addCheck({
                kind: "multipleOf",
                value: t,
                message: Ue.toString(n)
            });
        }
        finite(t) {
            return this._addCheck({
                kind: "finite",
                message: Ue.toString(t)
            });
        }
        safe(t) {
            return this._addCheck({
                kind: "min",
                inclusive: !0,
                value: Number.MIN_SAFE_INTEGER,
                message: Ue.toString(t)
            })._addCheck({
                kind: "max",
                inclusive: !0,
                value: Number.MAX_SAFE_INTEGER,
                message: Ue.toString(t)
            });
        }
        get minValue() {
            let t = null;
            for (const n of this._def.checks)n.kind === "min" && (t === null || n.value > t) && (t = n.value);
            return t;
        }
        get maxValue() {
            let t = null;
            for (const n of this._def.checks)n.kind === "max" && (t === null || n.value < t) && (t = n.value);
            return t;
        }
        get isInt() {
            return !!this._def.checks.find((t)=>t.kind === "int" || t.kind === "multipleOf" && bt.isInteger(t.value));
        }
        get isFinite() {
            let t = null, n = null;
            for (const r of this._def.checks){
                if (r.kind === "finite" || r.kind === "int" || r.kind === "multipleOf") return !0;
                r.kind === "min" ? (n === null || r.value > n) && (n = r.value) : r.kind === "max" && (t === null || r.value < t) && (t = r.value);
            }
            return Number.isFinite(n) && Number.isFinite(t);
        }
    }
    ia.create = (e)=>new ia({
            checks: [],
            typeName: et.ZodNumber,
            coerce: e?.coerce || !1,
            ...ut(e)
        });
    class oa extends ht {
        constructor(){
            super(...arguments), this.min = this.gte, this.max = this.lte;
        }
        _parse(t) {
            if (this._def.coerce) try {
                t.data = BigInt(t.data);
            } catch  {
                return this._getInvalidInput(t);
            }
            if (this._getType(t) !== Me.bigint) return this._getInvalidInput(t);
            let r;
            const i = new ur;
            for (const o of this._def.checks)o.kind === "min" ? (o.inclusive ? t.data < o.value : t.data <= o.value) && (r = this._getOrReturnCtx(t, r), Oe(r, {
                code: Ee.too_small,
                type: "bigint",
                minimum: o.value,
                inclusive: o.inclusive,
                message: o.message
            }), i.dirty()) : o.kind === "max" ? (o.inclusive ? t.data > o.value : t.data >= o.value) && (r = this._getOrReturnCtx(t, r), Oe(r, {
                code: Ee.too_big,
                type: "bigint",
                maximum: o.value,
                inclusive: o.inclusive,
                message: o.message
            }), i.dirty()) : o.kind === "multipleOf" ? t.data % o.value !== BigInt(0) && (r = this._getOrReturnCtx(t, r), Oe(r, {
                code: Ee.not_multiple_of,
                multipleOf: o.value,
                message: o.message
            }), i.dirty()) : bt.assertNever(o);
            return {
                status: i.value,
                value: t.data
            };
        }
        _getInvalidInput(t) {
            const n = this._getOrReturnCtx(t);
            return Oe(n, {
                code: Ee.invalid_type,
                expected: Me.bigint,
                received: n.parsedType
            }), tt;
        }
        gte(t, n) {
            return this.setLimit("min", t, !0, Ue.toString(n));
        }
        gt(t, n) {
            return this.setLimit("min", t, !1, Ue.toString(n));
        }
        lte(t, n) {
            return this.setLimit("max", t, !0, Ue.toString(n));
        }
        lt(t, n) {
            return this.setLimit("max", t, !1, Ue.toString(n));
        }
        setLimit(t, n, r, i) {
            return new oa({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: t,
                        value: n,
                        inclusive: r,
                        message: Ue.toString(i)
                    }
                ]
            });
        }
        _addCheck(t) {
            return new oa({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    t
                ]
            });
        }
        positive(t) {
            return this._addCheck({
                kind: "min",
                value: BigInt(0),
                inclusive: !1,
                message: Ue.toString(t)
            });
        }
        negative(t) {
            return this._addCheck({
                kind: "max",
                value: BigInt(0),
                inclusive: !1,
                message: Ue.toString(t)
            });
        }
        nonpositive(t) {
            return this._addCheck({
                kind: "max",
                value: BigInt(0),
                inclusive: !0,
                message: Ue.toString(t)
            });
        }
        nonnegative(t) {
            return this._addCheck({
                kind: "min",
                value: BigInt(0),
                inclusive: !0,
                message: Ue.toString(t)
            });
        }
        multipleOf(t, n) {
            return this._addCheck({
                kind: "multipleOf",
                value: t,
                message: Ue.toString(n)
            });
        }
        get minValue() {
            let t = null;
            for (const n of this._def.checks)n.kind === "min" && (t === null || n.value > t) && (t = n.value);
            return t;
        }
        get maxValue() {
            let t = null;
            for (const n of this._def.checks)n.kind === "max" && (t === null || n.value < t) && (t = n.value);
            return t;
        }
    }
    oa.create = (e)=>{
        var t;
        return new oa({
            checks: [],
            typeName: et.ZodBigInt,
            coerce: (t = e?.coerce) !== null && t !== void 0 ? t : !1,
            ...ut(e)
        });
    };
    class Jd extends ht {
        _parse(t) {
            if (this._def.coerce && (t.data = !!t.data), this._getType(t) !== Me.boolean) {
                const r = this._getOrReturnCtx(t);
                return Oe(r, {
                    code: Ee.invalid_type,
                    expected: Me.boolean,
                    received: r.parsedType
                }), tt;
            }
            return Sr(t.data);
        }
    }
    Jd.create = (e)=>new Jd({
            typeName: et.ZodBoolean,
            coerce: e?.coerce || !1,
            ...ut(e)
        });
    class cl extends ht {
        _parse(t) {
            if (this._def.coerce && (t.data = new Date(t.data)), this._getType(t) !== Me.date) {
                const o = this._getOrReturnCtx(t);
                return Oe(o, {
                    code: Ee.invalid_type,
                    expected: Me.date,
                    received: o.parsedType
                }), tt;
            }
            if (isNaN(t.data.getTime())) {
                const o = this._getOrReturnCtx(t);
                return Oe(o, {
                    code: Ee.invalid_date
                }), tt;
            }
            const r = new ur;
            let i;
            for (const o of this._def.checks)o.kind === "min" ? t.data.getTime() < o.value && (i = this._getOrReturnCtx(t, i), Oe(i, {
                code: Ee.too_small,
                message: o.message,
                inclusive: !0,
                exact: !1,
                minimum: o.value,
                type: "date"
            }), r.dirty()) : o.kind === "max" ? t.data.getTime() > o.value && (i = this._getOrReturnCtx(t, i), Oe(i, {
                code: Ee.too_big,
                message: o.message,
                inclusive: !0,
                exact: !1,
                maximum: o.value,
                type: "date"
            }), r.dirty()) : bt.assertNever(o);
            return {
                status: r.value,
                value: new Date(t.data.getTime())
            };
        }
        _addCheck(t) {
            return new cl({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    t
                ]
            });
        }
        min(t, n) {
            return this._addCheck({
                kind: "min",
                value: t.getTime(),
                message: Ue.toString(n)
            });
        }
        max(t, n) {
            return this._addCheck({
                kind: "max",
                value: t.getTime(),
                message: Ue.toString(n)
            });
        }
        get minDate() {
            let t = null;
            for (const n of this._def.checks)n.kind === "min" && (t === null || n.value > t) && (t = n.value);
            return t != null ? new Date(t) : null;
        }
        get maxDate() {
            let t = null;
            for (const n of this._def.checks)n.kind === "max" && (t === null || n.value < t) && (t = n.value);
            return t != null ? new Date(t) : null;
        }
    }
    cl.create = (e)=>new cl({
            checks: [],
            coerce: e?.coerce || !1,
            typeName: et.ZodDate,
            ...ut(e)
        });
    class sg extends ht {
        _parse(t) {
            if (this._getType(t) !== Me.symbol) {
                const r = this._getOrReturnCtx(t);
                return Oe(r, {
                    code: Ee.invalid_type,
                    expected: Me.symbol,
                    received: r.parsedType
                }), tt;
            }
            return Sr(t.data);
        }
    }
    sg.create = (e)=>new sg({
            typeName: et.ZodSymbol,
            ...ut(e)
        });
    class Zd extends ht {
        _parse(t) {
            if (this._getType(t) !== Me.undefined) {
                const r = this._getOrReturnCtx(t);
                return Oe(r, {
                    code: Ee.invalid_type,
                    expected: Me.undefined,
                    received: r.parsedType
                }), tt;
            }
            return Sr(t.data);
        }
    }
    Zd.create = (e)=>new Zd({
            typeName: et.ZodUndefined,
            ...ut(e)
        });
    class Yd extends ht {
        _parse(t) {
            if (this._getType(t) !== Me.null) {
                const r = this._getOrReturnCtx(t);
                return Oe(r, {
                    code: Ee.invalid_type,
                    expected: Me.null,
                    received: r.parsedType
                }), tt;
            }
            return Sr(t.data);
        }
    }
    Yd.create = (e)=>new Yd({
            typeName: et.ZodNull,
            ...ut(e)
        });
    class qc extends ht {
        constructor(){
            super(...arguments), this._any = !0;
        }
        _parse(t) {
            return Sr(t.data);
        }
    }
    qc.create = (e)=>new qc({
            typeName: et.ZodAny,
            ...ut(e)
        });
    class el extends ht {
        constructor(){
            super(...arguments), this._unknown = !0;
        }
        _parse(t) {
            return Sr(t.data);
        }
    }
    el.create = (e)=>new el({
            typeName: et.ZodUnknown,
            ...ut(e)
        });
    class es extends ht {
        _parse(t) {
            const n = this._getOrReturnCtx(t);
            return Oe(n, {
                code: Ee.invalid_type,
                expected: Me.never,
                received: n.parsedType
            }), tt;
        }
    }
    es.create = (e)=>new es({
            typeName: et.ZodNever,
            ...ut(e)
        });
    class ag extends ht {
        _parse(t) {
            if (this._getType(t) !== Me.undefined) {
                const r = this._getOrReturnCtx(t);
                return Oe(r, {
                    code: Ee.invalid_type,
                    expected: Me.void,
                    received: r.parsedType
                }), tt;
            }
            return Sr(t.data);
        }
    }
    ag.create = (e)=>new ag({
            typeName: et.ZodVoid,
            ...ut(e)
        });
    class Ji extends ht {
        _parse(t) {
            const { ctx: n, status: r } = this._processInputParams(t), i = this._def;
            if (n.parsedType !== Me.array) return Oe(n, {
                code: Ee.invalid_type,
                expected: Me.array,
                received: n.parsedType
            }), tt;
            if (i.exactLength !== null) {
                const s = n.data.length > i.exactLength.value, l = n.data.length < i.exactLength.value;
                (s || l) && (Oe(n, {
                    code: s ? Ee.too_big : Ee.too_small,
                    minimum: l ? i.exactLength.value : void 0,
                    maximum: s ? i.exactLength.value : void 0,
                    type: "array",
                    inclusive: !0,
                    exact: !0,
                    message: i.exactLength.message
                }), r.dirty());
            }
            if (i.minLength !== null && n.data.length < i.minLength.value && (Oe(n, {
                code: Ee.too_small,
                minimum: i.minLength.value,
                type: "array",
                inclusive: !0,
                exact: !1,
                message: i.minLength.message
            }), r.dirty()), i.maxLength !== null && n.data.length > i.maxLength.value && (Oe(n, {
                code: Ee.too_big,
                maximum: i.maxLength.value,
                type: "array",
                inclusive: !0,
                exact: !1,
                message: i.maxLength.message
            }), r.dirty()), n.common.async) return Promise.all([
                ...n.data
            ].map((s, l)=>i.type._parseAsync(new Io(n, s, n.path, l)))).then((s)=>ur.mergeArray(r, s));
            const o = [
                ...n.data
            ].map((s, l)=>i.type._parseSync(new Io(n, s, n.path, l)));
            return ur.mergeArray(r, o);
        }
        get element() {
            return this._def.type;
        }
        min(t, n) {
            return new Ji({
                ...this._def,
                minLength: {
                    value: t,
                    message: Ue.toString(n)
                }
            });
        }
        max(t, n) {
            return new Ji({
                ...this._def,
                maxLength: {
                    value: t,
                    message: Ue.toString(n)
                }
            });
        }
        length(t, n) {
            return new Ji({
                ...this._def,
                exactLength: {
                    value: t,
                    message: Ue.toString(n)
                }
            });
        }
        nonempty(t) {
            return this.min(1, t);
        }
    }
    Ji.create = (e, t)=>new Ji({
            type: e,
            minLength: null,
            maxLength: null,
            exactLength: null,
            typeName: et.ZodArray,
            ...ut(t)
        });
    function cc(e) {
        if (e instanceof ln) {
            const t = {};
            for(const n in e.shape){
                const r = e.shape[n];
                t[n] = yo.create(cc(r));
            }
            return new ln({
                ...e._def,
                shape: ()=>t
            });
        } else return e instanceof Ji ? new Ji({
            ...e._def,
            type: cc(e.element)
        }) : e instanceof yo ? yo.create(cc(e.unwrap())) : e instanceof aa ? aa.create(cc(e.unwrap())) : e instanceof _o ? _o.create(e.items.map((t)=>cc(t))) : e;
    }
    class ln extends ht {
        constructor(){
            super(...arguments), this._cached = null, this.nonstrict = this.passthrough, this.augment = this.extend;
        }
        _getCached() {
            if (this._cached !== null) return this._cached;
            const t = this._def.shape(), n = bt.objectKeys(t);
            return this._cached = {
                shape: t,
                keys: n
            };
        }
        _parse(t) {
            if (this._getType(t) !== Me.object) {
                const f = this._getOrReturnCtx(t);
                return Oe(f, {
                    code: Ee.invalid_type,
                    expected: Me.object,
                    received: f.parsedType
                }), tt;
            }
            const { status: r, ctx: i } = this._processInputParams(t), { shape: o, keys: s } = this._getCached(), l = [];
            if (!(this._def.catchall instanceof es && this._def.unknownKeys === "strip")) for(const f in i.data)s.includes(f) || l.push(f);
            const u = [];
            for (const f of s){
                const p = o[f], m = i.data[f];
                u.push({
                    key: {
                        status: "valid",
                        value: f
                    },
                    value: p._parse(new Io(i, m, i.path, f)),
                    alwaysSet: f in i.data
                });
            }
            if (this._def.catchall instanceof es) {
                const f = this._def.unknownKeys;
                if (f === "passthrough") for (const p of l)u.push({
                    key: {
                        status: "valid",
                        value: p
                    },
                    value: {
                        status: "valid",
                        value: i.data[p]
                    }
                });
                else if (f === "strict") l.length > 0 && (Oe(i, {
                    code: Ee.unrecognized_keys,
                    keys: l
                }), r.dirty());
                else if (f !== "strip") throw new Error("Internal ZodObject error: invalid unknownKeys value.");
            } else {
                const f = this._def.catchall;
                for (const p of l){
                    const m = i.data[p];
                    u.push({
                        key: {
                            status: "valid",
                            value: p
                        },
                        value: f._parse(new Io(i, m, i.path, p)),
                        alwaysSet: p in i.data
                    });
                }
            }
            return i.common.async ? Promise.resolve().then(async ()=>{
                const f = [];
                for (const p of u){
                    const m = await p.key, g = await p.value;
                    f.push({
                        key: m,
                        value: g,
                        alwaysSet: p.alwaysSet
                    });
                }
                return f;
            }).then((f)=>ur.mergeObjectSync(r, f)) : ur.mergeObjectSync(r, u);
        }
        get shape() {
            return this._def.shape();
        }
        strict(t) {
            return Ue.errToObj, new ln({
                ...this._def,
                unknownKeys: "strict",
                ...t !== void 0 ? {
                    errorMap: (n, r)=>{
                        var i, o, s, l;
                        const u = (s = (o = (i = this._def).errorMap) === null || o === void 0 ? void 0 : o.call(i, n, r).message) !== null && s !== void 0 ? s : r.defaultError;
                        return n.code === "unrecognized_keys" ? {
                            message: (l = Ue.errToObj(t).message) !== null && l !== void 0 ? l : u
                        } : {
                            message: u
                        };
                    }
                } : {}
            });
        }
        strip() {
            return new ln({
                ...this._def,
                unknownKeys: "strip"
            });
        }
        passthrough() {
            return new ln({
                ...this._def,
                unknownKeys: "passthrough"
            });
        }
        extend(t) {
            return new ln({
                ...this._def,
                shape: ()=>({
                        ...this._def.shape(),
                        ...t
                    })
            });
        }
        merge(t) {
            return new ln({
                unknownKeys: t._def.unknownKeys,
                catchall: t._def.catchall,
                shape: ()=>({
                        ...this._def.shape(),
                        ...t._def.shape()
                    }),
                typeName: et.ZodObject
            });
        }
        setKey(t, n) {
            return this.augment({
                [t]: n
            });
        }
        catchall(t) {
            return new ln({
                ...this._def,
                catchall: t
            });
        }
        pick(t) {
            const n = {};
            return bt.objectKeys(t).forEach((r)=>{
                t[r] && this.shape[r] && (n[r] = this.shape[r]);
            }), new ln({
                ...this._def,
                shape: ()=>n
            });
        }
        omit(t) {
            const n = {};
            return bt.objectKeys(this.shape).forEach((r)=>{
                t[r] || (n[r] = this.shape[r]);
            }), new ln({
                ...this._def,
                shape: ()=>n
            });
        }
        deepPartial() {
            return cc(this);
        }
        partial(t) {
            const n = {};
            return bt.objectKeys(this.shape).forEach((r)=>{
                const i = this.shape[r];
                t && !t[r] ? n[r] = i : n[r] = i.optional();
            }), new ln({
                ...this._def,
                shape: ()=>n
            });
        }
        required(t) {
            const n = {};
            return bt.objectKeys(this.shape).forEach((r)=>{
                if (t && !t[r]) n[r] = this.shape[r];
                else {
                    let o = this.shape[r];
                    for(; o instanceof yo;)o = o._def.innerType;
                    n[r] = o;
                }
            }), new ln({
                ...this._def,
                shape: ()=>n
            });
        }
        keyof() {
            return JP(bt.objectKeys(this.shape));
        }
    }
    ln.create = (e, t)=>new ln({
            shape: ()=>e,
            unknownKeys: "strip",
            catchall: es.create(),
            typeName: et.ZodObject,
            ...ut(t)
        });
    ln.strictCreate = (e, t)=>new ln({
            shape: ()=>e,
            unknownKeys: "strict",
            catchall: es.create(),
            typeName: et.ZodObject,
            ...ut(t)
        });
    ln.lazycreate = (e, t)=>new ln({
            shape: e,
            unknownKeys: "strip",
            catchall: es.create(),
            typeName: et.ZodObject,
            ...ut(t)
        });
    class Xd extends ht {
        _parse(t) {
            const { ctx: n } = this._processInputParams(t), r = this._def.options;
            function i(o) {
                for (const l of o)if (l.result.status === "valid") return l.result;
                for (const l of o)if (l.result.status === "dirty") return n.common.issues.push(...l.ctx.common.issues), l.result;
                const s = o.map((l)=>new ai(l.ctx.common.issues));
                return Oe(n, {
                    code: Ee.invalid_union,
                    unionErrors: s
                }), tt;
            }
            if (n.common.async) return Promise.all(r.map(async (o)=>{
                const s = {
                    ...n,
                    common: {
                        ...n.common,
                        issues: []
                    },
                    parent: null
                };
                return {
                    result: await o._parseAsync({
                        data: n.data,
                        path: n.path,
                        parent: s
                    }),
                    ctx: s
                };
            })).then(i);
            {
                let o;
                const s = [];
                for (const u of r){
                    const f = {
                        ...n,
                        common: {
                            ...n.common,
                            issues: []
                        },
                        parent: null
                    }, p = u._parseSync({
                        data: n.data,
                        path: n.path,
                        parent: f
                    });
                    if (p.status === "valid") return p;
                    p.status === "dirty" && !o && (o = {
                        result: p,
                        ctx: f
                    }), f.common.issues.length && s.push(f.common.issues);
                }
                if (o) return n.common.issues.push(...o.ctx.common.issues), o.result;
                const l = s.map((u)=>new ai(u));
                return Oe(n, {
                    code: Ee.invalid_union,
                    unionErrors: l
                }), tt;
            }
        }
        get options() {
            return this._def.options;
        }
    }
    Xd.create = (e, t)=>new Xd({
            options: e,
            typeName: et.ZodUnion,
            ...ut(t)
        });
    const Wo = (e)=>e instanceof nf ? Wo(e.schema) : e instanceof Yi ? Wo(e.innerType()) : e instanceof rf ? [
            e.value
        ] : e instanceof sa ? e.options : e instanceof of ? bt.objectValues(e.enum) : e instanceof sf ? Wo(e._def.innerType) : e instanceof Zd ? [
            void 0
        ] : e instanceof Yd ? [
            null
        ] : e instanceof yo ? [
            void 0,
            ...Wo(e.unwrap())
        ] : e instanceof aa ? [
            null,
            ...Wo(e.unwrap())
        ] : e instanceof wS || e instanceof lf ? Wo(e.unwrap()) : e instanceof af ? Wo(e._def.innerType) : [];
    class dy extends ht {
        _parse(t) {
            const { ctx: n } = this._processInputParams(t);
            if (n.parsedType !== Me.object) return Oe(n, {
                code: Ee.invalid_type,
                expected: Me.object,
                received: n.parsedType
            }), tt;
            const r = this.discriminator, i = n.data[r], o = this.optionsMap.get(i);
            return o ? n.common.async ? o._parseAsync({
                data: n.data,
                path: n.path,
                parent: n
            }) : o._parseSync({
                data: n.data,
                path: n.path,
                parent: n
            }) : (Oe(n, {
                code: Ee.invalid_union_discriminator,
                options: Array.from(this.optionsMap.keys()),
                path: [
                    r
                ]
            }), tt);
        }
        get discriminator() {
            return this._def.discriminator;
        }
        get options() {
            return this._def.options;
        }
        get optionsMap() {
            return this._def.optionsMap;
        }
        static create(t, n, r) {
            const i = new Map;
            for (const o of n){
                const s = Wo(o.shape[t]);
                if (!s.length) throw new Error(`A discriminator value for key \`${t}\` could not be extracted from all schema options`);
                for (const l of s){
                    if (i.has(l)) throw new Error(`Discriminator property ${String(t)} has duplicate value ${String(l)}`);
                    i.set(l, o);
                }
            }
            return new dy({
                typeName: et.ZodDiscriminatedUnion,
                discriminator: t,
                options: n,
                optionsMap: i,
                ...ut(r)
            });
        }
    }
    function sN(e, t) {
        const n = Uo(e), r = Uo(t);
        if (e === t) return {
            valid: !0,
            data: e
        };
        if (n === Me.object && r === Me.object) {
            const i = bt.objectKeys(t), o = bt.objectKeys(e).filter((l)=>i.indexOf(l) !== -1), s = {
                ...e,
                ...t
            };
            for (const l of o){
                const u = sN(e[l], t[l]);
                if (!u.valid) return {
                    valid: !1
                };
                s[l] = u.data;
            }
            return {
                valid: !0,
                data: s
            };
        } else if (n === Me.array && r === Me.array) {
            if (e.length !== t.length) return {
                valid: !1
            };
            const i = [];
            for(let o = 0; o < e.length; o++){
                const s = e[o], l = t[o], u = sN(s, l);
                if (!u.valid) return {
                    valid: !1
                };
                i.push(u.data);
            }
            return {
                valid: !0,
                data: i
            };
        } else return n === Me.date && r === Me.date && +e == +t ? {
            valid: !0,
            data: e
        } : {
            valid: !1
        };
    }
    class ef extends ht {
        _parse(t) {
            const { status: n, ctx: r } = this._processInputParams(t), i = (o, s)=>{
                if (iN(o) || iN(s)) return tt;
                const l = sN(o.value, s.value);
                return l.valid ? ((oN(o) || oN(s)) && n.dirty(), {
                    status: n.value,
                    value: l.data
                }) : (Oe(r, {
                    code: Ee.invalid_intersection_types
                }), tt);
            };
            return r.common.async ? Promise.all([
                this._def.left._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                }),
                this._def.right._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                })
            ]).then(([o, s])=>i(o, s)) : i(this._def.left._parseSync({
                data: r.data,
                path: r.path,
                parent: r
            }), this._def.right._parseSync({
                data: r.data,
                path: r.path,
                parent: r
            }));
        }
    }
    ef.create = (e, t, n)=>new ef({
            left: e,
            right: t,
            typeName: et.ZodIntersection,
            ...ut(n)
        });
    class _o extends ht {
        _parse(t) {
            const { status: n, ctx: r } = this._processInputParams(t);
            if (r.parsedType !== Me.array) return Oe(r, {
                code: Ee.invalid_type,
                expected: Me.array,
                received: r.parsedType
            }), tt;
            if (r.data.length < this._def.items.length) return Oe(r, {
                code: Ee.too_small,
                minimum: this._def.items.length,
                inclusive: !0,
                exact: !1,
                type: "array"
            }), tt;
            !this._def.rest && r.data.length > this._def.items.length && (Oe(r, {
                code: Ee.too_big,
                maximum: this._def.items.length,
                inclusive: !0,
                exact: !1,
                type: "array"
            }), n.dirty());
            const o = [
                ...r.data
            ].map((s, l)=>{
                const u = this._def.items[l] || this._def.rest;
                return u ? u._parse(new Io(r, s, r.path, l)) : null;
            }).filter((s)=>!!s);
            return r.common.async ? Promise.all(o).then((s)=>ur.mergeArray(n, s)) : ur.mergeArray(n, o);
        }
        get items() {
            return this._def.items;
        }
        rest(t) {
            return new _o({
                ...this._def,
                rest: t
            });
        }
    }
    _o.create = (e, t)=>{
        if (!Array.isArray(e)) throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
        return new _o({
            items: e,
            typeName: et.ZodTuple,
            rest: null,
            ...ut(t)
        });
    };
    class tf extends ht {
        get keySchema() {
            return this._def.keyType;
        }
        get valueSchema() {
            return this._def.valueType;
        }
        _parse(t) {
            const { status: n, ctx: r } = this._processInputParams(t);
            if (r.parsedType !== Me.object) return Oe(r, {
                code: Ee.invalid_type,
                expected: Me.object,
                received: r.parsedType
            }), tt;
            const i = [], o = this._def.keyType, s = this._def.valueType;
            for(const l in r.data)i.push({
                key: o._parse(new Io(r, l, r.path, l)),
                value: s._parse(new Io(r, r.data[l], r.path, l)),
                alwaysSet: l in r.data
            });
            return r.common.async ? ur.mergeObjectAsync(n, i) : ur.mergeObjectSync(n, i);
        }
        get element() {
            return this._def.valueType;
        }
        static create(t, n, r) {
            return n instanceof ht ? new tf({
                keyType: t,
                valueType: n,
                typeName: et.ZodRecord,
                ...ut(r)
            }) : new tf({
                keyType: Gi.create(),
                valueType: t,
                typeName: et.ZodRecord,
                ...ut(n)
            });
        }
    }
    class lg extends ht {
        get keySchema() {
            return this._def.keyType;
        }
        get valueSchema() {
            return this._def.valueType;
        }
        _parse(t) {
            const { status: n, ctx: r } = this._processInputParams(t);
            if (r.parsedType !== Me.map) return Oe(r, {
                code: Ee.invalid_type,
                expected: Me.map,
                received: r.parsedType
            }), tt;
            const i = this._def.keyType, o = this._def.valueType, s = [
                ...r.data.entries()
            ].map(([l, u], f)=>({
                    key: i._parse(new Io(r, l, r.path, [
                        f,
                        "key"
                    ])),
                    value: o._parse(new Io(r, u, r.path, [
                        f,
                        "value"
                    ]))
                }));
            if (r.common.async) {
                const l = new Map;
                return Promise.resolve().then(async ()=>{
                    for (const u of s){
                        const f = await u.key, p = await u.value;
                        if (f.status === "aborted" || p.status === "aborted") return tt;
                        (f.status === "dirty" || p.status === "dirty") && n.dirty(), l.set(f.value, p.value);
                    }
                    return {
                        status: n.value,
                        value: l
                    };
                });
            } else {
                const l = new Map;
                for (const u of s){
                    const f = u.key, p = u.value;
                    if (f.status === "aborted" || p.status === "aborted") return tt;
                    (f.status === "dirty" || p.status === "dirty") && n.dirty(), l.set(f.value, p.value);
                }
                return {
                    status: n.value,
                    value: l
                };
            }
        }
    }
    lg.create = (e, t, n)=>new lg({
            valueType: t,
            keyType: e,
            typeName: et.ZodMap,
            ...ut(n)
        });
    class ul extends ht {
        _parse(t) {
            const { status: n, ctx: r } = this._processInputParams(t);
            if (r.parsedType !== Me.set) return Oe(r, {
                code: Ee.invalid_type,
                expected: Me.set,
                received: r.parsedType
            }), tt;
            const i = this._def;
            i.minSize !== null && r.data.size < i.minSize.value && (Oe(r, {
                code: Ee.too_small,
                minimum: i.minSize.value,
                type: "set",
                inclusive: !0,
                exact: !1,
                message: i.minSize.message
            }), n.dirty()), i.maxSize !== null && r.data.size > i.maxSize.value && (Oe(r, {
                code: Ee.too_big,
                maximum: i.maxSize.value,
                type: "set",
                inclusive: !0,
                exact: !1,
                message: i.maxSize.message
            }), n.dirty());
            const o = this._def.valueType;
            function s(u) {
                const f = new Set;
                for (const p of u){
                    if (p.status === "aborted") return tt;
                    p.status === "dirty" && n.dirty(), f.add(p.value);
                }
                return {
                    status: n.value,
                    value: f
                };
            }
            const l = [
                ...r.data.values()
            ].map((u, f)=>o._parse(new Io(r, u, r.path, f)));
            return r.common.async ? Promise.all(l).then((u)=>s(u)) : s(l);
        }
        min(t, n) {
            return new ul({
                ...this._def,
                minSize: {
                    value: t,
                    message: Ue.toString(n)
                }
            });
        }
        max(t, n) {
            return new ul({
                ...this._def,
                maxSize: {
                    value: t,
                    message: Ue.toString(n)
                }
            });
        }
        size(t, n) {
            return this.min(t, n).max(t, n);
        }
        nonempty(t) {
            return this.min(1, t);
        }
    }
    ul.create = (e, t)=>new ul({
            valueType: e,
            minSize: null,
            maxSize: null,
            typeName: et.ZodSet,
            ...ut(t)
        });
    class Rc extends ht {
        constructor(){
            super(...arguments), this.validate = this.implement;
        }
        _parse(t) {
            const { ctx: n } = this._processInputParams(t);
            if (n.parsedType !== Me.function) return Oe(n, {
                code: Ee.invalid_type,
                expected: Me.function,
                received: n.parsedType
            }), tt;
            function r(l, u) {
                return ig({
                    data: l,
                    path: n.path,
                    errorMaps: [
                        n.common.contextualErrorMap,
                        n.schemaErrorMap,
                        rg(),
                        $c
                    ].filter((f)=>!!f),
                    issueData: {
                        code: Ee.invalid_arguments,
                        argumentsError: u
                    }
                });
            }
            function i(l, u) {
                return ig({
                    data: l,
                    path: n.path,
                    errorMaps: [
                        n.common.contextualErrorMap,
                        n.schemaErrorMap,
                        rg(),
                        $c
                    ].filter((f)=>!!f),
                    issueData: {
                        code: Ee.invalid_return_type,
                        returnTypeError: u
                    }
                });
            }
            const o = {
                errorMap: n.common.contextualErrorMap
            }, s = n.data;
            if (this._def.returns instanceof Bc) {
                const l = this;
                return Sr(async function(...u) {
                    const f = new ai([]), p = await l._def.args.parseAsync(u, o).catch((v)=>{
                        throw f.addIssue(r(u, v)), f;
                    }), m = await Reflect.apply(s, this, p);
                    return await l._def.returns._def.type.parseAsync(m, o).catch((v)=>{
                        throw f.addIssue(i(m, v)), f;
                    });
                });
            } else {
                const l = this;
                return Sr(function(...u) {
                    const f = l._def.args.safeParse(u, o);
                    if (!f.success) throw new ai([
                        r(u, f.error)
                    ]);
                    const p = Reflect.apply(s, this, f.data), m = l._def.returns.safeParse(p, o);
                    if (!m.success) throw new ai([
                        i(p, m.error)
                    ]);
                    return m.data;
                });
            }
        }
        parameters() {
            return this._def.args;
        }
        returnType() {
            return this._def.returns;
        }
        args(...t) {
            return new Rc({
                ...this._def,
                args: _o.create(t).rest(el.create())
            });
        }
        returns(t) {
            return new Rc({
                ...this._def,
                returns: t
            });
        }
        implement(t) {
            return this.parse(t);
        }
        strictImplement(t) {
            return this.parse(t);
        }
        static create(t, n, r) {
            return new Rc({
                args: t || _o.create([]).rest(el.create()),
                returns: n || el.create(),
                typeName: et.ZodFunction,
                ...ut(r)
            });
        }
    }
    class nf extends ht {
        get schema() {
            return this._def.getter();
        }
        _parse(t) {
            const { ctx: n } = this._processInputParams(t);
            return this._def.getter()._parse({
                data: n.data,
                path: n.path,
                parent: n
            });
        }
    }
    nf.create = (e, t)=>new nf({
            getter: e,
            typeName: et.ZodLazy,
            ...ut(t)
        });
    class rf extends ht {
        _parse(t) {
            if (t.data !== this._def.value) {
                const n = this._getOrReturnCtx(t);
                return Oe(n, {
                    received: n.data,
                    code: Ee.invalid_literal,
                    expected: this._def.value
                }), tt;
            }
            return {
                status: "valid",
                value: t.data
            };
        }
        get value() {
            return this._def.value;
        }
    }
    rf.create = (e, t)=>new rf({
            value: e,
            typeName: et.ZodLiteral,
            ...ut(t)
        });
    function JP(e, t) {
        return new sa({
            values: e,
            typeName: et.ZodEnum,
            ...ut(t)
        });
    }
    class sa extends ht {
        constructor(){
            super(...arguments), ud.set(this, void 0);
        }
        _parse(t) {
            if (typeof t.data != "string") {
                const n = this._getOrReturnCtx(t), r = this._def.values;
                return Oe(n, {
                    expected: bt.joinValues(r),
                    received: n.parsedType,
                    code: Ee.invalid_type
                }), tt;
            }
            if (og(this, ud) || HP(this, ud, new Set(this._def.values)), !og(this, ud).has(t.data)) {
                const n = this._getOrReturnCtx(t), r = this._def.values;
                return Oe(n, {
                    received: n.data,
                    code: Ee.invalid_enum_value,
                    options: r
                }), tt;
            }
            return Sr(t.data);
        }
        get options() {
            return this._def.values;
        }
        get enum() {
            const t = {};
            for (const n of this._def.values)t[n] = n;
            return t;
        }
        get Values() {
            const t = {};
            for (const n of this._def.values)t[n] = n;
            return t;
        }
        get Enum() {
            const t = {};
            for (const n of this._def.values)t[n] = n;
            return t;
        }
        extract(t, n = this._def) {
            return sa.create(t, {
                ...this._def,
                ...n
            });
        }
        exclude(t, n = this._def) {
            return sa.create(this.options.filter((r)=>!t.includes(r)), {
                ...this._def,
                ...n
            });
        }
    }
    ud = new WeakMap;
    sa.create = JP;
    class of extends ht {
        constructor(){
            super(...arguments), dd.set(this, void 0);
        }
        _parse(t) {
            const n = bt.getValidEnumValues(this._def.values), r = this._getOrReturnCtx(t);
            if (r.parsedType !== Me.string && r.parsedType !== Me.number) {
                const i = bt.objectValues(n);
                return Oe(r, {
                    expected: bt.joinValues(i),
                    received: r.parsedType,
                    code: Ee.invalid_type
                }), tt;
            }
            if (og(this, dd) || HP(this, dd, new Set(bt.getValidEnumValues(this._def.values))), !og(this, dd).has(t.data)) {
                const i = bt.objectValues(n);
                return Oe(r, {
                    received: r.data,
                    code: Ee.invalid_enum_value,
                    options: i
                }), tt;
            }
            return Sr(t.data);
        }
        get enum() {
            return this._def.values;
        }
    }
    dd = new WeakMap;
    of.create = (e, t)=>new of({
            values: e,
            typeName: et.ZodNativeEnum,
            ...ut(t)
        });
    class Bc extends ht {
        unwrap() {
            return this._def.type;
        }
        _parse(t) {
            const { ctx: n } = this._processInputParams(t);
            if (n.parsedType !== Me.promise && n.common.async === !1) return Oe(n, {
                code: Ee.invalid_type,
                expected: Me.promise,
                received: n.parsedType
            }), tt;
            const r = n.parsedType === Me.promise ? n.data : Promise.resolve(n.data);
            return Sr(r.then((i)=>this._def.type.parseAsync(i, {
                    path: n.path,
                    errorMap: n.common.contextualErrorMap
                })));
        }
    }
    Bc.create = (e, t)=>new Bc({
            type: e,
            typeName: et.ZodPromise,
            ...ut(t)
        });
    class Yi extends ht {
        innerType() {
            return this._def.schema;
        }
        sourceType() {
            return this._def.schema._def.typeName === et.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
        }
        _parse(t) {
            const { status: n, ctx: r } = this._processInputParams(t), i = this._def.effect || null, o = {
                addIssue: (s)=>{
                    Oe(r, s), s.fatal ? n.abort() : n.dirty();
                },
                get path () {
                    return r.path;
                }
            };
            if (o.addIssue = o.addIssue.bind(o), i.type === "preprocess") {
                const s = i.transform(r.data, o);
                if (r.common.async) return Promise.resolve(s).then(async (l)=>{
                    if (n.value === "aborted") return tt;
                    const u = await this._def.schema._parseAsync({
                        data: l,
                        path: r.path,
                        parent: r
                    });
                    return u.status === "aborted" ? tt : u.status === "dirty" || n.value === "dirty" ? pc(u.value) : u;
                });
                {
                    if (n.value === "aborted") return tt;
                    const l = this._def.schema._parseSync({
                        data: s,
                        path: r.path,
                        parent: r
                    });
                    return l.status === "aborted" ? tt : l.status === "dirty" || n.value === "dirty" ? pc(l.value) : l;
                }
            }
            if (i.type === "refinement") {
                const s = (l)=>{
                    const u = i.refinement(l, o);
                    if (r.common.async) return Promise.resolve(u);
                    if (u instanceof Promise) throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
                    return l;
                };
                if (r.common.async === !1) {
                    const l = this._def.schema._parseSync({
                        data: r.data,
                        path: r.path,
                        parent: r
                    });
                    return l.status === "aborted" ? tt : (l.status === "dirty" && n.dirty(), s(l.value), {
                        status: n.value,
                        value: l.value
                    });
                } else return this._def.schema._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                }).then((l)=>l.status === "aborted" ? tt : (l.status === "dirty" && n.dirty(), s(l.value).then(()=>({
                            status: n.value,
                            value: l.value
                        }))));
            }
            if (i.type === "transform") if (r.common.async === !1) {
                const s = this._def.schema._parseSync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                if (!ll(s)) return s;
                const l = i.transform(s.value, o);
                if (l instanceof Promise) throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
                return {
                    status: n.value,
                    value: l
                };
            } else return this._def.schema._parseAsync({
                data: r.data,
                path: r.path,
                parent: r
            }).then((s)=>ll(s) ? Promise.resolve(i.transform(s.value, o)).then((l)=>({
                        status: n.value,
                        value: l
                    })) : s);
            bt.assertNever(i);
        }
    }
    Yi.create = (e, t, n)=>new Yi({
            schema: e,
            typeName: et.ZodEffects,
            effect: t,
            ...ut(n)
        });
    Yi.createWithPreprocess = (e, t, n)=>new Yi({
            schema: t,
            effect: {
                type: "preprocess",
                transform: e
            },
            typeName: et.ZodEffects,
            ...ut(n)
        });
    class yo extends ht {
        _parse(t) {
            return this._getType(t) === Me.undefined ? Sr(void 0) : this._def.innerType._parse(t);
        }
        unwrap() {
            return this._def.innerType;
        }
    }
    yo.create = (e, t)=>new yo({
            innerType: e,
            typeName: et.ZodOptional,
            ...ut(t)
        });
    class aa extends ht {
        _parse(t) {
            return this._getType(t) === Me.null ? Sr(null) : this._def.innerType._parse(t);
        }
        unwrap() {
            return this._def.innerType;
        }
    }
    aa.create = (e, t)=>new aa({
            innerType: e,
            typeName: et.ZodNullable,
            ...ut(t)
        });
    class sf extends ht {
        _parse(t) {
            const { ctx: n } = this._processInputParams(t);
            let r = n.data;
            return n.parsedType === Me.undefined && (r = this._def.defaultValue()), this._def.innerType._parse({
                data: r,
                path: n.path,
                parent: n
            });
        }
        removeDefault() {
            return this._def.innerType;
        }
    }
    sf.create = (e, t)=>new sf({
            innerType: e,
            typeName: et.ZodDefault,
            defaultValue: typeof t.default == "function" ? t.default : ()=>t.default,
            ...ut(t)
        });
    class af extends ht {
        _parse(t) {
            const { ctx: n } = this._processInputParams(t), r = {
                ...n,
                common: {
                    ...n.common,
                    issues: []
                }
            }, i = this._def.innerType._parse({
                data: r.data,
                path: r.path,
                parent: {
                    ...r
                }
            });
            return Qd(i) ? i.then((o)=>({
                    status: "valid",
                    value: o.status === "valid" ? o.value : this._def.catchValue({
                        get error () {
                            return new ai(r.common.issues);
                        },
                        input: r.data
                    })
                })) : {
                status: "valid",
                value: i.status === "valid" ? i.value : this._def.catchValue({
                    get error () {
                        return new ai(r.common.issues);
                    },
                    input: r.data
                })
            };
        }
        removeCatch() {
            return this._def.innerType;
        }
    }
    af.create = (e, t)=>new af({
            innerType: e,
            typeName: et.ZodCatch,
            catchValue: typeof t.catch == "function" ? t.catch : ()=>t.catch,
            ...ut(t)
        });
    class cg extends ht {
        _parse(t) {
            if (this._getType(t) !== Me.nan) {
                const r = this._getOrReturnCtx(t);
                return Oe(r, {
                    code: Ee.invalid_type,
                    expected: Me.nan,
                    received: r.parsedType
                }), tt;
            }
            return {
                status: "valid",
                value: t.data
            };
        }
    }
    cg.create = (e)=>new cg({
            typeName: et.ZodNaN,
            ...ut(e)
        });
    const aV = Symbol("zod_brand");
    class wS extends ht {
        _parse(t) {
            const { ctx: n } = this._processInputParams(t), r = n.data;
            return this._def.type._parse({
                data: r,
                path: n.path,
                parent: n
            });
        }
        unwrap() {
            return this._def.type;
        }
    }
    class Mf extends ht {
        _parse(t) {
            const { status: n, ctx: r } = this._processInputParams(t);
            if (r.common.async) return (async ()=>{
                const o = await this._def.in._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                return o.status === "aborted" ? tt : o.status === "dirty" ? (n.dirty(), pc(o.value)) : this._def.out._parseAsync({
                    data: o.value,
                    path: r.path,
                    parent: r
                });
            })();
            {
                const i = this._def.in._parseSync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                return i.status === "aborted" ? tt : i.status === "dirty" ? (n.dirty(), {
                    status: "dirty",
                    value: i.value
                }) : this._def.out._parseSync({
                    data: i.value,
                    path: r.path,
                    parent: r
                });
            }
        }
        static create(t, n) {
            return new Mf({
                in: t,
                out: n,
                typeName: et.ZodPipeline
            });
        }
    }
    class lf extends ht {
        _parse(t) {
            const n = this._def.innerType._parse(t), r = (i)=>(ll(i) && (i.value = Object.freeze(i.value)), i);
            return Qd(n) ? n.then((i)=>r(i)) : r(n);
        }
        unwrap() {
            return this._def.innerType;
        }
    }
    lf.create = (e, t)=>new lf({
            innerType: e,
            typeName: et.ZodReadonly,
            ...ut(t)
        });
    function Yk(e, t) {
        const n = typeof e == "function" ? e(t) : typeof e == "string" ? {
            message: e
        } : e;
        return typeof n == "string" ? {
            message: n
        } : n;
    }
    function ZP(e, t = {}, n) {
        return e ? qc.create().superRefine((r, i)=>{
            var o, s;
            const l = e(r);
            if (l instanceof Promise) return l.then((u)=>{
                var f, p;
                if (!u) {
                    const m = Yk(t, r), g = (p = (f = m.fatal) !== null && f !== void 0 ? f : n) !== null && p !== void 0 ? p : !0;
                    i.addIssue({
                        code: "custom",
                        ...m,
                        fatal: g
                    });
                }
            });
            if (!l) {
                const u = Yk(t, r), f = (s = (o = u.fatal) !== null && o !== void 0 ? o : n) !== null && s !== void 0 ? s : !0;
                i.addIssue({
                    code: "custom",
                    ...u,
                    fatal: f
                });
            }
        }) : qc.create();
    }
    const lV = {
        object: ln.lazycreate
    };
    var et;
    (function(e) {
        e.ZodString = "ZodString", e.ZodNumber = "ZodNumber", e.ZodNaN = "ZodNaN", e.ZodBigInt = "ZodBigInt", e.ZodBoolean = "ZodBoolean", e.ZodDate = "ZodDate", e.ZodSymbol = "ZodSymbol", e.ZodUndefined = "ZodUndefined", e.ZodNull = "ZodNull", e.ZodAny = "ZodAny", e.ZodUnknown = "ZodUnknown", e.ZodNever = "ZodNever", e.ZodVoid = "ZodVoid", e.ZodArray = "ZodArray", e.ZodObject = "ZodObject", e.ZodUnion = "ZodUnion", e.ZodDiscriminatedUnion = "ZodDiscriminatedUnion", e.ZodIntersection = "ZodIntersection", e.ZodTuple = "ZodTuple", e.ZodRecord = "ZodRecord", e.ZodMap = "ZodMap", e.ZodSet = "ZodSet", e.ZodFunction = "ZodFunction", e.ZodLazy = "ZodLazy", e.ZodLiteral = "ZodLiteral", e.ZodEnum = "ZodEnum", e.ZodEffects = "ZodEffects", e.ZodNativeEnum = "ZodNativeEnum", e.ZodOptional = "ZodOptional", e.ZodNullable = "ZodNullable", e.ZodDefault = "ZodDefault", e.ZodCatch = "ZodCatch", e.ZodPromise = "ZodPromise", e.ZodBranded = "ZodBranded", e.ZodPipeline = "ZodPipeline", e.ZodReadonly = "ZodReadonly";
    })(et || (et = {}));
    const cV = (e, t = {
        message: `Input not instance of ${e.name}`
    })=>ZP((n)=>n instanceof e, t), YP = Gi.create, XP = ia.create, uV = cg.create, dV = oa.create, eA = Jd.create, fV = cl.create, pV = sg.create, hV = Zd.create, mV = Yd.create, gV = qc.create, yV = el.create, vV = es.create, xV = ag.create, bV = Ji.create, wV = ln.create, NV = ln.strictCreate, SV = Xd.create, IV = dy.create, _V = ef.create, EV = _o.create, kV = tf.create, CV = lg.create, jV = ul.create, RV = Rc.create, OV = nf.create, TV = rf.create, PV = sa.create, AV = of.create, FV = Bc.create, Xk = Yi.create, DV = yo.create, MV = aa.create, LV = Yi.createWithPreprocess, $V = Mf.create, qV = ()=>YP().optional(), BV = ()=>XP().optional(), zV = ()=>eA().optional(), WV = {
        string: (e)=>Gi.create({
                ...e,
                coerce: !0
            }),
        number: (e)=>ia.create({
                ...e,
                coerce: !0
            }),
        boolean: (e)=>Jd.create({
                ...e,
                coerce: !0
            }),
        bigint: (e)=>oa.create({
                ...e,
                coerce: !0
            }),
        date: (e)=>cl.create({
                ...e,
                coerce: !0
            })
    }, VV = tt;
    var T = Object.freeze({
        __proto__: null,
        defaultErrorMap: $c,
        setErrorMap: L5,
        getErrorMap: rg,
        makeIssue: ig,
        EMPTY_PATH: $5,
        addIssueToContext: Oe,
        ParseStatus: ur,
        INVALID: tt,
        DIRTY: pc,
        OK: Sr,
        isAborted: iN,
        isDirty: oN,
        isValid: ll,
        isAsync: Qd,
        get util () {
            return bt;
        },
        get objectUtil () {
            return rN;
        },
        ZodParsedType: Me,
        getParsedType: Uo,
        ZodType: ht,
        datetimeRegex: QP,
        ZodString: Gi,
        ZodNumber: ia,
        ZodBigInt: oa,
        ZodBoolean: Jd,
        ZodDate: cl,
        ZodSymbol: sg,
        ZodUndefined: Zd,
        ZodNull: Yd,
        ZodAny: qc,
        ZodUnknown: el,
        ZodNever: es,
        ZodVoid: ag,
        ZodArray: Ji,
        ZodObject: ln,
        ZodUnion: Xd,
        ZodDiscriminatedUnion: dy,
        ZodIntersection: ef,
        ZodTuple: _o,
        ZodRecord: tf,
        ZodMap: lg,
        ZodSet: ul,
        ZodFunction: Rc,
        ZodLazy: nf,
        ZodLiteral: rf,
        ZodEnum: sa,
        ZodNativeEnum: of,
        ZodPromise: Bc,
        ZodEffects: Yi,
        ZodTransformer: Yi,
        ZodOptional: yo,
        ZodNullable: aa,
        ZodDefault: sf,
        ZodCatch: af,
        ZodNaN: cg,
        BRAND: aV,
        ZodBranded: wS,
        ZodPipeline: Mf,
        ZodReadonly: lf,
        custom: ZP,
        Schema: ht,
        ZodSchema: ht,
        late: lV,
        get ZodFirstPartyTypeKind () {
            return et;
        },
        coerce: WV,
        any: gV,
        array: bV,
        bigint: dV,
        boolean: eA,
        date: fV,
        discriminatedUnion: IV,
        effect: Xk,
        enum: PV,
        function: RV,
        instanceof: cV,
        intersection: _V,
        lazy: OV,
        literal: TV,
        map: CV,
        nan: uV,
        nativeEnum: AV,
        never: vV,
        null: mV,
        nullable: MV,
        number: XP,
        object: wV,
        oboolean: zV,
        onumber: BV,
        optional: DV,
        ostring: qV,
        pipeline: $V,
        preprocess: LV,
        promise: FV,
        record: kV,
        set: jV,
        strictObject: NV,
        string: YP,
        symbol: pV,
        transformer: Xk,
        tuple: EV,
        undefined: hV,
        union: SV,
        unknown: yV,
        void: xV,
        NEVER: VV,
        ZodIssueCode: Ee,
        quotelessJson: M5,
        ZodError: ai
    });
    const UV = T.object({
        page: T.number().gte(0, "Page must be greater than zero"),
        size: T.number().gte(1, "Page size must be greater than one to get any data")
    }), fr = T.object({
        id: T.string().min(1)
    }), NS = T.object({
        message: T.string()
    }), pr = T.object({
        id: T.string().optional(),
        idIn: T.array(T.string()).optional(),
        fulltext: T.string().optional()
    }), HV = T.enum([
        "asc",
        "desc"
    ]), Ai = ()=>T.union([
            T.boolean(),
            T.number().int().refine((e)=>e === 0 || e === 1).transform((e)=>typeof e == "boolean" ? e : e === 1)
        ]), ts = ()=>T.union([
            T.number(),
            T.string().transform((e)=>parseFloat(e)).refine((e)=>!isNaN(e))
        ]), vo = ()=>T.union([
            T.number().int(),
            T.string().transform((e)=>parseInt(e, 10)).refine((e)=>!isNaN(e))
        ]), Yn = (e)=>T.string().transform((t)=>JSON.parse(t)).refine((t)=>Array.isArray(t)).pipe(T.array(e)), eC = (e)=>T.string().transform((t)=>JSON.parse(t)).pipe(e), aN = new Proxy(()=>aN, {
        get: ()=>aN
    }), hr = ({ entity: e, shape: t, filter: n, sort: r })=>{
        const i = aN();
        return {
            entity: e,
            "~entity": i,
            "~entity-array": [],
            "~entity-partial-exclude-id": i,
            "~entity-input": i,
            "~entity-input-array": i,
            shape: t,
            "~shape": i,
            "~shape-partial": i,
            "~shape-input": i,
            "~shape-input-partial": i,
            filter: n,
            "~filter": i,
            sort: T.array(T.object({
                name: T.enum(r),
                sort: HV
            })),
            "~sort": i,
            "~sort-keyof": i
        };
    };
    var Vb, tC;
    function KV() {
        if (tC) return Vb;
        tC = 1;
        class e {
            constructor(n){
                this.options = n;
            }
            clean(n) {
                return n && (Array.isArray(n) ? this._cleanArray(n) : this._isObject(n) ? this.options.cleanInPlace ? this._cleanObjectInPlace(n) : this._cleanObject(n) : n);
            }
            _cleanArray(n) {
                return this.options.cleanInPlace ? this._getFilteredArrayInPlace(n) : this._getFilteredArray(n);
            }
            _cleanObjectInPlace(n) {
                return Object.keys(n).forEach((r)=>{
                    const i = n[r];
                    if (Array.isArray(i)) {
                        const o = this._cleanArray(i);
                        this._shouldReturnArray(o) ? n[r] = o : delete n[r];
                    } else if (this._isObject(i)) {
                        const o = this.clean(i);
                        this._shouldReturnObject(o) ? n[r] = o : delete n[r];
                    } else this._shouldRemoveValue(i) && delete n[r];
                }), n;
            }
            _cleanObject(n) {
                const r = {};
                return Object.keys(n).forEach((i)=>{
                    const o = n[i];
                    if (Array.isArray(o)) {
                        const s = this._cleanArray(o);
                        this._shouldReturnArray(s) && (r[i] = s);
                    } else if (this._isObject(o)) {
                        const s = this.clean(o);
                        this._shouldReturnObject(s) && (r[i] = s);
                    } else this._shouldRemoveValue(o) || (r[i] = o);
                }), r;
            }
            _getFilteredArrayInPlace(n) {
                for(let r = n.length - 1; r >= 0; r--){
                    const i = n[r], o = this.clean(i);
                    this._isObject(o) ? this._shouldReturnObject(o) ? n[r] = o : n.splice(r, 1) : Array.isArray(o) ? this._shouldReturnArray(o) ? n[r] = o : n.splice(r, 1) : this._shouldRemoveValue(o) && n.splice(r, 1);
                }
                return n;
            }
            _getFilteredArray(n) {
                const r = [];
                return n.forEach((i)=>{
                    const o = this.clean(i);
                    this._isObject(o) ? this._shouldReturnObject(o) && r.push(o) : Array.isArray(o) ? this._shouldReturnArray(o) && r.push(o) : this._shouldRemoveValue(o) || r.push(o);
                }), r;
            }
            _isObject(n) {
                return Object.prototype.toString.call(n) === "[object Object]";
            }
            _shouldReturnArray(n) {
                return !this.options.emptyArraysCleaner || n.length !== 0;
            }
            _shouldReturnObject(n) {
                return !this.options.emptyObjectsCleaner || Object.keys(n).length !== 0;
            }
            _shouldRemoveValue(n) {
                return n === null ? this.options.nullCleaner : n === "" ? this.options.emptyStringsCleaner : Number.isNaN(n) ? this.options.nanCleaner : n === void 0;
            }
        }
        return Vb = e, Vb;
    }
    var Ub, nC;
    function GV() {
        if (nC) return Ub;
        nC = 1;
        const e = KV(), t = (n)=>{
            const r = n || {};
            return {
                nullCleaner: r.hasOwnProperty("nullCleaner") ? r.nullCleaner : !1,
                emptyArraysCleaner: r.hasOwnProperty("emptyArraysCleaner") ? r.emptyArraysCleaner : !0,
                emptyObjectsCleaner: r.hasOwnProperty("emptyObjectsCleaner") ? r.emptyObjectsCleaner : !0,
                emptyStringsCleaner: r.hasOwnProperty("emptyStringsCleaner") ? r.emptyStringsCleaner : !0,
                nanCleaner: r.hasOwnProperty("nanCleaner") ? r.nanCleaner : !0,
                cleanInPlace: r.hasOwnProperty("cleanInPlace") ? r.cleanInPlace : !1
            };
        };
        return Ub = {
            clean: function(n, r) {
                const i = t(r);
                return new e(i).clean(n);
            }
        }, Ub;
    }
    var QV = GV();
    const JV = fi(QV), ZV = (e, t)=>e && JV.clean(e, {
            nullCleaner: !1,
            emptyArraysCleaner: !1,
            ...t
        }), Os = (e, t)=>Array.from({
            length: t - e + 1
        }, (n, r)=>r + e), YV = ({ page: e, total: t, siblings: n = 1, boundaries: r = 1 })=>{
        const i = Math.max(Math.trunc(t), 0);
        if (n * 2 + 3 + r * 2 >= i) return {
            type: "simple",
            page: e,
            total: t,
            pages: Os(1, i),
            start: [],
            end: []
        };
        const s = Math.max(e - n, r), l = Math.min(e + n, i - r), u = s > r + 2, f = l < i - (r + 1);
        return !u && f ? {
            type: "end",
            page: e,
            total: t,
            start: [],
            pages: Os(1, n * 2 + r + 2),
            end: Os(t - (r - 1), i)
        } : u && !f ? {
            type: "start",
            page: e,
            total: t,
            start: Os(1, r),
            pages: Os(t - (r + 1 + 2 * n), i),
            end: []
        } : {
            type: "both",
            page: e,
            total: t,
            start: Os(1, r),
            pages: Os(s, l),
            end: Os(i - r + 1, i)
        };
    };
    var Yl = {}, $o = {}, Lt = {}, Ts = {}, rC;
    function tA() {
        if (rC) return Ts;
        rC = 1, Object.defineProperty(Ts, "__esModule", {
            value: !0
        }), Ts.anumber = e, Ts.abytes = n, Ts.ahash = r, Ts.aexists = i, Ts.aoutput = o;
        function e(s) {
            if (!Number.isSafeInteger(s) || s < 0) throw new Error("positive integer expected, got " + s);
        }
        function t(s) {
            return s instanceof Uint8Array || ArrayBuffer.isView(s) && s.constructor.name === "Uint8Array";
        }
        function n(s, ...l) {
            if (!t(s)) throw new Error("Uint8Array expected");
            if (l.length > 0 && !l.includes(s.length)) throw new Error("Uint8Array expected of length " + l + ", got length=" + s.length);
        }
        function r(s) {
            if (typeof s != "function" || typeof s.create != "function") throw new Error("Hash should be wrapped by utils.wrapConstructor");
            e(s.outputLen), e(s.blockLen);
        }
        function i(s, l = !0) {
            if (s.destroyed) throw new Error("Hash instance has been destroyed");
            if (l && s.finished) throw new Error("Hash#digest() has already been called");
        }
        function o(s, l) {
            n(s);
            const u = l.outputLen;
            if (s.length < u) throw new Error("digestInto() expects output buffer of length at least " + u);
        }
        return Ts;
    }
    var at = {}, iC;
    function XV() {
        if (iC) return at;
        iC = 1, Object.defineProperty(at, "__esModule", {
            value: !0
        }), at.add5L = at.add5H = at.add4H = at.add4L = at.add3H = at.add3L = at.rotlBL = at.rotlBH = at.rotlSL = at.rotlSH = at.rotr32L = at.rotr32H = at.rotrBL = at.rotrBH = at.rotrSL = at.rotrSH = at.shrSL = at.shrSH = at.toBig = void 0, at.fromBig = n, at.split = r, at.add = N;
        const e = BigInt(2 ** 32 - 1), t = BigInt(32);
        function n(E, F = !1) {
            return F ? {
                h: Number(E & e),
                l: Number(E >> t & e)
            } : {
                h: Number(E >> t & e) | 0,
                l: Number(E & e) | 0
            };
        }
        function r(E, F = !1) {
            let j = new Uint32Array(E.length), M = new Uint32Array(E.length);
            for(let L = 0; L < E.length; L++){
                const { h: P, l: V } = n(E[L], F);
                [j[L], M[L]] = [
                    P,
                    V
                ];
            }
            return [
                j,
                M
            ];
        }
        const i = (E, F)=>BigInt(E >>> 0) << t | BigInt(F >>> 0);
        at.toBig = i;
        const o = (E, F, j)=>E >>> j;
        at.shrSH = o;
        const s = (E, F, j)=>E << 32 - j | F >>> j;
        at.shrSL = s;
        const l = (E, F, j)=>E >>> j | F << 32 - j;
        at.rotrSH = l;
        const u = (E, F, j)=>E << 32 - j | F >>> j;
        at.rotrSL = u;
        const f = (E, F, j)=>E << 64 - j | F >>> j - 32;
        at.rotrBH = f;
        const p = (E, F, j)=>E >>> j - 32 | F << 64 - j;
        at.rotrBL = p;
        const m = (E, F)=>F;
        at.rotr32H = m;
        const g = (E, F)=>E;
        at.rotr32L = g;
        const v = (E, F, j)=>E << j | F >>> 32 - j;
        at.rotlSH = v;
        const x = (E, F, j)=>F << j | E >>> 32 - j;
        at.rotlSL = x;
        const b = (E, F, j)=>F << j - 32 | E >>> 64 - j;
        at.rotlBH = b;
        const S = (E, F, j)=>E << j - 32 | F >>> 64 - j;
        at.rotlBL = S;
        function N(E, F, j, M) {
            const L = (F >>> 0) + (M >>> 0);
            return {
                h: E + j + (L / 2 ** 32 | 0) | 0,
                l: L | 0
            };
        }
        const _ = (E, F, j)=>(E >>> 0) + (F >>> 0) + (j >>> 0);
        at.add3L = _;
        const I = (E, F, j, M)=>F + j + M + (E / 2 ** 32 | 0) | 0;
        at.add3H = I;
        const C = (E, F, j, M)=>(E >>> 0) + (F >>> 0) + (j >>> 0) + (M >>> 0);
        at.add4L = C;
        const A = (E, F, j, M, L)=>F + j + M + L + (E / 2 ** 32 | 0) | 0;
        at.add4H = A;
        const R = (E, F, j, M, L)=>(E >>> 0) + (F >>> 0) + (j >>> 0) + (M >>> 0) + (L >>> 0);
        at.add5L = R;
        const D = (E, F, j, M, L, P)=>F + j + M + L + P + (E / 2 ** 32 | 0) | 0;
        at.add5H = D;
        const O = {
            fromBig: n,
            split: r,
            toBig: i,
            shrSH: o,
            shrSL: s,
            rotrSH: l,
            rotrSL: u,
            rotrBH: f,
            rotrBL: p,
            rotr32H: m,
            rotr32L: g,
            rotlSH: v,
            rotlSL: x,
            rotlBH: b,
            rotlBL: S,
            add: N,
            add3L: _,
            add3H: I,
            add4L: C,
            add4H: A,
            add5H: D,
            add5L: R
        };
        return at.default = O, at;
    }
    var Hb = {}, ed = {}, oC;
    function eU() {
        return oC || (oC = 1, Object.defineProperty(ed, "__esModule", {
            value: !0
        }), ed.crypto = void 0, ed.crypto = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0), ed;
    }
    var sC;
    function tU() {
        return sC || (sC = 1, function(e) {
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.Hash = e.nextTick = e.byteSwapIfBE = e.isLE = void 0, e.isBytes = r, e.u8 = i, e.u32 = o, e.createView = s, e.rotr = l, e.rotl = u, e.byteSwap = f, e.byteSwap32 = p, e.bytesToHex = g, e.hexToBytes = b, e.asyncLoop = N, e.utf8ToBytes = _, e.toBytes = I, e.concatBytes = C, e.checkOpts = R, e.wrapConstructor = D, e.wrapConstructorWithOpts = O, e.wrapXOFConstructorWithOpts = E, e.randomBytes = F;
            const t = eU(), n = tA();
            function r(j) {
                return j instanceof Uint8Array || ArrayBuffer.isView(j) && j.constructor.name === "Uint8Array";
            }
            function i(j) {
                return new Uint8Array(j.buffer, j.byteOffset, j.byteLength);
            }
            function o(j) {
                return new Uint32Array(j.buffer, j.byteOffset, Math.floor(j.byteLength / 4));
            }
            function s(j) {
                return new DataView(j.buffer, j.byteOffset, j.byteLength);
            }
            function l(j, M) {
                return j << 32 - M | j >>> M;
            }
            function u(j, M) {
                return j << M | j >>> 32 - M >>> 0;
            }
            e.isLE = new Uint8Array(new Uint32Array([
                287454020
            ]).buffer)[0] === 68;
            function f(j) {
                return j << 24 & 4278190080 | j << 8 & 16711680 | j >>> 8 & 65280 | j >>> 24 & 255;
            }
            e.byteSwapIfBE = e.isLE ? (j)=>j : (j)=>f(j);
            function p(j) {
                for(let M = 0; M < j.length; M++)j[M] = f(j[M]);
            }
            const m = Array.from({
                length: 256
            }, (j, M)=>M.toString(16).padStart(2, "0"));
            function g(j) {
                (0, n.abytes)(j);
                let M = "";
                for(let L = 0; L < j.length; L++)M += m[j[L]];
                return M;
            }
            const v = {
                _0: 48,
                _9: 57,
                A: 65,
                F: 70,
                a: 97,
                f: 102
            };
            function x(j) {
                if (j >= v._0 && j <= v._9) return j - v._0;
                if (j >= v.A && j <= v.F) return j - (v.A - 10);
                if (j >= v.a && j <= v.f) return j - (v.a - 10);
            }
            function b(j) {
                if (typeof j != "string") throw new Error("hex string expected, got " + typeof j);
                const M = j.length, L = M / 2;
                if (M % 2) throw new Error("hex string expected, got unpadded hex of length " + M);
                const P = new Uint8Array(L);
                for(let V = 0, z = 0; V < L; V++, z += 2){
                    const Q = x(j.charCodeAt(z)), K = x(j.charCodeAt(z + 1));
                    if (Q === void 0 || K === void 0) {
                        const H = j[z] + j[z + 1];
                        throw new Error('hex string expected, got non-hex character "' + H + '" at index ' + z);
                    }
                    P[V] = Q * 16 + K;
                }
                return P;
            }
            const S = async ()=>{};
            e.nextTick = S;
            async function N(j, M, L) {
                let P = Date.now();
                for(let V = 0; V < j; V++){
                    L(V);
                    const z = Date.now() - P;
                    z >= 0 && z < M || (await (0, e.nextTick)(), P += z);
                }
            }
            function _(j) {
                if (typeof j != "string") throw new Error("utf8ToBytes expected string, got " + typeof j);
                return new Uint8Array(new TextEncoder().encode(j));
            }
            function I(j) {
                return typeof j == "string" && (j = _(j)), (0, n.abytes)(j), j;
            }
            function C(...j) {
                let M = 0;
                for(let P = 0; P < j.length; P++){
                    const V = j[P];
                    (0, n.abytes)(V), M += V.length;
                }
                const L = new Uint8Array(M);
                for(let P = 0, V = 0; P < j.length; P++){
                    const z = j[P];
                    L.set(z, V), V += z.length;
                }
                return L;
            }
            class A {
                clone() {
                    return this._cloneInto();
                }
            }
            e.Hash = A;
            function R(j, M) {
                if (M !== void 0 && {}.toString.call(M) !== "[object Object]") throw new Error("Options should be object or undefined");
                return Object.assign(j, M);
            }
            function D(j) {
                const M = (P)=>j().update(I(P)).digest(), L = j();
                return M.outputLen = L.outputLen, M.blockLen = L.blockLen, M.create = ()=>j(), M;
            }
            function O(j) {
                const M = (P, V)=>j(V).update(I(P)).digest(), L = j({});
                return M.outputLen = L.outputLen, M.blockLen = L.blockLen, M.create = (P)=>j(P), M;
            }
            function E(j) {
                const M = (P, V)=>j(V).update(I(P)).digest(), L = j({});
                return M.outputLen = L.outputLen, M.blockLen = L.blockLen, M.create = (P)=>j(P), M;
            }
            function F(j = 32) {
                if (t.crypto && typeof t.crypto.getRandomValues == "function") return t.crypto.getRandomValues(new Uint8Array(j));
                if (t.crypto && typeof t.crypto.randomBytes == "function") return t.crypto.randomBytes(j);
                throw new Error("crypto.getRandomValues must be defined");
            }
        }(Hb)), Hb;
    }
    var aC;
    function nU() {
        if (aC) return Lt;
        aC = 1, Object.defineProperty(Lt, "__esModule", {
            value: !0
        }), Lt.shake256 = Lt.shake128 = Lt.keccak_512 = Lt.keccak_384 = Lt.keccak_256 = Lt.keccak_224 = Lt.sha3_512 = Lt.sha3_384 = Lt.sha3_256 = Lt.sha3_224 = Lt.Keccak = void 0, Lt.keccakP = S;
        const e = tA(), t = XV(), n = tU(), r = [], i = [], o = [], s = BigInt(0), l = BigInt(1), u = BigInt(2), f = BigInt(7), p = BigInt(256), m = BigInt(113);
        for(let C = 0, A = l, R = 1, D = 0; C < 24; C++){
            [R, D] = [
                D,
                (2 * R + 3 * D) % 5
            ], r.push(2 * (5 * D + R)), i.push((C + 1) * (C + 2) / 2 % 64);
            let O = s;
            for(let E = 0; E < 7; E++)A = (A << l ^ (A >> f) * m) % p, A & u && (O ^= l << (l << BigInt(E)) - l);
            o.push(O);
        }
        const [g, v] = (0, t.split)(o, !0), x = (C, A, R)=>R > 32 ? (0, t.rotlBH)(C, A, R) : (0, t.rotlSH)(C, A, R), b = (C, A, R)=>R > 32 ? (0, t.rotlBL)(C, A, R) : (0, t.rotlSL)(C, A, R);
        function S(C, A = 24) {
            const R = new Uint32Array(10);
            for(let D = 24 - A; D < 24; D++){
                for(let F = 0; F < 10; F++)R[F] = C[F] ^ C[F + 10] ^ C[F + 20] ^ C[F + 30] ^ C[F + 40];
                for(let F = 0; F < 10; F += 2){
                    const j = (F + 8) % 10, M = (F + 2) % 10, L = R[M], P = R[M + 1], V = x(L, P, 1) ^ R[j], z = b(L, P, 1) ^ R[j + 1];
                    for(let Q = 0; Q < 50; Q += 10)C[F + Q] ^= V, C[F + Q + 1] ^= z;
                }
                let O = C[2], E = C[3];
                for(let F = 0; F < 24; F++){
                    const j = i[F], M = x(O, E, j), L = b(O, E, j), P = r[F];
                    O = C[P], E = C[P + 1], C[P] = M, C[P + 1] = L;
                }
                for(let F = 0; F < 50; F += 10){
                    for(let j = 0; j < 10; j++)R[j] = C[F + j];
                    for(let j = 0; j < 10; j++)C[F + j] ^= ~R[(j + 2) % 10] & R[(j + 4) % 10];
                }
                C[0] ^= g[D], C[1] ^= v[D];
            }
            R.fill(0);
        }
        class N extends n.Hash {
            constructor(A, R, D, O = !1, E = 24){
                if (super(), this.blockLen = A, this.suffix = R, this.outputLen = D, this.enableXOF = O, this.rounds = E, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, (0, e.anumber)(D), 0 >= this.blockLen || this.blockLen >= 200) throw new Error("Sha3 supports only keccak-f1600 function");
                this.state = new Uint8Array(200), this.state32 = (0, n.u32)(this.state);
            }
            keccak() {
                n.isLE || (0, n.byteSwap32)(this.state32), S(this.state32, this.rounds), n.isLE || (0, n.byteSwap32)(this.state32), this.posOut = 0, this.pos = 0;
            }
            update(A) {
                (0, e.aexists)(this);
                const { blockLen: R, state: D } = this;
                A = (0, n.toBytes)(A);
                const O = A.length;
                for(let E = 0; E < O;){
                    const F = Math.min(R - this.pos, O - E);
                    for(let j = 0; j < F; j++)D[this.pos++] ^= A[E++];
                    this.pos === R && this.keccak();
                }
                return this;
            }
            finish() {
                if (this.finished) return;
                this.finished = !0;
                const { state: A, suffix: R, pos: D, blockLen: O } = this;
                A[D] ^= R, R & 128 && D === O - 1 && this.keccak(), A[O - 1] ^= 128, this.keccak();
            }
            writeInto(A) {
                (0, e.aexists)(this, !1), (0, e.abytes)(A), this.finish();
                const R = this.state, { blockLen: D } = this;
                for(let O = 0, E = A.length; O < E;){
                    this.posOut >= D && this.keccak();
                    const F = Math.min(D - this.posOut, E - O);
                    A.set(R.subarray(this.posOut, this.posOut + F), O), this.posOut += F, O += F;
                }
                return A;
            }
            xofInto(A) {
                if (!this.enableXOF) throw new Error("XOF is not possible for this instance");
                return this.writeInto(A);
            }
            xof(A) {
                return (0, e.anumber)(A), this.xofInto(new Uint8Array(A));
            }
            digestInto(A) {
                if ((0, e.aoutput)(A, this), this.finished) throw new Error("digest() was already called");
                return this.writeInto(A), this.destroy(), A;
            }
            digest() {
                return this.digestInto(new Uint8Array(this.outputLen));
            }
            destroy() {
                this.destroyed = !0, this.state.fill(0);
            }
            _cloneInto(A) {
                const { blockLen: R, suffix: D, outputLen: O, rounds: E, enableXOF: F } = this;
                return A || (A = new N(R, D, O, F, E)), A.state32.set(this.state32), A.pos = this.pos, A.posOut = this.posOut, A.finished = this.finished, A.rounds = E, A.suffix = D, A.outputLen = O, A.enableXOF = F, A.destroyed = this.destroyed, A;
            }
        }
        Lt.Keccak = N;
        const _ = (C, A, R)=>(0, n.wrapConstructor)(()=>new N(A, C, R));
        Lt.sha3_224 = _(6, 144, 224 / 8), Lt.sha3_256 = _(6, 136, 256 / 8), Lt.sha3_384 = _(6, 104, 384 / 8), Lt.sha3_512 = _(6, 72, 512 / 8), Lt.keccak_224 = _(1, 144, 224 / 8), Lt.keccak_256 = _(1, 136, 256 / 8), Lt.keccak_384 = _(1, 104, 384 / 8), Lt.keccak_512 = _(1, 72, 512 / 8);
        const I = (C, A, R)=>(0, n.wrapXOFConstructorWithOpts)((D = {})=>new N(A, C, D.dkLen === void 0 ? R : D.dkLen, !0));
        return Lt.shake128 = I(31, 168, 128 / 8), Lt.shake256 = I(31, 136, 256 / 8), Lt;
    }
    var lC;
    function rU() {
        if (lC) return $o;
        lC = 1;
        const { sha3_512: e } = nU(), t = 24, n = 32, r = (x = 4, b = Math.random)=>{
            let S = "";
            for(; S.length < x;)S = S + Math.floor(b() * 36).toString(36);
            return S;
        };
        function i(x) {
            let b = 8n, S = 0n;
            for (const N of x.values()){
                const _ = BigInt(N);
                S = (S << b) + _;
            }
            return S;
        }
        const o = (x = "")=>i(e(x)).toString(36).slice(1), s = Array.from({
            length: 26
        }, (x, b)=>String.fromCharCode(b + 97)), l = (x)=>s[Math.floor(x() * s.length)], u = ({ globalObj: x = typeof Ua < "u" ? Ua : typeof window < "u" ? window : {}, random: b = Math.random } = {})=>{
            const S = Object.keys(x).toString(), N = S.length ? S + r(n, b) : r(n, b);
            return o(N).substring(0, n);
        }, f = (x)=>()=>x++, p = 476782367, m = ({ random: x = Math.random, counter: b = f(Math.floor(x() * p)), length: S = t, fingerprint: N = u({
            random: x
        }) } = {})=>function() {
                const I = l(x), C = Date.now().toString(36), A = b().toString(36), R = r(S, x), D = `${C + R + A + N}`;
                return `${I + o(D).substring(1, S)}`;
            }, g = m(), v = (x, { minLength: b = 2, maxLength: S = n } = {})=>{
            const N = x.length, _ = /^[0-9a-z]+$/;
            try {
                if (typeof x == "string" && N >= b && N <= S && _.test(x)) return !0;
            } finally{}
            return !1;
        };
        return $o.getConstants = ()=>({
                defaultLength: t,
                bigLength: n
            }), $o.init = m, $o.createId = g, $o.bufToBigInt = i, $o.createCounter = f, $o.createFingerprint = u, $o.isCuid = v, $o;
    }
    var cC;
    function iU() {
        if (cC) return Yl;
        cC = 1;
        const { createId: e, init: t, getConstants: n, isCuid: r } = rU();
        return Yl.createId = e, Yl.init = t, Yl.getConstants = n, Yl.isCuid = r, Yl;
    }
    var oU = iU();
    const xt = oU.createId;
    var Kb, uC;
    function sU() {
        if (uC) return Kb;
        uC = 1;
        var e = Function.prototype.toString, t = typeof Reflect == "object" && Reflect !== null && Reflect.apply, n, r;
        if (typeof t == "function" && typeof Object.defineProperty == "function") try {
            n = Object.defineProperty({}, "length", {
                get: function() {
                    throw r;
                }
            }), r = {}, t(function() {
                throw 42;
            }, null, n);
        } catch (_) {
            _ !== r && (t = null);
        }
        else t = null;
        var i = /^\s*class\b/, o = function(I) {
            try {
                var C = e.call(I);
                return i.test(C);
            } catch  {
                return !1;
            }
        }, s = function(I) {
            try {
                return o(I) ? !1 : (e.call(I), !0);
            } catch  {
                return !1;
            }
        }, l = Object.prototype.toString, u = "[object Object]", f = "[object Function]", p = "[object GeneratorFunction]", m = "[object HTMLAllCollection]", g = "[object HTML document.all class]", v = "[object HTMLCollection]", x = typeof Symbol == "function" && !!Symbol.toStringTag, b = !(0 in [
            , 
        ]), S = function() {
            return !1;
        };
        if (typeof document == "object") {
            var N = document.all;
            l.call(N) === l.call(document.all) && (S = function(I) {
                if ((b || !I) && (typeof I > "u" || typeof I == "object")) try {
                    var C = l.call(I);
                    return (C === m || C === g || C === v || C === u) && I("") == null;
                } catch  {}
                return !1;
            });
        }
        return Kb = t ? function(I) {
            if (S(I)) return !0;
            if (!I || typeof I != "function" && typeof I != "object") return !1;
            try {
                t(I, null, n);
            } catch (C) {
                if (C !== r) return !1;
            }
            return !o(I) && s(I);
        } : function(I) {
            if (S(I)) return !0;
            if (!I || typeof I != "function" && typeof I != "object") return !1;
            if (x) return s(I);
            if (o(I)) return !1;
            var C = l.call(I);
            return C !== f && C !== p && !/^\[object HTML/.test(C) ? !1 : s(I);
        }, Kb;
    }
    var aU = sU();
    const lU = fi(aU), cU = (e)=>lU(e), uU = (e)=>typeof e == "object" && !Array.isArray(e) && e !== null, nA = (e)=>Object.keys(e).reduce((t, n)=>(t[n] = e[n] === "" ? null : uU(e[n]) ? nA(e[n]) : e[n], t), {});
    var lm = {
        exports: {}
    }, dU = lm.exports, dC;
    function fU() {
        return dC || (dC = 1, function(e) {
            (function(t, n) {
                e.exports = n();
            })(dU, function() {
                var t = Object.prototype.toString;
                function n(m, g) {
                    return m == null ? !1 : Object.prototype.hasOwnProperty.call(m, g);
                }
                function r(m) {
                    if (!m || s(m) && m.length === 0) return !0;
                    if (typeof m != "string") {
                        for(var g in m)if (n(m, g)) return !1;
                        return !0;
                    }
                    return !1;
                }
                function i(m) {
                    return t.call(m);
                }
                function o(m) {
                    return typeof m == "object" && i(m) === "[object Object]";
                }
                var s = Array.isArray || function(m) {
                    return t.call(m) === "[object Array]";
                };
                function l(m) {
                    return typeof m == "boolean" || i(m) === "[object Boolean]";
                }
                function u(m) {
                    var g = parseInt(m);
                    return g.toString() === m ? g : m;
                }
                function f(m) {
                    m = m || {};
                    var g = function(N) {
                        return Object.keys(g).reduce(function(_, I) {
                            return I === "create" || typeof g[I] == "function" && (_[I] = g[I].bind(g, N)), _;
                        }, {});
                    }, v;
                    m.includeInheritedProps ? v = function() {
                        return !0;
                    } : v = function(N, _) {
                        return typeof _ == "number" && Array.isArray(N) || n(N, _);
                    };
                    function x(N, _) {
                        if (v(N, _)) return N[_];
                    }
                    var b;
                    m.includeInheritedProps ? b = function(N, _) {
                        typeof _ != "string" && typeof _ != "number" && (_ = String(_));
                        var I = x(N, _);
                        if (_ === "__proto__" || _ === "prototype" || _ === "constructor" && typeof I == "function") throw new Error("For security reasons, object's magic properties cannot be set");
                        return I;
                    } : b = function(N, _) {
                        return x(N, _);
                    };
                    function S(N, _, I, C) {
                        if (typeof _ == "number" && (_ = [
                            _
                        ]), !_ || _.length === 0) return N;
                        if (typeof _ == "string") return S(N, _.split(".").map(u), I, C);
                        var A = _[0], R = b(N, A);
                        return _.length === 1 ? ((R === void 0 || !C) && (N[A] = I), R) : (R === void 0 && (typeof _[1] == "number" ? N[A] = [] : N[A] = {}), S(N[A], _.slice(1), I, C));
                    }
                    return g.has = function(N, _) {
                        if (typeof _ == "number" ? _ = [
                            _
                        ] : typeof _ == "string" && (_ = _.split(".")), !_ || _.length === 0) return !!N;
                        for(var I = 0; I < _.length; I++){
                            var C = u(_[I]);
                            if (typeof C == "number" && s(N) && C < N.length || (m.includeInheritedProps ? C in Object(N) : n(N, C))) N = N[C];
                            else return !1;
                        }
                        return !0;
                    }, g.ensureExists = function(N, _, I) {
                        return S(N, _, I, !0);
                    }, g.set = function(N, _, I, C) {
                        return S(N, _, I, C);
                    }, g.insert = function(N, _, I, C) {
                        var A = g.get(N, _);
                        C = ~~C, s(A) || (A = [], g.set(N, _, A)), A.splice(C, 0, I);
                    }, g.empty = function(N, _) {
                        if (!r(_) && N != null) {
                            var I, C;
                            if (I = g.get(N, _)) {
                                if (typeof I == "string") return g.set(N, _, "");
                                if (l(I)) return g.set(N, _, !1);
                                if (typeof I == "number") return g.set(N, _, 0);
                                if (s(I)) I.length = 0;
                                else if (o(I)) for(C in I)v(I, C) && delete I[C];
                                else return g.set(N, _, null);
                            }
                        }
                    }, g.push = function(N, _) {
                        var I = g.get(N, _);
                        s(I) || (I = [], g.set(N, _, I)), I.push.apply(I, Array.prototype.slice.call(arguments, 2));
                    }, g.coalesce = function(N, _, I) {
                        for(var C, A = 0, R = _.length; A < R; A++)if ((C = g.get(N, _[A])) !== void 0) return C;
                        return I;
                    }, g.get = function(N, _, I) {
                        if (typeof _ == "number" && (_ = [
                            _
                        ]), !_ || _.length === 0) return N;
                        if (N == null) return I;
                        if (typeof _ == "string") return g.get(N, _.split("."), I);
                        var C = u(_[0]), A = b(N, C);
                        return A === void 0 ? I : _.length === 1 ? A : g.get(N[C], _.slice(1), I);
                    }, g.del = function(_, I) {
                        if (typeof I == "number" && (I = [
                            I
                        ]), _ == null || r(I)) return _;
                        if (typeof I == "string") return g.del(_, I.split("."));
                        var C = u(I[0]);
                        if (b(_, C), !v(_, C)) return _;
                        if (I.length === 1) s(_) ? _.splice(C, 1) : delete _[C];
                        else return g.del(_[C], I.slice(1));
                        return _;
                    }, g;
                }
                var p = f();
                return p.create = f, p.withInheritedProps = f({
                    includeInheritedProps: !0
                }), p;
            });
        }(lm)), lm.exports;
    }
    var pU = fU();
    const fC = fi(pU);
    function mt({ number: e, empty: t = "-", fraction: n = 2 }) {
        if (e == null) return t;
        try {
            return e.toLocaleString(void 0, {
                maximumFractionDigits: n
            });
        } catch (r) {
            return console.error("toHumanNumber", e, r), e.toFixed(2);
        }
    }
    const rA = (e)=>{
        let t = 0;
        for(let n = 0; n < e.length; n++)t = (t << 5) - t + e.charCodeAt(n), t |= 0;
        return Math.abs(t);
    }, iA = async (e)=>new Promise((t, n)=>{
            const r = new FileReader;
            r.readAsDataURL(e), r.onload = ()=>t(r.result), r.onerror = (i)=>n(i);
        }), SS = ({ error: e, errors: t, onError: n })=>{
        const r = t.some((o)=>o), i = e instanceof Error;
        return !r && i && n(e), r || i;
    }, oA = lt({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "rounded-sm",
                "px-2",
                "py-0.5",
                "hover:bg-slate-100",
                "text-slate-500",
                "hover:text-blue-500",
                "cursor-pointer"
            ]
        },
        variant: {
            variant: {
                common: [],
                warning: [
                    "text-amber-500",
                    "hover:text-amber-600",
                    "hover:bg-amber-100"
                ],
                danger: [
                    "text-red-500",
                    "hover:text-red-600",
                    "hover:bg-red-100"
                ]
            },
            disabled: {
                true: [
                    "cursor-not-allowed",
                    "text-slate-300",
                    "bg-slate-100",
                    "hover:bg-slate-100"
                ]
            }
        },
        defaults: {
            variant: "common",
            disabled: !1
        }
    }), hU = lt({
        use: oA,
        slot: {},
        variant: {},
        defaults: {}
    }), IS = ({ icon: e, iconProps: t, variant: n, tva: r = hU, css: i, children: o, ...s })=>{
        const l = r({
            ...n,
            css: i
        }).slots;
        return d.jsxs("div", {
            className: l.base(),
            ...s,
            children: [
                jf(e) ? d.jsx(st, {
                    icon: e,
                    ...t
                }) : e,
                o
            ]
        });
    };
    function fy() {
        return typeof window < "u";
    }
    function fa(e) {
        return sA(e) ? (e.nodeName || "").toLowerCase() : "#document";
    }
    function zr(e) {
        var t;
        return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
    }
    function Eo(e) {
        var t;
        return (t = (sA(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
    }
    function sA(e) {
        return fy() ? e instanceof Node || e instanceof zr(e).Node : !1;
    }
    function qt(e) {
        return fy() ? e instanceof Element || e instanceof zr(e).Element : !1;
    }
    function jn(e) {
        return fy() ? e instanceof HTMLElement || e instanceof zr(e).HTMLElement : !1;
    }
    function lN(e) {
        return !fy() || typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof zr(e).ShadowRoot;
    }
    function Lf(e) {
        const { overflow: t, overflowX: n, overflowY: r, display: i } = Ri(e);
        return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && ![
            "inline",
            "contents"
        ].includes(i);
    }
    function mU(e) {
        return [
            "table",
            "td",
            "th"
        ].includes(fa(e));
    }
    function py(e) {
        return [
            ":popover-open",
            ":modal"
        ].some((t)=>{
            try {
                return e.matches(t);
            } catch  {
                return !1;
            }
        });
    }
    function _S(e) {
        const t = hy(), n = qt(e) ? Ri(e) : e;
        return [
            "transform",
            "translate",
            "scale",
            "rotate",
            "perspective"
        ].some((r)=>n[r] ? n[r] !== "none" : !1) || (n.containerType ? n.containerType !== "normal" : !1) || !t && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !t && (n.filter ? n.filter !== "none" : !1) || [
            "transform",
            "translate",
            "scale",
            "rotate",
            "perspective",
            "filter"
        ].some((r)=>(n.willChange || "").includes(r)) || [
            "paint",
            "layout",
            "strict",
            "content"
        ].some((r)=>(n.contain || "").includes(r));
    }
    function gU(e) {
        let t = ns(e);
        for(; jn(t) && !Go(t);){
            if (_S(t)) return t;
            if (py(t)) return null;
            t = ns(t);
        }
        return null;
    }
    function hy() {
        return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
    }
    function Go(e) {
        return [
            "html",
            "body",
            "#document"
        ].includes(fa(e));
    }
    function Ri(e) {
        return zr(e).getComputedStyle(e);
    }
    function my(e) {
        return qt(e) ? {
            scrollLeft: e.scrollLeft,
            scrollTop: e.scrollTop
        } : {
            scrollLeft: e.scrollX,
            scrollTop: e.scrollY
        };
    }
    function ns(e) {
        if (fa(e) === "html") return e;
        const t = e.assignedSlot || e.parentNode || lN(e) && e.host || Eo(e);
        return lN(t) ? t.host : t;
    }
    function aA(e) {
        const t = ns(e);
        return Go(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : jn(t) && Lf(t) ? t : aA(t);
    }
    function Qs(e, t, n) {
        var r;
        t === void 0 && (t = []), n === void 0 && (n = !0);
        const i = aA(e), o = i === ((r = e.ownerDocument) == null ? void 0 : r.body), s = zr(i);
        if (o) {
            const l = cN(s);
            return t.concat(s, s.visualViewport || [], Lf(i) ? i : [], l && n ? Qs(l) : []);
        }
        return t.concat(i, Qs(i, [], n));
    }
    function cN(e) {
        return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;
    }
    function Vi(e) {
        let t = e.activeElement;
        for(; ((n = t) == null || (n = n.shadowRoot) == null ? void 0 : n.activeElement) != null;){
            var n;
            t = t.shadowRoot.activeElement;
        }
        return t;
    }
    function Jn(e, t) {
        if (!e || !t) return !1;
        const n = t.getRootNode == null ? void 0 : t.getRootNode();
        if (e.contains(t)) return !0;
        if (n && lN(n)) {
            let r = t;
            for(; r;){
                if (e === r) return !0;
                r = r.parentNode || r.host;
            }
        }
        return !1;
    }
    function ES() {
        const e = navigator.userAgentData;
        return e != null && e.platform ? e.platform : navigator.platform;
    }
    function lA() {
        const e = navigator.userAgentData;
        return e && Array.isArray(e.brands) ? e.brands.map((t)=>{
            let { brand: n, version: r } = t;
            return n + "/" + r;
        }).join(" ") : navigator.userAgent;
    }
    function cA(e) {
        return e.mozInputSource === 0 && e.isTrusted ? !0 : uN() && e.pointerType ? e.type === "click" && e.buttons === 1 : e.detail === 0 && !e.pointerType;
    }
    function kS(e) {
        return vU() ? !1 : !uN() && e.width === 0 && e.height === 0 || uN() && e.width === 1 && e.height === 1 && e.pressure === 0 && e.detail === 0 && e.pointerType === "mouse" || e.width < 1 && e.height < 1 && e.pressure === 0 && e.detail === 0 && e.pointerType === "touch";
    }
    function uA() {
        return /apple/i.test(navigator.vendor);
    }
    function uN() {
        const e = /android/i;
        return e.test(ES()) || e.test(lA());
    }
    function yU() {
        return ES().toLowerCase().startsWith("mac") && !navigator.maxTouchPoints;
    }
    function vU() {
        return lA().includes("jsdom/");
    }
    function cf(e, t) {
        const n = [
            "mouse",
            "pen"
        ];
        return t || n.push("", void 0), n.includes(e);
    }
    function xU(e) {
        return "nativeEvent" in e;
    }
    function bU(e) {
        return e.matches("html,body");
    }
    function Zn(e) {
        return e?.ownerDocument || document;
    }
    function Gb(e, t) {
        if (t == null) return !1;
        if ("composedPath" in e) return e.composedPath().includes(t);
        const n = e;
        return n.target != null && t.contains(n.target);
    }
    function Bs(e) {
        return "composedPath" in e ? e.composedPath()[0] : e.target;
    }
    const wU = "input:not([type='hidden']):not([disabled]),[contenteditable]:not([contenteditable='false']),textarea:not([disabled])";
    function CS(e) {
        return jn(e) && e.matches(wU);
    }
    function vr(e) {
        e.preventDefault(), e.stopPropagation();
    }
    function dA(e) {
        return e ? e.getAttribute("role") === "combobox" && CS(e) : !1;
    }
    const zc = Math.min, ni = Math.max, ug = Math.round, hc = Math.floor, xo = (e)=>({
            x: e,
            y: e
        }), NU = {
        left: "right",
        right: "left",
        bottom: "top",
        top: "bottom"
    }, SU = {
        start: "end",
        end: "start"
    };
    function pC(e, t, n) {
        return ni(e, zc(t, n));
    }
    function $f(e, t) {
        return typeof e == "function" ? e(t) : e;
    }
    function la(e) {
        return e.split("-")[0];
    }
    function qf(e) {
        return e.split("-")[1];
    }
    function fA(e) {
        return e === "x" ? "y" : "x";
    }
    function pA(e) {
        return e === "y" ? "height" : "width";
    }
    function dl(e) {
        return [
            "top",
            "bottom"
        ].includes(la(e)) ? "y" : "x";
    }
    function hA(e) {
        return fA(dl(e));
    }
    function IU(e, t, n) {
        n === void 0 && (n = !1);
        const r = qf(e), i = hA(e), o = pA(i);
        let s = i === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
        return t.reference[o] > t.floating[o] && (s = dg(s)), [
            s,
            dg(s)
        ];
    }
    function _U(e) {
        const t = dg(e);
        return [
            dN(e),
            t,
            dN(t)
        ];
    }
    function dN(e) {
        return e.replace(/start|end/g, (t)=>SU[t]);
    }
    function EU(e, t, n) {
        const r = [
            "left",
            "right"
        ], i = [
            "right",
            "left"
        ], o = [
            "top",
            "bottom"
        ], s = [
            "bottom",
            "top"
        ];
        switch(e){
            case "top":
            case "bottom":
                return n ? t ? i : r : t ? r : i;
            case "left":
            case "right":
                return t ? o : s;
            default:
                return [];
        }
    }
    function kU(e, t, n, r) {
        const i = qf(e);
        let o = EU(la(e), n === "start", r);
        return i && (o = o.map((s)=>s + "-" + i), t && (o = o.concat(o.map(dN)))), o;
    }
    function dg(e) {
        return e.replace(/left|right|bottom|top/g, (t)=>NU[t]);
    }
    function CU(e) {
        return {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
            ...e
        };
    }
    function jU(e) {
        return typeof e != "number" ? CU(e) : {
            top: e,
            right: e,
            bottom: e,
            left: e
        };
    }
    function fg(e) {
        const { x: t, y: n, width: r, height: i } = e;
        return {
            width: r,
            height: i,
            top: n,
            left: t,
            right: t + r,
            bottom: n + i,
            x: t,
            y: n
        };
    }
    var RU = [
        "input:not([inert])",
        "select:not([inert])",
        "textarea:not([inert])",
        "a[href]:not([inert])",
        "button:not([inert])",
        "[tabindex]:not(slot):not([inert])",
        "audio[controls]:not([inert])",
        "video[controls]:not([inert])",
        '[contenteditable]:not([contenteditable="false"]):not([inert])',
        "details>summary:first-of-type:not([inert])",
        "details:not([inert])"
    ], pg = RU.join(","), mA = typeof Element > "u", Wc = mA ? function() {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector, hg = !mA && Element.prototype.getRootNode ? function(e) {
        var t;
        return e == null || (t = e.getRootNode) === null || t === void 0 ? void 0 : t.call(e);
    } : function(e) {
        return e?.ownerDocument;
    }, mg = function e(t, n) {
        var r;
        n === void 0 && (n = !0);
        var i = t == null || (r = t.getAttribute) === null || r === void 0 ? void 0 : r.call(t, "inert"), o = i === "" || i === "true", s = o || n && t && e(t.parentNode);
        return s;
    }, OU = function(t) {
        var n, r = t == null || (n = t.getAttribute) === null || n === void 0 ? void 0 : n.call(t, "contenteditable");
        return r === "" || r === "true";
    }, TU = function(t, n, r) {
        if (mg(t)) return [];
        var i = Array.prototype.slice.apply(t.querySelectorAll(pg));
        return n && Wc.call(t, pg) && i.unshift(t), i = i.filter(r), i;
    }, PU = function e(t, n, r) {
        for(var i = [], o = Array.from(t); o.length;){
            var s = o.shift();
            if (!mg(s, !1)) if (s.tagName === "SLOT") {
                var l = s.assignedElements(), u = l.length ? l : s.children, f = e(u, !0, r);
                r.flatten ? i.push.apply(i, f) : i.push({
                    scopeParent: s,
                    candidates: f
                });
            } else {
                var p = Wc.call(s, pg);
                p && r.filter(s) && (n || !t.includes(s)) && i.push(s);
                var m = s.shadowRoot || typeof r.getShadowRoot == "function" && r.getShadowRoot(s), g = !mg(m, !1) && (!r.shadowRootFilter || r.shadowRootFilter(s));
                if (m && g) {
                    var v = e(m === !0 ? s.children : m.children, !0, r);
                    r.flatten ? i.push.apply(i, v) : i.push({
                        scopeParent: s,
                        candidates: v
                    });
                } else o.unshift.apply(o, s.children);
            }
        }
        return i;
    }, gA = function(t) {
        return !isNaN(parseInt(t.getAttribute("tabindex"), 10));
    }, yA = function(t) {
        if (!t) throw new Error("No node provided");
        return t.tabIndex < 0 && (/^(AUDIO|VIDEO|DETAILS)$/.test(t.tagName) || OU(t)) && !gA(t) ? 0 : t.tabIndex;
    }, AU = function(t, n) {
        var r = yA(t);
        return r < 0 && n && !gA(t) ? 0 : r;
    }, FU = function(t, n) {
        return t.tabIndex === n.tabIndex ? t.documentOrder - n.documentOrder : t.tabIndex - n.tabIndex;
    }, vA = function(t) {
        return t.tagName === "INPUT";
    }, DU = function(t) {
        return vA(t) && t.type === "hidden";
    }, MU = function(t) {
        var n = t.tagName === "DETAILS" && Array.prototype.slice.apply(t.children).some(function(r) {
            return r.tagName === "SUMMARY";
        });
        return n;
    }, LU = function(t, n) {
        for(var r = 0; r < t.length; r++)if (t[r].checked && t[r].form === n) return t[r];
    }, $U = function(t) {
        if (!t.name) return !0;
        var n = t.form || hg(t), r = function(l) {
            return n.querySelectorAll('input[type="radio"][name="' + l + '"]');
        }, i;
        if (typeof window < "u" && typeof window.CSS < "u" && typeof window.CSS.escape == "function") i = r(window.CSS.escape(t.name));
        else try {
            i = r(t.name);
        } catch (s) {
            return console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s", s.message), !1;
        }
        var o = LU(i, t.form);
        return !o || o === t;
    }, qU = function(t) {
        return vA(t) && t.type === "radio";
    }, BU = function(t) {
        return qU(t) && !$U(t);
    }, zU = function(t) {
        var n, r = t && hg(t), i = (n = r) === null || n === void 0 ? void 0 : n.host, o = !1;
        if (r && r !== t) {
            var s, l, u;
            for(o = !!((s = i) !== null && s !== void 0 && (l = s.ownerDocument) !== null && l !== void 0 && l.contains(i) || t != null && (u = t.ownerDocument) !== null && u !== void 0 && u.contains(t)); !o && i;){
                var f, p, m;
                r = hg(i), i = (f = r) === null || f === void 0 ? void 0 : f.host, o = !!((p = i) !== null && p !== void 0 && (m = p.ownerDocument) !== null && m !== void 0 && m.contains(i));
            }
        }
        return o;
    }, hC = function(t) {
        var n = t.getBoundingClientRect(), r = n.width, i = n.height;
        return r === 0 && i === 0;
    }, WU = function(t, n) {
        var r = n.displayCheck, i = n.getShadowRoot;
        if (getComputedStyle(t).visibility === "hidden") return !0;
        var o = Wc.call(t, "details>summary:first-of-type"), s = o ? t.parentElement : t;
        if (Wc.call(s, "details:not([open]) *")) return !0;
        if (!r || r === "full" || r === "legacy-full") {
            if (typeof i == "function") {
                for(var l = t; t;){
                    var u = t.parentElement, f = hg(t);
                    if (u && !u.shadowRoot && i(u) === !0) return hC(t);
                    t.assignedSlot ? t = t.assignedSlot : !u && f !== t.ownerDocument ? t = f.host : t = u;
                }
                t = l;
            }
            if (zU(t)) return !t.getClientRects().length;
            if (r !== "legacy-full") return !0;
        } else if (r === "non-zero-area") return hC(t);
        return !1;
    }, VU = function(t) {
        if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(t.tagName)) for(var n = t.parentElement; n;){
            if (n.tagName === "FIELDSET" && n.disabled) {
                for(var r = 0; r < n.children.length; r++){
                    var i = n.children.item(r);
                    if (i.tagName === "LEGEND") return Wc.call(n, "fieldset[disabled] *") ? !0 : !i.contains(t);
                }
                return !0;
            }
            n = n.parentElement;
        }
        return !1;
    }, UU = function(t, n) {
        return !(n.disabled || mg(n) || DU(n) || WU(n, t) || MU(n) || VU(n));
    }, fN = function(t, n) {
        return !(BU(n) || yA(n) < 0 || !UU(t, n));
    }, HU = function(t) {
        var n = parseInt(t.getAttribute("tabindex"), 10);
        return !!(isNaN(n) || n >= 0);
    }, KU = function e(t) {
        var n = [], r = [];
        return t.forEach(function(i, o) {
            var s = !!i.scopeParent, l = s ? i.scopeParent : i, u = AU(l, s), f = s ? e(i.candidates) : l;
            u === 0 ? s ? n.push.apply(n, f) : n.push(l) : r.push({
                documentOrder: o,
                tabIndex: u,
                item: i,
                isScope: s,
                content: f
            });
        }), r.sort(FU).reduce(function(i, o) {
            return o.isScope ? i.push.apply(i, o.content) : i.push(o.content), i;
        }, []).concat(n);
    }, gy = function(t, n) {
        n = n || {};
        var r;
        return n.getShadowRoot ? r = PU([
            t
        ], n.includeContainer, {
            filter: fN.bind(null, n),
            flatten: !1,
            getShadowRoot: n.getShadowRoot,
            shadowRootFilter: HU
        }) : r = TU(t, n.includeContainer, fN.bind(null, n)), KU(r);
    }, GU = function(t, n) {
        if (n = n || {}, !t) throw new Error("No node provided");
        return Wc.call(t, pg) === !1 ? !1 : fN(n, t);
    };
    function mC(e, t, n) {
        let { reference: r, floating: i } = e;
        const o = dl(t), s = hA(t), l = pA(s), u = la(t), f = o === "y", p = r.x + r.width / 2 - i.width / 2, m = r.y + r.height / 2 - i.height / 2, g = r[l] / 2 - i[l] / 2;
        let v;
        switch(u){
            case "top":
                v = {
                    x: p,
                    y: r.y - i.height
                };
                break;
            case "bottom":
                v = {
                    x: p,
                    y: r.y + r.height
                };
                break;
            case "right":
                v = {
                    x: r.x + r.width,
                    y: m
                };
                break;
            case "left":
                v = {
                    x: r.x - i.width,
                    y: m
                };
                break;
            default:
                v = {
                    x: r.x,
                    y: r.y
                };
        }
        switch(qf(t)){
            case "start":
                v[s] -= g * (n && f ? -1 : 1);
                break;
            case "end":
                v[s] += g * (n && f ? -1 : 1);
                break;
        }
        return v;
    }
    const QU = async (e, t, n)=>{
        const { placement: r = "bottom", strategy: i = "absolute", middleware: o = [], platform: s } = n, l = o.filter(Boolean), u = await (s.isRTL == null ? void 0 : s.isRTL(t));
        let f = await s.getElementRects({
            reference: e,
            floating: t,
            strategy: i
        }), { x: p, y: m } = mC(f, r, u), g = r, v = {}, x = 0;
        for(let b = 0; b < l.length; b++){
            const { name: S, fn: N } = l[b], { x: _, y: I, data: C, reset: A } = await N({
                x: p,
                y: m,
                initialPlacement: r,
                placement: g,
                strategy: i,
                middlewareData: v,
                rects: f,
                platform: s,
                elements: {
                    reference: e,
                    floating: t
                }
            });
            p = _ ?? p, m = I ?? m, v = {
                ...v,
                [S]: {
                    ...v[S],
                    ...C
                }
            }, A && x <= 50 && (x++, typeof A == "object" && (A.placement && (g = A.placement), A.rects && (f = A.rects === !0 ? await s.getElementRects({
                reference: e,
                floating: t,
                strategy: i
            }) : A.rects), { x: p, y: m } = mC(f, g, u)), b = -1);
        }
        return {
            x: p,
            y: m,
            placement: g,
            strategy: i,
            middlewareData: v
        };
    };
    async function jS(e, t) {
        var n;
        t === void 0 && (t = {});
        const { x: r, y: i, platform: o, rects: s, elements: l, strategy: u } = e, { boundary: f = "clippingAncestors", rootBoundary: p = "viewport", elementContext: m = "floating", altBoundary: g = !1, padding: v = 0 } = $f(t, e), x = jU(v), S = l[g ? m === "floating" ? "reference" : "floating" : m], N = fg(await o.getClippingRect({
            element: (n = await (o.isElement == null ? void 0 : o.isElement(S))) == null || n ? S : S.contextElement || await (o.getDocumentElement == null ? void 0 : o.getDocumentElement(l.floating)),
            boundary: f,
            rootBoundary: p,
            strategy: u
        })), _ = m === "floating" ? {
            x: r,
            y: i,
            width: s.floating.width,
            height: s.floating.height
        } : s.reference, I = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(l.floating)), C = await (o.isElement == null ? void 0 : o.isElement(I)) ? await (o.getScale == null ? void 0 : o.getScale(I)) || {
            x: 1,
            y: 1
        } : {
            x: 1,
            y: 1
        }, A = fg(o.convertOffsetParentRelativeRectToViewportRelativeRect ? await o.convertOffsetParentRelativeRectToViewportRelativeRect({
            elements: l,
            rect: _,
            offsetParent: I,
            strategy: u
        }) : _);
        return {
            top: (N.top - A.top + x.top) / C.y,
            bottom: (A.bottom - N.bottom + x.bottom) / C.y,
            left: (N.left - A.left + x.left) / C.x,
            right: (A.right - N.right + x.right) / C.x
        };
    }
    const JU = function(e) {
        return e === void 0 && (e = {}), {
            name: "flip",
            options: e,
            async fn (t) {
                var n, r;
                const { placement: i, middlewareData: o, rects: s, initialPlacement: l, platform: u, elements: f } = t, { mainAxis: p = !0, crossAxis: m = !0, fallbackPlacements: g, fallbackStrategy: v = "bestFit", fallbackAxisSideDirection: x = "none", flipAlignment: b = !0, ...S } = $f(e, t);
                if ((n = o.arrow) != null && n.alignmentOffset) return {};
                const N = la(i), _ = dl(l), I = la(l) === l, C = await (u.isRTL == null ? void 0 : u.isRTL(f.floating)), A = g || (I || !b ? [
                    dg(l)
                ] : _U(l)), R = x !== "none";
                !g && R && A.push(...kU(l, b, x, C));
                const D = [
                    l,
                    ...A
                ], O = await jS(t, S), E = [];
                let F = ((r = o.flip) == null ? void 0 : r.overflows) || [];
                if (p && E.push(O[N]), m) {
                    const P = IU(i, s, C);
                    E.push(O[P[0]], O[P[1]]);
                }
                if (F = [
                    ...F,
                    {
                        placement: i,
                        overflows: E
                    }
                ], !E.every((P)=>P <= 0)) {
                    var j, M;
                    const P = (((j = o.flip) == null ? void 0 : j.index) || 0) + 1, V = D[P];
                    if (V) return {
                        data: {
                            index: P,
                            overflows: F
                        },
                        reset: {
                            placement: V
                        }
                    };
                    let z = (M = F.filter((Q)=>Q.overflows[0] <= 0).sort((Q, K)=>Q.overflows[1] - K.overflows[1])[0]) == null ? void 0 : M.placement;
                    if (!z) switch(v){
                        case "bestFit":
                            {
                                var L;
                                const Q = (L = F.filter((K)=>{
                                    if (R) {
                                        const H = dl(K.placement);
                                        return H === _ || H === "y";
                                    }
                                    return !0;
                                }).map((K)=>[
                                        K.placement,
                                        K.overflows.filter((H)=>H > 0).reduce((H, G)=>H + G, 0)
                                    ]).sort((K, H)=>K[1] - H[1])[0]) == null ? void 0 : L[0];
                                Q && (z = Q);
                                break;
                            }
                        case "initialPlacement":
                            z = l;
                            break;
                    }
                    if (i !== z) return {
                        reset: {
                            placement: z
                        }
                    };
                }
                return {};
            }
        };
    };
    async function ZU(e, t) {
        const { placement: n, platform: r, elements: i } = e, o = await (r.isRTL == null ? void 0 : r.isRTL(i.floating)), s = la(n), l = qf(n), u = dl(n) === "y", f = [
            "left",
            "top"
        ].includes(s) ? -1 : 1, p = o && u ? -1 : 1, m = $f(t, e);
        let { mainAxis: g, crossAxis: v, alignmentAxis: x } = typeof m == "number" ? {
            mainAxis: m,
            crossAxis: 0,
            alignmentAxis: null
        } : {
            mainAxis: m.mainAxis || 0,
            crossAxis: m.crossAxis || 0,
            alignmentAxis: m.alignmentAxis
        };
        return l && typeof x == "number" && (v = l === "end" ? x * -1 : x), u ? {
            x: v * p,
            y: g * f
        } : {
            x: g * f,
            y: v * p
        };
    }
    const YU = function(e) {
        return e === void 0 && (e = 0), {
            name: "offset",
            options: e,
            async fn (t) {
                var n, r;
                const { x: i, y: o, placement: s, middlewareData: l } = t, u = await ZU(t, e);
                return s === ((n = l.offset) == null ? void 0 : n.placement) && (r = l.arrow) != null && r.alignmentOffset ? {} : {
                    x: i + u.x,
                    y: o + u.y,
                    data: {
                        ...u,
                        placement: s
                    }
                };
            }
        };
    }, XU = function(e) {
        return e === void 0 && (e = {}), {
            name: "shift",
            options: e,
            async fn (t) {
                const { x: n, y: r, placement: i } = t, { mainAxis: o = !0, crossAxis: s = !1, limiter: l = {
                    fn: (S)=>{
                        let { x: N, y: _ } = S;
                        return {
                            x: N,
                            y: _
                        };
                    }
                }, ...u } = $f(e, t), f = {
                    x: n,
                    y: r
                }, p = await jS(t, u), m = dl(la(i)), g = fA(m);
                let v = f[g], x = f[m];
                if (o) {
                    const S = g === "y" ? "top" : "left", N = g === "y" ? "bottom" : "right", _ = v + p[S], I = v - p[N];
                    v = pC(_, v, I);
                }
                if (s) {
                    const S = m === "y" ? "top" : "left", N = m === "y" ? "bottom" : "right", _ = x + p[S], I = x - p[N];
                    x = pC(_, x, I);
                }
                const b = l.fn({
                    ...t,
                    [g]: v,
                    [m]: x
                });
                return {
                    ...b,
                    data: {
                        x: b.x - n,
                        y: b.y - r,
                        enabled: {
                            [g]: o,
                            [m]: s
                        }
                    }
                };
            }
        };
    }, e6 = function(e) {
        return e === void 0 && (e = {}), {
            name: "size",
            options: e,
            async fn (t) {
                var n, r;
                const { placement: i, rects: o, platform: s, elements: l } = t, { apply: u = ()=>{}, ...f } = $f(e, t), p = await jS(t, f), m = la(i), g = qf(i), v = dl(i) === "y", { width: x, height: b } = o.floating;
                let S, N;
                m === "top" || m === "bottom" ? (S = m, N = g === (await (s.isRTL == null ? void 0 : s.isRTL(l.floating)) ? "start" : "end") ? "left" : "right") : (N = m, S = g === "end" ? "top" : "bottom");
                const _ = b - p.top - p.bottom, I = x - p.left - p.right, C = zc(b - p[S], _), A = zc(x - p[N], I), R = !t.middlewareData.shift;
                let D = C, O = A;
                if ((n = t.middlewareData.shift) != null && n.enabled.x && (O = I), (r = t.middlewareData.shift) != null && r.enabled.y && (D = _), R && !g) {
                    const F = ni(p.left, 0), j = ni(p.right, 0), M = ni(p.top, 0), L = ni(p.bottom, 0);
                    v ? O = x - 2 * (F !== 0 || j !== 0 ? F + j : ni(p.left, p.right)) : D = b - 2 * (M !== 0 || L !== 0 ? M + L : ni(p.top, p.bottom));
                }
                await u({
                    ...t,
                    availableWidth: O,
                    availableHeight: D
                });
                const E = await s.getDimensions(l.floating);
                return x !== E.width || b !== E.height ? {
                    reset: {
                        rects: !0
                    }
                } : {};
            }
        };
    };
    function xA(e) {
        const t = Ri(e);
        let n = parseFloat(t.width) || 0, r = parseFloat(t.height) || 0;
        const i = jn(e), o = i ? e.offsetWidth : n, s = i ? e.offsetHeight : r, l = ug(n) !== o || ug(r) !== s;
        return l && (n = o, r = s), {
            width: n,
            height: r,
            $: l
        };
    }
    function RS(e) {
        return qt(e) ? e : e.contextElement;
    }
    function Oc(e) {
        const t = RS(e);
        if (!jn(t)) return xo(1);
        const n = t.getBoundingClientRect(), { width: r, height: i, $: o } = xA(t);
        let s = (o ? ug(n.width) : n.width) / r, l = (o ? ug(n.height) : n.height) / i;
        return (!s || !Number.isFinite(s)) && (s = 1), (!l || !Number.isFinite(l)) && (l = 1), {
            x: s,
            y: l
        };
    }
    const t6 = xo(0);
    function bA(e) {
        const t = zr(e);
        return !hy() || !t.visualViewport ? t6 : {
            x: t.visualViewport.offsetLeft,
            y: t.visualViewport.offsetTop
        };
    }
    function n6(e, t, n) {
        return t === void 0 && (t = !1), !n || t && n !== zr(e) ? !1 : t;
    }
    function fl(e, t, n, r) {
        t === void 0 && (t = !1), n === void 0 && (n = !1);
        const i = e.getBoundingClientRect(), o = RS(e);
        let s = xo(1);
        t && (r ? qt(r) && (s = Oc(r)) : s = Oc(e));
        const l = n6(o, n, r) ? bA(o) : xo(0);
        let u = (i.left + l.x) / s.x, f = (i.top + l.y) / s.y, p = i.width / s.x, m = i.height / s.y;
        if (o) {
            const g = zr(o), v = r && qt(r) ? zr(r) : r;
            let x = g, b = cN(x);
            for(; b && r && v !== x;){
                const S = Oc(b), N = b.getBoundingClientRect(), _ = Ri(b), I = N.left + (b.clientLeft + parseFloat(_.paddingLeft)) * S.x, C = N.top + (b.clientTop + parseFloat(_.paddingTop)) * S.y;
                u *= S.x, f *= S.y, p *= S.x, m *= S.y, u += I, f += C, x = zr(b), b = cN(x);
            }
        }
        return fg({
            width: p,
            height: m,
            x: u,
            y: f
        });
    }
    function OS(e, t) {
        const n = my(e).scrollLeft;
        return t ? t.left + n : fl(Eo(e)).left + n;
    }
    function wA(e, t, n) {
        n === void 0 && (n = !1);
        const r = e.getBoundingClientRect(), i = r.left + t.scrollLeft - (n ? 0 : OS(e, r)), o = r.top + t.scrollTop;
        return {
            x: i,
            y: o
        };
    }
    function r6(e) {
        let { elements: t, rect: n, offsetParent: r, strategy: i } = e;
        const o = i === "fixed", s = Eo(r), l = t ? py(t.floating) : !1;
        if (r === s || l && o) return n;
        let u = {
            scrollLeft: 0,
            scrollTop: 0
        }, f = xo(1);
        const p = xo(0), m = jn(r);
        if ((m || !m && !o) && ((fa(r) !== "body" || Lf(s)) && (u = my(r)), jn(r))) {
            const v = fl(r);
            f = Oc(r), p.x = v.x + r.clientLeft, p.y = v.y + r.clientTop;
        }
        const g = s && !m && !o ? wA(s, u, !0) : xo(0);
        return {
            width: n.width * f.x,
            height: n.height * f.y,
            x: n.x * f.x - u.scrollLeft * f.x + p.x + g.x,
            y: n.y * f.y - u.scrollTop * f.y + p.y + g.y
        };
    }
    function i6(e) {
        return Array.from(e.getClientRects());
    }
    function o6(e) {
        const t = Eo(e), n = my(e), r = e.ownerDocument.body, i = ni(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth), o = ni(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);
        let s = -n.scrollLeft + OS(e);
        const l = -n.scrollTop;
        return Ri(r).direction === "rtl" && (s += ni(t.clientWidth, r.clientWidth) - i), {
            width: i,
            height: o,
            x: s,
            y: l
        };
    }
    function s6(e, t) {
        const n = zr(e), r = Eo(e), i = n.visualViewport;
        let o = r.clientWidth, s = r.clientHeight, l = 0, u = 0;
        if (i) {
            o = i.width, s = i.height;
            const f = hy();
            (!f || f && t === "fixed") && (l = i.offsetLeft, u = i.offsetTop);
        }
        return {
            width: o,
            height: s,
            x: l,
            y: u
        };
    }
    function a6(e, t) {
        const n = fl(e, !0, t === "fixed"), r = n.top + e.clientTop, i = n.left + e.clientLeft, o = jn(e) ? Oc(e) : xo(1), s = e.clientWidth * o.x, l = e.clientHeight * o.y, u = i * o.x, f = r * o.y;
        return {
            width: s,
            height: l,
            x: u,
            y: f
        };
    }
    function gC(e, t, n) {
        let r;
        if (t === "viewport") r = s6(e, n);
        else if (t === "document") r = o6(Eo(e));
        else if (qt(t)) r = a6(t, n);
        else {
            const i = bA(e);
            r = {
                x: t.x - i.x,
                y: t.y - i.y,
                width: t.width,
                height: t.height
            };
        }
        return fg(r);
    }
    function NA(e, t) {
        const n = ns(e);
        return n === t || !qt(n) || Go(n) ? !1 : Ri(n).position === "fixed" || NA(n, t);
    }
    function l6(e, t) {
        const n = t.get(e);
        if (n) return n;
        let r = Qs(e, [], !1).filter((l)=>qt(l) && fa(l) !== "body"), i = null;
        const o = Ri(e).position === "fixed";
        let s = o ? ns(e) : e;
        for(; qt(s) && !Go(s);){
            const l = Ri(s), u = _S(s);
            !u && l.position === "fixed" && (i = null), (o ? !u && !i : !u && l.position === "static" && !!i && [
                "absolute",
                "fixed"
            ].includes(i.position) || Lf(s) && !u && NA(e, s)) ? r = r.filter((p)=>p !== s) : i = l, s = ns(s);
        }
        return t.set(e, r), r;
    }
    function c6(e) {
        let { element: t, boundary: n, rootBoundary: r, strategy: i } = e;
        const s = [
            ...n === "clippingAncestors" ? py(t) ? [] : l6(t, this._c) : [].concat(n),
            r
        ], l = s[0], u = s.reduce((f, p)=>{
            const m = gC(t, p, i);
            return f.top = ni(m.top, f.top), f.right = zc(m.right, f.right), f.bottom = zc(m.bottom, f.bottom), f.left = ni(m.left, f.left), f;
        }, gC(t, l, i));
        return {
            width: u.right - u.left,
            height: u.bottom - u.top,
            x: u.left,
            y: u.top
        };
    }
    function u6(e) {
        const { width: t, height: n } = xA(e);
        return {
            width: t,
            height: n
        };
    }
    function d6(e, t, n) {
        const r = jn(t), i = Eo(t), o = n === "fixed", s = fl(e, !0, o, t);
        let l = {
            scrollLeft: 0,
            scrollTop: 0
        };
        const u = xo(0);
        if (r || !r && !o) if ((fa(t) !== "body" || Lf(i)) && (l = my(t)), r) {
            const g = fl(t, !0, o, t);
            u.x = g.x + t.clientLeft, u.y = g.y + t.clientTop;
        } else i && (u.x = OS(i));
        const f = i && !r && !o ? wA(i, l) : xo(0), p = s.left + l.scrollLeft - u.x - f.x, m = s.top + l.scrollTop - u.y - f.y;
        return {
            x: p,
            y: m,
            width: s.width,
            height: s.height
        };
    }
    function Qb(e) {
        return Ri(e).position === "static";
    }
    function yC(e, t) {
        if (!jn(e) || Ri(e).position === "fixed") return null;
        if (t) return t(e);
        let n = e.offsetParent;
        return Eo(e) === n && (n = n.ownerDocument.body), n;
    }
    function SA(e, t) {
        const n = zr(e);
        if (py(e)) return n;
        if (!jn(e)) {
            let i = ns(e);
            for(; i && !Go(i);){
                if (qt(i) && !Qb(i)) return i;
                i = ns(i);
            }
            return n;
        }
        let r = yC(e, t);
        for(; r && mU(r) && Qb(r);)r = yC(r, t);
        return r && Go(r) && Qb(r) && !_S(r) ? n : r || gU(e) || n;
    }
    const f6 = async function(e) {
        const t = this.getOffsetParent || SA, n = this.getDimensions, r = await n(e.floating);
        return {
            reference: d6(e.reference, await t(e.floating), e.strategy),
            floating: {
                x: 0,
                y: 0,
                width: r.width,
                height: r.height
            }
        };
    };
    function p6(e) {
        return Ri(e).direction === "rtl";
    }
    const h6 = {
        convertOffsetParentRelativeRectToViewportRelativeRect: r6,
        getDocumentElement: Eo,
        getClippingRect: c6,
        getOffsetParent: SA,
        getElementRects: f6,
        getClientRects: i6,
        getDimensions: u6,
        getScale: Oc,
        isElement: qt,
        isRTL: p6
    };
    function IA(e, t) {
        return e.x === t.x && e.y === t.y && e.width === t.width && e.height === t.height;
    }
    function m6(e, t) {
        let n = null, r;
        const i = Eo(e);
        function o() {
            var l;
            clearTimeout(r), (l = n) == null || l.disconnect(), n = null;
        }
        function s(l, u) {
            l === void 0 && (l = !1), u === void 0 && (u = 1), o();
            const f = e.getBoundingClientRect(), { left: p, top: m, width: g, height: v } = f;
            if (l || t(), !g || !v) return;
            const x = hc(m), b = hc(i.clientWidth - (p + g)), S = hc(i.clientHeight - (m + v)), N = hc(p), I = {
                rootMargin: -x + "px " + -b + "px " + -S + "px " + -N + "px",
                threshold: ni(0, zc(1, u)) || 1
            };
            let C = !0;
            function A(R) {
                const D = R[0].intersectionRatio;
                if (D !== u) {
                    if (!C) return s();
                    D ? s(!1, D) : r = setTimeout(()=>{
                        s(!1, 1e-7);
                    }, 1e3);
                }
                D === 1 && !IA(f, e.getBoundingClientRect()) && s(), C = !1;
            }
            try {
                n = new IntersectionObserver(A, {
                    ...I,
                    root: i.ownerDocument
                });
            } catch  {
                n = new IntersectionObserver(A, I);
            }
            n.observe(e);
        }
        return s(!0), o;
    }
    function _A(e, t, n, r) {
        r === void 0 && (r = {});
        const { ancestorScroll: i = !0, ancestorResize: o = !0, elementResize: s = typeof ResizeObserver == "function", layoutShift: l = typeof IntersectionObserver == "function", animationFrame: u = !1 } = r, f = RS(e), p = i || o ? [
            ...f ? Qs(f) : [],
            ...Qs(t)
        ] : [];
        p.forEach((N)=>{
            i && N.addEventListener("scroll", n, {
                passive: !0
            }), o && N.addEventListener("resize", n);
        });
        const m = f && l ? m6(f, n) : null;
        let g = -1, v = null;
        s && (v = new ResizeObserver((N)=>{
            let [_] = N;
            _ && _.target === f && v && (v.unobserve(t), cancelAnimationFrame(g), g = requestAnimationFrame(()=>{
                var I;
                (I = v) == null || I.observe(t);
            })), n();
        }), f && !u && v.observe(f), v.observe(t));
        let x, b = u ? fl(e) : null;
        u && S();
        function S() {
            const N = fl(e);
            b && !IA(b, N) && n(), b = N, x = requestAnimationFrame(S);
        }
        return n(), ()=>{
            var N;
            p.forEach((_)=>{
                i && _.removeEventListener("scroll", n), o && _.removeEventListener("resize", n);
            }), m?.(), (N = v) == null || N.disconnect(), v = null, u && cancelAnimationFrame(x);
        };
    }
    const g6 = YU, y6 = XU, v6 = JU, x6 = e6, b6 = (e, t, n)=>{
        const r = new Map, i = {
            platform: h6,
            ...n
        }, o = {
            ...i.platform,
            _c: r
        };
        return QU(e, t, {
            ...i,
            platform: o
        });
    };
    var cm = typeof document < "u" ? $.useLayoutEffect : $.useEffect;
    function gg(e, t) {
        if (e === t) return !0;
        if (typeof e != typeof t) return !1;
        if (typeof e == "function" && e.toString() === t.toString()) return !0;
        let n, r, i;
        if (e && t && typeof e == "object") {
            if (Array.isArray(e)) {
                if (n = e.length, n !== t.length) return !1;
                for(r = n; r-- !== 0;)if (!gg(e[r], t[r])) return !1;
                return !0;
            }
            if (i = Object.keys(e), n = i.length, n !== Object.keys(t).length) return !1;
            for(r = n; r-- !== 0;)if (!{}.hasOwnProperty.call(t, i[r])) return !1;
            for(r = n; r-- !== 0;){
                const o = i[r];
                if (!(o === "_owner" && e.$$typeof) && !gg(e[o], t[o])) return !1;
            }
            return !0;
        }
        return e !== e && t !== t;
    }
    function EA(e) {
        return typeof window > "u" ? 1 : (e.ownerDocument.defaultView || window).devicePixelRatio || 1;
    }
    function vC(e, t) {
        const n = EA(e);
        return Math.round(t * n) / n;
    }
    function Jb(e) {
        const t = $.useRef(e);
        return cm(()=>{
            t.current = e;
        }), t;
    }
    function w6(e) {
        e === void 0 && (e = {});
        const { placement: t = "bottom", strategy: n = "absolute", middleware: r = [], platform: i, elements: { reference: o, floating: s } = {}, transform: l = !0, whileElementsMounted: u, open: f } = e, [p, m] = $.useState({
            x: 0,
            y: 0,
            strategy: n,
            placement: t,
            middlewareData: {},
            isPositioned: !1
        }), [g, v] = $.useState(r);
        gg(g, r) || v(r);
        const [x, b] = $.useState(null), [S, N] = $.useState(null), _ = $.useCallback((K)=>{
            K !== R.current && (R.current = K, b(K));
        }, []), I = $.useCallback((K)=>{
            K !== D.current && (D.current = K, N(K));
        }, []), C = o || x, A = s || S, R = $.useRef(null), D = $.useRef(null), O = $.useRef(p), E = u != null, F = Jb(u), j = Jb(i), M = Jb(f), L = $.useCallback(()=>{
            if (!R.current || !D.current) return;
            const K = {
                placement: t,
                strategy: n,
                middleware: g
            };
            j.current && (K.platform = j.current), b6(R.current, D.current, K).then((H)=>{
                const G = {
                    ...H,
                    isPositioned: M.current !== !1
                };
                P.current && !gg(O.current, G) && (O.current = G, Qg.flushSync(()=>{
                    m(G);
                }));
            });
        }, [
            g,
            t,
            n,
            j,
            M
        ]);
        cm(()=>{
            f === !1 && O.current.isPositioned && (O.current.isPositioned = !1, m((K)=>({
                    ...K,
                    isPositioned: !1
                })));
        }, [
            f
        ]);
        const P = $.useRef(!1);
        cm(()=>(P.current = !0, ()=>{
                P.current = !1;
            }), []), cm(()=>{
            if (C && (R.current = C), A && (D.current = A), C && A) {
                if (F.current) return F.current(C, A, L);
                L();
            }
        }, [
            C,
            A,
            L,
            F,
            E
        ]);
        const V = $.useMemo(()=>({
                reference: R,
                floating: D,
                setReference: _,
                setFloating: I
            }), [
            _,
            I
        ]), z = $.useMemo(()=>({
                reference: C,
                floating: A
            }), [
            C,
            A
        ]), Q = $.useMemo(()=>{
            const K = {
                position: n,
                left: 0,
                top: 0
            };
            if (!z.floating) return K;
            const H = vC(z.floating, p.x), G = vC(z.floating, p.y);
            return l ? {
                ...K,
                transform: "translate(" + H + "px, " + G + "px)",
                ...EA(z.floating) >= 1.5 && {
                    willChange: "transform"
                }
            } : {
                position: n,
                left: H,
                top: G
            };
        }, [
            n,
            l,
            z.floating,
            p.x,
            p.y
        ]);
        return $.useMemo(()=>({
                ...p,
                update: L,
                refs: V,
                elements: z,
                floatingStyles: Q
            }), [
            p,
            L,
            V,
            z,
            Q
        ]);
    }
    const kA = (e, t)=>({
            ...g6(e),
            options: [
                e,
                t
            ]
        }), N6 = (e, t)=>({
            ...y6(e),
            options: [
                e,
                t
            ]
        }), CA = (e, t)=>({
            ...v6(e),
            options: [
                e,
                t
            ]
        }), S6 = (e, t)=>({
            ...x6(e),
            options: [
                e,
                t
            ]
        });
    function xC(e) {
        return $.useMemo(()=>e.every((t)=>t == null) ? null : (t)=>{
                e.forEach((n)=>{
                    typeof n == "function" ? n(t) : n != null && (n.current = t);
                });
            }, e);
    }
    const jA = {
        ...j$
    }, I6 = jA.useInsertionEffect, _6 = I6 || ((e)=>e());
    function wr(e) {
        const t = $.useRef(()=>{});
        return _6(()=>{
            t.current = e;
        }), $.useCallback(function() {
            for(var n = arguments.length, r = new Array(n), i = 0; i < n; i++)r[i] = arguments[i];
            return t.current == null ? void 0 : t.current(...r);
        }, []);
    }
    const TS = "ArrowUp", Bf = "ArrowDown", Js = "ArrowLeft", Zs = "ArrowRight";
    function Rh(e, t, n) {
        return Math.floor(e / t) !== n;
    }
    function Od(e, t) {
        return t < 0 || t >= e.current.length;
    }
    function Zb(e, t) {
        return or(e, {
            disabledIndices: t
        });
    }
    function bC(e, t) {
        return or(e, {
            decrement: !0,
            startingIndex: e.current.length,
            disabledIndices: t
        });
    }
    function or(e, t) {
        let { startingIndex: n = -1, decrement: r = !1, disabledIndices: i, amount: o = 1 } = t === void 0 ? {} : t;
        const s = e.current;
        let l = n;
        do l += r ? -o : o;
        while (l >= 0 && l <= s.length - 1 && um(s, l, i));
        return l;
    }
    function E6(e, t) {
        let { event: n, orientation: r, loop: i, rtl: o, cols: s, disabledIndices: l, minIndex: u, maxIndex: f, prevIndex: p, stopEvent: m = !1 } = t, g = p;
        if (n.key === TS) {
            if (m && vr(n), p === -1) g = f;
            else if (g = or(e, {
                startingIndex: g,
                amount: s,
                decrement: !0,
                disabledIndices: l
            }), i && (p - s < u || g < 0)) {
                const v = p % s, x = f % s, b = f - (x - v);
                x === v ? g = f : g = x > v ? b : b - s;
            }
            Od(e, g) && (g = p);
        }
        if (n.key === Bf && (m && vr(n), p === -1 ? g = u : (g = or(e, {
            startingIndex: p,
            amount: s,
            disabledIndices: l
        }), i && p + s > f && (g = or(e, {
            startingIndex: p % s - s,
            amount: s,
            disabledIndices: l
        }))), Od(e, g) && (g = p)), r === "both") {
            const v = hc(p / s);
            n.key === (o ? Js : Zs) && (m && vr(n), p % s !== s - 1 ? (g = or(e, {
                startingIndex: p,
                disabledIndices: l
            }), i && Rh(g, s, v) && (g = or(e, {
                startingIndex: p - p % s - 1,
                disabledIndices: l
            }))) : i && (g = or(e, {
                startingIndex: p - p % s - 1,
                disabledIndices: l
            })), Rh(g, s, v) && (g = p)), n.key === (o ? Zs : Js) && (m && vr(n), p % s !== 0 ? (g = or(e, {
                startingIndex: p,
                decrement: !0,
                disabledIndices: l
            }), i && Rh(g, s, v) && (g = or(e, {
                startingIndex: p + (s - p % s),
                decrement: !0,
                disabledIndices: l
            }))) : i && (g = or(e, {
                startingIndex: p + (s - p % s),
                decrement: !0,
                disabledIndices: l
            })), Rh(g, s, v) && (g = p));
            const x = hc(f / s) === v;
            Od(e, g) && (i && x ? g = n.key === (o ? Zs : Js) ? f : or(e, {
                startingIndex: p - p % s - 1,
                disabledIndices: l
            }) : g = p);
        }
        return g;
    }
    function k6(e, t, n) {
        const r = [];
        let i = 0;
        return e.forEach((o, s)=>{
            let { width: l, height: u } = o, f = !1;
            for(n && (i = 0); !f;){
                const p = [];
                for(let m = 0; m < l; m++)for(let g = 0; g < u; g++)p.push(i + m + g * t);
                i % t + l <= t && p.every((m)=>r[m] == null) ? (p.forEach((m)=>{
                    r[m] = s;
                }), f = !0) : i++;
            }
        }), [
            ...r
        ];
    }
    function C6(e, t, n, r, i) {
        if (e === -1) return -1;
        const o = n.indexOf(e), s = t[e];
        switch(i){
            case "tl":
                return o;
            case "tr":
                return s ? o + s.width - 1 : o;
            case "bl":
                return s ? o + (s.height - 1) * r : o;
            case "br":
                return n.lastIndexOf(e);
        }
    }
    function j6(e, t) {
        return t.flatMap((n, r)=>e.includes(n) ? [
                r
            ] : []);
    }
    function um(e, t, n) {
        if (n) return n.includes(t);
        const r = e[t];
        return r == null || r.hasAttribute("disabled") || r.getAttribute("aria-disabled") === "true";
    }
    var Kt = typeof document < "u" ? $.useLayoutEffect : $.useEffect;
    let wC = !1, R6 = 0;
    const NC = ()=>"floating-ui-" + Math.random().toString(36).slice(2, 6) + R6++;
    function O6() {
        const [e, t] = $.useState(()=>wC ? NC() : void 0);
        return Kt(()=>{
            e == null && t(NC());
        }, []), $.useEffect(()=>{
            wC = !0;
        }, []), e;
    }
    const T6 = jA.useId, PS = T6 || O6;
    function RA() {
        const e = new Map;
        return {
            emit (t, n) {
                var r;
                (r = e.get(t)) == null || r.forEach((i)=>i(n));
            },
            on (t, n) {
                e.set(t, [
                    ...e.get(t) || [],
                    n
                ]);
            },
            off (t, n) {
                var r;
                e.set(t, ((r = e.get(t)) == null ? void 0 : r.filter((i)=>i !== n)) || []);
            }
        };
    }
    const OA = $.createContext(null), TA = $.createContext(null), zf = ()=>{
        var e;
        return ((e = $.useContext(OA)) == null ? void 0 : e.id) || null;
    }, au = ()=>$.useContext(TA);
    function P6(e) {
        const t = PS(), n = au(), i = zf();
        return Kt(()=>{
            if (!t) return;
            const o = {
                id: t,
                parentId: i
            };
            return n?.addNode(o), ()=>{
                n?.removeNode(o);
            };
        }, [
            n,
            t,
            i
        ]), t;
    }
    function A6(e) {
        const { children: t, id: n } = e, r = zf();
        return d.jsx(OA.Provider, {
            value: $.useMemo(()=>({
                    id: n,
                    parentId: r
                }), [
                n,
                r
            ]),
            children: t
        });
    }
    function F6(e) {
        const { children: t } = e, n = $.useRef([]), r = $.useCallback((s)=>{
            n.current = [
                ...n.current,
                s
            ];
        }, []), i = $.useCallback((s)=>{
            n.current = n.current.filter((l)=>l !== s);
        }, []), o = $.useState(()=>RA())[0];
        return d.jsx(TA.Provider, {
            value: $.useMemo(()=>({
                    nodesRef: n,
                    addNode: r,
                    removeNode: i,
                    events: o
                }), [
                r,
                i,
                o
            ]),
            children: t
        });
    }
    function pl(e) {
        return "data-floating-ui-" + e;
    }
    function Nr(e) {
        const t = $.useRef(e);
        return Kt(()=>{
            t.current = e;
        }), t;
    }
    const SC = pl("safe-polygon");
    function Yb(e, t, n) {
        return n && !cf(n) ? 0 : typeof e == "number" ? e : e?.[t];
    }
    function D6(e, t) {
        t === void 0 && (t = {});
        const { open: n, onOpenChange: r, dataRef: i, events: o, elements: s } = e, { enabled: l = !0, delay: u = 0, handleClose: f = null, mouseOnly: p = !1, restMs: m = 0, move: g = !0 } = t, v = au(), x = zf(), b = Nr(f), S = Nr(u), N = Nr(n), _ = $.useRef(), I = $.useRef(-1), C = $.useRef(), A = $.useRef(-1), R = $.useRef(!0), D = $.useRef(!1), O = $.useRef(()=>{}), E = $.useRef(!1), F = $.useCallback(()=>{
            var Q;
            const K = (Q = i.current.openEvent) == null ? void 0 : Q.type;
            return K?.includes("mouse") && K !== "mousedown";
        }, [
            i
        ]);
        $.useEffect(()=>{
            if (!l) return;
            function Q(K) {
                let { open: H } = K;
                H || (clearTimeout(I.current), clearTimeout(A.current), R.current = !0, E.current = !1);
            }
            return o.on("openchange", Q), ()=>{
                o.off("openchange", Q);
            };
        }, [
            l,
            o
        ]), $.useEffect(()=>{
            if (!l || !b.current || !n) return;
            function Q(H) {
                F() && r(!1, H, "hover");
            }
            const K = Zn(s.floating).documentElement;
            return K.addEventListener("mouseleave", Q), ()=>{
                K.removeEventListener("mouseleave", Q);
            };
        }, [
            s.floating,
            n,
            r,
            l,
            b,
            F
        ]);
        const j = $.useCallback(function(Q, K, H) {
            K === void 0 && (K = !0), H === void 0 && (H = "hover");
            const G = Yb(S.current, "close", _.current);
            G && !C.current ? (clearTimeout(I.current), I.current = window.setTimeout(()=>r(!1, Q, H), G)) : K && (clearTimeout(I.current), r(!1, Q, H));
        }, [
            S,
            r
        ]), M = wr(()=>{
            O.current(), C.current = void 0;
        }), L = wr(()=>{
            if (D.current) {
                const Q = Zn(s.floating).body;
                Q.style.pointerEvents = "", Q.removeAttribute(SC), D.current = !1;
            }
        }), P = wr(()=>i.current.openEvent ? [
                "click",
                "mousedown"
            ].includes(i.current.openEvent.type) : !1);
        $.useEffect(()=>{
            if (!l) return;
            function Q(U) {
                if (clearTimeout(I.current), R.current = !1, p && !cf(_.current) || m > 0 && !Yb(S.current, "open")) return;
                const Z = Yb(S.current, "open", _.current);
                Z ? I.current = window.setTimeout(()=>{
                    N.current || r(!0, U, "hover");
                }, Z) : n || r(!0, U, "hover");
            }
            function K(U) {
                if (P()) return;
                O.current();
                const Z = Zn(s.floating);
                if (clearTimeout(A.current), E.current = !1, b.current && i.current.floatingContext) {
                    n || clearTimeout(I.current), C.current = b.current({
                        ...i.current.floatingContext,
                        tree: v,
                        x: U.clientX,
                        y: U.clientY,
                        onClose () {
                            L(), M(), P() || j(U, !0, "safe-polygon");
                        }
                    });
                    const X = C.current;
                    Z.addEventListener("mousemove", X), O.current = ()=>{
                        Z.removeEventListener("mousemove", X);
                    };
                    return;
                }
                (_.current === "touch" ? !Jn(s.floating, U.relatedTarget) : !0) && j(U);
            }
            function H(U) {
                P() || i.current.floatingContext && (b.current == null || b.current({
                    ...i.current.floatingContext,
                    tree: v,
                    x: U.clientX,
                    y: U.clientY,
                    onClose () {
                        L(), M(), P() || j(U);
                    }
                })(U));
            }
            if (qt(s.domReference)) {
                var G;
                const U = s.domReference;
                return n && U.addEventListener("mouseleave", H), (G = s.floating) == null || G.addEventListener("mouseleave", H), g && U.addEventListener("mousemove", Q, {
                    once: !0
                }), U.addEventListener("mouseenter", Q), U.addEventListener("mouseleave", K), ()=>{
                    var Z;
                    n && U.removeEventListener("mouseleave", H), (Z = s.floating) == null || Z.removeEventListener("mouseleave", H), g && U.removeEventListener("mousemove", Q), U.removeEventListener("mouseenter", Q), U.removeEventListener("mouseleave", K);
                };
            }
        }, [
            s,
            l,
            e,
            p,
            m,
            g,
            j,
            M,
            L,
            r,
            n,
            N,
            v,
            S,
            b,
            i,
            P
        ]), Kt(()=>{
            var Q;
            if (l && n && (Q = b.current) != null && Q.__options.blockPointerEvents && F()) {
                D.current = !0;
                const H = s.floating;
                if (qt(s.domReference) && H) {
                    var K;
                    const G = Zn(s.floating).body;
                    G.setAttribute(SC, "");
                    const U = s.domReference, Z = v == null || (K = v.nodesRef.current.find((J)=>J.id === x)) == null || (K = K.context) == null ? void 0 : K.elements.floating;
                    return Z && (Z.style.pointerEvents = ""), G.style.pointerEvents = "none", U.style.pointerEvents = "auto", H.style.pointerEvents = "auto", ()=>{
                        G.style.pointerEvents = "", U.style.pointerEvents = "", H.style.pointerEvents = "";
                    };
                }
            }
        }, [
            l,
            n,
            x,
            s,
            v,
            b,
            F
        ]), Kt(()=>{
            n || (_.current = void 0, E.current = !1, M(), L());
        }, [
            n,
            M,
            L
        ]), $.useEffect(()=>()=>{
                M(), clearTimeout(I.current), clearTimeout(A.current), L();
            }, [
            l,
            s.domReference,
            M,
            L
        ]);
        const V = $.useMemo(()=>{
            function Q(K) {
                _.current = K.pointerType;
            }
            return {
                onPointerDown: Q,
                onPointerEnter: Q,
                onMouseMove (K) {
                    const { nativeEvent: H } = K;
                    function G() {
                        !R.current && !N.current && r(!0, H, "hover");
                    }
                    p && !cf(_.current) || n || m === 0 || E.current && K.movementX ** 2 + K.movementY ** 2 < 2 || (clearTimeout(A.current), _.current === "touch" ? G() : (E.current = !0, A.current = window.setTimeout(G, m)));
                }
            };
        }, [
            p,
            r,
            n,
            N,
            m
        ]), z = $.useMemo(()=>({
                onMouseEnter () {
                    clearTimeout(I.current);
                },
                onMouseLeave (Q) {
                    P() || j(Q.nativeEvent, !1);
                }
            }), [
            j,
            P
        ]);
        return $.useMemo(()=>l ? {
                reference: V,
                floating: z
            } : {}, [
            l,
            V,
            z
        ]);
    }
    let IC = 0;
    function $a(e, t) {
        t === void 0 && (t = {});
        const { preventScroll: n = !1, cancelPrevious: r = !0, sync: i = !1 } = t;
        r && cancelAnimationFrame(IC);
        const o = ()=>e?.focus({
                preventScroll: n
            });
        i ? o() : IC = requestAnimationFrame(o);
    }
    function _C(e, t) {
        var n;
        let r = [], i = (n = e.find((o)=>o.id === t)) == null ? void 0 : n.parentId;
        for(; i;){
            const o = e.find((s)=>s.id === i);
            i = o?.parentId, o && (r = r.concat(o));
        }
        return r;
    }
    function Tc(e, t) {
        let n = e.filter((i)=>{
            var o;
            return i.parentId === t && ((o = i.context) == null ? void 0 : o.open);
        }), r = n;
        for(; r.length;)r = e.filter((i)=>{
            var o;
            return (o = r) == null ? void 0 : o.some((s)=>{
                var l;
                return i.parentId === s.id && ((l = i.context) == null ? void 0 : l.open);
            });
        }), n = n.concat(r);
        return n;
    }
    function M6(e, t) {
        let n, r = -1;
        function i(o, s) {
            s > r && (n = o, r = s), Tc(e, o).forEach((u)=>{
                i(u.id, s + 1);
            });
        }
        return i(t, 0), e.find((o)=>o.id === n);
    }
    let Xl = new WeakMap, Oh = new WeakSet, Th = {}, Xb = 0;
    const L6 = ()=>typeof HTMLElement < "u" && "inert" in HTMLElement.prototype, PA = (e)=>e && (e.host || PA(e.parentNode)), $6 = (e, t)=>t.map((n)=>{
            if (e.contains(n)) return n;
            const r = PA(n);
            return e.contains(r) ? r : null;
        }).filter((n)=>n != null);
    function q6(e, t, n, r) {
        const i = "data-floating-ui-inert", o = r ? "inert" : n ? "aria-hidden" : null, s = $6(t, e), l = new Set, u = new Set(s), f = [];
        Th[i] || (Th[i] = new WeakMap);
        const p = Th[i];
        s.forEach(m), g(t), l.clear();
        function m(v) {
            !v || l.has(v) || (l.add(v), v.parentNode && m(v.parentNode));
        }
        function g(v) {
            !v || u.has(v) || [].forEach.call(v.children, (x)=>{
                if (fa(x) !== "script") if (l.has(x)) g(x);
                else {
                    const b = o ? x.getAttribute(o) : null, S = b !== null && b !== "false", N = Xl.get(x) || 0, _ = o ? N + 1 : N, I = (p.get(x) || 0) + 1;
                    Xl.set(x, _), p.set(x, I), f.push(x), _ === 1 && S && Oh.add(x), I === 1 && x.setAttribute(i, ""), !S && o && x.setAttribute(o, "true");
                }
            });
        }
        return Xb++, ()=>{
            f.forEach((v)=>{
                const x = Xl.get(v) || 0, b = o ? x - 1 : x, S = (p.get(v) || 0) - 1;
                Xl.set(v, b), p.set(v, S), b || (!Oh.has(v) && o && v.removeAttribute(o), Oh.delete(v)), S || v.removeAttribute(i);
            }), Xb--, Xb || (Xl = new WeakMap, Xl = new WeakMap, Oh = new WeakSet, Th = {});
        };
    }
    function EC(e, t, n) {
        t === void 0 && (t = !1), n === void 0 && (n = !1);
        const r = Zn(e[0]).body;
        return q6(e.concat(Array.from(r.querySelectorAll("[aria-live]"))), r, t, n);
    }
    const yy = ()=>({
            getShadowRoot: !0,
            displayCheck: typeof ResizeObserver == "function" && ResizeObserver.toString().includes("[native code]") ? "full" : "none"
        });
    function AA(e, t) {
        const n = gy(e, yy());
        t === "prev" && n.reverse();
        const r = n.indexOf(Vi(Zn(e)));
        return n.slice(r + 1)[0];
    }
    function FA() {
        return AA(document.body, "next");
    }
    function DA() {
        return AA(document.body, "prev");
    }
    function Td(e, t) {
        const n = t || e.currentTarget, r = e.relatedTarget;
        return !r || !Jn(n, r);
    }
    function B6(e) {
        gy(e, yy()).forEach((n)=>{
            n.dataset.tabindex = n.getAttribute("tabindex") || "", n.setAttribute("tabindex", "-1");
        });
    }
    function kC(e) {
        e.querySelectorAll("[data-tabindex]").forEach((n)=>{
            const r = n.dataset.tabindex;
            delete n.dataset.tabindex, r ? n.setAttribute("tabindex", r) : n.removeAttribute("tabindex");
        });
    }
    const vy = {
        border: 0,
        clip: "rect(0 0 0 0)",
        height: "1px",
        margin: "-1px",
        overflow: "hidden",
        padding: 0,
        position: "fixed",
        whiteSpace: "nowrap",
        width: "1px",
        top: 0,
        left: 0
    };
    let z6;
    function CC(e) {
        e.key === "Tab" && (e.target, clearTimeout(z6));
    }
    const yg = $.forwardRef(function(t, n) {
        const [r, i] = $.useState();
        Kt(()=>(uA() && i("button"), document.addEventListener("keydown", CC), ()=>{
                document.removeEventListener("keydown", CC);
            }), []);
        const o = {
            ref: n,
            tabIndex: 0,
            role: r,
            "aria-hidden": r ? void 0 : !0,
            [pl("focus-guard")]: "",
            style: vy
        };
        return d.jsx("span", {
            ...t,
            ...o
        });
    }), MA = $.createContext(null), jC = pl("portal");
    function W6(e) {
        e === void 0 && (e = {});
        const { id: t, root: n } = e, r = PS(), i = LA(), [o, s] = $.useState(null), l = $.useRef(null);
        return Kt(()=>()=>{
                o?.remove(), queueMicrotask(()=>{
                    l.current = null;
                });
            }, [
            o
        ]), Kt(()=>{
            if (!r || l.current) return;
            const u = t ? document.getElementById(t) : null;
            if (!u) return;
            const f = document.createElement("div");
            f.id = r, f.setAttribute(jC, ""), u.appendChild(f), l.current = f, s(f);
        }, [
            t,
            r
        ]), Kt(()=>{
            if (n === null || !r || l.current) return;
            let u = n || i?.portalNode;
            u && !qt(u) && (u = u.current), u = u || document.body;
            let f = null;
            t && (f = document.createElement("div"), f.id = t, u.appendChild(f));
            const p = document.createElement("div");
            p.id = r, p.setAttribute(jC, ""), u = f || u, u.appendChild(p), l.current = p, s(p);
        }, [
            t,
            n,
            r,
            i
        ]), o;
    }
    function AS(e) {
        const { children: t, id: n, root: r, preserveTabOrder: i = !0 } = e, o = W6({
            id: n,
            root: r
        }), [s, l] = $.useState(null), u = $.useRef(null), f = $.useRef(null), p = $.useRef(null), m = $.useRef(null), g = s?.modal, v = s?.open, x = !!s && !s.modal && s.open && i && !!(r || o);
        return $.useEffect(()=>{
            if (!o || !i || g) return;
            function b(S) {
                o && Td(S) && (S.type === "focusin" ? kC : B6)(o);
            }
            return o.addEventListener("focusin", b, !0), o.addEventListener("focusout", b, !0), ()=>{
                o.removeEventListener("focusin", b, !0), o.removeEventListener("focusout", b, !0);
            };
        }, [
            o,
            i,
            g
        ]), $.useEffect(()=>{
            o && (v || kC(o));
        }, [
            v,
            o
        ]), d.jsxs(MA.Provider, {
            value: $.useMemo(()=>({
                    preserveTabOrder: i,
                    beforeOutsideRef: u,
                    afterOutsideRef: f,
                    beforeInsideRef: p,
                    afterInsideRef: m,
                    portalNode: o,
                    setFocusManagerState: l
                }), [
                i,
                o
            ]),
            children: [
                x && o && d.jsx(yg, {
                    "data-type": "outside",
                    ref: u,
                    onFocus: (b)=>{
                        if (Td(b, o)) {
                            var S;
                            (S = p.current) == null || S.focus();
                        } else {
                            const N = DA() || s?.domReference;
                            N?.focus();
                        }
                    }
                }),
                x && o && d.jsx("span", {
                    "aria-owns": o.id,
                    style: vy
                }),
                o && Qg.createPortal(t, o),
                x && o && d.jsx(yg, {
                    "data-type": "outside",
                    ref: f,
                    onFocus: (b)=>{
                        if (Td(b, o)) {
                            var S;
                            (S = m.current) == null || S.focus();
                        } else {
                            const N = FA() || s?.domReference;
                            N?.focus(), s?.closeOnFocusOut && s?.onOpenChange(!1, b.nativeEvent, "focus-out");
                        }
                    }
                })
            ]
        });
    }
    const LA = ()=>$.useContext(MA), pN = "data-floating-ui-focusable";
    function hN(e) {
        return e ? e.hasAttribute(pN) ? e : e.querySelector("[" + pN + "]") || e : null;
    }
    const V6 = 20;
    let qa = [];
    function ew(e) {
        qa = qa.filter((t)=>t.isConnected), e && fa(e) !== "body" && (qa.push(e), qa.length > V6 && (qa = qa.slice(-20)));
    }
    function RC() {
        return qa.slice().reverse().find((e)=>e.isConnected);
    }
    function U6(e) {
        const t = yy();
        return GU(e, t) ? e : gy(e, t)[0] || e;
    }
    const H6 = $.forwardRef(function(t, n) {
        return d.jsx("button", {
            ...t,
            type: "button",
            ref: n,
            tabIndex: -1,
            style: vy
        });
    });
    function $A(e) {
        const { context: t, children: n, disabled: r = !1, order: i = [
            "content"
        ], guards: o = !0, initialFocus: s = 0, returnFocus: l = !0, restoreFocus: u = !1, modal: f = !0, visuallyHiddenDismiss: p = !1, closeOnFocusOut: m = !0, outsideElementsInert: g = !1 } = e, { open: v, onOpenChange: x, events: b, dataRef: S, elements: { domReference: N, floating: _ } } = t, I = wr(()=>{
            var de;
            return (de = S.current.floatingContext) == null ? void 0 : de.nodeId;
        }), C = typeof s == "number" && s < 0, A = dA(N) && C, R = L6(), D = R ? o : !0, O = !D || R && g, E = Nr(i), F = Nr(s), j = Nr(l), M = au(), L = LA(), P = $.useRef(null), V = $.useRef(null), z = $.useRef(!1), Q = $.useRef(!1), K = $.useRef(-1), H = L != null, G = hN(_), U = wr(function(de) {
            return de === void 0 && (de = G), de ? gy(de, yy()) : [];
        }), Z = wr((de)=>{
            const ve = U(de);
            return E.current.map((be)=>N && be === "reference" ? N : G && be === "floating" ? G : ve).filter(Boolean).flat();
        });
        $.useEffect(()=>{
            if (r || !f) return;
            function de(be) {
                if (be.key === "Tab") {
                    Jn(G, Vi(Zn(G))) && U().length === 0 && !A && vr(be);
                    const ge = Z(), we = Bs(be);
                    E.current[0] === "reference" && we === N && (vr(be), be.shiftKey ? $a(ge[ge.length - 1]) : $a(ge[1])), E.current[1] === "floating" && we === G && be.shiftKey && (vr(be), $a(ge[0]));
                }
            }
            const ve = Zn(G);
            return ve.addEventListener("keydown", de), ()=>{
                ve.removeEventListener("keydown", de);
            };
        }, [
            r,
            N,
            G,
            f,
            E,
            A,
            U,
            Z
        ]), $.useEffect(()=>{
            if (r || !_) return;
            function de(ve) {
                const be = Bs(ve), we = U().indexOf(be);
                we !== -1 && (K.current = we);
            }
            return _.addEventListener("focusin", de), ()=>{
                _.removeEventListener("focusin", de);
            };
        }, [
            r,
            _,
            U
        ]), $.useEffect(()=>{
            if (r || !m) return;
            function de() {
                Q.current = !0, setTimeout(()=>{
                    Q.current = !1;
                });
            }
            function ve(be) {
                const ge = be.relatedTarget;
                queueMicrotask(()=>{
                    const we = I(), ke = !(Jn(N, ge) || Jn(_, ge) || Jn(ge, _) || Jn(L?.portalNode, ge) || ge != null && ge.hasAttribute(pl("focus-guard")) || M && (Tc(M.nodesRef.current, we).find((Re)=>{
                        var $e, nt;
                        return Jn(($e = Re.context) == null ? void 0 : $e.elements.floating, ge) || Jn((nt = Re.context) == null ? void 0 : nt.elements.domReference, ge);
                    }) || _C(M.nodesRef.current, we).find((Re)=>{
                        var $e, nt, ee;
                        return [
                            ($e = Re.context) == null ? void 0 : $e.elements.floating,
                            hN((nt = Re.context) == null ? void 0 : nt.elements.floating)
                        ].includes(ge) || ((ee = Re.context) == null ? void 0 : ee.elements.domReference) === ge;
                    })));
                    if (u && ke && Vi(Zn(G)) === Zn(G).body) {
                        jn(G) && G.focus();
                        const Re = K.current, $e = U(), nt = $e[Re] || $e[$e.length - 1] || G;
                        jn(nt) && nt.focus();
                    }
                    (A || !f) && ge && ke && !Q.current && ge !== RC() && (z.current = !0, x(!1, be, "focus-out"));
                });
            }
            if (_ && jn(N)) return N.addEventListener("focusout", ve), N.addEventListener("pointerdown", de), _.addEventListener("focusout", ve), ()=>{
                N.removeEventListener("focusout", ve), N.removeEventListener("pointerdown", de), _.removeEventListener("focusout", ve);
            };
        }, [
            r,
            N,
            _,
            G,
            f,
            M,
            L,
            x,
            m,
            u,
            U,
            A,
            I
        ]);
        const J = $.useRef(null), X = $.useRef(null), te = xC([
            J,
            L?.beforeInsideRef
        ]), ie = xC([
            X,
            L?.afterInsideRef
        ]);
        $.useEffect(()=>{
            var de;
            if (r || !_) return;
            const ve = Array.from((L == null || (de = L.portalNode) == null ? void 0 : de.querySelectorAll("[" + pl("portal") + "]")) || []), be = M && !f ? _C(M?.nodesRef.current, I()).map((ke)=>{
                var Re;
                return (Re = ke.context) == null ? void 0 : Re.elements.floating;
            }) : [], ge = [
                _,
                ...ve,
                ...be,
                P.current,
                V.current,
                J.current,
                X.current,
                L?.beforeOutsideRef.current,
                L?.afterOutsideRef.current,
                E.current.includes("reference") || A ? N : null
            ].filter((ke)=>ke != null), we = f || A ? EC(ge, !O, O) : EC(ge);
            return ()=>{
                we();
            };
        }, [
            r,
            N,
            _,
            f,
            E,
            L,
            A,
            D,
            O,
            M,
            I
        ]), Kt(()=>{
            if (r || !jn(G)) return;
            const de = Zn(G), ve = Vi(de);
            queueMicrotask(()=>{
                const be = Z(G), ge = F.current, we = (typeof ge == "number" ? be[ge] : ge.current) || G, ke = Jn(G, ve);
                !C && !ke && v && $a(we, {
                    preventScroll: we === G
                });
            });
        }, [
            r,
            v,
            G,
            C,
            Z,
            F
        ]), Kt(()=>{
            if (r || !G) return;
            let de = !1;
            const ve = Zn(G), be = Vi(ve);
            let we = S.current.openEvent;
            ew(be);
            function ke(nt) {
                let { open: ee, reason: ne, event: oe, nested: le } = nt;
                ee && (we = oe), ne === "escape-key" && N && ew(N), [
                    "hover",
                    "safe-polygon"
                ].includes(ne) && oe.type === "mouseleave" && (z.current = !0), ne === "outside-press" && (le ? (z.current = !1, de = !0) : z.current = !(cA(oe) || kS(oe)));
            }
            b.on("openchange", ke);
            const Re = ve.createElement("span");
            Re.setAttribute("tabindex", "-1"), Re.setAttribute("aria-hidden", "true"), Object.assign(Re.style, vy), H && N && N.insertAdjacentElement("afterend", Re);
            function $e() {
                return typeof j.current == "boolean" ? RC() || Re : j.current.current || Re;
            }
            return ()=>{
                b.off("openchange", ke);
                const nt = Vi(ve), ee = Jn(_, nt) || M && Tc(M.nodesRef.current, I()).some((le)=>{
                    var me;
                    return Jn((me = le.context) == null ? void 0 : me.elements.floating, nt);
                });
                (ee || we && [
                    "click",
                    "mousedown"
                ].includes(we.type)) && N && ew(N);
                const oe = $e();
                queueMicrotask(()=>{
                    const le = U6(oe);
                    j.current && !z.current && jn(le) && (!(le !== nt && nt !== ve.body) || ee) && le.focus({
                        preventScroll: de
                    }), Re.remove();
                });
            };
        }, [
            r,
            _,
            G,
            j,
            S,
            b,
            M,
            H,
            N,
            I
        ]), $.useEffect(()=>{
            queueMicrotask(()=>{
                z.current = !1;
            });
        }, [
            r
        ]), Kt(()=>{
            if (!r && L) return L.setFocusManagerState({
                modal: f,
                closeOnFocusOut: m,
                open: v,
                onOpenChange: x,
                domReference: N
            }), ()=>{
                L.setFocusManagerState(null);
            };
        }, [
            r,
            L,
            f,
            v,
            x,
            m,
            N
        ]), Kt(()=>{
            if (r || !G || typeof MutationObserver != "function" || C) return;
            const de = ()=>{
                const be = G.getAttribute("tabindex"), ge = U(), we = Vi(Zn(_)), ke = ge.indexOf(we);
                ke !== -1 && (K.current = ke), E.current.includes("floating") || we !== N && ge.length === 0 ? be !== "0" && G.setAttribute("tabindex", "0") : be !== "-1" && G.setAttribute("tabindex", "-1");
            };
            de();
            const ve = new MutationObserver(de);
            return ve.observe(G, {
                childList: !0,
                subtree: !0,
                attributes: !0
            }), ()=>{
                ve.disconnect();
            };
        }, [
            r,
            _,
            G,
            N,
            E,
            U,
            C
        ]);
        function ae(de) {
            return r || !p || !f ? null : d.jsx(H6, {
                ref: de === "start" ? P : V,
                onClick: (ve)=>x(!1, ve.nativeEvent),
                children: typeof p == "string" ? p : "Dismiss"
            });
        }
        const ce = !r && D && (f ? !A : !0) && (H || f);
        return d.jsxs(d.Fragment, {
            children: [
                ce && d.jsx(yg, {
                    "data-type": "inside",
                    ref: te,
                    onFocus: (de)=>{
                        if (f) {
                            const be = Z();
                            $a(i[0] === "reference" ? be[0] : be[be.length - 1]);
                        } else if (L != null && L.preserveTabOrder && L.portalNode) if (z.current = !1, Td(de, L.portalNode)) {
                            const be = FA() || N;
                            be?.focus();
                        } else {
                            var ve;
                            (ve = L.beforeOutsideRef.current) == null || ve.focus();
                        }
                    }
                }),
                !A && ae("start"),
                n,
                ae("end"),
                ce && d.jsx(yg, {
                    "data-type": "inside",
                    ref: ie,
                    onFocus: (de)=>{
                        if (f) $a(Z()[0]);
                        else if (L != null && L.preserveTabOrder && L.portalNode) if (m && (z.current = !0), Td(de, L.portalNode)) {
                            const be = DA() || N;
                            be?.focus();
                        } else {
                            var ve;
                            (ve = L.afterOutsideRef.current) == null || ve.focus();
                        }
                    }
                })
            ]
        });
    }
    let Ph = 0;
    function K6() {
        const e = /iP(hone|ad|od)|iOS/.test(ES()), t = document.body.style, r = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft ? "paddingLeft" : "paddingRight", i = window.innerWidth - document.documentElement.clientWidth, o = t.left ? parseFloat(t.left) : window.scrollX, s = t.top ? parseFloat(t.top) : window.scrollY;
        if (t.overflow = "hidden", i && (t[r] = i + "px"), e) {
            var l, u;
            const f = ((l = window.visualViewport) == null ? void 0 : l.offsetLeft) || 0, p = ((u = window.visualViewport) == null ? void 0 : u.offsetTop) || 0;
            Object.assign(t, {
                position: "fixed",
                top: -(s - Math.floor(p)) + "px",
                left: -(o - Math.floor(f)) + "px",
                right: "0"
            });
        }
        return ()=>{
            Object.assign(t, {
                overflow: "",
                [r]: ""
            }), e && (Object.assign(t, {
                position: "",
                top: "",
                left: "",
                right: ""
            }), window.scrollTo(o, s));
        };
    }
    let OC = ()=>{};
    const G6 = $.forwardRef(function(t, n) {
        const { lockScroll: r = !1, ...i } = t;
        return Kt(()=>{
            if (r) return Ph++, Ph === 1 && (OC = K6()), ()=>{
                Ph--, Ph === 0 && OC();
            };
        }, [
            r
        ]), d.jsx("div", {
            ref: n,
            ...i,
            style: {
                position: "fixed",
                overflow: "auto",
                top: 0,
                right: 0,
                bottom: 0,
                left: 0,
                ...i.style
            }
        });
    });
    function TC(e) {
        return jn(e.target) && e.target.tagName === "BUTTON";
    }
    function PC(e) {
        return CS(e);
    }
    function FS(e, t) {
        t === void 0 && (t = {});
        const { open: n, onOpenChange: r, dataRef: i, elements: { domReference: o } } = e, { enabled: s = !0, event: l = "click", toggle: u = !0, ignoreMouse: f = !1, keyboardHandlers: p = !0, stickIfOpen: m = !0 } = t, g = $.useRef(), v = $.useRef(!1), x = $.useMemo(()=>({
                onPointerDown (b) {
                    g.current = b.pointerType;
                },
                onMouseDown (b) {
                    const S = g.current;
                    b.button === 0 && l !== "click" && (cf(S, !0) && f || (n && u && (!(i.current.openEvent && m) || i.current.openEvent.type === "mousedown") ? r(!1, b.nativeEvent, "click") : (b.preventDefault(), r(!0, b.nativeEvent, "click"))));
                },
                onClick (b) {
                    const S = g.current;
                    if (l === "mousedown" && g.current) {
                        g.current = void 0;
                        return;
                    }
                    cf(S, !0) && f || (n && u && (!(i.current.openEvent && m) || i.current.openEvent.type === "click") ? r(!1, b.nativeEvent, "click") : r(!0, b.nativeEvent, "click"));
                },
                onKeyDown (b) {
                    g.current = void 0, !(b.defaultPrevented || !p || TC(b)) && (b.key === " " && !PC(o) && (b.preventDefault(), v.current = !0), b.key === "Enter" && r(!(n && u), b.nativeEvent, "click"));
                },
                onKeyUp (b) {
                    b.defaultPrevented || !p || TC(b) || PC(o) || b.key === " " && v.current && (v.current = !1, r(!(n && u), b.nativeEvent, "click"));
                }
            }), [
            i,
            o,
            l,
            f,
            p,
            r,
            n,
            m,
            u
        ]);
        return $.useMemo(()=>s ? {
                reference: x
            } : {}, [
            s,
            x
        ]);
    }
    const Q6 = {
        pointerdown: "onPointerDown",
        mousedown: "onMouseDown",
        click: "onClick"
    }, J6 = {
        pointerdown: "onPointerDownCapture",
        mousedown: "onMouseDownCapture",
        click: "onClickCapture"
    }, AC = (e)=>{
        var t, n;
        return {
            escapeKey: typeof e == "boolean" ? e : (t = e?.escapeKey) != null ? t : !1,
            outsidePress: typeof e == "boolean" ? e : (n = e?.outsidePress) != null ? n : !0
        };
    };
    function DS(e, t) {
        t === void 0 && (t = {});
        const { open: n, onOpenChange: r, elements: i, dataRef: o } = e, { enabled: s = !0, escapeKey: l = !0, outsidePress: u = !0, outsidePressEvent: f = "pointerdown", referencePress: p = !1, referencePressEvent: m = "pointerdown", ancestorScroll: g = !1, bubbles: v, capture: x } = t, b = au(), S = wr(typeof u == "function" ? u : ()=>!1), N = typeof u == "function" ? S : u, _ = $.useRef(!1), I = $.useRef(!1), { escapeKey: C, outsidePress: A } = AC(v), { escapeKey: R, outsidePress: D } = AC(x), O = $.useRef(!1), E = wr((V)=>{
            var z;
            if (!n || !s || !l || V.key !== "Escape" || O.current) return;
            const Q = (z = o.current.floatingContext) == null ? void 0 : z.nodeId, K = b ? Tc(b.nodesRef.current, Q) : [];
            if (!C && (V.stopPropagation(), K.length > 0)) {
                let H = !0;
                if (K.forEach((G)=>{
                    var U;
                    if ((U = G.context) != null && U.open && !G.context.dataRef.current.__escapeKeyBubbles) {
                        H = !1;
                        return;
                    }
                }), !H) return;
            }
            r(!1, xU(V) ? V.nativeEvent : V, "escape-key");
        }), F = wr((V)=>{
            var z;
            const Q = ()=>{
                var K;
                E(V), (K = Bs(V)) == null || K.removeEventListener("keydown", Q);
            };
            (z = Bs(V)) == null || z.addEventListener("keydown", Q);
        }), j = wr((V)=>{
            var z;
            const Q = _.current;
            _.current = !1;
            const K = I.current;
            if (I.current = !1, f === "click" && K || Q || typeof N == "function" && !N(V)) return;
            const H = Bs(V), G = "[" + pl("inert") + "]", U = Zn(i.floating).querySelectorAll(G);
            let Z = qt(H) ? H : null;
            for(; Z && !Go(Z);){
                const ie = ns(Z);
                if (Go(ie) || !qt(ie)) break;
                Z = ie;
            }
            if (U.length && qt(H) && !bU(H) && !Jn(H, i.floating) && Array.from(U).every((ie)=>!Jn(Z, ie))) return;
            if (jn(H) && P) {
                const ie = Go(H), ae = Ri(H), ce = /auto|scroll/, de = ie || ce.test(ae.overflowX), ve = ie || ce.test(ae.overflowY), be = de && H.clientWidth > 0 && H.scrollWidth > H.clientWidth, ge = ve && H.clientHeight > 0 && H.scrollHeight > H.clientHeight, we = ae.direction === "rtl", ke = ge && (we ? V.offsetX <= H.offsetWidth - H.clientWidth : V.offsetX > H.clientWidth), Re = be && V.offsetY > H.clientHeight;
                if (ke || Re) return;
            }
            const J = (z = o.current.floatingContext) == null ? void 0 : z.nodeId, X = b && Tc(b.nodesRef.current, J).some((ie)=>{
                var ae;
                return Gb(V, (ae = ie.context) == null ? void 0 : ae.elements.floating);
            });
            if (Gb(V, i.floating) || Gb(V, i.domReference) || X) return;
            const te = b ? Tc(b.nodesRef.current, J) : [];
            if (te.length > 0) {
                let ie = !0;
                if (te.forEach((ae)=>{
                    var ce;
                    if ((ce = ae.context) != null && ce.open && !ae.context.dataRef.current.__outsidePressBubbles) {
                        ie = !1;
                        return;
                    }
                }), !ie) return;
            }
            r(!1, V, "outside-press");
        }), M = wr((V)=>{
            var z;
            const Q = ()=>{
                var K;
                j(V), (K = Bs(V)) == null || K.removeEventListener(f, Q);
            };
            (z = Bs(V)) == null || z.addEventListener(f, Q);
        });
        $.useEffect(()=>{
            if (!n || !s) return;
            o.current.__escapeKeyBubbles = C, o.current.__outsidePressBubbles = A;
            let V = -1;
            function z(U) {
                r(!1, U, "ancestor-scroll");
            }
            function Q() {
                window.clearTimeout(V), O.current = !0;
            }
            function K() {
                V = window.setTimeout(()=>{
                    O.current = !1;
                }, hy() ? 5 : 0);
            }
            const H = Zn(i.floating);
            l && (H.addEventListener("keydown", R ? F : E, R), H.addEventListener("compositionstart", Q), H.addEventListener("compositionend", K)), N && H.addEventListener(f, D ? M : j, D);
            let G = [];
            return g && (qt(i.domReference) && (G = Qs(i.domReference)), qt(i.floating) && (G = G.concat(Qs(i.floating))), !qt(i.reference) && i.reference && i.reference.contextElement && (G = G.concat(Qs(i.reference.contextElement)))), G = G.filter((U)=>{
                var Z;
                return U !== ((Z = H.defaultView) == null ? void 0 : Z.visualViewport);
            }), G.forEach((U)=>{
                U.addEventListener("scroll", z, {
                    passive: !0
                });
            }), ()=>{
                l && (H.removeEventListener("keydown", R ? F : E, R), H.removeEventListener("compositionstart", Q), H.removeEventListener("compositionend", K)), N && H.removeEventListener(f, D ? M : j, D), G.forEach((U)=>{
                    U.removeEventListener("scroll", z);
                }), window.clearTimeout(V);
            };
        }, [
            o,
            i,
            l,
            N,
            f,
            n,
            r,
            g,
            s,
            C,
            A,
            E,
            R,
            F,
            j,
            D,
            M
        ]), $.useEffect(()=>{
            _.current = !1;
        }, [
            N,
            f
        ]);
        const L = $.useMemo(()=>({
                onKeyDown: E,
                ...p && {
                    [Q6[m]]: (V)=>{
                        r(!1, V.nativeEvent, "reference-press");
                    },
                    ...m !== "click" && {
                        onClick (V) {
                            r(!1, V.nativeEvent, "reference-press");
                        }
                    }
                }
            }), [
            E,
            r,
            p,
            m
        ]), P = $.useMemo(()=>({
                onKeyDown: E,
                onMouseDown () {
                    I.current = !0;
                },
                onMouseUp () {
                    I.current = !0;
                },
                [J6[f]]: ()=>{
                    _.current = !0;
                }
            }), [
            E,
            f
        ]);
        return $.useMemo(()=>s ? {
                reference: L,
                floating: P
            } : {}, [
            s,
            L,
            P
        ]);
    }
    function Z6(e) {
        const { open: t = !1, onOpenChange: n, elements: r } = e, i = PS(), o = $.useRef({}), [s] = $.useState(()=>RA()), l = zf() != null, [u, f] = $.useState(r.reference), p = wr((v, x, b)=>{
            o.current.openEvent = v ? x : void 0, s.emit("openchange", {
                open: v,
                event: x,
                reason: b,
                nested: l
            }), n?.(v, x, b);
        }), m = $.useMemo(()=>({
                setPositionReference: f
            }), []), g = $.useMemo(()=>({
                reference: u || r.reference || null,
                floating: r.floating || null,
                domReference: r.reference
            }), [
            u,
            r.reference,
            r.floating
        ]);
        return $.useMemo(()=>({
                dataRef: o,
                open: t,
                onOpenChange: p,
                elements: g,
                events: s,
                floatingId: i,
                refs: m
            }), [
            t,
            p,
            g,
            s,
            i,
            m
        ]);
    }
    function MS(e) {
        e === void 0 && (e = {});
        const { nodeId: t } = e, n = Z6({
            ...e,
            elements: {
                reference: null,
                floating: null,
                ...e.elements
            }
        }), r = e.rootContext || n, i = r.elements, [o, s] = $.useState(null), [l, u] = $.useState(null), p = i?.domReference || o, m = $.useRef(null), g = au();
        Kt(()=>{
            p && (m.current = p);
        }, [
            p
        ]);
        const v = w6({
            ...e,
            elements: {
                ...i,
                ...l && {
                    reference: l
                }
            }
        }), x = $.useCallback((I)=>{
            const C = qt(I) ? {
                getBoundingClientRect: ()=>I.getBoundingClientRect(),
                contextElement: I
            } : I;
            u(C), v.refs.setReference(C);
        }, [
            v.refs
        ]), b = $.useCallback((I)=>{
            (qt(I) || I === null) && (m.current = I, s(I)), (qt(v.refs.reference.current) || v.refs.reference.current === null || I !== null && !qt(I)) && v.refs.setReference(I);
        }, [
            v.refs
        ]), S = $.useMemo(()=>({
                ...v.refs,
                setReference: b,
                setPositionReference: x,
                domReference: m
            }), [
            v.refs,
            b,
            x
        ]), N = $.useMemo(()=>({
                ...v.elements,
                domReference: p
            }), [
            v.elements,
            p
        ]), _ = $.useMemo(()=>({
                ...v,
                ...r,
                refs: S,
                elements: N,
                nodeId: t
            }), [
            v,
            S,
            N,
            t,
            r
        ]);
        return Kt(()=>{
            r.dataRef.current.floatingContext = _;
            const I = g?.nodesRef.current.find((C)=>C.id === t);
            I && (I.context = _);
        }), $.useMemo(()=>({
                ...v,
                context: _,
                refs: S,
                elements: N
            }), [
            v,
            S,
            N,
            _
        ]);
    }
    function Y6(e, t) {
        t === void 0 && (t = {});
        const { open: n, onOpenChange: r, events: i, dataRef: o, elements: s } = e, { enabled: l = !0, visibleOnly: u = !0 } = t, f = $.useRef(!1), p = $.useRef(), m = $.useRef(!0);
        $.useEffect(()=>{
            if (!l) return;
            const v = zr(s.domReference);
            function x() {
                !n && jn(s.domReference) && s.domReference === Vi(Zn(s.domReference)) && (f.current = !0);
            }
            function b() {
                m.current = !0;
            }
            return v.addEventListener("blur", x), v.addEventListener("keydown", b, !0), ()=>{
                v.removeEventListener("blur", x), v.removeEventListener("keydown", b, !0);
            };
        }, [
            s.domReference,
            n,
            l
        ]), $.useEffect(()=>{
            if (!l) return;
            function v(x) {
                let { reason: b } = x;
                (b === "reference-press" || b === "escape-key") && (f.current = !0);
            }
            return i.on("openchange", v), ()=>{
                i.off("openchange", v);
            };
        }, [
            i,
            l
        ]), $.useEffect(()=>()=>{
                clearTimeout(p.current);
            }, []);
        const g = $.useMemo(()=>({
                onPointerDown (v) {
                    kS(v.nativeEvent) || (m.current = !1);
                },
                onMouseLeave () {
                    f.current = !1;
                },
                onFocus (v) {
                    if (f.current) return;
                    const x = Bs(v.nativeEvent);
                    if (u && qt(x)) try {
                        if (uA() && yU()) throw Error();
                        if (!x.matches(":focus-visible")) return;
                    } catch  {
                        if (!m.current && !CS(x)) return;
                    }
                    r(!0, v.nativeEvent, "focus");
                },
                onBlur (v) {
                    f.current = !1;
                    const x = v.relatedTarget, b = v.nativeEvent, S = qt(x) && x.hasAttribute(pl("focus-guard")) && x.getAttribute("data-type") === "outside";
                    p.current = window.setTimeout(()=>{
                        var N;
                        const _ = Vi(s.domReference ? s.domReference.ownerDocument : document);
                        !x && _ === s.domReference || Jn((N = o.current.floatingContext) == null ? void 0 : N.refs.floating.current, _) || Jn(s.domReference, _) || S || r(!1, b, "focus");
                    });
                }
            }), [
            o,
            s.domReference,
            r,
            u
        ]);
        return $.useMemo(()=>l ? {
                reference: g
            } : {}, [
            l,
            g
        ]);
    }
    const FC = "active", DC = "selected";
    function tw(e, t, n) {
        const r = new Map, i = n === "item";
        let o = e;
        if (i && e) {
            const { [FC]: s, [DC]: l, ...u } = e;
            o = u;
        }
        return {
            ...n === "floating" && {
                tabIndex: -1,
                [pN]: ""
            },
            ...o,
            ...t.map((s)=>{
                const l = s ? s[n] : null;
                return typeof l == "function" ? e ? l(e) : null : l;
            }).concat(e).reduce((s, l)=>(l && Object.entries(l).forEach((u)=>{
                    let [f, p] = u;
                    if (!(i && [
                        FC,
                        DC
                    ].includes(f))) if (f.indexOf("on") === 0) {
                        if (r.has(f) || r.set(f, []), typeof p == "function") {
                            var m;
                            (m = r.get(f)) == null || m.push(p), s[f] = function() {
                                for(var g, v = arguments.length, x = new Array(v), b = 0; b < v; b++)x[b] = arguments[b];
                                return (g = r.get(f)) == null ? void 0 : g.map((S)=>S(...x)).find((S)=>S !== void 0);
                            };
                        }
                    } else s[f] = p;
                }), s), {})
        };
    }
    function LS(e) {
        e === void 0 && (e = []);
        const t = e.map((l)=>l?.reference), n = e.map((l)=>l?.floating), r = e.map((l)=>l?.item), i = $.useCallback((l)=>tw(l, e, "reference"), t), o = $.useCallback((l)=>tw(l, e, "floating"), n), s = $.useCallback((l)=>tw(l, e, "item"), r);
        return $.useMemo(()=>({
                getReferenceProps: i,
                getFloatingProps: o,
                getItemProps: s
            }), [
            i,
            o,
            s
        ]);
    }
    const X6 = "Escape";
    function xy(e, t, n) {
        switch(e){
            case "vertical":
                return t;
            case "horizontal":
                return n;
            default:
                return t || n;
        }
    }
    function nw(e, t) {
        return xy(t, e === TS || e === Bf, e === Js || e === Zs);
    }
    function rw(e, t, n) {
        return xy(t, e === Bf, n ? e === Js : e === Zs) || e === "Enter" || e === " " || e === "";
    }
    function MC(e, t, n) {
        return xy(t, n ? e === Js : e === Zs, e === Bf);
    }
    function LC(e, t, n, r) {
        const i = n ? e === Zs : e === Js, o = e === TS;
        return t === "both" || t === "horizontal" && r && r > 1 ? e === X6 : xy(t, i, o);
    }
    function e8(e, t) {
        const { open: n, onOpenChange: r, elements: i } = e, { listRef: o, activeIndex: s, onNavigate: l = ()=>{}, enabled: u = !0, selectedIndex: f = null, allowEscape: p = !1, loop: m = !1, nested: g = !1, rtl: v = !1, virtual: x = !1, focusItemOnOpen: b = "auto", focusItemOnHover: S = !0, openOnArrowKeyDown: N = !0, disabledIndices: _ = void 0, orientation: I = "vertical", cols: C = 1, scrollItemIntoView: A = !0, virtualItemRef: R, itemSizes: D, dense: O = !1 } = t, E = hN(i.floating), F = Nr(E), j = zf(), M = au();
        Kt(()=>{
            e.dataRef.current.orientation = I;
        }, [
            e,
            I
        ]);
        const L = wr(()=>{
            l(z.current === -1 ? null : z.current);
        }), P = dA(i.domReference), V = $.useRef(b), z = $.useRef(f ?? -1), Q = $.useRef(null), K = $.useRef(!0), H = $.useRef(L), G = $.useRef(!!i.floating), U = $.useRef(n), Z = $.useRef(!1), J = $.useRef(!1), X = Nr(_), te = Nr(n), ie = Nr(A), ae = Nr(f), [ce, de] = $.useState(), [ve, be] = $.useState(), ge = wr(()=>{
            function ne(me) {
                x ? (de(me.id), M?.events.emit("virtualfocus", me), R && (R.current = me)) : $a(me, {
                    sync: Z.current,
                    preventScroll: !0
                });
            }
            const oe = o.current[z.current];
            oe && ne(oe), (Z.current ? (me)=>me() : requestAnimationFrame)(()=>{
                const me = o.current[z.current] || oe;
                if (!me) return;
                oe || ne(me);
                const xe = ie.current;
                xe && ke && (J.current || !K.current) && (me.scrollIntoView == null || me.scrollIntoView(typeof xe == "boolean" ? {
                    block: "nearest",
                    inline: "nearest"
                } : xe));
            });
        });
        Kt(()=>{
            u && (n && i.floating ? V.current && f != null && (J.current = !0, z.current = f, L()) : G.current && (z.current = -1, H.current()));
        }, [
            u,
            n,
            i.floating,
            f,
            L
        ]), Kt(()=>{
            if (u && n && i.floating) if (s == null) {
                if (Z.current = !1, ae.current != null) return;
                if (G.current && (z.current = -1, ge()), (!U.current || !G.current) && V.current && (Q.current != null || V.current === !0 && Q.current == null)) {
                    let ne = 0;
                    const oe = ()=>{
                        o.current[0] == null ? (ne < 2 && (ne ? requestAnimationFrame : queueMicrotask)(oe), ne++) : (z.current = Q.current == null || rw(Q.current, I, v) || g ? Zb(o, X.current) : bC(o, X.current), Q.current = null, L());
                    };
                    oe();
                }
            } else Od(o, s) || (z.current = s, ge(), J.current = !1);
        }, [
            u,
            n,
            i.floating,
            s,
            ae,
            g,
            o,
            I,
            v,
            L,
            ge,
            X
        ]), Kt(()=>{
            var ne;
            if (!u || i.floating || !M || x || !G.current) return;
            const oe = M.nodesRef.current, le = (ne = oe.find((pe)=>pe.id === j)) == null || (ne = ne.context) == null ? void 0 : ne.elements.floating, me = Vi(Zn(i.floating)), xe = oe.some((pe)=>pe.context && Jn(pe.context.elements.floating, me));
            le && !xe && K.current && le.focus({
                preventScroll: !0
            });
        }, [
            u,
            i.floating,
            M,
            j,
            x
        ]), Kt(()=>{
            if (!u || !M || !x || j) return;
            function ne(oe) {
                be(oe.id), R && (R.current = oe);
            }
            return M.events.on("virtualfocus", ne), ()=>{
                M.events.off("virtualfocus", ne);
            };
        }, [
            u,
            M,
            x,
            j,
            R
        ]), Kt(()=>{
            H.current = L, U.current = n, G.current = !!i.floating;
        }), Kt(()=>{
            n || (Q.current = null);
        }, [
            n
        ]);
        const we = s != null, ke = $.useMemo(()=>{
            function ne(le) {
                if (!n) return;
                const me = o.current.indexOf(le);
                me !== -1 && z.current !== me && (z.current = me, L());
            }
            return {
                onFocus (le) {
                    let { currentTarget: me } = le;
                    Z.current = !0, ne(me);
                },
                onClick: (le)=>{
                    let { currentTarget: me } = le;
                    return me.focus({
                        preventScroll: !0
                    });
                },
                ...S && {
                    onMouseMove (le) {
                        let { currentTarget: me } = le;
                        Z.current = !0, J.current = !1, ne(me);
                    },
                    onPointerLeave (le) {
                        let { pointerType: me } = le;
                        if (!(!K.current || me === "touch") && (Z.current = !0, z.current = -1, L(), !x)) {
                            var xe;
                            (xe = F.current) == null || xe.focus({
                                preventScroll: !0
                            });
                        }
                    }
                }
            };
        }, [
            n,
            F,
            S,
            o,
            L,
            x
        ]), Re = wr((ne)=>{
            if (K.current = !1, Z.current = !0, ne.which === 229 || !te.current && ne.currentTarget === F.current) return;
            if (g && LC(ne.key, I, v, C)) {
                vr(ne), r(!1, ne.nativeEvent, "list-navigation"), jn(i.domReference) && (x ? M?.events.emit("virtualfocus", i.domReference) : i.domReference.focus());
                return;
            }
            const oe = z.current, le = Zb(o, _), me = bC(o, _);
            if (P || (ne.key === "Home" && (vr(ne), z.current = le, L()), ne.key === "End" && (vr(ne), z.current = me, L())), C > 1) {
                const xe = D || Array.from({
                    length: o.current.length
                }, ()=>({
                        width: 1,
                        height: 1
                    })), pe = k6(xe, C, O), Se = pe.findIndex((dt)=>dt != null && !um(o.current, dt, _)), Ge = pe.reduce((dt, nn, Gt)=>nn != null && !um(o.current, nn, _) ? Gt : dt, -1), Qe = pe[E6({
                    current: pe.map((dt)=>dt != null ? o.current[dt] : null)
                }, {
                    event: ne,
                    orientation: I,
                    loop: m,
                    rtl: v,
                    cols: C,
                    disabledIndices: j6([
                        ..._ || o.current.map((dt, nn)=>um(o.current, nn) ? nn : void 0),
                        void 0
                    ], pe),
                    minIndex: Se,
                    maxIndex: Ge,
                    prevIndex: C6(z.current > me ? le : z.current, xe, pe, C, ne.key === Bf ? "bl" : ne.key === (v ? Js : Zs) ? "tr" : "tl"),
                    stopEvent: !0
                })];
                if (Qe != null && (z.current = Qe, L()), I === "both") return;
            }
            if (nw(ne.key, I)) {
                if (vr(ne), n && !x && Vi(ne.currentTarget.ownerDocument) === ne.currentTarget) {
                    z.current = rw(ne.key, I, v) ? le : me, L();
                    return;
                }
                rw(ne.key, I, v) ? m ? z.current = oe >= me ? p && oe !== o.current.length ? -1 : le : or(o, {
                    startingIndex: oe,
                    disabledIndices: _
                }) : z.current = Math.min(me, or(o, {
                    startingIndex: oe,
                    disabledIndices: _
                })) : m ? z.current = oe <= le ? p && oe !== -1 ? o.current.length : me : or(o, {
                    startingIndex: oe,
                    decrement: !0,
                    disabledIndices: _
                }) : z.current = Math.max(le, or(o, {
                    startingIndex: oe,
                    decrement: !0,
                    disabledIndices: _
                })), Od(o, z.current) && (z.current = -1), L();
            }
        }), $e = $.useMemo(()=>x && n && we && {
                "aria-activedescendant": ve || ce
            }, [
            x,
            n,
            we,
            ve,
            ce
        ]), nt = $.useMemo(()=>({
                "aria-orientation": I === "both" ? void 0 : I,
                ...P ? {} : $e,
                onKeyDown: Re,
                onPointerMove () {
                    K.current = !0;
                }
            }), [
            $e,
            Re,
            I,
            P
        ]), ee = $.useMemo(()=>{
            function ne(le) {
                b === "auto" && cA(le.nativeEvent) && (V.current = !0);
            }
            function oe(le) {
                V.current = b, b === "auto" && kS(le.nativeEvent) && (V.current = !0);
            }
            return {
                ...$e,
                onKeyDown (le) {
                    var me;
                    K.current = !1;
                    const xe = le.key.startsWith("Arrow"), pe = [
                        "Home",
                        "End"
                    ].includes(le.key), Se = xe || pe, Ge = M == null || (me = M.nodesRef.current.find((Hn)=>Hn.id === j)) == null || (me = me.context) == null || (me = me.dataRef) == null ? void 0 : me.current.orientation, Qe = MC(le.key, I, v), dt = LC(le.key, I, v, C), nn = MC(le.key, Ge, v), Gt = nw(le.key, I), Un = (g ? nn : Gt) || le.key === "Enter" || le.key.trim() === "";
                    if (x && n) {
                        const Hn = M?.nodesRef.current.find((kr)=>kr.parentId == null), Mn = M && Hn ? M6(M.nodesRef.current, Hn.id) : null;
                        if (Se && Mn && R) {
                            const kr = new KeyboardEvent("keydown", {
                                key: le.key,
                                bubbles: !0
                            });
                            if (Qe || dt) {
                                var mi, _r;
                                const Fi = ((mi = Mn.context) == null ? void 0 : mi.elements.domReference) === le.currentTarget, ro = dt && !Fi ? (_r = Mn.context) == null ? void 0 : _r.elements.domReference : Qe ? o.current.find((ss)=>ss?.id === ce) : null;
                                ro && (vr(le), ro.dispatchEvent(kr), be(void 0));
                            }
                            if ((Gt || pe) && Mn.context && Mn.context.open && Mn.parentId && le.currentTarget !== Mn.context.elements.domReference) {
                                var Er;
                                vr(le), (Er = Mn.context.elements.domReference) == null || Er.dispatchEvent(kr);
                                return;
                            }
                        }
                        return Re(le);
                    }
                    if (!(!n && !N && xe)) {
                        if (Un) {
                            const Hn = nw(le.key, Ge);
                            Q.current = g && Hn ? null : le.key;
                        }
                        if (g) {
                            nn && (vr(le), n ? (z.current = Zb(o, X.current), L()) : r(!0, le.nativeEvent, "list-navigation"));
                            return;
                        }
                        Gt && (f != null && (z.current = f), vr(le), !n && N ? r(!0, le.nativeEvent, "list-navigation") : Re(le), n && L());
                    }
                },
                onFocus () {
                    n && !x && (z.current = -1, L());
                },
                onPointerDown: oe,
                onPointerEnter: oe,
                onMouseDown: ne,
                onClick: ne
            };
        }, [
            ce,
            $e,
            C,
            Re,
            X,
            b,
            o,
            g,
            L,
            r,
            n,
            N,
            I,
            j,
            v,
            f,
            M,
            x,
            R
        ]);
        return $.useMemo(()=>u ? {
                reference: ee,
                floating: nt,
                item: ke
            } : {}, [
            u,
            ee,
            nt,
            ke
        ]);
    }
    const $C = (e)=>e.replace(/[A-Z]+(?![a-z])|[A-Z]/g, (t, n)=>(n ? "-" : "") + t.toLowerCase());
    function ec(e, t) {
        return typeof e == "function" ? e(t) : e;
    }
    function t8(e, t) {
        const [n, r] = $.useState(e);
        return e && !n && r(!0), $.useEffect(()=>{
            if (!e && n) {
                const i = setTimeout(()=>r(!1), t);
                return ()=>clearTimeout(i);
            }
        }, [
            e,
            n,
            t
        ]), n;
    }
    function n8(e, t) {
        t === void 0 && (t = {});
        const { open: n, elements: { floating: r } } = e, { duration: i = 250 } = t, s = (typeof i == "number" ? i : i.close) || 0, [l, u] = $.useState("unmounted"), f = t8(n, s);
        return !f && l === "close" && u("unmounted"), Kt(()=>{
            if (r) {
                if (n) {
                    u("initial");
                    const p = requestAnimationFrame(()=>{
                        u("open");
                    });
                    return ()=>{
                        cancelAnimationFrame(p);
                    };
                }
                u("close");
            }
        }, [
            n,
            r
        ]), {
            isMounted: f,
            status: l
        };
    }
    function $S(e, t) {
        t === void 0 && (t = {});
        const { initial: n = {
            opacity: 0
        }, open: r, close: i, common: o, duration: s = 250 } = t, l = e.placement, u = l.split("-")[0], f = $.useMemo(()=>({
                side: u,
                placement: l
            }), [
            u,
            l
        ]), p = typeof s == "number", m = (p ? s : s.open) || 0, g = (p ? s : s.close) || 0, [v, x] = $.useState(()=>({
                ...ec(o, f),
                ...ec(n, f)
            })), { isMounted: b, status: S } = n8(e, {
            duration: s
        }), N = Nr(n), _ = Nr(r), I = Nr(i), C = Nr(o);
        return Kt(()=>{
            const A = ec(N.current, f), R = ec(I.current, f), D = ec(C.current, f), O = ec(_.current, f) || Object.keys(A).reduce((E, F)=>(E[F] = "", E), {});
            if (S === "initial" && x((E)=>({
                    transitionProperty: E.transitionProperty,
                    ...D,
                    ...A
                })), S === "open" && x({
                transitionProperty: Object.keys(O).map($C).join(","),
                transitionDuration: m + "ms",
                ...D,
                ...O
            }), S === "close") {
                const E = R || A;
                x({
                    transitionProperty: Object.keys(E).map($C).join(","),
                    transitionDuration: g + "ms",
                    ...D,
                    ...E
                });
            }
        }, [
            g,
            I,
            N,
            _,
            C,
            m,
            S,
            f
        ]), {
            isMounted: b,
            styles: v
        };
    }
    const r8 = $.createContext({
        close () {}
    }), i8 = lt({
        slot: {
            target: [
                "flex",
                "justify-center",
                "items-center"
            ],
            portal: []
        },
        variant: {
            mounted: {
                true: []
            }
        },
        match: [
            {
                if: {
                    mounted: !1
                },
                then: {
                    portal: [
                        "hidden"
                    ]
                }
            }
        ],
        defaults: {
            mounted: !1
        }
    }), o8 = ({ target: e, action: t = "hover", disabled: n = !1, closeOnClick: r = !1, delay: i = 100, float: o, variant: s, tva: l = i8, css: u, children: f })=>{
        const [p, m] = $.useState(!1), { refs: g, floatingStyles: v, context: x } = MS({
            open: p,
            onOpenChange: m,
            placement: "top",
            whileElementsMounted: _A,
            middleware: [
                kA(10),
                CA({
                    fallbackAxisSideDirection: "start"
                }),
                N6()
            ],
            ...o
        }), { getReferenceProps: b, getFloatingProps: S } = LS([
            D6(x, {
                enabled: t === "hover",
                delay: i
            }),
            FS(x, {
                enabled: t === "click"
            }),
            Y6(x),
            DS(x)
        ]), { isMounted: N, styles: _ } = $S(x), I = l({
            mounted: N,
            ...s,
            css: u
        }).slots;
        return d.jsxs(d.Fragment, {
            children: [
                d.jsx("button", {
                    type: "button",
                    ref: g.setReference,
                    ...b(),
                    disabled: n,
                    className: I.target(),
                    children: e
                }),
                d.jsx(AS, {
                    children: d.jsx("div", {
                        ref: g.setFloating,
                        style: {
                            ...v,
                            ..._
                        },
                        className: I.portal(),
                        ...S(),
                        onClick: r ? ()=>{
                            m(!1);
                        } : void 0,
                        children: d.jsx(r8.Provider, {
                            value: {
                                close () {
                                    m(!1);
                                }
                            },
                            children: f
                        })
                    })
                })
            ]
        });
    }, qA = "icon-[system-uicons--menu-hamburger]", BA = lt({
        slot: {
            base: []
        },
        variant: {
            size: {
                xs: "text-sm",
                sm: "text-sm",
                md: "text-base",
                lg: "text-lg",
                xl: "text-xl",
                "2xl": "text-2xl",
                "3xl": "text-3xl",
                "4xl": "text-4xl",
                "5xl": "text-5xl",
                "6xl": "text-6xl",
                "7xl": "text-7xl",
                "8xl": "text-8xl"
            },
            disabled: {
                true: []
            }
        },
        match: [
            {
                if: {
                    disabled: !0
                },
                then: {
                    base: [
                        "pointer-events-none",
                        "cursor-not-allowed",
                        "text-gray-400",
                        "opacity-50"
                    ]
                }
            }
        ],
        defaults: {
            size: "xl",
            disabled: !1
        }
    }), st = $.memo(({ icon: e, variant: t, tva: n = BA, css: r, ...i })=>{
        const o = n({
            ...t,
            css: r
        }).slots;
        return e ? d.jsx("div", {
            className: o.base({
                css: [
                    e
                ]
            }),
            ...i
        }) : null;
    }), s8 = lt({
        slot: {
            base: [
                "p-1",
                "bg-slate-50",
                "border",
                "border-slate-300",
                "rounded-sm",
                "shadow-md",
                "text-slate-500",
                "flex",
                "flex-col",
                "gap-2"
            ]
        },
        variant: {},
        defaults: {}
    }), zt = ({ icon: e = qA, iconProps: t, children: n, variant: r, tva: i = s8, css: o, ...s })=>{
        const l = i({
            ...r,
            css: o
        }).slots;
        return d.jsx(F6, {
            children: d.jsx(o8, {
                action: "click",
                target: d.jsx(st, {
                    icon: e,
                    css: {
                        base: [
                            "cursor-pointer"
                        ]
                    },
                    ...t
                }),
                delay: 100,
                float: {
                    placement: "bottom-start"
                },
                closeOnClick: !0,
                ...s,
                children: d.jsx("div", {
                    className: l.base(),
                    children: n
                })
            })
        });
    }, zA = "icon-[svg-spinners--90-ring-with-bg]", a8 = lt({
        slot: {
            base: [
                "flex",
                "items-center",
                "justify-center",
                "gap-2",
                "group",
                "w-fit",
                "h-fit",
                "rounded-sm",
                "cursor-pointer",
                "hover:shadow-md",
                "hover:shadow-slate-200",
                "transition-all",
                "hover:bg-slate-200",
                "text-slate-600",
                "text-2xl",
                "p-1"
            ]
        },
        variant: {
            disabled: {
                true: [
                    "cursor-not-allowed",
                    "pointer-events-none"
                ]
            },
            loading: {
                true: [
                    "cursor-not-allowed",
                    "pointer-events-none"
                ]
            }
        },
        match: [
            {
                if: {
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "hover:bg-blue-400"
                    ]
                }
            }
        ],
        defaults: {
            disabled: !1,
            loading: !1
        }
    }), Wf = ({ iconEnabled: e, iconDisabled: t, iconLoading: n = zA, disabled: r = !1, loading: i = !1, onClick: o, variant: s, tva: l = a8, css: u, children: f, ...p })=>{
        const m = l({
            disabled: r,
            loading: i,
            ...s,
            css: u
        }).slots;
        return d.jsxs("div", {
            className: m.base(),
            onClick: r ? void 0 : o,
            ...p,
            children: [
                r ? d.jsx(st, {
                    icon: i ? n : t ?? e
                }) : d.jsx(st, {
                    icon: i ? n : e
                }),
                f
            ]
        });
    }, qS = "icon-[iconamoon--close-light]", qC = (e)=>{
        let t;
        const n = new Set, r = (f, p)=>{
            const m = typeof f == "function" ? f(t) : f;
            if (!Object.is(m, t)) {
                const g = t;
                t = p ?? (typeof m != "object" || m === null) ? m : Object.assign({}, t, m), n.forEach((v)=>v(t, g));
            }
        }, i = ()=>t, l = {
            setState: r,
            getState: i,
            getInitialState: ()=>u,
            subscribe: (f)=>(n.add(f), ()=>n.delete(f))
        }, u = t = e(r, i, l);
        return l;
    }, l8 = (e)=>e ? qC(e) : qC, c8 = (e)=>e;
    function u8(e, t = c8) {
        const n = St.useSyncExternalStore(e.subscribe, ()=>t(e.getState()), ()=>t(e.getInitialState()));
        return St.useDebugValue(n), n;
    }
    const BC = (e)=>{
        const t = l8(e), n = (r)=>u8(t, r);
        return Object.assign(n, t), n;
    }, d8 = (e)=>e ? BC(e) : BC, WA = ({ defaultOpen: e = !1 })=>d8((t)=>({
                isOpen: e,
                open () {
                    t({
                        isOpen: !0
                    });
                },
                close () {
                    t({
                        isOpen: !1
                    });
                },
                toggle (n) {
                    t({
                        isOpen: n
                    });
                }
            })), VA = $.createContext(WA({
        defaultOpen: !1
    })), f8 = lt({
        slot: {
            base: [
                "bg-slate-400/75",
                "backdrop-blur-xs",
                "flex",
                "justify-center",
                "py-12"
            ],
            target: [],
            modal: [
                "bg-white",
                "rounded-lg",
                "shadow-lg",
                "p-4",
                "w-fit",
                "h-fit",
                "max-h-full",
                "overflow-y-auto",
                "relative",
                "w-2/3"
            ]
        },
        variant: {
            disabled: {
                true: [
                    "pointer-events-none"
                ]
            },
            loading: {
                true: []
            }
        },
        match: [
            {
                if: {
                    loading: !0
                },
                then: {
                    base: [
                        "pointer-events-none",
                        "opacity-50"
                    ]
                }
            }
        ],
        defaults: {
            disabled: !1,
            loading: !1
        }
    }), xl = ({ target: e, icon: t, textTitle: n, disabled: r = !1, defaultOpen: i = !1, outside: o = !1, variant: s, css: l, tva: u = f8, children: f })=>{
        const p = $.useMemo(()=>WA({
                defaultOpen: i
            }), []), m = p((R)=>R.close), g = P6(), { refs: v, context: x } = MS({
            nodeId: g,
            open: p((R)=>R.isOpen),
            onOpenChange: p((R)=>R.toggle)
        }), b = FS(x), S = DS(x, {
            outsidePress: o
        }), { getReferenceProps: N, getFloatingProps: _ } = LS([
            b,
            S
        ]), { isMounted: I, styles: C } = $S(x), A = u({
            disabled: r,
            ...s,
            css: l
        }).slots;
        return d.jsxs(VA.Provider, {
            value: p,
            children: [
                d.jsx("div", {
                    ref: v.setReference,
                    ...N({
                        disabled: r
                    }),
                    className: A.target(),
                    children: e
                }),
                d.jsx(A6, {
                    id: g,
                    children: I && d.jsx(d.Fragment, {
                        children: d.jsx(AS, {
                            children: d.jsx(G6, {
                                lockScroll: !0,
                                style: C,
                                className: A.base(),
                                children: d.jsx($A, {
                                    context: x,
                                    children: d.jsxs("div", {
                                        ref: v.setFloating,
                                        ..._(),
                                        className: A.modal(),
                                        children: [
                                            d.jsxs("div", {
                                                className: "border-b border-slate-200 mb-2 py-1.5 flex flex-row items-center justify-between select-none",
                                                children: [
                                                    d.jsxs("div", {
                                                        className: "flex flex-row items-center gap-2 pr-4",
                                                        children: [
                                                            t && (jf(t) ? d.jsx(st, {
                                                                icon: t,
                                                                variant: {
                                                                    size: "xl"
                                                                }
                                                            }) : t),
                                                            n && d.jsx("div", {
                                                                className: "text-lg font-semibold text-slate-700",
                                                                children: n
                                                            })
                                                        ]
                                                    }),
                                                    d.jsx(Wf, {
                                                        iconEnabled: qS,
                                                        onClick: ()=>m()
                                                    })
                                                ]
                                            }),
                                            cU(f) ? d.jsx(f, {
                                                close: m
                                            }) : f
                                        ]
                                    })
                                })
                            })
                        })
                    })
                })
            ]
        });
    }, p8 = lt({
        use: oA,
        slot: {},
        variant: {},
        defaults: {}
    }), gt = ({ icon: e, iconProps: t, label: n, disabled: r = !1, hidden: i = !1, variant: o, tva: s = p8, css: l, ...u })=>{
        const f = s({
            ...o,
            disabled: r,
            css: l
        }).slots;
        return i ? null : d.jsxs("div", {
            className: f.base(),
            children: [
                jf(e) ? d.jsx(st, {
                    icon: e,
                    ...t
                }) : e,
                d.jsx(xl, {
                    icon: e,
                    target: n,
                    disabled: r,
                    css: {
                        modal: [
                            "w-1/2"
                        ]
                    },
                    ...u
                })
            ]
        });
    }, h8 = lt({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "rounded-2xl",
                "bg-blue-50",
                "border",
                "border-blue-200",
                "text-xs",
                "px-4",
                "py-0.5",
                "font-bold"
            ]
        },
        variant: {},
        defaults: {}
    }), cr = ({ variant: e, tva: t = h8, css: n, ...r })=>{
        const i = t({
            ...e,
            css: n
        }).slots;
        return d.jsx("div", {
            className: i.base(),
            ...r
        });
    }, m8 = "icon-[material-symbols-light--check-small]", g8 = "icon-[material-symbols-light--close-small]", y8 = "icon-[material-symbols-light--check-indeterminate-small]", v8 = lt({
        use: BA,
        slot: {},
        variant: {
            value: {
                true: "text-green-600",
                false: "text-amber-600"
            }
        },
        defaults: {
            value: !1
        }
    }), by = ({ value: e, checkIcon: t = m8, unCheckIcon: n = g8, undefinedIcon: r = y8, tva: i = v8, ...o })=>e == null ? d.jsx(st, {
            icon: r,
            tva: i,
            ...o
        }) : d.jsx(st, {
            icon: e ? t : n,
            tva: (s)=>i({
                    ...s,
                    value: e
                }),
            ...o
        }), x8 = lt({
        slot: {
            base: [
                "flex",
                "items-center",
                "justify-between",
                "text-sm",
                "font-medium",
                "text-slate-900",
                "w-full"
            ],
            switch: [
                "relative",
                "w-11",
                "h-6",
                "bg-gray-200",
                "peer-focus:outline-hidden",
                "peer-focus:ring-4",
                "peer-focus:ring-blue-300",
                "dark:peer-focus:ring-blue-800",
                "rounded-full",
                "peer",
                "dark:bg-gray-700",
                "peer-checked:after:translate-x-full",
                "peer-checked:rtl:after:-translate-x-full",
                "peer-checked:after:border-white",
                "after:content-['']",
                "after:absolute",
                "after:top-[2px]",
                "after:start-[2px]",
                "after:bg-white",
                "after:border-gray-300",
                "after:border",
                "after:rounded-full",
                "after:h-5",
                "after:w-5",
                "after:transition-all",
                "dark:border-gray-600",
                "peer-checked:bg-blue-600"
            ]
        },
        variant: {},
        defaults: {}
    }), UA = ({ value: e, onChange: t, variant: n, tva: r = x8, css: i, ...o })=>{
        const s = r({
            ...n,
            css: i
        }).slots;
        return d.jsx("div", {
            className: s.base(),
            children: d.jsxs("label", {
                children: [
                    d.jsx("input", {
                        type: "checkbox",
                        checked: !!e,
                        className: "sr-only peer",
                        onChange: (l)=>{
                            t(l.target.checked);
                        },
                        ...o
                    }),
                    d.jsx("div", {
                        className: s.switch()
                    })
                ]
            })
        });
    }, b8 = lt({
        slot: {
            base: [
                "flex",
                "flex-row",
                "items-center",
                "justify-center",
                "gap-2",
                "group",
                "rounded-sm",
                "transition-all",
                "cursor-pointer"
            ]
        },
        variant: {
            variant: {
                primary: [
                    "text-white"
                ],
                secondary: [
                    "text-slate-700"
                ],
                subtle: [
                    "text-slate-600"
                ],
                danger: [
                    "text-slate-50"
                ]
            },
            disabled: {
                true: "cursor-not-allowed"
            },
            size: {
                xs: [],
                sm: [],
                md: []
            }
        },
        match: [
            {
                if: {
                    variant: "primary"
                },
                then: {
                    base: [
                        "bg-blue-400",
                        "hover:bg-blue-500"
                    ]
                }
            },
            {
                if: {
                    variant: "primary",
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "bg-blue-600",
                        "hover:bg-blue-600",
                        "cursor-not-allowed"
                    ]
                }
            },
            {
                if: {
                    variant: "secondary"
                },
                then: {
                    base: [
                        "bg-amber-400",
                        "hover:bg-amber-500"
                    ]
                }
            },
            {
                if: {
                    variant: "secondary",
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "bg-amber-600",
                        "hover:bg-amber-600",
                        "cursor-not-allowed"
                    ]
                }
            },
            {
                if: {
                    variant: "subtle"
                },
                then: {
                    base: [
                        "border",
                        "bg-slate-50",
                        "border-slate-300",
                        "hover:border-slate-400",
                        "text-slate-600",
                        "hover:text-slate-800",
                        "hover:bg-slate-100"
                    ]
                }
            },
            {
                if: {
                    variant: "subtle",
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "bg-blue-50",
                        "hover:bg-blue-50",
                        "cursor-not-allowed"
                    ]
                }
            },
            {
                if: {
                    variant: "danger"
                },
                then: {
                    base: [
                        "bg-red-400",
                        "hover:bg-red-500",
                        "hover:text-white"
                    ]
                }
            },
            {
                if: {
                    size: "xs"
                },
                then: {
                    base: [
                        "py-0.5",
                        "px-1"
                    ]
                }
            },
            {
                if: {
                    size: "sm"
                },
                then: {
                    base: [
                        "py-1",
                        "px-2"
                    ]
                }
            },
            {
                if: {
                    size: "md"
                },
                then: {
                    base: [
                        "py-2",
                        "px-4"
                    ]
                }
            }
        ],
        defaults: {
            variant: "primary",
            disabled: !1,
            size: "md"
        }
    }), ft = $.memo(({ iconEnabled: e, iconDisabled: t, iconLoading: n = zA, iconProps: r, loading: i, variant: o, tva: s = b8, css: l, children: u, ...f })=>{
        const p = s({
            disabled: f.disabled,
            ...o,
            css: l
        }).slots, m = $.useMemo(()=>({
                size: "xl"
            }), []);
        return d.jsxs("button", {
            type: "button",
            className: p.base({
                disabled: f.disabled
            }),
            ...f,
            children: [
                f.disabled ? d.jsx(st, {
                    icon: i === !0 ? n : t,
                    variant: m,
                    ...r
                }) : d.jsx(st, {
                    icon: i === !0 ? n : e,
                    variant: m,
                    ...r
                }),
                u
            ]
        });
    }), BS = $.createContext({
        inline: !1
    }), w8 = lt({
        slot: {
            base: [
                "border",
                "border-slate-100",
                "px-2",
                "py-1",
                "rounded-md"
            ],
            label: [
                "text-sm",
                "font-semibold",
                "text-slate-600",
                "border-b",
                "mb-2"
            ],
            value: []
        },
        variant: {
            inline: {
                true: []
            },
            withBackground: {
                true: []
            }
        },
        match: [
            {
                if: {
                    inline: !0
                },
                then: {
                    base: [
                        "border-none",
                        "flex",
                        "flex-row",
                        "items-center",
                        "gap-2"
                    ],
                    label: [
                        "mb-0",
                        "font-light",
                        "text-md",
                        "text-slate-600",
                        "border-none"
                    ],
                    value: [
                        "text-md",
                        "text-slate-800"
                    ]
                }
            },
            {
                if: {
                    withBackground: !0
                },
                then: {
                    base: [
                        "bg-slate-50",
                        "hover:bg-slate-100"
                    ]
                }
            }
        ],
        defaults: {
            inline: !1,
            withBackground: !0
        }
    }), N8 = ({ inline: e, label: t, value: n, variant: r, tva: i = w8, css: o })=>{
        const s = $.useContext(BS), l = e ?? s?.inline, u = i({
            inline: l,
            ...r,
            css: o
        }).slots;
        return d.jsxs("div", {
            className: u.base(),
            children: [
                t ? d.jsx("div", {
                    className: u.label(),
                    children: t
                }) : null,
                d.jsx("div", {
                    className: u.value(),
                    children: n
                })
            ]
        });
    }, S8 = lt({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-4",
                "border",
                "border-slate-100",
                "p-4",
                "rounded-lg"
            ]
        },
        variant: {
            inline: {
                true: [
                    "flex-row",
                    "border-none",
                    "gap-1",
                    "p-0",
                    "flex-1"
                ]
            }
        },
        defaults: {
            inline: !1
        }
    }), HA = ({ items: e, hidden: t = [], valueOfProps: n, entity: r, variant: i, tva: o = S8, css: s, inline: l = !1 })=>{
        const u = o({
            inline: l,
            ...i,
            css: s
        }).slots;
        return d.jsx(BS.Provider, {
            value: {
                inline: l
            },
            children: d.jsx("div", {
                className: u.base(),
                children: e.filter(({ id: f })=>!t.includes(f)).map(({ id: f, render: p, ...m })=>d.jsx(N8, {
                        value: d.jsx(p, {
                            entity: r
                        }),
                        ...n,
                        ...m
                    }, f))
            })
        });
    }, I8 = lt({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-2"
            ]
        },
        variant: {},
        defaults: {}
    }), zC = "icon-[tabler--dots]", _8 = lt({
        slot: {
            base: [
                "flex",
                "items-center",
                "justify-between",
                "gap-2"
            ],
            sums: [
                "flex",
                "items-center",
                "gap-2",
                "text-sm"
            ]
        },
        variant: {},
        defaults: {}
    }), E8 = lt({
        slot: {
            base: [
                "select-none"
            ],
            list: [
                "flex",
                "items-center",
                "-space-x-px",
                "text-xs",
                "gap-2"
            ],
            page: [
                "flex",
                "items-center",
                "justify-center",
                "w-12",
                "px-2",
                "py-1",
                "rounded-sm",
                "border",
                "border-slate-200",
                "hover:bg-slate-200",
                "cursor-pointer",
                "transition-all",
                "duration-200"
            ]
        },
        variant: {
            current: {
                true: []
            }
        },
        match: [
            {
                if: {
                    current: !0
                },
                then: {
                    page: [
                        "bg-slate-100",
                        "hover:bg-slate-200",
                        "text-slate-800",
                        "font-bold"
                    ]
                }
            }
        ],
        defaults: {
            current: !1
        }
    }), iw = ({ pages: e, page: t, onPage: n, variant: r, tva: i = E8, css: o })=>{
        const s = i({
            ...r,
            css: o
        }).slots;
        return d.jsx("nav", {
            className: s.base(),
            children: d.jsx("ul", {
                className: s.list(),
                children: e.map((l, u)=>d.jsx("li", {
                        className: s.page({
                            current: t === l - 1
                        }),
                        onClick: ()=>n(l - 1),
                        children: l
                    }, `page-${l}-${u}`))
            })
        });
    }, k8 = lt({
        slot: {
            base: [
                "cursor-pointer",
                "bg-slate-50",
                "text-slate-900",
                "text-sm",
                "border",
                "border-slate-300",
                "rounded-sm",
                "focus:border-sky-400",
                "focus:outline-hidden",
                "p-2.5",
                "hover:shadow-md",
                "transition-all",
                "group"
            ],
            input: [
                "flex",
                "flex-row",
                "items-center",
                "justify-between",
                "gap-2"
            ],
            popup: [
                "z-50",
                "cursor-pointer",
                "overflow-y-auto",
                "rounded-sm",
                "border",
                "border-slate-300",
                "bg-white",
                "shadow-lg",
                "focus:outline-hidden"
            ],
            item: [
                "focus:outline-hidden",
                "py-2",
                "px-2.5",
                "flex",
                "items-center",
                "justify-between"
            ]
        },
        variant: {
            disabled: {
                true: [
                    "cursor-not-allowed",
                    "hover:shadow-none",
                    "focus:border-slate-300",
                    "opacity-50"
                ]
            },
            active: {
                true: []
            },
            selected: {
                true: []
            }
        },
        match: [
            {
                if: {
                    selected: !0
                },
                then: {
                    item: [
                        "bg-slate-100"
                    ]
                }
            },
            {
                if: {
                    active: !0
                },
                then: {
                    item: [
                        "bg-slate-200"
                    ]
                }
            }
        ],
        defaults: {
            disabled: !1,
            selected: !1,
            active: !1
        }
    }), KA = ({ items: e, icon: t, defaultValue: n, render: r, textSelect: i, disabled: o = !1, onItem: s, onSelect: l, onChange: u, value: f, variant: p, tva: m = k8, css: g })=>{
        const [v, x] = $.useState(!1), [b, S] = $.useState(null), [N, _] = $.useState(e.findIndex((H)=>H.id === n));
        $.useEffect(()=>{
            _(e.findIndex((H)=>H.id === f));
        }, [
            f
        ]);
        const { refs: I, floatingStyles: C, context: A } = MS({
            placement: "bottom-start",
            open: v,
            onOpenChange: x,
            whileElementsMounted: _A,
            middleware: [
                kA(5),
                CA({
                    padding: 10
                }),
                S6({
                    apply ({ rects: H, elements: G, availableHeight: U }) {
                        Object.assign(G.floating.style, {
                            maxHeight: `${U}px`,
                            minWidth: `${H.reference.width}px`
                        });
                    },
                    padding: 10
                })
            ]
        }), R = $.useRef([]), D = $.useRef(!1), O = FS(A, {
            event: "mousedown"
        }), E = DS(A), F = e8(A, {
            listRef: R,
            activeIndex: b,
            selectedIndex: N,
            onNavigate: S,
            loop: !0
        }), { getReferenceProps: j, getFloatingProps: M, getItemProps: L } = LS([
            E,
            F,
            O
        ]), { isMounted: P, styles: V } = $S(A), z = (H)=>{
            _(H), x(!1);
            const G = e[H];
            G && s?.(G), l?.(G), u?.(G?.id);
        }, Q = N === null ? void 0 : e[N], K = m({
            disabled: o,
            ...p,
            css: g
        }).slots;
        return d.jsxs(d.Fragment, {
            children: [
                d.jsx("div", {
                    tabIndex: o ? -1 : 0,
                    ref: o ? void 0 : I.setReference,
                    "aria-labelledby": "select-label",
                    "aria-autocomplete": "none",
                    ...o ? {} : j(),
                    className: K.base(),
                    children: d.jsxs("div", {
                        className: K.input(),
                        children: [
                            t ? d.jsx(st, {
                                icon: t,
                                variant: {
                                    size: "xl"
                                },
                                css: {
                                    base: [
                                        "text-slate-400",
                                        "group-hover:text-slate-600"
                                    ]
                                }
                            }) : null,
                            Q ? d.jsx(r, {
                                entity: Q
                            }) : i || Wr.rich("Select item"),
                            d.jsx(st, {
                                icon: "icon-[gg--select]",
                                variant: {
                                    size: "xl"
                                },
                                css: {
                                    base: [
                                        !v && "text-slate-400",
                                        v && "text-slate-600",
                                        "group-hover:text-slate-600"
                                    ]
                                }
                            })
                        ]
                    })
                }),
                P && d.jsx(AS, {
                    children: d.jsx($A, {
                        context: A,
                        modal: !1,
                        children: d.jsx("div", {
                            ref: I.setFloating,
                            style: {
                                ...C,
                                ...V
                            },
                            className: K.popup(),
                            ...M(),
                            children: e.map((H, G)=>d.jsxs("div", {
                                    ref: (U)=>{
                                        R.current[G] = U;
                                    },
                                    role: "option",
                                    tabIndex: G === b ? 0 : -1,
                                    "aria-selected": G === N && G === b,
                                    className: K.item({
                                        selected: G === N,
                                        active: G === b
                                    }),
                                    ...L({
                                        onClick () {
                                            z(G);
                                        },
                                        onKeyDown (U) {
                                            U.key === "Enter" && (U.preventDefault(), z(G)), U.key === " " && !D.current && (U.preventDefault(), z(G));
                                        }
                                    }),
                                    children: [
                                        d.jsx(r, {
                                            entity: H
                                        }),
                                        G === N && d.jsx(st, {
                                            icon: "icon-[basil--check-outline]",
                                            variant: {
                                                size: "xl"
                                            }
                                        })
                                    ]
                                }, H.id))
                        })
                    })
                })
            ]
        });
    }, C8 = ({ sizes: e = [
        5,
        15,
        30,
        50,
        100
    ], size: t, onSize: n, ...r })=>d.jsx(KA, {
            items: e.map((i)=>({
                    id: `${i}`,
                    size: i
                })),
            defaultValue: `${t}`,
            value: `${t}`,
            onItem: ({ size: i })=>n(i),
            render: ({ entity: { size: i } })=>i,
            css: {
                base: [
                    "px-8",
                    "py-1"
                ],
                item: [
                    "px-8",
                    "py-1"
                ]
            },
            ...r
        }), WC = ({ cursor: e, count: t, textTotal: n, onPage: r, onSize: i, variant: o, tva: s = _8, css: l })=>{
        const u = $.useMemo(()=>YV({
                page: e.page,
                total: Math.ceil(t.filter / e.size),
                siblings: 1,
                boundaries: 1
            }), [
            e.page,
            t.filter,
            e.size
        ]), f = s({
            ...o,
            css: l
        }).slots;
        return d.jsxs("div", {
            className: f.base(),
            children: [
                u.total > 1 ? d.jsxs("div", {
                    className: "flex items-center justify-center gap-2 text-sm",
                    children: [
                        [
                            "both",
                            "start"
                        ].includes(u.type) && d.jsxs(d.Fragment, {
                            children: [
                                d.jsx(iw, {
                                    page: e.page,
                                    pages: u.start,
                                    onPage: r
                                }),
                                d.jsx(st, {
                                    icon: zC
                                })
                            ]
                        }),
                        d.jsx(iw, {
                            page: e.page,
                            pages: u.pages,
                            onPage: r
                        }),
                        [
                            "both",
                            "end"
                        ].includes(u.type) && d.jsxs(d.Fragment, {
                            children: [
                                d.jsx(st, {
                                    icon: zC
                                }),
                                d.jsx(iw, {
                                    page: e.page,
                                    pages: u.end,
                                    onPage: r
                                })
                            ]
                        })
                    ]
                }) : null,
                d.jsxs("div", {
                    className: f.sums(),
                    children: [
                        d.jsx("div", {
                            children: n
                        }),
                        d.jsx("div", {
                            className: "font-bold",
                            children: t.filter
                        }),
                        t.filter !== t.where && d.jsxs(d.Fragment, {
                            children: [
                                d.jsx("div", {
                                    children: "/"
                                }),
                                d.jsx("div", {
                                    className: "font-semibold",
                                    children: t.where
                                })
                            ]
                        })
                    ]
                }),
                d.jsx(C8, {
                    size: e.size,
                    onSize: i
                })
            ]
        });
    }, VC = "function", mc = "64e10b34-2bf7-4616-9668-f99de5aa046e", j8 = "get", R8 = "has", O8 = "set", { isArray: dm } = Array;
    let { SharedArrayBuffer: vg, window: T8 } = globalThis, { notify: GA, wait: QA, waitAsync: xg } = Atomics, JA = null;
    xg || (xg = (e)=>({
            value: new Promise((t)=>{
                let n = new Worker("data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))");
                n.onmessage = t, n.postMessage(e);
            })
        }));
    try {
        new vg(4);
    } catch  {
        vg = ArrayBuffer;
        const t = new WeakMap;
        if (T8) {
            const n = new Map, { prototype: { postMessage: r } } = Worker, i = (o)=>{
                const s = o.data?.[mc];
                if (!dm(s)) {
                    o.stopImmediatePropagation();
                    const { id: l, sb: u } = s;
                    n.get(l)(u);
                }
            };
            JA = function(o, ...s) {
                const l = o?.[mc];
                if (dm(l)) {
                    const [u, f] = l;
                    t.set(f, u), this.addEventListener("message", i);
                }
                return r.call(this, o, ...s);
            }, xg = (o)=>({
                    value: new Promise((s)=>{
                        n.set(t.get(o), s);
                    }).then((s)=>{
                        n.delete(t.get(o)), t.delete(o);
                        for(let l = 0; l < s.length; l++)o[l] = s[l];
                        return "ok";
                    })
                });
        } else {
            const n = (r, i)=>({
                    [mc]: {
                        id: r,
                        sb: i
                    }
                });
            GA = (r)=>{
                postMessage(n(t.get(r), r));
            }, addEventListener("message", (r)=>{
                const i = r.data?.[mc];
                if (dm(i)) {
                    const [o, s] = i;
                    t.set(s, o);
                }
            });
        }
    }
    const { Int32Array: mN, Map: UC, Uint16Array: gN } = globalThis, { BYTES_PER_ELEMENT: HC } = mN, { BYTES_PER_ELEMENT: P8 } = gN, A8 = (e, t, n)=>{
        for(; QA(e, 0, 0, t) === "timed-out";)n();
    }, yN = new WeakSet, ow = new WeakMap, F8 = {
        value: {
            then: (e)=>e()
        }
    };
    let D8 = 0;
    const zS = (e, { parse: t = JSON.parse, stringify: n = JSON.stringify, transform: r, interrupt: i } = JSON)=>{
        if (!ow.has(e)) {
            const o = JA || e.postMessage, s = (g, ...v)=>o.call(e, {
                    [mc]: v
                }, {
                    transfer: g
                }), l = typeof i === VC ? i : i?.handler, u = i?.delay || 42, f = new TextDecoder("utf-16"), p = (g, v)=>g ? xg(v, 0) : (l ? A8(v, u, l) : QA(v, 0), F8);
            let m = !1;
            ow.set(e, new Proxy(new UC, {
                [R8]: (g, v)=>typeof v == "string" && !v.startsWith("_"),
                [j8]: (g, v)=>v === "then" ? null : (...x)=>{
                        const b = D8++;
                        let S = new mN(new vg(HC * 2)), N = [];
                        yN.has(x.at(-1) || N) && yN.delete(N = x.pop()), s(N, b, S, v, r ? x.map(r) : x);
                        const _ = e !== globalThis;
                        let I = 0;
                        return m && _ && (I = setTimeout(console.warn, 1e3, `💀🔒 - Possible deadlock if proxy.${v}(...args) is awaited`)), p(_, S).value.then(()=>{
                            clearTimeout(I);
                            const C = S[1];
                            if (!C) return;
                            const A = P8 * C;
                            return S = new mN(new vg(A + A % HC)), s([], b, S), p(_, S).value.then(()=>t(f.decode(new gN(S.buffer).slice(0, C))));
                        });
                    },
                [O8] (g, v, x) {
                    const b = typeof x;
                    if (b !== VC) throw new Error(`Unable to assign ${v} as ${b}`);
                    if (!g.size) {
                        const S = new UC;
                        e.addEventListener("message", async (N)=>{
                            const _ = N.data?.[mc];
                            if (dm(_)) {
                                N.stopImmediatePropagation();
                                const [I, C, ...A] = _;
                                let R;
                                if (A.length) {
                                    const [D, O] = A;
                                    if (g.has(D)) {
                                        m = !0;
                                        try {
                                            const E = await g.get(D)(...O);
                                            if (E !== void 0) {
                                                const F = n(r ? r(E) : E);
                                                S.set(I, F), C[1] = F.length;
                                            }
                                        } catch (E) {
                                            R = E;
                                        } finally{
                                            m = !1;
                                        }
                                    } else R = new Error(`Unsupported action: ${D}`);
                                    C[0] = 1;
                                } else {
                                    const D = S.get(I);
                                    S.delete(I);
                                    for(let O = new gN(C.buffer), E = 0; E < D.length; E++)O[E] = D.charCodeAt(E);
                                }
                                if (GA(C, 0), R) throw R;
                            }
                        });
                    }
                    return !!g.set(v, x);
                }
            }));
        }
        return ow.get(e);
    };
    zS.transfer = (...e)=>(yN.add(e), e);
    function KC() {
        let e, t;
        return {
            lock: async ()=>{
                for(; e;)await e;
                e = new Promise((i)=>{
                    t = i;
                });
            },
            unlock: async ()=>{
                const i = t;
                e = void 0, t = void 0, i?.();
            }
        };
    }
    const M8 = "modulepreload", L8 = function(e) {
        return "/" + e;
    }, GC = {}, bg = function(t, n, r) {
        let i = Promise.resolve();
        if (n && n.length > 0) {
            document.getElementsByTagName("link");
            const s = document.querySelector("meta[property=csp-nonce]"), l = s?.nonce || s?.getAttribute("nonce");
            i = Promise.allSettled(n.map((u)=>{
                if (u = L8(u), u in GC) return;
                GC[u] = !0;
                const f = u.endsWith(".css"), p = f ? '[rel="stylesheet"]' : "";
                if (document.querySelector(`link[href="${u}"]${p}`)) return;
                const m = document.createElement("link");
                if (m.rel = f ? "stylesheet" : M8, f || (m.as = "script"), m.crossOrigin = "", m.href = u, l && m.setAttribute("nonce", l), document.head.appendChild(m), f) return new Promise((g, v)=>{
                    m.addEventListener("load", g), m.addEventListener("error", ()=>v(new Error(`Unable to preload CSS for ${u}`)));
                });
            }));
        }
        function o(s) {
            const l = new Event("vite:preloadError", {
                cancelable: !0
            });
            if (l.payload = s, window.dispatchEvent(l), !l.defaultPrevented) throw s;
        }
        return i.then((s)=>{
            for (const l of s || [])l.status === "rejected" && o(l.reason);
            return t().catch(o);
        });
    };
    async function ZA(e, t) {
        let n;
        if (e instanceof Blob ? n = e.stream() : n = e, n instanceof ReadableStream && t) {
            const i = n.getReader();
            switch(t){
                case "callback":
                    return async ()=>(await i.read()).value;
                case "buffer":
                    const o = [];
                    let s = !1;
                    for(; !s;){
                        const p = await i.read();
                        p.value && o.push(p.value), s = p.done;
                    }
                    const l = o.reduce((p, m)=>p + m.length, 0), u = new Uint8Array(l);
                    let f = 0;
                    return o.forEach((p)=>{
                        u.set(p, f), f += p.length;
                    }), u;
            }
        } else return n;
    }
    class wg {
        constructor(t){
            Object.defineProperty(this, "sqlite3InitModule", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: t
            }), Object.defineProperty(this, "sqlite3", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "db", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "config", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "pointers", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: []
            }), Object.defineProperty(this, "storageType", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "memory"
            });
        }
        async init(t) {
            const { databasePath: n } = t, r = this.getFlags(t);
            if (!this.sqlite3InitModule) {
                const { default: i } = await bg(async ()=>{
                    const { default: o } = await import("./index-itAQ-X7t.js");
                    return {
                        default: o
                    };
                }, []);
                this.sqlite3InitModule = i;
            }
            this.sqlite3 || (this.sqlite3 = await this.sqlite3InitModule()), this.db && await this.destroy(), this.db = new this.sqlite3.oo1.DB(n, r), this.config = t;
        }
        async exec(t) {
            if (!this.db) throw new Error("Driver not initialized");
            return this.execOnDb(this.db, t);
        }
        async execBatch(t) {
            if (!this.db) throw new Error("Driver not initialized");
            const n = [];
            return this.db.transaction((r)=>{
                for (let i of t){
                    const o = this.execOnDb(r, i);
                    n.push(o);
                }
            }), n;
        }
        async isDatabasePersisted() {
            return !1;
        }
        async getDatabaseSizeBytes() {
            const n = (await this.exec({
                sql: `SELECT page_count * page_size AS size 
				FROM pragma_page_count(), pragma_page_size()`,
                method: "get"
            }))?.rows?.[0];
            if (typeof n != "number") throw new Error("Failed to query database size");
            return n;
        }
        async createFunction(t) {
            if (!this.db) throw new Error("Driver not initialized");
            switch(t.type){
                case "callback":
                case "scalar":
                    this.db.createFunction({
                        name: t.name,
                        xFunc: (n, ...r)=>t.func(...r),
                        arity: -1
                    });
                    break;
                case "aggregate":
                    this.db.createFunction({
                        name: t.name,
                        xStep: (n, ...r)=>t.func.step(...r),
                        xFinal: (n, ...r)=>t.func.final(...r),
                        arity: -1
                    });
                    break;
            }
        }
        async import(t) {
            if (!this.sqlite3 || !this.db || !this.config) throw new Error("Driver not initialized");
            const n = await ZA(t, "buffer"), r = this.sqlite3.wasm.allocFromTypedArray(n);
            this.pointers.push(r);
            const i = this.sqlite3.capi.sqlite3_deserialize(this.db, "main", r, n.byteLength, n.byteLength, this.config.readOnly ? this.sqlite3.capi.SQLITE_DESERIALIZE_READONLY : this.sqlite3.capi.SQLITE_DESERIALIZE_RESIZEABLE);
            this.db.checkRc(i);
        }
        async export() {
            if (!this.sqlite3 || !this.db) throw new Error("Driver not initialized");
            return {
                name: "database.sqlite3",
                data: this.sqlite3.capi.sqlite3_js_db_export(this.db)
            };
        }
        async clear() {}
        async destroy() {
            this.closeDb(), this.pointers.forEach((t)=>this.sqlite3?.wasm.dealloc(t)), this.pointers = [];
        }
        getFlags(t) {
            const { readOnly: n, verbose: r } = t;
            return [
                n === !0 ? "r" : "cw",
                r === !0 ? "t" : ""
            ].join("");
        }
        execOnDb(t, n) {
            const r = {
                rows: [],
                columns: []
            }, i = t.exec({
                sql: n.sql,
                bind: n.params,
                returnValue: "resultRows",
                rowMode: "array",
                columnNames: r.columns
            });
            switch(n.method){
                case "run":
                    break;
                case "get":
                    r.rows = i[0] ?? [];
                    break;
                case "all":
                default:
                    r.rows = i;
                    break;
            }
            return r;
        }
        closeDb() {
            this.db && (this.db.close(), this.db = void 0);
        }
    }
    class Ah {
        constructor(t){
            Object.defineProperty(this, "driver", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "config", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: {}
            }), Object.defineProperty(this, "userFunctions", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: new Map
            }), Object.defineProperty(this, "initMutex", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: KC()
            }), Object.defineProperty(this, "transactionMutex", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: KC()
            }), Object.defineProperty(this, "transactionKey", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: null
            }), Object.defineProperty(this, "proxy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "reinitChannel", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "onmessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "init", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    if (this.config.databasePath) {
                        await this.initMutex.lock();
                        try {
                            try {
                                await this.driver.init(this.config);
                            } catch  {
                                console.warn(`Persistence failed, so ${this.config.databasePath} will not be saved. For origin private file system persistence, make sure your web server is configured to use the correct HTTP response headers (See https://sqlocal.dallashoffman.com/guide/setup#cross-origin-isolation).`), this.config.databasePath = ":memory:", this.driver = new wg, await this.driver.init(this.config);
                            }
                            this.driver.storageType !== "memory" && (this.reinitChannel = new BroadcastChannel(`_sqlocal_reinit_(${this.config.databasePath})`), this.reinitChannel.onmessage = (o)=>{
                                const s = o.data;
                                if (this.config.clientKey !== s.clientKey) switch(s.type){
                                    case "reinit":
                                        this.init(s.reason);
                                        break;
                                    case "close":
                                        this.driver.destroy();
                                        break;
                                }
                            }), await Promise.all(Array.from(this.userFunctions.values()).map((o)=>this.initUserFunction(o))), await this.execInitStatements(), this.emitMessage({
                                type: "event",
                                event: "connect",
                                reason: i
                            });
                        } catch (o) {
                            this.emitMessage({
                                type: "error",
                                error: o,
                                queryKey: null
                            }), await this.destroy();
                        } finally{
                            await this.initMutex.unlock();
                        }
                    }
                }
            }), Object.defineProperty(this, "postMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i, o)=>{
                    const s = i instanceof MessageEvent ? i.data : i;
                    switch(await this.initMutex.lock(), s.type){
                        case "config":
                            this.editConfig(s);
                            break;
                        case "query":
                        case "batch":
                        case "transaction":
                            this.exec(s);
                            break;
                        case "function":
                            this.createUserFunction(s);
                            break;
                        case "getinfo":
                            this.getDatabaseInfo(s);
                            break;
                        case "import":
                            this.importDb(s);
                            break;
                        case "export":
                            this.exportDb(s);
                            break;
                        case "delete":
                            this.deleteDb(s);
                            break;
                        case "destroy":
                            this.destroy(s);
                            break;
                    }
                    await this.initMutex.unlock();
                }
            }), Object.defineProperty(this, "emitMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (i, o = [])=>{
                    this.onmessage && this.onmessage(i, o);
                }
            }), Object.defineProperty(this, "editConfig", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (i)=>{
                    this.config = i.config, this.init("initial");
                }
            }), Object.defineProperty(this, "exec", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    try {
                        const o = {
                            type: "data",
                            queryKey: i.queryKey,
                            data: []
                        };
                        switch(i.type){
                            case "query":
                                const s = this.transactionKey !== null && this.transactionKey === i.transactionKey;
                                try {
                                    s || await this.transactionMutex.lock();
                                    const l = await this.driver.exec(i);
                                    o.data.push(l);
                                } finally{
                                    s || await this.transactionMutex.unlock();
                                }
                                break;
                            case "batch":
                                try {
                                    await this.transactionMutex.lock();
                                    const l = await this.driver.execBatch(i.statements);
                                    o.data.push(...l);
                                } finally{
                                    await this.transactionMutex.unlock();
                                }
                                break;
                            case "transaction":
                                if (i.action === "begin" && (await this.transactionMutex.lock(), this.transactionKey = i.transactionKey, await this.driver.exec({
                                    sql: "BEGIN"
                                })), (i.action === "commit" || i.action === "rollback") && this.transactionKey !== null && this.transactionKey === i.transactionKey) {
                                    const l = i.action === "commit" ? "COMMIT" : "ROLLBACK";
                                    await this.driver.exec({
                                        sql: l
                                    }), this.transactionKey = null, await this.transactionMutex.unlock();
                                }
                                break;
                        }
                        this.emitMessage(o);
                    } catch (o) {
                        this.emitMessage({
                            type: "error",
                            error: o,
                            queryKey: i.queryKey
                        });
                    }
                }
            }), Object.defineProperty(this, "execInitStatements", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    if (this.config.onInitStatements) for (let i of this.config.onInitStatements)await this.driver.exec(i);
                }
            }), Object.defineProperty(this, "getDatabaseInfo", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    try {
                        this.emitMessage({
                            type: "info",
                            queryKey: i.queryKey,
                            info: {
                                databasePath: this.config.databasePath,
                                storageType: this.driver.storageType,
                                databaseSizeBytes: await this.driver.getDatabaseSizeBytes(),
                                persisted: await this.driver.isDatabasePersisted()
                            }
                        });
                    } catch (o) {
                        this.emitMessage({
                            type: "error",
                            queryKey: i.queryKey,
                            error: o
                        });
                    }
                }
            }), Object.defineProperty(this, "createUserFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    const { functionName: o, functionType: s, queryKey: l } = i;
                    let u;
                    if (this.userFunctions.has(o)) {
                        this.emitMessage({
                            type: "error",
                            error: new Error(`A user-defined function with the name "${o}" has already been created for this SQLocal instance.`),
                            queryKey: l
                        });
                        return;
                    }
                    switch(s){
                        case "callback":
                            u = {
                                type: s,
                                name: o,
                                func: (...f)=>{
                                    this.emitMessage({
                                        type: "callback",
                                        name: o,
                                        args: f
                                    });
                                }
                            };
                            break;
                        case "scalar":
                            u = {
                                type: s,
                                name: o,
                                func: this.proxy[`_sqlocal_func_${o}`]
                            };
                            break;
                        case "aggregate":
                            u = {
                                type: s,
                                name: o,
                                func: {
                                    step: this.proxy[`_sqlocal_func_${o}_step`],
                                    final: this.proxy[`_sqlocal_func_${o}_final`]
                                }
                            };
                            break;
                    }
                    try {
                        await this.initUserFunction(u), this.emitMessage({
                            type: "success",
                            queryKey: l
                        });
                    } catch (f) {
                        this.emitMessage({
                            type: "error",
                            error: f,
                            queryKey: l
                        });
                    }
                }
            }), Object.defineProperty(this, "initUserFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    await this.driver.createFunction(i), this.userFunctions.set(i.name, i);
                }
            }), Object.defineProperty(this, "importDb", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    const { queryKey: o, database: s } = i;
                    let l = !1;
                    try {
                        await this.driver.import(s), this.driver.storageType === "memory" && await this.execInitStatements();
                    } catch (u) {
                        this.emitMessage({
                            type: "error",
                            error: u,
                            queryKey: o
                        }), l = !0;
                    } finally{
                        this.driver.storageType !== "memory" && await this.init("overwrite");
                    }
                    l || this.emitMessage({
                        type: "success",
                        queryKey: o
                    });
                }
            }), Object.defineProperty(this, "exportDb", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    const { queryKey: o } = i;
                    try {
                        const { name: s, data: l } = await this.driver.export();
                        this.emitMessage({
                            type: "buffer",
                            queryKey: o,
                            bufferName: s,
                            buffer: l
                        }, [
                            l
                        ]);
                    } catch (s) {
                        this.emitMessage({
                            type: "error",
                            error: s,
                            queryKey: o
                        });
                    }
                }
            }), Object.defineProperty(this, "deleteDb", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    const { queryKey: o } = i;
                    let s = !1;
                    try {
                        await this.driver.clear();
                    } catch (l) {
                        this.emitMessage({
                            type: "error",
                            error: l,
                            queryKey: o
                        }), s = !0;
                    } finally{
                        await this.init("delete");
                    }
                    s || this.emitMessage({
                        type: "success",
                        queryKey: o
                    });
                }
            }), Object.defineProperty(this, "destroy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    await this.driver.exec({
                        sql: "PRAGMA optimize"
                    }), await this.driver.destroy(), this.reinitChannel && (this.reinitChannel.close(), this.reinitChannel = void 0), i && this.emitMessage({
                        type: "success",
                        queryKey: i.queryKey
                    });
                }
            });
            const r = typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope ? zS(globalThis) : globalThis;
            this.proxy = r, this.driver = t;
        }
    }
    function Ng(e, ...t) {
        return {
            sql: e.join("?"),
            params: t
        };
    }
    function $8(e) {
        return !e.some((t)=>!Array.isArray(t));
    }
    function sw(e, t) {
        let n;
        return $8(e) ? n = e : n = [
            e
        ], n.map((r)=>{
            const i = {};
            return t.forEach((o, s)=>{
                i[o] = r[s];
            }), i;
        });
    }
    function q8(e) {
        return typeof e == "object" && e !== null && "getSQL" in e && typeof e.getSQL == "function";
    }
    function B8(e) {
        return typeof e == "object" && e !== null && "sql" in e && typeof e.sql == "string" && "params" in e;
    }
    function z8(e) {
        if (typeof e == "function" && (e = e(Ng)), q8(e)) try {
            if (!("toSQL" in e && typeof e.toSQL == "function")) throw 1;
            const r = e.toSQL();
            if (!B8(r)) throw 2;
            return r;
        } catch  {
            throw new Error("The passed statement could not be parsed.");
        }
        const t = e.sql;
        let n = [];
        return "params" in e ? n = e.params : "parameters" in e && (n = e.parameters), {
            sql: t,
            params: n
        };
    }
    function aw() {
        return crypto.randomUUID();
    }
    function QC(e, t) {
        let n;
        return typeof e == "string" ? n = {
            sql: e,
            params: t
        } : n = Ng(e, ...t), n;
    }
    async function Fh(e, t, n, r) {
        return !t && "locks" in navigator ? navigator.locks.request(`_sqlocal_mutation_(${n.databasePath})`, {
            mode: e
        }, r) : r();
    }
    class JC extends wg {
        constructor(t, n){
            super(n), Object.defineProperty(this, "storageType", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: t
            });
        }
        async init(t) {
            const n = this.getFlags(t);
            if (t.readOnly) throw new Error(`SQLite storage type "${this.storageType}" does not support read-only mode.`);
            if (!this.sqlite3InitModule) {
                const { default: r } = await bg(async ()=>{
                    const { default: i } = await import("./index-itAQ-X7t.js");
                    return {
                        default: i
                    };
                }, []);
                this.sqlite3InitModule = r;
            }
            this.sqlite3 || (this.sqlite3 = await this.sqlite3InitModule()), this.db && await this.destroy(), this.db = new this.sqlite3.oo1.JsStorageDb({
                filename: this.storageType,
                flags: n
            }), this.config = t;
        }
        async isDatabasePersisted() {
            return navigator.storage?.persisted();
        }
        async getDatabaseSizeBytes() {
            if (!this.db) throw new Error("Driver not initialized");
            return this.db.storageSize();
        }
        async import(t) {
            const n = new wg;
            await n.init({}), await n.import(t), await this.clear(), await n.exec({
                sql: `VACUUM INTO 'file:${this.storageType}?vfs=kvvfs'`
            }), await n.destroy();
        }
        async clear() {
            if (!this.db) throw new Error("Driver not initialized");
            this.db.clearStorage();
        }
        async destroy() {
            this.closeDb();
        }
    }
    class W8 {
        constructor(t){
            Object.defineProperty(this, "config", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "clientKey", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "processor", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "isDestroyed", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: !1
            }), Object.defineProperty(this, "bypassMutationLock", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: !1
            }), Object.defineProperty(this, "userCallbacks", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: new Map
            }), Object.defineProperty(this, "queriesInProgress", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: new Map
            }), Object.defineProperty(this, "proxy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "reinitChannel", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "processMessageEvent", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (u)=>{
                    const f = u instanceof MessageEvent ? u.data : u, p = this.queriesInProgress;
                    switch(f.type){
                        case "success":
                        case "data":
                        case "buffer":
                        case "info":
                        case "error":
                            if (f.queryKey && p.has(f.queryKey)) {
                                const [g, v] = p.get(f.queryKey);
                                f.type === "error" ? v(f.error) : g(f), p.delete(f.queryKey);
                            } else if (f.type === "error") throw f.error;
                            break;
                        case "callback":
                            const m = this.userCallbacks.get(f.name);
                            m && m(...f.args ?? []);
                            break;
                        case "event":
                            this.config.onConnect?.(f.reason);
                            break;
                    }
                }
            }), Object.defineProperty(this, "createQuery", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (u)=>Fh("shared", this.bypassMutationLock || u.type === "import" || u.type === "delete", this.config, async ()=>{
                        if (this.isDestroyed === !0) throw new Error("This SQLocal client has been destroyed. You will need to initialize a new client in order to make further queries.");
                        const f = aw();
                        switch(u.type){
                            case "import":
                                this.processor.postMessage({
                                    ...u,
                                    queryKey: f
                                }, [
                                    u.database
                                ]);
                                break;
                            default:
                                this.processor.postMessage({
                                    ...u,
                                    queryKey: f
                                });
                                break;
                        }
                        return new Promise((p, m)=>{
                            this.queriesInProgress.set(f, [
                                p,
                                m
                            ]);
                        });
                    })
            }), Object.defineProperty(this, "broadcast", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (u)=>{
                    this.reinitChannel.postMessage(u);
                }
            }), Object.defineProperty(this, "exec", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (u, f, p = "all", m)=>{
                    const g = await this.createQuery({
                        type: "query",
                        transactionKey: m,
                        sql: u,
                        params: f,
                        method: p
                    }), v = {
                        rows: [],
                        columns: []
                    };
                    return g.type === "data" && (v.rows = g.data[0]?.rows ?? [], v.columns = g.data[0]?.columns ?? []), v;
                }
            }), Object.defineProperty(this, "execBatch", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (u)=>{
                    const f = await this.createQuery({
                        type: "batch",
                        statements: u
                    }), p = new Array(u.length).fill({
                        rows: [],
                        columns: []
                    });
                    return f.type === "data" && f.data.forEach((m, g)=>{
                        p[g] = m;
                    }), p;
                }
            }), Object.defineProperty(this, "sql", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (u, ...f)=>{
                    const p = QC(u, f), { rows: m, columns: g } = await this.exec(p.sql, p.params, "all");
                    return sw(m, g);
                }
            }), Object.defineProperty(this, "batch", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (u)=>{
                    const f = u(Ng);
                    return (await this.execBatch(f)).map(({ rows: m, columns: g })=>sw(m, g));
                }
            }), Object.defineProperty(this, "beginTransaction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    const u = aw();
                    await this.createQuery({
                        type: "transaction",
                        transactionKey: u,
                        action: "begin"
                    });
                    const f = async (v)=>{
                        const x = z8(v), { rows: b, columns: S } = await this.exec(x.sql, x.params, "all", u);
                        return sw(b, S);
                    };
                    return {
                        query: f,
                        sql: async (v, ...x)=>{
                            const b = QC(v, x);
                            return await f(b);
                        },
                        commit: async ()=>{
                            await this.createQuery({
                                type: "transaction",
                                transactionKey: u,
                                action: "commit"
                            });
                        },
                        rollback: async ()=>{
                            await this.createQuery({
                                type: "transaction",
                                transactionKey: u,
                                action: "rollback"
                            });
                        }
                    };
                }
            }), Object.defineProperty(this, "transaction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (u)=>Fh("exclusive", !1, this.config, async ()=>{
                        let f;
                        this.bypassMutationLock = !0;
                        try {
                            f = await this.beginTransaction();
                            const p = await u({
                                sql: f.sql,
                                query: f.query
                            });
                            return await f.commit(), p;
                        } catch (p) {
                            throw await f?.rollback(), p;
                        } finally{
                            this.bypassMutationLock = !1;
                        }
                    })
            }), Object.defineProperty(this, "createCallbackFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (u, f)=>{
                    await this.createQuery({
                        type: "function",
                        functionName: u,
                        functionType: "callback"
                    }), this.userCallbacks.set(u, f);
                }
            }), Object.defineProperty(this, "createScalarFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (u, f)=>{
                    const p = `_sqlocal_func_${u}`, m = ()=>{
                        this.proxy[p] = f;
                    };
                    this.proxy === globalThis && m(), await this.createQuery({
                        type: "function",
                        functionName: u,
                        functionType: "scalar"
                    }), this.proxy !== globalThis && m();
                }
            }), Object.defineProperty(this, "createAggregateFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (u, f)=>{
                    const p = `_sqlocal_func_${u}`, m = ()=>{
                        this.proxy[`${p}_step`] = f.step, this.proxy[`${p}_final`] = f.final;
                    };
                    this.proxy === globalThis && m(), await this.createQuery({
                        type: "function",
                        functionName: u,
                        functionType: "aggregate"
                    }), this.proxy !== globalThis && m();
                }
            }), Object.defineProperty(this, "getDatabaseInfo", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    const u = await this.createQuery({
                        type: "getinfo"
                    });
                    if (u.type === "info") return u.info;
                    throw new Error("The database failed to return valid information.");
                }
            }), Object.defineProperty(this, "getDatabaseFile", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    const u = await this.createQuery({
                        type: "export"
                    });
                    if (u.type === "buffer") return new File([
                        u.buffer
                    ], u.bufferName, {
                        type: "application/x-sqlite3"
                    });
                    throw new Error("The database failed to export.");
                }
            }), Object.defineProperty(this, "overwriteDatabaseFile", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (u, f)=>{
                    await Fh("exclusive", !1, this.config, async ()=>{
                        try {
                            this.broadcast({
                                type: "close",
                                clientKey: this.clientKey
                            });
                            const p = await ZA(u);
                            await this.createQuery({
                                type: "import",
                                database: p
                            }), typeof f == "function" && (this.bypassMutationLock = !0, await f()), this.broadcast({
                                type: "reinit",
                                clientKey: this.clientKey,
                                reason: "overwrite"
                            });
                        } finally{
                            this.bypassMutationLock = !1;
                        }
                    });
                }
            }), Object.defineProperty(this, "deleteDatabaseFile", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (u)=>{
                    await Fh("exclusive", !1, this.config, async ()=>{
                        try {
                            this.broadcast({
                                type: "close",
                                clientKey: this.clientKey
                            }), await this.createQuery({
                                type: "delete"
                            }), typeof u == "function" && (this.bypassMutationLock = !0, await u()), this.broadcast({
                                type: "reinit",
                                clientKey: this.clientKey,
                                reason: "delete"
                            });
                        } finally{
                            this.bypassMutationLock = !1;
                        }
                    });
                }
            }), Object.defineProperty(this, "destroy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    await this.createQuery({
                        type: "destroy"
                    }), typeof globalThis.Worker < "u" && this.processor instanceof Worker && (this.processor.removeEventListener("message", this.processMessageEvent), this.processor.terminate()), this.queriesInProgress.clear(), this.userCallbacks.clear(), this.reinitChannel.close(), this.isDestroyed = !0;
                }
            });
            const n = typeof t == "string" ? {
                databasePath: t
            } : t, { onInit: r, onConnect: i, processor: o, ...s } = n, { databasePath: l } = s;
            if (this.config = n, this.clientKey = aw(), this.reinitChannel = new BroadcastChannel(`_sqlocal_reinit_(${l})`), typeof o < "u") this.processor = o;
            else if (l === "local" || l === ":localStorage:") {
                const u = new JC("local");
                this.processor = new Ah(u);
            } else if (l === "session" || l === ":sessionStorage:") {
                const u = new JC("session");
                this.processor = new Ah(u);
            } else if (typeof globalThis.Worker < "u" && l !== ":memory:") this.processor = new Worker(new URL("/assets/worker-ChjnweQB.js", import.meta.url), {
                type: "module"
            });
            else {
                const u = new wg;
                this.processor = new Ah(u);
            }
            this.processor instanceof Ah ? (this.processor.onmessage = (u)=>this.processMessageEvent(u), this.proxy = globalThis) : (this.processor.addEventListener("message", this.processMessageEvent), this.proxy = zS(this.processor)), this.processor.postMessage({
                type: "config",
                config: {
                    ...s,
                    clientKey: this.clientKey,
                    onInitStatements: r?.(Ng) ?? []
                }
            });
        }
    }
    class V8 extends W8 {
        constructor(){
            super(...arguments), Object.defineProperty(this, "dialect", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: {
                    createAdapter: ()=>new D5,
                    createDriver: ()=>new U8(this),
                    createIntrospector: (t)=>new F5(t),
                    createQueryCompiler: ()=>new T5
                }
            });
        }
    }
    class U8 {
        constructor(t){
            Object.defineProperty(this, "client", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: t
            });
        }
        async init() {}
        async acquireConnection() {
            return new H8(this.client);
        }
        async releaseConnection() {}
        async beginTransaction(t) {
            t.transaction = await this.client.beginTransaction();
        }
        async commitTransaction(t) {
            await t.transaction?.commit(), t.transaction = null;
        }
        async rollbackTransaction(t) {
            await t.transaction?.rollback(), t.transaction = null;
        }
        async destroy() {
            await this.client.destroy();
        }
    }
    class H8 {
        constructor(t){
            Object.defineProperty(this, "client", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: t
            }), Object.defineProperty(this, "transaction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: null
            });
        }
        async executeQuery(t) {
            let n;
            return this.transaction === null ? n = await this.client.sql(t.sql, ...t.parameters) : n = await this.transaction.query(t), {
                rows: n
            };
        }
        async *streamQuery() {
            throw new Error("SQLite3 does not support streaming.");
        }
    }
    const K8 = ({ database: e, bootstrap: t })=>{
        const { dialect: n } = new V8({
            databasePath: `${e}.sqlite3`,
            onInit (i) {
                return [
                    i`PRAGMA foreign_keys = ON;`,
                    i`PRAGMA journal_mode = WAL;`
                ];
            }
        }), r = new bS({
            dialect: n,
            log: [
                "error"
            ]
        });
        return {
            kysely: r,
            async bootstrap () {
                return t({
                    kysely: r
                });
            }
        };
    };
    function G8(e, t, n, r = {
        leading: !1
    }) {
        const [i, o] = $.useState(e), [s, l] = $.useState(e), u = $.useRef(null), f = $.useRef(!0), p = ()=>window.clearTimeout(u.current || void 0);
        $.useEffect(()=>p, []), $.useEffect(()=>{
            t(i);
        }, [
            i
        ]), $.useEffect(()=>{
            l(e), o(e);
        }, [
            e
        ]);
        const m = $.useCallback((g)=>{
            l(g), p(), f.current && r.leading ? o(g) : u.current = window.setTimeout(()=>{
                f.current = !0, o(g);
            }, n), f.current = !1;
        }, [
            r.leading
        ]);
        return [
            s,
            m
        ];
    }
    const zn = lt({
        slot: {
            base: [
                "border",
                "border-gray-300",
                "rounded-md",
                "p-4",
                "flex",
                "flex-col",
                "gap-2",
                "items-center"
            ],
            fieldset: [
                "flex",
                "flex-col",
                "gap-4",
                "w-full",
                "p-4"
            ],
            legend: [
                "font-bold",
                "text-lg",
                "p-1",
                "border-b",
                "border-slate-400",
                "w-full"
            ],
            input: [
                "w-full",
                "border",
                "border-gray-300",
                "rounded-md",
                "p-2",
                "focus:outline-hidden",
                "focus:ring-2",
                "focus:ring-blue-500",
                "focus:border-transparent"
            ]
        },
        variant: {
            isLoading: {
                true: []
            },
            isSubmitting: {
                true: []
            }
        },
        match: [
            {
                if: {
                    isSubmitting: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "pointer-events-none",
                        "select-none"
                    ]
                }
            }
        ],
        defaults: {
            isLoading: !1,
            isSubmitting: !1
        }
    }), Q8 = "icon-[material-symbols--error-outline]", J8 = lt({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-1",
                "items-center",
                "text-red-600",
                "p-2"
            ]
        },
        variant: {
            highlight: {
                true: []
            },
            compact: {
                true: []
            }
        },
        match: [
            {
                if: {
                    highlight: !0
                },
                then: {
                    base: [
                        "bg-red-100",
                        "p-2",
                        "font-bold",
                        "border",
                        "border-red-200",
                        "rounded-md",
                        "w-full"
                    ]
                }
            },
            {
                if: {
                    compact: !0
                },
                then: {
                    base: [
                        "p-0"
                    ]
                }
            }
        ],
        defaults: {
            highlight: !1,
            compact: !1
        }
    }), Dn = ({ error: e, variant: t, tva: n = J8, css: r })=>{
        const i = n({
            ...t,
            css: r
        }).slots;
        return e?.message ? d.jsxs("div", {
            className: i.base(),
            children: [
                d.jsx(st, {
                    icon: Q8
                }),
                d.jsx("span", {
                    children: Wr.rich(e.message)
                })
            ]
        }) : null;
    }, Z8 = lt({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-1",
                "w-full"
            ],
            input: []
        },
        variant: {
            required: {
                true: []
            },
            disabled: {
                true: []
            },
            isSubmitting: {
                true: []
            },
            isLoading: {
                true: []
            },
            isError: {
                true: []
            }
        },
        match: [
            {
                if: {
                    isError: !0
                },
                then: {
                    base: [
                        "text-red-600"
                    ]
                }
            },
            {
                if: {
                    required: !0
                },
                then: {
                    base: [
                        "text-emerald-600",
                        "font-bold"
                    ]
                }
            },
            {
                if: {
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-75",
                        "cursor-not-allowed"
                    ],
                    input: [
                        "pointer-events-none"
                    ]
                }
            }
        ],
        defaults: {
            required: !1,
            disabled: !1,
            isSubmitting: !1,
            isLoading: !1,
            isError: !1
        }
    }), ot = ({ label: e, hint: t, required: n = !1, formState: r, name: i, disabled: o, children: s, variant: l, tva: u = Z8, css: f })=>{
        const p = u({
            isSubmitting: r.isSubmitting,
            isLoading: r.isLoading,
            isError: !!r.errors[i],
            required: n,
            disabled: o,
            ...l,
            css: f
        }).slots;
        return d.jsxs("div", {
            className: p.base(),
            children: [
                d.jsxs("div", {
                    className: "flex flex-row justify-between",
                    children: [
                        e ? d.jsx("label", {
                            htmlFor: i,
                            children: e
                        }) : null,
                        d.jsx(Dn, {
                            variant: {
                                compact: !0
                            },
                            error: r.errors[i]
                        })
                    ]
                }),
                t ? d.jsx("div", {
                    className: "text-sm italic",
                    children: t
                }) : null,
                d.jsx("div", {
                    className: p.input(),
                    children: s
                })
            ]
        });
    }, mr = ({ form: e, mutation: t, map: n = ({ cleanup: r })=>r() })=>{
        const r = e.handleSubmit(async (i)=>t.mutateAsync(await n({
                values: i,
                cleanup () {
                    return ZV(nA(i));
                }
            }), {
                onError: (o)=>{
                    SS({
                        error: o,
                        errors: [
                            tS({
                                error: o,
                                schema: NS,
                                onError: ({ data: s })=>{
                                    e.setError("root", {
                                        message: s.message
                                    });
                                }
                            })
                        ],
                        onError: (s)=>{
                            e.setError("root", {
                                message: s.message
                            });
                        }
                    });
                }
            }).catch(()=>{}));
        return (i)=>{
            i.stopPropagation(), r(i);
        };
    }, Y8 = lt({
        slot: {
            base: [
                "relative",
                "w-full"
            ],
            search: [
                "absolute",
                "inset-y-0",
                "left-2",
                "flex",
                "items-center",
                "pointer-events-none",
                "text-slate-500"
            ],
            input: [
                "pl-8",
                "py-1",
                "w-full",
                "bg-slate-50",
                "text-slate-900",
                "text-sm",
                "border",
                "border-slate-300",
                "rounded-sm",
                "focus:border-sky-400",
                "focus:outline-hidden",
                "block"
            ],
            clear: [
                "absolute",
                "inset-y-0",
                "right-2",
                "flex",
                "items-center",
                "cursor-pointer",
                "text-slate-300",
                "hover:text-slate-500"
            ]
        },
        variant: {},
        defaults: {}
    }), YA = ({ value: e = "", onFulltext: t, textPlaceholder: n, variant: r, tva: i = Y8, css: o })=>{
        const s = i({
            ...r,
            css: o
        }).slots, [l, u] = G8(e, t, 500);
        return d.jsxs("div", {
            className: s.base(),
            children: [
                d.jsx("div", {
                    className: s.search(),
                    children: d.jsx(st, {
                        icon: "icon-[material-symbols-light--search]",
                        variant: {
                            size: "xl"
                        }
                    })
                }),
                d.jsx("input", {
                    value: l || "",
                    className: s.input(),
                    type: "text",
                    placeholder: n || Wr.text("Fulltext (placeholder)"),
                    onChange: (f)=>{
                        u(f.target.value);
                    }
                }),
                e && d.jsx("div", {
                    className: s.clear(),
                    onClick: ()=>{
                        t("");
                    },
                    children: d.jsx(st, {
                        icon: "icon-[gridicons--cross]",
                        variant: {
                            size: "md"
                        }
                    })
                })
            ]
        });
    }, XA = "icon-[fluent--arrow-down-12-regular]", eF = "icon-[fluent--arrow-up-12-regular]", ci = "icon-[pajamas--go-back]", Sg = "icon-[line-md--confirm-circle]", tF = "icon-[mage--edit]", X8 = "icon-[arcticons--nothing-x]", eH = "icon-[tabler--filter-plus]", ZC = "icon-[tabler--filter-minus]", wy = "icon-[ph--list-dashes-thin]", WS = "icon-[svg-spinners--3-dots-scale]", VS = "icon-[material-symbols-light--logout-sharp]", tH = "icon-[fluent--shape-intersect-20-regular]", Ny = "icon-[fluent--checkbox-unchecked-20-regular]", Sy = "icon-[fluent--checkbox-checked-20-regular]", uf = "icon-[teenyicons--tag-outline]", _n = "icon-[ph--trash]", nH = "icon-[clarity--upload-cloud-line]", US = "icon-[ph--user]", rH = async ({ queryClient: e, keys: t })=>{
        for await (const n of t)await e.invalidateQueries({
            queryKey: n,
            refetchType: "all"
        });
    }, Bt = (e)=>{
        const t = Ug(), n = Ti();
        return async ()=>{
            await rH({
                keys: e,
                queryClient: t
            }), await n.invalidate();
        };
    }, iH = lt({
        slot: {
            base: []
        },
        variant: {},
        defaults: {}
    }), B = $.memo(({ label: e, fallback: t, variant: n, tva: r = iH, css: i })=>{
        const o = r({
            ...n,
            css: i
        }).slots;
        return d.jsx("div", {
            className: o.base(),
            children: Wr.rich(e, t)
        });
    }), oH = lt({
        slot: {
            base: [
                "h-full",
                "w-full",
                "bg-slate-200",
                "rounded-sm",
                "transition-all"
            ],
            progress: [
                "h-full",
                "bg-blue-400",
                "rounded-sm",
                "leading-none",
                "transition-all"
            ]
        },
        variant: {
            size: {
                xs: "h-0.5",
                sm: "h-1",
                md: "h-2",
                lg: "h-4"
            }
        },
        defaults: {
            size: "md"
        }
    }), Iy = $.memo(({ value: e, variant: t, tva: n = oH, css: r })=>{
        const i = n({
            ...t,
            css: r
        }).slots;
        return d.jsx("div", {
            className: i.base(),
            children: d.jsx("div", {
                style: {
                    width: `${Math.max(0, Math.min(100, e))}%`
                },
                className: i.progress()
            })
        });
    }), Qn = [];
    for(let e = 0; e < 256; ++e)Qn.push((e + 256).toString(16).slice(1));
    function sH(e, t = 0) {
        return (Qn[e[t + 0]] + Qn[e[t + 1]] + Qn[e[t + 2]] + Qn[e[t + 3]] + "-" + Qn[e[t + 4]] + Qn[e[t + 5]] + "-" + Qn[e[t + 6]] + Qn[e[t + 7]] + "-" + Qn[e[t + 8]] + Qn[e[t + 9]] + "-" + Qn[e[t + 10]] + Qn[e[t + 11]] + Qn[e[t + 12]] + Qn[e[t + 13]] + Qn[e[t + 14]] + Qn[e[t + 15]]).toLowerCase();
    }
    let lw;
    const aH = new Uint8Array(16);
    function lH() {
        if (!lw) {
            if (typeof crypto > "u" || !crypto.getRandomValues) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
            lw = crypto.getRandomValues.bind(crypto);
        }
        return lw(aH);
    }
    const cH = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto), YC = {
        randomUUID: cH
    };
    function XC(e, t, n) {
        if (YC.randomUUID && !e) return YC.randomUUID();
        e = e || {};
        const r = e.random ?? e.rng?.() ?? lH();
        if (r.length < 16) throw new Error("Random bytes length must be >= 16");
        return r[6] = r[6] & 15 | 64, r[8] = r[8] & 63 | 128, sH(r);
    }
    var cw = {
        exports: {}
    }, uw, ej;
    function uH() {
        if (ej) return uw;
        ej = 1;
        var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
        return uw = e, uw;
    }
    var dw, tj;
    function dH() {
        if (tj) return dw;
        tj = 1;
        var e = uH();
        function t() {}
        function n() {}
        return n.resetWarningCache = t, dw = function() {
            function r(s, l, u, f, p, m) {
                if (m !== e) {
                    var g = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
                    throw g.name = "Invariant Violation", g;
                }
            }
            r.isRequired = r;
            function i() {
                return r;
            }
            var o = {
                array: r,
                bigint: r,
                bool: r,
                func: r,
                number: r,
                object: r,
                string: r,
                symbol: r,
                any: r,
                arrayOf: i,
                element: r,
                elementType: r,
                instanceOf: i,
                node: r,
                objectOf: i,
                oneOf: i,
                oneOfType: i,
                shape: i,
                exact: i,
                checkPropTypes: n,
                resetWarningCache: t
            };
            return o.PropTypes = o, o;
        }, dw;
    }
    var nj;
    function fH() {
        return nj || (nj = 1, cw.exports = dH()()), cw.exports;
    }
    var pH = fH();
    const Pt = fi(pH);
    function bl(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o);
            });
        }
        return new (n || (n = Promise))(function(o, s) {
            function l(p) {
                try {
                    f(r.next(p));
                } catch (m) {
                    s(m);
                }
            }
            function u(p) {
                try {
                    f(r.throw(p));
                } catch (m) {
                    s(m);
                }
            }
            function f(p) {
                p.done ? o(p.value) : i(p.value).then(l, u);
            }
            f((r = r.apply(e, t || [])).next());
        });
    }
    const hH = new Map([
        [
            "1km",
            "application/vnd.1000minds.decision-model+xml"
        ],
        [
            "3dml",
            "text/vnd.in3d.3dml"
        ],
        [
            "3ds",
            "image/x-3ds"
        ],
        [
            "3g2",
            "video/3gpp2"
        ],
        [
            "3gp",
            "video/3gp"
        ],
        [
            "3gpp",
            "video/3gpp"
        ],
        [
            "3mf",
            "model/3mf"
        ],
        [
            "7z",
            "application/x-7z-compressed"
        ],
        [
            "7zip",
            "application/x-7z-compressed"
        ],
        [
            "123",
            "application/vnd.lotus-1-2-3"
        ],
        [
            "aab",
            "application/x-authorware-bin"
        ],
        [
            "aac",
            "audio/x-acc"
        ],
        [
            "aam",
            "application/x-authorware-map"
        ],
        [
            "aas",
            "application/x-authorware-seg"
        ],
        [
            "abw",
            "application/x-abiword"
        ],
        [
            "ac",
            "application/vnd.nokia.n-gage.ac+xml"
        ],
        [
            "ac3",
            "audio/ac3"
        ],
        [
            "acc",
            "application/vnd.americandynamics.acc"
        ],
        [
            "ace",
            "application/x-ace-compressed"
        ],
        [
            "acu",
            "application/vnd.acucobol"
        ],
        [
            "acutc",
            "application/vnd.acucorp"
        ],
        [
            "adp",
            "audio/adpcm"
        ],
        [
            "aep",
            "application/vnd.audiograph"
        ],
        [
            "afm",
            "application/x-font-type1"
        ],
        [
            "afp",
            "application/vnd.ibm.modcap"
        ],
        [
            "ahead",
            "application/vnd.ahead.space"
        ],
        [
            "ai",
            "application/pdf"
        ],
        [
            "aif",
            "audio/x-aiff"
        ],
        [
            "aifc",
            "audio/x-aiff"
        ],
        [
            "aiff",
            "audio/x-aiff"
        ],
        [
            "air",
            "application/vnd.adobe.air-application-installer-package+zip"
        ],
        [
            "ait",
            "application/vnd.dvb.ait"
        ],
        [
            "ami",
            "application/vnd.amiga.ami"
        ],
        [
            "amr",
            "audio/amr"
        ],
        [
            "apk",
            "application/vnd.android.package-archive"
        ],
        [
            "apng",
            "image/apng"
        ],
        [
            "appcache",
            "text/cache-manifest"
        ],
        [
            "application",
            "application/x-ms-application"
        ],
        [
            "apr",
            "application/vnd.lotus-approach"
        ],
        [
            "arc",
            "application/x-freearc"
        ],
        [
            "arj",
            "application/x-arj"
        ],
        [
            "asc",
            "application/pgp-signature"
        ],
        [
            "asf",
            "video/x-ms-asf"
        ],
        [
            "asm",
            "text/x-asm"
        ],
        [
            "aso",
            "application/vnd.accpac.simply.aso"
        ],
        [
            "asx",
            "video/x-ms-asf"
        ],
        [
            "atc",
            "application/vnd.acucorp"
        ],
        [
            "atom",
            "application/atom+xml"
        ],
        [
            "atomcat",
            "application/atomcat+xml"
        ],
        [
            "atomdeleted",
            "application/atomdeleted+xml"
        ],
        [
            "atomsvc",
            "application/atomsvc+xml"
        ],
        [
            "atx",
            "application/vnd.antix.game-component"
        ],
        [
            "au",
            "audio/x-au"
        ],
        [
            "avi",
            "video/x-msvideo"
        ],
        [
            "avif",
            "image/avif"
        ],
        [
            "aw",
            "application/applixware"
        ],
        [
            "azf",
            "application/vnd.airzip.filesecure.azf"
        ],
        [
            "azs",
            "application/vnd.airzip.filesecure.azs"
        ],
        [
            "azv",
            "image/vnd.airzip.accelerator.azv"
        ],
        [
            "azw",
            "application/vnd.amazon.ebook"
        ],
        [
            "b16",
            "image/vnd.pco.b16"
        ],
        [
            "bat",
            "application/x-msdownload"
        ],
        [
            "bcpio",
            "application/x-bcpio"
        ],
        [
            "bdf",
            "application/x-font-bdf"
        ],
        [
            "bdm",
            "application/vnd.syncml.dm+wbxml"
        ],
        [
            "bdoc",
            "application/x-bdoc"
        ],
        [
            "bed",
            "application/vnd.realvnc.bed"
        ],
        [
            "bh2",
            "application/vnd.fujitsu.oasysprs"
        ],
        [
            "bin",
            "application/octet-stream"
        ],
        [
            "blb",
            "application/x-blorb"
        ],
        [
            "blorb",
            "application/x-blorb"
        ],
        [
            "bmi",
            "application/vnd.bmi"
        ],
        [
            "bmml",
            "application/vnd.balsamiq.bmml+xml"
        ],
        [
            "bmp",
            "image/bmp"
        ],
        [
            "book",
            "application/vnd.framemaker"
        ],
        [
            "box",
            "application/vnd.previewsystems.box"
        ],
        [
            "boz",
            "application/x-bzip2"
        ],
        [
            "bpk",
            "application/octet-stream"
        ],
        [
            "bpmn",
            "application/octet-stream"
        ],
        [
            "bsp",
            "model/vnd.valve.source.compiled-map"
        ],
        [
            "btif",
            "image/prs.btif"
        ],
        [
            "buffer",
            "application/octet-stream"
        ],
        [
            "bz",
            "application/x-bzip"
        ],
        [
            "bz2",
            "application/x-bzip2"
        ],
        [
            "c",
            "text/x-c"
        ],
        [
            "c4d",
            "application/vnd.clonk.c4group"
        ],
        [
            "c4f",
            "application/vnd.clonk.c4group"
        ],
        [
            "c4g",
            "application/vnd.clonk.c4group"
        ],
        [
            "c4p",
            "application/vnd.clonk.c4group"
        ],
        [
            "c4u",
            "application/vnd.clonk.c4group"
        ],
        [
            "c11amc",
            "application/vnd.cluetrust.cartomobile-config"
        ],
        [
            "c11amz",
            "application/vnd.cluetrust.cartomobile-config-pkg"
        ],
        [
            "cab",
            "application/vnd.ms-cab-compressed"
        ],
        [
            "caf",
            "audio/x-caf"
        ],
        [
            "cap",
            "application/vnd.tcpdump.pcap"
        ],
        [
            "car",
            "application/vnd.curl.car"
        ],
        [
            "cat",
            "application/vnd.ms-pki.seccat"
        ],
        [
            "cb7",
            "application/x-cbr"
        ],
        [
            "cba",
            "application/x-cbr"
        ],
        [
            "cbr",
            "application/x-cbr"
        ],
        [
            "cbt",
            "application/x-cbr"
        ],
        [
            "cbz",
            "application/x-cbr"
        ],
        [
            "cc",
            "text/x-c"
        ],
        [
            "cco",
            "application/x-cocoa"
        ],
        [
            "cct",
            "application/x-director"
        ],
        [
            "ccxml",
            "application/ccxml+xml"
        ],
        [
            "cdbcmsg",
            "application/vnd.contact.cmsg"
        ],
        [
            "cda",
            "application/x-cdf"
        ],
        [
            "cdf",
            "application/x-netcdf"
        ],
        [
            "cdfx",
            "application/cdfx+xml"
        ],
        [
            "cdkey",
            "application/vnd.mediastation.cdkey"
        ],
        [
            "cdmia",
            "application/cdmi-capability"
        ],
        [
            "cdmic",
            "application/cdmi-container"
        ],
        [
            "cdmid",
            "application/cdmi-domain"
        ],
        [
            "cdmio",
            "application/cdmi-object"
        ],
        [
            "cdmiq",
            "application/cdmi-queue"
        ],
        [
            "cdr",
            "application/cdr"
        ],
        [
            "cdx",
            "chemical/x-cdx"
        ],
        [
            "cdxml",
            "application/vnd.chemdraw+xml"
        ],
        [
            "cdy",
            "application/vnd.cinderella"
        ],
        [
            "cer",
            "application/pkix-cert"
        ],
        [
            "cfs",
            "application/x-cfs-compressed"
        ],
        [
            "cgm",
            "image/cgm"
        ],
        [
            "chat",
            "application/x-chat"
        ],
        [
            "chm",
            "application/vnd.ms-htmlhelp"
        ],
        [
            "chrt",
            "application/vnd.kde.kchart"
        ],
        [
            "cif",
            "chemical/x-cif"
        ],
        [
            "cii",
            "application/vnd.anser-web-certificate-issue-initiation"
        ],
        [
            "cil",
            "application/vnd.ms-artgalry"
        ],
        [
            "cjs",
            "application/node"
        ],
        [
            "cla",
            "application/vnd.claymore"
        ],
        [
            "class",
            "application/octet-stream"
        ],
        [
            "clkk",
            "application/vnd.crick.clicker.keyboard"
        ],
        [
            "clkp",
            "application/vnd.crick.clicker.palette"
        ],
        [
            "clkt",
            "application/vnd.crick.clicker.template"
        ],
        [
            "clkw",
            "application/vnd.crick.clicker.wordbank"
        ],
        [
            "clkx",
            "application/vnd.crick.clicker"
        ],
        [
            "clp",
            "application/x-msclip"
        ],
        [
            "cmc",
            "application/vnd.cosmocaller"
        ],
        [
            "cmdf",
            "chemical/x-cmdf"
        ],
        [
            "cml",
            "chemical/x-cml"
        ],
        [
            "cmp",
            "application/vnd.yellowriver-custom-menu"
        ],
        [
            "cmx",
            "image/x-cmx"
        ],
        [
            "cod",
            "application/vnd.rim.cod"
        ],
        [
            "coffee",
            "text/coffeescript"
        ],
        [
            "com",
            "application/x-msdownload"
        ],
        [
            "conf",
            "text/plain"
        ],
        [
            "cpio",
            "application/x-cpio"
        ],
        [
            "cpp",
            "text/x-c"
        ],
        [
            "cpt",
            "application/mac-compactpro"
        ],
        [
            "crd",
            "application/x-mscardfile"
        ],
        [
            "crl",
            "application/pkix-crl"
        ],
        [
            "crt",
            "application/x-x509-ca-cert"
        ],
        [
            "crx",
            "application/x-chrome-extension"
        ],
        [
            "cryptonote",
            "application/vnd.rig.cryptonote"
        ],
        [
            "csh",
            "application/x-csh"
        ],
        [
            "csl",
            "application/vnd.citationstyles.style+xml"
        ],
        [
            "csml",
            "chemical/x-csml"
        ],
        [
            "csp",
            "application/vnd.commonspace"
        ],
        [
            "csr",
            "application/octet-stream"
        ],
        [
            "css",
            "text/css"
        ],
        [
            "cst",
            "application/x-director"
        ],
        [
            "csv",
            "text/csv"
        ],
        [
            "cu",
            "application/cu-seeme"
        ],
        [
            "curl",
            "text/vnd.curl"
        ],
        [
            "cww",
            "application/prs.cww"
        ],
        [
            "cxt",
            "application/x-director"
        ],
        [
            "cxx",
            "text/x-c"
        ],
        [
            "dae",
            "model/vnd.collada+xml"
        ],
        [
            "daf",
            "application/vnd.mobius.daf"
        ],
        [
            "dart",
            "application/vnd.dart"
        ],
        [
            "dataless",
            "application/vnd.fdsn.seed"
        ],
        [
            "davmount",
            "application/davmount+xml"
        ],
        [
            "dbf",
            "application/vnd.dbf"
        ],
        [
            "dbk",
            "application/docbook+xml"
        ],
        [
            "dcr",
            "application/x-director"
        ],
        [
            "dcurl",
            "text/vnd.curl.dcurl"
        ],
        [
            "dd2",
            "application/vnd.oma.dd2+xml"
        ],
        [
            "ddd",
            "application/vnd.fujixerox.ddd"
        ],
        [
            "ddf",
            "application/vnd.syncml.dmddf+xml"
        ],
        [
            "dds",
            "image/vnd.ms-dds"
        ],
        [
            "deb",
            "application/x-debian-package"
        ],
        [
            "def",
            "text/plain"
        ],
        [
            "deploy",
            "application/octet-stream"
        ],
        [
            "der",
            "application/x-x509-ca-cert"
        ],
        [
            "dfac",
            "application/vnd.dreamfactory"
        ],
        [
            "dgc",
            "application/x-dgc-compressed"
        ],
        [
            "dic",
            "text/x-c"
        ],
        [
            "dir",
            "application/x-director"
        ],
        [
            "dis",
            "application/vnd.mobius.dis"
        ],
        [
            "disposition-notification",
            "message/disposition-notification"
        ],
        [
            "dist",
            "application/octet-stream"
        ],
        [
            "distz",
            "application/octet-stream"
        ],
        [
            "djv",
            "image/vnd.djvu"
        ],
        [
            "djvu",
            "image/vnd.djvu"
        ],
        [
            "dll",
            "application/octet-stream"
        ],
        [
            "dmg",
            "application/x-apple-diskimage"
        ],
        [
            "dmn",
            "application/octet-stream"
        ],
        [
            "dmp",
            "application/vnd.tcpdump.pcap"
        ],
        [
            "dms",
            "application/octet-stream"
        ],
        [
            "dna",
            "application/vnd.dna"
        ],
        [
            "doc",
            "application/msword"
        ],
        [
            "docm",
            "application/vnd.ms-word.template.macroEnabled.12"
        ],
        [
            "docx",
            "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
        ],
        [
            "dot",
            "application/msword"
        ],
        [
            "dotm",
            "application/vnd.ms-word.template.macroEnabled.12"
        ],
        [
            "dotx",
            "application/vnd.openxmlformats-officedocument.wordprocessingml.template"
        ],
        [
            "dp",
            "application/vnd.osgi.dp"
        ],
        [
            "dpg",
            "application/vnd.dpgraph"
        ],
        [
            "dra",
            "audio/vnd.dra"
        ],
        [
            "drle",
            "image/dicom-rle"
        ],
        [
            "dsc",
            "text/prs.lines.tag"
        ],
        [
            "dssc",
            "application/dssc+der"
        ],
        [
            "dtb",
            "application/x-dtbook+xml"
        ],
        [
            "dtd",
            "application/xml-dtd"
        ],
        [
            "dts",
            "audio/vnd.dts"
        ],
        [
            "dtshd",
            "audio/vnd.dts.hd"
        ],
        [
            "dump",
            "application/octet-stream"
        ],
        [
            "dvb",
            "video/vnd.dvb.file"
        ],
        [
            "dvi",
            "application/x-dvi"
        ],
        [
            "dwd",
            "application/atsc-dwd+xml"
        ],
        [
            "dwf",
            "model/vnd.dwf"
        ],
        [
            "dwg",
            "image/vnd.dwg"
        ],
        [
            "dxf",
            "image/vnd.dxf"
        ],
        [
            "dxp",
            "application/vnd.spotfire.dxp"
        ],
        [
            "dxr",
            "application/x-director"
        ],
        [
            "ear",
            "application/java-archive"
        ],
        [
            "ecelp4800",
            "audio/vnd.nuera.ecelp4800"
        ],
        [
            "ecelp7470",
            "audio/vnd.nuera.ecelp7470"
        ],
        [
            "ecelp9600",
            "audio/vnd.nuera.ecelp9600"
        ],
        [
            "ecma",
            "application/ecmascript"
        ],
        [
            "edm",
            "application/vnd.novadigm.edm"
        ],
        [
            "edx",
            "application/vnd.novadigm.edx"
        ],
        [
            "efif",
            "application/vnd.picsel"
        ],
        [
            "ei6",
            "application/vnd.pg.osasli"
        ],
        [
            "elc",
            "application/octet-stream"
        ],
        [
            "emf",
            "image/emf"
        ],
        [
            "eml",
            "message/rfc822"
        ],
        [
            "emma",
            "application/emma+xml"
        ],
        [
            "emotionml",
            "application/emotionml+xml"
        ],
        [
            "emz",
            "application/x-msmetafile"
        ],
        [
            "eol",
            "audio/vnd.digital-winds"
        ],
        [
            "eot",
            "application/vnd.ms-fontobject"
        ],
        [
            "eps",
            "application/postscript"
        ],
        [
            "epub",
            "application/epub+zip"
        ],
        [
            "es",
            "application/ecmascript"
        ],
        [
            "es3",
            "application/vnd.eszigno3+xml"
        ],
        [
            "esa",
            "application/vnd.osgi.subsystem"
        ],
        [
            "esf",
            "application/vnd.epson.esf"
        ],
        [
            "et3",
            "application/vnd.eszigno3+xml"
        ],
        [
            "etx",
            "text/x-setext"
        ],
        [
            "eva",
            "application/x-eva"
        ],
        [
            "evy",
            "application/x-envoy"
        ],
        [
            "exe",
            "application/octet-stream"
        ],
        [
            "exi",
            "application/exi"
        ],
        [
            "exp",
            "application/express"
        ],
        [
            "exr",
            "image/aces"
        ],
        [
            "ext",
            "application/vnd.novadigm.ext"
        ],
        [
            "ez",
            "application/andrew-inset"
        ],
        [
            "ez2",
            "application/vnd.ezpix-album"
        ],
        [
            "ez3",
            "application/vnd.ezpix-package"
        ],
        [
            "f",
            "text/x-fortran"
        ],
        [
            "f4v",
            "video/mp4"
        ],
        [
            "f77",
            "text/x-fortran"
        ],
        [
            "f90",
            "text/x-fortran"
        ],
        [
            "fbs",
            "image/vnd.fastbidsheet"
        ],
        [
            "fcdt",
            "application/vnd.adobe.formscentral.fcdt"
        ],
        [
            "fcs",
            "application/vnd.isac.fcs"
        ],
        [
            "fdf",
            "application/vnd.fdf"
        ],
        [
            "fdt",
            "application/fdt+xml"
        ],
        [
            "fe_launch",
            "application/vnd.denovo.fcselayout-link"
        ],
        [
            "fg5",
            "application/vnd.fujitsu.oasysgp"
        ],
        [
            "fgd",
            "application/x-director"
        ],
        [
            "fh",
            "image/x-freehand"
        ],
        [
            "fh4",
            "image/x-freehand"
        ],
        [
            "fh5",
            "image/x-freehand"
        ],
        [
            "fh7",
            "image/x-freehand"
        ],
        [
            "fhc",
            "image/x-freehand"
        ],
        [
            "fig",
            "application/x-xfig"
        ],
        [
            "fits",
            "image/fits"
        ],
        [
            "flac",
            "audio/x-flac"
        ],
        [
            "fli",
            "video/x-fli"
        ],
        [
            "flo",
            "application/vnd.micrografx.flo"
        ],
        [
            "flv",
            "video/x-flv"
        ],
        [
            "flw",
            "application/vnd.kde.kivio"
        ],
        [
            "flx",
            "text/vnd.fmi.flexstor"
        ],
        [
            "fly",
            "text/vnd.fly"
        ],
        [
            "fm",
            "application/vnd.framemaker"
        ],
        [
            "fnc",
            "application/vnd.frogans.fnc"
        ],
        [
            "fo",
            "application/vnd.software602.filler.form+xml"
        ],
        [
            "for",
            "text/x-fortran"
        ],
        [
            "fpx",
            "image/vnd.fpx"
        ],
        [
            "frame",
            "application/vnd.framemaker"
        ],
        [
            "fsc",
            "application/vnd.fsc.weblaunch"
        ],
        [
            "fst",
            "image/vnd.fst"
        ],
        [
            "ftc",
            "application/vnd.fluxtime.clip"
        ],
        [
            "fti",
            "application/vnd.anser-web-funds-transfer-initiation"
        ],
        [
            "fvt",
            "video/vnd.fvt"
        ],
        [
            "fxp",
            "application/vnd.adobe.fxp"
        ],
        [
            "fxpl",
            "application/vnd.adobe.fxp"
        ],
        [
            "fzs",
            "application/vnd.fuzzysheet"
        ],
        [
            "g2w",
            "application/vnd.geoplan"
        ],
        [
            "g3",
            "image/g3fax"
        ],
        [
            "g3w",
            "application/vnd.geospace"
        ],
        [
            "gac",
            "application/vnd.groove-account"
        ],
        [
            "gam",
            "application/x-tads"
        ],
        [
            "gbr",
            "application/rpki-ghostbusters"
        ],
        [
            "gca",
            "application/x-gca-compressed"
        ],
        [
            "gdl",
            "model/vnd.gdl"
        ],
        [
            "gdoc",
            "application/vnd.google-apps.document"
        ],
        [
            "geo",
            "application/vnd.dynageo"
        ],
        [
            "geojson",
            "application/geo+json"
        ],
        [
            "gex",
            "application/vnd.geometry-explorer"
        ],
        [
            "ggb",
            "application/vnd.geogebra.file"
        ],
        [
            "ggt",
            "application/vnd.geogebra.tool"
        ],
        [
            "ghf",
            "application/vnd.groove-help"
        ],
        [
            "gif",
            "image/gif"
        ],
        [
            "gim",
            "application/vnd.groove-identity-message"
        ],
        [
            "glb",
            "model/gltf-binary"
        ],
        [
            "gltf",
            "model/gltf+json"
        ],
        [
            "gml",
            "application/gml+xml"
        ],
        [
            "gmx",
            "application/vnd.gmx"
        ],
        [
            "gnumeric",
            "application/x-gnumeric"
        ],
        [
            "gpg",
            "application/gpg-keys"
        ],
        [
            "gph",
            "application/vnd.flographit"
        ],
        [
            "gpx",
            "application/gpx+xml"
        ],
        [
            "gqf",
            "application/vnd.grafeq"
        ],
        [
            "gqs",
            "application/vnd.grafeq"
        ],
        [
            "gram",
            "application/srgs"
        ],
        [
            "gramps",
            "application/x-gramps-xml"
        ],
        [
            "gre",
            "application/vnd.geometry-explorer"
        ],
        [
            "grv",
            "application/vnd.groove-injector"
        ],
        [
            "grxml",
            "application/srgs+xml"
        ],
        [
            "gsf",
            "application/x-font-ghostscript"
        ],
        [
            "gsheet",
            "application/vnd.google-apps.spreadsheet"
        ],
        [
            "gslides",
            "application/vnd.google-apps.presentation"
        ],
        [
            "gtar",
            "application/x-gtar"
        ],
        [
            "gtm",
            "application/vnd.groove-tool-message"
        ],
        [
            "gtw",
            "model/vnd.gtw"
        ],
        [
            "gv",
            "text/vnd.graphviz"
        ],
        [
            "gxf",
            "application/gxf"
        ],
        [
            "gxt",
            "application/vnd.geonext"
        ],
        [
            "gz",
            "application/gzip"
        ],
        [
            "gzip",
            "application/gzip"
        ],
        [
            "h",
            "text/x-c"
        ],
        [
            "h261",
            "video/h261"
        ],
        [
            "h263",
            "video/h263"
        ],
        [
            "h264",
            "video/h264"
        ],
        [
            "hal",
            "application/vnd.hal+xml"
        ],
        [
            "hbci",
            "application/vnd.hbci"
        ],
        [
            "hbs",
            "text/x-handlebars-template"
        ],
        [
            "hdd",
            "application/x-virtualbox-hdd"
        ],
        [
            "hdf",
            "application/x-hdf"
        ],
        [
            "heic",
            "image/heic"
        ],
        [
            "heics",
            "image/heic-sequence"
        ],
        [
            "heif",
            "image/heif"
        ],
        [
            "heifs",
            "image/heif-sequence"
        ],
        [
            "hej2",
            "image/hej2k"
        ],
        [
            "held",
            "application/atsc-held+xml"
        ],
        [
            "hh",
            "text/x-c"
        ],
        [
            "hjson",
            "application/hjson"
        ],
        [
            "hlp",
            "application/winhlp"
        ],
        [
            "hpgl",
            "application/vnd.hp-hpgl"
        ],
        [
            "hpid",
            "application/vnd.hp-hpid"
        ],
        [
            "hps",
            "application/vnd.hp-hps"
        ],
        [
            "hqx",
            "application/mac-binhex40"
        ],
        [
            "hsj2",
            "image/hsj2"
        ],
        [
            "htc",
            "text/x-component"
        ],
        [
            "htke",
            "application/vnd.kenameaapp"
        ],
        [
            "htm",
            "text/html"
        ],
        [
            "html",
            "text/html"
        ],
        [
            "hvd",
            "application/vnd.yamaha.hv-dic"
        ],
        [
            "hvp",
            "application/vnd.yamaha.hv-voice"
        ],
        [
            "hvs",
            "application/vnd.yamaha.hv-script"
        ],
        [
            "i2g",
            "application/vnd.intergeo"
        ],
        [
            "icc",
            "application/vnd.iccprofile"
        ],
        [
            "ice",
            "x-conference/x-cooltalk"
        ],
        [
            "icm",
            "application/vnd.iccprofile"
        ],
        [
            "ico",
            "image/x-icon"
        ],
        [
            "ics",
            "text/calendar"
        ],
        [
            "ief",
            "image/ief"
        ],
        [
            "ifb",
            "text/calendar"
        ],
        [
            "ifm",
            "application/vnd.shana.informed.formdata"
        ],
        [
            "iges",
            "model/iges"
        ],
        [
            "igl",
            "application/vnd.igloader"
        ],
        [
            "igm",
            "application/vnd.insors.igm"
        ],
        [
            "igs",
            "model/iges"
        ],
        [
            "igx",
            "application/vnd.micrografx.igx"
        ],
        [
            "iif",
            "application/vnd.shana.informed.interchange"
        ],
        [
            "img",
            "application/octet-stream"
        ],
        [
            "imp",
            "application/vnd.accpac.simply.imp"
        ],
        [
            "ims",
            "application/vnd.ms-ims"
        ],
        [
            "in",
            "text/plain"
        ],
        [
            "ini",
            "text/plain"
        ],
        [
            "ink",
            "application/inkml+xml"
        ],
        [
            "inkml",
            "application/inkml+xml"
        ],
        [
            "install",
            "application/x-install-instructions"
        ],
        [
            "iota",
            "application/vnd.astraea-software.iota"
        ],
        [
            "ipfix",
            "application/ipfix"
        ],
        [
            "ipk",
            "application/vnd.shana.informed.package"
        ],
        [
            "irm",
            "application/vnd.ibm.rights-management"
        ],
        [
            "irp",
            "application/vnd.irepository.package+xml"
        ],
        [
            "iso",
            "application/x-iso9660-image"
        ],
        [
            "itp",
            "application/vnd.shana.informed.formtemplate"
        ],
        [
            "its",
            "application/its+xml"
        ],
        [
            "ivp",
            "application/vnd.immervision-ivp"
        ],
        [
            "ivu",
            "application/vnd.immervision-ivu"
        ],
        [
            "jad",
            "text/vnd.sun.j2me.app-descriptor"
        ],
        [
            "jade",
            "text/jade"
        ],
        [
            "jam",
            "application/vnd.jam"
        ],
        [
            "jar",
            "application/java-archive"
        ],
        [
            "jardiff",
            "application/x-java-archive-diff"
        ],
        [
            "java",
            "text/x-java-source"
        ],
        [
            "jhc",
            "image/jphc"
        ],
        [
            "jisp",
            "application/vnd.jisp"
        ],
        [
            "jls",
            "image/jls"
        ],
        [
            "jlt",
            "application/vnd.hp-jlyt"
        ],
        [
            "jng",
            "image/x-jng"
        ],
        [
            "jnlp",
            "application/x-java-jnlp-file"
        ],
        [
            "joda",
            "application/vnd.joost.joda-archive"
        ],
        [
            "jp2",
            "image/jp2"
        ],
        [
            "jpe",
            "image/jpeg"
        ],
        [
            "jpeg",
            "image/jpeg"
        ],
        [
            "jpf",
            "image/jpx"
        ],
        [
            "jpg",
            "image/jpeg"
        ],
        [
            "jpg2",
            "image/jp2"
        ],
        [
            "jpgm",
            "video/jpm"
        ],
        [
            "jpgv",
            "video/jpeg"
        ],
        [
            "jph",
            "image/jph"
        ],
        [
            "jpm",
            "video/jpm"
        ],
        [
            "jpx",
            "image/jpx"
        ],
        [
            "js",
            "application/javascript"
        ],
        [
            "json",
            "application/json"
        ],
        [
            "json5",
            "application/json5"
        ],
        [
            "jsonld",
            "application/ld+json"
        ],
        [
            "jsonl",
            "application/jsonl"
        ],
        [
            "jsonml",
            "application/jsonml+json"
        ],
        [
            "jsx",
            "text/jsx"
        ],
        [
            "jxr",
            "image/jxr"
        ],
        [
            "jxra",
            "image/jxra"
        ],
        [
            "jxrs",
            "image/jxrs"
        ],
        [
            "jxs",
            "image/jxs"
        ],
        [
            "jxsc",
            "image/jxsc"
        ],
        [
            "jxsi",
            "image/jxsi"
        ],
        [
            "jxss",
            "image/jxss"
        ],
        [
            "kar",
            "audio/midi"
        ],
        [
            "karbon",
            "application/vnd.kde.karbon"
        ],
        [
            "kdb",
            "application/octet-stream"
        ],
        [
            "kdbx",
            "application/x-keepass2"
        ],
        [
            "key",
            "application/x-iwork-keynote-sffkey"
        ],
        [
            "kfo",
            "application/vnd.kde.kformula"
        ],
        [
            "kia",
            "application/vnd.kidspiration"
        ],
        [
            "kml",
            "application/vnd.google-earth.kml+xml"
        ],
        [
            "kmz",
            "application/vnd.google-earth.kmz"
        ],
        [
            "kne",
            "application/vnd.kinar"
        ],
        [
            "knp",
            "application/vnd.kinar"
        ],
        [
            "kon",
            "application/vnd.kde.kontour"
        ],
        [
            "kpr",
            "application/vnd.kde.kpresenter"
        ],
        [
            "kpt",
            "application/vnd.kde.kpresenter"
        ],
        [
            "kpxx",
            "application/vnd.ds-keypoint"
        ],
        [
            "ksp",
            "application/vnd.kde.kspread"
        ],
        [
            "ktr",
            "application/vnd.kahootz"
        ],
        [
            "ktx",
            "image/ktx"
        ],
        [
            "ktx2",
            "image/ktx2"
        ],
        [
            "ktz",
            "application/vnd.kahootz"
        ],
        [
            "kwd",
            "application/vnd.kde.kword"
        ],
        [
            "kwt",
            "application/vnd.kde.kword"
        ],
        [
            "lasxml",
            "application/vnd.las.las+xml"
        ],
        [
            "latex",
            "application/x-latex"
        ],
        [
            "lbd",
            "application/vnd.llamagraphics.life-balance.desktop"
        ],
        [
            "lbe",
            "application/vnd.llamagraphics.life-balance.exchange+xml"
        ],
        [
            "les",
            "application/vnd.hhe.lesson-player"
        ],
        [
            "less",
            "text/less"
        ],
        [
            "lgr",
            "application/lgr+xml"
        ],
        [
            "lha",
            "application/octet-stream"
        ],
        [
            "link66",
            "application/vnd.route66.link66+xml"
        ],
        [
            "list",
            "text/plain"
        ],
        [
            "list3820",
            "application/vnd.ibm.modcap"
        ],
        [
            "listafp",
            "application/vnd.ibm.modcap"
        ],
        [
            "litcoffee",
            "text/coffeescript"
        ],
        [
            "lnk",
            "application/x-ms-shortcut"
        ],
        [
            "log",
            "text/plain"
        ],
        [
            "lostxml",
            "application/lost+xml"
        ],
        [
            "lrf",
            "application/octet-stream"
        ],
        [
            "lrm",
            "application/vnd.ms-lrm"
        ],
        [
            "ltf",
            "application/vnd.frogans.ltf"
        ],
        [
            "lua",
            "text/x-lua"
        ],
        [
            "luac",
            "application/x-lua-bytecode"
        ],
        [
            "lvp",
            "audio/vnd.lucent.voice"
        ],
        [
            "lwp",
            "application/vnd.lotus-wordpro"
        ],
        [
            "lzh",
            "application/octet-stream"
        ],
        [
            "m1v",
            "video/mpeg"
        ],
        [
            "m2a",
            "audio/mpeg"
        ],
        [
            "m2v",
            "video/mpeg"
        ],
        [
            "m3a",
            "audio/mpeg"
        ],
        [
            "m3u",
            "text/plain"
        ],
        [
            "m3u8",
            "application/vnd.apple.mpegurl"
        ],
        [
            "m4a",
            "audio/x-m4a"
        ],
        [
            "m4p",
            "application/mp4"
        ],
        [
            "m4s",
            "video/iso.segment"
        ],
        [
            "m4u",
            "application/vnd.mpegurl"
        ],
        [
            "m4v",
            "video/x-m4v"
        ],
        [
            "m13",
            "application/x-msmediaview"
        ],
        [
            "m14",
            "application/x-msmediaview"
        ],
        [
            "m21",
            "application/mp21"
        ],
        [
            "ma",
            "application/mathematica"
        ],
        [
            "mads",
            "application/mads+xml"
        ],
        [
            "maei",
            "application/mmt-aei+xml"
        ],
        [
            "mag",
            "application/vnd.ecowin.chart"
        ],
        [
            "maker",
            "application/vnd.framemaker"
        ],
        [
            "man",
            "text/troff"
        ],
        [
            "manifest",
            "text/cache-manifest"
        ],
        [
            "map",
            "application/json"
        ],
        [
            "mar",
            "application/octet-stream"
        ],
        [
            "markdown",
            "text/markdown"
        ],
        [
            "mathml",
            "application/mathml+xml"
        ],
        [
            "mb",
            "application/mathematica"
        ],
        [
            "mbk",
            "application/vnd.mobius.mbk"
        ],
        [
            "mbox",
            "application/mbox"
        ],
        [
            "mc1",
            "application/vnd.medcalcdata"
        ],
        [
            "mcd",
            "application/vnd.mcd"
        ],
        [
            "mcurl",
            "text/vnd.curl.mcurl"
        ],
        [
            "md",
            "text/markdown"
        ],
        [
            "mdb",
            "application/x-msaccess"
        ],
        [
            "mdi",
            "image/vnd.ms-modi"
        ],
        [
            "mdx",
            "text/mdx"
        ],
        [
            "me",
            "text/troff"
        ],
        [
            "mesh",
            "model/mesh"
        ],
        [
            "meta4",
            "application/metalink4+xml"
        ],
        [
            "metalink",
            "application/metalink+xml"
        ],
        [
            "mets",
            "application/mets+xml"
        ],
        [
            "mfm",
            "application/vnd.mfmp"
        ],
        [
            "mft",
            "application/rpki-manifest"
        ],
        [
            "mgp",
            "application/vnd.osgeo.mapguide.package"
        ],
        [
            "mgz",
            "application/vnd.proteus.magazine"
        ],
        [
            "mid",
            "audio/midi"
        ],
        [
            "midi",
            "audio/midi"
        ],
        [
            "mie",
            "application/x-mie"
        ],
        [
            "mif",
            "application/vnd.mif"
        ],
        [
            "mime",
            "message/rfc822"
        ],
        [
            "mj2",
            "video/mj2"
        ],
        [
            "mjp2",
            "video/mj2"
        ],
        [
            "mjs",
            "application/javascript"
        ],
        [
            "mk3d",
            "video/x-matroska"
        ],
        [
            "mka",
            "audio/x-matroska"
        ],
        [
            "mkd",
            "text/x-markdown"
        ],
        [
            "mks",
            "video/x-matroska"
        ],
        [
            "mkv",
            "video/x-matroska"
        ],
        [
            "mlp",
            "application/vnd.dolby.mlp"
        ],
        [
            "mmd",
            "application/vnd.chipnuts.karaoke-mmd"
        ],
        [
            "mmf",
            "application/vnd.smaf"
        ],
        [
            "mml",
            "text/mathml"
        ],
        [
            "mmr",
            "image/vnd.fujixerox.edmics-mmr"
        ],
        [
            "mng",
            "video/x-mng"
        ],
        [
            "mny",
            "application/x-msmoney"
        ],
        [
            "mobi",
            "application/x-mobipocket-ebook"
        ],
        [
            "mods",
            "application/mods+xml"
        ],
        [
            "mov",
            "video/quicktime"
        ],
        [
            "movie",
            "video/x-sgi-movie"
        ],
        [
            "mp2",
            "audio/mpeg"
        ],
        [
            "mp2a",
            "audio/mpeg"
        ],
        [
            "mp3",
            "audio/mpeg"
        ],
        [
            "mp4",
            "video/mp4"
        ],
        [
            "mp4a",
            "audio/mp4"
        ],
        [
            "mp4s",
            "application/mp4"
        ],
        [
            "mp4v",
            "video/mp4"
        ],
        [
            "mp21",
            "application/mp21"
        ],
        [
            "mpc",
            "application/vnd.mophun.certificate"
        ],
        [
            "mpd",
            "application/dash+xml"
        ],
        [
            "mpe",
            "video/mpeg"
        ],
        [
            "mpeg",
            "video/mpeg"
        ],
        [
            "mpg",
            "video/mpeg"
        ],
        [
            "mpg4",
            "video/mp4"
        ],
        [
            "mpga",
            "audio/mpeg"
        ],
        [
            "mpkg",
            "application/vnd.apple.installer+xml"
        ],
        [
            "mpm",
            "application/vnd.blueice.multipass"
        ],
        [
            "mpn",
            "application/vnd.mophun.application"
        ],
        [
            "mpp",
            "application/vnd.ms-project"
        ],
        [
            "mpt",
            "application/vnd.ms-project"
        ],
        [
            "mpy",
            "application/vnd.ibm.minipay"
        ],
        [
            "mqy",
            "application/vnd.mobius.mqy"
        ],
        [
            "mrc",
            "application/marc"
        ],
        [
            "mrcx",
            "application/marcxml+xml"
        ],
        [
            "ms",
            "text/troff"
        ],
        [
            "mscml",
            "application/mediaservercontrol+xml"
        ],
        [
            "mseed",
            "application/vnd.fdsn.mseed"
        ],
        [
            "mseq",
            "application/vnd.mseq"
        ],
        [
            "msf",
            "application/vnd.epson.msf"
        ],
        [
            "msg",
            "application/vnd.ms-outlook"
        ],
        [
            "msh",
            "model/mesh"
        ],
        [
            "msi",
            "application/x-msdownload"
        ],
        [
            "msl",
            "application/vnd.mobius.msl"
        ],
        [
            "msm",
            "application/octet-stream"
        ],
        [
            "msp",
            "application/octet-stream"
        ],
        [
            "msty",
            "application/vnd.muvee.style"
        ],
        [
            "mtl",
            "model/mtl"
        ],
        [
            "mts",
            "model/vnd.mts"
        ],
        [
            "mus",
            "application/vnd.musician"
        ],
        [
            "musd",
            "application/mmt-usd+xml"
        ],
        [
            "musicxml",
            "application/vnd.recordare.musicxml+xml"
        ],
        [
            "mvb",
            "application/x-msmediaview"
        ],
        [
            "mvt",
            "application/vnd.mapbox-vector-tile"
        ],
        [
            "mwf",
            "application/vnd.mfer"
        ],
        [
            "mxf",
            "application/mxf"
        ],
        [
            "mxl",
            "application/vnd.recordare.musicxml"
        ],
        [
            "mxmf",
            "audio/mobile-xmf"
        ],
        [
            "mxml",
            "application/xv+xml"
        ],
        [
            "mxs",
            "application/vnd.triscape.mxs"
        ],
        [
            "mxu",
            "video/vnd.mpegurl"
        ],
        [
            "n-gage",
            "application/vnd.nokia.n-gage.symbian.install"
        ],
        [
            "n3",
            "text/n3"
        ],
        [
            "nb",
            "application/mathematica"
        ],
        [
            "nbp",
            "application/vnd.wolfram.player"
        ],
        [
            "nc",
            "application/x-netcdf"
        ],
        [
            "ncx",
            "application/x-dtbncx+xml"
        ],
        [
            "nfo",
            "text/x-nfo"
        ],
        [
            "ngdat",
            "application/vnd.nokia.n-gage.data"
        ],
        [
            "nitf",
            "application/vnd.nitf"
        ],
        [
            "nlu",
            "application/vnd.neurolanguage.nlu"
        ],
        [
            "nml",
            "application/vnd.enliven"
        ],
        [
            "nnd",
            "application/vnd.noblenet-directory"
        ],
        [
            "nns",
            "application/vnd.noblenet-sealer"
        ],
        [
            "nnw",
            "application/vnd.noblenet-web"
        ],
        [
            "npx",
            "image/vnd.net-fpx"
        ],
        [
            "nq",
            "application/n-quads"
        ],
        [
            "nsc",
            "application/x-conference"
        ],
        [
            "nsf",
            "application/vnd.lotus-notes"
        ],
        [
            "nt",
            "application/n-triples"
        ],
        [
            "ntf",
            "application/vnd.nitf"
        ],
        [
            "numbers",
            "application/x-iwork-numbers-sffnumbers"
        ],
        [
            "nzb",
            "application/x-nzb"
        ],
        [
            "oa2",
            "application/vnd.fujitsu.oasys2"
        ],
        [
            "oa3",
            "application/vnd.fujitsu.oasys3"
        ],
        [
            "oas",
            "application/vnd.fujitsu.oasys"
        ],
        [
            "obd",
            "application/x-msbinder"
        ],
        [
            "obgx",
            "application/vnd.openblox.game+xml"
        ],
        [
            "obj",
            "model/obj"
        ],
        [
            "oda",
            "application/oda"
        ],
        [
            "odb",
            "application/vnd.oasis.opendocument.database"
        ],
        [
            "odc",
            "application/vnd.oasis.opendocument.chart"
        ],
        [
            "odf",
            "application/vnd.oasis.opendocument.formula"
        ],
        [
            "odft",
            "application/vnd.oasis.opendocument.formula-template"
        ],
        [
            "odg",
            "application/vnd.oasis.opendocument.graphics"
        ],
        [
            "odi",
            "application/vnd.oasis.opendocument.image"
        ],
        [
            "odm",
            "application/vnd.oasis.opendocument.text-master"
        ],
        [
            "odp",
            "application/vnd.oasis.opendocument.presentation"
        ],
        [
            "ods",
            "application/vnd.oasis.opendocument.spreadsheet"
        ],
        [
            "odt",
            "application/vnd.oasis.opendocument.text"
        ],
        [
            "oga",
            "audio/ogg"
        ],
        [
            "ogex",
            "model/vnd.opengex"
        ],
        [
            "ogg",
            "audio/ogg"
        ],
        [
            "ogv",
            "video/ogg"
        ],
        [
            "ogx",
            "application/ogg"
        ],
        [
            "omdoc",
            "application/omdoc+xml"
        ],
        [
            "onepkg",
            "application/onenote"
        ],
        [
            "onetmp",
            "application/onenote"
        ],
        [
            "onetoc",
            "application/onenote"
        ],
        [
            "onetoc2",
            "application/onenote"
        ],
        [
            "opf",
            "application/oebps-package+xml"
        ],
        [
            "opml",
            "text/x-opml"
        ],
        [
            "oprc",
            "application/vnd.palm"
        ],
        [
            "opus",
            "audio/ogg"
        ],
        [
            "org",
            "text/x-org"
        ],
        [
            "osf",
            "application/vnd.yamaha.openscoreformat"
        ],
        [
            "osfpvg",
            "application/vnd.yamaha.openscoreformat.osfpvg+xml"
        ],
        [
            "osm",
            "application/vnd.openstreetmap.data+xml"
        ],
        [
            "otc",
            "application/vnd.oasis.opendocument.chart-template"
        ],
        [
            "otf",
            "font/otf"
        ],
        [
            "otg",
            "application/vnd.oasis.opendocument.graphics-template"
        ],
        [
            "oth",
            "application/vnd.oasis.opendocument.text-web"
        ],
        [
            "oti",
            "application/vnd.oasis.opendocument.image-template"
        ],
        [
            "otp",
            "application/vnd.oasis.opendocument.presentation-template"
        ],
        [
            "ots",
            "application/vnd.oasis.opendocument.spreadsheet-template"
        ],
        [
            "ott",
            "application/vnd.oasis.opendocument.text-template"
        ],
        [
            "ova",
            "application/x-virtualbox-ova"
        ],
        [
            "ovf",
            "application/x-virtualbox-ovf"
        ],
        [
            "owl",
            "application/rdf+xml"
        ],
        [
            "oxps",
            "application/oxps"
        ],
        [
            "oxt",
            "application/vnd.openofficeorg.extension"
        ],
        [
            "p",
            "text/x-pascal"
        ],
        [
            "p7a",
            "application/x-pkcs7-signature"
        ],
        [
            "p7b",
            "application/x-pkcs7-certificates"
        ],
        [
            "p7c",
            "application/pkcs7-mime"
        ],
        [
            "p7m",
            "application/pkcs7-mime"
        ],
        [
            "p7r",
            "application/x-pkcs7-certreqresp"
        ],
        [
            "p7s",
            "application/pkcs7-signature"
        ],
        [
            "p8",
            "application/pkcs8"
        ],
        [
            "p10",
            "application/x-pkcs10"
        ],
        [
            "p12",
            "application/x-pkcs12"
        ],
        [
            "pac",
            "application/x-ns-proxy-autoconfig"
        ],
        [
            "pages",
            "application/x-iwork-pages-sffpages"
        ],
        [
            "pas",
            "text/x-pascal"
        ],
        [
            "paw",
            "application/vnd.pawaafile"
        ],
        [
            "pbd",
            "application/vnd.powerbuilder6"
        ],
        [
            "pbm",
            "image/x-portable-bitmap"
        ],
        [
            "pcap",
            "application/vnd.tcpdump.pcap"
        ],
        [
            "pcf",
            "application/x-font-pcf"
        ],
        [
            "pcl",
            "application/vnd.hp-pcl"
        ],
        [
            "pclxl",
            "application/vnd.hp-pclxl"
        ],
        [
            "pct",
            "image/x-pict"
        ],
        [
            "pcurl",
            "application/vnd.curl.pcurl"
        ],
        [
            "pcx",
            "image/x-pcx"
        ],
        [
            "pdb",
            "application/x-pilot"
        ],
        [
            "pde",
            "text/x-processing"
        ],
        [
            "pdf",
            "application/pdf"
        ],
        [
            "pem",
            "application/x-x509-user-cert"
        ],
        [
            "pfa",
            "application/x-font-type1"
        ],
        [
            "pfb",
            "application/x-font-type1"
        ],
        [
            "pfm",
            "application/x-font-type1"
        ],
        [
            "pfr",
            "application/font-tdpfr"
        ],
        [
            "pfx",
            "application/x-pkcs12"
        ],
        [
            "pgm",
            "image/x-portable-graymap"
        ],
        [
            "pgn",
            "application/x-chess-pgn"
        ],
        [
            "pgp",
            "application/pgp"
        ],
        [
            "php",
            "application/x-httpd-php"
        ],
        [
            "php3",
            "application/x-httpd-php"
        ],
        [
            "php4",
            "application/x-httpd-php"
        ],
        [
            "phps",
            "application/x-httpd-php-source"
        ],
        [
            "phtml",
            "application/x-httpd-php"
        ],
        [
            "pic",
            "image/x-pict"
        ],
        [
            "pkg",
            "application/octet-stream"
        ],
        [
            "pki",
            "application/pkixcmp"
        ],
        [
            "pkipath",
            "application/pkix-pkipath"
        ],
        [
            "pkpass",
            "application/vnd.apple.pkpass"
        ],
        [
            "pl",
            "application/x-perl"
        ],
        [
            "plb",
            "application/vnd.3gpp.pic-bw-large"
        ],
        [
            "plc",
            "application/vnd.mobius.plc"
        ],
        [
            "plf",
            "application/vnd.pocketlearn"
        ],
        [
            "pls",
            "application/pls+xml"
        ],
        [
            "pm",
            "application/x-perl"
        ],
        [
            "pml",
            "application/vnd.ctc-posml"
        ],
        [
            "png",
            "image/png"
        ],
        [
            "pnm",
            "image/x-portable-anymap"
        ],
        [
            "portpkg",
            "application/vnd.macports.portpkg"
        ],
        [
            "pot",
            "application/vnd.ms-powerpoint"
        ],
        [
            "potm",
            "application/vnd.ms-powerpoint.presentation.macroEnabled.12"
        ],
        [
            "potx",
            "application/vnd.openxmlformats-officedocument.presentationml.template"
        ],
        [
            "ppa",
            "application/vnd.ms-powerpoint"
        ],
        [
            "ppam",
            "application/vnd.ms-powerpoint.addin.macroEnabled.12"
        ],
        [
            "ppd",
            "application/vnd.cups-ppd"
        ],
        [
            "ppm",
            "image/x-portable-pixmap"
        ],
        [
            "pps",
            "application/vnd.ms-powerpoint"
        ],
        [
            "ppsm",
            "application/vnd.ms-powerpoint.slideshow.macroEnabled.12"
        ],
        [
            "ppsx",
            "application/vnd.openxmlformats-officedocument.presentationml.slideshow"
        ],
        [
            "ppt",
            "application/powerpoint"
        ],
        [
            "pptm",
            "application/vnd.ms-powerpoint.presentation.macroEnabled.12"
        ],
        [
            "pptx",
            "application/vnd.openxmlformats-officedocument.presentationml.presentation"
        ],
        [
            "pqa",
            "application/vnd.palm"
        ],
        [
            "prc",
            "application/x-pilot"
        ],
        [
            "pre",
            "application/vnd.lotus-freelance"
        ],
        [
            "prf",
            "application/pics-rules"
        ],
        [
            "provx",
            "application/provenance+xml"
        ],
        [
            "ps",
            "application/postscript"
        ],
        [
            "psb",
            "application/vnd.3gpp.pic-bw-small"
        ],
        [
            "psd",
            "application/x-photoshop"
        ],
        [
            "psf",
            "application/x-font-linux-psf"
        ],
        [
            "pskcxml",
            "application/pskc+xml"
        ],
        [
            "pti",
            "image/prs.pti"
        ],
        [
            "ptid",
            "application/vnd.pvi.ptid1"
        ],
        [
            "pub",
            "application/x-mspublisher"
        ],
        [
            "pvb",
            "application/vnd.3gpp.pic-bw-var"
        ],
        [
            "pwn",
            "application/vnd.3m.post-it-notes"
        ],
        [
            "pya",
            "audio/vnd.ms-playready.media.pya"
        ],
        [
            "pyv",
            "video/vnd.ms-playready.media.pyv"
        ],
        [
            "qam",
            "application/vnd.epson.quickanime"
        ],
        [
            "qbo",
            "application/vnd.intu.qbo"
        ],
        [
            "qfx",
            "application/vnd.intu.qfx"
        ],
        [
            "qps",
            "application/vnd.publishare-delta-tree"
        ],
        [
            "qt",
            "video/quicktime"
        ],
        [
            "qwd",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qwt",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qxb",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qxd",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qxl",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qxt",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "ra",
            "audio/x-realaudio"
        ],
        [
            "ram",
            "audio/x-pn-realaudio"
        ],
        [
            "raml",
            "application/raml+yaml"
        ],
        [
            "rapd",
            "application/route-apd+xml"
        ],
        [
            "rar",
            "application/x-rar"
        ],
        [
            "ras",
            "image/x-cmu-raster"
        ],
        [
            "rcprofile",
            "application/vnd.ipunplugged.rcprofile"
        ],
        [
            "rdf",
            "application/rdf+xml"
        ],
        [
            "rdz",
            "application/vnd.data-vision.rdz"
        ],
        [
            "relo",
            "application/p2p-overlay+xml"
        ],
        [
            "rep",
            "application/vnd.businessobjects"
        ],
        [
            "res",
            "application/x-dtbresource+xml"
        ],
        [
            "rgb",
            "image/x-rgb"
        ],
        [
            "rif",
            "application/reginfo+xml"
        ],
        [
            "rip",
            "audio/vnd.rip"
        ],
        [
            "ris",
            "application/x-research-info-systems"
        ],
        [
            "rl",
            "application/resource-lists+xml"
        ],
        [
            "rlc",
            "image/vnd.fujixerox.edmics-rlc"
        ],
        [
            "rld",
            "application/resource-lists-diff+xml"
        ],
        [
            "rm",
            "audio/x-pn-realaudio"
        ],
        [
            "rmi",
            "audio/midi"
        ],
        [
            "rmp",
            "audio/x-pn-realaudio-plugin"
        ],
        [
            "rms",
            "application/vnd.jcp.javame.midlet-rms"
        ],
        [
            "rmvb",
            "application/vnd.rn-realmedia-vbr"
        ],
        [
            "rnc",
            "application/relax-ng-compact-syntax"
        ],
        [
            "rng",
            "application/xml"
        ],
        [
            "roa",
            "application/rpki-roa"
        ],
        [
            "roff",
            "text/troff"
        ],
        [
            "rp9",
            "application/vnd.cloanto.rp9"
        ],
        [
            "rpm",
            "audio/x-pn-realaudio-plugin"
        ],
        [
            "rpss",
            "application/vnd.nokia.radio-presets"
        ],
        [
            "rpst",
            "application/vnd.nokia.radio-preset"
        ],
        [
            "rq",
            "application/sparql-query"
        ],
        [
            "rs",
            "application/rls-services+xml"
        ],
        [
            "rsa",
            "application/x-pkcs7"
        ],
        [
            "rsat",
            "application/atsc-rsat+xml"
        ],
        [
            "rsd",
            "application/rsd+xml"
        ],
        [
            "rsheet",
            "application/urc-ressheet+xml"
        ],
        [
            "rss",
            "application/rss+xml"
        ],
        [
            "rtf",
            "text/rtf"
        ],
        [
            "rtx",
            "text/richtext"
        ],
        [
            "run",
            "application/x-makeself"
        ],
        [
            "rusd",
            "application/route-usd+xml"
        ],
        [
            "rv",
            "video/vnd.rn-realvideo"
        ],
        [
            "s",
            "text/x-asm"
        ],
        [
            "s3m",
            "audio/s3m"
        ],
        [
            "saf",
            "application/vnd.yamaha.smaf-audio"
        ],
        [
            "sass",
            "text/x-sass"
        ],
        [
            "sbml",
            "application/sbml+xml"
        ],
        [
            "sc",
            "application/vnd.ibm.secure-container"
        ],
        [
            "scd",
            "application/x-msschedule"
        ],
        [
            "scm",
            "application/vnd.lotus-screencam"
        ],
        [
            "scq",
            "application/scvp-cv-request"
        ],
        [
            "scs",
            "application/scvp-cv-response"
        ],
        [
            "scss",
            "text/x-scss"
        ],
        [
            "scurl",
            "text/vnd.curl.scurl"
        ],
        [
            "sda",
            "application/vnd.stardivision.draw"
        ],
        [
            "sdc",
            "application/vnd.stardivision.calc"
        ],
        [
            "sdd",
            "application/vnd.stardivision.impress"
        ],
        [
            "sdkd",
            "application/vnd.solent.sdkm+xml"
        ],
        [
            "sdkm",
            "application/vnd.solent.sdkm+xml"
        ],
        [
            "sdp",
            "application/sdp"
        ],
        [
            "sdw",
            "application/vnd.stardivision.writer"
        ],
        [
            "sea",
            "application/octet-stream"
        ],
        [
            "see",
            "application/vnd.seemail"
        ],
        [
            "seed",
            "application/vnd.fdsn.seed"
        ],
        [
            "sema",
            "application/vnd.sema"
        ],
        [
            "semd",
            "application/vnd.semd"
        ],
        [
            "semf",
            "application/vnd.semf"
        ],
        [
            "senmlx",
            "application/senml+xml"
        ],
        [
            "sensmlx",
            "application/sensml+xml"
        ],
        [
            "ser",
            "application/java-serialized-object"
        ],
        [
            "setpay",
            "application/set-payment-initiation"
        ],
        [
            "setreg",
            "application/set-registration-initiation"
        ],
        [
            "sfd-hdstx",
            "application/vnd.hydrostatix.sof-data"
        ],
        [
            "sfs",
            "application/vnd.spotfire.sfs"
        ],
        [
            "sfv",
            "text/x-sfv"
        ],
        [
            "sgi",
            "image/sgi"
        ],
        [
            "sgl",
            "application/vnd.stardivision.writer-global"
        ],
        [
            "sgm",
            "text/sgml"
        ],
        [
            "sgml",
            "text/sgml"
        ],
        [
            "sh",
            "application/x-sh"
        ],
        [
            "shar",
            "application/x-shar"
        ],
        [
            "shex",
            "text/shex"
        ],
        [
            "shf",
            "application/shf+xml"
        ],
        [
            "shtml",
            "text/html"
        ],
        [
            "sid",
            "image/x-mrsid-image"
        ],
        [
            "sieve",
            "application/sieve"
        ],
        [
            "sig",
            "application/pgp-signature"
        ],
        [
            "sil",
            "audio/silk"
        ],
        [
            "silo",
            "model/mesh"
        ],
        [
            "sis",
            "application/vnd.symbian.install"
        ],
        [
            "sisx",
            "application/vnd.symbian.install"
        ],
        [
            "sit",
            "application/x-stuffit"
        ],
        [
            "sitx",
            "application/x-stuffitx"
        ],
        [
            "siv",
            "application/sieve"
        ],
        [
            "skd",
            "application/vnd.koan"
        ],
        [
            "skm",
            "application/vnd.koan"
        ],
        [
            "skp",
            "application/vnd.koan"
        ],
        [
            "skt",
            "application/vnd.koan"
        ],
        [
            "sldm",
            "application/vnd.ms-powerpoint.slide.macroenabled.12"
        ],
        [
            "sldx",
            "application/vnd.openxmlformats-officedocument.presentationml.slide"
        ],
        [
            "slim",
            "text/slim"
        ],
        [
            "slm",
            "text/slim"
        ],
        [
            "sls",
            "application/route-s-tsid+xml"
        ],
        [
            "slt",
            "application/vnd.epson.salt"
        ],
        [
            "sm",
            "application/vnd.stepmania.stepchart"
        ],
        [
            "smf",
            "application/vnd.stardivision.math"
        ],
        [
            "smi",
            "application/smil"
        ],
        [
            "smil",
            "application/smil"
        ],
        [
            "smv",
            "video/x-smv"
        ],
        [
            "smzip",
            "application/vnd.stepmania.package"
        ],
        [
            "snd",
            "audio/basic"
        ],
        [
            "snf",
            "application/x-font-snf"
        ],
        [
            "so",
            "application/octet-stream"
        ],
        [
            "spc",
            "application/x-pkcs7-certificates"
        ],
        [
            "spdx",
            "text/spdx"
        ],
        [
            "spf",
            "application/vnd.yamaha.smaf-phrase"
        ],
        [
            "spl",
            "application/x-futuresplash"
        ],
        [
            "spot",
            "text/vnd.in3d.spot"
        ],
        [
            "spp",
            "application/scvp-vp-response"
        ],
        [
            "spq",
            "application/scvp-vp-request"
        ],
        [
            "spx",
            "audio/ogg"
        ],
        [
            "sql",
            "application/x-sql"
        ],
        [
            "src",
            "application/x-wais-source"
        ],
        [
            "srt",
            "application/x-subrip"
        ],
        [
            "sru",
            "application/sru+xml"
        ],
        [
            "srx",
            "application/sparql-results+xml"
        ],
        [
            "ssdl",
            "application/ssdl+xml"
        ],
        [
            "sse",
            "application/vnd.kodak-descriptor"
        ],
        [
            "ssf",
            "application/vnd.epson.ssf"
        ],
        [
            "ssml",
            "application/ssml+xml"
        ],
        [
            "sst",
            "application/octet-stream"
        ],
        [
            "st",
            "application/vnd.sailingtracker.track"
        ],
        [
            "stc",
            "application/vnd.sun.xml.calc.template"
        ],
        [
            "std",
            "application/vnd.sun.xml.draw.template"
        ],
        [
            "stf",
            "application/vnd.wt.stf"
        ],
        [
            "sti",
            "application/vnd.sun.xml.impress.template"
        ],
        [
            "stk",
            "application/hyperstudio"
        ],
        [
            "stl",
            "model/stl"
        ],
        [
            "stpx",
            "model/step+xml"
        ],
        [
            "stpxz",
            "model/step-xml+zip"
        ],
        [
            "stpz",
            "model/step+zip"
        ],
        [
            "str",
            "application/vnd.pg.format"
        ],
        [
            "stw",
            "application/vnd.sun.xml.writer.template"
        ],
        [
            "styl",
            "text/stylus"
        ],
        [
            "stylus",
            "text/stylus"
        ],
        [
            "sub",
            "text/vnd.dvb.subtitle"
        ],
        [
            "sus",
            "application/vnd.sus-calendar"
        ],
        [
            "susp",
            "application/vnd.sus-calendar"
        ],
        [
            "sv4cpio",
            "application/x-sv4cpio"
        ],
        [
            "sv4crc",
            "application/x-sv4crc"
        ],
        [
            "svc",
            "application/vnd.dvb.service"
        ],
        [
            "svd",
            "application/vnd.svd"
        ],
        [
            "svg",
            "image/svg+xml"
        ],
        [
            "svgz",
            "image/svg+xml"
        ],
        [
            "swa",
            "application/x-director"
        ],
        [
            "swf",
            "application/x-shockwave-flash"
        ],
        [
            "swi",
            "application/vnd.aristanetworks.swi"
        ],
        [
            "swidtag",
            "application/swid+xml"
        ],
        [
            "sxc",
            "application/vnd.sun.xml.calc"
        ],
        [
            "sxd",
            "application/vnd.sun.xml.draw"
        ],
        [
            "sxg",
            "application/vnd.sun.xml.writer.global"
        ],
        [
            "sxi",
            "application/vnd.sun.xml.impress"
        ],
        [
            "sxm",
            "application/vnd.sun.xml.math"
        ],
        [
            "sxw",
            "application/vnd.sun.xml.writer"
        ],
        [
            "t",
            "text/troff"
        ],
        [
            "t3",
            "application/x-t3vm-image"
        ],
        [
            "t38",
            "image/t38"
        ],
        [
            "taglet",
            "application/vnd.mynfc"
        ],
        [
            "tao",
            "application/vnd.tao.intent-module-archive"
        ],
        [
            "tap",
            "image/vnd.tencent.tap"
        ],
        [
            "tar",
            "application/x-tar"
        ],
        [
            "tcap",
            "application/vnd.3gpp2.tcap"
        ],
        [
            "tcl",
            "application/x-tcl"
        ],
        [
            "td",
            "application/urc-targetdesc+xml"
        ],
        [
            "teacher",
            "application/vnd.smart.teacher"
        ],
        [
            "tei",
            "application/tei+xml"
        ],
        [
            "teicorpus",
            "application/tei+xml"
        ],
        [
            "tex",
            "application/x-tex"
        ],
        [
            "texi",
            "application/x-texinfo"
        ],
        [
            "texinfo",
            "application/x-texinfo"
        ],
        [
            "text",
            "text/plain"
        ],
        [
            "tfi",
            "application/thraud+xml"
        ],
        [
            "tfm",
            "application/x-tex-tfm"
        ],
        [
            "tfx",
            "image/tiff-fx"
        ],
        [
            "tga",
            "image/x-tga"
        ],
        [
            "tgz",
            "application/x-tar"
        ],
        [
            "thmx",
            "application/vnd.ms-officetheme"
        ],
        [
            "tif",
            "image/tiff"
        ],
        [
            "tiff",
            "image/tiff"
        ],
        [
            "tk",
            "application/x-tcl"
        ],
        [
            "tmo",
            "application/vnd.tmobile-livetv"
        ],
        [
            "toml",
            "application/toml"
        ],
        [
            "torrent",
            "application/x-bittorrent"
        ],
        [
            "tpl",
            "application/vnd.groove-tool-template"
        ],
        [
            "tpt",
            "application/vnd.trid.tpt"
        ],
        [
            "tr",
            "text/troff"
        ],
        [
            "tra",
            "application/vnd.trueapp"
        ],
        [
            "trig",
            "application/trig"
        ],
        [
            "trm",
            "application/x-msterminal"
        ],
        [
            "ts",
            "video/mp2t"
        ],
        [
            "tsd",
            "application/timestamped-data"
        ],
        [
            "tsv",
            "text/tab-separated-values"
        ],
        [
            "ttc",
            "font/collection"
        ],
        [
            "ttf",
            "font/ttf"
        ],
        [
            "ttl",
            "text/turtle"
        ],
        [
            "ttml",
            "application/ttml+xml"
        ],
        [
            "twd",
            "application/vnd.simtech-mindmapper"
        ],
        [
            "twds",
            "application/vnd.simtech-mindmapper"
        ],
        [
            "txd",
            "application/vnd.genomatix.tuxedo"
        ],
        [
            "txf",
            "application/vnd.mobius.txf"
        ],
        [
            "txt",
            "text/plain"
        ],
        [
            "u8dsn",
            "message/global-delivery-status"
        ],
        [
            "u8hdr",
            "message/global-headers"
        ],
        [
            "u8mdn",
            "message/global-disposition-notification"
        ],
        [
            "u8msg",
            "message/global"
        ],
        [
            "u32",
            "application/x-authorware-bin"
        ],
        [
            "ubj",
            "application/ubjson"
        ],
        [
            "udeb",
            "application/x-debian-package"
        ],
        [
            "ufd",
            "application/vnd.ufdl"
        ],
        [
            "ufdl",
            "application/vnd.ufdl"
        ],
        [
            "ulx",
            "application/x-glulx"
        ],
        [
            "umj",
            "application/vnd.umajin"
        ],
        [
            "unityweb",
            "application/vnd.unity"
        ],
        [
            "uoml",
            "application/vnd.uoml+xml"
        ],
        [
            "uri",
            "text/uri-list"
        ],
        [
            "uris",
            "text/uri-list"
        ],
        [
            "urls",
            "text/uri-list"
        ],
        [
            "usdz",
            "model/vnd.usdz+zip"
        ],
        [
            "ustar",
            "application/x-ustar"
        ],
        [
            "utz",
            "application/vnd.uiq.theme"
        ],
        [
            "uu",
            "text/x-uuencode"
        ],
        [
            "uva",
            "audio/vnd.dece.audio"
        ],
        [
            "uvd",
            "application/vnd.dece.data"
        ],
        [
            "uvf",
            "application/vnd.dece.data"
        ],
        [
            "uvg",
            "image/vnd.dece.graphic"
        ],
        [
            "uvh",
            "video/vnd.dece.hd"
        ],
        [
            "uvi",
            "image/vnd.dece.graphic"
        ],
        [
            "uvm",
            "video/vnd.dece.mobile"
        ],
        [
            "uvp",
            "video/vnd.dece.pd"
        ],
        [
            "uvs",
            "video/vnd.dece.sd"
        ],
        [
            "uvt",
            "application/vnd.dece.ttml+xml"
        ],
        [
            "uvu",
            "video/vnd.uvvu.mp4"
        ],
        [
            "uvv",
            "video/vnd.dece.video"
        ],
        [
            "uvva",
            "audio/vnd.dece.audio"
        ],
        [
            "uvvd",
            "application/vnd.dece.data"
        ],
        [
            "uvvf",
            "application/vnd.dece.data"
        ],
        [
            "uvvg",
            "image/vnd.dece.graphic"
        ],
        [
            "uvvh",
            "video/vnd.dece.hd"
        ],
        [
            "uvvi",
            "image/vnd.dece.graphic"
        ],
        [
            "uvvm",
            "video/vnd.dece.mobile"
        ],
        [
            "uvvp",
            "video/vnd.dece.pd"
        ],
        [
            "uvvs",
            "video/vnd.dece.sd"
        ],
        [
            "uvvt",
            "application/vnd.dece.ttml+xml"
        ],
        [
            "uvvu",
            "video/vnd.uvvu.mp4"
        ],
        [
            "uvvv",
            "video/vnd.dece.video"
        ],
        [
            "uvvx",
            "application/vnd.dece.unspecified"
        ],
        [
            "uvvz",
            "application/vnd.dece.zip"
        ],
        [
            "uvx",
            "application/vnd.dece.unspecified"
        ],
        [
            "uvz",
            "application/vnd.dece.zip"
        ],
        [
            "vbox",
            "application/x-virtualbox-vbox"
        ],
        [
            "vbox-extpack",
            "application/x-virtualbox-vbox-extpack"
        ],
        [
            "vcard",
            "text/vcard"
        ],
        [
            "vcd",
            "application/x-cdlink"
        ],
        [
            "vcf",
            "text/x-vcard"
        ],
        [
            "vcg",
            "application/vnd.groove-vcard"
        ],
        [
            "vcs",
            "text/x-vcalendar"
        ],
        [
            "vcx",
            "application/vnd.vcx"
        ],
        [
            "vdi",
            "application/x-virtualbox-vdi"
        ],
        [
            "vds",
            "model/vnd.sap.vds"
        ],
        [
            "vhd",
            "application/x-virtualbox-vhd"
        ],
        [
            "vis",
            "application/vnd.visionary"
        ],
        [
            "viv",
            "video/vnd.vivo"
        ],
        [
            "vlc",
            "application/videolan"
        ],
        [
            "vmdk",
            "application/x-virtualbox-vmdk"
        ],
        [
            "vob",
            "video/x-ms-vob"
        ],
        [
            "vor",
            "application/vnd.stardivision.writer"
        ],
        [
            "vox",
            "application/x-authorware-bin"
        ],
        [
            "vrml",
            "model/vrml"
        ],
        [
            "vsd",
            "application/vnd.visio"
        ],
        [
            "vsf",
            "application/vnd.vsf"
        ],
        [
            "vss",
            "application/vnd.visio"
        ],
        [
            "vst",
            "application/vnd.visio"
        ],
        [
            "vsw",
            "application/vnd.visio"
        ],
        [
            "vtf",
            "image/vnd.valve.source.texture"
        ],
        [
            "vtt",
            "text/vtt"
        ],
        [
            "vtu",
            "model/vnd.vtu"
        ],
        [
            "vxml",
            "application/voicexml+xml"
        ],
        [
            "w3d",
            "application/x-director"
        ],
        [
            "wad",
            "application/x-doom"
        ],
        [
            "wadl",
            "application/vnd.sun.wadl+xml"
        ],
        [
            "war",
            "application/java-archive"
        ],
        [
            "wasm",
            "application/wasm"
        ],
        [
            "wav",
            "audio/x-wav"
        ],
        [
            "wax",
            "audio/x-ms-wax"
        ],
        [
            "wbmp",
            "image/vnd.wap.wbmp"
        ],
        [
            "wbs",
            "application/vnd.criticaltools.wbs+xml"
        ],
        [
            "wbxml",
            "application/wbxml"
        ],
        [
            "wcm",
            "application/vnd.ms-works"
        ],
        [
            "wdb",
            "application/vnd.ms-works"
        ],
        [
            "wdp",
            "image/vnd.ms-photo"
        ],
        [
            "weba",
            "audio/webm"
        ],
        [
            "webapp",
            "application/x-web-app-manifest+json"
        ],
        [
            "webm",
            "video/webm"
        ],
        [
            "webmanifest",
            "application/manifest+json"
        ],
        [
            "webp",
            "image/webp"
        ],
        [
            "wg",
            "application/vnd.pmi.widget"
        ],
        [
            "wgt",
            "application/widget"
        ],
        [
            "wks",
            "application/vnd.ms-works"
        ],
        [
            "wm",
            "video/x-ms-wm"
        ],
        [
            "wma",
            "audio/x-ms-wma"
        ],
        [
            "wmd",
            "application/x-ms-wmd"
        ],
        [
            "wmf",
            "image/wmf"
        ],
        [
            "wml",
            "text/vnd.wap.wml"
        ],
        [
            "wmlc",
            "application/wmlc"
        ],
        [
            "wmls",
            "text/vnd.wap.wmlscript"
        ],
        [
            "wmlsc",
            "application/vnd.wap.wmlscriptc"
        ],
        [
            "wmv",
            "video/x-ms-wmv"
        ],
        [
            "wmx",
            "video/x-ms-wmx"
        ],
        [
            "wmz",
            "application/x-msmetafile"
        ],
        [
            "woff",
            "font/woff"
        ],
        [
            "woff2",
            "font/woff2"
        ],
        [
            "word",
            "application/msword"
        ],
        [
            "wpd",
            "application/vnd.wordperfect"
        ],
        [
            "wpl",
            "application/vnd.ms-wpl"
        ],
        [
            "wps",
            "application/vnd.ms-works"
        ],
        [
            "wqd",
            "application/vnd.wqd"
        ],
        [
            "wri",
            "application/x-mswrite"
        ],
        [
            "wrl",
            "model/vrml"
        ],
        [
            "wsc",
            "message/vnd.wfa.wsc"
        ],
        [
            "wsdl",
            "application/wsdl+xml"
        ],
        [
            "wspolicy",
            "application/wspolicy+xml"
        ],
        [
            "wtb",
            "application/vnd.webturbo"
        ],
        [
            "wvx",
            "video/x-ms-wvx"
        ],
        [
            "x3d",
            "model/x3d+xml"
        ],
        [
            "x3db",
            "model/x3d+fastinfoset"
        ],
        [
            "x3dbz",
            "model/x3d+binary"
        ],
        [
            "x3dv",
            "model/x3d-vrml"
        ],
        [
            "x3dvz",
            "model/x3d+vrml"
        ],
        [
            "x3dz",
            "model/x3d+xml"
        ],
        [
            "x32",
            "application/x-authorware-bin"
        ],
        [
            "x_b",
            "model/vnd.parasolid.transmit.binary"
        ],
        [
            "x_t",
            "model/vnd.parasolid.transmit.text"
        ],
        [
            "xaml",
            "application/xaml+xml"
        ],
        [
            "xap",
            "application/x-silverlight-app"
        ],
        [
            "xar",
            "application/vnd.xara"
        ],
        [
            "xav",
            "application/xcap-att+xml"
        ],
        [
            "xbap",
            "application/x-ms-xbap"
        ],
        [
            "xbd",
            "application/vnd.fujixerox.docuworks.binder"
        ],
        [
            "xbm",
            "image/x-xbitmap"
        ],
        [
            "xca",
            "application/xcap-caps+xml"
        ],
        [
            "xcs",
            "application/calendar+xml"
        ],
        [
            "xdf",
            "application/xcap-diff+xml"
        ],
        [
            "xdm",
            "application/vnd.syncml.dm+xml"
        ],
        [
            "xdp",
            "application/vnd.adobe.xdp+xml"
        ],
        [
            "xdssc",
            "application/dssc+xml"
        ],
        [
            "xdw",
            "application/vnd.fujixerox.docuworks"
        ],
        [
            "xel",
            "application/xcap-el+xml"
        ],
        [
            "xenc",
            "application/xenc+xml"
        ],
        [
            "xer",
            "application/patch-ops-error+xml"
        ],
        [
            "xfdf",
            "application/vnd.adobe.xfdf"
        ],
        [
            "xfdl",
            "application/vnd.xfdl"
        ],
        [
            "xht",
            "application/xhtml+xml"
        ],
        [
            "xhtml",
            "application/xhtml+xml"
        ],
        [
            "xhvml",
            "application/xv+xml"
        ],
        [
            "xif",
            "image/vnd.xiff"
        ],
        [
            "xl",
            "application/excel"
        ],
        [
            "xla",
            "application/vnd.ms-excel"
        ],
        [
            "xlam",
            "application/vnd.ms-excel.addin.macroEnabled.12"
        ],
        [
            "xlc",
            "application/vnd.ms-excel"
        ],
        [
            "xlf",
            "application/xliff+xml"
        ],
        [
            "xlm",
            "application/vnd.ms-excel"
        ],
        [
            "xls",
            "application/vnd.ms-excel"
        ],
        [
            "xlsb",
            "application/vnd.ms-excel.sheet.binary.macroEnabled.12"
        ],
        [
            "xlsm",
            "application/vnd.ms-excel.sheet.macroEnabled.12"
        ],
        [
            "xlsx",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        ],
        [
            "xlt",
            "application/vnd.ms-excel"
        ],
        [
            "xltm",
            "application/vnd.ms-excel.template.macroEnabled.12"
        ],
        [
            "xltx",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.template"
        ],
        [
            "xlw",
            "application/vnd.ms-excel"
        ],
        [
            "xm",
            "audio/xm"
        ],
        [
            "xml",
            "application/xml"
        ],
        [
            "xns",
            "application/xcap-ns+xml"
        ],
        [
            "xo",
            "application/vnd.olpc-sugar"
        ],
        [
            "xop",
            "application/xop+xml"
        ],
        [
            "xpi",
            "application/x-xpinstall"
        ],
        [
            "xpl",
            "application/xproc+xml"
        ],
        [
            "xpm",
            "image/x-xpixmap"
        ],
        [
            "xpr",
            "application/vnd.is-xpr"
        ],
        [
            "xps",
            "application/vnd.ms-xpsdocument"
        ],
        [
            "xpw",
            "application/vnd.intercon.formnet"
        ],
        [
            "xpx",
            "application/vnd.intercon.formnet"
        ],
        [
            "xsd",
            "application/xml"
        ],
        [
            "xsl",
            "application/xml"
        ],
        [
            "xslt",
            "application/xslt+xml"
        ],
        [
            "xsm",
            "application/vnd.syncml+xml"
        ],
        [
            "xspf",
            "application/xspf+xml"
        ],
        [
            "xul",
            "application/vnd.mozilla.xul+xml"
        ],
        [
            "xvm",
            "application/xv+xml"
        ],
        [
            "xvml",
            "application/xv+xml"
        ],
        [
            "xwd",
            "image/x-xwindowdump"
        ],
        [
            "xyz",
            "chemical/x-xyz"
        ],
        [
            "xz",
            "application/x-xz"
        ],
        [
            "yaml",
            "text/yaml"
        ],
        [
            "yang",
            "application/yang"
        ],
        [
            "yin",
            "application/yin+xml"
        ],
        [
            "yml",
            "text/yaml"
        ],
        [
            "ymp",
            "text/x-suse-ymp"
        ],
        [
            "z",
            "application/x-compress"
        ],
        [
            "z1",
            "application/x-zmachine"
        ],
        [
            "z2",
            "application/x-zmachine"
        ],
        [
            "z3",
            "application/x-zmachine"
        ],
        [
            "z4",
            "application/x-zmachine"
        ],
        [
            "z5",
            "application/x-zmachine"
        ],
        [
            "z6",
            "application/x-zmachine"
        ],
        [
            "z7",
            "application/x-zmachine"
        ],
        [
            "z8",
            "application/x-zmachine"
        ],
        [
            "zaz",
            "application/vnd.zzazz.deck+xml"
        ],
        [
            "zip",
            "application/zip"
        ],
        [
            "zir",
            "application/vnd.zul"
        ],
        [
            "zirz",
            "application/vnd.zul"
        ],
        [
            "zmm",
            "application/vnd.handheld-entertainment+xml"
        ],
        [
            "zsh",
            "text/x-scriptzsh"
        ]
    ]);
    function Vc(e, t, n) {
        const r = mH(e), { webkitRelativePath: i } = e, o = typeof t == "string" ? t : typeof i == "string" && i.length > 0 ? i : `./${e.name}`;
        return typeof r.path != "string" && rj(r, "path", o), rj(r, "relativePath", o), r;
    }
    function mH(e) {
        const { name: t } = e;
        if (t && t.lastIndexOf(".") !== -1 && !e.type) {
            const r = t.split(".").pop().toLowerCase(), i = hH.get(r);
            i && Object.defineProperty(e, "type", {
                value: i,
                writable: !1,
                configurable: !1,
                enumerable: !0
            });
        }
        return e;
    }
    function rj(e, t, n) {
        Object.defineProperty(e, t, {
            value: n,
            writable: !1,
            configurable: !1,
            enumerable: !0
        });
    }
    const gH = [
        ".DS_Store",
        "Thumbs.db"
    ];
    function yH(e) {
        return bl(this, void 0, void 0, function*() {
            return Ig(e) && vH(e.dataTransfer) ? NH(e.dataTransfer, e.type) : xH(e) ? bH(e) : Array.isArray(e) && e.every((t)=>"getFile" in t && typeof t.getFile == "function") ? wH(e) : [];
        });
    }
    function vH(e) {
        return Ig(e);
    }
    function xH(e) {
        return Ig(e) && Ig(e.target);
    }
    function Ig(e) {
        return typeof e == "object" && e !== null;
    }
    function bH(e) {
        return vN(e.target.files).map((t)=>Vc(t));
    }
    function wH(e) {
        return bl(this, void 0, void 0, function*() {
            return (yield Promise.all(e.map((n)=>n.getFile()))).map((n)=>Vc(n));
        });
    }
    function NH(e, t) {
        return bl(this, void 0, void 0, function*() {
            if (e.items) {
                const n = vN(e.items).filter((i)=>i.kind === "file");
                if (t !== "drop") return n;
                const r = yield Promise.all(n.map(SH));
                return ij(nF(r));
            }
            return ij(vN(e.files).map((n)=>Vc(n)));
        });
    }
    function ij(e) {
        return e.filter((t)=>gH.indexOf(t.name) === -1);
    }
    function vN(e) {
        if (e === null) return [];
        const t = [];
        for(let n = 0; n < e.length; n++){
            const r = e[n];
            t.push(r);
        }
        return t;
    }
    function SH(e) {
        if (typeof e.webkitGetAsEntry != "function") return oj(e);
        const t = e.webkitGetAsEntry();
        return t && t.isDirectory ? rF(t) : oj(e, t);
    }
    function nF(e) {
        return e.reduce((t, n)=>[
                ...t,
                ...Array.isArray(n) ? nF(n) : [
                    n
                ]
            ], []);
    }
    function oj(e, t) {
        return bl(this, void 0, void 0, function*() {
            var n;
            if (globalThis.isSecureContext && typeof e.getAsFileSystemHandle == "function") {
                const o = yield e.getAsFileSystemHandle();
                if (o === null) throw new Error(`${e} is not a File`);
                if (o !== void 0) {
                    const s = yield o.getFile();
                    return s.handle = o, Vc(s);
                }
            }
            const r = e.getAsFile();
            if (!r) throw new Error(`${e} is not a File`);
            return Vc(r, (n = t?.fullPath) !== null && n !== void 0 ? n : void 0);
        });
    }
    function IH(e) {
        return bl(this, void 0, void 0, function*() {
            return e.isDirectory ? rF(e) : _H(e);
        });
    }
    function rF(e) {
        const t = e.createReader();
        return new Promise((n, r)=>{
            const i = [];
            function o() {
                t.readEntries((s)=>bl(this, void 0, void 0, function*() {
                        if (s.length) {
                            const l = Promise.all(s.map(IH));
                            i.push(l), o();
                        } else try {
                            const l = yield Promise.all(i);
                            n(l);
                        } catch (l) {
                            r(l);
                        }
                    }), (s)=>{
                    r(s);
                });
            }
            o();
        });
    }
    function _H(e) {
        return bl(this, void 0, void 0, function*() {
            return new Promise((t, n)=>{
                e.file((r)=>{
                    const i = Vc(r, e.fullPath);
                    t(i);
                }, (r)=>{
                    n(r);
                });
            });
        });
    }
    var Dh = {}, sj;
    function EH() {
        return sj || (sj = 1, Dh.__esModule = !0, Dh.default = function(e, t) {
            if (e && t) {
                var n = Array.isArray(t) ? t : t.split(",");
                if (n.length === 0) return !0;
                var r = e.name || "", i = (e.type || "").toLowerCase(), o = i.replace(/\/.*$/, "");
                return n.some(function(s) {
                    var l = s.trim().toLowerCase();
                    return l.charAt(0) === "." ? r.toLowerCase().endsWith(l) : l.endsWith("/*") ? o === l.replace(/\/.*$/, "") : i === l;
                });
            }
            return !0;
        }), Dh;
    }
    var kH = EH();
    const fw = fi(kH);
    function aj(e) {
        return RH(e) || jH(e) || oF(e) || CH();
    }
    function CH() {
        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function jH(e) {
        if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
    }
    function RH(e) {
        if (Array.isArray(e)) return xN(e);
    }
    function lj(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t && (r = r.filter(function(i) {
                return Object.getOwnPropertyDescriptor(e, i).enumerable;
            })), n.push.apply(n, r);
        }
        return n;
    }
    function cj(e) {
        for(var t = 1; t < arguments.length; t++){
            var n = arguments[t] != null ? arguments[t] : {};
            t % 2 ? lj(Object(n), !0).forEach(function(r) {
                iF(e, r, n[r]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : lj(Object(n)).forEach(function(r) {
                Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
            });
        }
        return e;
    }
    function iF(e, t, n) {
        return t in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function df(e, t) {
        return PH(e) || TH(e, t) || oF(e, t) || OH();
    }
    function OH() {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function oF(e, t) {
        if (e) {
            if (typeof e == "string") return xN(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set") return Array.from(e);
            if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return xN(e, t);
        }
    }
    function xN(e, t) {
        (t == null || t > e.length) && (t = e.length);
        for(var n = 0, r = new Array(t); n < t; n++)r[n] = e[n];
        return r;
    }
    function TH(e, t) {
        var n = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
        if (n != null) {
            var r = [], i = !0, o = !1, s, l;
            try {
                for(n = n.call(e); !(i = (s = n.next()).done) && (r.push(s.value), !(t && r.length === t)); i = !0);
            } catch (u) {
                o = !0, l = u;
            } finally{
                try {
                    !i && n.return != null && n.return();
                } finally{
                    if (o) throw l;
                }
            }
            return r;
        }
    }
    function PH(e) {
        if (Array.isArray(e)) return e;
    }
    var AH = typeof fw == "function" ? fw : fw.default, sF = "file-invalid-type", aF = "file-too-large", lF = "file-too-small", cF = "too-many-files", FH = {
        FileInvalidType: sF,
        FileTooLarge: aF,
        FileTooSmall: lF,
        TooManyFiles: cF
    }, DH = function() {
        var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", n = t.split(","), r = n.length > 1 ? "one of ".concat(n.join(", ")) : n[0];
        return {
            code: sF,
            message: "File type must be ".concat(r)
        };
    }, uj = function(t) {
        return {
            code: aF,
            message: "File is larger than ".concat(t, " ").concat(t === 1 ? "byte" : "bytes")
        };
    }, dj = function(t) {
        return {
            code: lF,
            message: "File is smaller than ".concat(t, " ").concat(t === 1 ? "byte" : "bytes")
        };
    }, MH = {
        code: cF,
        message: "Too many files"
    };
    function uF(e, t) {
        var n = e.type === "application/x-moz-file" || AH(e, t);
        return [
            n,
            n ? null : DH(t)
        ];
    }
    function dF(e, t, n) {
        if (Va(e.size)) if (Va(t) && Va(n)) {
            if (e.size > n) return [
                !1,
                uj(n)
            ];
            if (e.size < t) return [
                !1,
                dj(t)
            ];
        } else {
            if (Va(t) && e.size < t) return [
                !1,
                dj(t)
            ];
            if (Va(n) && e.size > n) return [
                !1,
                uj(n)
            ];
        }
        return [
            !0,
            null
        ];
    }
    function Va(e) {
        return e != null;
    }
    function LH(e) {
        var t = e.files, n = e.accept, r = e.minSize, i = e.maxSize, o = e.multiple, s = e.maxFiles, l = e.validator;
        return !o && t.length > 1 || o && s >= 1 && t.length > s ? !1 : t.every(function(u) {
            var f = uF(u, n), p = df(f, 1), m = p[0], g = dF(u, r, i), v = df(g, 1), x = v[0], b = l ? l(u) : null;
            return m && x && !b;
        });
    }
    function _g(e) {
        return typeof e.isPropagationStopped == "function" ? e.isPropagationStopped() : typeof e.cancelBubble < "u" ? e.cancelBubble : !1;
    }
    function Mh(e) {
        return e.dataTransfer ? Array.prototype.some.call(e.dataTransfer.types, function(t) {
            return t === "Files" || t === "application/x-moz-file";
        }) : !!e.target && !!e.target.files;
    }
    function fj(e) {
        e.preventDefault();
    }
    function $H(e) {
        return e.indexOf("MSIE") !== -1 || e.indexOf("Trident/") !== -1;
    }
    function qH(e) {
        return e.indexOf("Edge/") !== -1;
    }
    function BH() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
        return $H(e) || qH(e);
    }
    function uo() {
        for(var e = arguments.length, t = new Array(e), n = 0; n < e; n++)t[n] = arguments[n];
        return function(r) {
            for(var i = arguments.length, o = new Array(i > 1 ? i - 1 : 0), s = 1; s < i; s++)o[s - 1] = arguments[s];
            return t.some(function(l) {
                return !_g(r) && l && l.apply(void 0, [
                    r
                ].concat(o)), _g(r);
            });
        };
    }
    function zH() {
        return "showOpenFilePicker" in window;
    }
    function WH(e) {
        if (Va(e)) {
            var t = Object.entries(e).filter(function(n) {
                var r = df(n, 2), i = r[0], o = r[1], s = !0;
                return fF(i) || (console.warn('Skipped "'.concat(i, '" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.')), s = !1), (!Array.isArray(o) || !o.every(pF)) && (console.warn('Skipped "'.concat(i, '" because an invalid file extension was provided.')), s = !1), s;
            }).reduce(function(n, r) {
                var i = df(r, 2), o = i[0], s = i[1];
                return cj(cj({}, n), {}, iF({}, o, s));
            }, {});
            return [
                {
                    description: "Files",
                    accept: t
                }
            ];
        }
        return e;
    }
    function VH(e) {
        if (Va(e)) return Object.entries(e).reduce(function(t, n) {
            var r = df(n, 2), i = r[0], o = r[1];
            return [].concat(aj(t), [
                i
            ], aj(o));
        }, []).filter(function(t) {
            return fF(t) || pF(t);
        }).join(",");
    }
    function UH(e) {
        return e instanceof DOMException && (e.name === "AbortError" || e.code === e.ABORT_ERR);
    }
    function HH(e) {
        return e instanceof DOMException && (e.name === "SecurityError" || e.code === e.SECURITY_ERR);
    }
    function fF(e) {
        return e === "audio/*" || e === "video/*" || e === "image/*" || e === "text/*" || e === "application/*" || /\w+\/[-+.\w]+/g.test(e);
    }
    function pF(e) {
        return /^.*\.[\w]+$/.test(e);
    }
    var KH = [
        "children"
    ], GH = [
        "open"
    ], QH = [
        "refKey",
        "role",
        "onKeyDown",
        "onFocus",
        "onBlur",
        "onClick",
        "onDragEnter",
        "onDragOver",
        "onDragLeave",
        "onDrop"
    ], JH = [
        "refKey",
        "onChange",
        "onClick"
    ];
    function ZH(e) {
        return eK(e) || XH(e) || hF(e) || YH();
    }
    function YH() {
        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function XH(e) {
        if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
    }
    function eK(e) {
        if (Array.isArray(e)) return bN(e);
    }
    function pw(e, t) {
        return rK(e) || nK(e, t) || hF(e, t) || tK();
    }
    function tK() {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function hF(e, t) {
        if (e) {
            if (typeof e == "string") return bN(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set") return Array.from(e);
            if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return bN(e, t);
        }
    }
    function bN(e, t) {
        (t == null || t > e.length) && (t = e.length);
        for(var n = 0, r = new Array(t); n < t; n++)r[n] = e[n];
        return r;
    }
    function nK(e, t) {
        var n = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
        if (n != null) {
            var r = [], i = !0, o = !1, s, l;
            try {
                for(n = n.call(e); !(i = (s = n.next()).done) && (r.push(s.value), !(t && r.length === t)); i = !0);
            } catch (u) {
                o = !0, l = u;
            } finally{
                try {
                    !i && n.return != null && n.return();
                } finally{
                    if (o) throw l;
                }
            }
            return r;
        }
    }
    function rK(e) {
        if (Array.isArray(e)) return e;
    }
    function pj(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t && (r = r.filter(function(i) {
                return Object.getOwnPropertyDescriptor(e, i).enumerable;
            })), n.push.apply(n, r);
        }
        return n;
    }
    function an(e) {
        for(var t = 1; t < arguments.length; t++){
            var n = arguments[t] != null ? arguments[t] : {};
            t % 2 ? pj(Object(n), !0).forEach(function(r) {
                wN(e, r, n[r]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : pj(Object(n)).forEach(function(r) {
                Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
            });
        }
        return e;
    }
    function wN(e, t, n) {
        return t in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function Eg(e, t) {
        if (e == null) return {};
        var n = iK(e, t), r, i;
        if (Object.getOwnPropertySymbols) {
            var o = Object.getOwnPropertySymbols(e);
            for(i = 0; i < o.length; i++)r = o[i], !(t.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(e, r) && (n[r] = e[r]);
        }
        return n;
    }
    function iK(e, t) {
        if (e == null) return {};
        var n = {}, r = Object.keys(e), i, o;
        for(o = 0; o < r.length; o++)i = r[o], !(t.indexOf(i) >= 0) && (n[i] = e[i]);
        return n;
    }
    var _y = $.forwardRef(function(e, t) {
        var n = e.children, r = Eg(e, KH), i = gF(r), o = i.open, s = Eg(i, GH);
        return $.useImperativeHandle(t, function() {
            return {
                open: o
            };
        }, [
            o
        ]), St.createElement($.Fragment, null, n(an(an({}, s), {}, {
            open: o
        })));
    });
    _y.displayName = "Dropzone";
    var mF = {
        disabled: !1,
        getFilesFromEvent: yH,
        maxSize: 1 / 0,
        minSize: 0,
        multiple: !0,
        maxFiles: 0,
        preventDropOnDocument: !0,
        noClick: !1,
        noKeyboard: !1,
        noDrag: !1,
        noDragEventsBubbling: !1,
        validator: null,
        useFsAccessApi: !1,
        autoFocus: !1
    };
    _y.defaultProps = mF;
    _y.propTypes = {
        children: Pt.func,
        accept: Pt.objectOf(Pt.arrayOf(Pt.string)),
        multiple: Pt.bool,
        preventDropOnDocument: Pt.bool,
        noClick: Pt.bool,
        noKeyboard: Pt.bool,
        noDrag: Pt.bool,
        noDragEventsBubbling: Pt.bool,
        minSize: Pt.number,
        maxSize: Pt.number,
        maxFiles: Pt.number,
        disabled: Pt.bool,
        getFilesFromEvent: Pt.func,
        onFileDialogCancel: Pt.func,
        onFileDialogOpen: Pt.func,
        useFsAccessApi: Pt.bool,
        autoFocus: Pt.bool,
        onDragEnter: Pt.func,
        onDragLeave: Pt.func,
        onDragOver: Pt.func,
        onDrop: Pt.func,
        onDropAccepted: Pt.func,
        onDropRejected: Pt.func,
        onError: Pt.func,
        validator: Pt.func
    };
    var NN = {
        isFocused: !1,
        isFileDialogActive: !1,
        isDragActive: !1,
        isDragAccept: !1,
        isDragReject: !1,
        acceptedFiles: [],
        fileRejections: []
    };
    function gF() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, t = an(an({}, mF), e), n = t.accept, r = t.disabled, i = t.getFilesFromEvent, o = t.maxSize, s = t.minSize, l = t.multiple, u = t.maxFiles, f = t.onDragEnter, p = t.onDragLeave, m = t.onDragOver, g = t.onDrop, v = t.onDropAccepted, x = t.onDropRejected, b = t.onFileDialogCancel, S = t.onFileDialogOpen, N = t.useFsAccessApi, _ = t.autoFocus, I = t.preventDropOnDocument, C = t.noClick, A = t.noKeyboard, R = t.noDrag, D = t.noDragEventsBubbling, O = t.onError, E = t.validator, F = $.useMemo(function() {
            return VH(n);
        }, [
            n
        ]), j = $.useMemo(function() {
            return WH(n);
        }, [
            n
        ]), M = $.useMemo(function() {
            return typeof S == "function" ? S : hj;
        }, [
            S
        ]), L = $.useMemo(function() {
            return typeof b == "function" ? b : hj;
        }, [
            b
        ]), P = $.useRef(null), V = $.useRef(null), z = $.useReducer(oK, NN), Q = pw(z, 2), K = Q[0], H = Q[1], G = K.isFocused, U = K.isFileDialogActive, Z = $.useRef(typeof window < "u" && window.isSecureContext && N && zH()), J = function() {
            !Z.current && U && setTimeout(function() {
                if (V.current) {
                    var Se = V.current.files;
                    Se.length || (H({
                        type: "closeDialog"
                    }), L());
                }
            }, 300);
        };
        $.useEffect(function() {
            return window.addEventListener("focus", J, !1), function() {
                window.removeEventListener("focus", J, !1);
            };
        }, [
            V,
            U,
            L,
            Z
        ]);
        var X = $.useRef([]), te = function(Se) {
            P.current && P.current.contains(Se.target) || (Se.preventDefault(), X.current = []);
        };
        $.useEffect(function() {
            return I && (document.addEventListener("dragover", fj, !1), document.addEventListener("drop", te, !1)), function() {
                I && (document.removeEventListener("dragover", fj), document.removeEventListener("drop", te));
            };
        }, [
            P,
            I
        ]), $.useEffect(function() {
            return !r && _ && P.current && P.current.focus(), function() {};
        }, [
            P,
            _,
            r
        ]);
        var ie = $.useCallback(function(pe) {
            O ? O(pe) : console.error(pe);
        }, [
            O
        ]), ae = $.useCallback(function(pe) {
            pe.preventDefault(), pe.persist(), oe(pe), X.current = [].concat(ZH(X.current), [
                pe.target
            ]), Mh(pe) && Promise.resolve(i(pe)).then(function(Se) {
                if (!(_g(pe) && !D)) {
                    var Ge = Se.length, Qe = Ge > 0 && LH({
                        files: Se,
                        accept: F,
                        minSize: s,
                        maxSize: o,
                        multiple: l,
                        maxFiles: u,
                        validator: E
                    }), dt = Ge > 0 && !Qe;
                    H({
                        isDragAccept: Qe,
                        isDragReject: dt,
                        isDragActive: !0,
                        type: "setDraggedFiles"
                    }), f && f(pe);
                }
            }).catch(function(Se) {
                return ie(Se);
            });
        }, [
            i,
            f,
            ie,
            D,
            F,
            s,
            o,
            l,
            u,
            E
        ]), ce = $.useCallback(function(pe) {
            pe.preventDefault(), pe.persist(), oe(pe);
            var Se = Mh(pe);
            if (Se && pe.dataTransfer) try {
                pe.dataTransfer.dropEffect = "copy";
            } catch  {}
            return Se && m && m(pe), !1;
        }, [
            m,
            D
        ]), de = $.useCallback(function(pe) {
            pe.preventDefault(), pe.persist(), oe(pe);
            var Se = X.current.filter(function(Qe) {
                return P.current && P.current.contains(Qe);
            }), Ge = Se.indexOf(pe.target);
            Ge !== -1 && Se.splice(Ge, 1), X.current = Se, !(Se.length > 0) && (H({
                type: "setDraggedFiles",
                isDragActive: !1,
                isDragAccept: !1,
                isDragReject: !1
            }), Mh(pe) && p && p(pe));
        }, [
            P,
            p,
            D
        ]), ve = $.useCallback(function(pe, Se) {
            var Ge = [], Qe = [];
            pe.forEach(function(dt) {
                var nn = uF(dt, F), Gt = pw(nn, 2), Un = Gt[0], mi = Gt[1], _r = dF(dt, s, o), Er = pw(_r, 2), Hn = Er[0], Mn = Er[1], kr = E ? E(dt) : null;
                if (Un && Hn && !kr) Ge.push(dt);
                else {
                    var Fi = [
                        mi,
                        Mn
                    ];
                    kr && (Fi = Fi.concat(kr)), Qe.push({
                        file: dt,
                        errors: Fi.filter(function(ro) {
                            return ro;
                        })
                    });
                }
            }), (!l && Ge.length > 1 || l && u >= 1 && Ge.length > u) && (Ge.forEach(function(dt) {
                Qe.push({
                    file: dt,
                    errors: [
                        MH
                    ]
                });
            }), Ge.splice(0)), H({
                acceptedFiles: Ge,
                fileRejections: Qe,
                isDragReject: Qe.length > 0,
                type: "setFiles"
            }), g && g(Ge, Qe, Se), Qe.length > 0 && x && x(Qe, Se), Ge.length > 0 && v && v(Ge, Se);
        }, [
            H,
            l,
            F,
            s,
            o,
            u,
            g,
            v,
            x,
            E
        ]), be = $.useCallback(function(pe) {
            pe.preventDefault(), pe.persist(), oe(pe), X.current = [], Mh(pe) && Promise.resolve(i(pe)).then(function(Se) {
                _g(pe) && !D || ve(Se, pe);
            }).catch(function(Se) {
                return ie(Se);
            }), H({
                type: "reset"
            });
        }, [
            i,
            ve,
            ie,
            D
        ]), ge = $.useCallback(function() {
            if (Z.current) {
                H({
                    type: "openDialog"
                }), M();
                var pe = {
                    multiple: l,
                    types: j
                };
                window.showOpenFilePicker(pe).then(function(Se) {
                    return i(Se);
                }).then(function(Se) {
                    ve(Se, null), H({
                        type: "closeDialog"
                    });
                }).catch(function(Se) {
                    UH(Se) ? (L(Se), H({
                        type: "closeDialog"
                    })) : HH(Se) ? (Z.current = !1, V.current ? (V.current.value = null, V.current.click()) : ie(new Error("Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided."))) : ie(Se);
                });
                return;
            }
            V.current && (H({
                type: "openDialog"
            }), M(), V.current.value = null, V.current.click());
        }, [
            H,
            M,
            L,
            N,
            ve,
            ie,
            j,
            l
        ]), we = $.useCallback(function(pe) {
            !P.current || !P.current.isEqualNode(pe.target) || (pe.key === " " || pe.key === "Enter" || pe.keyCode === 32 || pe.keyCode === 13) && (pe.preventDefault(), ge());
        }, [
            P,
            ge
        ]), ke = $.useCallback(function() {
            H({
                type: "focus"
            });
        }, []), Re = $.useCallback(function() {
            H({
                type: "blur"
            });
        }, []), $e = $.useCallback(function() {
            C || (BH() ? setTimeout(ge, 0) : ge());
        }, [
            C,
            ge
        ]), nt = function(Se) {
            return r ? null : Se;
        }, ee = function(Se) {
            return A ? null : nt(Se);
        }, ne = function(Se) {
            return R ? null : nt(Se);
        }, oe = function(Se) {
            D && Se.stopPropagation();
        }, le = $.useMemo(function() {
            return function() {
                var pe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Se = pe.refKey, Ge = Se === void 0 ? "ref" : Se, Qe = pe.role, dt = pe.onKeyDown, nn = pe.onFocus, Gt = pe.onBlur, Un = pe.onClick, mi = pe.onDragEnter, _r = pe.onDragOver, Er = pe.onDragLeave, Hn = pe.onDrop, Mn = Eg(pe, QH);
                return an(an(wN({
                    onKeyDown: ee(uo(dt, we)),
                    onFocus: ee(uo(nn, ke)),
                    onBlur: ee(uo(Gt, Re)),
                    onClick: nt(uo(Un, $e)),
                    onDragEnter: ne(uo(mi, ae)),
                    onDragOver: ne(uo(_r, ce)),
                    onDragLeave: ne(uo(Er, de)),
                    onDrop: ne(uo(Hn, be)),
                    role: typeof Qe == "string" && Qe !== "" ? Qe : "presentation"
                }, Ge, P), !r && !A ? {
                    tabIndex: 0
                } : {}), Mn);
            };
        }, [
            P,
            we,
            ke,
            Re,
            $e,
            ae,
            ce,
            de,
            be,
            A,
            R,
            r
        ]), me = $.useCallback(function(pe) {
            pe.stopPropagation();
        }, []), xe = $.useMemo(function() {
            return function() {
                var pe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Se = pe.refKey, Ge = Se === void 0 ? "ref" : Se, Qe = pe.onChange, dt = pe.onClick, nn = Eg(pe, JH), Gt = wN({
                    accept: F,
                    multiple: l,
                    type: "file",
                    style: {
                        border: 0,
                        clip: "rect(0, 0, 0, 0)",
                        clipPath: "inset(50%)",
                        height: "1px",
                        margin: "0 -1px -1px 0",
                        overflow: "hidden",
                        padding: 0,
                        position: "absolute",
                        width: "1px",
                        whiteSpace: "nowrap"
                    },
                    onChange: nt(uo(Qe, be)),
                    onClick: nt(uo(dt, me)),
                    tabIndex: -1
                }, Ge, V);
                return an(an({}, Gt), nn);
            };
        }, [
            V,
            n,
            l,
            be,
            r
        ]);
        return an(an({}, K), {}, {
            isFocused: G && !r,
            getRootProps: le,
            getInputProps: xe,
            rootRef: P,
            inputRef: V,
            open: nt(ge)
        });
    }
    function oK(e, t) {
        switch(t.type){
            case "focus":
                return an(an({}, e), {}, {
                    isFocused: !0
                });
            case "blur":
                return an(an({}, e), {}, {
                    isFocused: !1
                });
            case "openDialog":
                return an(an({}, NN), {}, {
                    isFileDialogActive: !0
                });
            case "closeDialog":
                return an(an({}, e), {}, {
                    isFileDialogActive: !1
                });
            case "setDraggedFiles":
                return an(an({}, e), {}, {
                    isDragActive: t.isDragActive,
                    isDragAccept: t.isDragAccept,
                    isDragReject: t.isDragReject
                });
            case "setFiles":
                return an(an({}, e), {}, {
                    acceptedFiles: t.acceptedFiles,
                    fileRejections: t.fileRejections,
                    isDragReject: t.isDragReject
                });
            case "reset":
                return an({}, NN);
            default:
                return e;
        }
    }
    function hj() {}
    const sK = Object.freeze(Object.defineProperty({
        __proto__: null,
        ErrorCode: FH,
        default: _y,
        useDropzone: gF
    }, Symbol.toStringTag, {
        value: "Module"
    })), aK = lt({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-2",
                "items-center",
                "justify-center",
                "w-full"
            ],
            label: [
                "flex",
                "flex-col",
                "items-center",
                "justify-center",
                "w-full",
                "h-64",
                "border-2",
                "border-gray-300",
                "border-dashed",
                "rounded-lg",
                "cursor-pointer",
                "bg-gray-50",
                "hover:bg-gray-100"
            ],
            zone: [
                "flex",
                "flex-col",
                "items-center",
                "justify-center",
                "pt-5",
                "pb-6",
                "text-slate-500"
            ],
            content: []
        },
        variant: {
            active: {
                true: []
            },
            rejected: {
                true: []
            }
        },
        match: [
            {
                if: {
                    active: !0
                },
                then: {
                    label: [
                        "text-blue-400"
                    ],
                    zone: [
                        "text-blue-400"
                    ]
                }
            },
            {
                if: {
                    rejected: !0
                },
                then: {
                    label: [
                        "text-red-400"
                    ],
                    zone: [
                        "text-red-400"
                    ]
                }
            }
        ],
        defaults: {
            active: !1,
            rejected: !1
        }
    }), { useDropzone: lK } = sK, cK = ({ id: e, accept: t, textTile: n, textMessage: r, variant: i, tva: o = aK, css: s, children: l, onDropAccepted: u, ...f })=>{
        const [p, m] = $.useState([]), { getRootProps: g, getInputProps: v, isDragActive: x, isDragReject: b } = lK({
            noClick: !0,
            multiple: !1,
            accept: t,
            maxFiles: 1,
            minSize: 0,
            maxSize: 8 * 1024 ** 2,
            onDropAccepted (N, _) {
                m(N), u?.(N, _);
            },
            onError (N) {
                console.error(N);
            },
            ...f
        }), S = o({
            active: x,
            rejected: b,
            ...i,
            css: s
        }).slots;
        return d.jsx("div", {
            ...g(),
            className: S.base(),
            children: l && p && p.length > 0 ? d.jsx("div", {
                className: S.content(),
                children: d.jsx(l, {
                    files: p,
                    clear: ()=>{
                        m([]);
                    },
                    remove: (N)=>{
                        m(p.filter((_)=>_ !== N));
                    }
                })
            }) : d.jsxs("label", {
                htmlFor: e,
                className: S.label(),
                children: [
                    d.jsxs("div", {
                        className: S.zone(),
                        children: [
                            d.jsx(st, {
                                icon: nH,
                                variant: {
                                    size: "4xl"
                                }
                            }),
                            d.jsx("div", {
                                className: "mb-2 text-sm font-semibold",
                                children: n || Wr.rich("Drag 'n' drop a file here")
                            }),
                            r ? d.jsx("div", {
                                className: "text-xs",
                                children: r
                            }) : null
                        ]
                    }),
                    d.jsx("input", {
                        id: e,
                        type: "file",
                        className: "hidden",
                        ...v()
                    })
                ]
            })
        });
    }, uK = lt({
        slot: {
            base: [
                "min-h-screen",
                "flex",
                "flex-col"
            ],
            header: [
                "flex",
                "flex-row",
                "items-center",
                "bg-slate-50",
                "shadow-xs",
                "border-b",
                "border-b-slate-200",
                "w-full",
                "gap-4",
                "p-4"
            ],
            content: [
                "grow",
                "h-full",
                "border-b",
                "border-b-slate-200",
                "p-2"
            ]
        },
        variant: {},
        defaults: {}
    }), yF = ({ logo: e, menu: t, actions: n, variant: r, tva: i = uK, css: o, children: s })=>{
        const l = i({
            ...r,
            css: o
        }).slots;
        return d.jsxs("div", {
            className: l.base(),
            children: [
                d.jsx(gT, {
                    position: "top-right"
                }),
                d.jsxs("div", {
                    className: l.header(),
                    children: [
                        d.jsx("div", {
                            children: e
                        }),
                        d.jsx("div", {
                            className: "grow",
                            children: t
                        }),
                        d.jsx("div", {
                            className: "flex flex-row gap-2 items-center",
                            children: n
                        })
                    ]
                }),
                d.jsx("div", {
                    className: l.content(),
                    children: s ?? d.jsx(Pi, {})
                })
            ]
        });
    }, dK = lt({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "text-blue-500",
                "rounded-sm",
                "px-1",
                "py-0.5",
                "hover:text-blue-700",
                "focus:outline-hidden",
                "w-fit"
            ]
        },
        variant: {},
        defaults: {}
    }), fK = $.forwardRef(({ icon: e, iconProps: t, variant: n, tva: r = dK, css: i, children: o, ...s }, l)=>{
        const u = r({
            ...n,
            css: i
        }).slots;
        return d.jsxs("a", {
            ...s,
            ref: l,
            className: u.base(),
            children: [
                jf(e) ? d.jsx(st, {
                    icon: e,
                    ...t
                }) : e,
                o
            ]
        });
    }), pK = uT(fK), Te = (e)=>d.jsx(pK, {
            preload: "intent",
            ...e
        }), hK = lt({
        slot: {
            base: [
                "fixed",
                "inset-0",
                "h-full",
                "items-center",
                "justify-center",
                "bg-slate-100",
                "flex",
                "transition-all",
                "duration-200",
                "z-10",
                "pointer-events-none",
                "bg-opacity-0",
                "backdrop-blur-none"
            ]
        },
        variant: {
            show: {
                true: [
                    "bg-opacity-50",
                    "backdrop-blur-xs",
                    "pointer-events-auto"
                ]
            }
        },
        defaults: {
            show: !0
        }
    }), mK = ({ show: e = !0, variant: t, tva: n = hK, css: r })=>{
        const i = n({
            show: e,
            ...t,
            css: r
        }).slots;
        return e ? d.jsx("div", {
            className: i.base(),
            children: d.jsx(st, {
                icon: "icon-[svg-spinners--pulse-rings-multiple]",
                variant: {
                    size: "8xl"
                },
                css: {
                    base: [
                        "text-sky-400"
                    ]
                }
            })
        }) : null;
    };
    var fm = {
        exports: {}
    }, gK = fm.exports, mj;
    function yK() {
        return mj || (mj = 1, function(e, t) {
            (function(n, r) {
                e.exports = r();
            })(gK, ()=>(()=>{
                    var n = {
                        d: (x, b)=>{
                            for(var S in b)n.o(b, S) && !n.o(x, S) && Object.defineProperty(x, S, {
                                enumerable: !0,
                                get: b[S]
                            });
                        },
                        o: (x, b)=>Object.prototype.hasOwnProperty.call(x, b)
                    }, r = {};
                    n.d(r, {
                        default: ()=>v
                    });
                    const i = (...x)=>{}, o = (x)=>x !== null && x?.constructor.name === "Object";
                    let s, l;
                    const u = ()=>{
                        if (!s) {
                            s = !0;
                            try {
                                l = m.storage || localStorage, l.getItem("");
                            } catch  {
                                l = (()=>{
                                    const x = {
                                        getItem: (S)=>b[S] || null,
                                        setItem: (S, N)=>{
                                            b[S] = N;
                                        },
                                        removeItem: (S)=>{
                                            b[S] = void 0;
                                        },
                                        clear: ()=>{
                                            b = {
                                                __proto__: x
                                            };
                                        }
                                    };
                                    let b = {
                                        __proto__: x
                                    };
                                    return b;
                                })();
                            }
                            g();
                        }
                    }, f = "\0", p = (x, b, S = !0)=>S ? [
                            ...JSON.stringify(x)
                        ].map((N)=>String.fromCharCode(N.charCodeAt(0) + b)).join("") : JSON.parse([
                            ...x
                        ].map((N)=>String.fromCharCode(N.charCodeAt(0) - b)).join("")), m = {
                        ttl: null,
                        encrypt: !1,
                        encrypter: p,
                        decrypter: (x, b)=>p(x, b, !1),
                        secret: 75,
                        storage: void 0
                    };
                    Object.seal(m);
                    const g = (x = !1)=>{
                        u();
                        for (const b of Object.keys(l)){
                            const S = l.getItem(b);
                            let N;
                            try {
                                N = JSON.parse(S || "");
                            } catch  {
                                continue;
                            }
                            o(N) && f in N && (Date.now() > N.ttl || x) && l.removeItem(b);
                        }
                    }, v = {
                        config: m,
                        set: (x, b, S = {})=>{
                            u();
                            const N = {
                                ...m,
                                ...S,
                                encrypt: S.encrypt !== !1 && (S.encrypt || m.encrypt),
                                ttl: S.ttl === null ? null : S.ttl || m.ttl
                            };
                            try {
                                const _ = N.ttl && !isNaN(N.ttl) && N.ttl > 0;
                                let I = _ ? {
                                    [f]: b,
                                    ttl: Date.now() + 1e3 * N.ttl
                                } : b;
                                N.encrypt && (_ ? I[f] = (N.encrypter || i)(I[f], N.secret) : I = (N.encrypter || i)(I, N.secret)), l.setItem(x, JSON.stringify(I));
                            } catch  {
                                return !1;
                            }
                        },
                        get: (x, b = {})=>{
                            u();
                            const S = l.getItem(x), N = {
                                ...m,
                                ...b,
                                encrypt: b.encrypt !== !1 && (b.encrypt || m.encrypt),
                                ttl: b.ttl === null ? null : b.ttl || m.ttl
                            };
                            let _, I;
                            try {
                                _ = JSON.parse(S || ""), I = o(_) && f in _, (N.decrypt || N.encrypt) && (I ? _[f] = (N.decrypter || i)(_[f], N.secret) : _ = (N.decrypter || i)(_, N.secret));
                            } catch  {}
                            return I ? Date.now() > _.ttl ? (l.removeItem(x), null) : _[f] : _ !== void 0 ? _ : S;
                        },
                        flush: g,
                        clear: ()=>{
                            u(), l.clear();
                        },
                        remove: (x)=>{
                            u(), l.removeItem(x);
                        }
                    };
                    return r.default;
                })());
        }(fm)), fm.exports;
    }
    var vK = yK();
    const xK = fi(vK), lu = xK, bK = lt({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center"
            ]
        },
        variant: {},
        defaults: {}
    }), wl = $.memo(({ variant: e, tva: t = bK, css: n, children: r })=>{
        const i = t({
            ...e,
            css: n
        }).slots;
        return d.jsx("div", {
            className: i.base(),
            children: r
        });
    }), vF = lt({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "rounded-sm",
                "px-2",
                "py-1",
                "border",
                "border-b-2",
                "border-transparent",
                "hover:text-slate-500"
            ]
        },
        variant: {
            active: {
                true: []
            },
            inner: {
                true: []
            },
            subtle: {
                true: []
            }
        },
        match: [
            {
                if: {
                    active: !0,
                    inner: !1
                },
                then: {
                    base: [
                        "border",
                        "border-b-2",
                        "border-blue-400",
                        "bg-blue-50",
                        "hover:border-blue-500",
                        "text-slate-800",
                        "hover:text-blue-800"
                    ]
                }
            },
            {
                if: {
                    active: !0,
                    inner: !0
                },
                then: {
                    base: [
                        "border-none",
                        "text-blue-600",
                        "hover:text-blue-800"
                    ]
                }
            },
            {
                if: {
                    subtle: !0
                },
                then: {
                    base: [
                        "hover:bg-slate-50",
                        "hover:border-slate-300",
                        "hover:text-slate-600"
                    ]
                }
            },
            {
                if: {
                    active: !0,
                    subtle: !0
                },
                then: {
                    base: [
                        "bg-slate-100",
                        "border-slate-400"
                    ]
                }
            }
        ],
        defaults: {
            active: !1,
            inner: !1,
            subtle: !1
        }
    }), wK = $.forwardRef(({ icon: e = null, variant: t, tva: n = vF, css: r, children: i, ...o }, s)=>{
        const l = n({
            ...t,
            css: r
        }).slots;
        return d.jsxs("a", {
            ...o,
            className: l.base(),
            ref: s,
            children: [
                jf(e) ? d.jsx(st, {
                    icon: e
                }) : e,
                i
            ]
        });
    }), NK = uT(wK), Dt = ({ match: e = [], variant: t, tva: n = vF, css: r, ...i })=>{
        const o = Hq(), s = e.some((l)=>!!o(l));
        return d.jsx(NK, {
            preload: "intent",
            variant: {
                active: !!o({
                    to: i.to,
                    params: i.params
                }) || s,
                ...t
            },
            tva: n,
            css: r,
            ...i
        });
    }, SK = lt({
        slot: {
            base: [
                "flex",
                "flex-row",
                "flex-wrap",
                "items-center",
                "gap-2",
                "text-sm",
                "font-semibold"
            ],
            item: [
                "border",
                "border-blue-200",
                "bg-blue-50",
                "rounded-md",
                "px-2",
                "py-1"
            ]
        },
        variant: {},
        defaults: {}
    }), ca = ({ textTitle: e, textEmpty: t, items: n, render: r, limit: i, variant: o, tva: s = SK, css: l })=>{
        const u = i === void 0 ? n : n.slice(0, i), f = s({
            ...o,
            css: l
        }).slots;
        return d.jsxs("div", {
            className: f.base(),
            children: [
                n.length ? null : t,
                u.map((p)=>d.jsx(r, {
                        entity: p
                    }, `items-${p.id}`)),
                i !== void 0 && n.length > i && d.jsx(xl, {
                    textTitle: e,
                    target: d.jsx(Wf, {
                        iconEnabled: qA
                    }),
                    outside: !0,
                    children: d.jsx("div", {
                        className: "flex flex-col gap-2",
                        children: n.map((p)=>d.jsx(r, {
                                entity: p
                            }, `items-${p.id}`))
                    })
                })
            ]
        });
    }, xF = lt({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-2"
            ],
            input: [
                "py-2",
                "px-2",
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "cursor-pointer",
                "hover:bg-slate-50",
                "border",
                "border-gray-300",
                "rounded-md",
                "text-slate-400",
                "hover:text-slate-700",
                "focus:outline-hidden",
                "focus:ring-2",
                "focus:ring-blue-500",
                "focus:border-transparent"
            ],
            content: [],
            footer: [
                "flex",
                "items-center",
                "justify-between",
                "gap-2",
                "border-t-2",
                "border-slate-100",
                "mt-4",
                "pt-2"
            ]
        },
        variant: {
            loading: {
                true: []
            },
            selected: {
                true: []
            }
        },
        match: [
            {
                if: {
                    loading: !0
                },
                then: {
                    input: [
                        "text-slate-300"
                    ]
                }
            },
            {
                if: {
                    selected: !0
                },
                then: {
                    input: [
                        "bg-slate-50",
                        "text-slate-700",
                        "hover:bg-slate-100",
                        "hover:text-slate-800"
                    ]
                }
            }
        ],
        defaults: {
            loading: !1,
            selected: !1
        }
    }), IK = lt({
        use: xF,
        slot: {},
        variant: {},
        defaults: {}
    }), bF = ({ icon: e, textTitle: t, textSelect: n, modalProps: r, table: i, render: o, allowEmpty: s = !1, queryKey: l, queryHash: u, query: f, value: p, onChange: m, onSelect: g, variant: v, tva: x = IK, css: b })=>{
        const S = x({
            ...v,
            css: b
        }).slots, [N, _] = $.useState(0), [I, C] = $.useState(15), [A, R] = $.useState(p || []), [D, O] = $.useState(""), E = Dm({
            queryKey: [
                l,
                "PopupMultiSelect",
                "data",
                {
                    fulltext: D,
                    page: N,
                    size: I,
                    ...u
                }
            ],
            async queryFn () {
                return f({
                    filter: {
                        fulltext: D
                    },
                    cursor: {
                        page: N,
                        size: I
                    }
                });
            }
        }), F = (p?.length || 0) > 0, j = Dm({
            queryKey: [
                l,
                "PopupMultiSelect",
                "selected",
                {
                    value: p,
                    ...u
                }
            ],
            async queryFn () {
                return f({
                    filter: {
                        idIn: p || void 0
                    }
                });
            },
            enabled: F
        });
        return $.useEffect(()=>{
            R(p || []);
        }, [
            p
        ]), d.jsx(xl, {
            icon: e,
            target: d.jsxs("label", {
                className: S.input({
                    loading: j.isLoading,
                    selected: !!j.data?.data.length
                }),
                children: [
                    d.jsx(st, {
                        icon: j.isLoading ? WS : F && j.data?.data?.[0] ? Sy : Ny
                    }),
                    F && j.data && j.data.data.length ? d.jsx(o, {
                        entities: j.data.data
                    }) : n || d.jsx(B, {
                        label: "Select item (label)"
                    })
                ]
            }),
            textTitle: t,
            variant: {
                loading: E.isLoading
            },
            disabled: E.isLoading,
            css: {
                modal: [
                    "w-2/3"
                ]
            },
            ...r,
            children: ({ close: M })=>d.jsxs("div", {
                    className: S.base(),
                    children: [
                        d.jsx("div", {
                            className: S.content(),
                            children: d.jsx(i, {
                                cursor: {
                                    cursor: {
                                        page: N,
                                        size: I
                                    },
                                    count: E.data?.count ? E.data.count : {
                                        filter: -1,
                                        total: -1,
                                        where: -1
                                    },
                                    textTotal: d.jsx(B, {
                                        label: "Total count of items (label)"
                                    }),
                                    onPage (L) {
                                        _(L);
                                    },
                                    onSize (L) {
                                        C(L), _(0);
                                    }
                                },
                                fulltext: {
                                    value: D,
                                    set (L) {
                                        O(L), _(0);
                                    }
                                },
                                table: {
                                    data: E.data?.data ?? [],
                                    selection: {
                                        type: "multi",
                                        value: A,
                                        set (L) {
                                            R(L);
                                        }
                                    }
                                }
                            })
                        }),
                        d.jsxs("div", {
                            className: S.footer(),
                            children: [
                                d.jsx(ft, {
                                    iconEnabled: ci,
                                    iconDisabled: ci,
                                    onClick: ()=>{
                                        M(), R(p || []);
                                    },
                                    variant: {
                                        variant: "subtle"
                                    },
                                    children: d.jsx(B, {
                                        label: "Close (label)"
                                    })
                                }),
                                d.jsx(ft, {
                                    iconEnabled: Sg,
                                    iconDisabled: Sg,
                                    disabled: !A.length && !s,
                                    onClick: ()=>{
                                        m(A), g?.(E.data?.data?.filter((L)=>A.includes(L.id)) || []), M();
                                    },
                                    children: d.jsx(B, {
                                        label: "Confirm selection (label)"
                                    })
                                })
                            ]
                        })
                    ]
                })
        });
    }, wF = ({ icon: e, textTitle: t, textSelect: n, modalProps: r, table: i, render: o, allowEmpty: s = !1, queryKey: l, queryHash: u, query: f, value: p, onChange: m, onSelect: g, variant: v, tva: x = xF, css: b })=>{
        const S = x({
            ...v,
            css: b
        }).slots, [N, _] = $.useState(0), [I, C] = $.useState(15), [A, R] = $.useState(p ? [
            p
        ] : []), [D, O] = $.useState(""), E = Dm({
            queryKey: [
                l,
                "PopupSelect",
                "data",
                {
                    fulltext: D,
                    page: N,
                    size: I,
                    ...u
                }
            ],
            async queryFn () {
                return f({
                    filter: {
                        fulltext: D
                    },
                    cursor: {
                        page: N,
                        size: I
                    }
                });
            }
        }), F = !!p, j = Dm({
            queryKey: [
                l,
                "PopupSelect",
                "selected",
                {
                    value: p,
                    ...u
                }
            ],
            async queryFn () {
                return f({
                    filter: {
                        id: p ?? void 0
                    }
                });
            },
            enabled: F
        });
        return $.useEffect(()=>{
            R(p ? [
                p
            ] : []);
        }, [
            p
        ]), d.jsx(xl, {
            icon: e,
            target: d.jsxs("label", {
                className: S.input({
                    loading: j.isLoading,
                    selected: !!j.data?.data.length
                }),
                children: [
                    d.jsx(st, {
                        icon: j.isLoading ? WS : F && j.data?.data?.[0] ? Sy : Ny
                    }),
                    F && j.data?.data?.[0] ? d.jsx(o, {
                        entity: j.data?.data?.[0]
                    }) : n || d.jsx(B, {
                        label: "Select item (label)"
                    })
                ]
            }),
            textTitle: t,
            variant: {
                loading: E.isLoading
            },
            disabled: E.isLoading,
            css: {
                modal: [
                    "w-2/3"
                ]
            },
            ...r,
            children: ({ close: M })=>d.jsxs("div", {
                    className: S.base(),
                    children: [
                        d.jsx("div", {
                            className: S.content(),
                            children: d.jsx(i, {
                                cursor: {
                                    cursor: {
                                        page: N,
                                        size: I
                                    },
                                    count: E.data?.count ? E.data.count : {
                                        filter: -1,
                                        total: -1,
                                        where: -1
                                    },
                                    textTotal: d.jsx(B, {
                                        label: "Total count of items (label)"
                                    }),
                                    onPage (L) {
                                        _(L);
                                    },
                                    onSize (L) {
                                        C(L), _(0);
                                    }
                                },
                                fulltext: {
                                    value: D,
                                    set (L) {
                                        O(L), _(0);
                                    }
                                },
                                table: {
                                    data: E.data?.data ?? [],
                                    selection: {
                                        type: "single",
                                        value: A,
                                        set (L) {
                                            R(L);
                                        }
                                    }
                                }
                            })
                        }),
                        d.jsxs("div", {
                            className: S.footer(),
                            children: [
                                d.jsx(ft, {
                                    iconEnabled: ci,
                                    iconDisabled: ci,
                                    onClick: ()=>{
                                        M(), R(p ? [
                                            p
                                        ] : []);
                                    },
                                    variant: {
                                        variant: "subtle"
                                    },
                                    children: d.jsx(B, {
                                        label: "Close (label)"
                                    })
                                }),
                                d.jsx(ft, {
                                    iconEnabled: Sg,
                                    iconDisabled: Sg,
                                    disabled: !A.length && !s,
                                    onClick: ()=>{
                                        m(A?.[0] || null), g?.(E.data?.data?.find((L)=>L.id === A?.[0]) ?? null), M();
                                    },
                                    children: d.jsx(B, {
                                        label: "Confirm selection (label)"
                                    })
                                })
                            ]
                        })
                    ]
                })
        });
    }, _K = lt({
        slot: {
            base: [
                "bg-blue-50",
                "p-2",
                "rounded-md",
                "border",
                "border-blue-200"
            ],
            container: [
                "grid",
                "grid-cols-2",
                "grid-rows-2",
                "gap-1"
            ],
            title: [
                "col-span-1",
                "row-span-1",
                "border-b",
                "border-b-slate-300",
                "pb-2"
            ],
            links: [
                "col-span-1",
                "row-span-1",
                "border-b",
                "border-b-slate-300",
                "pb-2",
                "flex",
                "flex-row",
                "items-center",
                "gap-4",
                "justify-end"
            ],
            actions: [
                "col-span-1",
                "row-span-1",
                "flex",
                "flex-row",
                "items-center",
                "gap-4"
            ],
            extra: [
                "col-span-1",
                "row-span-1",
                "flex",
                "flex-row",
                "gap-4",
                "justify-end"
            ]
        },
        variant: {},
        defaults: {}
    }), cu = ({ entity: e, title: t = ()=>null, links: n = ()=>null, actions: r = ()=>null, extra: i = ()=>null, variant: o, tva: s = _K, css: l })=>{
        const u = s({
            ...o,
            css: l
        }).slots;
        return d.jsx(BS.Provider, {
            value: {
                inline: !0
            },
            children: d.jsx("div", {
                className: u.base(),
                children: d.jsxs("div", {
                    className: u.container(),
                    children: [
                        d.jsx("div", {
                            className: u.title(),
                            children: d.jsx(t, {
                                entity: e
                            })
                        }),
                        d.jsx("div", {
                            className: u.links(),
                            children: d.jsx(n, {
                                entity: e
                            })
                        }),
                        d.jsx("div", {
                            className: u.actions(),
                            children: d.jsx(r, {
                                entity: e
                            })
                        }),
                        d.jsx("div", {
                            className: u.extra(),
                            children: d.jsx(i, {
                                entity: e
                            })
                        })
                    ]
                })
            })
        });
    }, EK = (e)=>(t)=>{
            e({
                search: ({ cursor: n, ...r })=>({
                        ...r,
                        cursor: {
                            ...n,
                            page: t
                        }
                    })
            });
        }, kK = (e)=>(t)=>{
            e({
                search: ({ cursor: n, ...r })=>({
                        ...r,
                        cursor: {
                            ...n,
                            size: t,
                            page: 0
                        }
                    })
            });
        }, fn = (e)=>({
            onPage: EK(e),
            onSize: kK(e)
        }), pn = (e)=>(t)=>e({
                search: ({ cursor: n, ...r })=>({
                        ...r,
                        filter: t,
                        cursor: {
                            ...n,
                            page: 0
                        }
                    })
            }), hn = (e, t)=>(n)=>{
            (n ?? "") !== (e ?? "") && t({
                search: ({ cursor: r, filter: i, ...o })=>({
                        ...o,
                        filter: {
                            ...i,
                            fulltext: n
                        },
                        cursor: {
                            ...r,
                            page: n ? 0 : r.page
                        }
                    }),
                replace: !1
            });
        }, Ur = (e)=>(t)=>{
            e({
                search (n) {
                    return {
                        ...n,
                        selection: t
                    };
                }
            });
        }, dr = (e)=>({
            loading: d.jsx(B, {
                label: `${e} - Loading (label)`
            }),
            success: d.jsx(B, {
                label: `${e} - Success (label)`
            }),
            error: d.jsx(B, {
                label: `${e} - Error (label)`
            })
        }), CK = lt({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-4"
            ],
            content: [
                "text-bold",
                "text-red-500",
                "font-bold"
            ],
            footer: [
                "flex",
                "flex-row",
                "items-center",
                "justify-between",
                "gap-4"
            ]
        },
        variant: {},
        defaults: {}
    }), Hr = ({ textContent: e, textToast: t, callback: n, onCancel: r, invalidator: i, variant: o, tva: s = CK, css: l })=>{
        const u = s({
            ...o,
            css: l
        }).slots, p = $.useContext(VA)((g)=>g.close), m = Ye({
            async mutationFn () {
                return WB.promise(n(), dr(t));
            },
            async onSuccess () {
                await i?.(), p();
            }
        });
        return d.jsxs("div", {
            className: u.base(),
            children: [
                d.jsx("div", {
                    className: u.content(),
                    children: e
                }),
                d.jsxs("div", {
                    className: u.footer(),
                    children: [
                        d.jsx(ft, {
                            variant: {
                                variant: "subtle",
                                size: "sm"
                            },
                            iconEnabled: ci,
                            onClick: ()=>{
                                p(), r?.();
                            },
                            children: d.jsx(B, {
                                label: "Cancel (button)"
                            })
                        }),
                        d.jsx(ft, {
                            variant: {
                                variant: "danger",
                                size: "md"
                            },
                            iconEnabled: _n,
                            onClick: ()=>{
                                m.mutate();
                            },
                            children: d.jsx(B, {
                                label: "Delete (button)"
                            })
                        })
                    ]
                })
            ]
        });
    }, jK = async ({ select: e, query: t = ()=>e, filter: n, where: r })=>({
            total: (await e.clearSelect().select((i)=>i.fn.countAll().as("count")).executeTakeFirstOrThrow()).count,
            filter: (await t({
                select: t({
                    select: e,
                    where: r
                }),
                where: n
            }).clearSelect().select((i)=>i.fn.countAll().as("count")).executeTakeFirstOrThrow()).count,
            where: (await t({
                select: e,
                where: r
            }).clearSelect().select((i)=>i.fn.countAll().as("count")).executeTakeFirstOrThrow()).count
        }), to = async ({ select: e, query: t = ()=>e, output: n, filter: r, where: i })=>n.parse(await t({
            select: t({
                select: e,
                where: i
            }),
            where: r
        }).executeTakeFirstOrThrow()), er = async ({ select: e, query: t = ()=>e, output: n, filter: r, where: i, cursor: o })=>{
        const s = (l)=>{
            let u = l;
            return o && (u = l.limit(o.size).offset(o.page * o.size)), u;
        };
        return T.array(n).parse(await s(t({
            select: t({
                select: e,
                where: i
            }),
            where: r
        })).execute());
    }, Vt = async ({ select: e, query: t = ()=>e, output: n, filter: r, where: i, cursor: o })=>({
            data: await er({
                select: e,
                output: n,
                where: i,
                filter: r,
                query: t,
                cursor: o
            }),
            count: await jK({
                select: e,
                where: i,
                filter: r,
                query: t
            })
        }), en = (e)=>{
        const t = "input" in e ? e.input : "input", n = "output" in e ? e.output : "output", r = "schema" in e ? e.schema._input : e._input, i = "schema" in e ? e.schema._output : e._output;
        return {
            types: {
                input: t === "output" ? i : r,
                output: n === "input" ? r : i
            },
            parse: (o)=>"schema" in e ? e.schema.parse(o) : e.parse(o)
        };
    }, Lh = (e, t)=>T.custom().pipe(e.catch(t)), mn = ({ filter: e }, { size: t = 30 } = {
        size: 30
    })=>T.object({
            filter: Lh(e.default({
                fulltext: ""
            }), {
                fulltext: ""
            }),
            cursor: Lh(UV, {
                page: 0,
                size: t
            }).default({
                page: 0,
                size: t
            }),
            sort: Lh(T.array(T.any()).default([]), []),
            selection: Lh(T.array(T.string()).default([]), [])
        }), RK = lt({
        slot: {
            base: [
                "w-full",
                "flex",
                "flex-col",
                "items-center",
                "justify-center"
            ],
            title: [
                "text-xl",
                "text-bold",
                "w-full",
                "text-center"
            ],
            message: [
                "text-base",
                "text-slate-500",
                "w-full",
                "text-center"
            ],
            body: [
                "pt-2",
                "w-full"
            ]
        },
        variant: {},
        defaults: {}
    }), NF = ({ textTitle: e, textMessage: t, icon: n, iconProps: r, variant: i, tva: o = RK, css: s, children: l })=>{
        const u = o({
            ...i,
            css: s
        }).slots;
        return d.jsxs("div", {
            className: u.base(),
            children: [
                n ? d.jsx(st, {
                    icon: n,
                    variant: {
                        size: "6xl"
                    },
                    css: {
                        base: [
                            "text-slate-500",
                            "opacity-50"
                        ]
                    },
                    ...r
                }) : null,
                d.jsx("div", {
                    className: u.title(),
                    children: e
                }),
                d.jsx("div", {
                    className: u.message(),
                    children: t
                }),
                d.jsx("div", {
                    className: u.body(),
                    children: l
                })
            ]
        });
    }, HS = lt({
        slot: {
            base: [
                "min-w-full",
                "flex",
                "flex-col",
                "gap-2",
                "text-sm"
            ],
            table: [
                "min-w-full",
                "w-max",
                "table-fixed"
            ],
            thead: [
                "border",
                "border-slate-200",
                "bg-slate-100"
            ],
            th: [
                "text-left",
                "px-2",
                "py-1",
                "border-t",
                "border-b",
                "border-slate-300"
            ],
            tbody: [],
            tr: [
                "border-b",
                "border-b-slate-200",
                "odd:bg-slate-50",
                "hover:bg-purple-100",
                "hover:border-purple-300"
            ],
            td: [
                "px-2",
                "py-1"
            ],
            tfoot: [],
            select: [
                "cursor-pointer",
                "text-slate-400",
                "hover:text-slate-600"
            ]
        },
        variant: {
            selected: {
                true: []
            }
        },
        match: [
            {
                if: {
                    selected: !0
                },
                then: {
                    tr: [
                        "bg-blue-100",
                        "odd:bg-blue-50",
                        "border-blue-300"
                    ],
                    select: [
                        "text-slate-600"
                    ]
                }
            }
        ],
        defaults: {
            selected: !1
        }
    }), OK = ({ table: e, cell: { column: t, data: n, value: r }, variant: i, tva: o = HS, css: s })=>{
        const l = t.def.render, u = o({
            ...i,
            css: s
        }).slots;
        return d.jsx("td", {
            className: u.td(),
            children: d.jsxs("div", {
                className: "group flex flex-row items-center gap-2 justify-between",
                children: [
                    d.jsx(l, {
                        table: e,
                        data: n,
                        value: r,
                        context: e.context
                    }),
                    t.filter && !t.filter.is() ? d.jsx(st, {
                        icon: eH,
                        css: {
                            base: [
                                "group-hover:visible",
                                "invisible",
                                "opacity-50 hover:opacity-100",
                                "cursor-pointer"
                            ]
                        },
                        variant: {
                            size: "xl"
                        },
                        onClick: ()=>{
                            t.filter && (t.def.filter?.onFilter({
                                data: n,
                                filter: t.filter
                            }), window.scrollTo({
                                top: 0,
                                behavior: "smooth"
                            }));
                        }
                    }) : null
                ]
            })
        });
    }, TK = ({ table: e, row: t, action: n, variant: r, tva: i = HS, css: o })=>{
        const s = i({
            ...r,
            css: o
        }).slots, l = n?.table, u = n?.row;
        return d.jsxs("tr", {
            className: s.tr({
                css: e.rowCss?.({
                    data: t.data
                }),
                selected: e.selection.isSelected(t)
            }),
            children: [
                l || u || e.selection.enabled ? d.jsx("td", {
                    className: "w-0",
                    children: d.jsxs("div", {
                        className: "flex flex-row items-center gap-2",
                        children: [
                            e.selection.enabled ? d.jsx(st, {
                                icon: e.selection.isSelected(t) ? Sy : Ny,
                                css: {
                                    base: s.select({
                                        selected: e.selection.isSelected(t)
                                    })
                                },
                                variant: {
                                    size: "2xl"
                                },
                                onClick: e.selection.withRowHandler(t)
                            }) : null,
                            u ? d.jsx(u, {
                                table: e,
                                data: t.data
                            }) : null
                        ]
                    })
                }) : null,
                t.cells.map((f)=>d.jsx(OK, {
                        table: e,
                        cell: f,
                        variant: r,
                        tva: i,
                        css: o
                    }, `${t.id}-${f.column.id}`)),
                d.jsx("td", {})
            ]
        });
    }, gn = ({ table: e, fulltext: t, toolbar: n = ()=>null, cursor: r, empty: i = ()=>d.jsx(NF, {
            icon: X8,
            textTitle: d.jsx(B, {
                label: "Nothing here"
            }),
            textMessage: d.jsx(B, {
                label: "There is nothing to see right now."
            })
        }), action: o, variant: s, tva: l = HS, css: u })=>{
        const f = l({
            ...s,
            css: u
        }).slots, p = o?.table, m = o?.row;
        return d.jsxs("div", {
            className: f.base(),
            children: [
                d.jsxs("div", {
                    className: "flex items-center justify-between",
                    children: [
                        d.jsxs("div", {
                            className: "flex flex-row items-center gap-2 w-1/3",
                            children: [
                                d.jsx("div", {
                                    className: "flex items-center gap-6 flex-grow",
                                    children: t ? d.jsx(YA, {
                                        value: t.value,
                                        onFulltext: t.set
                                    }) : null
                                }),
                                d.jsx("div", {
                                    className: "flex flex-row items-center gap-2",
                                    children: d.jsx(n, {
                                        table: e
                                    })
                                })
                            ]
                        }),
                        d.jsxs("div", {
                            className: "flex flex-row items-center justify-center gap-2",
                            children: [
                                d.jsx(WC, {
                                    ...r
                                }),
                                e.filter.is() && d.jsx(Wf, {
                                    iconEnabled: ZC,
                                    css: {
                                        base: [
                                            "text-amber-500"
                                        ]
                                    },
                                    onClick: ()=>e.filter.reset()
                                })
                            ]
                        })
                    ]
                }),
                d.jsx("div", {
                    className: "relative overflow-x-auto",
                    children: d.jsxs("table", {
                        className: f.table(),
                        children: [
                            d.jsx("thead", {
                                className: f.thead(),
                                children: d.jsxs("tr", {
                                    children: [
                                        p || m || e.selection.enabled ? d.jsx("th", {
                                            className: "w-0",
                                            children: d.jsxs("div", {
                                                className: "flex flex-row items-center gap-2",
                                                children: [
                                                    e.selection.enabled ? d.jsx(st, {
                                                        icon: e.selection.isAll() ? Sy : e.selection.isAny() ? tH : Ny,
                                                        variant: {
                                                            disabled: e.selection.isSingle,
                                                            size: "2xl"
                                                        },
                                                        css: {
                                                            base: f.select({
                                                                selected: e.selection.isAny()
                                                            })
                                                        },
                                                        onClick: e.selection.withAllHandler()
                                                    }) : null,
                                                    p ? d.jsx(p, {
                                                        table: e
                                                    }) : null
                                                ]
                                            })
                                        }) : null,
                                        e.visible.map((g)=>{
                                            const v = g.def.header || (()=>null);
                                            return d.jsx("th", {
                                                className: f.th(),
                                                style: g.def.size ? {
                                                    width: `${g.def.size}rem`
                                                } : void 0,
                                                children: d.jsxs("div", {
                                                    className: "flex flex-row items-center justify-between",
                                                    children: [
                                                        d.jsx(v, {
                                                            table: e
                                                        }),
                                                        d.jsx("div", {
                                                            className: "flex flex-row items-center gap-2",
                                                            children: g.filter?.is() && d.jsx(st, {
                                                                icon: ZC,
                                                                variant: {
                                                                    size: "md"
                                                                },
                                                                css: {
                                                                    base: [
                                                                        "opacity-50",
                                                                        "hover:opacity-100",
                                                                        "cursor-pointer"
                                                                    ]
                                                                },
                                                                onClick: ()=>{
                                                                    g.filter?.reset();
                                                                }
                                                            })
                                                        })
                                                    ]
                                                })
                                            }, g.id);
                                        }),
                                        d.jsx("th", {})
                                    ]
                                })
                            }),
                            e.isEmpty ? null : d.jsx("tbody", {
                                className: f.tbody(),
                                children: e.rows?.map((g)=>d.jsx(TK, {
                                        row: g,
                                        table: e,
                                        action: o,
                                        variant: s,
                                        tva: l,
                                        css: u
                                    }, g.id))
                            })
                        ]
                    })
                }),
                e.isEmpty ? d.jsx(i, {}) : null,
                d.jsxs("div", {
                    className: "flex flex-row items-center justify-end gap-2",
                    children: [
                        d.jsx("div", {}),
                        d.jsx(WC, {
                            ...r
                        })
                    ]
                })
            ]
        });
    }, yn = ({ columns: e, order: t = e.map((f)=>f.name), hidden: n = [], visible: r = e.map((f)=>f.name), data: i, filter: o, selection: s, context: l, rowCss: u })=>{
        const f = {
            ...o?.value || {}
        }, p = fC(f || {}), m = new Set(s?.value), g = e.map((x)=>({
                id: XC(),
                def: x,
                filter: x.filter ? {
                    is () {
                        return x.filter ? p.get(x.filter.path) !== void 0 : !1;
                    },
                    reset () {
                        x.filter && p.set(x.filter.path, void 0), o?.set({
                            ...f
                        });
                    },
                    shallow (b, S) {
                        x.filter && p.set(b, S), o?.set({
                            ...f
                        });
                    },
                    set (b) {
                        o?.set({
                            ...b
                        });
                    }
                } : void 0
            })), v = g.filter((x)=>r.includes(x.def.name) && !n.includes(x.def.name)).sort((x, b)=>{
            const S = t.indexOf(x.def.name), N = t.indexOf(b.def.name);
            return (S === -1 ? 1 / 0 : S) - (N === -1 ? 1 / 0 : N);
        });
        return {
            data: i,
            columns: g,
            visible: v,
            rowCss: u,
            rows: i?.map((x)=>({
                    id: XC(),
                    data: x,
                    cells: v.map((b)=>({
                            column: b,
                            data: x,
                            value: fC(x).get(b.def.name)
                        }))
                })),
            isEmpty: i.length === 0,
            filter: {
                is () {
                    return g.some((x)=>x.filter?.is());
                },
                reset () {
                    o?.set({});
                },
                set (x) {
                    o?.set({
                        ...x
                    });
                },
                shallow (x, b) {
                    p.set(x, b);
                }
            },
            selection: {
                enabled: !!s && i.length > 0,
                selection: Array.from(m),
                isSingle: s?.type === "single",
                isMulti: s?.type === "multi",
                isSelected ({ data: x }) {
                    return m.has(x.id) || !1;
                },
                isAll () {
                    return i.every((x)=>m.has(x.id));
                },
                isAny () {
                    return i.some((x)=>m.has(x.id));
                },
                withRowHandler ({ data: x }) {
                    return ()=>{
                        if (s?.type === "single") {
                            const b = m.has(x.id);
                            m.clear(), b ? m.delete(x.id) : m.add(x.id);
                        } else m.has(x.id) ? m.delete(x.id) : m.add(x.id);
                        s?.set(Array.from(m));
                    };
                },
                withAllHandler () {
                    return ()=>{
                        i.every((x)=>m.has(x.id)) ? m.clear() : i.forEach(({ id: x })=>m.add(x)), s?.set(Array.from(m));
                    };
                }
            },
            context: l
        };
    }, vn = ()=>(e)=>e, SF = ({ tags: e = [], render: t = ({ tag: i })=>i.label, onClick: n, textEmpty: r })=>{
        const i = e.filter(Boolean).sort((o, s)=>o.sort - s.sort);
        return d.jsx("div", {
            className: "flex flex-wrap flex-row gap-2 items-center",
            children: i.length ? i.map((o)=>d.jsx(cr, {
                    onClick: ()=>n?.(o),
                    children: d.jsx(t, {
                        tag: o
                    })
                }, o.id)) : r || d.jsx(B, {
                label: "No tags (label)"
            })
        });
    }, PK = lt({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center"
            ],
            title: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "text-lg",
                "text-slate-500",
                "font-bold"
            ],
            subtitle: [
                "flex",
                "flex-row",
                "gap-4",
                "items-center",
                "text-lg"
            ]
        },
        variant: {
            withSubtitle: {
                true: []
            }
        },
        match: [
            {
                if: {
                    withSubtitle: !0
                },
                then: {
                    title: [
                        "border-r",
                        "border-r-slate-300",
                        "pr-2"
                    ]
                }
            }
        ],
        defaults: {
            withSubtitle: !1
        }
    }), uu = ({ icon: e, title: t, subtitle: n, variant: r, tva: i = PK, css: o })=>{
        const s = i({
            withSubtitle: !!n,
            ...r,
            css: o
        }).slots;
        return d.jsxs("div", {
            className: s.base(),
            children: [
                d.jsxs("div", {
                    className: s.title(),
                    children: [
                        e ? d.jsx(st, {
                            icon: e
                        }) : null,
                        t
                    ]
                }),
                n ? d.jsx("div", {
                    className: s.subtitle(),
                    children: n
                }) : null
            ]
        });
    };
    var $h = {}, gj;
    function AK() {
        if (gj) return $h;
        gj = 1;
        var e = cT();
        return $h.createRoot = e.createRoot, $h.hydrateRoot = e.hydrateRoot, $h;
    }
    var FK = AK();
    const DK = fi(FK), KS = Nq()({}), MK = Le("/$locale")({
        component: Pi,
        loader: async ({ params: { locale: e } })=>{
            try {
                Wr.push((await LK(`../translation/${e}.yaml`)).default);
            } catch (t) {
                console.error(t);
            }
        }
    });
    function LK(e) {
        switch(e){
            case "../translation/cs":
            case "../translation/cs.yaml":
                return bg(()=>import("./cs-BUpUyNKP.js"), []);
            case "../translation/en":
            case "../translation/en.yaml":
                return bg(()=>import("./en-CvMFGEQe.js"), []);
            default:
                return new Promise(function(t, n) {
                    (typeof queueMicrotask == "function" ? queueMicrotask : setTimeout)(n.bind(null, new Error("Unknown variable dynamic import: " + e)));
                });
        }
    }
    const IF = "cs", $K = [
        IF,
        "en"
    ], qK = Le("/")({
        loader: async ()=>{
            throw _f({
                to: "/$locale",
                params: {
                    locale: Uz({
                        available: $K,
                        fallback: IF
                    })
                }
            });
        }
    }), BK = Le("/$locale/")({
        component: ()=>{
            const { locale: e } = Ke({
                from: "/$locale"
            });
            return d.jsx("div", {
                className: "flex flex-col items-center justify-center h-screen w-screen",
                children: d.jsxs("div", {
                    className: "rounded-sm bg-slate-50 p-4 shadow-md border border-slate-300",
                    children: [
                        d.jsx("h1", {
                            className: "text-3xl text-center",
                            children: "Apps"
                        }),
                        d.jsx("ul", {
                            children: d.jsx("li", {
                                children: d.jsx(Te, {
                                    icon: "icon-[bx--game]",
                                    to: "/$locale/apps/derivean/public/login",
                                    params: {
                                        locale: e
                                    },
                                    children: "DeRivean"
                                })
                            })
                        })
                    ]
                })
            });
        }
    }), { kysely: Pe, bootstrap: zK } = K8({
        database: "derivean",
        async bootstrap ({ kysely: e }) {
            const t = "varchar(36)";
            try {
                await e.selectFrom("User").select((n)=>n.fn.countAll().as("count")).executeTakeFirstOrThrow();
            } catch  {
                await e.schema.createTable("User").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("name", "varchar(64)", (r)=>r.notNull()).addColumn("login", "varchar(128)", (r)=>r.notNull()).addColumn("password", "varchar(256)", (r)=>r.notNull()).addUniqueConstraint("[User] login", [
                    "login"
                ]).execute(), await e.schema.createTable("Tag").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("code", "varchar(64)", (r)=>r.notNull()).addColumn("label", "varchar(128)", (r)=>r.notNull()).addColumn("group", "varchar(64)").addColumn("sort", "integer", (r)=>r.notNull().defaultTo(0)).addUniqueConstraint("Tag_code_group", [
                    "code",
                    "group"
                ]).execute(), await e.schema.createTable("Resource").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("name", "varchar(64)", (r)=>r.notNull()).addColumn("weight", "integer", (r)=>r.notNull().defaultTo(1)).addColumn("image", "text").addUniqueConstraint("[Resource] name", [
                    "name"
                ]).execute(), await e.schema.createTable("Resource_Tag").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("resourceId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Resource_Tag] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("tagId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Resource_Tag] tagId", [
                    "tagId"
                ], "Tag", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Resource_Tag] resourceId-tagId", [
                    "resourceId",
                    "tagId"
                ]).execute();
                for await (const r of [
                    "resourceId",
                    "tagId"
                ])await e.schema.createIndex(`[Resource_Tag] ${r}`).on("Resource_Tag").columns([
                    r
                ]).execute();
                await e.schema.createTable("Inventory").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("resourceId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Inventory] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("limit", "float4", (r)=>r.notNull()).addColumn("type", "varchar(16)", (r)=>r.notNull().defaultTo("storage")).execute(), await e.schema.createIndex("[Inventory] resourceId").on("Inventory").columns([
                    "resourceId"
                ]).execute(), await e.schema.createTable("Region").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("name", "varchar(128)", (r)=>r.notNull()).addColumn("probability", "integer", (r)=>r.notNull()).addColumn("limit", "integer", (r)=>r.notNull()).addColumn("image", "text").execute(), await e.schema.createTable("Region_Inventory").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("regionId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Region_Inventory] regionId", [
                    "regionId"
                ], "Region", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Region_Inventory] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("minAmount", "float4", (r)=>r.notNull()).addColumn("maxAmount", "float4", (r)=>r.notNull()).addColumn("minLimit", "float4", (r)=>r.notNull()).addColumn("maxLimit", "float4", (r)=>r.notNull()).addUniqueConstraint("[Region_Inventory] regionId-resourceId", [
                    "regionId",
                    "resourceId"
                ]).execute();
                for await (const r of [
                    "regionId",
                    "resourceId"
                ])await e.schema.createIndex(`[Region_Inventory] ${r}`).on("Region_Inventory").columns([
                    r
                ]).execute();
                await e.schema.createTable("Map").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("userId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Map] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("name", "varchar(128)", (r)=>r.notNull()).addUniqueConstraint("[Map] userId-name", [
                    "userId",
                    "name"
                ]).execute(), await e.schema.createIndex("[Map] userId").on("Map").columns([
                    "userId"
                ]).execute(), await e.schema.createTable("Cycle").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("userId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Cycle] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Cycle] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("stamp", "datetime", (r)=>r.defaultTo(un`CURRENT_TIMESTAMP`).notNull()).execute();
                for await (const r of [
                    "userId",
                    "mapId"
                ])await e.schema.createIndex(`[Cycle] ${r}`).on("Cycle").columns([
                    r
                ]).execute();
                await e.schema.createTable("Land").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("mapId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Land] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("regionId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Land] regionId", [
                    "regionId"
                ], "Region", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("position", "integer", (r)=>r.notNull()).execute();
                for await (const r of [
                    "mapId",
                    "regionId"
                ])await e.schema.createIndex(`[Land] ${r}`).on("Land").columns([
                    r
                ]).execute();
                await e.schema.createTable("Land_Inventory").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("landId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Land_Inventory] landId", [
                    "landId"
                ], "Land", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("inventoryId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Land_Inventory] inventoryId", [
                    "inventoryId"
                ], "Inventory", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Land_Inventory] landId-inventoryId", [
                    "landId",
                    "inventoryId"
                ]).execute();
                for await (const r of [
                    "landId",
                    "inventoryId"
                ])await e.schema.createIndex(`[Land_Inventory] ${r}`).on("Land_Inventory").columns([
                    r
                ]).execute();
                await e.schema.createTable("Blueprint").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("name", "varchar(64)", (r)=>r.notNull()).addColumn("cycles", "integer", (r)=>r.notNull()).addColumn("sort", "integer", (r)=>r.notNull()).addColumn("limit", "integer", (r)=>r.notNull().defaultTo(1)).addColumn("image", "text").addUniqueConstraint("[Blueprint] name", [
                    "name"
                ]).execute(), await e.schema.createTable("Blueprint_Region").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("blueprintId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Region] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("regionId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Region] regionId", [
                    "regionId"
                ], "Region", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Region] blueprintId-regionId", [
                    "blueprintId",
                    "regionId"
                ]).execute(), await e.schema.createTable("Blueprint_Inventory").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("blueprintId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Inventory] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("inventoryId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Inventory] inventoryId", [
                    "inventoryId"
                ], "Inventory", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Inventory] blueprintId-inventoryId", [
                    "blueprintId",
                    "inventoryId"
                ]).execute(), await e.schema.createTable("Blueprint_Production").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("blueprintId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("cycles", "integer", (r)=>r.notNull()).execute(), await e.schema.createTable("Blueprint_Requirement").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("blueprintId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Requirement] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Requirement] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("passive", "boolean", (r)=>r.notNull()).addUniqueConstraint("[Blueprint_Requirement] blueprintId-requirementId", [
                    "blueprintId",
                    "resourceId"
                ]).execute(), await e.schema.createTable("Blueprint_Dependency").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("blueprintId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Dependency] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("dependencyId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Dependency] dependencyId", [
                    "dependencyId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Dependency] blueprintId-dependencyId", [
                    "blueprintId",
                    "dependencyId"
                ]).execute(), await e.schema.createTable("Blueprint_Conflict").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("blueprintId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Conflict] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("conflictId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Conflict] conflictId", [
                    "conflictId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Conflict] blueprintId-conflictId", [
                    "blueprintId",
                    "conflictId"
                ]).execute(), await e.schema.createTable("Blueprint_Production_Requirement").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("blueprintProductionId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Requirement] blueprintProductionId", [
                    "blueprintProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Requirement] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("passive", "boolean", (r)=>r.notNull()).addUniqueConstraint("[Blueprint_Production_Requirement] blueprintProductionId-resourceId", [
                    "blueprintProductionId",
                    "resourceId"
                ]).execute(), await e.schema.createTable("Blueprint_Production_Dependency").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("blueprintProductionId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Dependency] blueprintProductionId", [
                    "blueprintProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("blueprintId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Dependency] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Production_Dependency] blueprintProductionId-blueprintId", [
                    "blueprintProductionId",
                    "blueprintId"
                ]).execute(), await e.schema.createTable("Blueprint_Production_Resource").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("blueprintProductionId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Dependency] blueprintProductionId", [
                    "blueprintProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Dependency] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addUniqueConstraint("[Blueprint_Production_Dependency] blueprintProductionId-resourceId", [
                    "blueprintProductionId",
                    "resourceId"
                ]).execute(), await e.schema.createTable("Production").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("userId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Production] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("buildingId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Production] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("blueprintProductionId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Production] blueprintProductionId", [
                    "blueprintProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("cycles", "integer", (r)=>r.notNull()).addColumn("cycle", "integer", (r)=>r.notNull()).execute(), await e.schema.createTable("Construction").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("userId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Construction] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("plan", "boolean", (r)=>r.notNull().defaultTo(!0)).addColumn("cycles", "integer", (r)=>r.notNull()).addColumn("cycle", "integer", (r)=>r.notNull()).execute(), await e.schema.createTable("Plot").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("userId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Plot] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Plot] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("landId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Plot] landId", [
                    "landId"
                ], "Land", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("position", "integer", (r)=>r.notNull()).execute(), await e.schema.createTable("Building").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("userId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Building] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("plotId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Building] plotId", [
                    "plotId"
                ], "Plot", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("blueprintId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Building] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("constructionId", t).addForeignKeyConstraint("[Building] constructionId", [
                    "constructionId"
                ], "Construction", [
                    "id"
                ], (r)=>r.onDelete("set null").onUpdate("set null")).addColumn("landId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Building] landId", [
                    "landId"
                ], "Land", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("productionId", t).addForeignKeyConstraint("[Building] productionId", [
                    "productionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("recurringProductionId", t).addForeignKeyConstraint("[Building] recurringProductionId", [
                    "recurringProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("valid", "boolean", (r)=>r.notNull().defaultTo(!0)).execute();
                for await (const r of [
                    "userId",
                    "blueprintId",
                    "constructionId",
                    "landId",
                    "productionId",
                    "recurringProductionId"
                ])await e.schema.createIndex(`[Building] ${r}`).on("Building").columns([
                    r
                ]).execute();
                await e.schema.createTable("Building_Inventory").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("buildingId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Building_Inventory] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("inventoryId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Building_Inventory] inventoryId", [
                    "inventoryId"
                ], "Inventory", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Building_Inventory] buildingId-inventoryId", [
                    "buildingId",
                    "inventoryId"
                ]).execute(), await e.schema.createTable("Building_To_Building").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("userId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Building_To_Building] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Building_To_Building] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("buildingId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Building_To_Building] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("linkId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Building_To_Building] linkId", [
                    "linkId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Building_To_Building] buildingId-linkId", [
                    "buildingId",
                    "linkId"
                ]).execute();
                for await (const r of [
                    "userId",
                    "mapId",
                    "buildingId",
                    "linkId"
                ])await e.schema.createIndex(`[Building_To_Building] ${r}`).on("Building_To_Building").columns([
                    r
                ]).execute();
                await e.schema.createTable("Road").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("plotId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Road] plotId", [
                    "plotId"
                ], "Plot", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).execute(), await e.schema.createTable("Supply").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("userId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Supply] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Supply] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("buildingId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Supply] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Supply] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Supply] buildingId-resourceId", [
                    "buildingId",
                    "resourceId"
                ]).execute(), await e.schema.createTable("Demand").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("userId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("buildingId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Demand] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Demand] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("priority", "integer", (r)=>r.notNull().defaultTo(0)).addColumn("type", "varchar(16)", (r)=>r.notNull().defaultTo("storage")).addUniqueConstraint("[Demand] buildingId-resourceId", [
                    "buildingId",
                    "resourceId"
                ]).execute(), await e.schema.createTable("Transport").ifNotExists().addColumn("id", t, (r)=>r.primaryKey()).addColumn("userId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("roadId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] roadId", [
                    "roadId"
                ], "Road", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("sourceId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] sourceId", [
                    "sourceId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("targetId", t, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] targetId", [
                    "targetId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("type", "varchar(16)", (r)=>r.notNull().defaultTo("storage")).execute();
                for await (const r of [
                    "userId",
                    "mapId",
                    "resourceId",
                    "roadId",
                    "sourceId",
                    "targetId"
                ])await e.schema.createIndex(`[Transport] ${r}`).on("Transport").columns([
                    r
                ]).execute();
            }
        }
    }), WK = Le("/$locale/apps/derivean")({
        async loader ({ context: { queryClient: e, kysely: t } }) {
            return await zK(), {
                image: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        "image"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (n)=>er({
                                select: n.selectFrom("Blueprint as b").select([
                                    "b.id",
                                    "b.image"
                                ]).where("b.image", "is not", null).union(n.selectFrom("Region as r").select([
                                    "r.id",
                                    "r.image"
                                ]).where("r.image", "is not", null)).union(n.selectFrom("Resource as r").select([
                                    "r.id",
                                    "r.image"
                                ]).where("r.image", "is not", null)),
                                output: T.object({
                                    id: T.string().min(1),
                                    image: T.string()
                                })
                            }));
                    }
                })
            };
        }
    }), _F = "icon-[proicons--game]", VK = lt({
        slot: {
            base: [
                "text-orange-500",
                "font-bold",
                "text-2xl",
                "shadow-md",
                "hover:shadow-lg",
                "hover:text-orange-600",
                "rounded-sm",
                "px-2",
                "py-1",
                "bg-slate-100"
            ]
        },
        variant: {},
        defaults: {}
    }), EF = ({ variant: e, tva: t = VK, css: n })=>{
        const r = t({
            ...e,
            css: n
        }).slots;
        return d.jsx("div", {
            className: r.base(),
            children: "DeRivean"
        });
    }, ui = "icon-[fluent--building-shop-20-regular]", kg = "icon-[oui--vis-map-region]", Xt = "icon-[hugeicons--resources-add]", UK = (e)=>{
        const { locale: t } = Ke({
            from: "/$locale"
        });
        return d.jsxs(wl, {
            ...e,
            children: [
                d.jsx(Dt, {
                    icon: "icon-[ph--graph-light]",
                    to: "/$locale/apps/derivean/root/editor",
                    params: {
                        locale: t
                    },
                    children: d.jsx(B, {
                        label: "Editor (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: ui,
                    to: "/$locale/apps/derivean/root/blueprint/list",
                    params: {
                        locale: t
                    },
                    match: [
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/view"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/dependencies"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/production"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/requirements"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/edit"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/production/$id/requirements"
                        }
                    ],
                    children: d.jsx(B, {
                        label: "Blueprint list (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: kg,
                    to: "/$locale/apps/derivean/root/region/list",
                    params: {
                        locale: t
                    },
                    children: d.jsx(B, {
                        label: "Region list (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: Xt,
                    to: "/$locale/apps/derivean/root/resource/list",
                    params: {
                        locale: t
                    },
                    children: d.jsx(B, {
                        label: "Resource list (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: US,
                    to: "/$locale/apps/derivean/root/user/list",
                    params: {
                        locale: t
                    },
                    match: [
                        {
                            to: "/$locale/apps/derivean/root/user/$id/view"
                        },
                        {
                            to: "/$locale/apps/derivean/root/user/$id/building/list"
                        }
                    ],
                    children: d.jsx(B, {
                        label: "User list (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: uf,
                    to: "/$locale/apps/derivean/root/tag/list",
                    params: {
                        locale: t
                    },
                    children: d.jsx(B, {
                        label: "Tag list (menu)"
                    })
                })
            ]
        });
    }, Vf = T.object({
        id: T.string(),
        name: T.string(),
        login: T.string()
    }), HK = Le("/$locale/apps/derivean/root")({
        async beforeLoad ({ context: e, params: { locale: t } }) {
            return {
                ...e,
                async session () {
                    try {
                        return Vf.parse(lu.get("session"));
                    } catch  {
                        throw _f({
                            to: "/$locale/apps/derivean/public/login",
                            params: {
                                locale: t
                            }
                        });
                    }
                }
            };
        },
        async loader ({ context: { session: e } }) {
            return {
                session: await e()
            };
        },
        component: ()=>{
            const { locale: e } = Ke({
                from: "/$locale"
            }), { session: t } = On({
                from: "/$locale/apps/derivean/root"
            });
            return d.jsx(yF, {
                logo: d.jsx(Te, {
                    to: "/$locale/apps/derivean/root",
                    params: {
                        locale: e
                    },
                    children: d.jsx(EF, {})
                }),
                menu: d.jsx(UK, {}),
                actions: d.jsxs(d.Fragment, {
                    children: [
                        t.name,
                        d.jsx(Te, {
                            icon: _F,
                            to: "/$locale/apps/derivean/game",
                            params: {
                                locale: e
                            }
                        }),
                        d.jsx(Te, {
                            icon: VS,
                            to: "/$locale/apps/derivean/public/logout",
                            params: {
                                locale: e
                            },
                            preload: !1
                        })
                    ]
                })
            });
        }
    }), KK = Le("/$locale/apps/derivean/map")({
        async beforeLoad ({ context: e, params: { locale: t } }) {
            return {
                ...e,
                async session () {
                    try {
                        return Vf.parse(lu.get("session"));
                    } catch  {
                        throw _f({
                            to: "/$locale/apps/derivean/public/login",
                            params: {
                                locale: t
                            }
                        });
                    }
                }
            };
        },
        component () {
            return d.jsxs(d.Fragment, {
                children: [
                    d.jsx(gT, {
                        position: "top-right"
                    }),
                    d.jsx(Pi, {})
                ]
            });
        }
    }), GK = Le("/$locale/apps/derivean/game")({
        async beforeLoad ({ context: e, params: { locale: t } }) {
            return {
                ...e,
                async session () {
                    try {
                        return Vf.parse(lu.get("session"));
                    } catch  {
                        throw _f({
                            to: "/$locale/apps/derivean/public/login",
                            params: {
                                locale: t
                            }
                        });
                    }
                }
            };
        },
        async loader ({ context: { queryClient: e, kysely: t, session: n } }) {
            const r = await n();
            return {
                session: r,
                cycle: await e.ensureQueryData({
                    queryKey: [
                        "Cycle"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (i)=>(await i.selectFrom("Cycle as c").select((o)=>o.fn.count("c.id").as("count")).where("c.userId", "=", r.id).executeTakeFirstOrThrow()).count);
                    }
                })
            };
        },
        component () {
            const { locale: e } = Ke({
                from: "/$locale"
            }), { session: t } = On({
                from: "/$locale/apps/derivean/game"
            }), n = z$({
                filters: {
                    status: "pending",
                    mutationKey: [
                        "useCycleMutation"
                    ]
                },
                select (r) {
                    return r.state.status;
                }
            });
            return d.jsx(yF, {
                logo: d.jsx(Te, {
                    to: "/$locale/apps/derivean/game",
                    params: {
                        locale: e
                    },
                    children: d.jsx(EF, {})
                }),
                actions: d.jsxs(d.Fragment, {
                    children: [
                        t.name,
                        d.jsx(Te, {
                            icon: "icon-[clarity--crown-line]",
                            to: "/$locale/apps/derivean/root",
                            params: {
                                locale: e
                            }
                        }),
                        d.jsx(Te, {
                            icon: VS,
                            to: "/$locale/apps/derivean/public/logout",
                            params: {
                                locale: e
                            },
                            preload: !1
                        })
                    ]
                }),
                css: {
                    base: n.length ? [
                        "select-none",
                        "pointer-events-none",
                        "opacity-50"
                    ] : void 0
                },
                children: d.jsx(Pi, {})
            });
        }
    });
    var pm = {
        exports: {}
    }, QK = pm.exports, yj;
    function JK() {
        return yj || (yj = 1, function(e, t) {
            (function(n, r) {
                r();
            })(QK, function() {
                function n(f, p) {
                    return typeof p > "u" ? p = {
                        autoBom: !1
                    } : typeof p != "object" && (console.warn("Deprecated: Expected third argument to be a object"), p = {
                        autoBom: !p
                    }), p.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(f.type) ? new Blob([
                        "\uFEFF",
                        f
                    ], {
                        type: f.type
                    }) : f;
                }
                function r(f, p, m) {
                    var g = new XMLHttpRequest;
                    g.open("GET", f), g.responseType = "blob", g.onload = function() {
                        u(g.response, p, m);
                    }, g.onerror = function() {
                        console.error("could not download file");
                    }, g.send();
                }
                function i(f) {
                    var p = new XMLHttpRequest;
                    p.open("HEAD", f, !1);
                    try {
                        p.send();
                    } catch  {}
                    return 200 <= p.status && 299 >= p.status;
                }
                function o(f) {
                    try {
                        f.dispatchEvent(new MouseEvent("click"));
                    } catch  {
                        var p = document.createEvent("MouseEvents");
                        p.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), f.dispatchEvent(p);
                    }
                }
                var s = typeof window == "object" && window.window === window ? window : typeof self == "object" && self.self === self ? self : typeof Ua == "object" && Ua.global === Ua ? Ua : void 0, l = s.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent), u = s.saveAs || (typeof window != "object" || window !== s ? function() {} : "download" in HTMLAnchorElement.prototype && !l ? function(f, p, m) {
                    var g = s.URL || s.webkitURL, v = document.createElement("a");
                    p = p || f.name || "download", v.download = p, v.rel = "noopener", typeof f == "string" ? (v.href = f, v.origin === location.origin ? o(v) : i(v.href) ? r(f, p, m) : o(v, v.target = "_blank")) : (v.href = g.createObjectURL(f), setTimeout(function() {
                        g.revokeObjectURL(v.href);
                    }, 4e4), setTimeout(function() {
                        o(v);
                    }, 0));
                } : "msSaveOrOpenBlob" in navigator ? function(f, p, m) {
                    if (p = p || f.name || "download", typeof f != "string") navigator.msSaveOrOpenBlob(n(f, m), p);
                    else if (i(f)) r(f, p, m);
                    else {
                        var g = document.createElement("a");
                        g.href = f, g.target = "_blank", setTimeout(function() {
                            o(g);
                        });
                    }
                } : function(f, p, m, g) {
                    if (g = g || open("", "_blank"), g && (g.document.title = g.document.body.innerText = "downloading..."), typeof f == "string") return r(f, p, m);
                    var v = f.type === "application/octet-stream", x = /constructor/i.test(s.HTMLElement) || s.safari, b = /CriOS\/[\d]+/.test(navigator.userAgent);
                    if ((b || v && x || l) && typeof FileReader < "u") {
                        var S = new FileReader;
                        S.onloadend = function() {
                            var I = S.result;
                            I = b ? I : I.replace(/^data:[^;]*;/, "data:attachment/file;"), g ? g.location.href = I : location = I, g = null;
                        }, S.readAsDataURL(f);
                    } else {
                        var N = s.URL || s.webkitURL, _ = N.createObjectURL(f);
                        g ? g.location = _ : location.href = _, g = null, setTimeout(function() {
                            N.revokeObjectURL(_);
                        }, 4e4);
                    }
                });
                s.saveAs = u.saveAs = u, e.exports = u;
            });
        }(pm)), pm.exports;
    }
    var ZK = JK();
    const YK = fi(ZK), hw = [
        "Tag",
        "Resource",
        "Resource_Tag",
        "Blueprint",
        "Inventory",
        "Region",
        "Region_Inventory",
        "Blueprint_Inventory",
        "Blueprint_Region",
        "Blueprint_Dependency",
        "Blueprint_Conflict",
        "Blueprint_Requirement",
        "Blueprint_Production",
        "Blueprint_Production_Requirement",
        "Blueprint_Production_Dependency",
        "Blueprint_Production_Resource"
    ], XK = Le("/$locale/apps/derivean/root/")({
        component () {
            const e = Ye({
                mutationKey: [
                    "export"
                ],
                async mutationFn () {
                    return _t.promise((async ()=>{
                        const t = [];
                        await Pe.transaction().execute(async (n)=>{
                            for await (const r of hw)t.push({
                                source: r,
                                entities: await n.selectFrom(r).selectAll().execute()
                            });
                        }), YK.saveAs(new Blob([
                            JSON.stringify(t)
                        ], {
                            type: "application/json;charset=utf-8"
                        }), "export.json");
                    })(), dr("Export game files"));
                }
            });
            return d.jsxs("div", {
                className: "flex flex-col gap-4 w-2/3 mx-auto",
                children: [
                    d.jsx(cK, {
                        maxSize: 250 * 1024 ** 2,
                        onDrop: async (t)=>{
                            const [n] = t;
                            if (!n) return;
                            const r = JSON.parse(await n.text());
                            await un`PRAGMA foreign_keys = OFF`.execute(Pe), await _t.promise(Pe.transaction().execute(async (i)=>{
                                for await (const { source: o } of r){
                                    const s = hw.find((l)=>l === o);
                                    s && await i.deleteFrom(s).execute();
                                }
                                for await (const { source: o, entities: s } of r){
                                    const l = hw.find((u)=>u === o);
                                    if (l) for await (const u of Object.values(s))await i.insertInto(l).values(u).execute();
                                }
                                await un`
                                    DELETE FROM Inventory
                                    WHERE NOT EXISTS (
                                        SELECT 1 FROM Blueprint_Inventory 
                                        WHERE Blueprint_Inventory.inventoryId = Inventory.id
                                    )
                                `.execute(i);
                            }), dr("Import game files")), await un`PRAGMA foreign_keys = ON`.execute(Pe);
                        }
                    }),
                    d.jsx("div", {
                        className: "flex items-center justify-center mt-10 gap-4",
                        children: d.jsx(ft, {
                            iconEnabled: _F,
                            loading: e.isPending,
                            onClick: ()=>e.mutate(),
                            variant: {
                                variant: "subtle"
                            },
                            children: d.jsx(B, {
                                label: "Export game files (label)"
                            })
                        })
                    }),
                    d.jsx("h2", {
                        children: "TODO"
                    }),
                    d.jsxs("ul", {
                        className: "flex flex-col gap-2",
                        children: [
                            d.jsx("li", {
                                children: "Add notification center like inventory is full, production is full and so on."
                            }),
                            d.jsx("li", {
                                children: 'Upgrades: Put everything into the building, drive upgrades by passive "Research" points'
                            }),
                            d.jsx("li", {
                                children: "Bundle default gameplay as exported json (put into public); add button to root to load default/selected gameplay; idea is a few buttons: Settler like, Fantasy, AoE and so on."
                            }),
                            d.jsx("li", {
                                children: "Define game ending rules: amount of resources in (individual resourece per required cycle), required building in a cycle. When a player fail, game end with the ability to reset. Each game rule may have an ending message to show."
                            }),
                            d.jsx("li", {
                                children: "Define winning rules: amount of resources / building built in specific cycle. When rules are not met, it's like a fail."
                            }),
                            d.jsx("li", {
                                children: "Add something like world available resources + the ability to drain and add resources to the world. Something like Wolrd_Inventory where 0 means unlimited resources."
                            }),
                            d.jsx("li", {
                                children: "World renewal resources: a list of resources with cycles and amount when they got renewed (world_renewal_queue)."
                            }),
                            d.jsx("li", {
                                children: "Defines seasons: list of cyclic seasons with their length; resource production may be bound to specific season(s)."
                            }),
                            d.jsx("li", {
                                children: "Add maintenance cost for a building: when a cycle ends, cost is deducted from the inventory. If there is not enough resources, building will be marked as offline (closed for production)."
                            }),
                            d.jsx("li", {
                                children: "Dispaly resources per season (some resources will be available only in specific season)"
                            }),
                            d.jsx("li", {
                                children: "Add resource probability drop: some resources may have not be produces (like a crop). This should be thinked out."
                            })
                        ]
                    })
                ]
            });
        }
    });
    var Uf = (e)=>e.type === "checkbox", Za = (e)=>e instanceof Date, xr = (e)=>e == null;
    const kF = (e)=>typeof e == "object";
    var Nn = (e)=>!xr(e) && !Array.isArray(e) && kF(e) && !Za(e), CF = (e)=>Nn(e) && e.target ? Uf(e.target) ? e.target.checked : e.target.value : e, e9 = (e)=>e.substring(0, e.search(/\.\d+(\.|$)/)) || e, jF = (e, t)=>e.has(e9(t)), t9 = (e)=>{
        const t = e.constructor && e.constructor.prototype;
        return Nn(t) && t.hasOwnProperty("isPrototypeOf");
    }, GS = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
    function Fr(e) {
        let t;
        const n = Array.isArray(e), r = typeof FileList < "u" ? e instanceof FileList : !1;
        if (e instanceof Date) t = new Date(e);
        else if (e instanceof Set) t = new Set(e);
        else if (!(GS && (e instanceof Blob || r)) && (n || Nn(e))) if (t = n ? [] : {}, !n && !t9(e)) t = e;
        else for(const i in e)e.hasOwnProperty(i) && (t[i] = Fr(e[i]));
        else return e;
        return t;
    }
    var Ey = (e)=>Array.isArray(e) ? e.filter(Boolean) : [], bn = (e)=>e === void 0, je = (e, t, n)=>{
        if (!t || !Nn(e)) return n;
        const r = Ey(t.split(/[,[\].]+?/)).reduce((i, o)=>xr(i) ? i : i[o], e);
        return bn(r) || r === e ? bn(e[t]) ? n : e[t] : r;
    }, Ci = (e)=>typeof e == "boolean", QS = (e)=>/^\w*$/.test(e), RF = (e)=>Ey(e.replace(/["|']|\]/g, "").split(/\.|\[/)), kt = (e, t, n)=>{
        let r = -1;
        const i = QS(t) ? [
            t
        ] : RF(t), o = i.length, s = o - 1;
        for(; ++r < o;){
            const l = i[r];
            let u = n;
            if (r !== s) {
                const f = e[l];
                u = Nn(f) || Array.isArray(f) ? f : isNaN(+i[r + 1]) ? {} : [];
            }
            if (l === "__proto__" || l === "constructor" || l === "prototype") return;
            e[l] = u, e = e[l];
        }
        return e;
    };
    const Cg = {
        BLUR: "blur",
        FOCUS_OUT: "focusout",
        CHANGE: "change"
    }, Ui = {
        onBlur: "onBlur",
        onChange: "onChange",
        onSubmit: "onSubmit",
        onTouched: "onTouched",
        all: "all"
    }, qo = {
        max: "max",
        min: "min",
        maxLength: "maxLength",
        minLength: "minLength",
        pattern: "pattern",
        required: "required",
        validate: "validate"
    }, n9 = St.createContext(null), JS = ()=>St.useContext(n9);
    var OF = (e, t, n, r = !0)=>{
        const i = {
            defaultValues: t._defaultValues
        };
        for(const o in e)Object.defineProperty(i, o, {
            get: ()=>{
                const s = o;
                return t._proxyFormState[s] !== Ui.all && (t._proxyFormState[s] = !r || Ui.all), n && (n[s] = !0), e[s];
            }
        });
        return i;
    }, Dr = (e)=>Nn(e) && !Object.keys(e).length, TF = (e, t, n, r)=>{
        n(e);
        const { name: i, ...o } = e;
        return Dr(o) || Object.keys(o).length >= Object.keys(t).length || Object.keys(o).find((s)=>t[s] === (!r || Ui.all));
    }, Pd = (e)=>Array.isArray(e) ? e : [
            e
        ], PF = (e, t, n)=>!e || !t || e === t || Pd(e).some((r)=>r && (n ? r === t : r.startsWith(t) || t.startsWith(r)));
    function ZS(e) {
        const t = St.useRef(e);
        t.current = e, St.useEffect(()=>{
            const n = !e.disabled && t.current.subject && t.current.subject.subscribe({
                next: t.current.next
            });
            return ()=>{
                n && n.unsubscribe();
            };
        }, [
            e.disabled
        ]);
    }
    function r9(e) {
        const t = JS(), { control: n = t.control, disabled: r, name: i, exact: o } = e || {}, [s, l] = St.useState(n._formState), u = St.useRef(!0), f = St.useRef({
            isDirty: !1,
            isLoading: !1,
            dirtyFields: !1,
            touchedFields: !1,
            validatingFields: !1,
            isValidating: !1,
            isValid: !1,
            errors: !1
        }), p = St.useRef(i);
        return p.current = i, ZS({
            disabled: r,
            next: (m)=>u.current && PF(p.current, m.name, o) && TF(m, f.current, n._updateFormState) && l({
                    ...n._formState,
                    ...m
                }),
            subject: n._subjects.state
        }), St.useEffect(()=>(u.current = !0, f.current.isValid && n._updateValid(!0), ()=>{
                u.current = !1;
            }), [
            n
        ]), St.useMemo(()=>OF(s, n, f.current, !1), [
            s,
            n
        ]);
    }
    var go = (e)=>typeof e == "string", AF = (e, t, n, r, i)=>go(e) ? (r && t.watch.add(e), je(n, e, i)) : Array.isArray(e) ? e.map((o)=>(r && t.watch.add(o), je(n, o))) : (r && (t.watchAll = !0), n);
    function i9(e) {
        const t = JS(), { control: n = t.control, name: r, defaultValue: i, disabled: o, exact: s } = e || {}, l = St.useRef(r);
        l.current = r, ZS({
            disabled: o,
            subject: n._subjects.values,
            next: (p)=>{
                PF(l.current, p.name, s) && f(Fr(AF(l.current, n._names, p.values || n._formValues, !1, i)));
            }
        });
        const [u, f] = St.useState(n._getWatch(r, i));
        return St.useEffect(()=>n._removeUnmounted()), u;
    }
    function o9(e) {
        const t = JS(), { name: n, disabled: r, control: i = t.control, shouldUnregister: o } = e, s = jF(i._names.array, n), l = i9({
            control: i,
            name: n,
            defaultValue: je(i._formValues, n, je(i._defaultValues, n, e.defaultValue)),
            exact: !0
        }), u = r9({
            control: i,
            name: n,
            exact: !0
        }), f = St.useRef(i.register(n, {
            ...e.rules,
            value: l,
            ...Ci(e.disabled) ? {
                disabled: e.disabled
            } : {}
        })), p = St.useMemo(()=>Object.defineProperties({}, {
                invalid: {
                    enumerable: !0,
                    get: ()=>!!je(u.errors, n)
                },
                isDirty: {
                    enumerable: !0,
                    get: ()=>!!je(u.dirtyFields, n)
                },
                isTouched: {
                    enumerable: !0,
                    get: ()=>!!je(u.touchedFields, n)
                },
                isValidating: {
                    enumerable: !0,
                    get: ()=>!!je(u.validatingFields, n)
                },
                error: {
                    enumerable: !0,
                    get: ()=>je(u.errors, n)
                }
            }), [
            u,
            n
        ]), m = St.useMemo(()=>({
                name: n,
                value: l,
                ...Ci(r) || u.disabled ? {
                    disabled: u.disabled || r
                } : {},
                onChange: (g)=>f.current.onChange({
                        target: {
                            value: CF(g),
                            name: n
                        },
                        type: Cg.CHANGE
                    }),
                onBlur: ()=>f.current.onBlur({
                        target: {
                            value: je(i._formValues, n),
                            name: n
                        },
                        type: Cg.BLUR
                    }),
                ref: (g)=>{
                    const v = je(i._fields, n);
                    v && g && (v._f.ref = {
                        focus: ()=>g.focus(),
                        select: ()=>g.select(),
                        setCustomValidity: (x)=>g.setCustomValidity(x),
                        reportValidity: ()=>g.reportValidity()
                    });
                }
            }), [
            n,
            i._formValues,
            r,
            u.disabled,
            l,
            i._fields
        ]);
        return St.useEffect(()=>{
            const g = i._options.shouldUnregister || o, v = (x, b)=>{
                const S = je(i._fields, x);
                S && S._f && (S._f.mount = b);
            };
            if (v(n, !0), g) {
                const x = Fr(je(i._options.defaultValues, n));
                kt(i._defaultValues, n, x), bn(je(i._formValues, n)) && kt(i._formValues, n, x);
            }
            return !s && i.register(n), ()=>{
                (s ? g && !i._state.action : g) ? i.unregister(n) : v(n, !1);
            };
        }, [
            n,
            i,
            s,
            o
        ]), St.useEffect(()=>{
            i._updateDisabledField({
                disabled: r,
                fields: i._fields,
                name: n
            });
        }, [
            r,
            n,
            i
        ]), St.useMemo(()=>({
                field: m,
                formState: u,
                fieldState: p
            }), [
            m,
            u,
            p
        ]);
    }
    const Ir = (e)=>e.render(o9(e));
    var FF = (e, t, n, r, i)=>t ? {
            ...n[e],
            types: {
                ...n[e] && n[e].types ? n[e].types : {},
                [r]: i || !0
            }
        } : {}, vj = (e)=>({
            isOnSubmit: !e || e === Ui.onSubmit,
            isOnBlur: e === Ui.onBlur,
            isOnChange: e === Ui.onChange,
            isOnAll: e === Ui.all,
            isOnTouch: e === Ui.onTouched
        }), xj = (e, t, n)=>!n && (t.watchAll || t.watch.has(e) || [
            ...t.watch
        ].some((r)=>e.startsWith(r) && /^\.\w+/.test(e.slice(r.length))));
    const Ad = (e, t, n, r)=>{
        for (const i of n || Object.keys(e)){
            const o = je(e, i);
            if (o) {
                const { _f: s, ...l } = o;
                if (s) {
                    if (s.refs && s.refs[0] && t(s.refs[0], i) && !r) return !0;
                    if (s.ref && t(s.ref, s.name) && !r) return !0;
                    if (Ad(l, t)) break;
                } else if (Nn(l) && Ad(l, t)) break;
            }
        }
    };
    var s9 = (e, t, n)=>{
        const r = Pd(je(e, n));
        return kt(r, "root", t[n]), kt(e, n, r), e;
    }, YS = (e)=>e.type === "file", ho = (e)=>typeof e == "function", jg = (e)=>{
        if (!GS) return !1;
        const t = e ? e.ownerDocument : 0;
        return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);
    }, hm = (e)=>go(e), XS = (e)=>e.type === "radio", Rg = (e)=>e instanceof RegExp;
    const bj = {
        value: !1,
        isValid: !1
    }, wj = {
        value: !0,
        isValid: !0
    };
    var DF = (e)=>{
        if (Array.isArray(e)) {
            if (e.length > 1) {
                const t = e.filter((n)=>n && n.checked && !n.disabled).map((n)=>n.value);
                return {
                    value: t,
                    isValid: !!t.length
                };
            }
            return e[0].checked && !e[0].disabled ? e[0].attributes && !bn(e[0].attributes.value) ? bn(e[0].value) || e[0].value === "" ? wj : {
                value: e[0].value,
                isValid: !0
            } : wj : bj;
        }
        return bj;
    };
    const Nj = {
        isValid: !1,
        value: null
    };
    var MF = (e)=>Array.isArray(e) ? e.reduce((t, n)=>n && n.checked && !n.disabled ? {
                isValid: !0,
                value: n.value
            } : t, Nj) : Nj;
    function Sj(e, t, n = "validate") {
        if (hm(e) || Array.isArray(e) && e.every(hm) || Ci(e) && !e) return {
            type: n,
            message: hm(e) ? e : "",
            ref: t
        };
    }
    var tc = (e)=>Nn(e) && !Rg(e) ? e : {
            value: e,
            message: ""
        }, Ij = async (e, t, n, r, i, o)=>{
        const { ref: s, refs: l, required: u, maxLength: f, minLength: p, min: m, max: g, pattern: v, validate: x, name: b, valueAsNumber: S, mount: N } = e._f, _ = je(n, b);
        if (!N || t.has(b)) return {};
        const I = l ? l[0] : s, C = (M)=>{
            i && I.reportValidity && (I.setCustomValidity(Ci(M) ? "" : M || ""), I.reportValidity());
        }, A = {}, R = XS(s), D = Uf(s), O = R || D, E = (S || YS(s)) && bn(s.value) && bn(_) || jg(s) && s.value === "" || _ === "" || Array.isArray(_) && !_.length, F = FF.bind(null, b, r, A), j = (M, L, P, V = qo.maxLength, z = qo.minLength)=>{
            const Q = M ? L : P;
            A[b] = {
                type: M ? V : z,
                message: Q,
                ref: s,
                ...F(M ? V : z, Q)
            };
        };
        if (o ? !Array.isArray(_) || !_.length : u && (!O && (E || xr(_)) || Ci(_) && !_ || D && !DF(l).isValid || R && !MF(l).isValid)) {
            const { value: M, message: L } = hm(u) ? {
                value: !!u,
                message: u
            } : tc(u);
            if (M && (A[b] = {
                type: qo.required,
                message: L,
                ref: I,
                ...F(qo.required, L)
            }, !r)) return C(L), A;
        }
        if (!E && (!xr(m) || !xr(g))) {
            let M, L;
            const P = tc(g), V = tc(m);
            if (!xr(_) && !isNaN(_)) {
                const z = s.valueAsNumber || _ && +_;
                xr(P.value) || (M = z > P.value), xr(V.value) || (L = z < V.value);
            } else {
                const z = s.valueAsDate || new Date(_), Q = (G)=>new Date(new Date().toDateString() + " " + G), K = s.type == "time", H = s.type == "week";
                go(P.value) && _ && (M = K ? Q(_) > Q(P.value) : H ? _ > P.value : z > new Date(P.value)), go(V.value) && _ && (L = K ? Q(_) < Q(V.value) : H ? _ < V.value : z < new Date(V.value));
            }
            if ((M || L) && (j(!!M, P.message, V.message, qo.max, qo.min), !r)) return C(A[b].message), A;
        }
        if ((f || p) && !E && (go(_) || o && Array.isArray(_))) {
            const M = tc(f), L = tc(p), P = !xr(M.value) && _.length > +M.value, V = !xr(L.value) && _.length < +L.value;
            if ((P || V) && (j(P, M.message, L.message), !r)) return C(A[b].message), A;
        }
        if (v && !E && go(_)) {
            const { value: M, message: L } = tc(v);
            if (Rg(M) && !_.match(M) && (A[b] = {
                type: qo.pattern,
                message: L,
                ref: s,
                ...F(qo.pattern, L)
            }, !r)) return C(L), A;
        }
        if (x) {
            if (ho(x)) {
                const M = await x(_, n), L = Sj(M, I);
                if (L && (A[b] = {
                    ...L,
                    ...F(qo.validate, L.message)
                }, !r)) return C(L.message), A;
            } else if (Nn(x)) {
                let M = {};
                for(const L in x){
                    if (!Dr(M) && !r) break;
                    const P = Sj(await x[L](_, n), I, L);
                    P && (M = {
                        ...P,
                        ...F(L, P.message)
                    }, C(P.message), r && (A[b] = M));
                }
                if (!Dr(M) && (A[b] = {
                    ref: I,
                    ...M
                }, !r)) return A;
            }
        }
        return C(!0), A;
    };
    function a9(e, t) {
        const n = t.slice(0, -1).length;
        let r = 0;
        for(; r < n;)e = bn(e) ? r++ : e[t[r++]];
        return e;
    }
    function l9(e) {
        for(const t in e)if (e.hasOwnProperty(t) && !bn(e[t])) return !1;
        return !0;
    }
    function Fn(e, t) {
        const n = Array.isArray(t) ? t : QS(t) ? [
            t
        ] : RF(t), r = n.length === 1 ? e : a9(e, n), i = n.length - 1, o = n[i];
        return r && delete r[o], i !== 0 && (Nn(r) && Dr(r) || Array.isArray(r) && l9(r)) && Fn(e, n.slice(0, -1)), e;
    }
    var mw = ()=>{
        let e = [];
        return {
            get observers () {
                return e;
            },
            next: (i)=>{
                for (const o of e)o.next && o.next(i);
            },
            subscribe: (i)=>(e.push(i), {
                    unsubscribe: ()=>{
                        e = e.filter((o)=>o !== i);
                    }
                }),
            unsubscribe: ()=>{
                e = [];
            }
        };
    }, SN = (e)=>xr(e) || !kF(e);
    function zs(e, t) {
        if (SN(e) || SN(t)) return e === t;
        if (Za(e) && Za(t)) return e.getTime() === t.getTime();
        const n = Object.keys(e), r = Object.keys(t);
        if (n.length !== r.length) return !1;
        for (const i of n){
            const o = e[i];
            if (!r.includes(i)) return !1;
            if (i !== "ref") {
                const s = t[i];
                if (Za(o) && Za(s) || Nn(o) && Nn(s) || Array.isArray(o) && Array.isArray(s) ? !zs(o, s) : o !== s) return !1;
            }
        }
        return !0;
    }
    var LF = (e)=>e.type === "select-multiple", c9 = (e)=>XS(e) || Uf(e), gw = (e)=>jg(e) && e.isConnected, $F = (e)=>{
        for(const t in e)if (ho(e[t])) return !0;
        return !1;
    };
    function Og(e, t = {}) {
        const n = Array.isArray(e);
        if (Nn(e) || n) for(const r in e)Array.isArray(e[r]) || Nn(e[r]) && !$F(e[r]) ? (t[r] = Array.isArray(e[r]) ? [] : {}, Og(e[r], t[r])) : xr(e[r]) || (t[r] = !0);
        return t;
    }
    function qF(e, t, n) {
        const r = Array.isArray(e);
        if (Nn(e) || r) for(const i in e)Array.isArray(e[i]) || Nn(e[i]) && !$F(e[i]) ? bn(t) || SN(n[i]) ? n[i] = Array.isArray(e[i]) ? Og(e[i], []) : {
            ...Og(e[i])
        } : qF(e[i], xr(t) ? {} : t[i], n[i]) : n[i] = !zs(e[i], t[i]);
        return n;
    }
    var td = (e, t)=>qF(e, t, Og(t)), BF = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: r })=>bn(e) ? e : t ? e === "" ? NaN : e && +e : n && go(e) ? new Date(e) : r ? r(e) : e;
    function yw(e) {
        const t = e.ref;
        return YS(t) ? t.files : XS(t) ? MF(e.refs).value : LF(t) ? [
            ...t.selectedOptions
        ].map(({ value: n })=>n) : Uf(t) ? DF(e.refs).value : BF(bn(t.value) ? e.ref.value : t.value, e);
    }
    var u9 = (e, t, n, r)=>{
        const i = {};
        for (const o of e){
            const s = je(t, o);
            s && kt(i, o, s._f);
        }
        return {
            criteriaMode: n,
            names: [
                ...e
            ],
            fields: i,
            shouldUseNativeValidation: r
        };
    }, nd = (e)=>bn(e) ? e : Rg(e) ? e.source : Nn(e) ? Rg(e.value) ? e.value.source : e.value : e;
    const _j = "AsyncFunction";
    var d9 = (e)=>!!e && !!e.validate && !!(ho(e.validate) && e.validate.constructor.name === _j || Nn(e.validate) && Object.values(e.validate).find((t)=>t.constructor.name === _j)), f9 = (e)=>e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate);
    function Ej(e, t, n) {
        const r = je(e, n);
        if (r || QS(n)) return {
            error: r,
            name: n
        };
        const i = n.split(".");
        for(; i.length;){
            const o = i.join("."), s = je(t, o), l = je(e, o);
            if (s && !Array.isArray(s) && n !== o) return {
                name: n
            };
            if (l && l.type) return {
                name: o,
                error: l
            };
            i.pop();
        }
        return {
            name: n
        };
    }
    var p9 = (e, t, n, r, i)=>i.isOnAll ? !1 : !n && i.isOnTouch ? !(t || e) : (n ? r.isOnBlur : i.isOnBlur) ? !e : (n ? r.isOnChange : i.isOnChange) ? e : !0, h9 = (e, t)=>!Ey(je(e, t)).length && Fn(e, t);
    const m9 = {
        mode: Ui.onSubmit,
        reValidateMode: Ui.onChange,
        shouldFocusError: !0
    };
    function g9(e = {}) {
        let t = {
            ...m9,
            ...e
        }, n = {
            submitCount: 0,
            isDirty: !1,
            isLoading: ho(t.defaultValues),
            isValidating: !1,
            isSubmitted: !1,
            isSubmitting: !1,
            isSubmitSuccessful: !1,
            isValid: !1,
            touchedFields: {},
            dirtyFields: {},
            validatingFields: {},
            errors: t.errors || {},
            disabled: t.disabled || !1
        }, r = {}, i = Nn(t.defaultValues) || Nn(t.values) ? Fr(t.defaultValues || t.values) || {} : {}, o = t.shouldUnregister ? {} : Fr(i), s = {
            action: !1,
            mount: !1,
            watch: !1
        }, l = {
            mount: new Set,
            disabled: new Set,
            unMount: new Set,
            array: new Set,
            watch: new Set
        }, u, f = 0;
        const p = {
            isDirty: !1,
            dirtyFields: !1,
            validatingFields: !1,
            touchedFields: !1,
            isValidating: !1,
            isValid: !1,
            errors: !1
        }, m = {
            values: mw(),
            array: mw(),
            state: mw()
        }, g = vj(t.mode), v = vj(t.reValidateMode), x = t.criteriaMode === Ui.all, b = (ee)=>(ne)=>{
                clearTimeout(f), f = setTimeout(ee, ne);
            }, S = async (ee)=>{
            if (!t.disabled && (p.isValid || ee)) {
                const ne = t.resolver ? Dr((await O()).errors) : await F(r, !0);
                ne !== n.isValid && m.state.next({
                    isValid: ne
                });
            }
        }, N = (ee, ne)=>{
            !t.disabled && (p.isValidating || p.validatingFields) && ((ee || Array.from(l.mount)).forEach((oe)=>{
                oe && (ne ? kt(n.validatingFields, oe, ne) : Fn(n.validatingFields, oe));
            }), m.state.next({
                validatingFields: n.validatingFields,
                isValidating: !Dr(n.validatingFields)
            }));
        }, _ = (ee, ne = [], oe, le, me = !0, xe = !0)=>{
            if (le && oe && !t.disabled) {
                if (s.action = !0, xe && Array.isArray(je(r, ee))) {
                    const pe = oe(je(r, ee), le.argA, le.argB);
                    me && kt(r, ee, pe);
                }
                if (xe && Array.isArray(je(n.errors, ee))) {
                    const pe = oe(je(n.errors, ee), le.argA, le.argB);
                    me && kt(n.errors, ee, pe), h9(n.errors, ee);
                }
                if (p.touchedFields && xe && Array.isArray(je(n.touchedFields, ee))) {
                    const pe = oe(je(n.touchedFields, ee), le.argA, le.argB);
                    me && kt(n.touchedFields, ee, pe);
                }
                p.dirtyFields && (n.dirtyFields = td(i, o)), m.state.next({
                    name: ee,
                    isDirty: M(ee, ne),
                    dirtyFields: n.dirtyFields,
                    errors: n.errors,
                    isValid: n.isValid
                });
            } else kt(o, ee, ne);
        }, I = (ee, ne)=>{
            kt(n.errors, ee, ne), m.state.next({
                errors: n.errors
            });
        }, C = (ee)=>{
            n.errors = ee, m.state.next({
                errors: n.errors,
                isValid: !1
            });
        }, A = (ee, ne, oe, le)=>{
            const me = je(r, ee);
            if (me) {
                const xe = je(o, ee, bn(oe) ? je(i, ee) : oe);
                bn(xe) || le && le.defaultChecked || ne ? kt(o, ee, ne ? xe : yw(me._f)) : V(ee, xe), s.mount && S();
            }
        }, R = (ee, ne, oe, le, me)=>{
            let xe = !1, pe = !1;
            const Se = {
                name: ee
            };
            if (!t.disabled) {
                const Ge = !!(je(r, ee) && je(r, ee)._f && je(r, ee)._f.disabled);
                if (!oe || le) {
                    p.isDirty && (pe = n.isDirty, n.isDirty = Se.isDirty = M(), xe = pe !== Se.isDirty);
                    const Qe = Ge || zs(je(i, ee), ne);
                    pe = !!(!Ge && je(n.dirtyFields, ee)), Qe || Ge ? Fn(n.dirtyFields, ee) : kt(n.dirtyFields, ee, !0), Se.dirtyFields = n.dirtyFields, xe = xe || p.dirtyFields && pe !== !Qe;
                }
                if (oe) {
                    const Qe = je(n.touchedFields, ee);
                    Qe || (kt(n.touchedFields, ee, oe), Se.touchedFields = n.touchedFields, xe = xe || p.touchedFields && Qe !== oe);
                }
                xe && me && m.state.next(Se);
            }
            return xe ? Se : {};
        }, D = (ee, ne, oe, le)=>{
            const me = je(n.errors, ee), xe = p.isValid && Ci(ne) && n.isValid !== ne;
            if (t.delayError && oe ? (u = b(()=>I(ee, oe)), u(t.delayError)) : (clearTimeout(f), u = null, oe ? kt(n.errors, ee, oe) : Fn(n.errors, ee)), (oe ? !zs(me, oe) : me) || !Dr(le) || xe) {
                const pe = {
                    ...le,
                    ...xe && Ci(ne) ? {
                        isValid: ne
                    } : {},
                    errors: n.errors,
                    name: ee
                };
                n = {
                    ...n,
                    ...pe
                }, m.state.next(pe);
            }
        }, O = async (ee)=>{
            N(ee, !0);
            const ne = await t.resolver(o, t.context, u9(ee || l.mount, r, t.criteriaMode, t.shouldUseNativeValidation));
            return N(ee), ne;
        }, E = async (ee)=>{
            const { errors: ne } = await O(ee);
            if (ee) for (const oe of ee){
                const le = je(ne, oe);
                le ? kt(n.errors, oe, le) : Fn(n.errors, oe);
            }
            else n.errors = ne;
            return ne;
        }, F = async (ee, ne, oe = {
            valid: !0
        })=>{
            for(const le in ee){
                const me = ee[le];
                if (me) {
                    const { _f: xe, ...pe } = me;
                    if (xe) {
                        const Se = l.array.has(xe.name), Ge = me._f && d9(me._f);
                        Ge && p.validatingFields && N([
                            le
                        ], !0);
                        const Qe = await Ij(me, l.disabled, o, x, t.shouldUseNativeValidation && !ne, Se);
                        if (Ge && p.validatingFields && N([
                            le
                        ]), Qe[xe.name] && (oe.valid = !1, ne)) break;
                        !ne && (je(Qe, xe.name) ? Se ? s9(n.errors, Qe, xe.name) : kt(n.errors, xe.name, Qe[xe.name]) : Fn(n.errors, xe.name));
                    }
                    !Dr(pe) && await F(pe, ne, oe);
                }
            }
            return oe.valid;
        }, j = ()=>{
            for (const ee of l.unMount){
                const ne = je(r, ee);
                ne && (ne._f.refs ? ne._f.refs.every((oe)=>!gw(oe)) : !gw(ne._f.ref)) && ie(ee);
            }
            l.unMount = new Set;
        }, M = (ee, ne)=>!t.disabled && (ee && ne && kt(o, ee, ne), !zs(U(), i)), L = (ee, ne, oe)=>AF(ee, l, {
                ...s.mount ? o : bn(ne) ? i : go(ee) ? {
                    [ee]: ne
                } : ne
            }, oe, ne), P = (ee)=>Ey(je(s.mount ? o : i, ee, t.shouldUnregister ? je(i, ee, []) : [])), V = (ee, ne, oe = {})=>{
            const le = je(r, ee);
            let me = ne;
            if (le) {
                const xe = le._f;
                xe && (!xe.disabled && kt(o, ee, BF(ne, xe)), me = jg(xe.ref) && xr(ne) ? "" : ne, LF(xe.ref) ? [
                    ...xe.ref.options
                ].forEach((pe)=>pe.selected = me.includes(pe.value)) : xe.refs ? Uf(xe.ref) ? xe.refs.length > 1 ? xe.refs.forEach((pe)=>(!pe.defaultChecked || !pe.disabled) && (pe.checked = Array.isArray(me) ? !!me.find((Se)=>Se === pe.value) : me === pe.value)) : xe.refs[0] && (xe.refs[0].checked = !!me) : xe.refs.forEach((pe)=>pe.checked = pe.value === me) : YS(xe.ref) ? xe.ref.value = "" : (xe.ref.value = me, xe.ref.type || m.values.next({
                    name: ee,
                    values: {
                        ...o
                    }
                })));
            }
            (oe.shouldDirty || oe.shouldTouch) && R(ee, me, oe.shouldTouch, oe.shouldDirty, !0), oe.shouldValidate && G(ee);
        }, z = (ee, ne, oe)=>{
            for(const le in ne){
                const me = ne[le], xe = `${ee}.${le}`, pe = je(r, xe);
                (l.array.has(ee) || Nn(me) || pe && !pe._f) && !Za(me) ? z(xe, me, oe) : V(xe, me, oe);
            }
        }, Q = (ee, ne, oe = {})=>{
            const le = je(r, ee), me = l.array.has(ee), xe = Fr(ne);
            kt(o, ee, xe), me ? (m.array.next({
                name: ee,
                values: {
                    ...o
                }
            }), (p.isDirty || p.dirtyFields) && oe.shouldDirty && m.state.next({
                name: ee,
                dirtyFields: td(i, o),
                isDirty: M(ee, xe)
            })) : le && !le._f && !xr(xe) ? z(ee, xe, oe) : V(ee, xe, oe), xj(ee, l) && m.state.next({
                ...n
            }), m.values.next({
                name: s.mount ? ee : void 0,
                values: {
                    ...o
                }
            });
        }, K = async (ee)=>{
            s.mount = !0;
            const ne = ee.target;
            let oe = ne.name, le = !0;
            const me = je(r, oe), xe = ()=>ne.type ? yw(me._f) : CF(ee), pe = (Se)=>{
                le = Number.isNaN(Se) || Za(Se) && isNaN(Se.getTime()) || zs(Se, je(o, oe, Se));
            };
            if (me) {
                let Se, Ge;
                const Qe = xe(), dt = ee.type === Cg.BLUR || ee.type === Cg.FOCUS_OUT, nn = !f9(me._f) && !t.resolver && !je(n.errors, oe) && !me._f.deps || p9(dt, je(n.touchedFields, oe), n.isSubmitted, v, g), Gt = xj(oe, l, dt);
                kt(o, oe, Qe), dt ? (me._f.onBlur && me._f.onBlur(ee), u && u(0)) : me._f.onChange && me._f.onChange(ee);
                const Un = R(oe, Qe, dt, !1), mi = !Dr(Un) || Gt;
                if (!dt && m.values.next({
                    name: oe,
                    type: ee.type,
                    values: {
                        ...o
                    }
                }), nn) return p.isValid && (t.mode === "onBlur" && dt ? S() : dt || S()), mi && m.state.next({
                    name: oe,
                    ...Gt ? {} : Un
                });
                if (!dt && Gt && m.state.next({
                    ...n
                }), t.resolver) {
                    const { errors: _r } = await O([
                        oe
                    ]);
                    if (pe(Qe), le) {
                        const Er = Ej(n.errors, r, oe), Hn = Ej(_r, r, Er.name || oe);
                        Se = Hn.error, oe = Hn.name, Ge = Dr(_r);
                    }
                } else N([
                    oe
                ], !0), Se = (await Ij(me, l.disabled, o, x, t.shouldUseNativeValidation))[oe], N([
                    oe
                ]), pe(Qe), le && (Se ? Ge = !1 : p.isValid && (Ge = await F(r, !0)));
                le && (me._f.deps && G(me._f.deps), D(oe, Ge, Se, Un));
            }
        }, H = (ee, ne)=>{
            if (je(n.errors, ne) && ee.focus) return ee.focus(), 1;
        }, G = async (ee, ne = {})=>{
            let oe, le;
            const me = Pd(ee);
            if (t.resolver) {
                const xe = await E(bn(ee) ? ee : me);
                oe = Dr(xe), le = ee ? !me.some((pe)=>je(xe, pe)) : oe;
            } else ee ? (le = (await Promise.all(me.map(async (xe)=>{
                const pe = je(r, xe);
                return await F(pe && pe._f ? {
                    [xe]: pe
                } : pe);
            }))).every(Boolean), !(!le && !n.isValid) && S()) : le = oe = await F(r);
            return m.state.next({
                ...!go(ee) || p.isValid && oe !== n.isValid ? {} : {
                    name: ee
                },
                ...t.resolver || !ee ? {
                    isValid: oe
                } : {},
                errors: n.errors
            }), ne.shouldFocus && !le && Ad(r, H, ee ? me : l.mount), le;
        }, U = (ee)=>{
            const ne = {
                ...s.mount ? o : i
            };
            return bn(ee) ? ne : go(ee) ? je(ne, ee) : ee.map((oe)=>je(ne, oe));
        }, Z = (ee, ne)=>({
                invalid: !!je((ne || n).errors, ee),
                isDirty: !!je((ne || n).dirtyFields, ee),
                error: je((ne || n).errors, ee),
                isValidating: !!je(n.validatingFields, ee),
                isTouched: !!je((ne || n).touchedFields, ee)
            }), J = (ee)=>{
            ee && Pd(ee).forEach((ne)=>Fn(n.errors, ne)), m.state.next({
                errors: ee ? n.errors : {}
            });
        }, X = (ee, ne, oe)=>{
            const le = (je(r, ee, {
                _f: {}
            })._f || {}).ref, me = je(n.errors, ee) || {}, { ref: xe, message: pe, type: Se, ...Ge } = me;
            kt(n.errors, ee, {
                ...Ge,
                ...ne,
                ref: le
            }), m.state.next({
                name: ee,
                errors: n.errors,
                isValid: !1
            }), oe && oe.shouldFocus && le && le.focus && le.focus();
        }, te = (ee, ne)=>ho(ee) ? m.values.subscribe({
                next: (oe)=>ee(L(void 0, ne), oe)
            }) : L(ee, ne, !0), ie = (ee, ne = {})=>{
            for (const oe of ee ? Pd(ee) : l.mount)l.mount.delete(oe), l.array.delete(oe), ne.keepValue || (Fn(r, oe), Fn(o, oe)), !ne.keepError && Fn(n.errors, oe), !ne.keepDirty && Fn(n.dirtyFields, oe), !ne.keepTouched && Fn(n.touchedFields, oe), !ne.keepIsValidating && Fn(n.validatingFields, oe), !t.shouldUnregister && !ne.keepDefaultValue && Fn(i, oe);
            m.values.next({
                values: {
                    ...o
                }
            }), m.state.next({
                ...n,
                ...ne.keepDirty ? {
                    isDirty: M()
                } : {}
            }), !ne.keepIsValid && S();
        }, ae = ({ disabled: ee, name: ne, field: oe, fields: le })=>{
            (Ci(ee) && s.mount || ee || l.disabled.has(ne)) && (ee ? l.disabled.add(ne) : l.disabled.delete(ne), R(ne, yw(oe ? oe._f : je(le, ne)._f), !1, !1, !0));
        }, ce = (ee, ne = {})=>{
            let oe = je(r, ee);
            const le = Ci(ne.disabled) || Ci(t.disabled);
            return kt(r, ee, {
                ...oe || {},
                _f: {
                    ...oe && oe._f ? oe._f : {
                        ref: {
                            name: ee
                        }
                    },
                    name: ee,
                    mount: !0,
                    ...ne
                }
            }), l.mount.add(ee), oe ? ae({
                field: oe,
                disabled: Ci(ne.disabled) ? ne.disabled : t.disabled,
                name: ee
            }) : A(ee, !0, ne.value), {
                ...le ? {
                    disabled: ne.disabled || t.disabled
                } : {},
                ...t.progressive ? {
                    required: !!ne.required,
                    min: nd(ne.min),
                    max: nd(ne.max),
                    minLength: nd(ne.minLength),
                    maxLength: nd(ne.maxLength),
                    pattern: nd(ne.pattern)
                } : {},
                name: ee,
                onChange: K,
                onBlur: K,
                ref: (me)=>{
                    if (me) {
                        ce(ee, ne), oe = je(r, ee);
                        const xe = bn(me.value) && me.querySelectorAll && me.querySelectorAll("input,select,textarea")[0] || me, pe = c9(xe), Se = oe._f.refs || [];
                        if (pe ? Se.find((Ge)=>Ge === xe) : xe === oe._f.ref) return;
                        kt(r, ee, {
                            _f: {
                                ...oe._f,
                                ...pe ? {
                                    refs: [
                                        ...Se.filter(gw),
                                        xe,
                                        ...Array.isArray(je(i, ee)) ? [
                                            {}
                                        ] : []
                                    ],
                                    ref: {
                                        type: xe.type,
                                        name: ee
                                    }
                                } : {
                                    ref: xe
                                }
                            }
                        }), A(ee, !1, void 0, xe);
                    } else oe = je(r, ee, {}), oe._f && (oe._f.mount = !1), (t.shouldUnregister || ne.shouldUnregister) && !(jF(l.array, ee) && s.action) && l.unMount.add(ee);
                }
            };
        }, de = ()=>t.shouldFocusError && Ad(r, H, l.mount), ve = (ee)=>{
            Ci(ee) && (m.state.next({
                disabled: ee
            }), Ad(r, (ne, oe)=>{
                const le = je(r, oe);
                le && (ne.disabled = le._f.disabled || ee, Array.isArray(le._f.refs) && le._f.refs.forEach((me)=>{
                    me.disabled = le._f.disabled || ee;
                }));
            }, 0, !1));
        }, be = (ee, ne)=>async (oe)=>{
                let le;
                oe && (oe.preventDefault && oe.preventDefault(), oe.persist && oe.persist());
                let me = Fr(o);
                if (l.disabled.size) for (const xe of l.disabled)kt(me, xe, void 0);
                if (m.state.next({
                    isSubmitting: !0
                }), t.resolver) {
                    const { errors: xe, values: pe } = await O();
                    n.errors = xe, me = pe;
                } else await F(r);
                if (Fn(n.errors, "root"), Dr(n.errors)) {
                    m.state.next({
                        errors: {}
                    });
                    try {
                        await ee(me, oe);
                    } catch (xe) {
                        le = xe;
                    }
                } else ne && await ne({
                    ...n.errors
                }, oe), de(), setTimeout(de);
                if (m.state.next({
                    isSubmitted: !0,
                    isSubmitting: !1,
                    isSubmitSuccessful: Dr(n.errors) && !le,
                    submitCount: n.submitCount + 1,
                    errors: n.errors
                }), le) throw le;
            }, ge = (ee, ne = {})=>{
            je(r, ee) && (bn(ne.defaultValue) ? Q(ee, Fr(je(i, ee))) : (Q(ee, ne.defaultValue), kt(i, ee, Fr(ne.defaultValue))), ne.keepTouched || Fn(n.touchedFields, ee), ne.keepDirty || (Fn(n.dirtyFields, ee), n.isDirty = ne.defaultValue ? M(ee, Fr(je(i, ee))) : M()), ne.keepError || (Fn(n.errors, ee), p.isValid && S()), m.state.next({
                ...n
            }));
        }, we = (ee, ne = {})=>{
            const oe = ee ? Fr(ee) : i, le = Fr(oe), me = Dr(ee), xe = me ? i : le;
            if (ne.keepDefaultValues || (i = oe), !ne.keepValues) {
                if (ne.keepDirtyValues) {
                    const pe = new Set([
                        ...l.mount,
                        ...Object.keys(td(i, o))
                    ]);
                    for (const Se of Array.from(pe))je(n.dirtyFields, Se) ? kt(xe, Se, je(o, Se)) : Q(Se, je(xe, Se));
                } else {
                    if (GS && bn(ee)) for (const pe of l.mount){
                        const Se = je(r, pe);
                        if (Se && Se._f) {
                            const Ge = Array.isArray(Se._f.refs) ? Se._f.refs[0] : Se._f.ref;
                            if (jg(Ge)) {
                                const Qe = Ge.closest("form");
                                if (Qe) {
                                    Qe.reset();
                                    break;
                                }
                            }
                        }
                    }
                    r = {};
                }
                o = t.shouldUnregister ? ne.keepDefaultValues ? Fr(i) : {} : Fr(xe), m.array.next({
                    values: {
                        ...xe
                    }
                }), m.values.next({
                    values: {
                        ...xe
                    }
                });
            }
            l = {
                mount: ne.keepDirtyValues ? l.mount : new Set,
                unMount: new Set,
                array: new Set,
                disabled: new Set,
                watch: new Set,
                watchAll: !1,
                focus: ""
            }, s.mount = !p.isValid || !!ne.keepIsValid || !!ne.keepDirtyValues, s.watch = !!t.shouldUnregister, m.state.next({
                submitCount: ne.keepSubmitCount ? n.submitCount : 0,
                isDirty: me ? !1 : ne.keepDirty ? n.isDirty : !!(ne.keepDefaultValues && !zs(ee, i)),
                isSubmitted: ne.keepIsSubmitted ? n.isSubmitted : !1,
                dirtyFields: me ? {} : ne.keepDirtyValues ? ne.keepDefaultValues && o ? td(i, o) : n.dirtyFields : ne.keepDefaultValues && ee ? td(i, ee) : ne.keepDirty ? n.dirtyFields : {},
                touchedFields: ne.keepTouched ? n.touchedFields : {},
                errors: ne.keepErrors ? n.errors : {},
                isSubmitSuccessful: ne.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
                isSubmitting: !1
            });
        }, ke = (ee, ne)=>we(ho(ee) ? ee(o) : ee, ne);
        return {
            control: {
                register: ce,
                unregister: ie,
                getFieldState: Z,
                handleSubmit: be,
                setError: X,
                _executeSchema: O,
                _getWatch: L,
                _getDirty: M,
                _updateValid: S,
                _removeUnmounted: j,
                _updateFieldArray: _,
                _updateDisabledField: ae,
                _getFieldArray: P,
                _reset: we,
                _resetDefaultValues: ()=>ho(t.defaultValues) && t.defaultValues().then((ee)=>{
                        ke(ee, t.resetOptions), m.state.next({
                            isLoading: !1
                        });
                    }),
                _updateFormState: (ee)=>{
                    n = {
                        ...n,
                        ...ee
                    };
                },
                _disableForm: ve,
                _subjects: m,
                _proxyFormState: p,
                _setErrors: C,
                get _fields () {
                    return r;
                },
                get _formValues () {
                    return o;
                },
                get _state () {
                    return s;
                },
                set _state (ee){
                    s = ee;
                },
                get _defaultValues () {
                    return i;
                },
                get _names () {
                    return l;
                },
                set _names (ee){
                    l = ee;
                },
                get _formState () {
                    return n;
                },
                set _formState (ee){
                    n = ee;
                },
                get _options () {
                    return t;
                },
                set _options (ee){
                    t = {
                        ...t,
                        ...ee
                    };
                }
            },
            trigger: G,
            register: ce,
            handleSubmit: be,
            watch: te,
            setValue: Q,
            getValues: U,
            reset: ke,
            resetField: ge,
            clearErrors: J,
            unregister: ie,
            setError: X,
            setFocus: (ee, ne = {})=>{
                const oe = je(r, ee), le = oe && oe._f;
                if (le) {
                    const me = le.refs ? le.refs[0] : le.ref;
                    me.focus && (me.focus(), ne.shouldSelect && ho(me.select) && me.select());
                }
            },
            getFieldState: Z
        };
    }
    function Wn(e = {}) {
        const t = St.useRef(void 0), n = St.useRef(void 0), [r, i] = St.useState({
            isDirty: !1,
            isValidating: !1,
            isLoading: ho(e.defaultValues),
            isSubmitted: !1,
            isSubmitting: !1,
            isSubmitSuccessful: !1,
            isValid: !1,
            submitCount: 0,
            dirtyFields: {},
            touchedFields: {},
            validatingFields: {},
            errors: e.errors || {},
            disabled: e.disabled || !1,
            defaultValues: ho(e.defaultValues) ? void 0 : e.defaultValues
        });
        t.current || (t.current = {
            ...g9(e),
            formState: r
        });
        const o = t.current.control;
        return o._options = e, ZS({
            subject: o._subjects.state,
            next: (s)=>{
                TF(s, o._proxyFormState, o._updateFormState, !0) && i({
                    ...o._formState
                });
            }
        }), St.useEffect(()=>o._disableForm(e.disabled), [
            o,
            e.disabled
        ]), St.useEffect(()=>{
            if (o._proxyFormState.isDirty) {
                const s = o._getDirty();
                s !== r.isDirty && o._subjects.state.next({
                    isDirty: s
                });
            }
        }, [
            o,
            r.isDirty
        ]), St.useEffect(()=>{
            e.values && !zs(e.values, n.current) ? (o._reset(e.values, o._options.resetOptions), n.current = e.values, i((s)=>({
                    ...s
                }))) : o._resetDefaultValues();
        }, [
            e.values,
            o
        ]), St.useEffect(()=>{
            e.errors && o._setErrors(e.errors);
        }, [
            e.errors,
            o
        ]), St.useEffect(()=>{
            o._state.mount || (o._updateValid(), o._state.mount = !0), o._state.watch && (o._state.watch = !1, o._subjects.state.next({
                ...o._formState
            })), o._removeUnmounted();
        }), St.useEffect(()=>{
            e.shouldUnregister && o._subjects.values.next({
                values: o._getWatch()
            });
        }, [
            e.shouldUnregister,
            o
        ]), t.current.formState = OF(r, o), t.current;
    }
    const kj = (e, t, n)=>{
        if (e && "reportValidity" in e) {
            const r = je(n, t);
            e.setCustomValidity(r && r.message || ""), e.reportValidity();
        }
    }, zF = (e, t)=>{
        for(const n in t.fields){
            const r = t.fields[n];
            r && r.ref && "reportValidity" in r.ref ? kj(r.ref, n, e) : r && r.refs && r.refs.forEach((i)=>kj(i, n, e));
        }
    }, y9 = (e, t)=>{
        t.shouldUseNativeValidation && zF(e, t);
        const n = {};
        for(const r in e){
            const i = je(t.fields, r), o = Object.assign(e[r] || {}, {
                ref: i && i.ref
            });
            if (v9(t.names || Object.keys(e), r)) {
                const s = Object.assign({}, je(n, r));
                kt(s, "root", o), kt(n, r, s);
            } else kt(n, r, o);
        }
        return n;
    }, v9 = (e, t)=>e.some((n)=>n.match(`^${t}\\.\\d+`));
    function x9(e, t) {
        for(var n = {}; e.length;){
            var r = e[0], i = r.code, o = r.message, s = r.path.join(".");
            if (!n[s]) if ("unionErrors" in r) {
                var l = r.unionErrors[0].errors[0];
                n[s] = {
                    message: l.message,
                    type: l.code
                };
            } else n[s] = {
                message: o,
                type: i
            };
            if ("unionErrors" in r && r.unionErrors.forEach(function(p) {
                return p.errors.forEach(function(m) {
                    return e.push(m);
                });
            }), t) {
                var u = n[s].types, f = u && u[r.code];
                n[s] = FF(s, t, n, i, f ? [].concat(f, r.message) : r.message);
            }
            e.shift();
        }
        return n;
    }
    function Vn(e, t, n) {
        return n === void 0 && (n = {}), function(r, i, o) {
            try {
                return Promise.resolve(function(s, l) {
                    try {
                        var u = Promise.resolve(e[n.mode === "sync" ? "parse" : "parseAsync"](r, t)).then(function(f) {
                            return o.shouldUseNativeValidation && zF({}, o), {
                                errors: {},
                                values: n.raw ? Object.assign({}, r) : f
                            };
                        });
                    } catch (f) {
                        return l(f);
                    }
                    return u && u.then ? u.then(void 0, l) : u;
                }(0, function(s) {
                    if (function(l) {
                        return Array.isArray(l?.errors);
                    }(s)) return {
                        values: {},
                        errors: y9(x9(s.errors, !o.shouldUseNativeValidation && o.criteriaMode === "all"), o)
                    };
                    throw s;
                }));
            } catch (s) {
                return Promise.reject(s);
            }
        };
    }
    const b9 = "icon-[cil--arrow-right]", WF = "icon-[et--map]", w9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                name: T.string().min(1),
                cycles: T.number().int(),
                sort: T.number().int(),
                limit: T.number().int(),
                image: T.string().nullish()
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "name",
                "cycles",
                "sort",
                "limit",
                "image"
            ]
        }), N9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                blueprintId: T.string().min(1),
                conflictId: T.string().min(1)
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "blueprintId",
                "conflictId"
            ]
        }), S9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                blueprintId: T.string().min(1),
                dependencyId: T.string().min(1)
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "blueprintId",
                "dependencyId"
            ]
        }), I9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                blueprintId: T.string().min(1),
                inventoryId: T.string().min(1)
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "blueprintId",
                "inventoryId"
            ]
        }), _9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                blueprintId: T.string().min(1),
                resourceId: T.string().min(1),
                amount: T.number(),
                cycles: T.number().int()
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "blueprintId",
                "resourceId",
                "amount",
                "cycles"
            ]
        }), E9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                blueprintProductionId: T.string().min(1),
                blueprintId: T.string().min(1)
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "blueprintProductionId",
                "blueprintId"
            ]
        }), k9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                blueprintProductionId: T.string().min(1),
                resourceId: T.string().min(1),
                amount: T.number(),
                passive: Ai()
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "blueprintProductionId",
                "resourceId",
                "amount",
                "passive"
            ]
        }), C9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                blueprintProductionId: T.string().min(1),
                resourceId: T.string().min(1),
                amount: T.number()
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "blueprintProductionId",
                "resourceId",
                "amount"
            ]
        }), j9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                blueprintId: T.string().min(1),
                resourceId: T.string().min(1),
                amount: T.number(),
                passive: Ai()
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "blueprintId",
                "resourceId",
                "amount",
                "passive"
            ]
        }), R9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                userId: T.string().min(1),
                plotId: T.string().min(1),
                blueprintId: T.string().min(1),
                constructionId: T.string().nullish(),
                landId: T.string().min(1),
                productionId: T.string().nullish(),
                recurringProductionId: T.string().nullish(),
                valid: Ai()
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "userId",
                "plotId",
                "blueprintId",
                "constructionId",
                "landId",
                "productionId",
                "recurringProductionId",
                "valid"
            ]
        }), O9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                resourceId: T.string().min(1),
                amount: T.number(),
                limit: T.number(),
                type: T.string().min(1)
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "resourceId",
                "amount",
                "limit",
                "type"
            ]
        }), T9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                userId: T.string().min(1),
                name: T.string().min(1)
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "userId",
                "name"
            ]
        }), P9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                name: T.string().min(1),
                probability: T.number().int(),
                limit: T.number().int(),
                image: T.string().nullish()
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "name",
                "probability",
                "limit",
                "image"
            ]
        }), A9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                name: T.string().min(1),
                weight: T.number().int(),
                image: T.string().nullish()
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "name",
                "weight",
                "image"
            ]
        }), F9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                code: T.string().min(1),
                label: T.string().min(1),
                group: T.string().nullish(),
                sort: T.number().int()
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "code",
                "label",
                "group",
                "sort"
            ]
        }), D9 = ({ shape: e, filter: t })=>hr({
            entity: fr.merge(T.object({
                name: T.string().min(1),
                login: T.string().min(1),
                password: T.string().min(1)
            })),
            shape: e,
            filter: t,
            sort: [
                "id",
                "name",
                "login",
                "password"
            ]
        }), M9 = T9({
        shape: T.object({
            name: T.string().min(1)
        }),
        filter: pr
    }), L9 = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(M9.shape),
            defaultValues: {
                name: "",
                ...t
            }
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "name",
                    label: d.jsx(B, {
                        label: "Map name (label)"
                    }),
                    required: !0,
                    children: d.jsx("input", {
                        type: "text",
                        className: s.input(),
                        ...o.register("name")
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: WF,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Create map (submit)"
                        })
                    })
                })
            ]
        });
    }, VF = Le("/$locale/apps/derivean/game/")({
        async loader ({ context: { queryClient: e, kysely: t, session: n } }) {
            const r = await n();
            return {
                user: r,
                map: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        "map",
                        r.id
                    ],
                    async queryFn () {
                        return t.transaction().execute((i)=>er({
                                select: i.selectFrom("Map as m").select([
                                    "m.id",
                                    "m.name"
                                ]).where("m.userId", "=", r.id),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1)
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { user: e, map: t } = VF.useLoaderData(), { tva: n } = Wt({
                from: "__root__"
            }), r = n().slots, i = Bt([
                [
                    "GameMap"
                ]
            ]), { locale: o } = Ke({
                from: "/$locale"
            }), s = gl(), l = Ye({
                async mutationFn ({ id: u }) {
                    return Pe.transaction().execute(async (f)=>f.deleteFrom("Map").where("id", "=", u).where("userId", "=", e.id).execute());
                },
                async onSuccess () {
                    await i();
                }
            });
            return d.jsxs("div", {
                className: r.base({
                    css: [
                        "w-1/2",
                        "mx-auto",
                        "mt-24",
                        "flex",
                        "flex-col",
                        "gap-6"
                    ]
                }),
                children: [
                    d.jsx("div", {
                        className: "font-bold text-lg border-b border-slate-300",
                        children: d.jsx(B, {
                            label: "Map list (label)"
                        })
                    }),
                    t.length > 0 ? t.map((u)=>d.jsxs("div", {
                            className: it([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "justify-between",
                                "p-4",
                                "border",
                                "rounded-sm",
                                "border-slate-200",
                                "hover:border-slate-300",
                                "hover:bg-slate-100"
                            ]),
                            children: [
                                d.jsx(Te, {
                                    icon: b9,
                                    to: "/$locale/apps/derivean/map/$mapId/view",
                                    params: {
                                        locale: o,
                                        mapId: u.id
                                    },
                                    children: u.name
                                }),
                                d.jsx("div", {
                                    children: d.jsx(ft, {
                                        iconEnabled: _n,
                                        variant: {
                                            variant: "danger"
                                        },
                                        loading: l.isPending,
                                        onClick: ()=>{
                                            l.mutate({
                                                id: u.id
                                            });
                                        }
                                    })
                                })
                            ]
                        }, u.id)) : d.jsx("div", {
                        className: it([
                            "flex",
                            "items-center",
                            "justify-center",
                            "rounded-sm",
                            "border",
                            "border-amber-400",
                            "p-4",
                            "bg-amber-200",
                            "font-bold"
                        ]),
                        children: d.jsx(B, {
                            label: "There are no maps (label)"
                        })
                    }),
                    d.jsx("div", {
                        className: "font-bold text-lg border-b border-slate-300",
                        children: d.jsx(B, {
                            label: "New map (label)"
                        })
                    }),
                    d.jsx("div", {
                        children: d.jsx(L9, {
                            mutation: Ye({
                                async mutationFn (u) {
                                    return Pe.transaction().execute((f)=>f.insertInto("Map").values({
                                            id: xt(),
                                            userId: e.id,
                                            ...u
                                        }).returning("id").executeTakeFirstOrThrow());
                                },
                                async onSuccess (u) {
                                    s({
                                        to: "/$locale/apps/derivean/map/$mapId/view",
                                        params: {
                                            locale: o,
                                            mapId: u.id
                                        }
                                    }), await i();
                                }
                            })
                        })
                    })
                ]
            });
        }
    });
    var vw, Cj;
    function eI() {
        if (Cj) return vw;
        Cj = 1;
        var e = "\0", t = "\0", n = "";
        class r {
            _isDirected = !0;
            _isMultigraph = !1;
            _isCompound = !1;
            _label;
            _defaultNodeLabelFn = ()=>{};
            _defaultEdgeLabelFn = ()=>{};
            _nodes = {};
            _in = {};
            _preds = {};
            _out = {};
            _sucs = {};
            _edgeObjs = {};
            _edgeLabels = {};
            _nodeCount = 0;
            _edgeCount = 0;
            _parent;
            _children;
            constructor(p){
                p && (this._isDirected = Object.hasOwn(p, "directed") ? p.directed : !0, this._isMultigraph = Object.hasOwn(p, "multigraph") ? p.multigraph : !1, this._isCompound = Object.hasOwn(p, "compound") ? p.compound : !1), this._isCompound && (this._parent = {}, this._children = {}, this._children[t] = {});
            }
            isDirected() {
                return this._isDirected;
            }
            isMultigraph() {
                return this._isMultigraph;
            }
            isCompound() {
                return this._isCompound;
            }
            setGraph(p) {
                return this._label = p, this;
            }
            graph() {
                return this._label;
            }
            setDefaultNodeLabel(p) {
                return this._defaultNodeLabelFn = p, typeof p != "function" && (this._defaultNodeLabelFn = ()=>p), this;
            }
            nodeCount() {
                return this._nodeCount;
            }
            nodes() {
                return Object.keys(this._nodes);
            }
            sources() {
                var p = this;
                return this.nodes().filter((m)=>Object.keys(p._in[m]).length === 0);
            }
            sinks() {
                var p = this;
                return this.nodes().filter((m)=>Object.keys(p._out[m]).length === 0);
            }
            setNodes(p, m) {
                var g = arguments, v = this;
                return p.forEach(function(x) {
                    g.length > 1 ? v.setNode(x, m) : v.setNode(x);
                }), this;
            }
            setNode(p, m) {
                return Object.hasOwn(this._nodes, p) ? (arguments.length > 1 && (this._nodes[p] = m), this) : (this._nodes[p] = arguments.length > 1 ? m : this._defaultNodeLabelFn(p), this._isCompound && (this._parent[p] = t, this._children[p] = {}, this._children[t][p] = !0), this._in[p] = {}, this._preds[p] = {}, this._out[p] = {}, this._sucs[p] = {}, ++this._nodeCount, this);
            }
            node(p) {
                return this._nodes[p];
            }
            hasNode(p) {
                return Object.hasOwn(this._nodes, p);
            }
            removeNode(p) {
                var m = this;
                if (Object.hasOwn(this._nodes, p)) {
                    var g = (v)=>m.removeEdge(m._edgeObjs[v]);
                    delete this._nodes[p], this._isCompound && (this._removeFromParentsChildList(p), delete this._parent[p], this.children(p).forEach(function(v) {
                        m.setParent(v);
                    }), delete this._children[p]), Object.keys(this._in[p]).forEach(g), delete this._in[p], delete this._preds[p], Object.keys(this._out[p]).forEach(g), delete this._out[p], delete this._sucs[p], --this._nodeCount;
                }
                return this;
            }
            setParent(p, m) {
                if (!this._isCompound) throw new Error("Cannot set parent in a non-compound graph");
                if (m === void 0) m = t;
                else {
                    m += "";
                    for(var g = m; g !== void 0; g = this.parent(g))if (g === p) throw new Error("Setting " + m + " as parent of " + p + " would create a cycle");
                    this.setNode(m);
                }
                return this.setNode(p), this._removeFromParentsChildList(p), this._parent[p] = m, this._children[m][p] = !0, this;
            }
            _removeFromParentsChildList(p) {
                delete this._children[this._parent[p]][p];
            }
            parent(p) {
                if (this._isCompound) {
                    var m = this._parent[p];
                    if (m !== t) return m;
                }
            }
            children(p = t) {
                if (this._isCompound) {
                    var m = this._children[p];
                    if (m) return Object.keys(m);
                } else {
                    if (p === t) return this.nodes();
                    if (this.hasNode(p)) return [];
                }
            }
            predecessors(p) {
                var m = this._preds[p];
                if (m) return Object.keys(m);
            }
            successors(p) {
                var m = this._sucs[p];
                if (m) return Object.keys(m);
            }
            neighbors(p) {
                var m = this.predecessors(p);
                if (m) {
                    const v = new Set(m);
                    for (var g of this.successors(p))v.add(g);
                    return Array.from(v.values());
                }
            }
            isLeaf(p) {
                var m;
                return this.isDirected() ? m = this.successors(p) : m = this.neighbors(p), m.length === 0;
            }
            filterNodes(p) {
                var m = new this.constructor({
                    directed: this._isDirected,
                    multigraph: this._isMultigraph,
                    compound: this._isCompound
                });
                m.setGraph(this.graph());
                var g = this;
                Object.entries(this._nodes).forEach(function([b, S]) {
                    p(b) && m.setNode(b, S);
                }), Object.values(this._edgeObjs).forEach(function(b) {
                    m.hasNode(b.v) && m.hasNode(b.w) && m.setEdge(b, g.edge(b));
                });
                var v = {};
                function x(b) {
                    var S = g.parent(b);
                    return S === void 0 || m.hasNode(S) ? (v[b] = S, S) : S in v ? v[S] : x(S);
                }
                return this._isCompound && m.nodes().forEach((b)=>m.setParent(b, x(b))), m;
            }
            setDefaultEdgeLabel(p) {
                return this._defaultEdgeLabelFn = p, typeof p != "function" && (this._defaultEdgeLabelFn = ()=>p), this;
            }
            edgeCount() {
                return this._edgeCount;
            }
            edges() {
                return Object.values(this._edgeObjs);
            }
            setPath(p, m) {
                var g = this, v = arguments;
                return p.reduce(function(x, b) {
                    return v.length > 1 ? g.setEdge(x, b, m) : g.setEdge(x, b), b;
                }), this;
            }
            setEdge() {
                var p, m, g, v, x = !1, b = arguments[0];
                typeof b == "object" && b !== null && "v" in b ? (p = b.v, m = b.w, g = b.name, arguments.length === 2 && (v = arguments[1], x = !0)) : (p = b, m = arguments[1], g = arguments[3], arguments.length > 2 && (v = arguments[2], x = !0)), p = "" + p, m = "" + m, g !== void 0 && (g = "" + g);
                var S = s(this._isDirected, p, m, g);
                if (Object.hasOwn(this._edgeLabels, S)) return x && (this._edgeLabels[S] = v), this;
                if (g !== void 0 && !this._isMultigraph) throw new Error("Cannot set a named edge when isMultigraph = false");
                this.setNode(p), this.setNode(m), this._edgeLabels[S] = x ? v : this._defaultEdgeLabelFn(p, m, g);
                var N = l(this._isDirected, p, m, g);
                return p = N.v, m = N.w, Object.freeze(N), this._edgeObjs[S] = N, i(this._preds[m], p), i(this._sucs[p], m), this._in[m][S] = N, this._out[p][S] = N, this._edgeCount++, this;
            }
            edge(p, m, g) {
                var v = arguments.length === 1 ? u(this._isDirected, arguments[0]) : s(this._isDirected, p, m, g);
                return this._edgeLabels[v];
            }
            edgeAsObj() {
                const p = this.edge(...arguments);
                return typeof p != "object" ? {
                    label: p
                } : p;
            }
            hasEdge(p, m, g) {
                var v = arguments.length === 1 ? u(this._isDirected, arguments[0]) : s(this._isDirected, p, m, g);
                return Object.hasOwn(this._edgeLabels, v);
            }
            removeEdge(p, m, g) {
                var v = arguments.length === 1 ? u(this._isDirected, arguments[0]) : s(this._isDirected, p, m, g), x = this._edgeObjs[v];
                return x && (p = x.v, m = x.w, delete this._edgeLabels[v], delete this._edgeObjs[v], o(this._preds[m], p), o(this._sucs[p], m), delete this._in[m][v], delete this._out[p][v], this._edgeCount--), this;
            }
            inEdges(p, m) {
                var g = this._in[p];
                if (g) {
                    var v = Object.values(g);
                    return m ? v.filter((x)=>x.v === m) : v;
                }
            }
            outEdges(p, m) {
                var g = this._out[p];
                if (g) {
                    var v = Object.values(g);
                    return m ? v.filter((x)=>x.w === m) : v;
                }
            }
            nodeEdges(p, m) {
                var g = this.inEdges(p, m);
                if (g) return g.concat(this.outEdges(p, m));
            }
        }
        function i(f, p) {
            f[p] ? f[p]++ : f[p] = 1;
        }
        function o(f, p) {
            --f[p] || delete f[p];
        }
        function s(f, p, m, g) {
            var v = "" + p, x = "" + m;
            if (!f && v > x) {
                var b = v;
                v = x, x = b;
            }
            return v + n + x + n + (g === void 0 ? e : g);
        }
        function l(f, p, m, g) {
            var v = "" + p, x = "" + m;
            if (!f && v > x) {
                var b = v;
                v = x, x = b;
            }
            var S = {
                v,
                w: x
            };
            return g && (S.name = g), S;
        }
        function u(f, p) {
            return s(f, p.v, p.w, p.name);
        }
        return vw = r, vw;
    }
    var xw, jj;
    function $9() {
        return jj || (jj = 1, xw = "2.2.4"), xw;
    }
    var bw, Rj;
    function q9() {
        return Rj || (Rj = 1, bw = {
            Graph: eI(),
            version: $9()
        }), bw;
    }
    var ww, Oj;
    function B9() {
        if (Oj) return ww;
        Oj = 1;
        var e = eI();
        ww = {
            write: t,
            read: i
        };
        function t(o) {
            var s = {
                options: {
                    directed: o.isDirected(),
                    multigraph: o.isMultigraph(),
                    compound: o.isCompound()
                },
                nodes: n(o),
                edges: r(o)
            };
            return o.graph() !== void 0 && (s.value = structuredClone(o.graph())), s;
        }
        function n(o) {
            return o.nodes().map(function(s) {
                var l = o.node(s), u = o.parent(s), f = {
                    v: s
                };
                return l !== void 0 && (f.value = l), u !== void 0 && (f.parent = u), f;
            });
        }
        function r(o) {
            return o.edges().map(function(s) {
                var l = o.edge(s), u = {
                    v: s.v,
                    w: s.w
                };
                return s.name !== void 0 && (u.name = s.name), l !== void 0 && (u.value = l), u;
            });
        }
        function i(o) {
            var s = new e(o.options).setGraph(o.value);
            return o.nodes.forEach(function(l) {
                s.setNode(l.v, l.value), l.parent && s.setParent(l.v, l.parent);
            }), o.edges.forEach(function(l) {
                s.setEdge({
                    v: l.v,
                    w: l.w,
                    name: l.name
                }, l.value);
            }), s;
        }
        return ww;
    }
    var Nw, Tj;
    function z9() {
        if (Tj) return Nw;
        Tj = 1, Nw = e;
        function e(t) {
            var n = {}, r = [], i;
            function o(s) {
                Object.hasOwn(n, s) || (n[s] = !0, i.push(s), t.successors(s).forEach(o), t.predecessors(s).forEach(o));
            }
            return t.nodes().forEach(function(s) {
                i = [], o(s), i.length && r.push(i);
            }), r;
        }
        return Nw;
    }
    var Sw, Pj;
    function UF() {
        if (Pj) return Sw;
        Pj = 1;
        class e {
            _arr = [];
            _keyIndices = {};
            size() {
                return this._arr.length;
            }
            keys() {
                return this._arr.map(function(n) {
                    return n.key;
                });
            }
            has(n) {
                return Object.hasOwn(this._keyIndices, n);
            }
            priority(n) {
                var r = this._keyIndices[n];
                if (r !== void 0) return this._arr[r].priority;
            }
            min() {
                if (this.size() === 0) throw new Error("Queue underflow");
                return this._arr[0].key;
            }
            add(n, r) {
                var i = this._keyIndices;
                if (n = String(n), !Object.hasOwn(i, n)) {
                    var o = this._arr, s = o.length;
                    return i[n] = s, o.push({
                        key: n,
                        priority: r
                    }), this._decrease(s), !0;
                }
                return !1;
            }
            removeMin() {
                this._swap(0, this._arr.length - 1);
                var n = this._arr.pop();
                return delete this._keyIndices[n.key], this._heapify(0), n.key;
            }
            decrease(n, r) {
                var i = this._keyIndices[n];
                if (r > this._arr[i].priority) throw new Error("New priority is greater than current priority. Key: " + n + " Old: " + this._arr[i].priority + " New: " + r);
                this._arr[i].priority = r, this._decrease(i);
            }
            _heapify(n) {
                var r = this._arr, i = 2 * n, o = i + 1, s = n;
                i < r.length && (s = r[i].priority < r[s].priority ? i : s, o < r.length && (s = r[o].priority < r[s].priority ? o : s), s !== n && (this._swap(n, s), this._heapify(s)));
            }
            _decrease(n) {
                for(var r = this._arr, i = r[n].priority, o; n !== 0 && (o = n >> 1, !(r[o].priority < i));)this._swap(n, o), n = o;
            }
            _swap(n, r) {
                var i = this._arr, o = this._keyIndices, s = i[n], l = i[r];
                i[n] = l, i[r] = s, o[l.key] = n, o[s.key] = r;
            }
        }
        return Sw = e, Sw;
    }
    var Iw, Aj;
    function HF() {
        if (Aj) return Iw;
        Aj = 1;
        var e = UF();
        Iw = n;
        var t = ()=>1;
        function n(i, o, s, l) {
            return r(i, String(o), s || t, l || function(u) {
                return i.outEdges(u);
            });
        }
        function r(i, o, s, l) {
            var u = {}, f = new e, p, m, g = function(v) {
                var x = v.v !== p ? v.v : v.w, b = u[x], S = s(v), N = m.distance + S;
                if (S < 0) throw new Error("dijkstra does not allow negative edge weights. Bad edge: " + v + " Weight: " + S);
                N < b.distance && (b.distance = N, b.predecessor = p, f.decrease(x, N));
            };
            for(i.nodes().forEach(function(v) {
                var x = v === o ? 0 : Number.POSITIVE_INFINITY;
                u[v] = {
                    distance: x
                }, f.add(v, x);
            }); f.size() > 0 && (p = f.removeMin(), m = u[p], m.distance !== Number.POSITIVE_INFINITY);)l(p).forEach(g);
            return u;
        }
        return Iw;
    }
    var _w, Fj;
    function W9() {
        if (Fj) return _w;
        Fj = 1;
        var e = HF();
        _w = t;
        function t(n, r, i) {
            return n.nodes().reduce(function(o, s) {
                return o[s] = e(n, s, r, i), o;
            }, {});
        }
        return _w;
    }
    var Ew, Dj;
    function KF() {
        if (Dj) return Ew;
        Dj = 1, Ew = e;
        function e(t) {
            var n = 0, r = [], i = {}, o = [];
            function s(l) {
                var u = i[l] = {
                    onStack: !0,
                    lowlink: n,
                    index: n++
                };
                if (r.push(l), t.successors(l).forEach(function(m) {
                    Object.hasOwn(i, m) ? i[m].onStack && (u.lowlink = Math.min(u.lowlink, i[m].index)) : (s(m), u.lowlink = Math.min(u.lowlink, i[m].lowlink));
                }), u.lowlink === u.index) {
                    var f = [], p;
                    do p = r.pop(), i[p].onStack = !1, f.push(p);
                    while (l !== p);
                    o.push(f);
                }
            }
            return t.nodes().forEach(function(l) {
                Object.hasOwn(i, l) || s(l);
            }), o;
        }
        return Ew;
    }
    var kw, Mj;
    function V9() {
        if (Mj) return kw;
        Mj = 1;
        var e = KF();
        kw = t;
        function t(n) {
            return e(n).filter(function(r) {
                return r.length > 1 || r.length === 1 && n.hasEdge(r[0], r[0]);
            });
        }
        return kw;
    }
    var Cw, Lj;
    function U9() {
        if (Lj) return Cw;
        Lj = 1, Cw = t;
        var e = ()=>1;
        function t(r, i, o) {
            return n(r, i || e, o || function(s) {
                return r.outEdges(s);
            });
        }
        function n(r, i, o) {
            var s = {}, l = r.nodes();
            return l.forEach(function(u) {
                s[u] = {}, s[u][u] = {
                    distance: 0
                }, l.forEach(function(f) {
                    u !== f && (s[u][f] = {
                        distance: Number.POSITIVE_INFINITY
                    });
                }), o(u).forEach(function(f) {
                    var p = f.v === u ? f.w : f.v, m = i(f);
                    s[u][p] = {
                        distance: m,
                        predecessor: u
                    };
                });
            }), l.forEach(function(u) {
                var f = s[u];
                l.forEach(function(p) {
                    var m = s[p];
                    l.forEach(function(g) {
                        var v = m[u], x = f[g], b = m[g], S = v.distance + x.distance;
                        S < b.distance && (b.distance = S, b.predecessor = x.predecessor);
                    });
                });
            }), s;
        }
        return Cw;
    }
    var jw, $j;
    function GF() {
        if ($j) return jw;
        $j = 1;
        function e(n) {
            var r = {}, i = {}, o = [];
            function s(l) {
                if (Object.hasOwn(i, l)) throw new t;
                Object.hasOwn(r, l) || (i[l] = !0, r[l] = !0, n.predecessors(l).forEach(s), delete i[l], o.push(l));
            }
            if (n.sinks().forEach(s), Object.keys(r).length !== n.nodeCount()) throw new t;
            return o;
        }
        class t extends Error {
            constructor(){
                super(...arguments);
            }
        }
        return jw = e, e.CycleException = t, jw;
    }
    var Rw, qj;
    function H9() {
        if (qj) return Rw;
        qj = 1;
        var e = GF();
        Rw = t;
        function t(n) {
            try {
                e(n);
            } catch (r) {
                if (r instanceof e.CycleException) return !1;
                throw r;
            }
            return !0;
        }
        return Rw;
    }
    var Ow, Bj;
    function QF() {
        if (Bj) return Ow;
        Bj = 1, Ow = e;
        function e(i, o, s) {
            Array.isArray(o) || (o = [
                o
            ]);
            var l = i.isDirected() ? (m)=>i.successors(m) : (m)=>i.neighbors(m), u = s === "post" ? t : n, f = [], p = {};
            return o.forEach((m)=>{
                if (!i.hasNode(m)) throw new Error("Graph does not have node: " + m);
                u(m, l, p, f);
            }), f;
        }
        function t(i, o, s, l) {
            for(var u = [
                [
                    i,
                    !1
                ]
            ]; u.length > 0;){
                var f = u.pop();
                f[1] ? l.push(f[0]) : Object.hasOwn(s, f[0]) || (s[f[0]] = !0, u.push([
                    f[0],
                    !0
                ]), r(o(f[0]), (p)=>u.push([
                        p,
                        !1
                    ])));
            }
        }
        function n(i, o, s, l) {
            for(var u = [
                i
            ]; u.length > 0;){
                var f = u.pop();
                Object.hasOwn(s, f) || (s[f] = !0, l.push(f), r(o(f), (p)=>u.push(p)));
            }
        }
        function r(i, o) {
            for(var s = i.length; s--;)o(i[s], s, i);
            return i;
        }
        return Ow;
    }
    var Tw, zj;
    function K9() {
        if (zj) return Tw;
        zj = 1;
        var e = QF();
        Tw = t;
        function t(n, r) {
            return e(n, r, "post");
        }
        return Tw;
    }
    var Pw, Wj;
    function G9() {
        if (Wj) return Pw;
        Wj = 1;
        var e = QF();
        Pw = t;
        function t(n, r) {
            return e(n, r, "pre");
        }
        return Pw;
    }
    var Aw, Vj;
    function Q9() {
        if (Vj) return Aw;
        Vj = 1;
        var e = eI(), t = UF();
        Aw = n;
        function n(r, i) {
            var o = new e, s = {}, l = new t, u;
            function f(m) {
                var g = m.v === u ? m.w : m.v, v = l.priority(g);
                if (v !== void 0) {
                    var x = i(m);
                    x < v && (s[g] = u, l.decrease(g, x));
                }
            }
            if (r.nodeCount() === 0) return o;
            r.nodes().forEach(function(m) {
                l.add(m, Number.POSITIVE_INFINITY), o.setNode(m);
            }), l.decrease(r.nodes()[0], 0);
            for(var p = !1; l.size() > 0;){
                if (u = l.removeMin(), Object.hasOwn(s, u)) o.setEdge(u, s[u]);
                else {
                    if (p) throw new Error("Input graph is not connected: " + r);
                    p = !0;
                }
                r.nodeEdges(u).forEach(f);
            }
            return o;
        }
        return Aw;
    }
    var Fw, Uj;
    function J9() {
        return Uj || (Uj = 1, Fw = {
            components: z9(),
            dijkstra: HF(),
            dijkstraAll: W9(),
            findCycles: V9(),
            floydWarshall: U9(),
            isAcyclic: H9(),
            postorder: K9(),
            preorder: G9(),
            prim: Q9(),
            tarjan: KF(),
            topsort: GF()
        }), Fw;
    }
    var Dw, Hj;
    function Xi() {
        if (Hj) return Dw;
        Hj = 1;
        var e = q9();
        return Dw = {
            Graph: e.Graph,
            json: B9(),
            alg: J9(),
            version: e.version
        }, Dw;
    }
    var Mw, Kj;
    function Z9() {
        if (Kj) return Mw;
        Kj = 1;
        class e {
            constructor(){
                let i = {};
                i._next = i._prev = i, this._sentinel = i;
            }
            dequeue() {
                let i = this._sentinel, o = i._prev;
                if (o !== i) return t(o), o;
            }
            enqueue(i) {
                let o = this._sentinel;
                i._prev && i._next && t(i), i._next = o._next, o._next._prev = i, o._next = i, i._prev = o;
            }
            toString() {
                let i = [], o = this._sentinel, s = o._prev;
                for(; s !== o;)i.push(JSON.stringify(s, n)), s = s._prev;
                return "[" + i.join(", ") + "]";
            }
        }
        function t(r) {
            r._prev._next = r._next, r._next._prev = r._prev, delete r._next, delete r._prev;
        }
        function n(r, i) {
            if (r !== "_next" && r !== "_prev") return i;
        }
        return Mw = e, Mw;
    }
    var Lw, Gj;
    function Y9() {
        if (Gj) return Lw;
        Gj = 1;
        let e = Xi().Graph, t = Z9();
        Lw = r;
        let n = ()=>1;
        function r(f, p) {
            if (f.nodeCount() <= 1) return [];
            let m = s(f, p || n);
            return i(m.graph, m.buckets, m.zeroIdx).flatMap((v)=>f.outEdges(v.v, v.w));
        }
        function i(f, p, m) {
            let g = [], v = p[p.length - 1], x = p[0], b;
            for(; f.nodeCount();){
                for(; b = x.dequeue();)o(f, p, m, b);
                for(; b = v.dequeue();)o(f, p, m, b);
                if (f.nodeCount()) {
                    for(let S = p.length - 2; S > 0; --S)if (b = p[S].dequeue(), b) {
                        g = g.concat(o(f, p, m, b, !0));
                        break;
                    }
                }
            }
            return g;
        }
        function o(f, p, m, g, v) {
            let x = v ? [] : void 0;
            return f.inEdges(g.v).forEach((b)=>{
                let S = f.edge(b), N = f.node(b.v);
                v && x.push({
                    v: b.v,
                    w: b.w
                }), N.out -= S, l(p, m, N);
            }), f.outEdges(g.v).forEach((b)=>{
                let S = f.edge(b), N = b.w, _ = f.node(N);
                _.in -= S, l(p, m, _);
            }), f.removeNode(g.v), x;
        }
        function s(f, p) {
            let m = new e, g = 0, v = 0;
            f.nodes().forEach((S)=>{
                m.setNode(S, {
                    v: S,
                    in: 0,
                    out: 0
                });
            }), f.edges().forEach((S)=>{
                let N = m.edge(S.v, S.w) || 0, _ = p(S), I = N + _;
                m.setEdge(S.v, S.w, I), v = Math.max(v, m.node(S.v).out += _), g = Math.max(g, m.node(S.w).in += _);
            });
            let x = u(v + g + 3).map(()=>new t), b = g + 1;
            return m.nodes().forEach((S)=>{
                l(x, b, m.node(S));
            }), {
                graph: m,
                buckets: x,
                zeroIdx: b
            };
        }
        function l(f, p, m) {
            m.out ? m.in ? f[m.out - m.in + p].enqueue(m) : f[f.length - 1].enqueue(m) : f[0].enqueue(m);
        }
        function u(f) {
            const p = [];
            for(let m = 0; m < f; m++)p.push(m);
            return p;
        }
        return Lw;
    }
    var $w, Qj;
    function Rn() {
        if (Qj) return $w;
        Qj = 1;
        let e = Xi().Graph;
        $w = {
            addBorderNode: p,
            addDummyNode: t,
            applyWithChunking: v,
            asNonCompoundGraph: r,
            buildLayerMatrix: l,
            intersectRect: s,
            mapValues: R,
            maxRank: x,
            normalizeRanks: u,
            notime: N,
            partition: b,
            pick: A,
            predecessorWeights: o,
            range: C,
            removeEmptyRanks: f,
            simplify: n,
            successorWeights: i,
            time: S,
            uniqueId: I,
            zipObject: D
        };
        function t(O, E, F, j) {
            let M;
            do M = I(j);
            while (O.hasNode(M));
            return F.dummy = E, O.setNode(M, F), M;
        }
        function n(O) {
            let E = new e().setGraph(O.graph());
            return O.nodes().forEach((F)=>E.setNode(F, O.node(F))), O.edges().forEach((F)=>{
                let j = E.edge(F.v, F.w) || {
                    weight: 0,
                    minlen: 1
                }, M = O.edge(F);
                E.setEdge(F.v, F.w, {
                    weight: j.weight + M.weight,
                    minlen: Math.max(j.minlen, M.minlen)
                });
            }), E;
        }
        function r(O) {
            let E = new e({
                multigraph: O.isMultigraph()
            }).setGraph(O.graph());
            return O.nodes().forEach((F)=>{
                O.children(F).length || E.setNode(F, O.node(F));
            }), O.edges().forEach((F)=>{
                E.setEdge(F, O.edge(F));
            }), E;
        }
        function i(O) {
            let E = O.nodes().map((F)=>{
                let j = {};
                return O.outEdges(F).forEach((M)=>{
                    j[M.w] = (j[M.w] || 0) + O.edge(M).weight;
                }), j;
            });
            return D(O.nodes(), E);
        }
        function o(O) {
            let E = O.nodes().map((F)=>{
                let j = {};
                return O.inEdges(F).forEach((M)=>{
                    j[M.v] = (j[M.v] || 0) + O.edge(M).weight;
                }), j;
            });
            return D(O.nodes(), E);
        }
        function s(O, E) {
            let F = O.x, j = O.y, M = E.x - F, L = E.y - j, P = O.width / 2, V = O.height / 2;
            if (!M && !L) throw new Error("Not possible to find intersection inside of the rectangle");
            let z, Q;
            return Math.abs(L) * P > Math.abs(M) * V ? (L < 0 && (V = -V), z = V * M / L, Q = V) : (M < 0 && (P = -P), z = P, Q = P * L / M), {
                x: F + z,
                y: j + Q
            };
        }
        function l(O) {
            let E = C(x(O) + 1).map(()=>[]);
            return O.nodes().forEach((F)=>{
                let j = O.node(F), M = j.rank;
                M !== void 0 && (E[M][j.order] = F);
            }), E;
        }
        function u(O) {
            let E = O.nodes().map((j)=>{
                let M = O.node(j).rank;
                return M === void 0 ? Number.MAX_VALUE : M;
            }), F = v(Math.min, E);
            O.nodes().forEach((j)=>{
                let M = O.node(j);
                Object.hasOwn(M, "rank") && (M.rank -= F);
            });
        }
        function f(O) {
            let E = O.nodes().map((P)=>O.node(P).rank), F = v(Math.min, E), j = [];
            O.nodes().forEach((P)=>{
                let V = O.node(P).rank - F;
                j[V] || (j[V] = []), j[V].push(P);
            });
            let M = 0, L = O.graph().nodeRankFactor;
            Array.from(j).forEach((P, V)=>{
                P === void 0 && V % L !== 0 ? --M : P !== void 0 && M && P.forEach((z)=>O.node(z).rank += M);
            });
        }
        function p(O, E, F, j) {
            let M = {
                width: 0,
                height: 0
            };
            return arguments.length >= 4 && (M.rank = F, M.order = j), t(O, "border", M, E);
        }
        function m(O, E = g) {
            const F = [];
            for(let j = 0; j < O.length; j += E){
                const M = O.slice(j, j + E);
                F.push(M);
            }
            return F;
        }
        const g = 65535;
        function v(O, E) {
            if (E.length > g) {
                const F = m(E);
                return O.apply(null, F.map((j)=>O.apply(null, j)));
            } else return O.apply(null, E);
        }
        function x(O) {
            const F = O.nodes().map((j)=>{
                let M = O.node(j).rank;
                return M === void 0 ? Number.MIN_VALUE : M;
            });
            return v(Math.max, F);
        }
        function b(O, E) {
            let F = {
                lhs: [],
                rhs: []
            };
            return O.forEach((j)=>{
                E(j) ? F.lhs.push(j) : F.rhs.push(j);
            }), F;
        }
        function S(O, E) {
            let F = Date.now();
            try {
                return E();
            } finally{
                console.log(O + " time: " + (Date.now() - F) + "ms");
            }
        }
        function N(O, E) {
            return E();
        }
        let _ = 0;
        function I(O) {
            var E = ++_;
            return toString(O) + E;
        }
        function C(O, E, F = 1) {
            E == null && (E = O, O = 0);
            let j = (L)=>L < E;
            F < 0 && (j = (L)=>E < L);
            const M = [];
            for(let L = O; j(L); L += F)M.push(L);
            return M;
        }
        function A(O, E) {
            const F = {};
            for (const j of E)O[j] !== void 0 && (F[j] = O[j]);
            return F;
        }
        function R(O, E) {
            let F = E;
            return typeof E == "string" && (F = (j)=>j[E]), Object.entries(O).reduce((j, [M, L])=>(j[M] = F(L, M), j), {});
        }
        function D(O, E) {
            return O.reduce((F, j, M)=>(F[j] = E[M], F), {});
        }
        return $w;
    }
    var qw, Jj;
    function X9() {
        if (Jj) return qw;
        Jj = 1;
        let e = Y9(), t = Rn().uniqueId;
        qw = {
            run: n,
            undo: i
        };
        function n(o) {
            (o.graph().acyclicer === "greedy" ? e(o, l(o)) : r(o)).forEach((u)=>{
                let f = o.edge(u);
                o.removeEdge(u), f.forwardName = u.name, f.reversed = !0, o.setEdge(u.w, u.v, f, t("rev"));
            });
            function l(u) {
                return (f)=>u.edge(f).weight;
            }
        }
        function r(o) {
            let s = [], l = {}, u = {};
            function f(p) {
                Object.hasOwn(u, p) || (u[p] = !0, l[p] = !0, o.outEdges(p).forEach((m)=>{
                    Object.hasOwn(l, m.w) ? s.push(m) : f(m.w);
                }), delete l[p]);
            }
            return o.nodes().forEach(f), s;
        }
        function i(o) {
            o.edges().forEach((s)=>{
                let l = o.edge(s);
                if (l.reversed) {
                    o.removeEdge(s);
                    let u = l.forwardName;
                    delete l.reversed, delete l.forwardName, o.setEdge(s.w, s.v, l, u);
                }
            });
        }
        return qw;
    }
    var Bw, Zj;
    function e7() {
        if (Zj) return Bw;
        Zj = 1;
        let e = Rn();
        Bw = {
            run: t,
            undo: r
        };
        function t(i) {
            i.graph().dummyChains = [], i.edges().forEach((o)=>n(i, o));
        }
        function n(i, o) {
            let s = o.v, l = i.node(s).rank, u = o.w, f = i.node(u).rank, p = o.name, m = i.edge(o), g = m.labelRank;
            if (f === l + 1) return;
            i.removeEdge(o);
            let v, x, b;
            for(b = 0, ++l; l < f; ++b, ++l)m.points = [], x = {
                width: 0,
                height: 0,
                edgeLabel: m,
                edgeObj: o,
                rank: l
            }, v = e.addDummyNode(i, "edge", x, "_d"), l === g && (x.width = m.width, x.height = m.height, x.dummy = "edge-label", x.labelpos = m.labelpos), i.setEdge(s, v, {
                weight: m.weight
            }, p), b === 0 && i.graph().dummyChains.push(v), s = v;
            i.setEdge(s, u, {
                weight: m.weight
            }, p);
        }
        function r(i) {
            i.graph().dummyChains.forEach((o)=>{
                let s = i.node(o), l = s.edgeLabel, u;
                for(i.setEdge(s.edgeObj, l); s.dummy;)u = i.successors(o)[0], i.removeNode(o), l.points.push({
                    x: s.x,
                    y: s.y
                }), s.dummy === "edge-label" && (l.x = s.x, l.y = s.y, l.width = s.width, l.height = s.height), o = u, s = i.node(o);
            });
        }
        return Bw;
    }
    var zw, Yj;
    function Tg() {
        if (Yj) return zw;
        Yj = 1;
        const { applyWithChunking: e } = Rn();
        zw = {
            longestPath: t,
            slack: n
        };
        function t(r) {
            var i = {};
            function o(s) {
                var l = r.node(s);
                if (Object.hasOwn(i, s)) return l.rank;
                i[s] = !0;
                let u = r.outEdges(s).map((p)=>p == null ? Number.POSITIVE_INFINITY : o(p.w) - r.edge(p).minlen);
                var f = e(Math.min, u);
                return f === Number.POSITIVE_INFINITY && (f = 0), l.rank = f;
            }
            r.sources().forEach(o);
        }
        function n(r, i) {
            return r.node(i.w).rank - r.node(i.v).rank - r.edge(i).minlen;
        }
        return zw;
    }
    var Ww, Xj;
    function JF() {
        if (Xj) return Ww;
        Xj = 1;
        var e = Xi().Graph, t = Tg().slack;
        Ww = n;
        function n(s) {
            var l = new e({
                directed: !1
            }), u = s.nodes()[0], f = s.nodeCount();
            l.setNode(u, {});
            for(var p, m; r(l, s) < f;)p = i(l, s), m = l.hasNode(p.v) ? t(s, p) : -t(s, p), o(l, s, m);
            return l;
        }
        function r(s, l) {
            function u(f) {
                l.nodeEdges(f).forEach((p)=>{
                    var m = p.v, g = f === m ? p.w : m;
                    !s.hasNode(g) && !t(l, p) && (s.setNode(g, {}), s.setEdge(f, g, {}), u(g));
                });
            }
            return s.nodes().forEach(u), s.nodeCount();
        }
        function i(s, l) {
            return l.edges().reduce((f, p)=>{
                let m = Number.POSITIVE_INFINITY;
                return s.hasNode(p.v) !== s.hasNode(p.w) && (m = t(l, p)), m < f[0] ? [
                    m,
                    p
                ] : f;
            }, [
                Number.POSITIVE_INFINITY,
                null
            ])[1];
        }
        function o(s, l, u) {
            s.nodes().forEach((f)=>l.node(f).rank += u);
        }
        return Ww;
    }
    var Vw, eR;
    function t7() {
        if (eR) return Vw;
        eR = 1;
        var e = JF(), t = Tg().slack, n = Tg().longestPath, r = Xi().alg.preorder, i = Xi().alg.postorder, o = Rn().simplify;
        Vw = s, s.initLowLimValues = p, s.initCutValues = l, s.calcCutValue = f, s.leaveEdge = g, s.enterEdge = v, s.exchangeEdges = x;
        function s(_) {
            _ = o(_), n(_);
            var I = e(_);
            p(I), l(I, _);
            for(var C, A; C = g(I);)A = v(I, _, C), x(I, _, C, A);
        }
        function l(_, I) {
            var C = i(_, _.nodes());
            C = C.slice(0, C.length - 1), C.forEach((A)=>u(_, I, A));
        }
        function u(_, I, C) {
            var A = _.node(C), R = A.parent;
            _.edge(C, R).cutvalue = f(_, I, C);
        }
        function f(_, I, C) {
            var A = _.node(C), R = A.parent, D = !0, O = I.edge(C, R), E = 0;
            return O || (D = !1, O = I.edge(R, C)), E = O.weight, I.nodeEdges(C).forEach((F)=>{
                var j = F.v === C, M = j ? F.w : F.v;
                if (M !== R) {
                    var L = j === D, P = I.edge(F).weight;
                    if (E += L ? P : -P, S(_, C, M)) {
                        var V = _.edge(C, M).cutvalue;
                        E += L ? -V : V;
                    }
                }
            }), E;
        }
        function p(_, I) {
            arguments.length < 2 && (I = _.nodes()[0]), m(_, {}, 1, I);
        }
        function m(_, I, C, A, R) {
            var D = C, O = _.node(A);
            return I[A] = !0, _.neighbors(A).forEach((E)=>{
                Object.hasOwn(I, E) || (C = m(_, I, C, E, A));
            }), O.low = D, O.lim = C++, R ? O.parent = R : delete O.parent, C;
        }
        function g(_) {
            return _.edges().find((I)=>_.edge(I).cutvalue < 0);
        }
        function v(_, I, C) {
            var A = C.v, R = C.w;
            I.hasEdge(A, R) || (A = C.w, R = C.v);
            var D = _.node(A), O = _.node(R), E = D, F = !1;
            D.lim > O.lim && (E = O, F = !0);
            var j = I.edges().filter((M)=>F === N(_, _.node(M.v), E) && F !== N(_, _.node(M.w), E));
            return j.reduce((M, L)=>t(I, L) < t(I, M) ? L : M);
        }
        function x(_, I, C, A) {
            var R = C.v, D = C.w;
            _.removeEdge(R, D), _.setEdge(A.v, A.w, {}), p(_), l(_, I), b(_, I);
        }
        function b(_, I) {
            var C = _.nodes().find((R)=>!I.node(R).parent), A = r(_, C);
            A = A.slice(1), A.forEach((R)=>{
                var D = _.node(R).parent, O = I.edge(R, D), E = !1;
                O || (O = I.edge(D, R), E = !0), I.node(R).rank = I.node(D).rank + (E ? O.minlen : -O.minlen);
            });
        }
        function S(_, I, C) {
            return _.hasEdge(I, C);
        }
        function N(_, I, C) {
            return C.low <= I.lim && I.lim <= C.lim;
        }
        return Vw;
    }
    var Uw, tR;
    function n7() {
        if (tR) return Uw;
        tR = 1;
        var e = Tg(), t = e.longestPath, n = JF(), r = t7();
        Uw = i;
        function i(u) {
            switch(u.graph().ranker){
                case "network-simplex":
                    l(u);
                    break;
                case "tight-tree":
                    s(u);
                    break;
                case "longest-path":
                    o(u);
                    break;
                default:
                    l(u);
            }
        }
        var o = t;
        function s(u) {
            t(u), n(u);
        }
        function l(u) {
            r(u);
        }
        return Uw;
    }
    var Hw, nR;
    function r7() {
        if (nR) return Hw;
        nR = 1, Hw = e;
        function e(r) {
            let i = n(r);
            r.graph().dummyChains.forEach((o)=>{
                let s = r.node(o), l = s.edgeObj, u = t(r, i, l.v, l.w), f = u.path, p = u.lca, m = 0, g = f[m], v = !0;
                for(; o !== l.w;){
                    if (s = r.node(o), v) {
                        for(; (g = f[m]) !== p && r.node(g).maxRank < s.rank;)m++;
                        g === p && (v = !1);
                    }
                    if (!v) {
                        for(; m < f.length - 1 && r.node(g = f[m + 1]).minRank <= s.rank;)m++;
                        g = f[m];
                    }
                    r.setParent(o, g), o = r.successors(o)[0];
                }
            });
        }
        function t(r, i, o, s) {
            let l = [], u = [], f = Math.min(i[o].low, i[s].low), p = Math.max(i[o].lim, i[s].lim), m, g;
            m = o;
            do m = r.parent(m), l.push(m);
            while (m && (i[m].low > f || p > i[m].lim));
            for(g = m, m = s; (m = r.parent(m)) !== g;)u.push(m);
            return {
                path: l.concat(u.reverse()),
                lca: g
            };
        }
        function n(r) {
            let i = {}, o = 0;
            function s(l) {
                let u = o;
                r.children(l).forEach(s), i[l] = {
                    low: u,
                    lim: o++
                };
            }
            return r.children().forEach(s), i;
        }
        return Hw;
    }
    var Kw, rR;
    function i7() {
        if (rR) return Kw;
        rR = 1;
        let e = Rn();
        Kw = {
            run: t,
            cleanup: o
        };
        function t(s) {
            let l = e.addDummyNode(s, "root", {}, "_root"), u = r(s), f = Object.values(u), p = e.applyWithChunking(Math.max, f) - 1, m = 2 * p + 1;
            s.graph().nestingRoot = l, s.edges().forEach((v)=>s.edge(v).minlen *= m);
            let g = i(s) + 1;
            s.children().forEach((v)=>n(s, l, m, g, p, u, v)), s.graph().nodeRankFactor = m;
        }
        function n(s, l, u, f, p, m, g) {
            let v = s.children(g);
            if (!v.length) {
                g !== l && s.setEdge(l, g, {
                    weight: 0,
                    minlen: u
                });
                return;
            }
            let x = e.addBorderNode(s, "_bt"), b = e.addBorderNode(s, "_bb"), S = s.node(g);
            s.setParent(x, g), S.borderTop = x, s.setParent(b, g), S.borderBottom = b, v.forEach((N)=>{
                n(s, l, u, f, p, m, N);
                let _ = s.node(N), I = _.borderTop ? _.borderTop : N, C = _.borderBottom ? _.borderBottom : N, A = _.borderTop ? f : 2 * f, R = I !== C ? 1 : p - m[g] + 1;
                s.setEdge(x, I, {
                    weight: A,
                    minlen: R,
                    nestingEdge: !0
                }), s.setEdge(C, b, {
                    weight: A,
                    minlen: R,
                    nestingEdge: !0
                });
            }), s.parent(g) || s.setEdge(l, x, {
                weight: 0,
                minlen: p + m[g]
            });
        }
        function r(s) {
            var l = {};
            function u(f, p) {
                var m = s.children(f);
                m && m.length && m.forEach((g)=>u(g, p + 1)), l[f] = p;
            }
            return s.children().forEach((f)=>u(f, 1)), l;
        }
        function i(s) {
            return s.edges().reduce((l, u)=>l + s.edge(u).weight, 0);
        }
        function o(s) {
            var l = s.graph();
            s.removeNode(l.nestingRoot), delete l.nestingRoot, s.edges().forEach((u)=>{
                var f = s.edge(u);
                f.nestingEdge && s.removeEdge(u);
            });
        }
        return Kw;
    }
    var Gw, iR;
    function o7() {
        if (iR) return Gw;
        iR = 1;
        let e = Rn();
        Gw = t;
        function t(r) {
            function i(o) {
                let s = r.children(o), l = r.node(o);
                if (s.length && s.forEach(i), Object.hasOwn(l, "minRank")) {
                    l.borderLeft = [], l.borderRight = [];
                    for(let u = l.minRank, f = l.maxRank + 1; u < f; ++u)n(r, "borderLeft", "_bl", o, l, u), n(r, "borderRight", "_br", o, l, u);
                }
            }
            r.children().forEach(i);
        }
        function n(r, i, o, s, l, u) {
            let f = {
                width: 0,
                height: 0,
                rank: u,
                borderType: i
            }, p = l[i][u - 1], m = e.addDummyNode(r, "border", f, o);
            l[i][u] = m, r.setParent(m, s), p && r.setEdge(p, m, {
                weight: 1
            });
        }
        return Gw;
    }
    var Qw, oR;
    function s7() {
        if (oR) return Qw;
        oR = 1, Qw = {
            adjust: e,
            undo: t
        };
        function e(u) {
            let f = u.graph().rankdir.toLowerCase();
            (f === "lr" || f === "rl") && n(u);
        }
        function t(u) {
            let f = u.graph().rankdir.toLowerCase();
            (f === "bt" || f === "rl") && i(u), (f === "lr" || f === "rl") && (s(u), n(u));
        }
        function n(u) {
            u.nodes().forEach((f)=>r(u.node(f))), u.edges().forEach((f)=>r(u.edge(f)));
        }
        function r(u) {
            let f = u.width;
            u.width = u.height, u.height = f;
        }
        function i(u) {
            u.nodes().forEach((f)=>o(u.node(f))), u.edges().forEach((f)=>{
                let p = u.edge(f);
                p.points.forEach(o), Object.hasOwn(p, "y") && o(p);
            });
        }
        function o(u) {
            u.y = -u.y;
        }
        function s(u) {
            u.nodes().forEach((f)=>l(u.node(f))), u.edges().forEach((f)=>{
                let p = u.edge(f);
                p.points.forEach(l), Object.hasOwn(p, "x") && l(p);
            });
        }
        function l(u) {
            let f = u.x;
            u.x = u.y, u.y = f;
        }
        return Qw;
    }
    var Jw, sR;
    function a7() {
        if (sR) return Jw;
        sR = 1;
        let e = Rn();
        Jw = t;
        function t(n) {
            let r = {}, i = n.nodes().filter((p)=>!n.children(p).length), o = i.map((p)=>n.node(p).rank), s = e.applyWithChunking(Math.max, o), l = e.range(s + 1).map(()=>[]);
            function u(p) {
                if (r[p]) return;
                r[p] = !0;
                let m = n.node(p);
                l[m.rank].push(p), n.successors(p).forEach(u);
            }
            return i.sort((p, m)=>n.node(p).rank - n.node(m).rank).forEach(u), l;
        }
        return Jw;
    }
    var Zw, aR;
    function l7() {
        if (aR) return Zw;
        aR = 1;
        let e = Rn().zipObject;
        Zw = t;
        function t(r, i) {
            let o = 0;
            for(let s = 1; s < i.length; ++s)o += n(r, i[s - 1], i[s]);
            return o;
        }
        function n(r, i, o) {
            let s = e(o, o.map((g, v)=>v)), l = i.flatMap((g)=>r.outEdges(g).map((v)=>({
                        pos: s[v.w],
                        weight: r.edge(v).weight
                    })).sort((v, x)=>v.pos - x.pos)), u = 1;
            for(; u < o.length;)u <<= 1;
            let f = 2 * u - 1;
            u -= 1;
            let p = new Array(f).fill(0), m = 0;
            return l.forEach((g)=>{
                let v = g.pos + u;
                p[v] += g.weight;
                let x = 0;
                for(; v > 0;)v % 2 && (x += p[v + 1]), v = v - 1 >> 1, p[v] += g.weight;
                m += g.weight * x;
            }), m;
        }
        return Zw;
    }
    var Yw, lR;
    function c7() {
        if (lR) return Yw;
        lR = 1, Yw = e;
        function e(t, n = []) {
            return n.map((r)=>{
                let i = t.inEdges(r);
                if (i.length) {
                    let o = i.reduce((s, l)=>{
                        let u = t.edge(l), f = t.node(l.v);
                        return {
                            sum: s.sum + u.weight * f.order,
                            weight: s.weight + u.weight
                        };
                    }, {
                        sum: 0,
                        weight: 0
                    });
                    return {
                        v: r,
                        barycenter: o.sum / o.weight,
                        weight: o.weight
                    };
                } else return {
                    v: r
                };
            });
        }
        return Yw;
    }
    var Xw, cR;
    function u7() {
        if (cR) return Xw;
        cR = 1;
        let e = Rn();
        Xw = t;
        function t(i, o) {
            let s = {};
            i.forEach((u, f)=>{
                let p = s[u.v] = {
                    indegree: 0,
                    in: [],
                    out: [],
                    vs: [
                        u.v
                    ],
                    i: f
                };
                u.barycenter !== void 0 && (p.barycenter = u.barycenter, p.weight = u.weight);
            }), o.edges().forEach((u)=>{
                let f = s[u.v], p = s[u.w];
                f !== void 0 && p !== void 0 && (p.indegree++, f.out.push(s[u.w]));
            });
            let l = Object.values(s).filter((u)=>!u.indegree);
            return n(l);
        }
        function n(i) {
            let o = [];
            function s(u) {
                return (f)=>{
                    f.merged || (f.barycenter === void 0 || u.barycenter === void 0 || f.barycenter >= u.barycenter) && r(u, f);
                };
            }
            function l(u) {
                return (f)=>{
                    f.in.push(u), --f.indegree === 0 && i.push(f);
                };
            }
            for(; i.length;){
                let u = i.pop();
                o.push(u), u.in.reverse().forEach(s(u)), u.out.forEach(l(u));
            }
            return o.filter((u)=>!u.merged).map((u)=>e.pick(u, [
                    "vs",
                    "i",
                    "barycenter",
                    "weight"
                ]));
        }
        function r(i, o) {
            let s = 0, l = 0;
            i.weight && (s += i.barycenter * i.weight, l += i.weight), o.weight && (s += o.barycenter * o.weight, l += o.weight), i.vs = o.vs.concat(i.vs), i.barycenter = s / l, i.weight = l, i.i = Math.min(o.i, i.i), o.merged = !0;
        }
        return Xw;
    }
    var e0, uR;
    function d7() {
        if (uR) return e0;
        uR = 1;
        let e = Rn();
        e0 = t;
        function t(i, o) {
            let s = e.partition(i, (x)=>Object.hasOwn(x, "barycenter")), l = s.lhs, u = s.rhs.sort((x, b)=>b.i - x.i), f = [], p = 0, m = 0, g = 0;
            l.sort(r(!!o)), g = n(f, u, g), l.forEach((x)=>{
                g += x.vs.length, f.push(x.vs), p += x.barycenter * x.weight, m += x.weight, g = n(f, u, g);
            });
            let v = {
                vs: f.flat(!0)
            };
            return m && (v.barycenter = p / m, v.weight = m), v;
        }
        function n(i, o, s) {
            let l;
            for(; o.length && (l = o[o.length - 1]).i <= s;)o.pop(), i.push(l.vs), s++;
            return s;
        }
        function r(i) {
            return (o, s)=>o.barycenter < s.barycenter ? -1 : o.barycenter > s.barycenter ? 1 : i ? s.i - o.i : o.i - s.i;
        }
        return e0;
    }
    var t0, dR;
    function f7() {
        if (dR) return t0;
        dR = 1;
        let e = c7(), t = u7(), n = d7();
        t0 = r;
        function r(s, l, u, f) {
            let p = s.children(l), m = s.node(l), g = m ? m.borderLeft : void 0, v = m ? m.borderRight : void 0, x = {};
            g && (p = p.filter((_)=>_ !== g && _ !== v));
            let b = e(s, p);
            b.forEach((_)=>{
                if (s.children(_.v).length) {
                    let I = r(s, _.v, u, f);
                    x[_.v] = I, Object.hasOwn(I, "barycenter") && o(_, I);
                }
            });
            let S = t(b, u);
            i(S, x);
            let N = n(S, f);
            if (g && (N.vs = [
                g,
                N.vs,
                v
            ].flat(!0), s.predecessors(g).length)) {
                let _ = s.node(s.predecessors(g)[0]), I = s.node(s.predecessors(v)[0]);
                Object.hasOwn(N, "barycenter") || (N.barycenter = 0, N.weight = 0), N.barycenter = (N.barycenter * N.weight + _.order + I.order) / (N.weight + 2), N.weight += 2;
            }
            return N;
        }
        function i(s, l) {
            s.forEach((u)=>{
                u.vs = u.vs.flatMap((f)=>l[f] ? l[f].vs : f);
            });
        }
        function o(s, l) {
            s.barycenter !== void 0 ? (s.barycenter = (s.barycenter * s.weight + l.barycenter * l.weight) / (s.weight + l.weight), s.weight += l.weight) : (s.barycenter = l.barycenter, s.weight = l.weight);
        }
        return t0;
    }
    var n0, fR;
    function p7() {
        if (fR) return n0;
        fR = 1;
        let e = Xi().Graph, t = Rn();
        n0 = n;
        function n(i, o, s) {
            let l = r(i), u = new e({
                compound: !0
            }).setGraph({
                root: l
            }).setDefaultNodeLabel((f)=>i.node(f));
            return i.nodes().forEach((f)=>{
                let p = i.node(f), m = i.parent(f);
                (p.rank === o || p.minRank <= o && o <= p.maxRank) && (u.setNode(f), u.setParent(f, m || l), i[s](f).forEach((g)=>{
                    let v = g.v === f ? g.w : g.v, x = u.edge(v, f), b = x !== void 0 ? x.weight : 0;
                    u.setEdge(v, f, {
                        weight: i.edge(g).weight + b
                    });
                }), Object.hasOwn(p, "minRank") && u.setNode(f, {
                    borderLeft: p.borderLeft[o],
                    borderRight: p.borderRight[o]
                }));
            }), u;
        }
        function r(i) {
            for(var o; i.hasNode(o = t.uniqueId("_root")););
            return o;
        }
        return n0;
    }
    var r0, pR;
    function h7() {
        if (pR) return r0;
        pR = 1, r0 = e;
        function e(t, n, r) {
            let i = {}, o;
            r.forEach((s)=>{
                let l = t.parent(s), u, f;
                for(; l;){
                    if (u = t.parent(l), u ? (f = i[u], i[u] = l) : (f = o, o = l), f && f !== l) {
                        n.setEdge(f, l);
                        return;
                    }
                    l = u;
                }
            });
        }
        return r0;
    }
    var i0, hR;
    function m7() {
        if (hR) return i0;
        hR = 1;
        let e = a7(), t = l7(), n = f7(), r = p7(), i = h7(), o = Xi().Graph, s = Rn();
        i0 = l;
        function l(m, g) {
            if (g && typeof g.customOrder == "function") {
                g.customOrder(m, l);
                return;
            }
            let v = s.maxRank(m), x = u(m, s.range(1, v + 1), "inEdges"), b = u(m, s.range(v - 1, -1, -1), "outEdges"), S = e(m);
            if (p(m, S), g && g.disableOptimalOrderHeuristic) return;
            let N = Number.POSITIVE_INFINITY, _;
            for(let I = 0, C = 0; C < 4; ++I, ++C){
                f(I % 2 ? x : b, I % 4 >= 2), S = s.buildLayerMatrix(m);
                let A = t(m, S);
                A < N && (C = 0, _ = Object.assign({}, S), N = A);
            }
            p(m, _);
        }
        function u(m, g, v) {
            return g.map(function(x) {
                return r(m, x, v);
            });
        }
        function f(m, g) {
            let v = new o;
            m.forEach(function(x) {
                let b = x.graph().root, S = n(x, b, v, g);
                S.vs.forEach((N, _)=>x.node(N).order = _), i(x, v, S.vs);
            });
        }
        function p(m, g) {
            Object.values(g).forEach((v)=>v.forEach((x, b)=>m.node(x).order = b));
        }
        return i0;
    }
    var o0, mR;
    function g7() {
        if (mR) return o0;
        mR = 1;
        let e = Xi().Graph, t = Rn();
        o0 = {
            positionX: v,
            findType1Conflicts: n,
            findType2Conflicts: r,
            addConflict: o,
            hasConflict: s,
            verticalAlignment: l,
            horizontalCompaction: u,
            alignCoordinates: m,
            findSmallestWidthAlignment: p,
            balance: g
        };
        function n(S, N) {
            let _ = {};
            function I(C, A) {
                let R = 0, D = 0, O = C.length, E = A[A.length - 1];
                return A.forEach((F, j)=>{
                    let M = i(S, F), L = M ? S.node(M).order : O;
                    (M || F === E) && (A.slice(D, j + 1).forEach((P)=>{
                        S.predecessors(P).forEach((V)=>{
                            let z = S.node(V), Q = z.order;
                            (Q < R || L < Q) && !(z.dummy && S.node(P).dummy) && o(_, V, P);
                        });
                    }), D = j + 1, R = L);
                }), A;
            }
            return N.length && N.reduce(I), _;
        }
        function r(S, N) {
            let _ = {};
            function I(A, R, D, O, E) {
                let F;
                t.range(R, D).forEach((j)=>{
                    F = A[j], S.node(F).dummy && S.predecessors(F).forEach((M)=>{
                        let L = S.node(M);
                        L.dummy && (L.order < O || L.order > E) && o(_, M, F);
                    });
                });
            }
            function C(A, R) {
                let D = -1, O, E = 0;
                return R.forEach((F, j)=>{
                    if (S.node(F).dummy === "border") {
                        let M = S.predecessors(F);
                        M.length && (O = S.node(M[0]).order, I(R, E, j, D, O), E = j, D = O);
                    }
                    I(R, E, R.length, O, A.length);
                }), R;
            }
            return N.length && N.reduce(C), _;
        }
        function i(S, N) {
            if (S.node(N).dummy) return S.predecessors(N).find((_)=>S.node(_).dummy);
        }
        function o(S, N, _) {
            if (N > _) {
                let C = N;
                N = _, _ = C;
            }
            let I = S[N];
            I || (S[N] = I = {}), I[_] = !0;
        }
        function s(S, N, _) {
            if (N > _) {
                let I = N;
                N = _, _ = I;
            }
            return !!S[N] && Object.hasOwn(S[N], _);
        }
        function l(S, N, _, I) {
            let C = {}, A = {}, R = {};
            return N.forEach((D)=>{
                D.forEach((O, E)=>{
                    C[O] = O, A[O] = O, R[O] = E;
                });
            }), N.forEach((D)=>{
                let O = -1;
                D.forEach((E)=>{
                    let F = I(E);
                    if (F.length) {
                        F = F.sort((M, L)=>R[M] - R[L]);
                        let j = (F.length - 1) / 2;
                        for(let M = Math.floor(j), L = Math.ceil(j); M <= L; ++M){
                            let P = F[M];
                            A[E] === E && O < R[P] && !s(_, E, P) && (A[P] = E, A[E] = C[E] = C[P], O = R[P]);
                        }
                    }
                });
            }), {
                root: C,
                align: A
            };
        }
        function u(S, N, _, I, C) {
            let A = {}, R = f(S, N, _, C), D = C ? "borderLeft" : "borderRight";
            function O(j, M) {
                let L = R.nodes(), P = L.pop(), V = {};
                for(; P;)V[P] ? j(P) : (V[P] = !0, L.push(P), L = L.concat(M(P))), P = L.pop();
            }
            function E(j) {
                A[j] = R.inEdges(j).reduce((M, L)=>Math.max(M, A[L.v] + R.edge(L)), 0);
            }
            function F(j) {
                let M = R.outEdges(j).reduce((P, V)=>Math.min(P, A[V.w] - R.edge(V)), Number.POSITIVE_INFINITY), L = S.node(j);
                M !== Number.POSITIVE_INFINITY && L.borderType !== D && (A[j] = Math.max(A[j], M));
            }
            return O(E, R.predecessors.bind(R)), O(F, R.successors.bind(R)), Object.keys(I).forEach((j)=>A[j] = A[_[j]]), A;
        }
        function f(S, N, _, I) {
            let C = new e, A = S.graph(), R = x(A.nodesep, A.edgesep, I);
            return N.forEach((D)=>{
                let O;
                D.forEach((E)=>{
                    let F = _[E];
                    if (C.setNode(F), O) {
                        var j = _[O], M = C.edge(j, F);
                        C.setEdge(j, F, Math.max(R(S, E, O), M || 0));
                    }
                    O = E;
                });
            }), C;
        }
        function p(S, N) {
            return Object.values(N).reduce((_, I)=>{
                let C = Number.NEGATIVE_INFINITY, A = Number.POSITIVE_INFINITY;
                Object.entries(I).forEach(([D, O])=>{
                    let E = b(S, D) / 2;
                    C = Math.max(O + E, C), A = Math.min(O - E, A);
                });
                const R = C - A;
                return R < _[0] && (_ = [
                    R,
                    I
                ]), _;
            }, [
                Number.POSITIVE_INFINITY,
                null
            ])[1];
        }
        function m(S, N) {
            let _ = Object.values(N), I = t.applyWithChunking(Math.min, _), C = t.applyWithChunking(Math.max, _);
            [
                "u",
                "d"
            ].forEach((A)=>{
                [
                    "l",
                    "r"
                ].forEach((R)=>{
                    let D = A + R, O = S[D];
                    if (O === N) return;
                    let E = Object.values(O), F = I - t.applyWithChunking(Math.min, E);
                    R !== "l" && (F = C - t.applyWithChunking(Math.max, E)), F && (S[D] = t.mapValues(O, (j)=>j + F));
                });
            });
        }
        function g(S, N) {
            return t.mapValues(S.ul, (_, I)=>{
                if (N) return S[N.toLowerCase()][I];
                {
                    let C = Object.values(S).map((A)=>A[I]).sort((A, R)=>A - R);
                    return (C[1] + C[2]) / 2;
                }
            });
        }
        function v(S) {
            let N = t.buildLayerMatrix(S), _ = Object.assign(n(S, N), r(S, N)), I = {}, C;
            [
                "u",
                "d"
            ].forEach((R)=>{
                C = R === "u" ? N : Object.values(N).reverse(), [
                    "l",
                    "r"
                ].forEach((D)=>{
                    D === "r" && (C = C.map((j)=>Object.values(j).reverse()));
                    let O = (R === "u" ? S.predecessors : S.successors).bind(S), E = l(S, C, _, O), F = u(S, C, E.root, E.align, D === "r");
                    D === "r" && (F = t.mapValues(F, (j)=>-j)), I[R + D] = F;
                });
            });
            let A = p(S, I);
            return m(I, A), g(I, S.graph().align);
        }
        function x(S, N, _) {
            return (I, C, A)=>{
                let R = I.node(C), D = I.node(A), O = 0, E;
                if (O += R.width / 2, Object.hasOwn(R, "labelpos")) switch(R.labelpos.toLowerCase()){
                    case "l":
                        E = -R.width / 2;
                        break;
                    case "r":
                        E = R.width / 2;
                        break;
                }
                if (E && (O += _ ? E : -E), E = 0, O += (R.dummy ? N : S) / 2, O += (D.dummy ? N : S) / 2, O += D.width / 2, Object.hasOwn(D, "labelpos")) switch(D.labelpos.toLowerCase()){
                    case "l":
                        E = D.width / 2;
                        break;
                    case "r":
                        E = -D.width / 2;
                        break;
                }
                return E && (O += _ ? E : -E), E = 0, O;
            };
        }
        function b(S, N) {
            return S.node(N).width;
        }
        return o0;
    }
    var s0, gR;
    function y7() {
        if (gR) return s0;
        gR = 1;
        let e = Rn(), t = g7().positionX;
        s0 = n;
        function n(i) {
            i = e.asNonCompoundGraph(i), r(i), Object.entries(t(i)).forEach(([o, s])=>i.node(o).x = s);
        }
        function r(i) {
            let o = e.buildLayerMatrix(i), s = i.graph().ranksep, l = 0;
            o.forEach((u)=>{
                const f = u.reduce((p, m)=>{
                    const g = i.node(m).height;
                    return p > g ? p : g;
                }, 0);
                u.forEach((p)=>i.node(p).y = l + f / 2), l += f + s;
            });
        }
        return s0;
    }
    var a0, yR;
    function v7() {
        if (yR) return a0;
        yR = 1;
        let e = X9(), t = e7(), n = n7(), r = Rn().normalizeRanks, i = r7(), o = Rn().removeEmptyRanks, s = i7(), l = o7(), u = s7(), f = m7(), p = y7(), m = Rn(), g = Xi().Graph;
        a0 = v;
        function v(J, X) {
            let te = X && X.debugTiming ? m.time : m.notime;
            te("layout", ()=>{
                let ie = te("  buildLayoutGraph", ()=>O(J));
                te("  runLayout", ()=>x(ie, te, X)), te("  updateInputGraph", ()=>b(J, ie));
            });
        }
        function x(J, X, te) {
            X("    makeSpaceForEdgeLabels", ()=>E(J)), X("    removeSelfEdges", ()=>K(J)), X("    acyclic", ()=>e.run(J)), X("    nestingGraph.run", ()=>s.run(J)), X("    rank", ()=>n(m.asNonCompoundGraph(J))), X("    injectEdgeLabelProxies", ()=>F(J)), X("    removeEmptyRanks", ()=>o(J)), X("    nestingGraph.cleanup", ()=>s.cleanup(J)), X("    normalizeRanks", ()=>r(J)), X("    assignRankMinMax", ()=>j(J)), X("    removeEdgeLabelProxies", ()=>M(J)), X("    normalize.run", ()=>t.run(J)), X("    parentDummyChains", ()=>i(J)), X("    addBorderSegments", ()=>l(J)), X("    order", ()=>f(J, te)), X("    insertSelfEdges", ()=>H(J)), X("    adjustCoordinateSystem", ()=>u.adjust(J)), X("    position", ()=>p(J)), X("    positionSelfEdges", ()=>G(J)), X("    removeBorderNodes", ()=>Q(J)), X("    normalize.undo", ()=>t.undo(J)), X("    fixupEdgeLabelCoords", ()=>V(J)), X("    undoCoordinateSystem", ()=>u.undo(J)), X("    translateGraph", ()=>L(J)), X("    assignNodeIntersects", ()=>P(J)), X("    reversePoints", ()=>z(J)), X("    acyclic.undo", ()=>e.undo(J));
        }
        function b(J, X) {
            J.nodes().forEach((te)=>{
                let ie = J.node(te), ae = X.node(te);
                ie && (ie.x = ae.x, ie.y = ae.y, ie.rank = ae.rank, X.children(te).length && (ie.width = ae.width, ie.height = ae.height));
            }), J.edges().forEach((te)=>{
                let ie = J.edge(te), ae = X.edge(te);
                ie.points = ae.points, Object.hasOwn(ae, "x") && (ie.x = ae.x, ie.y = ae.y);
            }), J.graph().width = X.graph().width, J.graph().height = X.graph().height;
        }
        let S = [
            "nodesep",
            "edgesep",
            "ranksep",
            "marginx",
            "marginy"
        ], N = {
            ranksep: 50,
            edgesep: 20,
            nodesep: 50,
            rankdir: "tb"
        }, _ = [
            "acyclicer",
            "ranker",
            "rankdir",
            "align"
        ], I = [
            "width",
            "height"
        ], C = {
            width: 0,
            height: 0
        }, A = [
            "minlen",
            "weight",
            "width",
            "height",
            "labeloffset"
        ], R = {
            minlen: 1,
            weight: 1,
            width: 0,
            height: 0,
            labeloffset: 10,
            labelpos: "r"
        }, D = [
            "labelpos"
        ];
        function O(J) {
            let X = new g({
                multigraph: !0,
                compound: !0
            }), te = Z(J.graph());
            return X.setGraph(Object.assign({}, N, U(te, S), m.pick(te, _))), J.nodes().forEach((ie)=>{
                let ae = Z(J.node(ie));
                const ce = U(ae, I);
                Object.keys(C).forEach((de)=>{
                    ce[de] === void 0 && (ce[de] = C[de]);
                }), X.setNode(ie, ce), X.setParent(ie, J.parent(ie));
            }), J.edges().forEach((ie)=>{
                let ae = Z(J.edge(ie));
                X.setEdge(ie, Object.assign({}, R, U(ae, A), m.pick(ae, D)));
            }), X;
        }
        function E(J) {
            let X = J.graph();
            X.ranksep /= 2, J.edges().forEach((te)=>{
                let ie = J.edge(te);
                ie.minlen *= 2, ie.labelpos.toLowerCase() !== "c" && (X.rankdir === "TB" || X.rankdir === "BT" ? ie.width += ie.labeloffset : ie.height += ie.labeloffset);
            });
        }
        function F(J) {
            J.edges().forEach((X)=>{
                let te = J.edge(X);
                if (te.width && te.height) {
                    let ie = J.node(X.v), ce = {
                        rank: (J.node(X.w).rank - ie.rank) / 2 + ie.rank,
                        e: X
                    };
                    m.addDummyNode(J, "edge-proxy", ce, "_ep");
                }
            });
        }
        function j(J) {
            let X = 0;
            J.nodes().forEach((te)=>{
                let ie = J.node(te);
                ie.borderTop && (ie.minRank = J.node(ie.borderTop).rank, ie.maxRank = J.node(ie.borderBottom).rank, X = Math.max(X, ie.maxRank));
            }), J.graph().maxRank = X;
        }
        function M(J) {
            J.nodes().forEach((X)=>{
                let te = J.node(X);
                te.dummy === "edge-proxy" && (J.edge(te.e).labelRank = te.rank, J.removeNode(X));
            });
        }
        function L(J) {
            let X = Number.POSITIVE_INFINITY, te = 0, ie = Number.POSITIVE_INFINITY, ae = 0, ce = J.graph(), de = ce.marginx || 0, ve = ce.marginy || 0;
            function be(ge) {
                let we = ge.x, ke = ge.y, Re = ge.width, $e = ge.height;
                X = Math.min(X, we - Re / 2), te = Math.max(te, we + Re / 2), ie = Math.min(ie, ke - $e / 2), ae = Math.max(ae, ke + $e / 2);
            }
            J.nodes().forEach((ge)=>be(J.node(ge))), J.edges().forEach((ge)=>{
                let we = J.edge(ge);
                Object.hasOwn(we, "x") && be(we);
            }), X -= de, ie -= ve, J.nodes().forEach((ge)=>{
                let we = J.node(ge);
                we.x -= X, we.y -= ie;
            }), J.edges().forEach((ge)=>{
                let we = J.edge(ge);
                we.points.forEach((ke)=>{
                    ke.x -= X, ke.y -= ie;
                }), Object.hasOwn(we, "x") && (we.x -= X), Object.hasOwn(we, "y") && (we.y -= ie);
            }), ce.width = te - X + de, ce.height = ae - ie + ve;
        }
        function P(J) {
            J.edges().forEach((X)=>{
                let te = J.edge(X), ie = J.node(X.v), ae = J.node(X.w), ce, de;
                te.points ? (ce = te.points[0], de = te.points[te.points.length - 1]) : (te.points = [], ce = ae, de = ie), te.points.unshift(m.intersectRect(ie, ce)), te.points.push(m.intersectRect(ae, de));
            });
        }
        function V(J) {
            J.edges().forEach((X)=>{
                let te = J.edge(X);
                if (Object.hasOwn(te, "x")) switch((te.labelpos === "l" || te.labelpos === "r") && (te.width -= te.labeloffset), te.labelpos){
                    case "l":
                        te.x -= te.width / 2 + te.labeloffset;
                        break;
                    case "r":
                        te.x += te.width / 2 + te.labeloffset;
                        break;
                }
            });
        }
        function z(J) {
            J.edges().forEach((X)=>{
                let te = J.edge(X);
                te.reversed && te.points.reverse();
            });
        }
        function Q(J) {
            J.nodes().forEach((X)=>{
                if (J.children(X).length) {
                    let te = J.node(X), ie = J.node(te.borderTop), ae = J.node(te.borderBottom), ce = J.node(te.borderLeft[te.borderLeft.length - 1]), de = J.node(te.borderRight[te.borderRight.length - 1]);
                    te.width = Math.abs(de.x - ce.x), te.height = Math.abs(ae.y - ie.y), te.x = ce.x + te.width / 2, te.y = ie.y + te.height / 2;
                }
            }), J.nodes().forEach((X)=>{
                J.node(X).dummy === "border" && J.removeNode(X);
            });
        }
        function K(J) {
            J.edges().forEach((X)=>{
                if (X.v === X.w) {
                    var te = J.node(X.v);
                    te.selfEdges || (te.selfEdges = []), te.selfEdges.push({
                        e: X,
                        label: J.edge(X)
                    }), J.removeEdge(X);
                }
            });
        }
        function H(J) {
            var X = m.buildLayerMatrix(J);
            X.forEach((te)=>{
                var ie = 0;
                te.forEach((ae, ce)=>{
                    var de = J.node(ae);
                    de.order = ce + ie, (de.selfEdges || []).forEach((ve)=>{
                        m.addDummyNode(J, "selfedge", {
                            width: ve.label.width,
                            height: ve.label.height,
                            rank: de.rank,
                            order: ce + ++ie,
                            e: ve.e,
                            label: ve.label
                        }, "_se");
                    }), delete de.selfEdges;
                });
            });
        }
        function G(J) {
            J.nodes().forEach((X)=>{
                var te = J.node(X);
                if (te.dummy === "selfedge") {
                    var ie = J.node(te.e.v), ae = ie.x + ie.width / 2, ce = ie.y, de = te.x - ae, ve = ie.height / 2;
                    J.setEdge(te.e, te.label), J.removeNode(X), te.label.points = [
                        {
                            x: ae + 2 * de / 3,
                            y: ce - ve
                        },
                        {
                            x: ae + 5 * de / 6,
                            y: ce - ve
                        },
                        {
                            x: ae + de,
                            y: ce
                        },
                        {
                            x: ae + 5 * de / 6,
                            y: ce + ve
                        },
                        {
                            x: ae + 2 * de / 3,
                            y: ce + ve
                        }
                    ], te.label.x = te.x, te.label.y = te.y;
                }
            });
        }
        function U(J, X) {
            return m.mapValues(m.pick(J, X), Number);
        }
        function Z(J) {
            var X = {};
            return J && Object.entries(J).forEach(([te, ie])=>{
                typeof te == "string" && (te = te.toLowerCase()), X[te] = ie;
            }), X;
        }
        return a0;
    }
    var l0, vR;
    function x7() {
        if (vR) return l0;
        vR = 1;
        let e = Rn(), t = Xi().Graph;
        l0 = {
            debugOrdering: n
        };
        function n(r) {
            let i = e.buildLayerMatrix(r), o = new t({
                compound: !0,
                multigraph: !0
            }).setGraph({});
            return r.nodes().forEach((s)=>{
                o.setNode(s, {
                    label: s
                }), o.setParent(s, "layer" + r.node(s).rank);
            }), r.edges().forEach((s)=>o.setEdge(s.v, s.w, {}, s.name)), i.forEach((s, l)=>{
                let u = "layer" + l;
                o.setNode(u, {
                    rank: "same"
                }), s.reduce((f, p)=>(o.setEdge(f, p, {
                        style: "invis"
                    }), p));
            }), o;
        }
        return l0;
    }
    var c0, xR;
    function b7() {
        return xR || (xR = 1, c0 = "1.1.4"), c0;
    }
    var u0, bR;
    function w7() {
        return bR || (bR = 1, u0 = {
            graphlib: Xi(),
            layout: v7(),
            debug: x7(),
            util: {
                time: Rn().time,
                notime: Rn().notime
            },
            version: b7()
        }), u0;
    }
    var N7 = w7();
    const ZF = fi(N7);
    function Tn(e) {
        if (typeof e == "string" || typeof e == "number") return "" + e;
        let t = "";
        if (Array.isArray(e)) for(let n = 0, r; n < e.length; n++)(r = Tn(e[n])) !== "" && (t += (t && " ") + r);
        else for(let n in e)e[n] && (t += (t && " ") + n);
        return t;
    }
    var S7 = {
        value: ()=>{}
    };
    function ky() {
        for(var e = 0, t = arguments.length, n = {}, r; e < t; ++e){
            if (!(r = arguments[e] + "") || r in n || /[\s.]/.test(r)) throw new Error("illegal type: " + r);
            n[r] = [];
        }
        return new mm(n);
    }
    function mm(e) {
        this._ = e;
    }
    function I7(e, t) {
        return e.trim().split(/^|\s+/).map(function(n) {
            var r = "", i = n.indexOf(".");
            if (i >= 0 && (r = n.slice(i + 1), n = n.slice(0, i)), n && !t.hasOwnProperty(n)) throw new Error("unknown type: " + n);
            return {
                type: n,
                name: r
            };
        });
    }
    mm.prototype = ky.prototype = {
        constructor: mm,
        on: function(e, t) {
            var n = this._, r = I7(e + "", n), i, o = -1, s = r.length;
            if (arguments.length < 2) {
                for(; ++o < s;)if ((i = (e = r[o]).type) && (i = _7(n[i], e.name))) return i;
                return;
            }
            if (t != null && typeof t != "function") throw new Error("invalid callback: " + t);
            for(; ++o < s;)if (i = (e = r[o]).type) n[i] = wR(n[i], e.name, t);
            else if (t == null) for(i in n)n[i] = wR(n[i], e.name, null);
            return this;
        },
        copy: function() {
            var e = {}, t = this._;
            for(var n in t)e[n] = t[n].slice();
            return new mm(e);
        },
        call: function(e, t) {
            if ((i = arguments.length - 2) > 0) for(var n = new Array(i), r = 0, i, o; r < i; ++r)n[r] = arguments[r + 2];
            if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
            for(o = this._[e], r = 0, i = o.length; r < i; ++r)o[r].value.apply(t, n);
        },
        apply: function(e, t, n) {
            if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
            for(var r = this._[e], i = 0, o = r.length; i < o; ++i)r[i].value.apply(t, n);
        }
    };
    function _7(e, t) {
        for(var n = 0, r = e.length, i; n < r; ++n)if ((i = e[n]).name === t) return i.value;
    }
    function wR(e, t, n) {
        for(var r = 0, i = e.length; r < i; ++r)if (e[r].name === t) {
            e[r] = S7, e = e.slice(0, r).concat(e.slice(r + 1));
            break;
        }
        return n != null && e.push({
            name: t,
            value: n
        }), e;
    }
    var IN = "http://www.w3.org/1999/xhtml";
    const NR = {
        svg: "http://www.w3.org/2000/svg",
        xhtml: IN,
        xlink: "http://www.w3.org/1999/xlink",
        xml: "http://www.w3.org/XML/1998/namespace",
        xmlns: "http://www.w3.org/2000/xmlns/"
    };
    function Cy(e) {
        var t = e += "", n = t.indexOf(":");
        return n >= 0 && (t = e.slice(0, n)) !== "xmlns" && (e = e.slice(n + 1)), NR.hasOwnProperty(t) ? {
            space: NR[t],
            local: e
        } : e;
    }
    function E7(e) {
        return function() {
            var t = this.ownerDocument, n = this.namespaceURI;
            return n === IN && t.documentElement.namespaceURI === IN ? t.createElement(e) : t.createElementNS(n, e);
        };
    }
    function k7(e) {
        return function() {
            return this.ownerDocument.createElementNS(e.space, e.local);
        };
    }
    function YF(e) {
        var t = Cy(e);
        return (t.local ? k7 : E7)(t);
    }
    function C7() {}
    function tI(e) {
        return e == null ? C7 : function() {
            return this.querySelector(e);
        };
    }
    function j7(e) {
        typeof e != "function" && (e = tI(e));
        for(var t = this._groups, n = t.length, r = new Array(n), i = 0; i < n; ++i)for(var o = t[i], s = o.length, l = r[i] = new Array(s), u, f, p = 0; p < s; ++p)(u = o[p]) && (f = e.call(u, u.__data__, p, o)) && ("__data__" in u && (f.__data__ = u.__data__), l[p] = f);
        return new di(r, this._parents);
    }
    function R7(e) {
        return e == null ? [] : Array.isArray(e) ? e : Array.from(e);
    }
    function O7() {
        return [];
    }
    function XF(e) {
        return e == null ? O7 : function() {
            return this.querySelectorAll(e);
        };
    }
    function T7(e) {
        return function() {
            return R7(e.apply(this, arguments));
        };
    }
    function P7(e) {
        typeof e == "function" ? e = T7(e) : e = XF(e);
        for(var t = this._groups, n = t.length, r = [], i = [], o = 0; o < n; ++o)for(var s = t[o], l = s.length, u, f = 0; f < l; ++f)(u = s[f]) && (r.push(e.call(u, u.__data__, f, s)), i.push(u));
        return new di(r, i);
    }
    function eD(e) {
        return function() {
            return this.matches(e);
        };
    }
    function tD(e) {
        return function(t) {
            return t.matches(e);
        };
    }
    var A7 = Array.prototype.find;
    function F7(e) {
        return function() {
            return A7.call(this.children, e);
        };
    }
    function D7() {
        return this.firstElementChild;
    }
    function M7(e) {
        return this.select(e == null ? D7 : F7(typeof e == "function" ? e : tD(e)));
    }
    var L7 = Array.prototype.filter;
    function $7() {
        return Array.from(this.children);
    }
    function q7(e) {
        return function() {
            return L7.call(this.children, e);
        };
    }
    function B7(e) {
        return this.selectAll(e == null ? $7 : q7(typeof e == "function" ? e : tD(e)));
    }
    function z7(e) {
        typeof e != "function" && (e = eD(e));
        for(var t = this._groups, n = t.length, r = new Array(n), i = 0; i < n; ++i)for(var o = t[i], s = o.length, l = r[i] = [], u, f = 0; f < s; ++f)(u = o[f]) && e.call(u, u.__data__, f, o) && l.push(u);
        return new di(r, this._parents);
    }
    function nD(e) {
        return new Array(e.length);
    }
    function W7() {
        return new di(this._enter || this._groups.map(nD), this._parents);
    }
    function Pg(e, t) {
        this.ownerDocument = e.ownerDocument, this.namespaceURI = e.namespaceURI, this._next = null, this._parent = e, this.__data__ = t;
    }
    Pg.prototype = {
        constructor: Pg,
        appendChild: function(e) {
            return this._parent.insertBefore(e, this._next);
        },
        insertBefore: function(e, t) {
            return this._parent.insertBefore(e, t);
        },
        querySelector: function(e) {
            return this._parent.querySelector(e);
        },
        querySelectorAll: function(e) {
            return this._parent.querySelectorAll(e);
        }
    };
    function V7(e) {
        return function() {
            return e;
        };
    }
    function U7(e, t, n, r, i, o) {
        for(var s = 0, l, u = t.length, f = o.length; s < f; ++s)(l = t[s]) ? (l.__data__ = o[s], r[s] = l) : n[s] = new Pg(e, o[s]);
        for(; s < u; ++s)(l = t[s]) && (i[s] = l);
    }
    function H7(e, t, n, r, i, o, s) {
        var l, u, f = new Map, p = t.length, m = o.length, g = new Array(p), v;
        for(l = 0; l < p; ++l)(u = t[l]) && (g[l] = v = s.call(u, u.__data__, l, t) + "", f.has(v) ? i[l] = u : f.set(v, u));
        for(l = 0; l < m; ++l)v = s.call(e, o[l], l, o) + "", (u = f.get(v)) ? (r[l] = u, u.__data__ = o[l], f.delete(v)) : n[l] = new Pg(e, o[l]);
        for(l = 0; l < p; ++l)(u = t[l]) && f.get(g[l]) === u && (i[l] = u);
    }
    function K7(e) {
        return e.__data__;
    }
    function G7(e, t) {
        if (!arguments.length) return Array.from(this, K7);
        var n = t ? H7 : U7, r = this._parents, i = this._groups;
        typeof e != "function" && (e = V7(e));
        for(var o = i.length, s = new Array(o), l = new Array(o), u = new Array(o), f = 0; f < o; ++f){
            var p = r[f], m = i[f], g = m.length, v = Q7(e.call(p, p && p.__data__, f, r)), x = v.length, b = l[f] = new Array(x), S = s[f] = new Array(x), N = u[f] = new Array(g);
            n(p, m, b, S, N, v, t);
            for(var _ = 0, I = 0, C, A; _ < x; ++_)if (C = b[_]) {
                for(_ >= I && (I = _ + 1); !(A = S[I]) && ++I < x;);
                C._next = A || null;
            }
        }
        return s = new di(s, r), s._enter = l, s._exit = u, s;
    }
    function Q7(e) {
        return typeof e == "object" && "length" in e ? e : Array.from(e);
    }
    function J7() {
        return new di(this._exit || this._groups.map(nD), this._parents);
    }
    function Z7(e, t, n) {
        var r = this.enter(), i = this, o = this.exit();
        return typeof e == "function" ? (r = e(r), r && (r = r.selection())) : r = r.append(e + ""), t != null && (i = t(i), i && (i = i.selection())), n == null ? o.remove() : n(o), r && i ? r.merge(i).order() : i;
    }
    function Y7(e) {
        for(var t = e.selection ? e.selection() : e, n = this._groups, r = t._groups, i = n.length, o = r.length, s = Math.min(i, o), l = new Array(i), u = 0; u < s; ++u)for(var f = n[u], p = r[u], m = f.length, g = l[u] = new Array(m), v, x = 0; x < m; ++x)(v = f[x] || p[x]) && (g[x] = v);
        for(; u < i; ++u)l[u] = n[u];
        return new di(l, this._parents);
    }
    function X7() {
        for(var e = this._groups, t = -1, n = e.length; ++t < n;)for(var r = e[t], i = r.length - 1, o = r[i], s; --i >= 0;)(s = r[i]) && (o && s.compareDocumentPosition(o) ^ 4 && o.parentNode.insertBefore(s, o), o = s);
        return this;
    }
    function eG(e) {
        e || (e = tG);
        function t(m, g) {
            return m && g ? e(m.__data__, g.__data__) : !m - !g;
        }
        for(var n = this._groups, r = n.length, i = new Array(r), o = 0; o < r; ++o){
            for(var s = n[o], l = s.length, u = i[o] = new Array(l), f, p = 0; p < l; ++p)(f = s[p]) && (u[p] = f);
            u.sort(t);
        }
        return new di(i, this._parents).order();
    }
    function tG(e, t) {
        return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN;
    }
    function nG() {
        var e = arguments[0];
        return arguments[0] = this, e.apply(null, arguments), this;
    }
    function rG() {
        return Array.from(this);
    }
    function iG() {
        for(var e = this._groups, t = 0, n = e.length; t < n; ++t)for(var r = e[t], i = 0, o = r.length; i < o; ++i){
            var s = r[i];
            if (s) return s;
        }
        return null;
    }
    function oG() {
        let e = 0;
        for (const t of this)++e;
        return e;
    }
    function sG() {
        return !this.node();
    }
    function aG(e) {
        for(var t = this._groups, n = 0, r = t.length; n < r; ++n)for(var i = t[n], o = 0, s = i.length, l; o < s; ++o)(l = i[o]) && e.call(l, l.__data__, o, i);
        return this;
    }
    function lG(e) {
        return function() {
            this.removeAttribute(e);
        };
    }
    function cG(e) {
        return function() {
            this.removeAttributeNS(e.space, e.local);
        };
    }
    function uG(e, t) {
        return function() {
            this.setAttribute(e, t);
        };
    }
    function dG(e, t) {
        return function() {
            this.setAttributeNS(e.space, e.local, t);
        };
    }
    function fG(e, t) {
        return function() {
            var n = t.apply(this, arguments);
            n == null ? this.removeAttribute(e) : this.setAttribute(e, n);
        };
    }
    function pG(e, t) {
        return function() {
            var n = t.apply(this, arguments);
            n == null ? this.removeAttributeNS(e.space, e.local) : this.setAttributeNS(e.space, e.local, n);
        };
    }
    function hG(e, t) {
        var n = Cy(e);
        if (arguments.length < 2) {
            var r = this.node();
            return n.local ? r.getAttributeNS(n.space, n.local) : r.getAttribute(n);
        }
        return this.each((t == null ? n.local ? cG : lG : typeof t == "function" ? n.local ? pG : fG : n.local ? dG : uG)(n, t));
    }
    function rD(e) {
        return e.ownerDocument && e.ownerDocument.defaultView || e.document && e || e.defaultView;
    }
    function mG(e) {
        return function() {
            this.style.removeProperty(e);
        };
    }
    function gG(e, t, n) {
        return function() {
            this.style.setProperty(e, t, n);
        };
    }
    function yG(e, t, n) {
        return function() {
            var r = t.apply(this, arguments);
            r == null ? this.style.removeProperty(e) : this.style.setProperty(e, r, n);
        };
    }
    function vG(e, t, n) {
        return arguments.length > 1 ? this.each((t == null ? mG : typeof t == "function" ? yG : gG)(e, t, n ?? "")) : Uc(this.node(), e);
    }
    function Uc(e, t) {
        return e.style.getPropertyValue(t) || rD(e).getComputedStyle(e, null).getPropertyValue(t);
    }
    function xG(e) {
        return function() {
            delete this[e];
        };
    }
    function bG(e, t) {
        return function() {
            this[e] = t;
        };
    }
    function wG(e, t) {
        return function() {
            var n = t.apply(this, arguments);
            n == null ? delete this[e] : this[e] = n;
        };
    }
    function NG(e, t) {
        return arguments.length > 1 ? this.each((t == null ? xG : typeof t == "function" ? wG : bG)(e, t)) : this.node()[e];
    }
    function iD(e) {
        return e.trim().split(/^|\s+/);
    }
    function nI(e) {
        return e.classList || new oD(e);
    }
    function oD(e) {
        this._node = e, this._names = iD(e.getAttribute("class") || "");
    }
    oD.prototype = {
        add: function(e) {
            var t = this._names.indexOf(e);
            t < 0 && (this._names.push(e), this._node.setAttribute("class", this._names.join(" ")));
        },
        remove: function(e) {
            var t = this._names.indexOf(e);
            t >= 0 && (this._names.splice(t, 1), this._node.setAttribute("class", this._names.join(" ")));
        },
        contains: function(e) {
            return this._names.indexOf(e) >= 0;
        }
    };
    function sD(e, t) {
        for(var n = nI(e), r = -1, i = t.length; ++r < i;)n.add(t[r]);
    }
    function aD(e, t) {
        for(var n = nI(e), r = -1, i = t.length; ++r < i;)n.remove(t[r]);
    }
    function SG(e) {
        return function() {
            sD(this, e);
        };
    }
    function IG(e) {
        return function() {
            aD(this, e);
        };
    }
    function _G(e, t) {
        return function() {
            (t.apply(this, arguments) ? sD : aD)(this, e);
        };
    }
    function EG(e, t) {
        var n = iD(e + "");
        if (arguments.length < 2) {
            for(var r = nI(this.node()), i = -1, o = n.length; ++i < o;)if (!r.contains(n[i])) return !1;
            return !0;
        }
        return this.each((typeof t == "function" ? _G : t ? SG : IG)(n, t));
    }
    function kG() {
        this.textContent = "";
    }
    function CG(e) {
        return function() {
            this.textContent = e;
        };
    }
    function jG(e) {
        return function() {
            var t = e.apply(this, arguments);
            this.textContent = t ?? "";
        };
    }
    function RG(e) {
        return arguments.length ? this.each(e == null ? kG : (typeof e == "function" ? jG : CG)(e)) : this.node().textContent;
    }
    function OG() {
        this.innerHTML = "";
    }
    function TG(e) {
        return function() {
            this.innerHTML = e;
        };
    }
    function PG(e) {
        return function() {
            var t = e.apply(this, arguments);
            this.innerHTML = t ?? "";
        };
    }
    function AG(e) {
        return arguments.length ? this.each(e == null ? OG : (typeof e == "function" ? PG : TG)(e)) : this.node().innerHTML;
    }
    function FG() {
        this.nextSibling && this.parentNode.appendChild(this);
    }
    function DG() {
        return this.each(FG);
    }
    function MG() {
        this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
    }
    function LG() {
        return this.each(MG);
    }
    function $G(e) {
        var t = typeof e == "function" ? e : YF(e);
        return this.select(function() {
            return this.appendChild(t.apply(this, arguments));
        });
    }
    function qG() {
        return null;
    }
    function BG(e, t) {
        var n = typeof e == "function" ? e : YF(e), r = t == null ? qG : typeof t == "function" ? t : tI(t);
        return this.select(function() {
            return this.insertBefore(n.apply(this, arguments), r.apply(this, arguments) || null);
        });
    }
    function zG() {
        var e = this.parentNode;
        e && e.removeChild(this);
    }
    function WG() {
        return this.each(zG);
    }
    function VG() {
        var e = this.cloneNode(!1), t = this.parentNode;
        return t ? t.insertBefore(e, this.nextSibling) : e;
    }
    function UG() {
        var e = this.cloneNode(!0), t = this.parentNode;
        return t ? t.insertBefore(e, this.nextSibling) : e;
    }
    function HG(e) {
        return this.select(e ? UG : VG);
    }
    function KG(e) {
        return arguments.length ? this.property("__data__", e) : this.node().__data__;
    }
    function GG(e) {
        return function(t) {
            e.call(this, t, this.__data__);
        };
    }
    function QG(e) {
        return e.trim().split(/^|\s+/).map(function(t) {
            var n = "", r = t.indexOf(".");
            return r >= 0 && (n = t.slice(r + 1), t = t.slice(0, r)), {
                type: t,
                name: n
            };
        });
    }
    function JG(e) {
        return function() {
            var t = this.__on;
            if (t) {
                for(var n = 0, r = -1, i = t.length, o; n < i; ++n)o = t[n], (!e.type || o.type === e.type) && o.name === e.name ? this.removeEventListener(o.type, o.listener, o.options) : t[++r] = o;
                ++r ? t.length = r : delete this.__on;
            }
        };
    }
    function ZG(e, t, n) {
        return function() {
            var r = this.__on, i, o = GG(t);
            if (r) {
                for(var s = 0, l = r.length; s < l; ++s)if ((i = r[s]).type === e.type && i.name === e.name) {
                    this.removeEventListener(i.type, i.listener, i.options), this.addEventListener(i.type, i.listener = o, i.options = n), i.value = t;
                    return;
                }
            }
            this.addEventListener(e.type, o, n), i = {
                type: e.type,
                name: e.name,
                value: t,
                listener: o,
                options: n
            }, r ? r.push(i) : this.__on = [
                i
            ];
        };
    }
    function YG(e, t, n) {
        var r = QG(e + ""), i, o = r.length, s;
        if (arguments.length < 2) {
            var l = this.node().__on;
            if (l) {
                for(var u = 0, f = l.length, p; u < f; ++u)for(i = 0, p = l[u]; i < o; ++i)if ((s = r[i]).type === p.type && s.name === p.name) return p.value;
            }
            return;
        }
        for(l = t ? ZG : JG, i = 0; i < o; ++i)this.each(l(r[i], t, n));
        return this;
    }
    function lD(e, t, n) {
        var r = rD(e), i = r.CustomEvent;
        typeof i == "function" ? i = new i(t, n) : (i = r.document.createEvent("Event"), n ? (i.initEvent(t, n.bubbles, n.cancelable), i.detail = n.detail) : i.initEvent(t, !1, !1)), e.dispatchEvent(i);
    }
    function XG(e, t) {
        return function() {
            return lD(this, e, t);
        };
    }
    function eQ(e, t) {
        return function() {
            return lD(this, e, t.apply(this, arguments));
        };
    }
    function tQ(e, t) {
        return this.each((typeof t == "function" ? eQ : XG)(e, t));
    }
    function* nQ() {
        for(var e = this._groups, t = 0, n = e.length; t < n; ++t)for(var r = e[t], i = 0, o = r.length, s; i < o; ++i)(s = r[i]) && (yield s);
    }
    var cD = [
        null
    ];
    function di(e, t) {
        this._groups = e, this._parents = t;
    }
    function Hf() {
        return new di([
            [
                document.documentElement
            ]
        ], cD);
    }
    function rQ() {
        return this;
    }
    di.prototype = Hf.prototype = {
        constructor: di,
        select: j7,
        selectAll: P7,
        selectChild: M7,
        selectChildren: B7,
        filter: z7,
        data: G7,
        enter: W7,
        exit: J7,
        join: Z7,
        merge: Y7,
        selection: rQ,
        order: X7,
        sort: eG,
        call: nG,
        nodes: rG,
        node: iG,
        size: oG,
        empty: sG,
        each: aG,
        attr: hG,
        style: vG,
        property: NG,
        classed: EG,
        text: RG,
        html: AG,
        raise: DG,
        lower: LG,
        append: $G,
        insert: BG,
        remove: WG,
        clone: HG,
        datum: KG,
        on: YG,
        dispatch: tQ,
        [Symbol.iterator]: nQ
    };
    function oi(e) {
        return typeof e == "string" ? new di([
            [
                document.querySelector(e)
            ]
        ], [
            document.documentElement
        ]) : new di([
            [
                e
            ]
        ], cD);
    }
    function iQ(e) {
        let t;
        for(; t = e.sourceEvent;)e = t;
        return e;
    }
    function zi(e, t) {
        if (e = iQ(e), t === void 0 && (t = e.currentTarget), t) {
            var n = t.ownerSVGElement || t;
            if (n.createSVGPoint) {
                var r = n.createSVGPoint();
                return r.x = e.clientX, r.y = e.clientY, r = r.matrixTransform(t.getScreenCTM().inverse()), [
                    r.x,
                    r.y
                ];
            }
            if (t.getBoundingClientRect) {
                var i = t.getBoundingClientRect();
                return [
                    e.clientX - i.left - t.clientLeft,
                    e.clientY - i.top - t.clientTop
                ];
            }
        }
        return [
            e.pageX,
            e.pageY
        ];
    }
    const oQ = {
        passive: !1
    }, ff = {
        capture: !0,
        passive: !1
    };
    function d0(e) {
        e.stopImmediatePropagation();
    }
    function Pc(e) {
        e.preventDefault(), e.stopImmediatePropagation();
    }
    function uD(e) {
        var t = e.document.documentElement, n = oi(e).on("dragstart.drag", Pc, ff);
        "onselectstart" in t ? n.on("selectstart.drag", Pc, ff) : (t.__noselect = t.style.MozUserSelect, t.style.MozUserSelect = "none");
    }
    function dD(e, t) {
        var n = e.document.documentElement, r = oi(e).on("dragstart.drag", null);
        t && (r.on("click.drag", Pc, ff), setTimeout(function() {
            r.on("click.drag", null);
        }, 0)), "onselectstart" in n ? r.on("selectstart.drag", null) : (n.style.MozUserSelect = n.__noselect, delete n.__noselect);
    }
    const qh = (e)=>()=>e;
    function _N(e, { sourceEvent: t, subject: n, target: r, identifier: i, active: o, x: s, y: l, dx: u, dy: f, dispatch: p }) {
        Object.defineProperties(this, {
            type: {
                value: e,
                enumerable: !0,
                configurable: !0
            },
            sourceEvent: {
                value: t,
                enumerable: !0,
                configurable: !0
            },
            subject: {
                value: n,
                enumerable: !0,
                configurable: !0
            },
            target: {
                value: r,
                enumerable: !0,
                configurable: !0
            },
            identifier: {
                value: i,
                enumerable: !0,
                configurable: !0
            },
            active: {
                value: o,
                enumerable: !0,
                configurable: !0
            },
            x: {
                value: s,
                enumerable: !0,
                configurable: !0
            },
            y: {
                value: l,
                enumerable: !0,
                configurable: !0
            },
            dx: {
                value: u,
                enumerable: !0,
                configurable: !0
            },
            dy: {
                value: f,
                enumerable: !0,
                configurable: !0
            },
            _: {
                value: p
            }
        });
    }
    _N.prototype.on = function() {
        var e = this._.on.apply(this._, arguments);
        return e === this._ ? this : e;
    };
    function sQ(e) {
        return !e.ctrlKey && !e.button;
    }
    function aQ() {
        return this.parentNode;
    }
    function lQ(e, t) {
        return t ?? {
            x: e.x,
            y: e.y
        };
    }
    function cQ() {
        return navigator.maxTouchPoints || "ontouchstart" in this;
    }
    function fD() {
        var e = sQ, t = aQ, n = lQ, r = cQ, i = {}, o = ky("start", "drag", "end"), s = 0, l, u, f, p, m = 0;
        function g(C) {
            C.on("mousedown.drag", v).filter(r).on("touchstart.drag", S).on("touchmove.drag", N, oQ).on("touchend.drag touchcancel.drag", _).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
        }
        function v(C, A) {
            if (!(p || !e.call(this, C, A))) {
                var R = I(this, t.call(this, C, A), C, A, "mouse");
                R && (oi(C.view).on("mousemove.drag", x, ff).on("mouseup.drag", b, ff), uD(C.view), d0(C), f = !1, l = C.clientX, u = C.clientY, R("start", C));
            }
        }
        function x(C) {
            if (Pc(C), !f) {
                var A = C.clientX - l, R = C.clientY - u;
                f = A * A + R * R > m;
            }
            i.mouse("drag", C);
        }
        function b(C) {
            oi(C.view).on("mousemove.drag mouseup.drag", null), dD(C.view, f), Pc(C), i.mouse("end", C);
        }
        function S(C, A) {
            if (e.call(this, C, A)) {
                var R = C.changedTouches, D = t.call(this, C, A), O = R.length, E, F;
                for(E = 0; E < O; ++E)(F = I(this, D, C, A, R[E].identifier, R[E])) && (d0(C), F("start", C, R[E]));
            }
        }
        function N(C) {
            var A = C.changedTouches, R = A.length, D, O;
            for(D = 0; D < R; ++D)(O = i[A[D].identifier]) && (Pc(C), O("drag", C, A[D]));
        }
        function _(C) {
            var A = C.changedTouches, R = A.length, D, O;
            for(p && clearTimeout(p), p = setTimeout(function() {
                p = null;
            }, 500), D = 0; D < R; ++D)(O = i[A[D].identifier]) && (d0(C), O("end", C, A[D]));
        }
        function I(C, A, R, D, O, E) {
            var F = o.copy(), j = zi(E || R, A), M, L, P;
            if ((P = n.call(C, new _N("beforestart", {
                sourceEvent: R,
                target: g,
                identifier: O,
                active: s,
                x: j[0],
                y: j[1],
                dx: 0,
                dy: 0,
                dispatch: F
            }), D)) != null) return M = P.x - j[0] || 0, L = P.y - j[1] || 0, function V(z, Q, K) {
                var H = j, G;
                switch(z){
                    case "start":
                        i[O] = V, G = s++;
                        break;
                    case "end":
                        delete i[O], --s;
                    case "drag":
                        j = zi(K || Q, A), G = s;
                        break;
                }
                F.call(z, C, new _N(z, {
                    sourceEvent: Q,
                    subject: P,
                    target: g,
                    identifier: O,
                    active: G,
                    x: j[0] + M,
                    y: j[1] + L,
                    dx: j[0] - H[0],
                    dy: j[1] - H[1],
                    dispatch: F
                }), D);
            };
        }
        return g.filter = function(C) {
            return arguments.length ? (e = typeof C == "function" ? C : qh(!!C), g) : e;
        }, g.container = function(C) {
            return arguments.length ? (t = typeof C == "function" ? C : qh(C), g) : t;
        }, g.subject = function(C) {
            return arguments.length ? (n = typeof C == "function" ? C : qh(C), g) : n;
        }, g.touchable = function(C) {
            return arguments.length ? (r = typeof C == "function" ? C : qh(!!C), g) : r;
        }, g.on = function() {
            var C = o.on.apply(o, arguments);
            return C === o ? g : C;
        }, g.clickDistance = function(C) {
            return arguments.length ? (m = (C = +C) * C, g) : Math.sqrt(m);
        }, g;
    }
    function rI(e, t, n) {
        e.prototype = t.prototype = n, n.constructor = e;
    }
    function pD(e, t) {
        var n = Object.create(e.prototype);
        for(var r in t)n[r] = t[r];
        return n;
    }
    function Kf() {}
    var pf = .7, Ag = 1 / pf, Ac = "\\s*([+-]?\\d+)\\s*", hf = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", bo = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", uQ = /^#([0-9a-f]{3,8})$/, dQ = new RegExp(`^rgb\\(${Ac},${Ac},${Ac}\\)$`), fQ = new RegExp(`^rgb\\(${bo},${bo},${bo}\\)$`), pQ = new RegExp(`^rgba\\(${Ac},${Ac},${Ac},${hf}\\)$`), hQ = new RegExp(`^rgba\\(${bo},${bo},${bo},${hf}\\)$`), mQ = new RegExp(`^hsl\\(${hf},${bo},${bo}\\)$`), gQ = new RegExp(`^hsla\\(${hf},${bo},${bo},${hf}\\)$`), SR = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    };
    rI(Kf, mf, {
        copy (e) {
            return Object.assign(new this.constructor, this, e);
        },
        displayable () {
            return this.rgb().displayable();
        },
        hex: IR,
        formatHex: IR,
        formatHex8: yQ,
        formatHsl: vQ,
        formatRgb: _R,
        toString: _R
    });
    function IR() {
        return this.rgb().formatHex();
    }
    function yQ() {
        return this.rgb().formatHex8();
    }
    function vQ() {
        return hD(this).formatHsl();
    }
    function _R() {
        return this.rgb().formatRgb();
    }
    function mf(e) {
        var t, n;
        return e = (e + "").trim().toLowerCase(), (t = uQ.exec(e)) ? (n = t[1].length, t = parseInt(t[1], 16), n === 6 ? ER(t) : n === 3 ? new qr(t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | t & 240, (t & 15) << 4 | t & 15, 1) : n === 8 ? Bh(t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, (t & 255) / 255) : n === 4 ? Bh(t >> 12 & 15 | t >> 8 & 240, t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | t & 240, ((t & 15) << 4 | t & 15) / 255) : null) : (t = dQ.exec(e)) ? new qr(t[1], t[2], t[3], 1) : (t = fQ.exec(e)) ? new qr(t[1] * 255 / 100, t[2] * 255 / 100, t[3] * 255 / 100, 1) : (t = pQ.exec(e)) ? Bh(t[1], t[2], t[3], t[4]) : (t = hQ.exec(e)) ? Bh(t[1] * 255 / 100, t[2] * 255 / 100, t[3] * 255 / 100, t[4]) : (t = mQ.exec(e)) ? jR(t[1], t[2] / 100, t[3] / 100, 1) : (t = gQ.exec(e)) ? jR(t[1], t[2] / 100, t[3] / 100, t[4]) : SR.hasOwnProperty(e) ? ER(SR[e]) : e === "transparent" ? new qr(NaN, NaN, NaN, 0) : null;
    }
    function ER(e) {
        return new qr(e >> 16 & 255, e >> 8 & 255, e & 255, 1);
    }
    function Bh(e, t, n, r) {
        return r <= 0 && (e = t = n = NaN), new qr(e, t, n, r);
    }
    function xQ(e) {
        return e instanceof Kf || (e = mf(e)), e ? (e = e.rgb(), new qr(e.r, e.g, e.b, e.opacity)) : new qr;
    }
    function EN(e, t, n, r) {
        return arguments.length === 1 ? xQ(e) : new qr(e, t, n, r ?? 1);
    }
    function qr(e, t, n, r) {
        this.r = +e, this.g = +t, this.b = +n, this.opacity = +r;
    }
    rI(qr, EN, pD(Kf, {
        brighter (e) {
            return e = e == null ? Ag : Math.pow(Ag, e), new qr(this.r * e, this.g * e, this.b * e, this.opacity);
        },
        darker (e) {
            return e = e == null ? pf : Math.pow(pf, e), new qr(this.r * e, this.g * e, this.b * e, this.opacity);
        },
        rgb () {
            return this;
        },
        clamp () {
            return new qr(tl(this.r), tl(this.g), tl(this.b), Fg(this.opacity));
        },
        displayable () {
            return -.5 <= this.r && this.r < 255.5 && -.5 <= this.g && this.g < 255.5 && -.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
        },
        hex: kR,
        formatHex: kR,
        formatHex8: bQ,
        formatRgb: CR,
        toString: CR
    }));
    function kR() {
        return `#${Ya(this.r)}${Ya(this.g)}${Ya(this.b)}`;
    }
    function bQ() {
        return `#${Ya(this.r)}${Ya(this.g)}${Ya(this.b)}${Ya((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
    }
    function CR() {
        const e = Fg(this.opacity);
        return `${e === 1 ? "rgb(" : "rgba("}${tl(this.r)}, ${tl(this.g)}, ${tl(this.b)}${e === 1 ? ")" : `, ${e})`}`;
    }
    function Fg(e) {
        return isNaN(e) ? 1 : Math.max(0, Math.min(1, e));
    }
    function tl(e) {
        return Math.max(0, Math.min(255, Math.round(e) || 0));
    }
    function Ya(e) {
        return e = tl(e), (e < 16 ? "0" : "") + e.toString(16);
    }
    function jR(e, t, n, r) {
        return r <= 0 ? e = t = n = NaN : n <= 0 || n >= 1 ? e = t = NaN : t <= 0 && (e = NaN), new Hi(e, t, n, r);
    }
    function hD(e) {
        if (e instanceof Hi) return new Hi(e.h, e.s, e.l, e.opacity);
        if (e instanceof Kf || (e = mf(e)), !e) return new Hi;
        if (e instanceof Hi) return e;
        e = e.rgb();
        var t = e.r / 255, n = e.g / 255, r = e.b / 255, i = Math.min(t, n, r), o = Math.max(t, n, r), s = NaN, l = o - i, u = (o + i) / 2;
        return l ? (t === o ? s = (n - r) / l + (n < r) * 6 : n === o ? s = (r - t) / l + 2 : s = (t - n) / l + 4, l /= u < .5 ? o + i : 2 - o - i, s *= 60) : l = u > 0 && u < 1 ? 0 : s, new Hi(s, l, u, e.opacity);
    }
    function wQ(e, t, n, r) {
        return arguments.length === 1 ? hD(e) : new Hi(e, t, n, r ?? 1);
    }
    function Hi(e, t, n, r) {
        this.h = +e, this.s = +t, this.l = +n, this.opacity = +r;
    }
    rI(Hi, wQ, pD(Kf, {
        brighter (e) {
            return e = e == null ? Ag : Math.pow(Ag, e), new Hi(this.h, this.s, this.l * e, this.opacity);
        },
        darker (e) {
            return e = e == null ? pf : Math.pow(pf, e), new Hi(this.h, this.s, this.l * e, this.opacity);
        },
        rgb () {
            var e = this.h % 360 + (this.h < 0) * 360, t = isNaN(e) || isNaN(this.s) ? 0 : this.s, n = this.l, r = n + (n < .5 ? n : 1 - n) * t, i = 2 * n - r;
            return new qr(f0(e >= 240 ? e - 240 : e + 120, i, r), f0(e, i, r), f0(e < 120 ? e + 240 : e - 120, i, r), this.opacity);
        },
        clamp () {
            return new Hi(RR(this.h), zh(this.s), zh(this.l), Fg(this.opacity));
        },
        displayable () {
            return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
        },
        formatHsl () {
            const e = Fg(this.opacity);
            return `${e === 1 ? "hsl(" : "hsla("}${RR(this.h)}, ${zh(this.s) * 100}%, ${zh(this.l) * 100}%${e === 1 ? ")" : `, ${e})`}`;
        }
    }));
    function RR(e) {
        return e = (e || 0) % 360, e < 0 ? e + 360 : e;
    }
    function zh(e) {
        return Math.max(0, Math.min(1, e || 0));
    }
    function f0(e, t, n) {
        return (e < 60 ? t + (n - t) * e / 60 : e < 180 ? n : e < 240 ? t + (n - t) * (240 - e) / 60 : t) * 255;
    }
    const mD = (e)=>()=>e;
    function NQ(e, t) {
        return function(n) {
            return e + n * t;
        };
    }
    function SQ(e, t, n) {
        return e = Math.pow(e, n), t = Math.pow(t, n) - e, n = 1 / n, function(r) {
            return Math.pow(e + r * t, n);
        };
    }
    function IQ(e) {
        return (e = +e) == 1 ? gD : function(t, n) {
            return n - t ? SQ(t, n, e) : mD(isNaN(t) ? n : t);
        };
    }
    function gD(e, t) {
        var n = t - e;
        return n ? NQ(e, n) : mD(isNaN(e) ? t : e);
    }
    const OR = function e(t) {
        var n = IQ(t);
        function r(i, o) {
            var s = n((i = EN(i)).r, (o = EN(o)).r), l = n(i.g, o.g), u = n(i.b, o.b), f = gD(i.opacity, o.opacity);
            return function(p) {
                return i.r = s(p), i.g = l(p), i.b = u(p), i.opacity = f(p), i + "";
            };
        }
        return r.gamma = e, r;
    }(1);
    function Ds(e, t) {
        return e = +e, t = +t, function(n) {
            return e * (1 - n) + t * n;
        };
    }
    var kN = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, p0 = new RegExp(kN.source, "g");
    function _Q(e) {
        return function() {
            return e;
        };
    }
    function EQ(e) {
        return function(t) {
            return e(t) + "";
        };
    }
    function kQ(e, t) {
        var n = kN.lastIndex = p0.lastIndex = 0, r, i, o, s = -1, l = [], u = [];
        for(e = e + "", t = t + ""; (r = kN.exec(e)) && (i = p0.exec(t));)(o = i.index) > n && (o = t.slice(n, o), l[s] ? l[s] += o : l[++s] = o), (r = r[0]) === (i = i[0]) ? l[s] ? l[s] += i : l[++s] = i : (l[++s] = null, u.push({
            i: s,
            x: Ds(r, i)
        })), n = p0.lastIndex;
        return n < t.length && (o = t.slice(n), l[s] ? l[s] += o : l[++s] = o), l.length < 2 ? u[0] ? EQ(u[0].x) : _Q(t) : (t = u.length, function(f) {
            for(var p = 0, m; p < t; ++p)l[(m = u[p]).i] = m.x(f);
            return l.join("");
        });
    }
    var TR = 180 / Math.PI, CN = {
        translateX: 0,
        translateY: 0,
        rotate: 0,
        skewX: 0,
        scaleX: 1,
        scaleY: 1
    };
    function yD(e, t, n, r, i, o) {
        var s, l, u;
        return (s = Math.sqrt(e * e + t * t)) && (e /= s, t /= s), (u = e * n + t * r) && (n -= e * u, r -= t * u), (l = Math.sqrt(n * n + r * r)) && (n /= l, r /= l, u /= l), e * r < t * n && (e = -e, t = -t, u = -u, s = -s), {
            translateX: i,
            translateY: o,
            rotate: Math.atan2(t, e) * TR,
            skewX: Math.atan(u) * TR,
            scaleX: s,
            scaleY: l
        };
    }
    var Wh;
    function CQ(e) {
        const t = new (typeof DOMMatrix == "function" ? DOMMatrix : WebKitCSSMatrix)(e + "");
        return t.isIdentity ? CN : yD(t.a, t.b, t.c, t.d, t.e, t.f);
    }
    function jQ(e) {
        return e == null || (Wh || (Wh = document.createElementNS("http://www.w3.org/2000/svg", "g")), Wh.setAttribute("transform", e), !(e = Wh.transform.baseVal.consolidate())) ? CN : (e = e.matrix, yD(e.a, e.b, e.c, e.d, e.e, e.f));
    }
    function vD(e, t, n, r) {
        function i(f) {
            return f.length ? f.pop() + " " : "";
        }
        function o(f, p, m, g, v, x) {
            if (f !== m || p !== g) {
                var b = v.push("translate(", null, t, null, n);
                x.push({
                    i: b - 4,
                    x: Ds(f, m)
                }, {
                    i: b - 2,
                    x: Ds(p, g)
                });
            } else (m || g) && v.push("translate(" + m + t + g + n);
        }
        function s(f, p, m, g) {
            f !== p ? (f - p > 180 ? p += 360 : p - f > 180 && (f += 360), g.push({
                i: m.push(i(m) + "rotate(", null, r) - 2,
                x: Ds(f, p)
            })) : p && m.push(i(m) + "rotate(" + p + r);
        }
        function l(f, p, m, g) {
            f !== p ? g.push({
                i: m.push(i(m) + "skewX(", null, r) - 2,
                x: Ds(f, p)
            }) : p && m.push(i(m) + "skewX(" + p + r);
        }
        function u(f, p, m, g, v, x) {
            if (f !== m || p !== g) {
                var b = v.push(i(v) + "scale(", null, ",", null, ")");
                x.push({
                    i: b - 4,
                    x: Ds(f, m)
                }, {
                    i: b - 2,
                    x: Ds(p, g)
                });
            } else (m !== 1 || g !== 1) && v.push(i(v) + "scale(" + m + "," + g + ")");
        }
        return function(f, p) {
            var m = [], g = [];
            return f = e(f), p = e(p), o(f.translateX, f.translateY, p.translateX, p.translateY, m, g), s(f.rotate, p.rotate, m, g), l(f.skewX, p.skewX, m, g), u(f.scaleX, f.scaleY, p.scaleX, p.scaleY, m, g), f = p = null, function(v) {
                for(var x = -1, b = g.length, S; ++x < b;)m[(S = g[x]).i] = S.x(v);
                return m.join("");
            };
        };
    }
    var RQ = vD(CQ, "px, ", "px)", "deg)"), OQ = vD(jQ, ", ", ")", ")"), TQ = 1e-12;
    function PR(e) {
        return ((e = Math.exp(e)) + 1 / e) / 2;
    }
    function PQ(e) {
        return ((e = Math.exp(e)) - 1 / e) / 2;
    }
    function AQ(e) {
        return ((e = Math.exp(2 * e)) - 1) / (e + 1);
    }
    const FQ = function e(t, n, r) {
        function i(o, s) {
            var l = o[0], u = o[1], f = o[2], p = s[0], m = s[1], g = s[2], v = p - l, x = m - u, b = v * v + x * x, S, N;
            if (b < TQ) N = Math.log(g / f) / t, S = function(D) {
                return [
                    l + D * v,
                    u + D * x,
                    f * Math.exp(t * D * N)
                ];
            };
            else {
                var _ = Math.sqrt(b), I = (g * g - f * f + r * b) / (2 * f * n * _), C = (g * g - f * f - r * b) / (2 * g * n * _), A = Math.log(Math.sqrt(I * I + 1) - I), R = Math.log(Math.sqrt(C * C + 1) - C);
                N = (R - A) / t, S = function(D) {
                    var O = D * N, E = PR(A), F = f / (n * _) * (E * AQ(t * O + A) - PQ(A));
                    return [
                        l + F * v,
                        u + F * x,
                        f * E / PR(t * O + A)
                    ];
                };
            }
            return S.duration = N * 1e3 * t / Math.SQRT2, S;
        }
        return i.rho = function(o) {
            var s = Math.max(.001, +o), l = s * s, u = l * l;
            return e(s, l, u);
        }, i;
    }(Math.SQRT2, 2, 4);
    var Hc = 0, fd = 0, rd = 0, xD = 1e3, Dg, pd, Mg = 0, hl = 0, jy = 0, gf = typeof performance == "object" && performance.now ? performance : Date, bD = typeof window == "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(e) {
        setTimeout(e, 17);
    };
    function iI() {
        return hl || (bD(DQ), hl = gf.now() + jy);
    }
    function DQ() {
        hl = 0;
    }
    function Lg() {
        this._call = this._time = this._next = null;
    }
    Lg.prototype = wD.prototype = {
        constructor: Lg,
        restart: function(e, t, n) {
            if (typeof e != "function") throw new TypeError("callback is not a function");
            n = (n == null ? iI() : +n) + (t == null ? 0 : +t), !this._next && pd !== this && (pd ? pd._next = this : Dg = this, pd = this), this._call = e, this._time = n, jN();
        },
        stop: function() {
            this._call && (this._call = null, this._time = 1 / 0, jN());
        }
    };
    function wD(e, t, n) {
        var r = new Lg;
        return r.restart(e, t, n), r;
    }
    function MQ() {
        iI(), ++Hc;
        for(var e = Dg, t; e;)(t = hl - e._time) >= 0 && e._call.call(void 0, t), e = e._next;
        --Hc;
    }
    function AR() {
        hl = (Mg = gf.now()) + jy, Hc = fd = 0;
        try {
            MQ();
        } finally{
            Hc = 0, $Q(), hl = 0;
        }
    }
    function LQ() {
        var e = gf.now(), t = e - Mg;
        t > xD && (jy -= t, Mg = e);
    }
    function $Q() {
        for(var e, t = Dg, n, r = 1 / 0; t;)t._call ? (r > t._time && (r = t._time), e = t, t = t._next) : (n = t._next, t._next = null, t = e ? e._next = n : Dg = n);
        pd = e, jN(r);
    }
    function jN(e) {
        if (!Hc) {
            fd && (fd = clearTimeout(fd));
            var t = e - hl;
            t > 24 ? (e < 1 / 0 && (fd = setTimeout(AR, e - gf.now() - jy)), rd && (rd = clearInterval(rd))) : (rd || (Mg = gf.now(), rd = setInterval(LQ, xD)), Hc = 1, bD(AR));
        }
    }
    function FR(e, t, n) {
        var r = new Lg;
        return t = t == null ? 0 : +t, r.restart((i)=>{
            r.stop(), e(i + t);
        }, t, n), r;
    }
    var qQ = ky("start", "end", "cancel", "interrupt"), BQ = [], ND = 0, DR = 1, RN = 2, gm = 3, MR = 4, ON = 5, ym = 6;
    function Ry(e, t, n, r, i, o) {
        var s = e.__transition;
        if (!s) e.__transition = {};
        else if (n in s) return;
        zQ(e, n, {
            name: t,
            index: r,
            group: i,
            on: qQ,
            tween: BQ,
            time: o.time,
            delay: o.delay,
            duration: o.duration,
            ease: o.ease,
            timer: null,
            state: ND
        });
    }
    function oI(e, t) {
        var n = no(e, t);
        if (n.state > ND) throw new Error("too late; already scheduled");
        return n;
    }
    function ko(e, t) {
        var n = no(e, t);
        if (n.state > gm) throw new Error("too late; already running");
        return n;
    }
    function no(e, t) {
        var n = e.__transition;
        if (!n || !(n = n[t])) throw new Error("transition not found");
        return n;
    }
    function zQ(e, t, n) {
        var r = e.__transition, i;
        r[t] = n, n.timer = wD(o, 0, n.time);
        function o(f) {
            n.state = DR, n.timer.restart(s, n.delay, n.time), n.delay <= f && s(f - n.delay);
        }
        function s(f) {
            var p, m, g, v;
            if (n.state !== DR) return u();
            for(p in r)if (v = r[p], v.name === n.name) {
                if (v.state === gm) return FR(s);
                v.state === MR ? (v.state = ym, v.timer.stop(), v.on.call("interrupt", e, e.__data__, v.index, v.group), delete r[p]) : +p < t && (v.state = ym, v.timer.stop(), v.on.call("cancel", e, e.__data__, v.index, v.group), delete r[p]);
            }
            if (FR(function() {
                n.state === gm && (n.state = MR, n.timer.restart(l, n.delay, n.time), l(f));
            }), n.state = RN, n.on.call("start", e, e.__data__, n.index, n.group), n.state === RN) {
                for(n.state = gm, i = new Array(g = n.tween.length), p = 0, m = -1; p < g; ++p)(v = n.tween[p].value.call(e, e.__data__, n.index, n.group)) && (i[++m] = v);
                i.length = m + 1;
            }
        }
        function l(f) {
            for(var p = f < n.duration ? n.ease.call(null, f / n.duration) : (n.timer.restart(u), n.state = ON, 1), m = -1, g = i.length; ++m < g;)i[m].call(e, p);
            n.state === ON && (n.on.call("end", e, e.__data__, n.index, n.group), u());
        }
        function u() {
            n.state = ym, n.timer.stop(), delete r[t];
            for(var f in r)return;
            delete e.__transition;
        }
    }
    function vm(e, t) {
        var n = e.__transition, r, i, o = !0, s;
        if (n) {
            t = t == null ? null : t + "";
            for(s in n){
                if ((r = n[s]).name !== t) {
                    o = !1;
                    continue;
                }
                i = r.state > RN && r.state < ON, r.state = ym, r.timer.stop(), r.on.call(i ? "interrupt" : "cancel", e, e.__data__, r.index, r.group), delete n[s];
            }
            o && delete e.__transition;
        }
    }
    function WQ(e) {
        return this.each(function() {
            vm(this, e);
        });
    }
    function VQ(e, t) {
        var n, r;
        return function() {
            var i = ko(this, e), o = i.tween;
            if (o !== n) {
                r = n = o;
                for(var s = 0, l = r.length; s < l; ++s)if (r[s].name === t) {
                    r = r.slice(), r.splice(s, 1);
                    break;
                }
            }
            i.tween = r;
        };
    }
    function UQ(e, t, n) {
        var r, i;
        if (typeof n != "function") throw new Error;
        return function() {
            var o = ko(this, e), s = o.tween;
            if (s !== r) {
                i = (r = s).slice();
                for(var l = {
                    name: t,
                    value: n
                }, u = 0, f = i.length; u < f; ++u)if (i[u].name === t) {
                    i[u] = l;
                    break;
                }
                u === f && i.push(l);
            }
            o.tween = i;
        };
    }
    function HQ(e, t) {
        var n = this._id;
        if (e += "", arguments.length < 2) {
            for(var r = no(this.node(), n).tween, i = 0, o = r.length, s; i < o; ++i)if ((s = r[i]).name === e) return s.value;
            return null;
        }
        return this.each((t == null ? VQ : UQ)(n, e, t));
    }
    function sI(e, t, n) {
        var r = e._id;
        return e.each(function() {
            var i = ko(this, r);
            (i.value || (i.value = {}))[t] = n.apply(this, arguments);
        }), function(i) {
            return no(i, r).value[t];
        };
    }
    function SD(e, t) {
        var n;
        return (typeof t == "number" ? Ds : t instanceof mf ? OR : (n = mf(t)) ? (t = n, OR) : kQ)(e, t);
    }
    function KQ(e) {
        return function() {
            this.removeAttribute(e);
        };
    }
    function GQ(e) {
        return function() {
            this.removeAttributeNS(e.space, e.local);
        };
    }
    function QQ(e, t, n) {
        var r, i = n + "", o;
        return function() {
            var s = this.getAttribute(e);
            return s === i ? null : s === r ? o : o = t(r = s, n);
        };
    }
    function JQ(e, t, n) {
        var r, i = n + "", o;
        return function() {
            var s = this.getAttributeNS(e.space, e.local);
            return s === i ? null : s === r ? o : o = t(r = s, n);
        };
    }
    function ZQ(e, t, n) {
        var r, i, o;
        return function() {
            var s, l = n(this), u;
            return l == null ? void this.removeAttribute(e) : (s = this.getAttribute(e), u = l + "", s === u ? null : s === r && u === i ? o : (i = u, o = t(r = s, l)));
        };
    }
    function YQ(e, t, n) {
        var r, i, o;
        return function() {
            var s, l = n(this), u;
            return l == null ? void this.removeAttributeNS(e.space, e.local) : (s = this.getAttributeNS(e.space, e.local), u = l + "", s === u ? null : s === r && u === i ? o : (i = u, o = t(r = s, l)));
        };
    }
    function XQ(e, t) {
        var n = Cy(e), r = n === "transform" ? OQ : SD;
        return this.attrTween(e, typeof t == "function" ? (n.local ? YQ : ZQ)(n, r, sI(this, "attr." + e, t)) : t == null ? (n.local ? GQ : KQ)(n) : (n.local ? JQ : QQ)(n, r, t));
    }
    function eJ(e, t) {
        return function(n) {
            this.setAttribute(e, t.call(this, n));
        };
    }
    function tJ(e, t) {
        return function(n) {
            this.setAttributeNS(e.space, e.local, t.call(this, n));
        };
    }
    function nJ(e, t) {
        var n, r;
        function i() {
            var o = t.apply(this, arguments);
            return o !== r && (n = (r = o) && tJ(e, o)), n;
        }
        return i._value = t, i;
    }
    function rJ(e, t) {
        var n, r;
        function i() {
            var o = t.apply(this, arguments);
            return o !== r && (n = (r = o) && eJ(e, o)), n;
        }
        return i._value = t, i;
    }
    function iJ(e, t) {
        var n = "attr." + e;
        if (arguments.length < 2) return (n = this.tween(n)) && n._value;
        if (t == null) return this.tween(n, null);
        if (typeof t != "function") throw new Error;
        var r = Cy(e);
        return this.tween(n, (r.local ? nJ : rJ)(r, t));
    }
    function oJ(e, t) {
        return function() {
            oI(this, e).delay = +t.apply(this, arguments);
        };
    }
    function sJ(e, t) {
        return t = +t, function() {
            oI(this, e).delay = t;
        };
    }
    function aJ(e) {
        var t = this._id;
        return arguments.length ? this.each((typeof e == "function" ? oJ : sJ)(t, e)) : no(this.node(), t).delay;
    }
    function lJ(e, t) {
        return function() {
            ko(this, e).duration = +t.apply(this, arguments);
        };
    }
    function cJ(e, t) {
        return t = +t, function() {
            ko(this, e).duration = t;
        };
    }
    function uJ(e) {
        var t = this._id;
        return arguments.length ? this.each((typeof e == "function" ? lJ : cJ)(t, e)) : no(this.node(), t).duration;
    }
    function dJ(e, t) {
        if (typeof t != "function") throw new Error;
        return function() {
            ko(this, e).ease = t;
        };
    }
    function fJ(e) {
        var t = this._id;
        return arguments.length ? this.each(dJ(t, e)) : no(this.node(), t).ease;
    }
    function pJ(e, t) {
        return function() {
            var n = t.apply(this, arguments);
            if (typeof n != "function") throw new Error;
            ko(this, e).ease = n;
        };
    }
    function hJ(e) {
        if (typeof e != "function") throw new Error;
        return this.each(pJ(this._id, e));
    }
    function mJ(e) {
        typeof e != "function" && (e = eD(e));
        for(var t = this._groups, n = t.length, r = new Array(n), i = 0; i < n; ++i)for(var o = t[i], s = o.length, l = r[i] = [], u, f = 0; f < s; ++f)(u = o[f]) && e.call(u, u.__data__, f, o) && l.push(u);
        return new rs(r, this._parents, this._name, this._id);
    }
    function gJ(e) {
        if (e._id !== this._id) throw new Error;
        for(var t = this._groups, n = e._groups, r = t.length, i = n.length, o = Math.min(r, i), s = new Array(r), l = 0; l < o; ++l)for(var u = t[l], f = n[l], p = u.length, m = s[l] = new Array(p), g, v = 0; v < p; ++v)(g = u[v] || f[v]) && (m[v] = g);
        for(; l < r; ++l)s[l] = t[l];
        return new rs(s, this._parents, this._name, this._id);
    }
    function yJ(e) {
        return (e + "").trim().split(/^|\s+/).every(function(t) {
            var n = t.indexOf(".");
            return n >= 0 && (t = t.slice(0, n)), !t || t === "start";
        });
    }
    function vJ(e, t, n) {
        var r, i, o = yJ(t) ? oI : ko;
        return function() {
            var s = o(this, e), l = s.on;
            l !== r && (i = (r = l).copy()).on(t, n), s.on = i;
        };
    }
    function xJ(e, t) {
        var n = this._id;
        return arguments.length < 2 ? no(this.node(), n).on.on(e) : this.each(vJ(n, e, t));
    }
    function bJ(e) {
        return function() {
            var t = this.parentNode;
            for(var n in this.__transition)if (+n !== e) return;
            t && t.removeChild(this);
        };
    }
    function wJ() {
        return this.on("end.remove", bJ(this._id));
    }
    function NJ(e) {
        var t = this._name, n = this._id;
        typeof e != "function" && (e = tI(e));
        for(var r = this._groups, i = r.length, o = new Array(i), s = 0; s < i; ++s)for(var l = r[s], u = l.length, f = o[s] = new Array(u), p, m, g = 0; g < u; ++g)(p = l[g]) && (m = e.call(p, p.__data__, g, l)) && ("__data__" in p && (m.__data__ = p.__data__), f[g] = m, Ry(f[g], t, n, g, f, no(p, n)));
        return new rs(o, this._parents, t, n);
    }
    function SJ(e) {
        var t = this._name, n = this._id;
        typeof e != "function" && (e = XF(e));
        for(var r = this._groups, i = r.length, o = [], s = [], l = 0; l < i; ++l)for(var u = r[l], f = u.length, p, m = 0; m < f; ++m)if (p = u[m]) {
            for(var g = e.call(p, p.__data__, m, u), v, x = no(p, n), b = 0, S = g.length; b < S; ++b)(v = g[b]) && Ry(v, t, n, b, g, x);
            o.push(g), s.push(p);
        }
        return new rs(o, s, t, n);
    }
    var IJ = Hf.prototype.constructor;
    function _J() {
        return new IJ(this._groups, this._parents);
    }
    function EJ(e, t) {
        var n, r, i;
        return function() {
            var o = Uc(this, e), s = (this.style.removeProperty(e), Uc(this, e));
            return o === s ? null : o === n && s === r ? i : i = t(n = o, r = s);
        };
    }
    function ID(e) {
        return function() {
            this.style.removeProperty(e);
        };
    }
    function kJ(e, t, n) {
        var r, i = n + "", o;
        return function() {
            var s = Uc(this, e);
            return s === i ? null : s === r ? o : o = t(r = s, n);
        };
    }
    function CJ(e, t, n) {
        var r, i, o;
        return function() {
            var s = Uc(this, e), l = n(this), u = l + "";
            return l == null && (u = l = (this.style.removeProperty(e), Uc(this, e))), s === u ? null : s === r && u === i ? o : (i = u, o = t(r = s, l));
        };
    }
    function jJ(e, t) {
        var n, r, i, o = "style." + t, s = "end." + o, l;
        return function() {
            var u = ko(this, e), f = u.on, p = u.value[o] == null ? l || (l = ID(t)) : void 0;
            (f !== n || i !== p) && (r = (n = f).copy()).on(s, i = p), u.on = r;
        };
    }
    function RJ(e, t, n) {
        var r = (e += "") == "transform" ? RQ : SD;
        return t == null ? this.styleTween(e, EJ(e, r)).on("end.style." + e, ID(e)) : typeof t == "function" ? this.styleTween(e, CJ(e, r, sI(this, "style." + e, t))).each(jJ(this._id, e)) : this.styleTween(e, kJ(e, r, t), n).on("end.style." + e, null);
    }
    function OJ(e, t, n) {
        return function(r) {
            this.style.setProperty(e, t.call(this, r), n);
        };
    }
    function TJ(e, t, n) {
        var r, i;
        function o() {
            var s = t.apply(this, arguments);
            return s !== i && (r = (i = s) && OJ(e, s, n)), r;
        }
        return o._value = t, o;
    }
    function PJ(e, t, n) {
        var r = "style." + (e += "");
        if (arguments.length < 2) return (r = this.tween(r)) && r._value;
        if (t == null) return this.tween(r, null);
        if (typeof t != "function") throw new Error;
        return this.tween(r, TJ(e, t, n ?? ""));
    }
    function AJ(e) {
        return function() {
            this.textContent = e;
        };
    }
    function FJ(e) {
        return function() {
            var t = e(this);
            this.textContent = t ?? "";
        };
    }
    function DJ(e) {
        return this.tween("text", typeof e == "function" ? FJ(sI(this, "text", e)) : AJ(e == null ? "" : e + ""));
    }
    function MJ(e) {
        return function(t) {
            this.textContent = e.call(this, t);
        };
    }
    function LJ(e) {
        var t, n;
        function r() {
            var i = e.apply(this, arguments);
            return i !== n && (t = (n = i) && MJ(i)), t;
        }
        return r._value = e, r;
    }
    function $J(e) {
        var t = "text";
        if (arguments.length < 1) return (t = this.tween(t)) && t._value;
        if (e == null) return this.tween(t, null);
        if (typeof e != "function") throw new Error;
        return this.tween(t, LJ(e));
    }
    function qJ() {
        for(var e = this._name, t = this._id, n = _D(), r = this._groups, i = r.length, o = 0; o < i; ++o)for(var s = r[o], l = s.length, u, f = 0; f < l; ++f)if (u = s[f]) {
            var p = no(u, t);
            Ry(u, e, n, f, s, {
                time: p.time + p.delay + p.duration,
                delay: 0,
                duration: p.duration,
                ease: p.ease
            });
        }
        return new rs(r, this._parents, e, n);
    }
    function BJ() {
        var e, t, n = this, r = n._id, i = n.size();
        return new Promise(function(o, s) {
            var l = {
                value: s
            }, u = {
                value: function() {
                    --i === 0 && o();
                }
            };
            n.each(function() {
                var f = ko(this, r), p = f.on;
                p !== e && (t = (e = p).copy(), t._.cancel.push(l), t._.interrupt.push(l), t._.end.push(u)), f.on = t;
            }), i === 0 && o();
        });
    }
    var zJ = 0;
    function rs(e, t, n, r) {
        this._groups = e, this._parents = t, this._name = n, this._id = r;
    }
    function _D() {
        return ++zJ;
    }
    var Bo = Hf.prototype;
    rs.prototype = {
        constructor: rs,
        select: NJ,
        selectAll: SJ,
        selectChild: Bo.selectChild,
        selectChildren: Bo.selectChildren,
        filter: mJ,
        merge: gJ,
        selection: _J,
        transition: qJ,
        call: Bo.call,
        nodes: Bo.nodes,
        node: Bo.node,
        size: Bo.size,
        empty: Bo.empty,
        each: Bo.each,
        on: xJ,
        attr: XQ,
        attrTween: iJ,
        style: RJ,
        styleTween: PJ,
        text: DJ,
        textTween: $J,
        remove: wJ,
        tween: HQ,
        delay: aJ,
        duration: uJ,
        ease: fJ,
        easeVarying: hJ,
        end: BJ,
        [Symbol.iterator]: Bo[Symbol.iterator]
    };
    function WJ(e) {
        return ((e *= 2) <= 1 ? e * e * e : (e -= 2) * e * e + 2) / 2;
    }
    var VJ = {
        time: null,
        delay: 0,
        duration: 250,
        ease: WJ
    };
    function UJ(e, t) {
        for(var n; !(n = e.__transition) || !(n = n[t]);)if (!(e = e.parentNode)) throw new Error(`transition ${t} not found`);
        return n;
    }
    function HJ(e) {
        var t, n;
        e instanceof rs ? (t = e._id, e = e._name) : (t = _D(), (n = VJ).time = iI(), e = e == null ? null : e + "");
        for(var r = this._groups, i = r.length, o = 0; o < i; ++o)for(var s = r[o], l = s.length, u, f = 0; f < l; ++f)(u = s[f]) && Ry(u, e, t, f, s, n || UJ(u, t));
        return new rs(r, this._parents, e, t);
    }
    Hf.prototype.interrupt = WQ;
    Hf.prototype.transition = HJ;
    const Vh = (e)=>()=>e;
    function KJ(e, { sourceEvent: t, target: n, transform: r, dispatch: i }) {
        Object.defineProperties(this, {
            type: {
                value: e,
                enumerable: !0,
                configurable: !0
            },
            sourceEvent: {
                value: t,
                enumerable: !0,
                configurable: !0
            },
            target: {
                value: n,
                enumerable: !0,
                configurable: !0
            },
            transform: {
                value: r,
                enumerable: !0,
                configurable: !0
            },
            _: {
                value: i
            }
        });
    }
    function Ho(e, t, n) {
        this.k = e, this.x = t, this.y = n;
    }
    Ho.prototype = {
        constructor: Ho,
        scale: function(e) {
            return e === 1 ? this : new Ho(this.k * e, this.x, this.y);
        },
        translate: function(e, t) {
            return e === 0 & t === 0 ? this : new Ho(this.k, this.x + this.k * e, this.y + this.k * t);
        },
        apply: function(e) {
            return [
                e[0] * this.k + this.x,
                e[1] * this.k + this.y
            ];
        },
        applyX: function(e) {
            return e * this.k + this.x;
        },
        applyY: function(e) {
            return e * this.k + this.y;
        },
        invert: function(e) {
            return [
                (e[0] - this.x) / this.k,
                (e[1] - this.y) / this.k
            ];
        },
        invertX: function(e) {
            return (e - this.x) / this.k;
        },
        invertY: function(e) {
            return (e - this.y) / this.k;
        },
        rescaleX: function(e) {
            return e.copy().domain(e.range().map(this.invertX, this).map(e.invert, e));
        },
        rescaleY: function(e) {
            return e.copy().domain(e.range().map(this.invertY, this).map(e.invert, e));
        },
        toString: function() {
            return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
        }
    };
    var Oy = new Ho(1, 0, 0);
    ED.prototype = Ho.prototype;
    function ED(e) {
        for(; !e.__zoom;)if (!(e = e.parentNode)) return Oy;
        return e.__zoom;
    }
    function h0(e) {
        e.stopImmediatePropagation();
    }
    function id(e) {
        e.preventDefault(), e.stopImmediatePropagation();
    }
    function GJ(e) {
        return (!e.ctrlKey || e.type === "wheel") && !e.button;
    }
    function QJ() {
        var e = this;
        return e instanceof SVGElement ? (e = e.ownerSVGElement || e, e.hasAttribute("viewBox") ? (e = e.viewBox.baseVal, [
            [
                e.x,
                e.y
            ],
            [
                e.x + e.width,
                e.y + e.height
            ]
        ]) : [
            [
                0,
                0
            ],
            [
                e.width.baseVal.value,
                e.height.baseVal.value
            ]
        ]) : [
            [
                0,
                0
            ],
            [
                e.clientWidth,
                e.clientHeight
            ]
        ];
    }
    function LR() {
        return this.__zoom || Oy;
    }
    function JJ(e) {
        return -e.deltaY * (e.deltaMode === 1 ? .05 : e.deltaMode ? 1 : .002) * (e.ctrlKey ? 10 : 1);
    }
    function ZJ() {
        return navigator.maxTouchPoints || "ontouchstart" in this;
    }
    function YJ(e, t, n) {
        var r = e.invertX(t[0][0]) - n[0][0], i = e.invertX(t[1][0]) - n[1][0], o = e.invertY(t[0][1]) - n[0][1], s = e.invertY(t[1][1]) - n[1][1];
        return e.translate(i > r ? (r + i) / 2 : Math.min(0, r) || Math.max(0, i), s > o ? (o + s) / 2 : Math.min(0, o) || Math.max(0, s));
    }
    function kD() {
        var e = GJ, t = QJ, n = YJ, r = JJ, i = ZJ, o = [
            0,
            1 / 0
        ], s = [
            [
                -1 / 0,
                -1 / 0
            ],
            [
                1 / 0,
                1 / 0
            ]
        ], l = 250, u = FQ, f = ky("start", "zoom", "end"), p, m, g, v = 500, x = 150, b = 0, S = 10;
        function N(P) {
            P.property("__zoom", LR).on("wheel.zoom", O, {
                passive: !1
            }).on("mousedown.zoom", E).on("dblclick.zoom", F).filter(i).on("touchstart.zoom", j).on("touchmove.zoom", M).on("touchend.zoom touchcancel.zoom", L).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
        }
        N.transform = function(P, V, z, Q) {
            var K = P.selection ? P.selection() : P;
            K.property("__zoom", LR), P !== K ? A(P, V, z, Q) : K.interrupt().each(function() {
                R(this, arguments).event(Q).start().zoom(null, typeof V == "function" ? V.apply(this, arguments) : V).end();
            });
        }, N.scaleBy = function(P, V, z, Q) {
            N.scaleTo(P, function() {
                var K = this.__zoom.k, H = typeof V == "function" ? V.apply(this, arguments) : V;
                return K * H;
            }, z, Q);
        }, N.scaleTo = function(P, V, z, Q) {
            N.transform(P, function() {
                var K = t.apply(this, arguments), H = this.__zoom, G = z == null ? C(K) : typeof z == "function" ? z.apply(this, arguments) : z, U = H.invert(G), Z = typeof V == "function" ? V.apply(this, arguments) : V;
                return n(I(_(H, Z), G, U), K, s);
            }, z, Q);
        }, N.translateBy = function(P, V, z, Q) {
            N.transform(P, function() {
                return n(this.__zoom.translate(typeof V == "function" ? V.apply(this, arguments) : V, typeof z == "function" ? z.apply(this, arguments) : z), t.apply(this, arguments), s);
            }, null, Q);
        }, N.translateTo = function(P, V, z, Q, K) {
            N.transform(P, function() {
                var H = t.apply(this, arguments), G = this.__zoom, U = Q == null ? C(H) : typeof Q == "function" ? Q.apply(this, arguments) : Q;
                return n(Oy.translate(U[0], U[1]).scale(G.k).translate(typeof V == "function" ? -V.apply(this, arguments) : -V, typeof z == "function" ? -z.apply(this, arguments) : -z), H, s);
            }, Q, K);
        };
        function _(P, V) {
            return V = Math.max(o[0], Math.min(o[1], V)), V === P.k ? P : new Ho(V, P.x, P.y);
        }
        function I(P, V, z) {
            var Q = V[0] - z[0] * P.k, K = V[1] - z[1] * P.k;
            return Q === P.x && K === P.y ? P : new Ho(P.k, Q, K);
        }
        function C(P) {
            return [
                (+P[0][0] + +P[1][0]) / 2,
                (+P[0][1] + +P[1][1]) / 2
            ];
        }
        function A(P, V, z, Q) {
            P.on("start.zoom", function() {
                R(this, arguments).event(Q).start();
            }).on("interrupt.zoom end.zoom", function() {
                R(this, arguments).event(Q).end();
            }).tween("zoom", function() {
                var K = this, H = arguments, G = R(K, H).event(Q), U = t.apply(K, H), Z = z == null ? C(U) : typeof z == "function" ? z.apply(K, H) : z, J = Math.max(U[1][0] - U[0][0], U[1][1] - U[0][1]), X = K.__zoom, te = typeof V == "function" ? V.apply(K, H) : V, ie = u(X.invert(Z).concat(J / X.k), te.invert(Z).concat(J / te.k));
                return function(ae) {
                    if (ae === 1) ae = te;
                    else {
                        var ce = ie(ae), de = J / ce[2];
                        ae = new Ho(de, Z[0] - ce[0] * de, Z[1] - ce[1] * de);
                    }
                    G.zoom(null, ae);
                };
            });
        }
        function R(P, V, z) {
            return !z && P.__zooming || new D(P, V);
        }
        function D(P, V) {
            this.that = P, this.args = V, this.active = 0, this.sourceEvent = null, this.extent = t.apply(P, V), this.taps = 0;
        }
        D.prototype = {
            event: function(P) {
                return P && (this.sourceEvent = P), this;
            },
            start: function() {
                return ++this.active === 1 && (this.that.__zooming = this, this.emit("start")), this;
            },
            zoom: function(P, V) {
                return this.mouse && P !== "mouse" && (this.mouse[1] = V.invert(this.mouse[0])), this.touch0 && P !== "touch" && (this.touch0[1] = V.invert(this.touch0[0])), this.touch1 && P !== "touch" && (this.touch1[1] = V.invert(this.touch1[0])), this.that.__zoom = V, this.emit("zoom"), this;
            },
            end: function() {
                return --this.active === 0 && (delete this.that.__zooming, this.emit("end")), this;
            },
            emit: function(P) {
                var V = oi(this.that).datum();
                f.call(P, this.that, new KJ(P, {
                    sourceEvent: this.sourceEvent,
                    target: N,
                    transform: this.that.__zoom,
                    dispatch: f
                }), V);
            }
        };
        function O(P, ...V) {
            if (!e.apply(this, arguments)) return;
            var z = R(this, V).event(P), Q = this.__zoom, K = Math.max(o[0], Math.min(o[1], Q.k * Math.pow(2, r.apply(this, arguments)))), H = zi(P);
            if (z.wheel) (z.mouse[0][0] !== H[0] || z.mouse[0][1] !== H[1]) && (z.mouse[1] = Q.invert(z.mouse[0] = H)), clearTimeout(z.wheel);
            else {
                if (Q.k === K) return;
                z.mouse = [
                    H,
                    Q.invert(H)
                ], vm(this), z.start();
            }
            id(P), z.wheel = setTimeout(G, x), z.zoom("mouse", n(I(_(Q, K), z.mouse[0], z.mouse[1]), z.extent, s));
            function G() {
                z.wheel = null, z.end();
            }
        }
        function E(P, ...V) {
            if (g || !e.apply(this, arguments)) return;
            var z = P.currentTarget, Q = R(this, V, !0).event(P), K = oi(P.view).on("mousemove.zoom", Z, !0).on("mouseup.zoom", J, !0), H = zi(P, z), G = P.clientX, U = P.clientY;
            uD(P.view), h0(P), Q.mouse = [
                H,
                this.__zoom.invert(H)
            ], vm(this), Q.start();
            function Z(X) {
                if (id(X), !Q.moved) {
                    var te = X.clientX - G, ie = X.clientY - U;
                    Q.moved = te * te + ie * ie > b;
                }
                Q.event(X).zoom("mouse", n(I(Q.that.__zoom, Q.mouse[0] = zi(X, z), Q.mouse[1]), Q.extent, s));
            }
            function J(X) {
                K.on("mousemove.zoom mouseup.zoom", null), dD(X.view, Q.moved), id(X), Q.event(X).end();
            }
        }
        function F(P, ...V) {
            if (e.apply(this, arguments)) {
                var z = this.__zoom, Q = zi(P.changedTouches ? P.changedTouches[0] : P, this), K = z.invert(Q), H = z.k * (P.shiftKey ? .5 : 2), G = n(I(_(z, H), Q, K), t.apply(this, V), s);
                id(P), l > 0 ? oi(this).transition().duration(l).call(A, G, Q, P) : oi(this).call(N.transform, G, Q, P);
            }
        }
        function j(P, ...V) {
            if (e.apply(this, arguments)) {
                var z = P.touches, Q = z.length, K = R(this, V, P.changedTouches.length === Q).event(P), H, G, U, Z;
                for(h0(P), G = 0; G < Q; ++G)U = z[G], Z = zi(U, this), Z = [
                    Z,
                    this.__zoom.invert(Z),
                    U.identifier
                ], K.touch0 ? !K.touch1 && K.touch0[2] !== Z[2] && (K.touch1 = Z, K.taps = 0) : (K.touch0 = Z, H = !0, K.taps = 1 + !!p);
                p && (p = clearTimeout(p)), H && (K.taps < 2 && (m = Z[0], p = setTimeout(function() {
                    p = null;
                }, v)), vm(this), K.start());
            }
        }
        function M(P, ...V) {
            if (this.__zooming) {
                var z = R(this, V).event(P), Q = P.changedTouches, K = Q.length, H, G, U, Z;
                for(id(P), H = 0; H < K; ++H)G = Q[H], U = zi(G, this), z.touch0 && z.touch0[2] === G.identifier ? z.touch0[0] = U : z.touch1 && z.touch1[2] === G.identifier && (z.touch1[0] = U);
                if (G = z.that.__zoom, z.touch1) {
                    var J = z.touch0[0], X = z.touch0[1], te = z.touch1[0], ie = z.touch1[1], ae = (ae = te[0] - J[0]) * ae + (ae = te[1] - J[1]) * ae, ce = (ce = ie[0] - X[0]) * ce + (ce = ie[1] - X[1]) * ce;
                    G = _(G, Math.sqrt(ae / ce)), U = [
                        (J[0] + te[0]) / 2,
                        (J[1] + te[1]) / 2
                    ], Z = [
                        (X[0] + ie[0]) / 2,
                        (X[1] + ie[1]) / 2
                    ];
                } else if (z.touch0) U = z.touch0[0], Z = z.touch0[1];
                else return;
                z.zoom("touch", n(I(G, U, Z), z.extent, s));
            }
        }
        function L(P, ...V) {
            if (this.__zooming) {
                var z = R(this, V).event(P), Q = P.changedTouches, K = Q.length, H, G;
                for(h0(P), g && clearTimeout(g), g = setTimeout(function() {
                    g = null;
                }, v), H = 0; H < K; ++H)G = Q[H], z.touch0 && z.touch0[2] === G.identifier ? delete z.touch0 : z.touch1 && z.touch1[2] === G.identifier && delete z.touch1;
                if (z.touch1 && !z.touch0 && (z.touch0 = z.touch1, delete z.touch1), z.touch0) z.touch0[1] = this.__zoom.invert(z.touch0[0]);
                else if (z.end(), z.taps === 2 && (G = zi(G, this), Math.hypot(m[0] - G[0], m[1] - G[1]) < S)) {
                    var U = oi(this).on("dblclick.zoom");
                    U && U.apply(this, arguments);
                }
            }
        }
        return N.wheelDelta = function(P) {
            return arguments.length ? (r = typeof P == "function" ? P : Vh(+P), N) : r;
        }, N.filter = function(P) {
            return arguments.length ? (e = typeof P == "function" ? P : Vh(!!P), N) : e;
        }, N.touchable = function(P) {
            return arguments.length ? (i = typeof P == "function" ? P : Vh(!!P), N) : i;
        }, N.extent = function(P) {
            return arguments.length ? (t = typeof P == "function" ? P : Vh([
                [
                    +P[0][0],
                    +P[0][1]
                ],
                [
                    +P[1][0],
                    +P[1][1]
                ]
            ]), N) : t;
        }, N.scaleExtent = function(P) {
            return arguments.length ? (o[0] = +P[0], o[1] = +P[1], N) : [
                o[0],
                o[1]
            ];
        }, N.translateExtent = function(P) {
            return arguments.length ? (s[0][0] = +P[0][0], s[1][0] = +P[1][0], s[0][1] = +P[0][1], s[1][1] = +P[1][1], N) : [
                [
                    s[0][0],
                    s[0][1]
                ],
                [
                    s[1][0],
                    s[1][1]
                ]
            ];
        }, N.constrain = function(P) {
            return arguments.length ? (n = P, N) : n;
        }, N.duration = function(P) {
            return arguments.length ? (l = +P, N) : l;
        }, N.interpolate = function(P) {
            return arguments.length ? (u = P, N) : u;
        }, N.on = function() {
            var P = f.on.apply(f, arguments);
            return P === f ? N : P;
        }, N.clickDistance = function(P) {
            return arguments.length ? (b = (P = +P) * P, N) : Math.sqrt(b);
        }, N.tapDistance = function(P) {
            return arguments.length ? (S = +P, N) : S;
        }, N;
    }
    const is = {
        error001: ()=>"[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001",
        error002: ()=>"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.",
        error003: (e)=>`Node type "${e}" not found. Using fallback type "default".`,
        error004: ()=>"The React Flow parent container needs a width and a height to render the graph.",
        error005: ()=>"Only child nodes can use a parent extent.",
        error006: ()=>"Can't create edge. An edge needs a source and a target.",
        error007: (e)=>`The old edge with id=${e} does not exist.`,
        error009: (e)=>`Marker type "${e}" doesn't exist.`,
        error008: (e, { id: t, sourceHandle: n, targetHandle: r })=>`Couldn't create edge for ${e} handle id: "${e === "source" ? n : r}", edge id: ${t}.`,
        error010: ()=>"Handle: No node id found. Make sure to only use a Handle inside a custom Node.",
        error011: (e)=>`Edge type "${e}" not found. Using fallback type "default".`,
        error012: (e)=>`Node with id "${e}" does not exist, it may have been removed. This can happen when a node is deleted before the "onNodeClick" handler is called.`,
        error013: (e = "react")=>`It seems that you haven't loaded the styles. Please import '@xyflow/${e}/dist/style.css' or base.css to make sure everything is working properly.`,
        error014: ()=>"useNodeConnections: No node ID found. Call useNodeConnections inside a custom Node or provide a node ID."
    }, yf = [
        [
            Number.NEGATIVE_INFINITY,
            Number.NEGATIVE_INFINITY
        ],
        [
            Number.POSITIVE_INFINITY,
            Number.POSITIVE_INFINITY
        ]
    ], CD = [
        "Enter",
        " ",
        "Escape"
    ];
    var Kc;
    (function(e) {
        e.Strict = "strict", e.Loose = "loose";
    })(Kc || (Kc = {}));
    var nl;
    (function(e) {
        e.Free = "free", e.Vertical = "vertical", e.Horizontal = "horizontal";
    })(nl || (nl = {}));
    var vf;
    (function(e) {
        e.Partial = "partial", e.Full = "full";
    })(vf || (vf = {}));
    const jD = {
        inProgress: !1,
        isValid: null,
        from: null,
        fromHandle: null,
        fromPosition: null,
        fromNode: null,
        to: null,
        toHandle: null,
        toPosition: null,
        toNode: null
    };
    var Ws;
    (function(e) {
        e.Bezier = "default", e.Straight = "straight", e.Step = "step", e.SmoothStep = "smoothstep", e.SimpleBezier = "simplebezier";
    })(Ws || (Ws = {}));
    var $g;
    (function(e) {
        e.Arrow = "arrow", e.ArrowClosed = "arrowclosed";
    })($g || ($g = {}));
    var He;
    (function(e) {
        e.Left = "left", e.Top = "top", e.Right = "right", e.Bottom = "bottom";
    })(He || (He = {}));
    const $R = {
        [He.Left]: He.Right,
        [He.Right]: He.Left,
        [He.Top]: He.Bottom,
        [He.Bottom]: He.Top
    };
    function RD(e) {
        return e === null ? null : e ? "valid" : "invalid";
    }
    const OD = (e)=>"id" in e && "source" in e && "target" in e, XJ = (e)=>"id" in e && "position" in e && !("source" in e) && !("target" in e), aI = (e)=>"id" in e && "internals" in e && !("source" in e) && !("target" in e), Gf = (e, t = [
        0,
        0
    ])=>{
        const { width: n, height: r } = os(e), i = e.origin ?? t, o = n * i[0], s = r * i[1];
        return {
            x: e.position.x - o,
            y: e.position.y - s
        };
    }, eZ = (e, t = {
        nodeOrigin: [
            0,
            0
        ],
        nodeLookup: void 0
    })=>{
        if (e.length === 0) return {
            x: 0,
            y: 0,
            width: 0,
            height: 0
        };
        const n = e.reduce((r, i)=>{
            const o = typeof i == "string";
            let s = !t.nodeLookup && !o ? i : void 0;
            t.nodeLookup && (s = o ? t.nodeLookup.get(i) : aI(i) ? i : t.nodeLookup.get(i.id));
            const l = s ? qg(s, t.nodeOrigin) : {
                x: 0,
                y: 0,
                x2: 0,
                y2: 0
            };
            return Ty(r, l);
        }, {
            x: 1 / 0,
            y: 1 / 0,
            x2: -1 / 0,
            y2: -1 / 0
        });
        return Py(n);
    }, Qf = (e, t = {})=>{
        if (e.size === 0) return {
            x: 0,
            y: 0,
            width: 0,
            height: 0
        };
        let n = {
            x: 1 / 0,
            y: 1 / 0,
            x2: -1 / 0,
            y2: -1 / 0
        };
        return e.forEach((r)=>{
            if (t.filter === void 0 || t.filter(r)) {
                const i = qg(r);
                n = Ty(n, i);
            }
        }), Py(n);
    }, TD = (e, t, [n, r, i] = [
        0,
        0,
        1
    ], o = !1, s = !1)=>{
        const l = {
            ...Jf(t, [
                n,
                r,
                i
            ]),
            width: t.width / i,
            height: t.height / i
        }, u = [];
        for (const f of e.values()){
            const { measured: p, selectable: m = !0, hidden: g = !1 } = f;
            if (s && !m || g) continue;
            const v = p.width ?? f.width ?? f.initialWidth ?? null, x = p.height ?? f.height ?? f.initialHeight ?? null, b = xf(l, Qc(f)), S = (v ?? 0) * (x ?? 0), N = o && b > 0;
            (!f.internals.handleBounds || N || b >= S || f.dragging) && u.push(f);
        }
        return u;
    }, tZ = (e, t)=>{
        const n = new Set;
        return e.forEach((r)=>{
            n.add(r.id);
        }), t.filter((r)=>n.has(r.source) || n.has(r.target));
    };
    function TN(e, t) {
        const n = new Map, r = t?.nodes ? new Set(t.nodes.map((i)=>i.id)) : null;
        return e.forEach((i)=>{
            i.measured.width && i.measured.height && (t?.includeHiddenNodes || !i.hidden) && (!r || r.has(i.id)) && n.set(i.id, i);
        }), n;
    }
    async function PN({ nodes: e, width: t, height: n, panZoom: r, minZoom: i, maxZoom: o }, s) {
        if (e.size === 0) return Promise.resolve(!1);
        const l = Qf(e), u = lI(l, t, n, s?.minZoom ?? i, s?.maxZoom ?? o, s?.padding ?? .1);
        return await r.setViewport(u, {
            duration: s?.duration
        }), Promise.resolve(!0);
    }
    function PD({ nodeId: e, nextPosition: t, nodeLookup: n, nodeOrigin: r = [
        0,
        0
    ], nodeExtent: i, onError: o }) {
        const s = n.get(e), l = s.parentId ? n.get(s.parentId) : void 0, { x: u, y: f } = l ? l.internals.positionAbsolute : {
            x: 0,
            y: 0
        }, p = s.origin ?? r;
        let m = i;
        if (s.extent === "parent" && !s.expandParent) if (!l) o?.("005", is.error005());
        else {
            const v = l.measured.width, x = l.measured.height;
            v && x && (m = [
                [
                    u,
                    f
                ],
                [
                    u + v,
                    f + x
                ]
            ]);
        }
        else l && Jc(s.extent) && (m = [
            [
                s.extent[0][0] + u,
                s.extent[0][1] + f
            ],
            [
                s.extent[1][0] + u,
                s.extent[1][1] + f
            ]
        ]);
        const g = Jc(m) ? ml(t, m, s.measured) : t;
        return {
            position: {
                x: g.x - u + s.measured.width * p[0],
                y: g.y - f + s.measured.height * p[1]
            },
            positionAbsolute: g
        };
    }
    async function nZ({ nodesToRemove: e = [], edgesToRemove: t = [], nodes: n, edges: r, onBeforeDelete: i }) {
        const o = new Set(e.map((g)=>g.id)), s = [];
        for (const g of n){
            if (g.deletable === !1) continue;
            const v = o.has(g.id), x = !v && g.parentId && s.find((b)=>b.id === g.parentId);
            (v || x) && s.push(g);
        }
        const l = new Set(t.map((g)=>g.id)), u = r.filter((g)=>g.deletable !== !1), p = tZ(s, u);
        for (const g of u)l.has(g.id) && !p.find((x)=>x.id === g.id) && p.push(g);
        if (!i) return {
            edges: p,
            nodes: s
        };
        const m = await i({
            nodes: s,
            edges: p
        });
        return typeof m == "boolean" ? m ? {
            edges: p,
            nodes: s
        } : {
            edges: [],
            nodes: []
        } : m;
    }
    const Gc = (e, t = 0, n = 1)=>Math.min(Math.max(e, t), n), ml = (e = {
        x: 0,
        y: 0
    }, t, n)=>({
            x: Gc(e.x, t[0][0], t[1][0] - (n?.width ?? 0)),
            y: Gc(e.y, t[0][1], t[1][1] - (n?.height ?? 0))
        });
    function AD(e, t, n) {
        const { width: r, height: i } = os(n), { x: o, y: s } = n.internals.positionAbsolute;
        return ml(e, [
            [
                o,
                s
            ],
            [
                o + r,
                s + i
            ]
        ], t);
    }
    const qR = (e, t, n)=>e < t ? Gc(Math.abs(e - t), 1, t) / t : e > n ? -Gc(Math.abs(e - n), 1, t) / t : 0, FD = (e, t, n = 15, r = 40)=>{
        const i = qR(e.x, r, t.width - r) * n, o = qR(e.y, r, t.height - r) * n;
        return [
            i,
            o
        ];
    }, Ty = (e, t)=>({
            x: Math.min(e.x, t.x),
            y: Math.min(e.y, t.y),
            x2: Math.max(e.x2, t.x2),
            y2: Math.max(e.y2, t.y2)
        }), AN = ({ x: e, y: t, width: n, height: r })=>({
            x: e,
            y: t,
            x2: e + n,
            y2: t + r
        }), Py = ({ x: e, y: t, x2: n, y2: r })=>({
            x: e,
            y: t,
            width: n - e,
            height: r - t
        }), Qc = (e, t = [
        0,
        0
    ])=>{
        const { x: n, y: r } = aI(e) ? e.internals.positionAbsolute : Gf(e, t);
        return {
            x: n,
            y: r,
            width: e.measured?.width ?? e.width ?? e.initialWidth ?? 0,
            height: e.measured?.height ?? e.height ?? e.initialHeight ?? 0
        };
    }, qg = (e, t = [
        0,
        0
    ])=>{
        const { x: n, y: r } = aI(e) ? e.internals.positionAbsolute : Gf(e, t);
        return {
            x: n,
            y: r,
            x2: n + (e.measured?.width ?? e.width ?? e.initialWidth ?? 0),
            y2: r + (e.measured?.height ?? e.height ?? e.initialHeight ?? 0)
        };
    }, DD = (e, t)=>Py(Ty(AN(e), AN(t))), xf = (e, t)=>{
        const n = Math.max(0, Math.min(e.x + e.width, t.x + t.width) - Math.max(e.x, t.x)), r = Math.max(0, Math.min(e.y + e.height, t.y + t.height) - Math.max(e.y, t.y));
        return Math.ceil(n * r);
    }, BR = (e)=>Qi(e.width) && Qi(e.height) && Qi(e.x) && Qi(e.y), Qi = (e)=>!isNaN(e) && isFinite(e), rZ = (e, t)=>{}, Ay = (e, t = [
        1,
        1
    ])=>({
            x: t[0] * Math.round(e.x / t[0]),
            y: t[1] * Math.round(e.y / t[1])
        }), Jf = ({ x: e, y: t }, [n, r, i], o = !1, s = [
        1,
        1
    ])=>{
        const l = {
            x: (e - n) / i,
            y: (t - r) / i
        };
        return o ? Ay(l, s) : l;
    }, MD = ({ x: e, y: t }, [n, r, i])=>({
            x: e * i + n,
            y: t * i + r
        }), lI = (e, t, n, r, i, o)=>{
        const s = t / (e.width * (1 + o)), l = n / (e.height * (1 + o)), u = Math.min(s, l), f = Gc(u, r, i), p = e.x + e.width / 2, m = e.y + e.height / 2, g = t / 2 - p * f, v = n / 2 - m * f;
        return {
            x: g,
            y: v,
            zoom: f
        };
    }, Bg = ()=>typeof navigator < "u" && navigator?.userAgent?.indexOf("Mac") >= 0;
    function Jc(e) {
        return e !== void 0 && e !== "parent";
    }
    function os(e) {
        return {
            width: e.measured?.width ?? e.width ?? e.initialWidth ?? 0,
            height: e.measured?.height ?? e.height ?? e.initialHeight ?? 0
        };
    }
    function LD(e) {
        return (e.measured?.width ?? e.width ?? e.initialWidth) !== void 0 && (e.measured?.height ?? e.height ?? e.initialHeight) !== void 0;
    }
    function $D(e, t = {
        width: 0,
        height: 0
    }, n, r, i) {
        const o = {
            ...e
        }, s = r.get(n);
        if (s) {
            const l = s.origin || i;
            o.x += s.internals.positionAbsolute.x - (t.width ?? 0) * l[0], o.y += s.internals.positionAbsolute.y - (t.height ?? 0) * l[1];
        }
        return o;
    }
    function zR(e, t) {
        if (e.size !== t.size) return !1;
        for (const n of e)if (!t.has(n)) return !1;
        return !0;
    }
    function Fd(e, { snapGrid: t = [
        0,
        0
    ], snapToGrid: n = !1, transform: r, containerBounds: i }) {
        const { x: o, y: s } = Qo(e), l = Jf({
            x: o - (i?.left ?? 0),
            y: s - (i?.top ?? 0)
        }, r), { x: u, y: f } = n ? Ay(l, t) : l;
        return {
            xSnapped: u,
            ySnapped: f,
            ...l
        };
    }
    const Fy = (e)=>({
            width: e.offsetWidth,
            height: e.offsetHeight
        }), qD = (e)=>e?.getRootNode?.() || window?.document, iZ = [
        "INPUT",
        "SELECT",
        "TEXTAREA"
    ];
    function FN(e) {
        const t = e.composedPath?.()?.[0] || e.target;
        return t?.nodeType !== 1 ? !1 : iZ.includes(t.nodeName) || t.hasAttribute("contenteditable") || !!t.closest(".nokey");
    }
    const BD = (e)=>"clientX" in e, Qo = (e, t)=>{
        const n = BD(e), r = n ? e.clientX : e.touches?.[0].clientX, i = n ? e.clientY : e.touches?.[0].clientY;
        return {
            x: r - (t?.left ?? 0),
            y: i - (t?.top ?? 0)
        };
    }, WR = (e, t, n, r, i)=>{
        const o = t.querySelectorAll(`.${e}`);
        return !o || !o.length ? null : Array.from(o).map((s)=>{
            const l = s.getBoundingClientRect();
            return {
                id: s.getAttribute("data-handleid"),
                type: e,
                nodeId: i,
                position: s.getAttribute("data-handlepos"),
                x: (l.left - n.left) / r,
                y: (l.top - n.top) / r,
                ...Fy(s)
            };
        });
    };
    function zD({ sourceX: e, sourceY: t, targetX: n, targetY: r, sourceControlX: i, sourceControlY: o, targetControlX: s, targetControlY: l }) {
        const u = e * .125 + i * .375 + s * .375 + n * .125, f = t * .125 + o * .375 + l * .375 + r * .125, p = Math.abs(u - e), m = Math.abs(f - t);
        return [
            u,
            f,
            p,
            m
        ];
    }
    function Uh(e, t) {
        return e >= 0 ? .5 * e : t * 25 * Math.sqrt(-e);
    }
    function VR({ pos: e, x1: t, y1: n, x2: r, y2: i, c: o }) {
        switch(e){
            case He.Left:
                return [
                    t - Uh(t - r, o),
                    n
                ];
            case He.Right:
                return [
                    t + Uh(r - t, o),
                    n
                ];
            case He.Top:
                return [
                    t,
                    n - Uh(n - i, o)
                ];
            case He.Bottom:
                return [
                    t,
                    n + Uh(i - n, o)
                ];
        }
    }
    function cI({ sourceX: e, sourceY: t, sourcePosition: n = He.Bottom, targetX: r, targetY: i, targetPosition: o = He.Top, curvature: s = .25 }) {
        const [l, u] = VR({
            pos: n,
            x1: e,
            y1: t,
            x2: r,
            y2: i,
            c: s
        }), [f, p] = VR({
            pos: o,
            x1: r,
            y1: i,
            x2: e,
            y2: t,
            c: s
        }), [m, g, v, x] = zD({
            sourceX: e,
            sourceY: t,
            targetX: r,
            targetY: i,
            sourceControlX: l,
            sourceControlY: u,
            targetControlX: f,
            targetControlY: p
        });
        return [
            `M${e},${t} C${l},${u} ${f},${p} ${r},${i}`,
            m,
            g,
            v,
            x
        ];
    }
    function WD({ sourceX: e, sourceY: t, targetX: n, targetY: r }) {
        const i = Math.abs(n - e) / 2, o = n < e ? n + i : n - i, s = Math.abs(r - t) / 2, l = r < t ? r + s : r - s;
        return [
            o,
            l,
            i,
            s
        ];
    }
    function oZ({ sourceNode: e, targetNode: t, selected: n = !1, zIndex: r = 0, elevateOnSelect: i = !1 }) {
        if (!i) return r;
        const o = n || t.selected || e.selected, s = Math.max(e.internals.z || 0, t.internals.z || 0, 1e3);
        return r + (o ? s : 0);
    }
    function sZ({ sourceNode: e, targetNode: t, width: n, height: r, transform: i }) {
        const o = Ty(qg(e), qg(t));
        o.x === o.x2 && (o.x2 += 1), o.y === o.y2 && (o.y2 += 1);
        const s = {
            x: -i[0] / i[2],
            y: -i[1] / i[2],
            width: n / i[2],
            height: r / i[2]
        };
        return xf(s, Py(o)) > 0;
    }
    const aZ = ({ source: e, sourceHandle: t, target: n, targetHandle: r })=>`xy-edge__${e}${t || ""}-${n}${r || ""}`, lZ = (e, t)=>t.some((n)=>n.source === e.source && n.target === e.target && (n.sourceHandle === e.sourceHandle || !n.sourceHandle && !e.sourceHandle) && (n.targetHandle === e.targetHandle || !n.targetHandle && !e.targetHandle)), cZ = (e, t)=>{
        if (!e.source || !e.target) return t;
        let n;
        return OD(e) ? n = {
            ...e
        } : n = {
            ...e,
            id: aZ(e)
        }, lZ(n, t) ? t : (n.sourceHandle === null && delete n.sourceHandle, n.targetHandle === null && delete n.targetHandle, t.concat(n));
    };
    function VD({ sourceX: e, sourceY: t, targetX: n, targetY: r }) {
        const [i, o, s, l] = WD({
            sourceX: e,
            sourceY: t,
            targetX: n,
            targetY: r
        });
        return [
            `M ${e},${t}L ${n},${r}`,
            i,
            o,
            s,
            l
        ];
    }
    const UR = {
        [He.Left]: {
            x: -1,
            y: 0
        },
        [He.Right]: {
            x: 1,
            y: 0
        },
        [He.Top]: {
            x: 0,
            y: -1
        },
        [He.Bottom]: {
            x: 0,
            y: 1
        }
    }, uZ = ({ source: e, sourcePosition: t = He.Bottom, target: n })=>t === He.Left || t === He.Right ? e.x < n.x ? {
            x: 1,
            y: 0
        } : {
            x: -1,
            y: 0
        } : e.y < n.y ? {
            x: 0,
            y: 1
        } : {
            x: 0,
            y: -1
        }, HR = (e, t)=>Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2));
    function dZ({ source: e, sourcePosition: t = He.Bottom, target: n, targetPosition: r = He.Top, center: i, offset: o }) {
        const s = UR[t], l = UR[r], u = {
            x: e.x + s.x * o,
            y: e.y + s.y * o
        }, f = {
            x: n.x + l.x * o,
            y: n.y + l.y * o
        }, p = uZ({
            source: u,
            sourcePosition: t,
            target: f
        }), m = p.x !== 0 ? "x" : "y", g = p[m];
        let v = [], x, b;
        const S = {
            x: 0,
            y: 0
        }, N = {
            x: 0,
            y: 0
        }, [_, I, C, A] = WD({
            sourceX: e.x,
            sourceY: e.y,
            targetX: n.x,
            targetY: n.y
        });
        if (s[m] * l[m] === -1) {
            x = i.x ?? _, b = i.y ?? I;
            const D = [
                {
                    x,
                    y: u.y
                },
                {
                    x,
                    y: f.y
                }
            ], O = [
                {
                    x: u.x,
                    y: b
                },
                {
                    x: f.x,
                    y: b
                }
            ];
            s[m] === g ? v = m === "x" ? D : O : v = m === "x" ? O : D;
        } else {
            const D = [
                {
                    x: u.x,
                    y: f.y
                }
            ], O = [
                {
                    x: f.x,
                    y: u.y
                }
            ];
            if (m === "x" ? v = s.x === g ? O : D : v = s.y === g ? D : O, t === r) {
                const L = Math.abs(e[m] - n[m]);
                if (L <= o) {
                    const P = Math.min(o - 1, o - L);
                    s[m] === g ? S[m] = (u[m] > e[m] ? -1 : 1) * P : N[m] = (f[m] > n[m] ? -1 : 1) * P;
                }
            }
            if (t !== r) {
                const L = m === "x" ? "y" : "x", P = s[m] === l[L], V = u[L] > f[L], z = u[L] < f[L];
                (s[m] === 1 && (!P && V || P && z) || s[m] !== 1 && (!P && z || P && V)) && (v = m === "x" ? D : O);
            }
            const E = {
                x: u.x + S.x,
                y: u.y + S.y
            }, F = {
                x: f.x + N.x,
                y: f.y + N.y
            }, j = Math.max(Math.abs(E.x - v[0].x), Math.abs(F.x - v[0].x)), M = Math.max(Math.abs(E.y - v[0].y), Math.abs(F.y - v[0].y));
            j >= M ? (x = (E.x + F.x) / 2, b = v[0].y) : (x = v[0].x, b = (E.y + F.y) / 2);
        }
        return [
            [
                e,
                {
                    x: u.x + S.x,
                    y: u.y + S.y
                },
                ...v,
                {
                    x: f.x + N.x,
                    y: f.y + N.y
                },
                n
            ],
            x,
            b,
            C,
            A
        ];
    }
    function fZ(e, t, n, r) {
        const i = Math.min(HR(e, t) / 2, HR(t, n) / 2, r), { x: o, y: s } = t;
        if (e.x === o && o === n.x || e.y === s && s === n.y) return `L${o} ${s}`;
        if (e.y === s) {
            const f = e.x < n.x ? -1 : 1, p = e.y < n.y ? 1 : -1;
            return `L ${o + i * f},${s}Q ${o},${s} ${o},${s + i * p}`;
        }
        const l = e.x < n.x ? 1 : -1, u = e.y < n.y ? -1 : 1;
        return `L ${o},${s + i * u}Q ${o},${s} ${o + i * l},${s}`;
    }
    function DN({ sourceX: e, sourceY: t, sourcePosition: n = He.Bottom, targetX: r, targetY: i, targetPosition: o = He.Top, borderRadius: s = 5, centerX: l, centerY: u, offset: f = 20 }) {
        const [p, m, g, v, x] = dZ({
            source: {
                x: e,
                y: t
            },
            sourcePosition: n,
            target: {
                x: r,
                y: i
            },
            targetPosition: o,
            center: {
                x: l,
                y: u
            },
            offset: f
        });
        return [
            p.reduce((S, N, _)=>{
                let I = "";
                return _ > 0 && _ < p.length - 1 ? I = fZ(p[_ - 1], N, p[_ + 1], s) : I = `${_ === 0 ? "M" : "L"}${N.x} ${N.y}`, S += I, S;
            }, ""),
            m,
            g,
            v,
            x
        ];
    }
    function KR(e) {
        return e && !!(e.internals.handleBounds || e.handles?.length) && !!(e.measured.width || e.width || e.initialWidth);
    }
    function pZ(e) {
        const { sourceNode: t, targetNode: n } = e;
        if (!KR(t) || !KR(n)) return null;
        const r = t.internals.handleBounds || GR(t.handles), i = n.internals.handleBounds || GR(n.handles), o = QR(r?.source ?? [], e.sourceHandle), s = QR(e.connectionMode === Kc.Strict ? i?.target ?? [] : (i?.target ?? []).concat(i?.source ?? []), e.targetHandle);
        if (!o || !s) return e.onError?.("008", is.error008(o ? "target" : "source", {
            id: e.id,
            sourceHandle: e.sourceHandle,
            targetHandle: e.targetHandle
        })), null;
        const l = o?.position || He.Bottom, u = s?.position || He.Top, f = bf(t, o, l), p = bf(n, s, u);
        return {
            sourceX: f.x,
            sourceY: f.y,
            targetX: p.x,
            targetY: p.y,
            sourcePosition: l,
            targetPosition: u
        };
    }
    function GR(e) {
        if (!e) return null;
        const t = [], n = [];
        for (const r of e)r.width = r.width ?? 1, r.height = r.height ?? 1, r.type === "source" ? t.push(r) : r.type === "target" && n.push(r);
        return {
            source: t,
            target: n
        };
    }
    function bf(e, t, n = He.Left, r = !1) {
        const i = (t?.x ?? 0) + e.internals.positionAbsolute.x, o = (t?.y ?? 0) + e.internals.positionAbsolute.y, { width: s, height: l } = t ?? os(e);
        if (r) return {
            x: i + s / 2,
            y: o + l / 2
        };
        switch(t?.position ?? n){
            case He.Top:
                return {
                    x: i + s / 2,
                    y: o
                };
            case He.Right:
                return {
                    x: i + s,
                    y: o + l / 2
                };
            case He.Bottom:
                return {
                    x: i + s / 2,
                    y: o + l
                };
            case He.Left:
                return {
                    x: i,
                    y: o + l / 2
                };
        }
    }
    function QR(e, t) {
        return e && (t ? e.find((n)=>n.id === t) : e[0]) || null;
    }
    function MN(e, t) {
        return e ? typeof e == "string" ? e : `${t ? `${t}__` : ""}${Object.keys(e).sort().map((r)=>`${r}=${e[r]}`).join("&")}` : "";
    }
    function hZ(e, { id: t, defaultColor: n, defaultMarkerStart: r, defaultMarkerEnd: i }) {
        const o = new Set;
        return e.reduce((s, l)=>([
                l.markerStart || r,
                l.markerEnd || i
            ].forEach((u)=>{
                if (u && typeof u == "object") {
                    const f = MN(u, t);
                    o.has(f) || (s.push({
                        id: f,
                        color: u.color || n,
                        ...u
                    }), o.add(f));
                }
            }), s), []).sort((s, l)=>s.id.localeCompare(l.id));
    }
    const uI = {
        nodeOrigin: [
            0,
            0
        ],
        nodeExtent: yf,
        elevateNodesOnSelect: !0,
        defaults: {}
    }, mZ = {
        ...uI,
        checkEquality: !0
    };
    function dI(e, t) {
        const n = {
            ...e
        };
        for(const r in t)t[r] !== void 0 && (n[r] = t[r]);
        return n;
    }
    function gZ(e, t, n) {
        const r = dI(uI, n);
        for (const i of e.values())if (i.parentId) fI(i, e, t, r);
        else {
            const o = Gf(i, r.nodeOrigin), s = Jc(i.extent) ? i.extent : r.nodeExtent, l = ml(o, s, os(i));
            i.internals.positionAbsolute = l;
        }
    }
    function LN(e, t, n, r) {
        const i = dI(mZ, r), o = new Map(t), s = i?.elevateNodesOnSelect ? 1e3 : 0;
        t.clear(), n.clear();
        for (const l of e){
            let u = o.get(l.id);
            if (i.checkEquality && l === u?.internals.userNode) t.set(l.id, u);
            else {
                const f = Gf(l, i.nodeOrigin), p = Jc(l.extent) ? l.extent : i.nodeExtent, m = ml(f, p, os(l));
                u = {
                    ...i.defaults,
                    ...l,
                    measured: {
                        width: l.measured?.width,
                        height: l.measured?.height
                    },
                    internals: {
                        positionAbsolute: m,
                        handleBounds: l.measured ? u?.internals.handleBounds : void 0,
                        z: UD(l, s),
                        userNode: l
                    }
                }, t.set(l.id, u);
            }
            l.parentId && fI(u, t, n, r);
        }
    }
    function yZ(e, t) {
        if (!e.parentId) return;
        const n = t.get(e.parentId);
        n ? n.set(e.id, e) : t.set(e.parentId, new Map([
            [
                e.id,
                e
            ]
        ]));
    }
    function fI(e, t, n, r) {
        const { elevateNodesOnSelect: i, nodeOrigin: o, nodeExtent: s } = dI(uI, r), l = e.parentId, u = t.get(l);
        if (!u) {
            console.warn(`Parent node ${l} not found. Please make sure that parent nodes are in front of their child nodes in the nodes array.`);
            return;
        }
        yZ(e, n);
        const f = i ? 1e3 : 0, { x: p, y: m, z: g } = vZ(e, u, o, s, f), { positionAbsolute: v } = e.internals, x = p !== v.x || m !== v.y;
        (x || g !== e.internals.z) && t.set(e.id, {
            ...e,
            internals: {
                ...e.internals,
                positionAbsolute: x ? {
                    x: p,
                    y: m
                } : v,
                z: g
            }
        });
    }
    function UD(e, t) {
        return (Qi(e.zIndex) ? e.zIndex : 0) + (e.selected ? t : 0);
    }
    function vZ(e, t, n, r, i) {
        const { x: o, y: s } = t.internals.positionAbsolute, l = os(e), u = Gf(e, n), f = Jc(e.extent) ? ml(u, e.extent, l) : u;
        let p = ml({
            x: o + f.x,
            y: s + f.y
        }, r, l);
        e.extent === "parent" && (p = AD(p, l, t));
        const m = UD(e, i), g = t.internals.z ?? 0;
        return {
            x: p.x,
            y: p.y,
            z: g > m ? g : m
        };
    }
    function pI(e, t, n, r = [
        0,
        0
    ]) {
        const i = [], o = new Map;
        for (const s of e){
            const l = t.get(s.parentId);
            if (!l) continue;
            const u = o.get(s.parentId)?.expandedRect ?? Qc(l), f = DD(u, s.rect);
            o.set(s.parentId, {
                expandedRect: f,
                parent: l
            });
        }
        return o.size > 0 && o.forEach(({ expandedRect: s, parent: l }, u)=>{
            const f = l.internals.positionAbsolute, p = os(l), m = l.origin ?? r, g = s.x < f.x ? Math.round(Math.abs(f.x - s.x)) : 0, v = s.y < f.y ? Math.round(Math.abs(f.y - s.y)) : 0, x = Math.max(p.width, Math.round(s.width)), b = Math.max(p.height, Math.round(s.height)), S = (x - p.width) * m[0], N = (b - p.height) * m[1];
            (g > 0 || v > 0 || S || N) && (i.push({
                id: u,
                type: "position",
                position: {
                    x: l.position.x - g + S,
                    y: l.position.y - v + N
                }
            }), n.get(u)?.forEach((_)=>{
                e.some((I)=>I.id === _.id) || i.push({
                    id: _.id,
                    type: "position",
                    position: {
                        x: _.position.x + g,
                        y: _.position.y + v
                    }
                });
            })), (p.width < s.width || p.height < s.height || g || v) && i.push({
                id: u,
                type: "dimensions",
                setAttributes: !0,
                dimensions: {
                    width: x + (g ? m[0] * g - S : 0),
                    height: b + (v ? m[1] * v - N : 0)
                }
            });
        }), i;
    }
    function xZ(e, t, n, r, i, o) {
        const s = r?.querySelector(".xyflow__viewport");
        let l = !1;
        if (!s) return {
            changes: [],
            updatedInternals: l
        };
        const u = [], f = window.getComputedStyle(s), { m22: p } = new window.DOMMatrixReadOnly(f.transform), m = [];
        for (const g of e.values()){
            const v = t.get(g.id);
            if (!v) continue;
            if (v.hidden) {
                t.set(v.id, {
                    ...v,
                    internals: {
                        ...v.internals,
                        handleBounds: void 0
                    }
                }), l = !0;
                continue;
            }
            const x = Fy(g.nodeElement), b = v.measured.width !== x.width || v.measured.height !== x.height;
            if (!!(x.width && x.height && (b || !v.internals.handleBounds || g.force))) {
                const N = g.nodeElement.getBoundingClientRect(), _ = Jc(v.extent) ? v.extent : o;
                let { positionAbsolute: I } = v.internals;
                v.parentId && v.extent === "parent" ? I = AD(I, x, t.get(v.parentId)) : _ && (I = ml(I, _, x));
                const C = {
                    ...v,
                    measured: x,
                    internals: {
                        ...v.internals,
                        positionAbsolute: I,
                        handleBounds: {
                            source: WR("source", g.nodeElement, N, p, v.id),
                            target: WR("target", g.nodeElement, N, p, v.id)
                        }
                    }
                };
                t.set(v.id, C), v.parentId && fI(C, t, n, {
                    nodeOrigin: i
                }), l = !0, b && (u.push({
                    id: v.id,
                    type: "dimensions",
                    dimensions: x
                }), v.expandParent && v.parentId && m.push({
                    id: v.id,
                    parentId: v.parentId,
                    rect: Qc(C, i)
                }));
            }
        }
        if (m.length > 0) {
            const g = pI(m, t, n, i);
            u.push(...g);
        }
        return {
            changes: u,
            updatedInternals: l
        };
    }
    async function bZ({ delta: e, panZoom: t, transform: n, translateExtent: r, width: i, height: o }) {
        if (!t || !e.x && !e.y) return Promise.resolve(!1);
        const s = await t.setViewportConstrained({
            x: n[0] + e.x,
            y: n[1] + e.y,
            zoom: n[2]
        }, [
            [
                0,
                0
            ],
            [
                i,
                o
            ]
        ], r), l = !!s && (s.x !== n[0] || s.y !== n[1] || s.k !== n[2]);
        return Promise.resolve(l);
    }
    function JR(e, t, n, r, i, o) {
        let s = i;
        const l = r.get(s) || new Map;
        r.set(s, l.set(n, t)), s = `${i}-${e}`;
        const u = r.get(s) || new Map;
        if (r.set(s, u.set(n, t)), o) {
            s = `${i}-${e}-${o}`;
            const f = r.get(s) || new Map;
            r.set(s, f.set(n, t));
        }
    }
    function HD(e, t, n) {
        e.clear(), t.clear();
        for (const r of n){
            const { source: i, target: o, sourceHandle: s = null, targetHandle: l = null } = r, u = {
                edgeId: r.id,
                source: i,
                target: o,
                sourceHandle: s,
                targetHandle: l
            }, f = `${i}-${s}--${o}-${l}`, p = `${o}-${l}--${i}-${s}`;
            JR("source", u, p, e, i, s), JR("target", u, f, e, o, l), t.set(r.id, r);
        }
    }
    function KD(e, t) {
        if (!e.parentId) return !1;
        const n = t.get(e.parentId);
        return n ? n.selected ? !0 : KD(n, t) : !1;
    }
    function ZR(e, t, n) {
        let r = e;
        do {
            if (r?.matches?.(t)) return !0;
            if (r === n) return !1;
            r = r?.parentElement;
        }while (r);
        return !1;
    }
    function wZ(e, t, n, r) {
        const i = new Map;
        for (const [o, s] of e)if ((s.selected || s.id === r) && (!s.parentId || !KD(s, e)) && (s.draggable || t && typeof s.draggable > "u")) {
            const l = e.get(o);
            l && i.set(o, {
                id: o,
                position: l.position || {
                    x: 0,
                    y: 0
                },
                distance: {
                    x: n.x - l.internals.positionAbsolute.x,
                    y: n.y - l.internals.positionAbsolute.y
                },
                extent: l.extent,
                parentId: l.parentId,
                origin: l.origin,
                expandParent: l.expandParent,
                internals: {
                    positionAbsolute: l.internals.positionAbsolute || {
                        x: 0,
                        y: 0
                    }
                },
                measured: {
                    width: l.measured.width ?? 0,
                    height: l.measured.height ?? 0
                }
            });
        }
        return i;
    }
    function m0({ nodeId: e, dragItems: t, nodeLookup: n, dragging: r = !0 }) {
        const i = [];
        for (const [s, l] of t){
            const u = n.get(s)?.internals.userNode;
            u && i.push({
                ...u,
                position: l.position,
                dragging: r
            });
        }
        if (!e) return [
            i[0],
            i
        ];
        const o = n.get(e)?.internals.userNode;
        return [
            o ? {
                ...o,
                position: t.get(e)?.position || o.position,
                dragging: r
            } : i[0],
            i
        ];
    }
    function NZ({ onNodeMouseDown: e, getStoreItems: t, onDragStart: n, onDrag: r, onDragStop: i }) {
        let o = {
            x: null,
            y: null
        }, s = 0, l = new Map, u = !1, f = {
            x: 0,
            y: 0
        }, p = null, m = !1, g = null, v = !1;
        function x({ noDragClassName: S, handleSelector: N, domNode: _, isSelectable: I, nodeId: C, nodeClickDistance: A = 0 }) {
            g = oi(_);
            function R({ x: F, y: j }, M) {
                const { nodeLookup: L, nodeExtent: P, snapGrid: V, snapToGrid: z, nodeOrigin: Q, onNodeDrag: K, onSelectionDrag: H, onError: G, updateNodePositions: U } = t();
                o = {
                    x: F,
                    y: j
                };
                let Z = !1, J = {
                    x: 0,
                    y: 0,
                    x2: 0,
                    y2: 0
                };
                if (l.size > 1 && P) {
                    const X = Qf(l);
                    J = AN(X);
                }
                for (const [X, te] of l){
                    if (!L.has(X)) continue;
                    let ie = {
                        x: F - te.distance.x,
                        y: j - te.distance.y
                    };
                    z && (ie = Ay(ie, V));
                    let ae = [
                        [
                            P[0][0],
                            P[0][1]
                        ],
                        [
                            P[1][0],
                            P[1][1]
                        ]
                    ];
                    if (l.size > 1 && P && !te.extent) {
                        const { positionAbsolute: ve } = te.internals, be = ve.x - J.x + P[0][0], ge = ve.x + te.measured.width - J.x2 + P[1][0], we = ve.y - J.y + P[0][1], ke = ve.y + te.measured.height - J.y2 + P[1][1];
                        ae = [
                            [
                                be,
                                we
                            ],
                            [
                                ge,
                                ke
                            ]
                        ];
                    }
                    const { position: ce, positionAbsolute: de } = PD({
                        nodeId: X,
                        nextPosition: ie,
                        nodeLookup: L,
                        nodeExtent: ae,
                        nodeOrigin: Q,
                        onError: G
                    });
                    Z = Z || te.position.x !== ce.x || te.position.y !== ce.y, te.position = ce, te.internals.positionAbsolute = de;
                }
                if (Z && (U(l, !0), M && (r || K || !C && H))) {
                    const [X, te] = m0({
                        nodeId: C,
                        dragItems: l,
                        nodeLookup: L
                    });
                    r?.(M, l, X, te), K?.(M, X, te), C || H?.(M, te);
                }
            }
            async function D() {
                if (!p) return;
                const { transform: F, panBy: j, autoPanSpeed: M, autoPanOnNodeDrag: L } = t();
                if (!L) {
                    u = !1, cancelAnimationFrame(s);
                    return;
                }
                const [P, V] = FD(f, p, M);
                (P !== 0 || V !== 0) && (o.x = (o.x ?? 0) - P / F[2], o.y = (o.y ?? 0) - V / F[2], await j({
                    x: P,
                    y: V
                }) && R(o, null)), s = requestAnimationFrame(D);
            }
            function O(F) {
                const { nodeLookup: j, multiSelectionActive: M, nodesDraggable: L, transform: P, snapGrid: V, snapToGrid: z, selectNodesOnDrag: Q, onNodeDragStart: K, onSelectionDragStart: H, unselectNodesAndEdges: G } = t();
                m = !0, (!Q || !I) && !M && C && (j.get(C)?.selected || G()), I && Q && C && e?.(C);
                const U = Fd(F.sourceEvent, {
                    transform: P,
                    snapGrid: V,
                    snapToGrid: z,
                    containerBounds: p
                });
                if (o = U, l = wZ(j, L, U, C), l.size > 0 && (n || K || !C && H)) {
                    const [Z, J] = m0({
                        nodeId: C,
                        dragItems: l,
                        nodeLookup: j
                    });
                    n?.(F.sourceEvent, l, Z, J), K?.(F.sourceEvent, Z, J), C || H?.(F.sourceEvent, J);
                }
            }
            const E = fD().clickDistance(A).on("start", (F)=>{
                const { domNode: j, nodeDragThreshold: M, transform: L, snapGrid: P, snapToGrid: V } = t();
                p = j?.getBoundingClientRect() || null, v = !1, M === 0 && O(F), o = Fd(F.sourceEvent, {
                    transform: L,
                    snapGrid: P,
                    snapToGrid: V,
                    containerBounds: p
                }), f = Qo(F.sourceEvent, p);
            }).on("drag", (F)=>{
                const { autoPanOnNodeDrag: j, transform: M, snapGrid: L, snapToGrid: P, nodeDragThreshold: V, nodeLookup: z } = t(), Q = Fd(F.sourceEvent, {
                    transform: M,
                    snapGrid: L,
                    snapToGrid: P,
                    containerBounds: p
                });
                if ((F.sourceEvent.type === "touchmove" && F.sourceEvent.touches.length > 1 || C && !z.has(C)) && (v = !0), !v) {
                    if (!u && j && m && (u = !0, D()), !m) {
                        const K = Q.xSnapped - (o.x ?? 0), H = Q.ySnapped - (o.y ?? 0);
                        Math.sqrt(K * K + H * H) > V && O(F);
                    }
                    (o.x !== Q.xSnapped || o.y !== Q.ySnapped) && l && m && (f = Qo(F.sourceEvent, p), R(Q, F.sourceEvent));
                }
            }).on("end", (F)=>{
                if (!(!m || v) && (u = !1, m = !1, cancelAnimationFrame(s), l.size > 0)) {
                    const { nodeLookup: j, updateNodePositions: M, onNodeDragStop: L, onSelectionDragStop: P } = t();
                    if (M(l, !1), i || L || !C && P) {
                        const [V, z] = m0({
                            nodeId: C,
                            dragItems: l,
                            nodeLookup: j,
                            dragging: !1
                        });
                        i?.(F.sourceEvent, l, V, z), L?.(F.sourceEvent, V, z), C || P?.(F.sourceEvent, z);
                    }
                }
            }).filter((F)=>{
                const j = F.target;
                return !F.button && (!S || !ZR(j, `.${S}`, _)) && (!N || ZR(j, N, _));
            });
            g.call(E);
        }
        function b() {
            g?.on(".drag", null);
        }
        return {
            update: x,
            destroy: b
        };
    }
    function SZ(e, t, n) {
        const r = [], i = {
            x: e.x - n,
            y: e.y - n,
            width: n * 2,
            height: n * 2
        };
        for (const o of t.values())xf(i, Qc(o)) > 0 && r.push(o);
        return r;
    }
    const IZ = 250;
    function _Z(e, t, n, r) {
        let i = [], o = 1 / 0;
        const s = SZ(e, n, t + IZ);
        for (const l of s){
            const u = [
                ...l.internals.handleBounds?.source ?? [],
                ...l.internals.handleBounds?.target ?? []
            ];
            for (const f of u){
                if (r.nodeId === f.nodeId && r.type === f.type && r.id === f.id) continue;
                const { x: p, y: m } = bf(l, f, f.position, !0), g = Math.sqrt(Math.pow(p - e.x, 2) + Math.pow(m - e.y, 2));
                g > t || (g < o ? (i = [
                    {
                        ...f,
                        x: p,
                        y: m
                    }
                ], o = g) : g === o && i.push({
                    ...f,
                    x: p,
                    y: m
                }));
            }
        }
        if (!i.length) return null;
        if (i.length > 1) {
            const l = r.type === "source" ? "target" : "source";
            return i.find((u)=>u.type === l) ?? i[0];
        }
        return i[0];
    }
    function GD(e, t, n, r, i, o = !1) {
        const s = r.get(e);
        if (!s) return null;
        const l = i === "strict" ? s.internals.handleBounds?.[t] : [
            ...s.internals.handleBounds?.source ?? [],
            ...s.internals.handleBounds?.target ?? []
        ], u = (n ? l?.find((f)=>f.id === n) : l?.[0]) ?? null;
        return u && o ? {
            ...u,
            ...bf(s, u, u.position, !0)
        } : u;
    }
    function QD(e, t) {
        return e || (t?.classList.contains("target") ? "target" : t?.classList.contains("source") ? "source" : null);
    }
    function EZ(e, t) {
        let n = null;
        return t ? n = !0 : e && !t && (n = !1), n;
    }
    const JD = ()=>!0;
    function kZ(e, { connectionMode: t, connectionRadius: n, handleId: r, nodeId: i, edgeUpdaterType: o, isTarget: s, domNode: l, nodeLookup: u, lib: f, autoPanOnConnect: p, flowId: m, panBy: g, cancelConnection: v, onConnectStart: x, onConnect: b, onConnectEnd: S, isValidConnection: N = JD, onReconnectEnd: _, updateConnection: I, getTransform: C, getFromHandle: A, autoPanSpeed: R }) {
        const D = qD(e.target);
        let O = 0, E;
        const { x: F, y: j } = Qo(e), M = D?.elementFromPoint(F, j), L = QD(o, M), P = l?.getBoundingClientRect();
        if (!P || !L) return;
        const V = GD(i, L, r, u, t);
        if (!V) return;
        let z = Qo(e, P), Q = !1, K = null, H = !1, G = null;
        function U() {
            if (!p || !P) return;
            const [de, ve] = FD(z, P, R);
            g({
                x: de,
                y: ve
            }), O = requestAnimationFrame(U);
        }
        const Z = {
            ...V,
            nodeId: i,
            type: L,
            position: V.position
        }, J = u.get(i), te = {
            inProgress: !0,
            isValid: null,
            from: bf(J, Z, He.Left, !0),
            fromHandle: Z,
            fromPosition: Z.position,
            fromNode: J,
            to: z,
            toHandle: null,
            toPosition: $R[Z.position],
            toNode: null
        };
        I(te);
        let ie = te;
        x?.(e, {
            nodeId: i,
            handleId: r,
            handleType: L
        });
        function ae(de) {
            if (!A() || !Z) {
                ce(de);
                return;
            }
            const ve = C();
            z = Qo(de, P), E = _Z(Jf(z, ve, !1, [
                1,
                1
            ]), n, u, Z), Q || (U(), Q = !0);
            const be = ZD(de, {
                handle: E,
                connectionMode: t,
                fromNodeId: i,
                fromHandleId: r,
                fromType: s ? "target" : "source",
                isValidConnection: N,
                doc: D,
                lib: f,
                flowId: m,
                nodeLookup: u
            });
            G = be.handleDomNode, K = be.connection, H = EZ(!!E, be.isValid);
            const ge = {
                ...ie,
                isValid: H,
                to: E && H ? MD({
                    x: E.x,
                    y: E.y
                }, ve) : z,
                toHandle: be.toHandle,
                toPosition: H && be.toHandle ? be.toHandle.position : $R[Z.position],
                toNode: be.toHandle ? u.get(be.toHandle.nodeId) : null
            };
            H && E && ie.toHandle && ge.toHandle && ie.toHandle.type === ge.toHandle.type && ie.toHandle.nodeId === ge.toHandle.nodeId && ie.toHandle.id === ge.toHandle.id && ie.to.x === ge.to.x && ie.to.y === ge.to.y || (I(ge), ie = ge);
        }
        function ce(de) {
            (E || G) && K && H && b?.(K);
            const { inProgress: ve, ...be } = ie, ge = {
                ...be,
                toPosition: ie.toHandle ? ie.toPosition : null
            };
            S?.(de, ge), o && _?.(de, ge), v(), cancelAnimationFrame(O), Q = !1, H = !1, K = null, G = null, D.removeEventListener("mousemove", ae), D.removeEventListener("mouseup", ce), D.removeEventListener("touchmove", ae), D.removeEventListener("touchend", ce);
        }
        D.addEventListener("mousemove", ae), D.addEventListener("mouseup", ce), D.addEventListener("touchmove", ae), D.addEventListener("touchend", ce);
    }
    function ZD(e, { handle: t, connectionMode: n, fromNodeId: r, fromHandleId: i, fromType: o, doc: s, lib: l, flowId: u, isValidConnection: f = JD, nodeLookup: p }) {
        const m = o === "target", g = t ? s.querySelector(`.${l}-flow__handle[data-id="${u}-${t?.nodeId}-${t?.id}-${t?.type}"]`) : null, { x: v, y: x } = Qo(e), b = s.elementFromPoint(v, x), S = b?.classList.contains(`${l}-flow__handle`) ? b : g, N = {
            handleDomNode: S,
            isValid: !1,
            connection: null,
            toHandle: null
        };
        if (S) {
            const _ = QD(void 0, S), I = S.getAttribute("data-nodeid"), C = S.getAttribute("data-handleid"), A = S.classList.contains("connectable"), R = S.classList.contains("connectableend");
            if (!I || !_) return N;
            const D = {
                source: m ? I : r,
                sourceHandle: m ? C : i,
                target: m ? r : I,
                targetHandle: m ? i : C
            };
            N.connection = D;
            const E = A && R && (n === Kc.Strict ? m && _ === "source" || !m && _ === "target" : I !== r || C !== i);
            N.isValid = E && f(D), N.toHandle = GD(I, _, C, p, n, !1);
        }
        return N;
    }
    const $N = {
        onPointerDown: kZ,
        isValid: ZD
    };
    function CZ({ domNode: e, panZoom: t, getTransform: n, getViewScale: r }) {
        const i = oi(e);
        function o({ translateExtent: l, width: u, height: f, zoomStep: p = 10, pannable: m = !0, zoomable: g = !0, inversePan: v = !1 }) {
            const x = (I)=>{
                const C = n();
                if (I.sourceEvent.type !== "wheel" || !t) return;
                const A = -I.sourceEvent.deltaY * (I.sourceEvent.deltaMode === 1 ? .05 : I.sourceEvent.deltaMode ? 1 : .002) * p, R = C[2] * Math.pow(2, A);
                t.scaleTo(R);
            };
            let b = [
                0,
                0
            ];
            const S = (I)=>{
                (I.sourceEvent.type === "mousedown" || I.sourceEvent.type === "touchstart") && (b = [
                    I.sourceEvent.clientX ?? I.sourceEvent.touches[0].clientX,
                    I.sourceEvent.clientY ?? I.sourceEvent.touches[0].clientY
                ]);
            }, N = (I)=>{
                const C = n();
                if (I.sourceEvent.type !== "mousemove" && I.sourceEvent.type !== "touchmove" || !t) return;
                const A = [
                    I.sourceEvent.clientX ?? I.sourceEvent.touches[0].clientX,
                    I.sourceEvent.clientY ?? I.sourceEvent.touches[0].clientY
                ], R = [
                    A[0] - b[0],
                    A[1] - b[1]
                ];
                b = A;
                const D = r() * Math.max(C[2], Math.log(C[2])) * (v ? -1 : 1), O = {
                    x: C[0] - R[0] * D,
                    y: C[1] - R[1] * D
                }, E = [
                    [
                        0,
                        0
                    ],
                    [
                        u,
                        f
                    ]
                ];
                t.setViewportConstrained({
                    x: O.x,
                    y: O.y,
                    zoom: C[2]
                }, E, l);
            }, _ = kD().on("start", S).on("zoom", m ? N : null).on("zoom.wheel", g ? x : null);
            i.call(_, {});
        }
        function s() {
            i.on("zoom", null);
        }
        return {
            update: o,
            destroy: s,
            pointer: zi
        };
    }
    const jZ = (e, t)=>e.x !== t.x || e.y !== t.y || e.zoom !== t.k, Dy = (e)=>({
            x: e.x,
            y: e.y,
            zoom: e.k
        }), g0 = ({ x: e, y: t, zoom: n })=>Oy.translate(e, t).scale(n), gc = (e, t)=>e.target.closest(`.${t}`), YD = (e, t)=>t === 2 && Array.isArray(e) && e.includes(2), y0 = (e, t = 0, n = ()=>{})=>{
        const r = typeof t == "number" && t > 0;
        return r || n(), r ? e.transition().duration(t).on("end", n) : e;
    }, XD = (e)=>{
        const t = e.ctrlKey && Bg() ? 10 : 1;
        return -e.deltaY * (e.deltaMode === 1 ? .05 : e.deltaMode ? 1 : .002) * t;
    };
    function RZ({ zoomPanValues: e, noWheelClassName: t, d3Selection: n, d3Zoom: r, panOnScrollMode: i, panOnScrollSpeed: o, zoomOnPinch: s, onPanZoomStart: l, onPanZoom: u, onPanZoomEnd: f }) {
        return (p)=>{
            if (gc(p, t)) return !1;
            p.preventDefault(), p.stopImmediatePropagation();
            const m = n.property("__zoom").k || 1;
            if (p.ctrlKey && s) {
                const S = zi(p), N = XD(p), _ = m * Math.pow(2, N);
                r.scaleTo(n, _, S, p);
                return;
            }
            const g = p.deltaMode === 1 ? 20 : 1;
            let v = i === nl.Vertical ? 0 : p.deltaX * g, x = i === nl.Horizontal ? 0 : p.deltaY * g;
            !Bg() && p.shiftKey && i !== nl.Vertical && (v = p.deltaY * g, x = 0), r.translateBy(n, -(v / m) * o, -(x / m) * o, {
                internal: !0
            });
            const b = Dy(n.property("__zoom"));
            clearTimeout(e.panScrollTimeout), e.isPanScrolling || (e.isPanScrolling = !0, l?.(p, b)), e.isPanScrolling && (u?.(p, b), e.panScrollTimeout = setTimeout(()=>{
                f?.(p, b), e.isPanScrolling = !1;
            }, 150));
        };
    }
    function OZ({ noWheelClassName: e, preventScrolling: t, d3ZoomHandler: n }) {
        return function(r, i) {
            if (!t && r.type === "wheel" && !r.ctrlKey || gc(r, e)) return null;
            r.preventDefault(), n.call(this, r, i);
        };
    }
    function TZ({ zoomPanValues: e, onDraggingChange: t, onPanZoomStart: n }) {
        return (r)=>{
            if (r.sourceEvent?.internal) return;
            const i = Dy(r.transform);
            e.mouseButton = r.sourceEvent?.button || 0, e.isZoomingOrPanning = !0, e.prevViewport = i, r.sourceEvent?.type === "mousedown" && t(!0), n && n?.(r.sourceEvent, i);
        };
    }
    function PZ({ zoomPanValues: e, panOnDrag: t, onPaneContextMenu: n, onTransformChange: r, onPanZoom: i }) {
        return (o)=>{
            e.usedRightMouseButton = !!(n && YD(t, e.mouseButton ?? 0)), o.sourceEvent?.sync || r([
                o.transform.x,
                o.transform.y,
                o.transform.k
            ]), i && !o.sourceEvent?.internal && i?.(o.sourceEvent, Dy(o.transform));
        };
    }
    function AZ({ zoomPanValues: e, panOnDrag: t, panOnScroll: n, onDraggingChange: r, onPanZoomEnd: i, onPaneContextMenu: o }) {
        return (s)=>{
            if (!s.sourceEvent?.internal && (e.isZoomingOrPanning = !1, o && YD(t, e.mouseButton ?? 0) && !e.usedRightMouseButton && s.sourceEvent && o(s.sourceEvent), e.usedRightMouseButton = !1, r(!1), i && jZ(e.prevViewport, s.transform))) {
                const l = Dy(s.transform);
                e.prevViewport = l, clearTimeout(e.timerId), e.timerId = setTimeout(()=>{
                    i?.(s.sourceEvent, l);
                }, n ? 150 : 0);
            }
        };
    }
    function FZ({ zoomActivationKeyPressed: e, zoomOnScroll: t, zoomOnPinch: n, panOnDrag: r, panOnScroll: i, zoomOnDoubleClick: o, userSelectionActive: s, noWheelClassName: l, noPanClassName: u, lib: f }) {
        return (p)=>{
            const m = e || t, g = n && p.ctrlKey;
            if (p.button === 1 && p.type === "mousedown" && (gc(p, `${f}-flow__node`) || gc(p, `${f}-flow__edge`))) return !0;
            if (!r && !m && !i && !o && !n || s || gc(p, l) && p.type === "wheel" || gc(p, u) && (p.type !== "wheel" || i && p.type === "wheel" && !e) || !n && p.ctrlKey && p.type === "wheel") return !1;
            if (!n && p.type === "touchstart" && p.touches?.length > 1) return p.preventDefault(), !1;
            if (!m && !i && !g && p.type === "wheel" || !r && (p.type === "mousedown" || p.type === "touchstart") || Array.isArray(r) && !r.includes(p.button) && p.type === "mousedown") return !1;
            const v = Array.isArray(r) && r.includes(p.button) || !p.button || p.button <= 1;
            return (!p.ctrlKey || p.type === "wheel") && v;
        };
    }
    function DZ({ domNode: e, minZoom: t, maxZoom: n, paneClickDistance: r, translateExtent: i, viewport: o, onPanZoom: s, onPanZoomStart: l, onPanZoomEnd: u, onDraggingChange: f }) {
        const p = {
            isZoomingOrPanning: !1,
            usedRightMouseButton: !1,
            prevViewport: {
                x: 0,
                y: 0,
                zoom: 0
            },
            mouseButton: 0,
            timerId: void 0,
            panScrollTimeout: void 0,
            isPanScrolling: !1
        }, m = e.getBoundingClientRect(), g = kD().clickDistance(!Qi(r) || r < 0 ? 0 : r).scaleExtent([
            t,
            n
        ]).translateExtent(i), v = oi(e).call(g);
        I({
            x: o.x,
            y: o.y,
            zoom: Gc(o.zoom, t, n)
        }, [
            [
                0,
                0
            ],
            [
                m.width,
                m.height
            ]
        ], i);
        const x = v.on("wheel.zoom"), b = v.on("dblclick.zoom");
        g.wheelDelta(XD);
        function S(M, L) {
            return v ? new Promise((P)=>{
                g?.transform(y0(v, L?.duration, ()=>P(!0)), M);
            }) : Promise.resolve(!1);
        }
        function N({ noWheelClassName: M, noPanClassName: L, onPaneContextMenu: P, userSelectionActive: V, panOnScroll: z, panOnDrag: Q, panOnScrollMode: K, panOnScrollSpeed: H, preventScrolling: G, zoomOnPinch: U, zoomOnScroll: Z, zoomOnDoubleClick: J, zoomActivationKeyPressed: X, lib: te, onTransformChange: ie }) {
            V && !p.isZoomingOrPanning && _();
            const ce = z && !X && !V ? RZ({
                zoomPanValues: p,
                noWheelClassName: M,
                d3Selection: v,
                d3Zoom: g,
                panOnScrollMode: K,
                panOnScrollSpeed: H,
                zoomOnPinch: U,
                onPanZoomStart: l,
                onPanZoom: s,
                onPanZoomEnd: u
            }) : OZ({
                noWheelClassName: M,
                preventScrolling: G,
                d3ZoomHandler: x
            });
            if (v.on("wheel.zoom", ce, {
                passive: !1
            }), !V) {
                const ve = TZ({
                    zoomPanValues: p,
                    onDraggingChange: f,
                    onPanZoomStart: l
                });
                g.on("start", ve);
                const be = PZ({
                    zoomPanValues: p,
                    panOnDrag: Q,
                    onPaneContextMenu: !!P,
                    onPanZoom: s,
                    onTransformChange: ie
                });
                g.on("zoom", be);
                const ge = AZ({
                    zoomPanValues: p,
                    panOnDrag: Q,
                    panOnScroll: z,
                    onPaneContextMenu: P,
                    onPanZoomEnd: u,
                    onDraggingChange: f
                });
                g.on("end", ge);
            }
            const de = FZ({
                zoomActivationKeyPressed: X,
                panOnDrag: Q,
                zoomOnScroll: Z,
                panOnScroll: z,
                zoomOnDoubleClick: J,
                zoomOnPinch: U,
                userSelectionActive: V,
                noPanClassName: L,
                noWheelClassName: M,
                lib: te
            });
            g.filter(de), J ? v.on("dblclick.zoom", b) : v.on("dblclick.zoom", null);
        }
        function _() {
            g.on("zoom", null);
        }
        async function I(M, L, P) {
            const V = g0(M), z = g?.constrain()(V, L, P);
            return z && await S(z), new Promise((Q)=>Q(z));
        }
        async function C(M, L) {
            const P = g0(M);
            return await S(P, L), new Promise((V)=>V(P));
        }
        function A(M) {
            if (v) {
                const L = g0(M), P = v.property("__zoom");
                (P.k !== M.zoom || P.x !== M.x || P.y !== M.y) && g?.transform(v, L, null, {
                    sync: !0
                });
            }
        }
        function R() {
            const M = v ? ED(v.node()) : {
                x: 0,
                y: 0,
                k: 1
            };
            return {
                x: M.x,
                y: M.y,
                zoom: M.k
            };
        }
        function D(M, L) {
            return v ? new Promise((P)=>{
                g?.scaleTo(y0(v, L?.duration, ()=>P(!0)), M);
            }) : Promise.resolve(!1);
        }
        function O(M, L) {
            return v ? new Promise((P)=>{
                g?.scaleBy(y0(v, L?.duration, ()=>P(!0)), M);
            }) : Promise.resolve(!1);
        }
        function E(M) {
            g?.scaleExtent(M);
        }
        function F(M) {
            g?.translateExtent(M);
        }
        function j(M) {
            const L = !Qi(M) || M < 0 ? 0 : M;
            g?.clickDistance(L);
        }
        return {
            update: N,
            destroy: _,
            setViewport: C,
            setViewportConstrained: I,
            getViewport: R,
            scaleTo: D,
            scaleBy: O,
            setScaleExtent: E,
            setTranslateExtent: F,
            syncViewport: A,
            setClickDistance: j
        };
    }
    var Dd;
    (function(e) {
        e.Line = "line", e.Handle = "handle";
    })(Dd || (Dd = {}));
    function MZ({ width: e, prevWidth: t, height: n, prevHeight: r, affectsX: i, affectsY: o }) {
        const s = e - t, l = n - r, u = [
            s > 0 ? 1 : s < 0 ? -1 : 0,
            l > 0 ? 1 : l < 0 ? -1 : 0
        ];
        return s && i && (u[0] = u[0] * -1), l && o && (u[1] = u[1] * -1), u;
    }
    function LZ(e) {
        const t = e.includes("right") || e.includes("left"), n = e.includes("bottom") || e.includes("top"), r = e.includes("left"), i = e.includes("top");
        return {
            isHorizontal: t,
            isVertical: n,
            affectsX: r,
            affectsY: i
        };
    }
    function Ps(e, t) {
        return Math.max(0, t - e);
    }
    function As(e, t) {
        return Math.max(0, e - t);
    }
    function Hh(e, t, n) {
        return Math.max(0, t - e, e - n);
    }
    function YR(e, t) {
        return e ? !t : t;
    }
    function $Z(e, t, n, r, i, o, s, l) {
        let { affectsX: u, affectsY: f } = t;
        const { isHorizontal: p, isVertical: m } = t, g = p && m, { xSnapped: v, ySnapped: x } = n, { minWidth: b, maxWidth: S, minHeight: N, maxHeight: _ } = r, { x: I, y: C, width: A, height: R, aspectRatio: D } = e;
        let O = Math.floor(p ? v - e.pointerX : 0), E = Math.floor(m ? x - e.pointerY : 0);
        const F = A + (u ? -O : O), j = R + (f ? -E : E), M = -o[0] * A, L = -o[1] * R;
        let P = Hh(F, b, S), V = Hh(j, N, _);
        if (s) {
            let K = 0, H = 0;
            u && O < 0 ? K = Ps(I + O + M, s[0][0]) : !u && O > 0 && (K = As(I + F + M, s[1][0])), f && E < 0 ? H = Ps(C + E + L, s[0][1]) : !f && E > 0 && (H = As(C + j + L, s[1][1])), P = Math.max(P, K), V = Math.max(V, H);
        }
        if (l) {
            let K = 0, H = 0;
            u && O > 0 ? K = As(I + O, l[0][0]) : !u && O < 0 && (K = Ps(I + F, l[1][0])), f && E > 0 ? H = As(C + E, l[0][1]) : !f && E < 0 && (H = Ps(C + j, l[1][1])), P = Math.max(P, K), V = Math.max(V, H);
        }
        if (i) {
            if (p) {
                const K = Hh(F / D, N, _) * D;
                if (P = Math.max(P, K), s) {
                    let H = 0;
                    !u && !f || u && !f && g ? H = As(C + L + F / D, s[1][1]) * D : H = Ps(C + L + (u ? O : -O) / D, s[0][1]) * D, P = Math.max(P, H);
                }
                if (l) {
                    let H = 0;
                    !u && !f || u && !f && g ? H = Ps(C + F / D, l[1][1]) * D : H = As(C + (u ? O : -O) / D, l[0][1]) * D, P = Math.max(P, H);
                }
            }
            if (m) {
                const K = Hh(j * D, b, S) / D;
                if (V = Math.max(V, K), s) {
                    let H = 0;
                    !u && !f || f && !u && g ? H = As(I + j * D + M, s[1][0]) / D : H = Ps(I + (f ? E : -E) * D + M, s[0][0]) / D, V = Math.max(V, H);
                }
                if (l) {
                    let H = 0;
                    !u && !f || f && !u && g ? H = Ps(I + j * D, l[1][0]) / D : H = As(I + (f ? E : -E) * D, l[0][0]) / D, V = Math.max(V, H);
                }
            }
        }
        E = E + (E < 0 ? V : -V), O = O + (O < 0 ? P : -P), i && (g ? F > j * D ? E = (YR(u, f) ? -O : O) / D : O = (YR(u, f) ? -E : E) * D : p ? (E = O / D, f = u) : (O = E * D, u = f));
        const z = u ? I + O : I, Q = f ? C + E : C;
        return {
            width: A + (u ? -O : O),
            height: R + (f ? -E : E),
            x: o[0] * O * (u ? -1 : 1) + z,
            y: o[1] * E * (f ? -1 : 1) + Q
        };
    }
    const eM = {
        width: 0,
        height: 0,
        x: 0,
        y: 0
    }, qZ = {
        ...eM,
        pointerX: 0,
        pointerY: 0,
        aspectRatio: 1
    };
    function BZ(e) {
        return [
            [
                0,
                0
            ],
            [
                e.measured.width,
                e.measured.height
            ]
        ];
    }
    function zZ(e, t, n) {
        const r = t.position.x + e.position.x, i = t.position.y + e.position.y, o = e.measured.width ?? 0, s = e.measured.height ?? 0, l = n[0] * o, u = n[1] * s;
        return [
            [
                r - l,
                i - u
            ],
            [
                r + o - l,
                i + s - u
            ]
        ];
    }
    function WZ({ domNode: e, nodeId: t, getStoreItems: n, onChange: r, onEnd: i }) {
        const o = oi(e);
        function s({ controlPosition: u, boundaries: f, keepAspectRatio: p, onResizeStart: m, onResize: g, onResizeEnd: v, shouldResize: x }) {
            let b = {
                ...eM
            }, S = {
                ...qZ
            };
            const N = LZ(u);
            let _, I = null, C = [], A, R, D;
            const O = fD().on("start", (E)=>{
                const { nodeLookup: F, transform: j, snapGrid: M, snapToGrid: L, nodeOrigin: P, paneDomNode: V } = n();
                if (_ = F.get(t), !_) return;
                I = V?.getBoundingClientRect() ?? null;
                const { xSnapped: z, ySnapped: Q } = Fd(E.sourceEvent, {
                    transform: j,
                    snapGrid: M,
                    snapToGrid: L,
                    containerBounds: I
                });
                b = {
                    width: _.measured.width ?? 0,
                    height: _.measured.height ?? 0,
                    x: _.position.x ?? 0,
                    y: _.position.y ?? 0
                }, S = {
                    ...b,
                    pointerX: z,
                    pointerY: Q,
                    aspectRatio: b.width / b.height
                }, A = void 0, _.parentId && (_.extent === "parent" || _.expandParent) && (A = F.get(_.parentId), R = A && _.extent === "parent" ? BZ(A) : void 0), C = [], D = void 0;
                for (const [K, H] of F)if (H.parentId === t && (C.push({
                    id: K,
                    position: {
                        ...H.position
                    },
                    extent: H.extent
                }), H.extent === "parent" || H.expandParent)) {
                    const G = zZ(H, _, H.origin ?? P);
                    D ? D = [
                        [
                            Math.min(G[0][0], D[0][0]),
                            Math.min(G[0][1], D[0][1])
                        ],
                        [
                            Math.max(G[1][0], D[1][0]),
                            Math.max(G[1][1], D[1][1])
                        ]
                    ] : D = G;
                }
                m?.(E, {
                    ...b
                });
            }).on("drag", (E)=>{
                const { transform: F, snapGrid: j, snapToGrid: M, nodeOrigin: L } = n(), P = Fd(E.sourceEvent, {
                    transform: F,
                    snapGrid: j,
                    snapToGrid: M,
                    containerBounds: I
                }), V = [];
                if (!_) return;
                const { x: z, y: Q, width: K, height: H } = b, G = {}, U = _.origin ?? L, { width: Z, height: J, x: X, y: te } = $Z(S, N, P, f, p, U, R, D), ie = Z !== K, ae = J !== H, ce = X !== z && ie, de = te !== Q && ae;
                if (!ce && !de && !ie && !ae) return;
                if ((ce || de || U[0] === 1 || U[1] === 1) && (G.x = ce ? X : b.x, G.y = de ? te : b.y, b.x = G.x, b.y = G.y, C.length > 0)) {
                    const we = X - z, ke = te - Q;
                    for (const Re of C)Re.position = {
                        x: Re.position.x - we + U[0] * (Z - K),
                        y: Re.position.y - ke + U[1] * (J - H)
                    }, V.push(Re);
                }
                if ((ie || ae) && (G.width = ie ? Z : b.width, G.height = ae ? J : b.height, b.width = G.width, b.height = G.height), A && _.expandParent) {
                    const we = U[0] * (G.width ?? 0);
                    G.x && G.x < we && (b.x = we, S.x = S.x - (G.x - we));
                    const ke = U[1] * (G.height ?? 0);
                    G.y && G.y < ke && (b.y = ke, S.y = S.y - (G.y - ke));
                }
                const ve = MZ({
                    width: b.width,
                    prevWidth: K,
                    height: b.height,
                    prevHeight: H,
                    affectsX: N.affectsX,
                    affectsY: N.affectsY
                }), be = {
                    ...b,
                    direction: ve
                };
                x?.(E, be) !== !1 && (g?.(E, be), r(G, V));
            }).on("end", (E)=>{
                v?.(E, {
                    ...b
                }), i?.();
            });
            o.call(O);
        }
        function l() {
            o.on(".drag", null);
        }
        return {
            update: s,
            destroy: l
        };
    }
    const VZ = {}, XR = (e)=>{
        let t;
        const n = new Set, r = (p, m)=>{
            const g = typeof p == "function" ? p(t) : p;
            if (!Object.is(g, t)) {
                const v = t;
                t = m ?? (typeof g != "object" || g === null) ? g : Object.assign({}, t, g), n.forEach((x)=>x(t, v));
            }
        }, i = ()=>t, u = {
            setState: r,
            getState: i,
            getInitialState: ()=>f,
            subscribe: (p)=>(n.add(p), ()=>n.delete(p)),
            destroy: ()=>{
                (VZ ? "production" : void 0) !== "production" && console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."), n.clear();
            }
        }, f = t = e(r, i, u);
        return u;
    }, UZ = (e)=>e ? XR(e) : XR, { useDebugValue: HZ } = St, { useSyncExternalStoreWithSelector: KZ } = dq, GZ = (e)=>e;
    function tM(e, t = GZ, n) {
        const r = KZ(e.subscribe, e.getState, e.getServerState || e.getInitialState, t, n);
        return HZ(r), r;
    }
    const eO = (e, t)=>{
        const n = UZ(e), r = (i, o = t)=>tM(n, i, o);
        return Object.assign(r, n), r;
    }, QZ = (e, t)=>e ? eO(e, t) : eO;
    function dn(e, t) {
        if (Object.is(e, t)) return !0;
        if (typeof e != "object" || e === null || typeof t != "object" || t === null) return !1;
        if (e instanceof Map && t instanceof Map) {
            if (e.size !== t.size) return !1;
            for (const [r, i] of e)if (!Object.is(i, t.get(r))) return !1;
            return !0;
        }
        if (e instanceof Set && t instanceof Set) {
            if (e.size !== t.size) return !1;
            for (const r of e)if (!t.has(r)) return !1;
            return !0;
        }
        const n = Object.keys(e);
        if (n.length !== Object.keys(t).length) return !1;
        for (const r of n)if (!Object.prototype.hasOwnProperty.call(t, r) || !Object.is(e[r], t[r])) return !1;
        return !0;
    }
    const My = $.createContext(null), JZ = My.Provider, nM = is.error001();
    function wt(e, t) {
        const n = $.useContext(My);
        if (n === null) throw new Error(nM);
        return tM(n, e, t);
    }
    function tn() {
        const e = $.useContext(My);
        if (e === null) throw new Error(nM);
        return $.useMemo(()=>({
                getState: e.getState,
                setState: e.setState,
                subscribe: e.subscribe
            }), [
            e
        ]);
    }
    const tO = {
        display: "none"
    }, ZZ = {
        position: "absolute",
        width: 1,
        height: 1,
        margin: -1,
        border: 0,
        padding: 0,
        overflow: "hidden",
        clip: "rect(0px, 0px, 0px, 0px)",
        clipPath: "inset(100%)"
    }, rM = "react-flow__node-desc", iM = "react-flow__edge-desc", YZ = "react-flow__aria-live", XZ = (e)=>e.ariaLiveMessage;
    function eY({ rfId: e }) {
        const t = wt(XZ);
        return d.jsx("div", {
            id: `${YZ}-${e}`,
            "aria-live": "assertive",
            "aria-atomic": "true",
            style: ZZ,
            children: t
        });
    }
    function tY({ rfId: e, disableKeyboardA11y: t }) {
        return d.jsxs(d.Fragment, {
            children: [
                d.jsxs("div", {
                    id: `${rM}-${e}`,
                    style: tO,
                    children: [
                        "Press enter or space to select a node.",
                        !t && "You can then use the arrow keys to move the node around.",
                        " Press delete to remove it and escape to cancel.",
                        " "
                    ]
                }),
                d.jsx("div", {
                    id: `${iM}-${e}`,
                    style: tO,
                    children: "Press enter or space to select an edge. You can then press delete to remove it or escape to cancel."
                }),
                !t && d.jsx(eY, {
                    rfId: e
                })
            ]
        });
    }
    const nY = (e)=>e.userSelectionActive ? "none" : "all", Ly = $.forwardRef(({ position: e = "top-left", children: t, className: n, style: r, ...i }, o)=>{
        const s = wt(nY), l = `${e}`.split("-");
        return d.jsx("div", {
            className: Tn([
                "react-flow__panel",
                n,
                ...l
            ]),
            style: {
                ...r,
                pointerEvents: s
            },
            ref: o,
            ...i,
            children: t
        });
    });
    Ly.displayName = "Panel";
    function rY({ proOptions: e, position: t = "bottom-right" }) {
        return e?.hideAttribution ? null : d.jsx(Ly, {
            position: t,
            className: "react-flow__attribution",
            "data-message": "Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev",
            children: d.jsx("a", {
                href: "https://reactflow.dev",
                target: "_blank",
                rel: "noopener noreferrer",
                "aria-label": "React Flow attribution",
                children: "React Flow"
            })
        });
    }
    const iY = (e)=>{
        const t = [], n = [];
        for (const [, r] of e.nodeLookup)r.selected && t.push(r.internals.userNode);
        for (const [, r] of e.edgeLookup)r.selected && n.push(r);
        return {
            selectedNodes: t,
            selectedEdges: n
        };
    }, Kh = (e)=>e.id;
    function oY(e, t) {
        return dn(e.selectedNodes.map(Kh), t.selectedNodes.map(Kh)) && dn(e.selectedEdges.map(Kh), t.selectedEdges.map(Kh));
    }
    function sY({ onSelectionChange: e }) {
        const t = tn(), { selectedNodes: n, selectedEdges: r } = wt(iY, oY);
        return $.useEffect(()=>{
            const i = {
                nodes: n,
                edges: r
            };
            e?.(i), t.getState().onSelectionChangeHandlers.forEach((o)=>o(i));
        }, [
            n,
            r,
            e
        ]), null;
    }
    const aY = (e)=>!!e.onSelectionChangeHandlers;
    function lY({ onSelectionChange: e }) {
        const t = wt(aY);
        return e || t ? d.jsx(sY, {
            onSelectionChange: e
        }) : null;
    }
    const oM = [
        0,
        0
    ], cY = {
        x: 0,
        y: 0,
        zoom: 1
    }, uY = [
        "nodes",
        "edges",
        "defaultNodes",
        "defaultEdges",
        "onConnect",
        "onConnectStart",
        "onConnectEnd",
        "onClickConnectStart",
        "onClickConnectEnd",
        "nodesDraggable",
        "nodesConnectable",
        "nodesFocusable",
        "edgesFocusable",
        "edgesReconnectable",
        "elevateNodesOnSelect",
        "elevateEdgesOnSelect",
        "minZoom",
        "maxZoom",
        "nodeExtent",
        "onNodesChange",
        "onEdgesChange",
        "elementsSelectable",
        "connectionMode",
        "snapGrid",
        "snapToGrid",
        "translateExtent",
        "connectOnClick",
        "defaultEdgeOptions",
        "fitView",
        "fitViewOptions",
        "onNodesDelete",
        "onEdgesDelete",
        "onDelete",
        "onNodeDrag",
        "onNodeDragStart",
        "onNodeDragStop",
        "onSelectionDrag",
        "onSelectionDragStart",
        "onSelectionDragStop",
        "onMoveStart",
        "onMove",
        "onMoveEnd",
        "noPanClassName",
        "nodeOrigin",
        "autoPanOnConnect",
        "autoPanOnNodeDrag",
        "onError",
        "connectionRadius",
        "isValidConnection",
        "selectNodesOnDrag",
        "nodeDragThreshold",
        "onBeforeDelete",
        "debug",
        "autoPanSpeed",
        "paneClickDistance"
    ], nO = [
        ...uY,
        "rfId"
    ], dY = (e)=>({
            setNodes: e.setNodes,
            setEdges: e.setEdges,
            setMinZoom: e.setMinZoom,
            setMaxZoom: e.setMaxZoom,
            setTranslateExtent: e.setTranslateExtent,
            setNodeExtent: e.setNodeExtent,
            reset: e.reset,
            setDefaultNodesAndEdges: e.setDefaultNodesAndEdges,
            setPaneClickDistance: e.setPaneClickDistance
        }), rO = {
        translateExtent: yf,
        nodeOrigin: oM,
        minZoom: .5,
        maxZoom: 2,
        elementsSelectable: !0,
        noPanClassName: "nopan",
        rfId: "1",
        paneClickDistance: 0
    };
    function fY(e) {
        const { setNodes: t, setEdges: n, setMinZoom: r, setMaxZoom: i, setTranslateExtent: o, setNodeExtent: s, reset: l, setDefaultNodesAndEdges: u, setPaneClickDistance: f } = wt(dY, dn), p = tn();
        $.useEffect(()=>(u(e.defaultNodes, e.defaultEdges), ()=>{
                m.current = rO, l();
            }), []);
        const m = $.useRef(rO);
        return $.useEffect(()=>{
            for (const g of nO){
                const v = e[g], x = m.current[g];
                v !== x && (typeof e[g] > "u" || (g === "nodes" ? t(v) : g === "edges" ? n(v) : g === "minZoom" ? r(v) : g === "maxZoom" ? i(v) : g === "translateExtent" ? o(v) : g === "nodeExtent" ? s(v) : g === "paneClickDistance" ? f(v) : g === "fitView" ? p.setState({
                    fitViewOnInit: v
                }) : g === "fitViewOptions" ? p.setState({
                    fitViewOnInitOptions: v
                }) : p.setState({
                    [g]: v
                })));
            }
            m.current = e;
        }, nO.map((g)=>e[g])), null;
    }
    function iO() {
        return typeof window > "u" || !window.matchMedia ? null : window.matchMedia("(prefers-color-scheme: dark)");
    }
    function pY(e) {
        const [t, n] = $.useState(e === "system" ? null : e);
        return $.useEffect(()=>{
            if (e !== "system") {
                n(e);
                return;
            }
            const r = iO(), i = ()=>n(r?.matches ? "dark" : "light");
            return i(), r?.addEventListener("change", i), ()=>{
                r?.removeEventListener("change", i);
            };
        }, [
            e
        ]), t !== null ? t : iO()?.matches ? "dark" : "light";
    }
    const oO = typeof document < "u" ? document : null;
    function wf(e = null, t = {
        target: oO,
        actInsideInputWithModifier: !0
    }) {
        const [n, r] = $.useState(!1), i = $.useRef(!1), o = $.useRef(new Set([])), [s, l] = $.useMemo(()=>{
            if (e !== null) {
                const f = (Array.isArray(e) ? e : [
                    e
                ]).filter((m)=>typeof m == "string").map((m)=>m.replace("+", `
`).replace(`

`, `
+`).split(`
`)), p = f.reduce((m, g)=>m.concat(...g), []);
                return [
                    f,
                    p
                ];
            }
            return [
                [],
                []
            ];
        }, [
            e
        ]);
        return $.useEffect(()=>{
            const u = t?.target || oO;
            if (e !== null) {
                const f = (g)=>{
                    if (i.current = g.ctrlKey || g.metaKey || g.shiftKey, (!i.current || i.current && !t.actInsideInputWithModifier) && FN(g)) return !1;
                    const x = aO(g.code, l);
                    o.current.add(g[x]), sO(s, o.current, !1) && (g.preventDefault(), r(!0));
                }, p = (g)=>{
                    if ((!i.current || i.current && !t.actInsideInputWithModifier) && FN(g)) return !1;
                    const x = aO(g.code, l);
                    sO(s, o.current, !0) ? (r(!1), o.current.clear()) : o.current.delete(g[x]), g.key === "Meta" && o.current.clear(), i.current = !1;
                }, m = ()=>{
                    o.current.clear(), r(!1);
                };
                return u?.addEventListener("keydown", f), u?.addEventListener("keyup", p), window.addEventListener("blur", m), window.addEventListener("contextmenu", m), ()=>{
                    u?.removeEventListener("keydown", f), u?.removeEventListener("keyup", p), window.removeEventListener("blur", m), window.removeEventListener("contextmenu", m);
                };
            }
        }, [
            e,
            r
        ]), n;
    }
    function sO(e, t, n) {
        return e.filter((r)=>n || r.length === t.size).some((r)=>r.every((i)=>t.has(i)));
    }
    function aO(e, t) {
        return t.includes(e) ? "code" : "key";
    }
    const hY = ()=>{
        const e = tn();
        return $.useMemo(()=>({
                zoomIn: (t)=>{
                    const { panZoom: n } = e.getState();
                    return n ? n.scaleBy(1.2, {
                        duration: t?.duration
                    }) : Promise.resolve(!1);
                },
                zoomOut: (t)=>{
                    const { panZoom: n } = e.getState();
                    return n ? n.scaleBy(1 / 1.2, {
                        duration: t?.duration
                    }) : Promise.resolve(!1);
                },
                zoomTo: (t, n)=>{
                    const { panZoom: r } = e.getState();
                    return r ? r.scaleTo(t, {
                        duration: n?.duration
                    }) : Promise.resolve(!1);
                },
                getZoom: ()=>e.getState().transform[2],
                setViewport: async (t, n)=>{
                    const { transform: [r, i, o], panZoom: s } = e.getState();
                    return s ? (await s.setViewport({
                        x: t.x ?? r,
                        y: t.y ?? i,
                        zoom: t.zoom ?? o
                    }, {
                        duration: n?.duration
                    }), Promise.resolve(!0)) : Promise.resolve(!1);
                },
                getViewport: ()=>{
                    const [t, n, r] = e.getState().transform;
                    return {
                        x: t,
                        y: n,
                        zoom: r
                    };
                },
                fitView: (t)=>{
                    const { nodeLookup: n, minZoom: r, maxZoom: i, panZoom: o, domNode: s } = e.getState();
                    if (!o || !s) return Promise.resolve(!1);
                    const l = TN(n, t), { width: u, height: f } = Fy(s);
                    return PN({
                        nodes: l,
                        width: u,
                        height: f,
                        minZoom: r,
                        maxZoom: i,
                        panZoom: o
                    }, t);
                },
                setCenter: async (t, n, r)=>{
                    const { width: i, height: o, maxZoom: s, panZoom: l } = e.getState(), u = typeof r?.zoom < "u" ? r.zoom : s, f = i / 2 - t * u, p = o / 2 - n * u;
                    return l ? (await l.setViewport({
                        x: f,
                        y: p,
                        zoom: u
                    }, {
                        duration: r?.duration
                    }), Promise.resolve(!0)) : Promise.resolve(!1);
                },
                fitBounds: async (t, n)=>{
                    const { width: r, height: i, minZoom: o, maxZoom: s, panZoom: l } = e.getState(), u = lI(t, r, i, o, s, n?.padding ?? .1);
                    return l ? (await l.setViewport(u, {
                        duration: n?.duration
                    }), Promise.resolve(!0)) : Promise.resolve(!1);
                },
                screenToFlowPosition: (t, n = {})=>{
                    const { transform: r, snapGrid: i, snapToGrid: o, domNode: s } = e.getState();
                    if (!s) return t;
                    const { x: l, y: u } = s.getBoundingClientRect(), f = {
                        x: t.x - l,
                        y: t.y - u
                    }, p = n.snapGrid ?? i, m = n.snapToGrid ?? o;
                    return Jf(f, r, m, p);
                },
                flowToScreenPosition: (t)=>{
                    const { transform: n, domNode: r } = e.getState();
                    if (!r) return t;
                    const { x: i, y: o } = r.getBoundingClientRect(), s = MD(t, n);
                    return {
                        x: s.x + i,
                        y: s.y + o
                    };
                }
            }), []);
    };
    function sM(e, t) {
        const n = [], r = new Map, i = [];
        for (const o of e)if (o.type === "add") {
            i.push(o);
            continue;
        } else if (o.type === "remove" || o.type === "replace") r.set(o.id, [
            o
        ]);
        else {
            const s = r.get(o.id);
            s ? s.push(o) : r.set(o.id, [
                o
            ]);
        }
        for (const o of t){
            const s = r.get(o.id);
            if (!s) {
                n.push(o);
                continue;
            }
            if (s[0].type === "remove") continue;
            if (s[0].type === "replace") {
                n.push({
                    ...s[0].item
                });
                continue;
            }
            const l = {
                ...o
            };
            for (const u of s)mY(u, l);
            n.push(l);
        }
        return i.length && i.forEach((o)=>{
            o.index !== void 0 ? n.splice(o.index, 0, {
                ...o.item
            }) : n.push({
                ...o.item
            });
        }), n;
    }
    function mY(e, t) {
        switch(e.type){
            case "select":
                {
                    t.selected = e.selected;
                    break;
                }
            case "position":
                {
                    typeof e.position < "u" && (t.position = e.position), typeof e.dragging < "u" && (t.dragging = e.dragging);
                    break;
                }
            case "dimensions":
                {
                    typeof e.dimensions < "u" && (t.measured ??= {}, t.measured.width = e.dimensions.width, t.measured.height = e.dimensions.height, e.setAttributes && (t.width = e.dimensions.width, t.height = e.dimensions.height)), typeof e.resizing == "boolean" && (t.resizing = e.resizing);
                    break;
                }
        }
    }
    function gY(e, t) {
        return sM(e, t);
    }
    function yY(e, t) {
        return sM(e, t);
    }
    function Ba(e, t) {
        return {
            id: e,
            type: "select",
            selected: t
        };
    }
    function yc(e, t = new Set, n = !1) {
        const r = [];
        for (const [i, o] of e){
            const s = t.has(i);
            !(o.selected === void 0 && !s) && o.selected !== s && (n && (o.selected = s), r.push(Ba(o.id, s)));
        }
        return r;
    }
    function lO({ items: e = [], lookup: t }) {
        const n = [], r = new Map(e.map((i)=>[
                i.id,
                i
            ]));
        for (const [i, o] of e.entries()){
            const s = t.get(o.id), l = s?.internals?.userNode ?? s;
            l !== void 0 && l !== o && n.push({
                id: o.id,
                item: o,
                type: "replace"
            }), l === void 0 && n.push({
                item: o,
                type: "add",
                index: i
            });
        }
        for (const [i] of t)r.get(i) === void 0 && n.push({
            id: i,
            type: "remove"
        });
        return n;
    }
    function cO(e) {
        return {
            id: e.id,
            type: "remove"
        };
    }
    const uO = (e)=>XJ(e), vY = (e)=>OD(e);
    function aM(e) {
        return $.forwardRef(e);
    }
    const xY = typeof window < "u" ? $.useLayoutEffect : $.useEffect;
    function dO(e) {
        const [t, n] = $.useState(BigInt(0)), [r] = $.useState(()=>bY(()=>n((i)=>i + BigInt(1))));
        return xY(()=>{
            const i = r.get();
            i.length && (e(i), r.reset());
        }, [
            t
        ]), r;
    }
    function bY(e) {
        let t = [];
        return {
            get: ()=>t,
            reset: ()=>{
                t = [];
            },
            push: (n)=>{
                t.push(n), e();
            }
        };
    }
    const lM = $.createContext(null);
    function wY({ children: e }) {
        const t = tn(), n = $.useCallback((l)=>{
            const { nodes: u = [], setNodes: f, hasDefaultNodes: p, onNodesChange: m, nodeLookup: g } = t.getState();
            let v = u;
            for (const x of l)v = typeof x == "function" ? x(v) : x;
            p ? f(v) : m && m(lO({
                items: v,
                lookup: g
            }));
        }, []), r = dO(n), i = $.useCallback((l)=>{
            const { edges: u = [], setEdges: f, hasDefaultEdges: p, onEdgesChange: m, edgeLookup: g } = t.getState();
            let v = u;
            for (const x of l)v = typeof x == "function" ? x(v) : x;
            p ? f(v) : m && m(lO({
                items: v,
                lookup: g
            }));
        }, []), o = dO(i), s = $.useMemo(()=>({
                nodeQueue: r,
                edgeQueue: o
            }), []);
        return d.jsx(lM.Provider, {
            value: s,
            children: e
        });
    }
    function NY() {
        const e = $.useContext(lM);
        if (!e) throw new Error("useBatchContext must be used within a BatchProvider");
        return e;
    }
    const SY = (e)=>!!e.panZoom;
    function Zf() {
        const e = hY(), t = tn(), n = NY(), r = wt(SY), i = $.useMemo(()=>{
            const o = (m)=>t.getState().nodeLookup.get(m), s = (m)=>{
                n.nodeQueue.push(m);
            }, l = (m)=>{
                n.edgeQueue.push(m);
            }, u = (m)=>{
                const { nodeLookup: g, nodeOrigin: v } = t.getState(), x = uO(m) ? m : g.get(m.id), b = x.parentId ? $D(x.position, x.measured, x.parentId, g, v) : x.position, S = {
                    ...x,
                    position: b,
                    width: x.measured?.width ?? x.width,
                    height: x.measured?.height ?? x.height
                };
                return Qc(S);
            }, f = (m, g, v = {
                replace: !1
            })=>{
                s((x)=>x.map((b)=>{
                        if (b.id === m) {
                            const S = typeof g == "function" ? g(b) : g;
                            return v.replace && uO(S) ? S : {
                                ...b,
                                ...S
                            };
                        }
                        return b;
                    }));
            }, p = (m, g, v = {
                replace: !1
            })=>{
                l((x)=>x.map((b)=>{
                        if (b.id === m) {
                            const S = typeof g == "function" ? g(b) : g;
                            return v.replace && vY(S) ? S : {
                                ...b,
                                ...S
                            };
                        }
                        return b;
                    }));
            };
            return {
                getNodes: ()=>t.getState().nodes.map((m)=>({
                            ...m
                        })),
                getNode: (m)=>o(m)?.internals.userNode,
                getInternalNode: o,
                getEdges: ()=>{
                    const { edges: m = [] } = t.getState();
                    return m.map((g)=>({
                            ...g
                        }));
                },
                getEdge: (m)=>t.getState().edgeLookup.get(m),
                setNodes: s,
                setEdges: l,
                addNodes: (m)=>{
                    const g = Array.isArray(m) ? m : [
                        m
                    ];
                    n.nodeQueue.push((v)=>[
                            ...v,
                            ...g
                        ]);
                },
                addEdges: (m)=>{
                    const g = Array.isArray(m) ? m : [
                        m
                    ];
                    n.edgeQueue.push((v)=>[
                            ...v,
                            ...g
                        ]);
                },
                toObject: ()=>{
                    const { nodes: m = [], edges: g = [], transform: v } = t.getState(), [x, b, S] = v;
                    return {
                        nodes: m.map((N)=>({
                                ...N
                            })),
                        edges: g.map((N)=>({
                                ...N
                            })),
                        viewport: {
                            x,
                            y: b,
                            zoom: S
                        }
                    };
                },
                deleteElements: async ({ nodes: m = [], edges: g = [] })=>{
                    const { nodes: v, edges: x, onNodesDelete: b, onEdgesDelete: S, triggerNodeChanges: N, triggerEdgeChanges: _, onDelete: I, onBeforeDelete: C } = t.getState(), { nodes: A, edges: R } = await nZ({
                        nodesToRemove: m,
                        edgesToRemove: g,
                        nodes: v,
                        edges: x,
                        onBeforeDelete: C
                    }), D = R.length > 0, O = A.length > 0;
                    if (D) {
                        const E = R.map(cO);
                        S?.(R), _(E);
                    }
                    if (O) {
                        const E = A.map(cO);
                        b?.(A), N(E);
                    }
                    return (O || D) && I?.({
                        nodes: A,
                        edges: R
                    }), {
                        deletedNodes: A,
                        deletedEdges: R
                    };
                },
                getIntersectingNodes: (m, g = !0, v)=>{
                    const x = BR(m), b = x ? m : u(m), S = v !== void 0;
                    return b ? (v || t.getState().nodes).filter((N)=>{
                        const _ = t.getState().nodeLookup.get(N.id);
                        if (_ && !x && (N.id === m.id || !_.internals.positionAbsolute)) return !1;
                        const I = Qc(S ? N : _), C = xf(I, b);
                        return g && C > 0 || C >= b.width * b.height;
                    }) : [];
                },
                isNodeIntersecting: (m, g, v = !0)=>{
                    const b = BR(m) ? m : u(m);
                    if (!b) return !1;
                    const S = xf(b, g);
                    return v && S > 0 || S >= b.width * b.height;
                },
                updateNode: f,
                updateNodeData: (m, g, v = {
                    replace: !1
                })=>{
                    f(m, (x)=>{
                        const b = typeof g == "function" ? g(x) : g;
                        return v.replace ? {
                            ...x,
                            data: b
                        } : {
                            ...x,
                            data: {
                                ...x.data,
                                ...b
                            }
                        };
                    }, v);
                },
                updateEdge: p,
                updateEdgeData: (m, g, v = {
                    replace: !1
                })=>{
                    p(m, (x)=>{
                        const b = typeof g == "function" ? g(x) : g;
                        return v.replace ? {
                            ...x,
                            data: b
                        } : {
                            ...x,
                            data: {
                                ...x.data,
                                ...b
                            }
                        };
                    }, v);
                },
                getNodesBounds: (m)=>{
                    const { nodeLookup: g, nodeOrigin: v } = t.getState();
                    return eZ(m, {
                        nodeLookup: g,
                        nodeOrigin: v
                    });
                },
                getHandleConnections: ({ type: m, id: g, nodeId: v })=>Array.from(t.getState().connectionLookup.get(`${v}-${m}${g ? `-${g}` : ""}`)?.values() ?? []),
                getNodeConnections: ({ type: m, handleId: g, nodeId: v })=>Array.from(t.getState().connectionLookup.get(`${v}${m ? g ? `-${m}-${g}` : `-${m}` : ""}`)?.values() ?? [])
            };
        }, []);
        return $.useMemo(()=>({
                ...i,
                ...e,
                viewportInitialized: r
            }), [
            r
        ]);
    }
    const fO = (e)=>e.selected, IY = {
        actInsideInputWithModifier: !1
    }, _Y = typeof window < "u" ? window : void 0;
    function EY({ deleteKeyCode: e, multiSelectionKeyCode: t }) {
        const n = tn(), { deleteElements: r } = Zf(), i = wf(e, IY), o = wf(t, {
            target: _Y
        });
        $.useEffect(()=>{
            if (i) {
                const { edges: s, nodes: l } = n.getState();
                r({
                    nodes: l.filter(fO),
                    edges: s.filter(fO)
                }), n.setState({
                    nodesSelectionActive: !1
                });
            }
        }, [
            i
        ]), $.useEffect(()=>{
            n.setState({
                multiSelectionActive: o
            });
        }, [
            o
        ]);
    }
    function kY(e) {
        const t = tn();
        $.useEffect(()=>{
            const n = ()=>{
                if (!e.current) return !1;
                const r = Fy(e.current);
                (r.height === 0 || r.width === 0) && t.getState().onError?.("004", is.error004()), t.setState({
                    width: r.width || 500,
                    height: r.height || 500
                });
            };
            if (e.current) {
                n(), window.addEventListener("resize", n);
                const r = new ResizeObserver(()=>n());
                return r.observe(e.current), ()=>{
                    window.removeEventListener("resize", n), r && e.current && r.unobserve(e.current);
                };
            }
        }, []);
    }
    const $y = {
        position: "absolute",
        width: "100%",
        height: "100%",
        top: 0,
        left: 0
    }, CY = (e)=>({
            userSelectionActive: e.userSelectionActive,
            lib: e.lib
        });
    function jY({ onPaneContextMenu: e, zoomOnScroll: t = !0, zoomOnPinch: n = !0, panOnScroll: r = !1, panOnScrollSpeed: i = .5, panOnScrollMode: o = nl.Free, zoomOnDoubleClick: s = !0, panOnDrag: l = !0, defaultViewport: u, translateExtent: f, minZoom: p, maxZoom: m, zoomActivationKeyCode: g, preventScrolling: v = !0, children: x, noWheelClassName: b, noPanClassName: S, onViewportChange: N, isControlledViewport: _, paneClickDistance: I }) {
        const C = tn(), A = $.useRef(null), { userSelectionActive: R, lib: D } = wt(CY, dn), O = wf(g), E = $.useRef();
        kY(A);
        const F = $.useCallback((j)=>{
            N?.({
                x: j[0],
                y: j[1],
                zoom: j[2]
            }), _ || C.setState({
                transform: j
            });
        }, [
            N,
            _
        ]);
        return $.useEffect(()=>{
            if (A.current) {
                E.current = DZ({
                    domNode: A.current,
                    minZoom: p,
                    maxZoom: m,
                    translateExtent: f,
                    viewport: u,
                    paneClickDistance: I,
                    onDraggingChange: (P)=>C.setState({
                            paneDragging: P
                        }),
                    onPanZoomStart: (P, V)=>{
                        const { onViewportChangeStart: z, onMoveStart: Q } = C.getState();
                        Q?.(P, V), z?.(V);
                    },
                    onPanZoom: (P, V)=>{
                        const { onViewportChange: z, onMove: Q } = C.getState();
                        Q?.(P, V), z?.(V);
                    },
                    onPanZoomEnd: (P, V)=>{
                        const { onViewportChangeEnd: z, onMoveEnd: Q } = C.getState();
                        Q?.(P, V), z?.(V);
                    }
                });
                const { x: j, y: M, zoom: L } = E.current.getViewport();
                return C.setState({
                    panZoom: E.current,
                    transform: [
                        j,
                        M,
                        L
                    ],
                    domNode: A.current.closest(".react-flow")
                }), ()=>{
                    E.current?.destroy();
                };
            }
        }, []), $.useEffect(()=>{
            E.current?.update({
                onPaneContextMenu: e,
                zoomOnScroll: t,
                zoomOnPinch: n,
                panOnScroll: r,
                panOnScrollSpeed: i,
                panOnScrollMode: o,
                zoomOnDoubleClick: s,
                panOnDrag: l,
                zoomActivationKeyPressed: O,
                preventScrolling: v,
                noPanClassName: S,
                userSelectionActive: R,
                noWheelClassName: b,
                lib: D,
                onTransformChange: F
            });
        }, [
            e,
            t,
            n,
            r,
            i,
            o,
            s,
            l,
            O,
            v,
            S,
            R,
            b,
            D,
            F
        ]), d.jsx("div", {
            className: "react-flow__renderer",
            ref: A,
            style: $y,
            children: x
        });
    }
    const RY = (e)=>({
            userSelectionActive: e.userSelectionActive,
            userSelectionRect: e.userSelectionRect
        });
    function OY() {
        const { userSelectionActive: e, userSelectionRect: t } = wt(RY, dn);
        return e && t ? d.jsx("div", {
            className: "react-flow__selection react-flow__container",
            style: {
                width: t.width,
                height: t.height,
                transform: `translate(${t.x}px, ${t.y}px)`
            }
        }) : null;
    }
    const v0 = (e, t)=>(n)=>{
            n.target === t.current && e?.(n);
        }, TY = (e)=>({
            userSelectionActive: e.userSelectionActive,
            elementsSelectable: e.elementsSelectable,
            dragging: e.paneDragging
        });
    function PY({ isSelecting: e, selectionKeyPressed: t, selectionMode: n = vf.Full, panOnDrag: r, selectionOnDrag: i, onSelectionStart: o, onSelectionEnd: s, onPaneClick: l, onPaneContextMenu: u, onPaneScroll: f, onPaneMouseEnter: p, onPaneMouseMove: m, onPaneMouseLeave: g, children: v }) {
        const x = tn(), { userSelectionActive: b, elementsSelectable: S, dragging: N } = wt(TY, dn), _ = S && (e || b), I = $.useRef(null), C = $.useRef(), A = $.useRef(new Set), R = $.useRef(new Set), D = $.useRef(!1), O = $.useRef(!1), E = (z)=>{
            if (D.current) {
                D.current = !1;
                return;
            }
            l?.(z), x.getState().resetSelectedElements(), x.setState({
                nodesSelectionActive: !1
            });
        }, F = (z)=>{
            if (Array.isArray(r) && r?.includes(2)) {
                z.preventDefault();
                return;
            }
            u?.(z);
        }, j = f ? (z)=>f(z) : void 0, M = (z)=>{
            const { resetSelectedElements: Q, domNode: K } = x.getState();
            if (C.current = K?.getBoundingClientRect(), !S || !e || z.button !== 0 || z.target !== I.current || !C.current) return;
            z.target?.setPointerCapture?.(z.pointerId), O.current = !0, D.current = !1;
            const { x: H, y: G } = Qo(z.nativeEvent, C.current);
            Q(), x.setState({
                userSelectionRect: {
                    width: 0,
                    height: 0,
                    startX: H,
                    startY: G,
                    x: H,
                    y: G
                }
            }), o?.(z);
        }, L = (z)=>{
            const { userSelectionRect: Q, transform: K, nodeLookup: H, edgeLookup: G, connectionLookup: U, triggerNodeChanges: Z, triggerEdgeChanges: J, defaultEdgeOptions: X } = x.getState();
            if (!C.current || !Q) return;
            D.current = !0;
            const { x: te, y: ie } = Qo(z.nativeEvent, C.current), { startX: ae, startY: ce } = Q, de = {
                startX: ae,
                startY: ce,
                x: te < ae ? te : ae,
                y: ie < ce ? ie : ce,
                width: Math.abs(te - ae),
                height: Math.abs(ie - ce)
            }, ve = A.current, be = R.current;
            A.current = new Set(TD(H, de, K, n === vf.Partial, !0).map((we)=>we.id)), R.current = new Set;
            const ge = X?.selectable ?? !0;
            for (const we of A.current){
                const ke = U.get(we);
                if (ke) for (const { edgeId: Re } of ke.values()){
                    const $e = G.get(Re);
                    $e && ($e.selectable ?? ge) && R.current.add(Re);
                }
            }
            if (!zR(ve, A.current)) {
                const we = yc(H, A.current, !0);
                Z(we);
            }
            if (!zR(be, R.current)) {
                const we = yc(G, R.current);
                J(we);
            }
            x.setState({
                userSelectionRect: de,
                userSelectionActive: !0,
                nodesSelectionActive: !1
            });
        }, P = (z)=>{
            if (z.button !== 0 || !O.current) return;
            z.target?.releasePointerCapture?.(z.pointerId);
            const { userSelectionRect: Q } = x.getState();
            !b && Q && z.target === I.current && E?.(z), x.setState({
                userSelectionActive: !1,
                userSelectionRect: null,
                nodesSelectionActive: A.current.size > 0
            }), s?.(z), (t || i) && (D.current = !1), O.current = !1;
        }, V = r === !0 || Array.isArray(r) && r.includes(0);
        return d.jsxs("div", {
            className: Tn([
                "react-flow__pane",
                {
                    draggable: V,
                    dragging: N,
                    selection: e
                }
            ]),
            onClick: _ ? void 0 : v0(E, I),
            onContextMenu: v0(F, I),
            onWheel: v0(j, I),
            onPointerEnter: _ ? void 0 : p,
            onPointerDown: _ ? M : m,
            onPointerMove: _ ? L : m,
            onPointerUp: _ ? P : void 0,
            onPointerLeave: g,
            ref: I,
            style: $y,
            children: [
                v,
                d.jsx(OY, {})
            ]
        });
    }
    function qN({ id: e, store: t, unselect: n = !1, nodeRef: r }) {
        const { addSelectedNodes: i, unselectNodesAndEdges: o, multiSelectionActive: s, nodeLookup: l, onError: u } = t.getState(), f = l.get(e);
        if (!f) {
            u?.("012", is.error012(e));
            return;
        }
        t.setState({
            nodesSelectionActive: !1
        }), f.selected ? (n || f.selected && s) && (o({
            nodes: [
                f
            ],
            edges: []
        }), requestAnimationFrame(()=>r?.current?.blur())) : i([
            e
        ]);
    }
    function cM({ nodeRef: e, disabled: t = !1, noDragClassName: n, handleSelector: r, nodeId: i, isSelectable: o, nodeClickDistance: s }) {
        const l = tn(), [u, f] = $.useState(!1), p = $.useRef();
        return $.useEffect(()=>{
            p.current = NZ({
                getStoreItems: ()=>l.getState(),
                onNodeMouseDown: (m)=>{
                    qN({
                        id: m,
                        store: l,
                        nodeRef: e
                    });
                },
                onDragStart: ()=>{
                    f(!0);
                },
                onDragStop: ()=>{
                    f(!1);
                }
            });
        }, []), $.useEffect(()=>{
            if (t) p.current?.destroy();
            else if (e.current) return p.current?.update({
                noDragClassName: n,
                handleSelector: r,
                domNode: e.current,
                isSelectable: o,
                nodeId: i,
                nodeClickDistance: s
            }), ()=>{
                p.current?.destroy();
            };
        }, [
            n,
            r,
            t,
            o,
            e,
            i
        ]), u;
    }
    const AY = (e)=>(t)=>t.selected && (t.draggable || e && typeof t.draggable > "u");
    function uM() {
        const e = tn();
        return $.useCallback((n)=>{
            const { nodeExtent: r, snapToGrid: i, snapGrid: o, nodesDraggable: s, onError: l, updateNodePositions: u, nodeLookup: f, nodeOrigin: p } = e.getState(), m = new Map, g = AY(s), v = i ? o[0] : 5, x = i ? o[1] : 5, b = n.direction.x * v * n.factor, S = n.direction.y * x * n.factor;
            for (const [, N] of f){
                if (!g(N)) continue;
                let _ = {
                    x: N.internals.positionAbsolute.x + b,
                    y: N.internals.positionAbsolute.y + S
                };
                i && (_ = Ay(_, o));
                const { position: I, positionAbsolute: C } = PD({
                    nodeId: N.id,
                    nextPosition: _,
                    nodeLookup: f,
                    nodeExtent: r,
                    nodeOrigin: p,
                    onError: l
                });
                N.position = I, N.internals.positionAbsolute = C, m.set(N.id, N);
            }
            u(m);
        }, []);
    }
    const hI = $.createContext(null), FY = hI.Provider;
    hI.Consumer;
    const dM = ()=>$.useContext(hI), DY = (e)=>({
            connectOnClick: e.connectOnClick,
            noPanClassName: e.noPanClassName,
            rfId: e.rfId
        }), MY = (e, t, n)=>(r)=>{
            const { connectionClickStartHandle: i, connectionMode: o, connection: s } = r, { fromHandle: l, toHandle: u, isValid: f } = s, p = u?.nodeId === e && u?.id === t && u?.type === n;
            return {
                connectingFrom: l?.nodeId === e && l?.id === t && l?.type === n,
                connectingTo: p,
                clickConnecting: i?.nodeId === e && i?.id === t && i?.type === n,
                isPossibleEndHandle: o === Kc.Strict ? l?.type !== n : e !== l?.nodeId || t !== l?.id,
                connectionInProcess: !!l,
                valid: p && f
            };
        };
    function LY({ type: e = "source", position: t = He.Top, isValidConnection: n, isConnectable: r = !0, isConnectableStart: i = !0, isConnectableEnd: o = !0, id: s, onConnect: l, children: u, className: f, onMouseDown: p, onTouchStart: m, ...g }, v) {
        const x = s || null, b = e === "target", S = tn(), N = dM(), { connectOnClick: _, noPanClassName: I, rfId: C } = wt(DY, dn), { connectingFrom: A, connectingTo: R, clickConnecting: D, isPossibleEndHandle: O, connectionInProcess: E, valid: F } = wt(MY(N, x, e), dn);
        N || S.getState().onError?.("010", is.error010());
        const j = (P)=>{
            const { defaultEdgeOptions: V, onConnect: z, hasDefaultEdges: Q } = S.getState(), K = {
                ...V,
                ...P
            };
            if (Q) {
                const { edges: H, setEdges: G } = S.getState();
                G(cZ(K, H));
            }
            z?.(K), l?.(K);
        }, M = (P)=>{
            if (!N) return;
            const V = BD(P.nativeEvent);
            if (i && (V && P.button === 0 || !V)) {
                const z = S.getState();
                $N.onPointerDown(P.nativeEvent, {
                    autoPanOnConnect: z.autoPanOnConnect,
                    connectionMode: z.connectionMode,
                    connectionRadius: z.connectionRadius,
                    domNode: z.domNode,
                    nodeLookup: z.nodeLookup,
                    lib: z.lib,
                    isTarget: b,
                    handleId: x,
                    nodeId: N,
                    flowId: z.rfId,
                    panBy: z.panBy,
                    cancelConnection: z.cancelConnection,
                    onConnectStart: z.onConnectStart,
                    onConnectEnd: z.onConnectEnd,
                    updateConnection: z.updateConnection,
                    onConnect: j,
                    isValidConnection: n || z.isValidConnection,
                    getTransform: ()=>S.getState().transform,
                    getFromHandle: ()=>S.getState().connection.fromHandle,
                    autoPanSpeed: z.autoPanSpeed
                });
            }
            V ? p?.(P) : m?.(P);
        }, L = (P)=>{
            const { onClickConnectStart: V, onClickConnectEnd: z, connectionClickStartHandle: Q, connectionMode: K, isValidConnection: H, lib: G, rfId: U, nodeLookup: Z, connection: J } = S.getState();
            if (!N || !Q && !i) return;
            if (!Q) {
                V?.(P.nativeEvent, {
                    nodeId: N,
                    handleId: x,
                    handleType: e
                }), S.setState({
                    connectionClickStartHandle: {
                        nodeId: N,
                        type: e,
                        id: x
                    }
                });
                return;
            }
            const X = qD(P.target), te = n || H, { connection: ie, isValid: ae } = $N.isValid(P.nativeEvent, {
                handle: {
                    nodeId: N,
                    id: x,
                    type: e
                },
                connectionMode: K,
                fromNodeId: Q.nodeId,
                fromHandleId: Q.id || null,
                fromType: Q.type,
                isValidConnection: te,
                flowId: U,
                doc: X,
                lib: G,
                nodeLookup: Z
            });
            ae && ie && j(ie);
            const ce = structuredClone(J);
            delete ce.inProgress, ce.toPosition = ce.toHandle ? ce.toHandle.position : null, z?.(P, ce), S.setState({
                connectionClickStartHandle: null
            });
        };
        return d.jsx("div", {
            "data-handleid": x,
            "data-nodeid": N,
            "data-handlepos": t,
            "data-id": `${C}-${N}-${x}-${e}`,
            className: Tn([
                "react-flow__handle",
                `react-flow__handle-${t}`,
                "nodrag",
                I,
                f,
                {
                    source: !b,
                    target: b,
                    connectable: r,
                    connectablestart: i,
                    connectableend: o,
                    clickconnecting: D,
                    connectingfrom: A,
                    connectingto: R,
                    valid: F,
                    connectionindicator: r && (!E || O) && (E ? o : i)
                }
            ]),
            onMouseDown: M,
            onTouchStart: M,
            onClick: _ ? L : void 0,
            ref: v,
            ...g,
            children: u
        });
    }
    const Zc = $.memo(aM(LY));
    function $Y({ data: e, isConnectable: t, sourcePosition: n = He.Bottom }) {
        return d.jsxs(d.Fragment, {
            children: [
                e?.label,
                d.jsx(Zc, {
                    type: "source",
                    position: n,
                    isConnectable: t
                })
            ]
        });
    }
    function qY({ data: e, isConnectable: t, targetPosition: n = He.Top, sourcePosition: r = He.Bottom }) {
        return d.jsxs(d.Fragment, {
            children: [
                d.jsx(Zc, {
                    type: "target",
                    position: n,
                    isConnectable: t
                }),
                e?.label,
                d.jsx(Zc, {
                    type: "source",
                    position: r,
                    isConnectable: t
                })
            ]
        });
    }
    function BY() {
        return null;
    }
    function zY({ data: e, isConnectable: t, targetPosition: n = He.Top }) {
        return d.jsxs(d.Fragment, {
            children: [
                d.jsx(Zc, {
                    type: "target",
                    position: n,
                    isConnectable: t
                }),
                e?.label
            ]
        });
    }
    const zg = {
        ArrowUp: {
            x: 0,
            y: -1
        },
        ArrowDown: {
            x: 0,
            y: 1
        },
        ArrowLeft: {
            x: -1,
            y: 0
        },
        ArrowRight: {
            x: 1,
            y: 0
        }
    }, pO = {
        input: $Y,
        default: qY,
        output: zY,
        group: BY
    };
    function WY(e) {
        return e.internals.handleBounds === void 0 ? {
            width: e.width ?? e.initialWidth ?? e.style?.width,
            height: e.height ?? e.initialHeight ?? e.style?.height
        } : {
            width: e.width ?? e.style?.width,
            height: e.height ?? e.style?.height
        };
    }
    const VY = (e)=>{
        const { width: t, height: n, x: r, y: i } = Qf(e.nodeLookup, {
            filter: (o)=>!!o.selected
        });
        return {
            width: Qi(t) ? t : null,
            height: Qi(n) ? n : null,
            userSelectionActive: e.userSelectionActive,
            transformString: `translate(${e.transform[0]}px,${e.transform[1]}px) scale(${e.transform[2]}) translate(${r}px,${i}px)`
        };
    };
    function UY({ onSelectionContextMenu: e, noPanClassName: t, disableKeyboardA11y: n }) {
        const r = tn(), { width: i, height: o, transformString: s, userSelectionActive: l } = wt(VY, dn), u = uM(), f = $.useRef(null);
        if ($.useEffect(()=>{
            n || f.current?.focus({
                preventScroll: !0
            });
        }, [
            n
        ]), cM({
            nodeRef: f
        }), l || !i || !o) return null;
        const p = e ? (g)=>{
            const v = r.getState().nodes.filter((x)=>x.selected);
            e(g, v);
        } : void 0, m = (g)=>{
            Object.prototype.hasOwnProperty.call(zg, g.key) && (g.preventDefault(), u({
                direction: zg[g.key],
                factor: g.shiftKey ? 4 : 1
            }));
        };
        return d.jsx("div", {
            className: Tn([
                "react-flow__nodesselection",
                "react-flow__container",
                t
            ]),
            style: {
                transform: s
            },
            children: d.jsx("div", {
                ref: f,
                className: "react-flow__nodesselection-rect",
                onContextMenu: p,
                tabIndex: n ? void 0 : -1,
                onKeyDown: n ? void 0 : m,
                style: {
                    width: i,
                    height: o
                }
            })
        });
    }
    const hO = typeof window < "u" ? window : void 0, HY = (e)=>({
            nodesSelectionActive: e.nodesSelectionActive,
            userSelectionActive: e.userSelectionActive
        });
    function fM({ children: e, onPaneClick: t, onPaneMouseEnter: n, onPaneMouseMove: r, onPaneMouseLeave: i, onPaneContextMenu: o, onPaneScroll: s, paneClickDistance: l, deleteKeyCode: u, selectionKeyCode: f, selectionOnDrag: p, selectionMode: m, onSelectionStart: g, onSelectionEnd: v, multiSelectionKeyCode: x, panActivationKeyCode: b, zoomActivationKeyCode: S, elementsSelectable: N, zoomOnScroll: _, zoomOnPinch: I, panOnScroll: C, panOnScrollSpeed: A, panOnScrollMode: R, zoomOnDoubleClick: D, panOnDrag: O, defaultViewport: E, translateExtent: F, minZoom: j, maxZoom: M, preventScrolling: L, onSelectionContextMenu: P, noWheelClassName: V, noPanClassName: z, disableKeyboardA11y: Q, onViewportChange: K, isControlledViewport: H }) {
        const { nodesSelectionActive: G, userSelectionActive: U } = wt(HY), Z = wf(f, {
            target: hO
        }), J = wf(b, {
            target: hO
        }), X = J || O, te = J || C, ie = p && X !== !0, ae = Z || U || ie;
        return EY({
            deleteKeyCode: u,
            multiSelectionKeyCode: x
        }), d.jsx(jY, {
            onPaneContextMenu: o,
            elementsSelectable: N,
            zoomOnScroll: _,
            zoomOnPinch: I,
            panOnScroll: te,
            panOnScrollSpeed: A,
            panOnScrollMode: R,
            zoomOnDoubleClick: D,
            panOnDrag: !Z && X,
            defaultViewport: E,
            translateExtent: F,
            minZoom: j,
            maxZoom: M,
            zoomActivationKeyCode: S,
            preventScrolling: L,
            noWheelClassName: V,
            noPanClassName: z,
            onViewportChange: K,
            isControlledViewport: H,
            paneClickDistance: l,
            children: d.jsxs(PY, {
                onSelectionStart: g,
                onSelectionEnd: v,
                onPaneClick: t,
                onPaneMouseEnter: n,
                onPaneMouseMove: r,
                onPaneMouseLeave: i,
                onPaneContextMenu: o,
                onPaneScroll: s,
                panOnDrag: X,
                isSelecting: !!ae,
                selectionMode: m,
                selectionKeyPressed: Z,
                selectionOnDrag: ie,
                children: [
                    e,
                    G && d.jsx(UY, {
                        onSelectionContextMenu: P,
                        noPanClassName: z,
                        disableKeyboardA11y: Q
                    })
                ]
            })
        });
    }
    fM.displayName = "FlowRenderer";
    const KY = $.memo(fM), GY = (e)=>(t)=>e ? TD(t.nodeLookup, {
                x: 0,
                y: 0,
                width: t.width,
                height: t.height
            }, t.transform, !0).map((n)=>n.id) : Array.from(t.nodeLookup.keys());
    function QY(e) {
        return wt($.useCallback(GY(e), [
            e
        ]), dn);
    }
    const JY = (e)=>e.updateNodeInternals;
    function ZY() {
        const e = wt(JY), [t] = $.useState(()=>typeof ResizeObserver > "u" ? null : new ResizeObserver((n)=>{
                const r = new Map;
                n.forEach((i)=>{
                    const o = i.target.getAttribute("data-id");
                    r.set(o, {
                        id: o,
                        nodeElement: i.target,
                        force: !0
                    });
                }), e(r);
            }));
        return $.useEffect(()=>()=>{
                t?.disconnect();
            }, [
            t
        ]), t;
    }
    function YY({ node: e, nodeType: t, hasDimensions: n, resizeObserver: r }) {
        const i = tn(), o = $.useRef(null), s = $.useRef(null), l = $.useRef(e.sourcePosition), u = $.useRef(e.targetPosition), f = $.useRef(t), p = n && !!e.internals.handleBounds;
        return $.useEffect(()=>{
            o.current && !e.hidden && (!p || s.current !== o.current) && (s.current && r?.unobserve(s.current), r?.observe(o.current), s.current = o.current);
        }, [
            p,
            e.hidden
        ]), $.useEffect(()=>()=>{
                s.current && (r?.unobserve(s.current), s.current = null);
            }, []), $.useEffect(()=>{
            if (o.current) {
                const m = f.current !== t, g = l.current !== e.sourcePosition, v = u.current !== e.targetPosition;
                (m || g || v) && (f.current = t, l.current = e.sourcePosition, u.current = e.targetPosition, i.getState().updateNodeInternals(new Map([
                    [
                        e.id,
                        {
                            id: e.id,
                            nodeElement: o.current,
                            force: !0
                        }
                    ]
                ])));
            }
        }, [
            e.id,
            t,
            e.sourcePosition,
            e.targetPosition
        ]), o;
    }
    function XY({ id: e, onClick: t, onMouseEnter: n, onMouseMove: r, onMouseLeave: i, onContextMenu: o, onDoubleClick: s, nodesDraggable: l, elementsSelectable: u, nodesConnectable: f, nodesFocusable: p, resizeObserver: m, noDragClassName: g, noPanClassName: v, disableKeyboardA11y: x, rfId: b, nodeTypes: S, nodeClickDistance: N, onError: _ }) {
        const { node: I, internals: C, isParent: A } = wt((ae)=>{
            const ce = ae.nodeLookup.get(e), de = ae.parentLookup.has(e);
            return {
                node: ce,
                internals: ce.internals,
                isParent: de
            };
        }, dn);
        let R = I.type || "default", D = S?.[R] || pO[R];
        D === void 0 && (_?.("003", is.error003(R)), R = "default", D = pO.default);
        const O = !!(I.draggable || l && typeof I.draggable > "u"), E = !!(I.selectable || u && typeof I.selectable > "u"), F = !!(I.connectable || f && typeof I.connectable > "u"), j = !!(I.focusable || p && typeof I.focusable > "u"), M = tn(), L = LD(I), P = YY({
            node: I,
            nodeType: R,
            hasDimensions: L,
            resizeObserver: m
        }), V = cM({
            nodeRef: P,
            disabled: I.hidden || !O,
            noDragClassName: g,
            handleSelector: I.dragHandle,
            nodeId: e,
            isSelectable: E,
            nodeClickDistance: N
        }), z = uM();
        if (I.hidden) return null;
        const Q = os(I), K = WY(I), H = E || O || t || n || r || i, G = n ? (ae)=>n(ae, {
                ...C.userNode
            }) : void 0, U = r ? (ae)=>r(ae, {
                ...C.userNode
            }) : void 0, Z = i ? (ae)=>i(ae, {
                ...C.userNode
            }) : void 0, J = o ? (ae)=>o(ae, {
                ...C.userNode
            }) : void 0, X = s ? (ae)=>s(ae, {
                ...C.userNode
            }) : void 0, te = (ae)=>{
            const { selectNodesOnDrag: ce, nodeDragThreshold: de } = M.getState();
            E && (!ce || !O || de > 0) && qN({
                id: e,
                store: M,
                nodeRef: P
            }), t && t(ae, {
                ...C.userNode
            });
        }, ie = (ae)=>{
            if (!(FN(ae.nativeEvent) || x)) if (CD.includes(ae.key) && E) {
                const ce = ae.key === "Escape";
                qN({
                    id: e,
                    store: M,
                    unselect: ce,
                    nodeRef: P
                });
            } else O && I.selected && Object.prototype.hasOwnProperty.call(zg, ae.key) && (ae.preventDefault(), M.setState({
                ariaLiveMessage: `Moved selected node ${ae.key.replace("Arrow", "").toLowerCase()}. New position, x: ${~~C.positionAbsolute.x}, y: ${~~C.positionAbsolute.y}`
            }), z({
                direction: zg[ae.key],
                factor: ae.shiftKey ? 4 : 1
            }));
        };
        return d.jsx("div", {
            className: Tn([
                "react-flow__node",
                `react-flow__node-${R}`,
                {
                    [v]: O
                },
                I.className,
                {
                    selected: I.selected,
                    selectable: E,
                    parent: A,
                    draggable: O,
                    dragging: V
                }
            ]),
            ref: P,
            style: {
                zIndex: C.z,
                transform: `translate(${C.positionAbsolute.x}px,${C.positionAbsolute.y}px)`,
                pointerEvents: H ? "all" : "none",
                visibility: L ? "visible" : "hidden",
                ...I.style,
                ...K
            },
            "data-id": e,
            "data-testid": `rf__node-${e}`,
            onMouseEnter: G,
            onMouseMove: U,
            onMouseLeave: Z,
            onContextMenu: J,
            onClick: te,
            onDoubleClick: X,
            onKeyDown: j ? ie : void 0,
            tabIndex: j ? 0 : void 0,
            role: j ? "button" : void 0,
            "aria-describedby": x ? void 0 : `${rM}-${b}`,
            "aria-label": I.ariaLabel,
            children: d.jsx(FY, {
                value: e,
                children: d.jsx(D, {
                    id: e,
                    data: I.data,
                    type: R,
                    positionAbsoluteX: C.positionAbsolute.x,
                    positionAbsoluteY: C.positionAbsolute.y,
                    selected: I.selected ?? !1,
                    selectable: E,
                    draggable: O,
                    deletable: I.deletable ?? !0,
                    isConnectable: F,
                    sourcePosition: I.sourcePosition,
                    targetPosition: I.targetPosition,
                    dragging: V,
                    dragHandle: I.dragHandle,
                    zIndex: C.z,
                    parentId: I.parentId,
                    ...Q
                })
            })
        });
    }
    const eX = (e)=>({
            nodesDraggable: e.nodesDraggable,
            nodesConnectable: e.nodesConnectable,
            nodesFocusable: e.nodesFocusable,
            elementsSelectable: e.elementsSelectable,
            onError: e.onError
        });
    function pM(e) {
        const { nodesDraggable: t, nodesConnectable: n, nodesFocusable: r, elementsSelectable: i, onError: o } = wt(eX, dn), s = QY(e.onlyRenderVisibleElements), l = ZY();
        return d.jsx("div", {
            className: "react-flow__nodes",
            style: $y,
            children: s.map((u)=>d.jsx(XY, {
                    id: u,
                    nodeTypes: e.nodeTypes,
                    nodeExtent: e.nodeExtent,
                    onClick: e.onNodeClick,
                    onMouseEnter: e.onNodeMouseEnter,
                    onMouseMove: e.onNodeMouseMove,
                    onMouseLeave: e.onNodeMouseLeave,
                    onContextMenu: e.onNodeContextMenu,
                    onDoubleClick: e.onNodeDoubleClick,
                    noDragClassName: e.noDragClassName,
                    noPanClassName: e.noPanClassName,
                    rfId: e.rfId,
                    disableKeyboardA11y: e.disableKeyboardA11y,
                    resizeObserver: l,
                    nodesDraggable: t,
                    nodesConnectable: n,
                    nodesFocusable: r,
                    elementsSelectable: i,
                    nodeClickDistance: e.nodeClickDistance,
                    onError: o
                }, u))
        });
    }
    pM.displayName = "NodeRenderer";
    const tX = $.memo(pM);
    function nX(e) {
        return wt($.useCallback((n)=>{
            if (!e) return n.edges.map((i)=>i.id);
            const r = [];
            if (n.width && n.height) for (const i of n.edges){
                const o = n.nodeLookup.get(i.source), s = n.nodeLookup.get(i.target);
                o && s && sZ({
                    sourceNode: o,
                    targetNode: s,
                    width: n.width,
                    height: n.height,
                    transform: n.transform
                }) && r.push(i.id);
            }
            return r;
        }, [
            e
        ]), dn);
    }
    const rX = ({ color: e = "none", strokeWidth: t = 1 })=>d.jsx("polyline", {
            style: {
                stroke: e,
                strokeWidth: t
            },
            strokeLinecap: "round",
            strokeLinejoin: "round",
            fill: "none",
            points: "-5,-4 0,0 -5,4"
        }), iX = ({ color: e = "none", strokeWidth: t = 1 })=>d.jsx("polyline", {
            style: {
                stroke: e,
                fill: e,
                strokeWidth: t
            },
            strokeLinecap: "round",
            strokeLinejoin: "round",
            points: "-5,-4 0,0 -5,4 -5,-4"
        }), mO = {
        [$g.Arrow]: rX,
        [$g.ArrowClosed]: iX
    };
    function oX(e) {
        const t = tn();
        return $.useMemo(()=>Object.prototype.hasOwnProperty.call(mO, e) ? mO[e] : (t.getState().onError?.("009", is.error009(e)), null), [
            e
        ]);
    }
    const sX = ({ id: e, type: t, color: n, width: r = 12.5, height: i = 12.5, markerUnits: o = "strokeWidth", strokeWidth: s, orient: l = "auto-start-reverse" })=>{
        const u = oX(t);
        return u ? d.jsx("marker", {
            className: "react-flow__arrowhead",
            id: e,
            markerWidth: `${r}`,
            markerHeight: `${i}`,
            viewBox: "-10 -10 20 20",
            markerUnits: o,
            orient: l,
            refX: "0",
            refY: "0",
            children: d.jsx(u, {
                color: n,
                strokeWidth: s
            })
        }) : null;
    }, hM = ({ defaultColor: e, rfId: t })=>{
        const n = wt((o)=>o.edges), r = wt((o)=>o.defaultEdgeOptions), i = $.useMemo(()=>hZ(n, {
                id: t,
                defaultColor: e,
                defaultMarkerStart: r?.markerStart,
                defaultMarkerEnd: r?.markerEnd
            }), [
            n,
            r,
            t,
            e
        ]);
        return i.length ? d.jsx("svg", {
            className: "react-flow__marker",
            children: d.jsx("defs", {
                children: i.map((o)=>d.jsx(sX, {
                        id: o.id,
                        type: o.type,
                        color: o.color,
                        width: o.width,
                        height: o.height,
                        markerUnits: o.markerUnits,
                        strokeWidth: o.strokeWidth,
                        orient: o.orient
                    }, o.id))
            })
        }) : null;
    };
    hM.displayName = "MarkerDefinitions";
    var aX = $.memo(hM);
    function mM({ x: e, y: t, label: n, labelStyle: r = {}, labelShowBg: i = !0, labelBgStyle: o = {}, labelBgPadding: s = [
        2,
        4
    ], labelBgBorderRadius: l = 2, children: u, className: f, ...p }) {
        const [m, g] = $.useState({
            x: 1,
            y: 0,
            width: 0,
            height: 0
        }), v = Tn([
            "react-flow__edge-textwrapper",
            f
        ]), x = $.useRef(null);
        return $.useEffect(()=>{
            if (x.current) {
                const b = x.current.getBBox();
                g({
                    x: b.x,
                    y: b.y,
                    width: b.width,
                    height: b.height
                });
            }
        }, [
            n
        ]), typeof n > "u" || !n ? null : d.jsxs("g", {
            transform: `translate(${e - m.width / 2} ${t - m.height / 2})`,
            className: v,
            visibility: m.width ? "visible" : "hidden",
            ...p,
            children: [
                i && d.jsx("rect", {
                    width: m.width + 2 * s[0],
                    x: -s[0],
                    y: -s[1],
                    height: m.height + 2 * s[1],
                    className: "react-flow__edge-textbg",
                    style: o,
                    rx: l,
                    ry: l
                }),
                d.jsx("text", {
                    className: "react-flow__edge-text",
                    y: m.height / 2,
                    dy: "0.3em",
                    ref: x,
                    style: r,
                    children: n
                }),
                u
            ]
        });
    }
    mM.displayName = "EdgeText";
    const lX = $.memo(mM);
    function Yf({ path: e, labelX: t, labelY: n, label: r, labelStyle: i, labelShowBg: o, labelBgStyle: s, labelBgPadding: l, labelBgBorderRadius: u, interactionWidth: f = 20, ...p }) {
        return d.jsxs(d.Fragment, {
            children: [
                d.jsx("path", {
                    ...p,
                    d: e,
                    fill: "none",
                    className: Tn([
                        "react-flow__edge-path",
                        p.className
                    ])
                }),
                f && d.jsx("path", {
                    d: e,
                    fill: "none",
                    strokeOpacity: 0,
                    strokeWidth: f,
                    className: "react-flow__edge-interaction"
                }),
                r && Qi(t) && Qi(n) ? d.jsx(lX, {
                    x: t,
                    y: n,
                    label: r,
                    labelStyle: i,
                    labelShowBg: o,
                    labelBgStyle: s,
                    labelBgPadding: l,
                    labelBgBorderRadius: u
                }) : null
            ]
        });
    }
    function gO({ pos: e, x1: t, y1: n, x2: r, y2: i }) {
        return e === He.Left || e === He.Right ? [
            .5 * (t + r),
            n
        ] : [
            t,
            .5 * (n + i)
        ];
    }
    function gM({ sourceX: e, sourceY: t, sourcePosition: n = He.Bottom, targetX: r, targetY: i, targetPosition: o = He.Top }) {
        const [s, l] = gO({
            pos: n,
            x1: e,
            y1: t,
            x2: r,
            y2: i
        }), [u, f] = gO({
            pos: o,
            x1: r,
            y1: i,
            x2: e,
            y2: t
        }), [p, m, g, v] = zD({
            sourceX: e,
            sourceY: t,
            targetX: r,
            targetY: i,
            sourceControlX: s,
            sourceControlY: l,
            targetControlX: u,
            targetControlY: f
        });
        return [
            `M${e},${t} C${s},${l} ${u},${f} ${r},${i}`,
            p,
            m,
            g,
            v
        ];
    }
    function yM(e) {
        return $.memo(({ id: t, sourceX: n, sourceY: r, targetX: i, targetY: o, sourcePosition: s = He.Bottom, targetPosition: l = He.Top, label: u, labelStyle: f, labelShowBg: p, labelBgStyle: m, labelBgPadding: g, labelBgBorderRadius: v, style: x, markerEnd: b, markerStart: S, interactionWidth: N })=>{
            const [_, I, C] = gM({
                sourceX: n,
                sourceY: r,
                sourcePosition: s,
                targetX: i,
                targetY: o,
                targetPosition: l
            }), A = e.isInternal ? void 0 : t;
            return d.jsx(Yf, {
                id: A,
                path: _,
                labelX: I,
                labelY: C,
                label: u,
                labelStyle: f,
                labelShowBg: p,
                labelBgStyle: m,
                labelBgPadding: g,
                labelBgBorderRadius: v,
                style: x,
                markerEnd: b,
                markerStart: S,
                interactionWidth: N
            });
        });
    }
    const cX = yM({
        isInternal: !1
    }), vM = yM({
        isInternal: !0
    });
    cX.displayName = "SimpleBezierEdge";
    vM.displayName = "SimpleBezierEdgeInternal";
    function xM(e) {
        return $.memo(({ id: t, sourceX: n, sourceY: r, targetX: i, targetY: o, label: s, labelStyle: l, labelShowBg: u, labelBgStyle: f, labelBgPadding: p, labelBgBorderRadius: m, style: g, sourcePosition: v = He.Bottom, targetPosition: x = He.Top, markerEnd: b, markerStart: S, pathOptions: N, interactionWidth: _ })=>{
            const [I, C, A] = DN({
                sourceX: n,
                sourceY: r,
                sourcePosition: v,
                targetX: i,
                targetY: o,
                targetPosition: x,
                borderRadius: N?.borderRadius,
                offset: N?.offset
            }), R = e.isInternal ? void 0 : t;
            return d.jsx(Yf, {
                id: R,
                path: I,
                labelX: C,
                labelY: A,
                label: s,
                labelStyle: l,
                labelShowBg: u,
                labelBgStyle: f,
                labelBgPadding: p,
                labelBgBorderRadius: m,
                style: g,
                markerEnd: b,
                markerStart: S,
                interactionWidth: _
            });
        });
    }
    const bM = xM({
        isInternal: !1
    }), wM = xM({
        isInternal: !0
    });
    bM.displayName = "SmoothStepEdge";
    wM.displayName = "SmoothStepEdgeInternal";
    function NM(e) {
        return $.memo(({ id: t, ...n })=>{
            const r = e.isInternal ? void 0 : t;
            return d.jsx(bM, {
                ...n,
                id: r,
                pathOptions: $.useMemo(()=>({
                        borderRadius: 0,
                        offset: n.pathOptions?.offset
                    }), [
                    n.pathOptions?.offset
                ])
            });
        });
    }
    const uX = NM({
        isInternal: !1
    }), SM = NM({
        isInternal: !0
    });
    uX.displayName = "StepEdge";
    SM.displayName = "StepEdgeInternal";
    function IM(e) {
        return $.memo(({ id: t, sourceX: n, sourceY: r, targetX: i, targetY: o, label: s, labelStyle: l, labelShowBg: u, labelBgStyle: f, labelBgPadding: p, labelBgBorderRadius: m, style: g, markerEnd: v, markerStart: x, interactionWidth: b })=>{
            const [S, N, _] = VD({
                sourceX: n,
                sourceY: r,
                targetX: i,
                targetY: o
            }), I = e.isInternal ? void 0 : t;
            return d.jsx(Yf, {
                id: I,
                path: S,
                labelX: N,
                labelY: _,
                label: s,
                labelStyle: l,
                labelShowBg: u,
                labelBgStyle: f,
                labelBgPadding: p,
                labelBgBorderRadius: m,
                style: g,
                markerEnd: v,
                markerStart: x,
                interactionWidth: b
            });
        });
    }
    const dX = IM({
        isInternal: !1
    }), _M = IM({
        isInternal: !0
    });
    dX.displayName = "StraightEdge";
    _M.displayName = "StraightEdgeInternal";
    function EM(e) {
        return $.memo(({ id: t, sourceX: n, sourceY: r, targetX: i, targetY: o, sourcePosition: s = He.Bottom, targetPosition: l = He.Top, label: u, labelStyle: f, labelShowBg: p, labelBgStyle: m, labelBgPadding: g, labelBgBorderRadius: v, style: x, markerEnd: b, markerStart: S, pathOptions: N, interactionWidth: _ })=>{
            const [I, C, A] = cI({
                sourceX: n,
                sourceY: r,
                sourcePosition: s,
                targetX: i,
                targetY: o,
                targetPosition: l,
                curvature: N?.curvature
            }), R = e.isInternal ? void 0 : t;
            return d.jsx(Yf, {
                id: R,
                path: I,
                labelX: C,
                labelY: A,
                label: u,
                labelStyle: f,
                labelShowBg: p,
                labelBgStyle: m,
                labelBgPadding: g,
                labelBgBorderRadius: v,
                style: x,
                markerEnd: b,
                markerStart: S,
                interactionWidth: _
            });
        });
    }
    const fX = EM({
        isInternal: !1
    }), kM = EM({
        isInternal: !0
    });
    fX.displayName = "BezierEdge";
    kM.displayName = "BezierEdgeInternal";
    const yO = {
        default: kM,
        straight: _M,
        step: SM,
        smoothstep: wM,
        simplebezier: vM
    }, vO = {
        sourceX: null,
        sourceY: null,
        targetX: null,
        targetY: null,
        sourcePosition: null,
        targetPosition: null
    }, pX = (e, t, n)=>n === He.Left ? e - t : n === He.Right ? e + t : e, hX = (e, t, n)=>n === He.Top ? e - t : n === He.Bottom ? e + t : e, xO = "react-flow__edgeupdater";
    function bO({ position: e, centerX: t, centerY: n, radius: r = 10, onMouseDown: i, onMouseEnter: o, onMouseOut: s, type: l }) {
        return d.jsx("circle", {
            onMouseDown: i,
            onMouseEnter: o,
            onMouseOut: s,
            className: Tn([
                xO,
                `${xO}-${l}`
            ]),
            cx: pX(t, r, e),
            cy: hX(n, r, e),
            r,
            stroke: "transparent",
            fill: "transparent"
        });
    }
    function mX({ isReconnectable: e, reconnectRadius: t, edge: n, sourceX: r, sourceY: i, targetX: o, targetY: s, sourcePosition: l, targetPosition: u, onReconnect: f, onReconnectStart: p, onReconnectEnd: m, setReconnecting: g, setUpdateHover: v }) {
        const x = tn(), b = (C, A)=>{
            if (C.button !== 0) return;
            const { autoPanOnConnect: R, domNode: D, isValidConnection: O, connectionMode: E, connectionRadius: F, lib: j, onConnectStart: M, onConnectEnd: L, cancelConnection: P, nodeLookup: V, rfId: z, panBy: Q, updateConnection: K } = x.getState(), H = A.type === "target";
            g(!0), p?.(C, n, A.type);
            const G = (Z, J)=>{
                g(!1), m?.(Z, n, A.type, J);
            }, U = (Z)=>f?.(n, Z);
            $N.onPointerDown(C.nativeEvent, {
                autoPanOnConnect: R,
                connectionMode: E,
                connectionRadius: F,
                domNode: D,
                handleId: A.id,
                nodeId: A.nodeId,
                nodeLookup: V,
                isTarget: H,
                edgeUpdaterType: A.type,
                lib: j,
                flowId: z,
                cancelConnection: P,
                panBy: Q,
                isValidConnection: O,
                onConnect: U,
                onConnectStart: M,
                onConnectEnd: L,
                onReconnectEnd: G,
                updateConnection: K,
                getTransform: ()=>x.getState().transform,
                getFromHandle: ()=>x.getState().connection.fromHandle
            });
        }, S = (C)=>b(C, {
                nodeId: n.target,
                id: n.targetHandle ?? null,
                type: "target"
            }), N = (C)=>b(C, {
                nodeId: n.source,
                id: n.sourceHandle ?? null,
                type: "source"
            }), _ = ()=>v(!0), I = ()=>v(!1);
        return d.jsxs(d.Fragment, {
            children: [
                (e === !0 || e === "source") && d.jsx(bO, {
                    position: l,
                    centerX: r,
                    centerY: i,
                    radius: t,
                    onMouseDown: S,
                    onMouseEnter: _,
                    onMouseOut: I,
                    type: "source"
                }),
                (e === !0 || e === "target") && d.jsx(bO, {
                    position: u,
                    centerX: o,
                    centerY: s,
                    radius: t,
                    onMouseDown: N,
                    onMouseEnter: _,
                    onMouseOut: I,
                    type: "target"
                })
            ]
        });
    }
    function gX({ id: e, edgesFocusable: t, edgesReconnectable: n, elementsSelectable: r, onClick: i, onDoubleClick: o, onContextMenu: s, onMouseEnter: l, onMouseMove: u, onMouseLeave: f, reconnectRadius: p, onReconnect: m, onReconnectStart: g, onReconnectEnd: v, rfId: x, edgeTypes: b, noPanClassName: S, onError: N, disableKeyboardA11y: _ }) {
        let I = wt((ge)=>ge.edgeLookup.get(e));
        const C = wt((ge)=>ge.defaultEdgeOptions);
        I = C ? {
            ...C,
            ...I
        } : I;
        let A = I.type || "default", R = b?.[A] || yO[A];
        R === void 0 && (N?.("011", is.error011(A)), A = "default", R = yO.default);
        const D = !!(I.focusable || t && typeof I.focusable > "u"), O = typeof m < "u" && (I.reconnectable || n && typeof I.reconnectable > "u"), E = !!(I.selectable || r && typeof I.selectable > "u"), F = $.useRef(null), [j, M] = $.useState(!1), [L, P] = $.useState(!1), V = tn(), { zIndex: z, sourceX: Q, sourceY: K, targetX: H, targetY: G, sourcePosition: U, targetPosition: Z } = wt($.useCallback((ge)=>{
            const we = ge.nodeLookup.get(I.source), ke = ge.nodeLookup.get(I.target);
            if (!we || !ke) return {
                zIndex: I.zIndex,
                ...vO
            };
            const Re = pZ({
                id: e,
                sourceNode: we,
                targetNode: ke,
                sourceHandle: I.sourceHandle || null,
                targetHandle: I.targetHandle || null,
                connectionMode: ge.connectionMode,
                onError: N
            });
            return {
                zIndex: oZ({
                    selected: I.selected,
                    zIndex: I.zIndex,
                    sourceNode: we,
                    targetNode: ke,
                    elevateOnSelect: ge.elevateEdgesOnSelect
                }),
                ...Re || vO
            };
        }, [
            I.source,
            I.target,
            I.sourceHandle,
            I.targetHandle,
            I.selected,
            I.zIndex
        ]), dn), J = $.useMemo(()=>I.markerStart ? `url('#${MN(I.markerStart, x)}')` : void 0, [
            I.markerStart,
            x
        ]), X = $.useMemo(()=>I.markerEnd ? `url('#${MN(I.markerEnd, x)}')` : void 0, [
            I.markerEnd,
            x
        ]);
        if (I.hidden || Q === null || K === null || H === null || G === null) return null;
        const te = (ge)=>{
            const { addSelectedEdges: we, unselectNodesAndEdges: ke, multiSelectionActive: Re } = V.getState();
            E && (V.setState({
                nodesSelectionActive: !1
            }), I.selected && Re ? (ke({
                nodes: [],
                edges: [
                    I
                ]
            }), F.current?.blur()) : we([
                e
            ])), i && i(ge, I);
        }, ie = o ? (ge)=>{
            o(ge, {
                ...I
            });
        } : void 0, ae = s ? (ge)=>{
            s(ge, {
                ...I
            });
        } : void 0, ce = l ? (ge)=>{
            l(ge, {
                ...I
            });
        } : void 0, de = u ? (ge)=>{
            u(ge, {
                ...I
            });
        } : void 0, ve = f ? (ge)=>{
            f(ge, {
                ...I
            });
        } : void 0, be = (ge)=>{
            if (!_ && CD.includes(ge.key) && E) {
                const { unselectNodesAndEdges: we, addSelectedEdges: ke } = V.getState();
                ge.key === "Escape" ? (F.current?.blur(), we({
                    edges: [
                        I
                    ]
                })) : ke([
                    e
                ]);
            }
        };
        return d.jsx("svg", {
            style: {
                zIndex: z
            },
            children: d.jsxs("g", {
                className: Tn([
                    "react-flow__edge",
                    `react-flow__edge-${A}`,
                    I.className,
                    S,
                    {
                        selected: I.selected,
                        animated: I.animated,
                        inactive: !E && !i,
                        updating: j,
                        selectable: E
                    }
                ]),
                onClick: te,
                onDoubleClick: ie,
                onContextMenu: ae,
                onMouseEnter: ce,
                onMouseMove: de,
                onMouseLeave: ve,
                onKeyDown: D ? be : void 0,
                tabIndex: D ? 0 : void 0,
                role: D ? "button" : "img",
                "data-id": e,
                "data-testid": `rf__edge-${e}`,
                "aria-label": I.ariaLabel === null ? void 0 : I.ariaLabel || `Edge from ${I.source} to ${I.target}`,
                "aria-describedby": D ? `${iM}-${x}` : void 0,
                ref: F,
                children: [
                    !L && d.jsx(R, {
                        id: e,
                        source: I.source,
                        target: I.target,
                        type: I.type,
                        selected: I.selected,
                        animated: I.animated,
                        selectable: E,
                        deletable: I.deletable ?? !0,
                        label: I.label,
                        labelStyle: I.labelStyle,
                        labelShowBg: I.labelShowBg,
                        labelBgStyle: I.labelBgStyle,
                        labelBgPadding: I.labelBgPadding,
                        labelBgBorderRadius: I.labelBgBorderRadius,
                        sourceX: Q,
                        sourceY: K,
                        targetX: H,
                        targetY: G,
                        sourcePosition: U,
                        targetPosition: Z,
                        data: I.data,
                        style: I.style,
                        sourceHandleId: I.sourceHandle,
                        targetHandleId: I.targetHandle,
                        markerStart: J,
                        markerEnd: X,
                        pathOptions: "pathOptions" in I ? I.pathOptions : void 0,
                        interactionWidth: I.interactionWidth
                    }),
                    O && d.jsx(mX, {
                        edge: I,
                        isReconnectable: O,
                        reconnectRadius: p,
                        onReconnect: m,
                        onReconnectStart: g,
                        onReconnectEnd: v,
                        sourceX: Q,
                        sourceY: K,
                        targetX: H,
                        targetY: G,
                        sourcePosition: U,
                        targetPosition: Z,
                        setUpdateHover: M,
                        setReconnecting: P
                    })
                ]
            })
        });
    }
    const yX = (e)=>({
            edgesFocusable: e.edgesFocusable,
            edgesReconnectable: e.edgesReconnectable,
            elementsSelectable: e.elementsSelectable,
            connectionMode: e.connectionMode,
            onError: e.onError
        });
    function CM({ defaultMarkerColor: e, onlyRenderVisibleElements: t, rfId: n, edgeTypes: r, noPanClassName: i, onReconnect: o, onEdgeContextMenu: s, onEdgeMouseEnter: l, onEdgeMouseMove: u, onEdgeMouseLeave: f, onEdgeClick: p, reconnectRadius: m, onEdgeDoubleClick: g, onReconnectStart: v, onReconnectEnd: x, disableKeyboardA11y: b }) {
        const { edgesFocusable: S, edgesReconnectable: N, elementsSelectable: _, onError: I } = wt(yX, dn), C = nX(t);
        return d.jsxs("div", {
            className: "react-flow__edges",
            children: [
                d.jsx(aX, {
                    defaultColor: e,
                    rfId: n
                }),
                C.map((A)=>d.jsx(gX, {
                        id: A,
                        edgesFocusable: S,
                        edgesReconnectable: N,
                        elementsSelectable: _,
                        noPanClassName: i,
                        onReconnect: o,
                        onContextMenu: s,
                        onMouseEnter: l,
                        onMouseMove: u,
                        onMouseLeave: f,
                        onClick: p,
                        reconnectRadius: m,
                        onDoubleClick: g,
                        onReconnectStart: v,
                        onReconnectEnd: x,
                        rfId: n,
                        onError: I,
                        edgeTypes: r,
                        disableKeyboardA11y: b
                    }, A))
            ]
        });
    }
    CM.displayName = "EdgeRenderer";
    const vX = $.memo(CM), xX = (e)=>`translate(${e.transform[0]}px,${e.transform[1]}px) scale(${e.transform[2]})`;
    function bX({ children: e }) {
        const t = wt(xX);
        return d.jsx("div", {
            className: "react-flow__viewport xyflow__viewport react-flow__container",
            style: {
                transform: t
            },
            children: e
        });
    }
    function wX(e) {
        const t = Zf(), n = $.useRef(!1);
        $.useEffect(()=>{
            !n.current && t.viewportInitialized && e && (setTimeout(()=>e(t), 1), n.current = !0);
        }, [
            e,
            t.viewportInitialized
        ]);
    }
    const NX = (e)=>e.panZoom?.syncViewport;
    function SX(e) {
        const t = wt(NX), n = tn();
        return $.useEffect(()=>{
            e && (t?.(e), n.setState({
                transform: [
                    e.x,
                    e.y,
                    e.zoom
                ]
            }));
        }, [
            e,
            t
        ]), null;
    }
    function IX(e) {
        return e.connection.inProgress ? {
            ...e.connection,
            to: Jf(e.connection.to, e.transform)
        } : {
            ...e.connection
        };
    }
    function _X(e) {
        return IX;
    }
    function EX(e) {
        const t = _X();
        return wt(t, dn);
    }
    const kX = (e)=>({
            nodesConnectable: e.nodesConnectable,
            isValid: e.connection.isValid,
            inProgress: e.connection.inProgress,
            width: e.width,
            height: e.height
        });
    function CX({ containerStyle: e, style: t, type: n, component: r }) {
        const { nodesConnectable: i, width: o, height: s, isValid: l, inProgress: u } = wt(kX, dn);
        return !(o && i && u) ? null : d.jsx("svg", {
            style: e,
            width: o,
            height: s,
            className: "react-flow__connectionline react-flow__container",
            children: d.jsx("g", {
                className: Tn([
                    "react-flow__connection",
                    RD(l)
                ]),
                children: d.jsx(jM, {
                    style: t,
                    type: n,
                    CustomComponent: r,
                    isValid: l
                })
            })
        });
    }
    const jM = ({ style: e, type: t = Ws.Bezier, CustomComponent: n, isValid: r })=>{
        const { inProgress: i, from: o, fromNode: s, fromHandle: l, fromPosition: u, to: f, toNode: p, toHandle: m, toPosition: g } = EX();
        if (!i) return;
        if (n) return d.jsx(n, {
            connectionLineType: t,
            connectionLineStyle: e,
            fromNode: s,
            fromHandle: l,
            fromX: o.x,
            fromY: o.y,
            toX: f.x,
            toY: f.y,
            fromPosition: u,
            toPosition: g,
            connectionStatus: RD(r),
            toNode: p,
            toHandle: m
        });
        let v = "";
        const x = {
            sourceX: o.x,
            sourceY: o.y,
            sourcePosition: u,
            targetX: f.x,
            targetY: f.y,
            targetPosition: g
        };
        switch(t){
            case Ws.Bezier:
                [v] = cI(x);
                break;
            case Ws.SimpleBezier:
                [v] = gM(x);
                break;
            case Ws.Step:
                [v] = DN({
                    ...x,
                    borderRadius: 0
                });
                break;
            case Ws.SmoothStep:
                [v] = DN(x);
                break;
            default:
                [v] = VD(x);
        }
        return d.jsx("path", {
            d: v,
            fill: "none",
            className: "react-flow__connection-path",
            style: e
        });
    };
    jM.displayName = "ConnectionLine";
    const jX = {};
    function wO(e = jX) {
        $.useRef(e), tn(), $.useEffect(()=>{}, [
            e
        ]);
    }
    function RX() {
        tn(), $.useRef(!1), $.useEffect(()=>{}, []);
    }
    function RM({ nodeTypes: e, edgeTypes: t, onInit: n, onNodeClick: r, onEdgeClick: i, onNodeDoubleClick: o, onEdgeDoubleClick: s, onNodeMouseEnter: l, onNodeMouseMove: u, onNodeMouseLeave: f, onNodeContextMenu: p, onSelectionContextMenu: m, onSelectionStart: g, onSelectionEnd: v, connectionLineType: x, connectionLineStyle: b, connectionLineComponent: S, connectionLineContainerStyle: N, selectionKeyCode: _, selectionOnDrag: I, selectionMode: C, multiSelectionKeyCode: A, panActivationKeyCode: R, zoomActivationKeyCode: D, deleteKeyCode: O, onlyRenderVisibleElements: E, elementsSelectable: F, defaultViewport: j, translateExtent: M, minZoom: L, maxZoom: P, preventScrolling: V, defaultMarkerColor: z, zoomOnScroll: Q, zoomOnPinch: K, panOnScroll: H, panOnScrollSpeed: G, panOnScrollMode: U, zoomOnDoubleClick: Z, panOnDrag: J, onPaneClick: X, onPaneMouseEnter: te, onPaneMouseMove: ie, onPaneMouseLeave: ae, onPaneScroll: ce, onPaneContextMenu: de, paneClickDistance: ve, nodeClickDistance: be, onEdgeContextMenu: ge, onEdgeMouseEnter: we, onEdgeMouseMove: ke, onEdgeMouseLeave: Re, reconnectRadius: $e, onReconnect: nt, onReconnectStart: ee, onReconnectEnd: ne, noDragClassName: oe, noWheelClassName: le, noPanClassName: me, disableKeyboardA11y: xe, nodeExtent: pe, rfId: Se, viewport: Ge, onViewportChange: Qe }) {
        return wO(e), wO(t), RX(), wX(n), SX(Ge), d.jsx(KY, {
            onPaneClick: X,
            onPaneMouseEnter: te,
            onPaneMouseMove: ie,
            onPaneMouseLeave: ae,
            onPaneContextMenu: de,
            onPaneScroll: ce,
            paneClickDistance: ve,
            deleteKeyCode: O,
            selectionKeyCode: _,
            selectionOnDrag: I,
            selectionMode: C,
            onSelectionStart: g,
            onSelectionEnd: v,
            multiSelectionKeyCode: A,
            panActivationKeyCode: R,
            zoomActivationKeyCode: D,
            elementsSelectable: F,
            zoomOnScroll: Q,
            zoomOnPinch: K,
            zoomOnDoubleClick: Z,
            panOnScroll: H,
            panOnScrollSpeed: G,
            panOnScrollMode: U,
            panOnDrag: J,
            defaultViewport: j,
            translateExtent: M,
            minZoom: L,
            maxZoom: P,
            onSelectionContextMenu: m,
            preventScrolling: V,
            noDragClassName: oe,
            noWheelClassName: le,
            noPanClassName: me,
            disableKeyboardA11y: xe,
            onViewportChange: Qe,
            isControlledViewport: !!Ge,
            children: d.jsxs(bX, {
                children: [
                    d.jsx(vX, {
                        edgeTypes: t,
                        onEdgeClick: i,
                        onEdgeDoubleClick: s,
                        onReconnect: nt,
                        onReconnectStart: ee,
                        onReconnectEnd: ne,
                        onlyRenderVisibleElements: E,
                        onEdgeContextMenu: ge,
                        onEdgeMouseEnter: we,
                        onEdgeMouseMove: ke,
                        onEdgeMouseLeave: Re,
                        reconnectRadius: $e,
                        defaultMarkerColor: z,
                        noPanClassName: me,
                        disableKeyboardA11y: xe,
                        rfId: Se
                    }),
                    d.jsx(CX, {
                        style: b,
                        type: x,
                        component: S,
                        containerStyle: N
                    }),
                    d.jsx("div", {
                        className: "react-flow__edgelabel-renderer"
                    }),
                    d.jsx(tX, {
                        nodeTypes: e,
                        onNodeClick: r,
                        onNodeDoubleClick: o,
                        onNodeMouseEnter: l,
                        onNodeMouseMove: u,
                        onNodeMouseLeave: f,
                        onNodeContextMenu: p,
                        nodeClickDistance: be,
                        onlyRenderVisibleElements: E,
                        noPanClassName: me,
                        noDragClassName: oe,
                        disableKeyboardA11y: xe,
                        nodeExtent: pe,
                        rfId: Se
                    }),
                    d.jsx("div", {
                        className: "react-flow__viewport-portal"
                    })
                ]
            })
        });
    }
    RM.displayName = "GraphView";
    const OX = $.memo(RM), NO = ({ nodes: e, edges: t, defaultNodes: n, defaultEdges: r, width: i, height: o, fitView: s, nodeOrigin: l, nodeExtent: u } = {})=>{
        const f = new Map, p = new Map, m = new Map, g = new Map, v = r ?? t ?? [], x = n ?? e ?? [], b = l ?? [
            0,
            0
        ], S = u ?? yf;
        HD(m, g, v), LN(x, f, p, {
            nodeOrigin: b,
            nodeExtent: S,
            elevateNodesOnSelect: !1
        });
        let N = [
            0,
            0,
            1
        ];
        if (s && i && o) {
            const _ = Qf(f, {
                filter: (R)=>!!((R.width || R.initialWidth) && (R.height || R.initialHeight))
            }), { x: I, y: C, zoom: A } = lI(_, i, o, .5, 2, .1);
            N = [
                I,
                C,
                A
            ];
        }
        return {
            rfId: "1",
            width: 0,
            height: 0,
            transform: N,
            nodes: x,
            nodeLookup: f,
            parentLookup: p,
            edges: v,
            edgeLookup: g,
            connectionLookup: m,
            onNodesChange: null,
            onEdgesChange: null,
            hasDefaultNodes: n !== void 0,
            hasDefaultEdges: r !== void 0,
            panZoom: null,
            minZoom: .5,
            maxZoom: 2,
            translateExtent: yf,
            nodeExtent: S,
            nodesSelectionActive: !1,
            userSelectionActive: !1,
            userSelectionRect: null,
            connectionMode: Kc.Strict,
            domNode: null,
            paneDragging: !1,
            noPanClassName: "nopan",
            nodeOrigin: b,
            nodeDragThreshold: 1,
            snapGrid: [
                15,
                15
            ],
            snapToGrid: !1,
            nodesDraggable: !0,
            nodesConnectable: !0,
            nodesFocusable: !0,
            edgesFocusable: !0,
            edgesReconnectable: !0,
            elementsSelectable: !0,
            elevateNodesOnSelect: !0,
            elevateEdgesOnSelect: !1,
            fitViewOnInit: !1,
            fitViewDone: !1,
            fitViewOnInitOptions: void 0,
            selectNodesOnDrag: !0,
            multiSelectionActive: !1,
            connection: {
                ...jD
            },
            connectionClickStartHandle: null,
            connectOnClick: !0,
            ariaLiveMessage: "",
            autoPanOnConnect: !0,
            autoPanOnNodeDrag: !0,
            autoPanSpeed: 15,
            connectionRadius: 20,
            onError: rZ,
            isValidConnection: void 0,
            onSelectionChangeHandlers: [],
            lib: "react",
            debug: !1
        };
    }, TX = ({ nodes: e, edges: t, defaultNodes: n, defaultEdges: r, width: i, height: o, fitView: s, nodeOrigin: l, nodeExtent: u })=>QZ((f, p)=>({
                ...NO({
                    nodes: e,
                    edges: t,
                    width: i,
                    height: o,
                    fitView: s,
                    nodeOrigin: l,
                    nodeExtent: u,
                    defaultNodes: n,
                    defaultEdges: r
                }),
                setNodes: (m)=>{
                    const { nodeLookup: g, parentLookup: v, nodeOrigin: x, elevateNodesOnSelect: b } = p();
                    LN(m, g, v, {
                        nodeOrigin: x,
                        nodeExtent: u,
                        elevateNodesOnSelect: b,
                        checkEquality: !0
                    }), f({
                        nodes: m
                    });
                },
                setEdges: (m)=>{
                    const { connectionLookup: g, edgeLookup: v } = p();
                    HD(g, v, m), f({
                        edges: m
                    });
                },
                setDefaultNodesAndEdges: (m, g)=>{
                    if (m) {
                        const { setNodes: v } = p();
                        v(m), f({
                            hasDefaultNodes: !0
                        });
                    }
                    if (g) {
                        const { setEdges: v } = p();
                        v(g), f({
                            hasDefaultEdges: !0
                        });
                    }
                },
                updateNodeInternals: (m, g = {
                    triggerFitView: !0
                })=>{
                    const { triggerNodeChanges: v, nodeLookup: x, parentLookup: b, fitViewOnInit: S, fitViewDone: N, fitViewOnInitOptions: _, domNode: I, nodeOrigin: C, nodeExtent: A, debug: R, fitViewSync: D } = p(), { changes: O, updatedInternals: E } = xZ(m, x, b, I, C, A);
                    if (E) {
                        if (gZ(x, b, {
                            nodeOrigin: C,
                            nodeExtent: A
                        }), g.triggerFitView) {
                            let F = N;
                            !N && S && (F = D({
                                ..._,
                                nodes: _?.nodes
                            })), f({
                                fitViewDone: F
                            });
                        } else f({});
                        O?.length > 0 && (R && console.log("React Flow: trigger node changes", O), v?.(O));
                    }
                },
                updateNodePositions: (m, g = !1)=>{
                    const v = [], x = [];
                    for (const [b, S] of m){
                        const N = !!(S?.expandParent && S?.parentId && S?.position), _ = {
                            id: b,
                            type: "position",
                            position: N ? {
                                x: Math.max(0, S.position.x),
                                y: Math.max(0, S.position.y)
                            } : S.position,
                            dragging: g
                        };
                        N && v.push({
                            id: b,
                            parentId: S.parentId,
                            rect: {
                                ...S.internals.positionAbsolute,
                                width: S.measured.width,
                                height: S.measured.height
                            }
                        }), x.push(_);
                    }
                    if (v.length > 0) {
                        const { nodeLookup: b, parentLookup: S, nodeOrigin: N } = p(), _ = pI(v, b, S, N);
                        x.push(..._);
                    }
                    p().triggerNodeChanges(x);
                },
                triggerNodeChanges: (m)=>{
                    const { onNodesChange: g, setNodes: v, nodes: x, hasDefaultNodes: b, debug: S } = p();
                    if (m?.length) {
                        if (b) {
                            const N = gY(m, x);
                            v(N);
                        }
                        S && console.log("React Flow: trigger node changes", m), g?.(m);
                    }
                },
                triggerEdgeChanges: (m)=>{
                    const { onEdgesChange: g, setEdges: v, edges: x, hasDefaultEdges: b, debug: S } = p();
                    if (m?.length) {
                        if (b) {
                            const N = yY(m, x);
                            v(N);
                        }
                        S && console.log("React Flow: trigger edge changes", m), g?.(m);
                    }
                },
                addSelectedNodes: (m)=>{
                    const { multiSelectionActive: g, edgeLookup: v, nodeLookup: x, triggerNodeChanges: b, triggerEdgeChanges: S } = p();
                    if (g) {
                        const N = m.map((_)=>Ba(_, !0));
                        b(N);
                        return;
                    }
                    b(yc(x, new Set([
                        ...m
                    ]), !0)), S(yc(v));
                },
                addSelectedEdges: (m)=>{
                    const { multiSelectionActive: g, edgeLookup: v, nodeLookup: x, triggerNodeChanges: b, triggerEdgeChanges: S } = p();
                    if (g) {
                        const N = m.map((_)=>Ba(_, !0));
                        S(N);
                        return;
                    }
                    S(yc(v, new Set([
                        ...m
                    ]))), b(yc(x, new Set, !0));
                },
                unselectNodesAndEdges: ({ nodes: m, edges: g } = {})=>{
                    const { edges: v, nodes: x, nodeLookup: b, triggerNodeChanges: S, triggerEdgeChanges: N } = p(), _ = m || x, I = g || v, C = _.map((R)=>{
                        const D = b.get(R.id);
                        return D && (D.selected = !1), Ba(R.id, !1);
                    }), A = I.map((R)=>Ba(R.id, !1));
                    S(C), N(A);
                },
                setMinZoom: (m)=>{
                    const { panZoom: g, maxZoom: v } = p();
                    g?.setScaleExtent([
                        m,
                        v
                    ]), f({
                        minZoom: m
                    });
                },
                setMaxZoom: (m)=>{
                    const { panZoom: g, minZoom: v } = p();
                    g?.setScaleExtent([
                        v,
                        m
                    ]), f({
                        maxZoom: m
                    });
                },
                setTranslateExtent: (m)=>{
                    p().panZoom?.setTranslateExtent(m), f({
                        translateExtent: m
                    });
                },
                setPaneClickDistance: (m)=>{
                    p().panZoom?.setClickDistance(m);
                },
                resetSelectedElements: ()=>{
                    const { edges: m, nodes: g, triggerNodeChanges: v, triggerEdgeChanges: x } = p(), b = g.reduce((N, _)=>_.selected ? [
                            ...N,
                            Ba(_.id, !1)
                        ] : N, []), S = m.reduce((N, _)=>_.selected ? [
                            ...N,
                            Ba(_.id, !1)
                        ] : N, []);
                    v(b), x(S);
                },
                setNodeExtent: (m)=>{
                    const { nodes: g, nodeLookup: v, parentLookup: x, nodeOrigin: b, elevateNodesOnSelect: S, nodeExtent: N } = p();
                    m[0][0] === N[0][0] && m[0][1] === N[0][1] && m[1][0] === N[1][0] && m[1][1] === N[1][1] || (LN(g, v, x, {
                        nodeOrigin: b,
                        nodeExtent: m,
                        elevateNodesOnSelect: S,
                        checkEquality: !1
                    }), f({
                        nodeExtent: m
                    }));
                },
                panBy: (m)=>{
                    const { transform: g, width: v, height: x, panZoom: b, translateExtent: S } = p();
                    return bZ({
                        delta: m,
                        panZoom: b,
                        transform: g,
                        translateExtent: S,
                        width: v,
                        height: x
                    });
                },
                fitView: (m)=>{
                    const { panZoom: g, width: v, height: x, minZoom: b, maxZoom: S, nodeLookup: N } = p();
                    if (!g) return Promise.resolve(!1);
                    const _ = TN(N, m);
                    return PN({
                        nodes: _,
                        width: v,
                        height: x,
                        panZoom: g,
                        minZoom: b,
                        maxZoom: S
                    }, m);
                },
                fitViewSync: (m)=>{
                    const { panZoom: g, width: v, height: x, minZoom: b, maxZoom: S, nodeLookup: N } = p();
                    if (!g) return !1;
                    const _ = TN(N, m);
                    return PN({
                        nodes: _,
                        width: v,
                        height: x,
                        panZoom: g,
                        minZoom: b,
                        maxZoom: S
                    }, m), _.size > 0;
                },
                cancelConnection: ()=>{
                    f({
                        connection: {
                            ...jD
                        }
                    });
                },
                updateConnection: (m)=>{
                    f({
                        connection: m
                    });
                },
                reset: ()=>f({
                        ...NO()
                    })
            }), Object.is);
    function PX({ initialNodes: e, initialEdges: t, defaultNodes: n, defaultEdges: r, initialWidth: i, initialHeight: o, fitView: s, nodeOrigin: l, nodeExtent: u, children: f }) {
        const [p] = $.useState(()=>TX({
                nodes: e,
                edges: t,
                defaultNodes: n,
                defaultEdges: r,
                width: i,
                height: o,
                fitView: s,
                nodeOrigin: l,
                nodeExtent: u
            }));
        return d.jsx(JZ, {
            value: p,
            children: d.jsx(wY, {
                children: f
            })
        });
    }
    function AX({ children: e, nodes: t, edges: n, defaultNodes: r, defaultEdges: i, width: o, height: s, fitView: l, nodeOrigin: u, nodeExtent: f }) {
        return $.useContext(My) ? d.jsx(d.Fragment, {
            children: e
        }) : d.jsx(PX, {
            initialNodes: t,
            initialEdges: n,
            defaultNodes: r,
            defaultEdges: i,
            initialWidth: o,
            initialHeight: s,
            fitView: l,
            nodeOrigin: u,
            nodeExtent: f,
            children: e
        });
    }
    const FX = {
        width: "100%",
        height: "100%",
        overflow: "hidden",
        position: "relative",
        zIndex: 0
    };
    function DX({ nodes: e, edges: t, defaultNodes: n, defaultEdges: r, className: i, nodeTypes: o, edgeTypes: s, onNodeClick: l, onEdgeClick: u, onInit: f, onMove: p, onMoveStart: m, onMoveEnd: g, onConnect: v, onConnectStart: x, onConnectEnd: b, onClickConnectStart: S, onClickConnectEnd: N, onNodeMouseEnter: _, onNodeMouseMove: I, onNodeMouseLeave: C, onNodeContextMenu: A, onNodeDoubleClick: R, onNodeDragStart: D, onNodeDrag: O, onNodeDragStop: E, onNodesDelete: F, onEdgesDelete: j, onDelete: M, onSelectionChange: L, onSelectionDragStart: P, onSelectionDrag: V, onSelectionDragStop: z, onSelectionContextMenu: Q, onSelectionStart: K, onSelectionEnd: H, onBeforeDelete: G, connectionMode: U, connectionLineType: Z = Ws.Bezier, connectionLineStyle: J, connectionLineComponent: X, connectionLineContainerStyle: te, deleteKeyCode: ie = "Backspace", selectionKeyCode: ae = "Shift", selectionOnDrag: ce = !1, selectionMode: de = vf.Full, panActivationKeyCode: ve = "Space", multiSelectionKeyCode: be = Bg() ? "Meta" : "Control", zoomActivationKeyCode: ge = Bg() ? "Meta" : "Control", snapToGrid: we, snapGrid: ke, onlyRenderVisibleElements: Re = !1, selectNodesOnDrag: $e, nodesDraggable: nt, nodesConnectable: ee, nodesFocusable: ne, nodeOrigin: oe = oM, edgesFocusable: le, edgesReconnectable: me, elementsSelectable: xe = !0, defaultViewport: pe = cY, minZoom: Se = .5, maxZoom: Ge = 2, translateExtent: Qe = yf, preventScrolling: dt = !0, nodeExtent: nn, defaultMarkerColor: Gt = "#b1b1b7", zoomOnScroll: Un = !0, zoomOnPinch: mi = !0, panOnScroll: _r = !1, panOnScrollSpeed: Er = .5, panOnScrollMode: Hn = nl.Free, zoomOnDoubleClick: Mn = !0, panOnDrag: kr = !0, onPaneClick: Fi, onPaneMouseEnter: ro, onPaneMouseMove: ss, onPaneMouseLeave: as, onPaneScroll: ls, onPaneContextMenu: ap, paneClickDistance: pu = 0, nodeClickDistance: lp = 0, children: cp, onReconnect: up, onReconnectStart: hu, onReconnectEnd: dp, onEdgeContextMenu: ya, onEdgeDoubleClick: mu, onEdgeMouseEnter: va, onEdgeMouseMove: Wy, onEdgeMouseLeave: xa, reconnectRadius: Nl = 10, onNodesChange: Sl, onEdgesChange: gu, noDragClassName: Vy = "nodrag", noWheelClassName: Uy = "nowheel", noPanClassName: fp = "nopan", fitView: io, fitViewOptions: pp, connectOnClick: hp, attributionPosition: Hy, proOptions: mp, defaultEdgeOptions: gp, elevateNodesOnSelect: yp, elevateEdgesOnSelect: vp, disableKeyboardA11y: xp = !1, autoPanOnConnect: Ky, autoPanOnNodeDrag: rn, autoPanSpeed: Gy, connectionRadius: yu, isValidConnection: bp, onError: Il, style: Qy, id: vu, nodeDragThreshold: _l, viewport: gi, onViewportChange: Jy, width: Gr, height: Zy, colorMode: Yy = "light", debug: Xy, onScroll: ba, ...El }, wa) {
        const cs = vu || "1", ev = pY(Yy), tv = $.useCallback((kl)=>{
            kl.currentTarget.scrollTo({
                top: 0,
                left: 0,
                behavior: "instant"
            }), ba?.(kl);
        }, [
            ba
        ]);
        return d.jsx("div", {
            "data-testid": "rf__wrapper",
            ...El,
            onScroll: tv,
            style: {
                ...Qy,
                ...FX
            },
            ref: wa,
            className: Tn([
                "react-flow",
                i,
                ev
            ]),
            id: vu,
            children: d.jsxs(AX, {
                nodes: e,
                edges: t,
                width: Gr,
                height: Zy,
                fitView: io,
                nodeOrigin: oe,
                nodeExtent: nn,
                children: [
                    d.jsx(OX, {
                        onInit: f,
                        onNodeClick: l,
                        onEdgeClick: u,
                        onNodeMouseEnter: _,
                        onNodeMouseMove: I,
                        onNodeMouseLeave: C,
                        onNodeContextMenu: A,
                        onNodeDoubleClick: R,
                        nodeTypes: o,
                        edgeTypes: s,
                        connectionLineType: Z,
                        connectionLineStyle: J,
                        connectionLineComponent: X,
                        connectionLineContainerStyle: te,
                        selectionKeyCode: ae,
                        selectionOnDrag: ce,
                        selectionMode: de,
                        deleteKeyCode: ie,
                        multiSelectionKeyCode: be,
                        panActivationKeyCode: ve,
                        zoomActivationKeyCode: ge,
                        onlyRenderVisibleElements: Re,
                        defaultViewport: pe,
                        translateExtent: Qe,
                        minZoom: Se,
                        maxZoom: Ge,
                        preventScrolling: dt,
                        zoomOnScroll: Un,
                        zoomOnPinch: mi,
                        zoomOnDoubleClick: Mn,
                        panOnScroll: _r,
                        panOnScrollSpeed: Er,
                        panOnScrollMode: Hn,
                        panOnDrag: kr,
                        onPaneClick: Fi,
                        onPaneMouseEnter: ro,
                        onPaneMouseMove: ss,
                        onPaneMouseLeave: as,
                        onPaneScroll: ls,
                        onPaneContextMenu: ap,
                        paneClickDistance: pu,
                        nodeClickDistance: lp,
                        onSelectionContextMenu: Q,
                        onSelectionStart: K,
                        onSelectionEnd: H,
                        onReconnect: up,
                        onReconnectStart: hu,
                        onReconnectEnd: dp,
                        onEdgeContextMenu: ya,
                        onEdgeDoubleClick: mu,
                        onEdgeMouseEnter: va,
                        onEdgeMouseMove: Wy,
                        onEdgeMouseLeave: xa,
                        reconnectRadius: Nl,
                        defaultMarkerColor: Gt,
                        noDragClassName: Vy,
                        noWheelClassName: Uy,
                        noPanClassName: fp,
                        rfId: cs,
                        disableKeyboardA11y: xp,
                        nodeExtent: nn,
                        viewport: gi,
                        onViewportChange: Jy
                    }),
                    d.jsx(fY, {
                        nodes: e,
                        edges: t,
                        defaultNodes: n,
                        defaultEdges: r,
                        onConnect: v,
                        onConnectStart: x,
                        onConnectEnd: b,
                        onClickConnectStart: S,
                        onClickConnectEnd: N,
                        nodesDraggable: nt,
                        nodesConnectable: ee,
                        nodesFocusable: ne,
                        edgesFocusable: le,
                        edgesReconnectable: me,
                        elementsSelectable: xe,
                        elevateNodesOnSelect: yp,
                        elevateEdgesOnSelect: vp,
                        minZoom: Se,
                        maxZoom: Ge,
                        nodeExtent: nn,
                        onNodesChange: Sl,
                        onEdgesChange: gu,
                        snapToGrid: we,
                        snapGrid: ke,
                        connectionMode: U,
                        translateExtent: Qe,
                        connectOnClick: hp,
                        defaultEdgeOptions: gp,
                        fitView: io,
                        fitViewOptions: pp,
                        onNodesDelete: F,
                        onEdgesDelete: j,
                        onDelete: M,
                        onNodeDragStart: D,
                        onNodeDrag: O,
                        onNodeDragStop: E,
                        onSelectionDrag: V,
                        onSelectionDragStart: P,
                        onSelectionDragStop: z,
                        onMove: p,
                        onMoveStart: m,
                        onMoveEnd: g,
                        noPanClassName: fp,
                        nodeOrigin: oe,
                        rfId: cs,
                        autoPanOnConnect: Ky,
                        autoPanOnNodeDrag: rn,
                        autoPanSpeed: Gy,
                        onError: Il,
                        connectionRadius: yu,
                        isValidConnection: bp,
                        selectNodesOnDrag: $e,
                        nodeDragThreshold: _l,
                        onBeforeDelete: G,
                        paneClickDistance: pu,
                        debug: Xy
                    }),
                    d.jsx(lY, {
                        onSelectionChange: L
                    }),
                    cp,
                    d.jsx(rY, {
                        proOptions: mp,
                        position: Hy
                    }),
                    d.jsx(tY, {
                        rfId: cs,
                        disableKeyboardA11y: xp
                    })
                ]
            })
        });
    }
    var MX = aM(DX);
    const LX = (e)=>e.domNode?.querySelector(".react-flow__edgelabel-renderer");
    function $X({ children: e }) {
        const t = wt(LX);
        return t ? Qg.createPortal(e, t) : null;
    }
    function qX({ dimensions: e, lineWidth: t, variant: n, className: r }) {
        return d.jsx("path", {
            strokeWidth: t,
            d: `M${e[0] / 2} 0 V${e[1]} M0 ${e[1] / 2} H${e[0]}`,
            className: Tn([
                "react-flow__background-pattern",
                n,
                r
            ])
        });
    }
    function BX({ radius: e, className: t }) {
        return d.jsx("circle", {
            cx: e,
            cy: e,
            r: e,
            className: Tn([
                "react-flow__background-pattern",
                "dots",
                t
            ])
        });
    }
    var Jo;
    (function(e) {
        e.Lines = "lines", e.Dots = "dots", e.Cross = "cross";
    })(Jo || (Jo = {}));
    const zX = {
        [Jo.Dots]: 1,
        [Jo.Lines]: 1,
        [Jo.Cross]: 6
    }, WX = (e)=>({
            transform: e.transform,
            patternId: `pattern-${e.rfId}`
        });
    function OM({ id: e, variant: t = Jo.Dots, gap: n = 20, size: r, lineWidth: i = 1, offset: o = 0, color: s, bgColor: l, style: u, className: f, patternClassName: p }) {
        const m = $.useRef(null), { transform: g, patternId: v } = wt(WX, dn), x = r || zX[t], b = t === Jo.Dots, S = t === Jo.Cross, N = Array.isArray(n) ? n : [
            n,
            n
        ], _ = [
            N[0] * g[2] || 1,
            N[1] * g[2] || 1
        ], I = x * g[2], C = Array.isArray(o) ? o : [
            o,
            o
        ], A = S ? [
            I,
            I
        ] : _, R = [
            C[0] * g[2] || 1 + A[0] / 2,
            C[1] * g[2] || 1 + A[1] / 2
        ], D = `${v}${e || ""}`;
        return d.jsxs("svg", {
            className: Tn([
                "react-flow__background",
                f
            ]),
            style: {
                ...u,
                ...$y,
                "--xy-background-color-props": l,
                "--xy-background-pattern-color-props": s
            },
            ref: m,
            "data-testid": "rf__background",
            children: [
                d.jsx("pattern", {
                    id: D,
                    x: g[0] % _[0],
                    y: g[1] % _[1],
                    width: _[0],
                    height: _[1],
                    patternUnits: "userSpaceOnUse",
                    patternTransform: `translate(-${R[0]},-${R[1]})`,
                    children: b ? d.jsx(BX, {
                        radius: I / 2,
                        className: p
                    }) : d.jsx(qX, {
                        dimensions: A,
                        lineWidth: i,
                        variant: t,
                        className: p
                    })
                }),
                d.jsx("rect", {
                    x: "0",
                    y: "0",
                    width: "100%",
                    height: "100%",
                    fill: `url(#${D})`
                })
            ]
        });
    }
    OM.displayName = "Background";
    const VX = $.memo(OM);
    function UX() {
        return d.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 32 32",
            children: d.jsx("path", {
                d: "M32 18.133H18.133V32h-4.266V18.133H0v-4.266h13.867V0h4.266v13.867H32z"
            })
        });
    }
    function HX() {
        return d.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 32 5",
            children: d.jsx("path", {
                d: "M0 0h32v4.2H0z"
            })
        });
    }
    function KX() {
        return d.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 32 30",
            children: d.jsx("path", {
                d: "M3.692 4.63c0-.53.4-.938.939-.938h5.215V0H4.708C2.13 0 0 2.054 0 4.63v5.216h3.692V4.631zM27.354 0h-5.2v3.692h5.17c.53 0 .984.4.984.939v5.215H32V4.631A4.624 4.624 0 0027.354 0zm.954 24.83c0 .532-.4.94-.939.94h-5.215v3.768h5.215c2.577 0 4.631-2.13 4.631-4.707v-5.139h-3.692v5.139zm-23.677.94c-.531 0-.939-.4-.939-.94v-5.138H0v5.139c0 2.577 2.13 4.707 4.708 4.707h5.138V25.77H4.631z"
            })
        });
    }
    function GX() {
        return d.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 25 32",
            children: d.jsx("path", {
                d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0 8 0 4.571 3.429 4.571 7.619v3.048H3.048A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047zm4.724-13.866H7.467V7.619c0-2.59 2.133-4.724 4.723-4.724 2.591 0 4.724 2.133 4.724 4.724v3.048z"
            })
        });
    }
    function QX() {
        return d.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 25 32",
            children: d.jsx("path", {
                d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0c-4.114 1.828-1.37 2.133.305 2.438 1.676.305 4.42 2.59 4.42 5.181v3.048H3.047A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047z"
            })
        });
    }
    function Gh({ children: e, className: t, ...n }) {
        return d.jsx("button", {
            type: "button",
            className: Tn([
                "react-flow__controls-button",
                t
            ]),
            ...n,
            children: e
        });
    }
    const JX = (e)=>({
            isInteractive: e.nodesDraggable || e.nodesConnectable || e.elementsSelectable,
            minZoomReached: e.transform[2] <= e.minZoom,
            maxZoomReached: e.transform[2] >= e.maxZoom
        });
    function TM({ style: e, showZoom: t = !0, showFitView: n = !0, showInteractive: r = !0, fitViewOptions: i, onZoomIn: o, onZoomOut: s, onFitView: l, onInteractiveChange: u, className: f, children: p, position: m = "bottom-left", orientation: g = "vertical", "aria-label": v = "React Flow controls" }) {
        const x = tn(), { isInteractive: b, minZoomReached: S, maxZoomReached: N } = wt(JX, dn), { zoomIn: _, zoomOut: I, fitView: C } = Zf(), A = ()=>{
            _(), o?.();
        }, R = ()=>{
            I(), s?.();
        }, D = ()=>{
            C(i), l?.();
        }, O = ()=>{
            x.setState({
                nodesDraggable: !b,
                nodesConnectable: !b,
                elementsSelectable: !b
            }), u?.(!b);
        }, E = g === "horizontal" ? "horizontal" : "vertical";
        return d.jsxs(Ly, {
            className: Tn([
                "react-flow__controls",
                E,
                f
            ]),
            position: m,
            style: e,
            "data-testid": "rf__controls",
            "aria-label": v,
            children: [
                t && d.jsxs(d.Fragment, {
                    children: [
                        d.jsx(Gh, {
                            onClick: A,
                            className: "react-flow__controls-zoomin",
                            title: "zoom in",
                            "aria-label": "zoom in",
                            disabled: N,
                            children: d.jsx(UX, {})
                        }),
                        d.jsx(Gh, {
                            onClick: R,
                            className: "react-flow__controls-zoomout",
                            title: "zoom out",
                            "aria-label": "zoom out",
                            disabled: S,
                            children: d.jsx(HX, {})
                        })
                    ]
                }),
                n && d.jsx(Gh, {
                    className: "react-flow__controls-fitview",
                    onClick: D,
                    title: "fit view",
                    "aria-label": "fit view",
                    children: d.jsx(KX, {})
                }),
                r && d.jsx(Gh, {
                    className: "react-flow__controls-interactive",
                    onClick: O,
                    title: "toggle interactivity",
                    "aria-label": "toggle interactivity",
                    children: b ? d.jsx(QX, {}) : d.jsx(GX, {})
                }),
                p
            ]
        });
    }
    TM.displayName = "Controls";
    const ZX = $.memo(TM);
    function YX({ id: e, x: t, y: n, width: r, height: i, style: o, color: s, strokeColor: l, strokeWidth: u, className: f, borderRadius: p, shapeRendering: m, selected: g, onClick: v }) {
        const { background: x, backgroundColor: b } = o || {}, S = s || x || b;
        return d.jsx("rect", {
            className: Tn([
                "react-flow__minimap-node",
                {
                    selected: g
                },
                f
            ]),
            x: t,
            y: n,
            rx: p,
            ry: p,
            width: r,
            height: i,
            style: {
                fill: S,
                stroke: l,
                strokeWidth: u
            },
            shapeRendering: m,
            onClick: v ? (N)=>v(N, e) : void 0
        });
    }
    const XX = $.memo(YX), eee = (e)=>e.nodes.map((t)=>t.id), x0 = (e)=>e instanceof Function ? e : ()=>e;
    function tee({ nodeStrokeColor: e, nodeColor: t, nodeClassName: n = "", nodeBorderRadius: r = 5, nodeStrokeWidth: i, nodeComponent: o = XX, onClick: s }) {
        const l = wt(eee, dn), u = x0(t), f = x0(e), p = x0(n), m = typeof window > "u" || window.chrome ? "crispEdges" : "geometricPrecision";
        return d.jsx(d.Fragment, {
            children: l.map((g)=>d.jsx(ree, {
                    id: g,
                    nodeColorFunc: u,
                    nodeStrokeColorFunc: f,
                    nodeClassNameFunc: p,
                    nodeBorderRadius: r,
                    nodeStrokeWidth: i,
                    NodeComponent: o,
                    onClick: s,
                    shapeRendering: m
                }, g))
        });
    }
    function nee({ id: e, nodeColorFunc: t, nodeStrokeColorFunc: n, nodeClassNameFunc: r, nodeBorderRadius: i, nodeStrokeWidth: o, shapeRendering: s, NodeComponent: l, onClick: u }) {
        const { node: f, x: p, y: m, width: g, height: v } = wt((x)=>{
            const b = x.nodeLookup.get(e), { x: S, y: N } = b.internals.positionAbsolute, { width: _, height: I } = os(b);
            return {
                node: b,
                x: S,
                y: N,
                width: _,
                height: I
            };
        }, dn);
        return !f || f.hidden || !LD(f) ? null : d.jsx(l, {
            x: p,
            y: m,
            width: g,
            height: v,
            style: f.style,
            selected: !!f.selected,
            className: r(f),
            color: t(f),
            borderRadius: i,
            strokeColor: n(f),
            strokeWidth: o,
            shapeRendering: s,
            onClick: u,
            id: f.id
        });
    }
    const ree = $.memo(nee);
    var iee = $.memo(tee);
    const oee = 200, see = 150, aee = (e)=>{
        const t = {
            x: -e.transform[0] / e.transform[2],
            y: -e.transform[1] / e.transform[2],
            width: e.width / e.transform[2],
            height: e.height / e.transform[2]
        };
        return {
            viewBB: t,
            boundingRect: e.nodeLookup.size > 0 ? DD(Qf(e.nodeLookup), t) : t,
            rfId: e.rfId,
            panZoom: e.panZoom,
            translateExtent: e.translateExtent,
            flowWidth: e.width,
            flowHeight: e.height
        };
    }, lee = "react-flow__minimap-desc";
    function PM({ style: e, className: t, nodeStrokeColor: n, nodeColor: r, nodeClassName: i = "", nodeBorderRadius: o = 5, nodeStrokeWidth: s, nodeComponent: l, bgColor: u, maskColor: f, maskStrokeColor: p, maskStrokeWidth: m, position: g = "bottom-right", onClick: v, onNodeClick: x, pannable: b = !1, zoomable: S = !1, ariaLabel: N = "React Flow mini map", inversePan: _, zoomStep: I = 10, offsetScale: C = 5 }) {
        const A = tn(), R = $.useRef(null), { boundingRect: D, viewBB: O, rfId: E, panZoom: F, translateExtent: j, flowWidth: M, flowHeight: L } = wt(aee, dn), P = e?.width ?? oee, V = e?.height ?? see, z = D.width / P, Q = D.height / V, K = Math.max(z, Q), H = K * P, G = K * V, U = C * K, Z = D.x - (H - D.width) / 2 - U, J = D.y - (G - D.height) / 2 - U, X = H + U * 2, te = G + U * 2, ie = `${lee}-${E}`, ae = $.useRef(0), ce = $.useRef();
        ae.current = K, $.useEffect(()=>{
            if (R.current && F) return ce.current = CZ({
                domNode: R.current,
                panZoom: F,
                getTransform: ()=>A.getState().transform,
                getViewScale: ()=>ae.current
            }), ()=>{
                ce.current?.destroy();
            };
        }, [
            F
        ]), $.useEffect(()=>{
            ce.current?.update({
                translateExtent: j,
                width: M,
                height: L,
                inversePan: _,
                pannable: b,
                zoomStep: I,
                zoomable: S
            });
        }, [
            b,
            S,
            _,
            I,
            j,
            M,
            L
        ]);
        const de = v ? (be)=>{
            const [ge, we] = ce.current?.pointer(be) || [
                0,
                0
            ];
            v(be, {
                x: ge,
                y: we
            });
        } : void 0, ve = x ? $.useCallback((be, ge)=>{
            const we = A.getState().nodeLookup.get(ge);
            x(be, we);
        }, []) : void 0;
        return d.jsx(Ly, {
            position: g,
            style: {
                ...e,
                "--xy-minimap-background-color-props": typeof u == "string" ? u : void 0,
                "--xy-minimap-mask-background-color-props": typeof f == "string" ? f : void 0,
                "--xy-minimap-mask-stroke-color-props": typeof p == "string" ? p : void 0,
                "--xy-minimap-mask-stroke-width-props": typeof m == "number" ? m * K : void 0,
                "--xy-minimap-node-background-color-props": typeof r == "string" ? r : void 0,
                "--xy-minimap-node-stroke-color-props": typeof n == "string" ? n : void 0,
                "--xy-minimap-node-stroke-width-props": typeof s == "string" ? s : void 0
            },
            className: Tn([
                "react-flow__minimap",
                t
            ]),
            "data-testid": "rf__minimap",
            children: d.jsxs("svg", {
                width: P,
                height: V,
                viewBox: `${Z} ${J} ${X} ${te}`,
                className: "react-flow__minimap-svg",
                role: "img",
                "aria-labelledby": ie,
                ref: R,
                onClick: de,
                children: [
                    N && d.jsx("title", {
                        id: ie,
                        children: N
                    }),
                    d.jsx(iee, {
                        onClick: ve,
                        nodeColor: r,
                        nodeStrokeColor: n,
                        nodeBorderRadius: o,
                        nodeClassName: i,
                        nodeStrokeWidth: s,
                        nodeComponent: l
                    }),
                    d.jsx("path", {
                        className: "react-flow__minimap-mask",
                        d: `M${Z - U},${J - U}h${X + U * 2}v${te + U * 2}h${-X - U * 2}z
        M${O.x},${O.y}h${O.width}v${O.height}h${-O.width}z`,
                        fillRule: "evenodd",
                        pointerEvents: "none"
                    })
                ]
            })
        });
    }
    PM.displayName = "MiniMap";
    const cee = $.memo(PM);
    function uee({ nodeId: e, position: t, variant: n = Dd.Handle, className: r, style: i = {}, children: o, color: s, minWidth: l = 10, minHeight: u = 10, maxWidth: f = Number.MAX_VALUE, maxHeight: p = Number.MAX_VALUE, keepAspectRatio: m = !1, shouldResize: g, onResizeStart: v, onResize: x, onResizeEnd: b }) {
        const S = dM(), N = typeof e == "string" ? e : S, _ = tn(), I = $.useRef(null), C = n === Dd.Line ? "right" : "bottom-right", A = t ?? C, R = $.useRef(null);
        $.useEffect(()=>{
            if (!(!I.current || !N)) return R.current || (R.current = WZ({
                domNode: I.current,
                nodeId: N,
                getStoreItems: ()=>{
                    const { nodeLookup: F, transform: j, snapGrid: M, snapToGrid: L, nodeOrigin: P, domNode: V } = _.getState();
                    return {
                        nodeLookup: F,
                        transform: j,
                        snapGrid: M,
                        snapToGrid: L,
                        nodeOrigin: P,
                        paneDomNode: V
                    };
                },
                onChange: (F, j)=>{
                    const { triggerNodeChanges: M, nodeLookup: L, parentLookup: P, nodeOrigin: V } = _.getState(), z = [], Q = {
                        x: F.x,
                        y: F.y
                    }, K = L.get(N);
                    if (K && K.expandParent && K.parentId) {
                        const H = K.origin ?? V, G = F.width ?? K.measured.width, U = F.height ?? K.measured.height, Z = {
                            id: K.id,
                            parentId: K.parentId,
                            rect: {
                                width: G,
                                height: U,
                                ...$D({
                                    x: F.x ?? K.position.x,
                                    y: F.y ?? K.position.y
                                }, {
                                    width: G,
                                    height: U
                                }, K.parentId, L, H)
                            }
                        }, J = pI([
                            Z
                        ], L, P, V);
                        z.push(...J), Q.x = F.x ? Math.max(H[0] * G, F.x) : void 0, Q.y = F.y ? Math.max(H[1] * U, F.y) : void 0;
                    }
                    if (Q.x !== void 0 && Q.y !== void 0) {
                        const H = {
                            id: N,
                            type: "position",
                            position: {
                                ...Q
                            }
                        };
                        z.push(H);
                    }
                    if (F.width !== void 0 && F.height !== void 0) {
                        const H = {
                            id: N,
                            type: "dimensions",
                            resizing: !0,
                            setAttributes: !0,
                            dimensions: {
                                width: F.width,
                                height: F.height
                            }
                        };
                        z.push(H);
                    }
                    for (const H of j){
                        const G = {
                            ...H,
                            type: "position"
                        };
                        z.push(G);
                    }
                    M(z);
                },
                onEnd: ()=>{
                    const F = {
                        id: N,
                        type: "dimensions",
                        resizing: !1
                    };
                    _.getState().triggerNodeChanges([
                        F
                    ]);
                }
            })), R.current.update({
                controlPosition: A,
                boundaries: {
                    minWidth: l,
                    minHeight: u,
                    maxWidth: f,
                    maxHeight: p
                },
                keepAspectRatio: m,
                onResizeStart: v,
                onResize: x,
                onResizeEnd: b,
                shouldResize: g
            }), ()=>{
                R.current?.destroy();
            };
        }, [
            A,
            l,
            u,
            f,
            p,
            m,
            v,
            x,
            b,
            g
        ]);
        const D = A.split("-"), O = n === Dd.Line ? "borderColor" : "backgroundColor", E = s ? {
            ...i,
            [O]: s
        } : i;
        return d.jsx("div", {
            className: Tn([
                "react-flow__resize-control",
                "nodrag",
                ...D,
                n,
                r
            ]),
            ref: I,
            style: E,
            children: o
        });
    }
    $.memo(uee);
    const Et = "icon-[solar--home-outline]", mI = P9({
        shape: T.object({
            name: T.string().min(1),
            probability: vo(),
            limit: vo(),
            image: T.instanceof(FileList, {
                message: "You must upload a file."
            }).transform((e)=>e[0]).refine((e)=>(e && e.size < 5 * 1024 * 1024, !0), {
                message: Wr.text("File size must be less than 5MB")
            }).refine((e)=>e ? [
                    "image/png",
                    "image/jpeg",
                    "image/webp"
                ].includes(e.type) : !0, {
                message: "Only PNG/JPEG/WEBP files are allowed."
            }).optional()
        }),
        filter: pr
    }), SO = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(mI.shape),
            defaultValues: {
                name: "",
                limit: 32,
                probability: 100,
                ...t
            }
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "name",
                    label: d.jsx(B, {
                        label: "Region name (label)"
                    }),
                    children: d.jsx("input", {
                        type: "text",
                        className: s.input(),
                        ...o.register("name")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "image",
                    label: d.jsx(B, {
                        label: "Region image (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Region image (hint)"
                    }),
                    children: d.jsx("input", {
                        type: "file",
                        className: s.input(),
                        ...o.register("image")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "probability",
                    label: d.jsx(B, {
                        label: "Region spawn probability (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Region spawn probability (hint)"
                    }),
                    required: !0,
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        min: .5,
                        max: 100,
                        step: .5,
                        ...o.register("probability")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "limit",
                    label: d.jsx(B, {
                        label: "Region limit (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Region limit (hint)"
                    }),
                    required: !0,
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        min: 1,
                        step: 1,
                        ...o.register("limit")
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: WF,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, Yc = async (e)=>new Promise((t, n)=>{
            const r = new Image;
            r.src = URL.createObjectURL(e), r.onload = ()=>{
                const i = document.createElement("canvas");
                i.width = r.width, i.height = r.height;
                const o = i.getContext("2d");
                if (o) return o.drawImage(r, 0, 0), t(i.toDataURL("image/webp", 1));
                n(new Error("Failed to convert image to WebP-64"));
            }, r.onerror = ()=>{
                n(new Error("Failed to load image"));
            };
        }), b0 = vn(), dee = [
        b0({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Region name (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsx(Te, {
                    to: "/$locale/apps/derivean/root/region/$id/view",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: t
                });
            },
            size: 18
        }),
        b0({
            name: "probability",
            header () {
                return d.jsx(B, {
                    label: "Region probability (label)"
                });
            },
            render ({ value: e }) {
                return d.jsxs(cr, {
                    children: [
                        mt({
                            number: e
                        }),
                        "%"
                    ]
                });
            },
            size: 14
        }),
        b0({
            name: "limit",
            header () {
                return d.jsx(B, {
                    label: "Region limit (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 18
        })
    ], AM = ({ table: e, ...t })=>{
        const n = Bt([
            [
                "Region"
            ]
        ]);
        return d.jsx(gn, {
            table: yn({
                ...e,
                columns: dee
            }),
            action: {
                table () {
                    return d.jsx(zt, {
                        children: d.jsx(gt, {
                            label: d.jsx(B, {
                                label: "Create region (menu)"
                            }),
                            textTitle: d.jsx(B, {
                                label: "Create region (modal)"
                            }),
                            icon: kg,
                            children: ({ close: r })=>d.jsx(SO, {
                                    mutation: Ye({
                                        async mutationFn ({ image: i, ...o }) {
                                            return Pe.transaction().execute(async (s)=>s.insertInto("Region").values({
                                                    id: xt(),
                                                    ...o,
                                                    image: i ? await Yc(i) : null
                                                }).execute());
                                        },
                                        async onSuccess () {
                                            await n(), r();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: r }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit region (modal)"
                                }),
                                icon: kg,
                                children: ({ close: i })=>d.jsx(SO, {
                                        defaultValues: r,
                                        mutation: Ye({
                                            async mutationFn ({ image: o, ...s }) {
                                                return Pe.transaction().execute(async (l)=>l.updateTable("Region").set({
                                                        ...s,
                                                        image: o ? await Yc(o) : null
                                                    }).where("id", "=", r.id).execute());
                                            },
                                            async onSuccess () {
                                                await n(), i();
                                            }
                                        })
                                    })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete region (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>Pe.transaction().execute(async (i)=>i.deleteFrom("Region").where("id", "=", r.id).execute()),
                                    textContent: d.jsx(B, {
                                        label: "Delete region (content)"
                                    }),
                                    textToast: "Delete region",
                                    invalidator: n
                                })
                            })
                        ]
                    });
                }
            },
            ...t
        });
    }, fee = (e)=>d.jsx(bF, {
            icon: kg,
            table: AM,
            textTitle: d.jsx(B, {
                label: "Select regions (title)"
            }),
            render: ({ entities: t })=>d.jsx(ca, {
                    items: t,
                    css: {
                        base: [
                            "flex",
                            "flex-row",
                            "gap-2"
                        ]
                    },
                    render: ({ entity: n })=>d.jsx("div", {
                            className: it([
                                "p-2",
                                "border",
                                "border-blue-300",
                                "bg-blue-50",
                                "rounded-sm"
                            ]),
                            children: n.name
                        })
                }),
            queryKey: "Region",
            query: async ({ filter: t, cursor: n })=>Pe.transaction().execute(async (r)=>Vt({
                        select: r.selectFrom("Region as r").selectAll(),
                        output: mI.entity,
                        query ({ select: i, where: o }) {
                            let s = i;
                            if (o?.id && (s = s.where("r.id", "=", o.id)), o?.idIn && (s = s.where("r.id", "in", o.idIn)), o?.fulltext) {
                                const l = `%${o.fulltext}%`.toLowerCase();
                                s = s.where((u)=>u.or([
                                        u("r.id", "like", l),
                                        u("r.name", "like", l)
                                    ]));
                            }
                            return s;
                        },
                        filter: t,
                        cursor: n
                    })),
            ...e
        }), gI = w9({
        shape: T.object({
            name: T.string().min(1),
            cycles: vo(),
            sort: vo(),
            limit: vo(),
            regionIds: T.array(T.string()).optional(),
            image: T.instanceof(FileList, {
                message: "You must upload a file."
            }).transform((e)=>e[0]).refine((e)=>(e && e.size < 5 * 1024 * 1024, !0), {
                message: Wr.text("File size must be less than 5MB")
            }).refine((e)=>e ? [
                    "image/png",
                    "image/jpeg",
                    "image/webp"
                ].includes(e.type) : !0, {
                message: "Only PNG/JPEG/WEBP files are allowed."
            }).optional()
        }),
        filter: pr.merge(T.object({
            name: T.string().optional()
        }))
    }), Wg = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(gI.shape),
            defaultValues: {
                cycles: 1,
                sort: 0,
                limit: 1,
                regionIds: [],
                ...t
            }
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "name",
                    label: d.jsx(B, {
                        label: "Building name (label)"
                    }),
                    required: !0,
                    children: d.jsx("input", {
                        type: "text",
                        className: s.input(),
                        ...o.register("name")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "cycles",
                    label: d.jsx(B, {
                        label: "Construction cycles (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Amount of cycles to build this building (hint)"
                    }),
                    required: !0,
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        min: 1,
                        ...o.register("cycles")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "limit",
                    label: d.jsx(B, {
                        label: "Building limit (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Maximum number of building a player can build (hint)"
                    }),
                    required: !0,
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        min: 1,
                        ...o.register("limit")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "sort",
                    label: d.jsx(B, {
                        label: "Blueprint sort (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Sort blueprints by this number (hint)"
                    }),
                    required: !0,
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        min: 0,
                        ...o.register("sort")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "regionIds",
                    label: d.jsx(B, {
                        label: "Regions (label)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "regionIds",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(fee, {
                                ...u
                            })
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "image",
                    label: d.jsx(B, {
                        label: "Building image (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Building image (hint)"
                    }),
                    children: d.jsx("input", {
                        type: "file",
                        className: s.input(),
                        ...o.register("image")
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: Et,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, Oi = "icon-[fluent-mdl2--production-floor-management]", pee = ({ id: e, data: t, isConnectable: n })=>{
        const { locale: r } = Ke({
            from: "/$locale"
        }), i = gl();
        return d.jsxs("div", {
            className: "min-w-[14rem]",
            onClick: ()=>{
                i({
                    to: "/$locale/apps/derivean/root/editor",
                    params: {
                        locale: r
                    },
                    search: {
                        zoomTo: e
                    }
                });
            },
            onDoubleClick: ()=>{
                i({
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: r,
                        id: e
                    }
                });
            },
            children: [
                d.jsx(Zc, {
                    type: "target",
                    position: He.Left,
                    className: "w-4 h-4"
                }),
                d.jsxs("div", {
                    className: "flex flex-col gap-2 items-start",
                    children: [
                        d.jsx("div", {
                            className: "flex flex-row items-center gap-2",
                            onClick: (o)=>o.stopPropagation(),
                            onDoubleClick: (o)=>o.stopPropagation(),
                            onMouseDown: (o)=>o.stopPropagation(),
                            children: d.jsx(Te, {
                                icon: Et,
                                to: "/$locale/apps/derivean/root/blueprint/$id/view",
                                params: {
                                    locale: r,
                                    id: e
                                },
                                children: t.name
                            })
                        }),
                        d.jsxs("div", {
                            className: "flex flex-row items-center justify-between gap-2 border bg-slate-50 border-slate-200 rounded-sm w-full p-1",
                            onClick: (o)=>o.stopPropagation(),
                            onDoubleClick: (o)=>o.stopPropagation(),
                            onMouseDown: (o)=>o.stopPropagation(),
                            children: [
                                d.jsxs("div", {
                                    className: "flex flex-row gap-2",
                                    children: [
                                        d.jsx(Te, {
                                            icon: Xt,
                                            to: "/$locale/apps/derivean/root/blueprint/$id/requirements",
                                            params: {
                                                locale: r,
                                                id: e
                                            }
                                        }),
                                        d.jsx(Te, {
                                            icon: Oi,
                                            to: "/$locale/apps/derivean/root/blueprint/$id/production",
                                            params: {
                                                locale: r,
                                                id: e
                                            }
                                        }),
                                        d.jsx(Te, {
                                            icon: tF,
                                            to: "/$locale/apps/derivean/root/blueprint/$id/edit",
                                            params: {
                                                locale: r,
                                                id: e
                                            }
                                        })
                                    ]
                                }),
                                d.jsx("div", {
                                    children: d.jsx(xl, {
                                        target: d.jsx(Wf, {
                                            iconEnabled: _n,
                                            css: {
                                                base: [
                                                    "text-red-500"
                                                ]
                                            }
                                        }),
                                        outside: !0,
                                        textTitle: d.jsx(B, {
                                            label: "Delete blueprint (modal)"
                                        }),
                                        css: {
                                            modal: [
                                                "w-1/3"
                                            ]
                                        },
                                        children: ()=>{
                                            const o = Bt([
                                                [
                                                    "Editor"
                                                ]
                                            ]);
                                            return d.jsx(Hr, {
                                                callback: async ()=>Pe.transaction().execute(async (s)=>s.deleteFrom("Blueprint").where("id", "=", t.id).execute()),
                                                textContent: d.jsx(B, {
                                                    label: "Delete blueprint (content)"
                                                }),
                                                textToast: "Delete blueprint",
                                                invalidator: o
                                            });
                                        }
                                    })
                                })
                            ]
                        })
                    ]
                }),
                d.jsx(Zc, {
                    type: "source",
                    position: He.Right,
                    isConnectable: n,
                    className: "w-4 h-4"
                })
            ]
        });
    }, hee = ({ nodeId: e })=>{
        const { fitView: t } = Zf();
        return $.useEffect(()=>{
            e && setTimeout(()=>{
                t({
                    nodes: [
                        {
                            id: e
                        }
                    ],
                    duration: 750,
                    minZoom: 1,
                    maxZoom: 1
                });
            }, 50);
        }, [
            e
        ]), null;
    }, mee = ({ data: e, zoomTo: t })=>{
        const n = Bt([]), r = Ye({
            async mutationFn ({ blueprintId: i, dependencyId: o }) {
                return Pe.transaction().execute(async (s)=>s.insertInto("Blueprint_Dependency").values({
                        id: xt(),
                        blueprintId: i,
                        dependencyId: o
                    }).execute());
            },
            async onSuccess () {
                await n();
            }
        });
        return d.jsx("div", {
            className: "w-fit h-fit mx-auto border border-slate-300 rounded-md shadow-md m-8",
            children: d.jsx("div", {
                style: {
                    width: "95vw",
                    height: "85vh"
                },
                children: d.jsxs(MX, {
                    nodes: e.nodes,
                    edges: e.edges,
                    onConnect: (i)=>{
                        r.mutate({
                            blueprintId: i.target,
                            dependencyId: i.source
                        });
                    },
                    fitView: !0,
                    snapGrid: [
                        16,
                        16
                    ],
                    elementsSelectable: !1,
                    nodeTypes: $.useMemo(()=>({
                            blueprint (i) {
                                return d.jsx(pee, {
                                    ...i
                                });
                            }
                        }), []),
                    edgeTypes: $.useMemo(()=>({
                            dependency ({ id: i, sourceX: o, sourceY: s, targetX: l, targetY: u, sourcePosition: f, targetPosition: p, style: m = {}, markerEnd: g }) {
                                const { setEdges: v } = Zf(), [x, b, S] = cI({
                                    sourceX: o,
                                    sourceY: s,
                                    sourcePosition: f,
                                    targetX: l,
                                    targetY: u,
                                    targetPosition: p
                                }), N = Bt([]), _ = Ye({
                                    async mutationFn ({ id: I }) {
                                        return Pe.transaction().execute(async (C)=>{
                                            await C.deleteFrom("Blueprint_Dependency").where("id", "=", I).execute();
                                        });
                                    },
                                    async onSuccess () {
                                        v((I)=>I.filter((C)=>C.id !== i)), await N();
                                    }
                                });
                                return d.jsxs(d.Fragment, {
                                    children: [
                                        d.jsx(Yf, {
                                            path: x,
                                            markerEnd: g,
                                            style: m
                                        }),
                                        d.jsx($X, {
                                            children: d.jsx("div", {
                                                className: it("nodrag nopan", [
                                                    "flex",
                                                    "items-center",
                                                    "justify-center",
                                                    "cursor-pointer",
                                                    "bg-red-200",
                                                    "text-red-500",
                                                    "border",
                                                    "border-red-300",
                                                    "hover:border-red-600",
                                                    "hover:bg-red-300",
                                                    "hover:text-red-700",
                                                    "rounded-full",
                                                    "w-4",
                                                    "h-4",
                                                    "z-20"
                                                ]),
                                                style: {
                                                    position: "absolute",
                                                    pointerEvents: "all",
                                                    transformOrigin: "center",
                                                    transform: `translate(-50%, -50%) translate(${b}px,${S}px)`
                                                },
                                                children: d.jsx(st, {
                                                    icon: _.isPending ? WS : qS,
                                                    onClick: ()=>{
                                                        _.mutate({
                                                            id: i
                                                        });
                                                    }
                                                })
                                            })
                                        })
                                    ]
                                });
                            }
                        }), []),
                    children: [
                        d.jsx(hee, {
                            nodeId: t
                        }),
                        d.jsx(ZX, {
                            orientation: "horizontal",
                            showInteractive: !1,
                            showZoom: !1,
                            children: d.jsx(xl, {
                                target: d.jsx(Wf, {
                                    className: "react-flow__controls-button",
                                    iconEnabled: Et
                                }),
                                outside: !1,
                                textTitle: d.jsx(B, {
                                    label: "Create blueprint (modal)"
                                }),
                                css: {
                                    modal: [
                                        "w-1/3"
                                    ]
                                },
                                children: ({ close: i })=>{
                                    const o = Bt([
                                        [
                                            "Editor"
                                        ]
                                    ]), { locale: s } = Ke({
                                        from: "/$locale"
                                    }), l = gl();
                                    return d.jsx(Wg, {
                                        mutation: Ye({
                                            async mutationFn ({ image: u, regionIds: f, ...p }) {
                                                return Pe.transaction().execute(async (m)=>{
                                                    const g = await m.insertInto("Blueprint").values({
                                                        id: xt(),
                                                        ...p,
                                                        image: u ? await iA(u) : null
                                                    }).returningAll().executeTakeFirstOrThrow();
                                                    return f?.length && await m.insertInto("Blueprint_Region").values(f.map((v)=>({
                                                            id: xt(),
                                                            blueprintId: g.id,
                                                            regionId: v
                                                        }))).execute(), g;
                                                });
                                            },
                                            async onSuccess (u) {
                                                await o(), l({
                                                    to: "/$locale/apps/derivean/root/editor",
                                                    params: {
                                                        locale: s
                                                    },
                                                    search: {
                                                        zoomTo: u.id
                                                    }
                                                }), i();
                                            }
                                        })
                                    });
                                }
                            })
                        }),
                        d.jsx(cee, {}),
                        d.jsx(VX, {
                            variant: Jo.Dots,
                            gap: 12,
                            size: 1
                        })
                    ]
                })
            })
        });
    }, gee = ({ graph: e, nodes: t, edges: n, size: r = {
        width: 344,
        height: 36
    } })=>(e.setGraph({
            rankdir: "LR",
            nodesep: 125,
            edgesep: 65,
            ranksep: 50
        }), t.forEach((i)=>{
            e.setNode(i.id, {
                width: r.width,
                height: r.height
            });
        }), n.forEach((i)=>{
            e.setEdge(i.source, i.target);
        }), ZF.layout(e, {}), {
            nodes: t.map((i)=>{
                const o = e.node(i.id);
                return {
                    ...i,
                    targetPosition: "left",
                    sourcePosition: "right",
                    position: {
                        x: o.x - r.width / 2,
                        y: o.y - r.height / 2
                    }
                };
            }),
            edges: n
        }), BN = Le("/$locale/apps/derivean/root/editor")({
        validateSearch: en(T.object({
            zoomTo: T.string().optional()
        })),
        async loader ({ context: { kysely: e } }) {
            const t = (await e.selectFrom("Blueprint").select([
                "id",
                "name",
                "cycles",
                "sort"
            ]).execute()).map((r)=>({
                    id: r.id,
                    position: {
                        x: 0,
                        y: 0
                    },
                    data: r,
                    type: "blueprint"
                })), n = (await e.selectFrom("Blueprint_Dependency").select([
                "id",
                "blueprintId",
                "dependencyId"
            ]).execute()).map(({ id: r, blueprintId: i, dependencyId: o })=>({
                    id: r,
                    source: o,
                    target: i,
                    type: "dependency"
                }));
            return gee({
                graph: new ZF.graphlib.Graph().setDefaultEdgeLabel(()=>({})),
                nodes: [
                    ...t
                ],
                edges: [
                    ...n
                ]
            });
        },
        component () {
            const e = BN.useLoaderData(), { zoomTo: t } = BN.useSearch();
            return d.jsx(mee, {
                data: e,
                zoomTo: t
            });
        }
    }), yee = ()=>Ye({
            mutationKey: [
                "useRegisterMutation"
            ],
            async mutationFn ({ login: e, name: t, password1: n }) {
                return Pe.transaction().execute(async (r)=>Vf.parse(await r.insertInto("User").values({
                        id: xt(),
                        name: t,
                        login: e,
                        password: VP.hash(n)
                    }).returning([
                        "User.id",
                        "User.name",
                        "User.login"
                    ]).executeTakeFirstOrThrow()));
            }
        }), vee = T.object({
        name: T.string().min(1),
        login: T.string().min(1),
        password1: T.string().min(1),
        password2: T.string().min(1)
    }).refine((e)=>e.password1 === e.password2, {
        message: "Passwords must match",
        path: [
            "password1"
        ]
    }), xee = ({ onSuccess: e })=>{
        const t = yee(), n = Wn({
            resolver: Vn(vee)
        }), r = zn({
            isLoading: n.formState.isLoading,
            isSubmitting: n.formState.isSubmitting
        }).slots;
        return d.jsxs("form", {
            className: r.base(),
            onSubmit: n.handleSubmit(async (i)=>t.mutateAsync(i, {
                    onSuccess: e,
                    onError: (o)=>{
                        SS({
                            error: o,
                            errors: [
                                tS({
                                    error: o,
                                    schema: NS,
                                    onError: ({ data: s })=>{
                                        n.setError("root", {
                                            message: s.message
                                        });
                                    }
                                })
                            ],
                            onError: (s)=>{
                                n.setError("root", {
                                    message: s.message
                                });
                            }
                        });
                    }
                }).catch(()=>{})),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: n.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: n.formState,
                    name: "name",
                    label: d.jsx(B, {
                        label: "Name (label)"
                    }),
                    children: d.jsx("input", {
                        type: "text",
                        className: r.input(),
                        ...n.register("name")
                    })
                }),
                d.jsx(ot, {
                    formState: n.formState,
                    name: "login",
                    label: d.jsx(B, {
                        label: "Login (label)"
                    }),
                    children: d.jsx("input", {
                        type: "text",
                        className: r.input(),
                        ...n.register("login")
                    })
                }),
                d.jsx(ot, {
                    formState: n.formState,
                    name: "password1",
                    label: d.jsx(B, {
                        label: "Password 1 (label)"
                    }),
                    children: d.jsx("input", {
                        type: "password",
                        className: r.input(),
                        ...n.register("password1")
                    })
                }),
                d.jsx(ot, {
                    formState: n.formState,
                    name: "password2",
                    label: d.jsx(B, {
                        label: "Password 2 (label)"
                    }),
                    children: d.jsx("input", {
                        type: "password",
                        className: r.input(),
                        ...n.register("password2")
                    })
                }),
                d.jsx(ft, {
                    iconEnabled: "icon-[mdi--register-outline]",
                    iconDisabled: "icon-[mdi--register-outline]",
                    type: "submit",
                    children: d.jsx(B, {
                        label: "Register (submit)"
                    })
                })
            ]
        });
    }, bee = Le("/$locale/apps/derivean/public/register")({
        component: ()=>{
            const e = gl();
            return d.jsx("div", {
                className: it([
                    "flex",
                    "justify-center",
                    "h-screen",
                    "bg-linear-to-tr",
                    "from-blue-700",
                    "to-blue-400"
                ]),
                children: d.jsxs("div", {
                    className: "flex flex-col bg-slate-100 p-20 w-1/2 m-10 drop-shadow-xl",
                    children: [
                        d.jsx("hr", {
                            className: "my-12 h-0.5 border-t-0 bg-slate-300"
                        }),
                        d.jsx(xee, {
                            onSuccess: async (t)=>{
                                lu.set("session", t), await e({
                                    to: "/$locale/apps/derivean/game"
                                });
                            }
                        })
                    ]
                })
            });
        }
    }), wee = Le("/$locale/apps/derivean/public/logout")({
        pendingComponent () {
            return d.jsx("div", {
                className: it([
                    "flex items-center justify-center h-screen",
                    "bg-linear-to-tr",
                    "from-blue-700",
                    "to-blue-400"
                ]),
                children: d.jsx(NF, {
                    icon: VS,
                    textTitle: d.jsx(B, {
                        label: "Logout (label)"
                    }),
                    textMessage: d.jsx(B, {
                        label: "Logout in progress..."
                    }),
                    css: {
                        base: [
                            "p-4",
                            "bg-slate-200",
                            "rounded-sm"
                        ]
                    }
                })
            });
        },
        async loader ({ params: { locale: e } }) {
            throw lu.remove("session"), _f({
                to: "/$locale/apps/derivean/public/login",
                params: {
                    locale: e
                }
            });
        }
    }), Nee = ()=>Ye({
            mutationKey: [
                "useLoginMutation"
            ],
            async mutationFn ({ login: e, password: t }) {
                return Pe.transaction().execute(async (n)=>{
                    const r = await n.selectFrom("User as u").select([
                        "u.id",
                        "u.login",
                        "u.name"
                    ]).where("u.login", "=", e).where("u.password", "=", VP.hash(t)).executeTakeFirstOrThrow();
                    return {
                        id: r.id,
                        login: r.login,
                        name: r.name
                    };
                });
            }
        }), See = T.object({
        login: T.string().min(1),
        password: T.string().min(1)
    }), Iee = ({ onSuccess: e })=>{
        const { locale: t } = Ke({
            from: "/$locale"
        }), n = Nee(), r = Wn({
            resolver: Vn(See)
        }), i = zn({
            isLoading: r.formState.isLoading,
            isSubmitting: r.formState.isSubmitting
        }).slots;
        return d.jsxs("form", {
            className: i.base(),
            onSubmit: r.handleSubmit(async (o)=>n.mutateAsync(o, {
                    onSuccess: e,
                    onError: (s)=>{
                        SS({
                            error: s,
                            errors: [
                                tS({
                                    error: s,
                                    schema: NS,
                                    onError: ({ data: l })=>{
                                        r.setError("root", {
                                            message: l.message
                                        });
                                    }
                                })
                            ],
                            onError: (l)=>{
                                r.setError("root", {
                                    message: l.message
                                });
                            }
                        });
                    }
                }).catch(()=>{})),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: r.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: r.formState,
                    name: "login",
                    label: d.jsx(B, {
                        label: "Login (label)"
                    }),
                    children: d.jsx("input", {
                        type: "text",
                        className: i.input(),
                        ...r.register("login")
                    })
                }),
                d.jsx(ot, {
                    formState: r.formState,
                    name: "password",
                    label: d.jsx(B, {
                        label: "Password (label)"
                    }),
                    children: d.jsx("input", {
                        type: "password",
                        className: i.input(),
                        ...r.register("password")
                    })
                }),
                d.jsxs("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: [
                        d.jsx(Te, {
                            icon: "icon-[mdi--register-outline]",
                            to: "/$locale/apps/derivean/public/register",
                            params: {
                                locale: t
                            },
                            children: d.jsx(B, {
                                label: "Register (link)"
                            })
                        }),
                        d.jsx(ft, {
                            iconEnabled: "icon-[uiw--login]",
                            iconDisabled: "icon-[uiw--login]",
                            type: "submit",
                            children: d.jsx(B, {
                                label: "Login (submit)"
                            })
                        })
                    ]
                })
            ]
        });
    }, _ee = Le("/$locale/apps/derivean/public/login")({
        component: ()=>{
            const e = gl();
            return d.jsx("div", {
                className: it([
                    "flex",
                    "justify-center",
                    "h-screen",
                    "bg-linear-to-tr",
                    "from-blue-700",
                    "to-blue-400"
                ]),
                children: d.jsxs("div", {
                    className: "flex flex-col bg-slate-100 p-20 w-1/2 m-10 drop-shadow-xl",
                    children: [
                        d.jsx("hr", {
                            className: "my-12 h-0.5 border-t-0 bg-slate-300"
                        }),
                        d.jsx(Iee, {
                            onSuccess: async (t)=>{
                                lu.set("session", t), await e({
                                    to: "/$locale/apps/derivean/game"
                                });
                            }
                        })
                    ]
                })
            });
        }
    }), FM = 16, DM = 16, Eee = DM * FM, nc = {
        plotSize: FM,
        plotCount: DM,
        chunkSize: Eee
    };
    class Nf {
        constructor(t, n){
            this.max = t, this._seed = n;
        }
        cast(t, n) {
            return BigInt.asUintN(n, t);
        }
        checkNum(t) {
            if (t > this.max) throw new Error(`Number greater than ${this.max}`);
        }
        reset() {
            if (this.constructor === Nf) throw new Error("Method not implemented");
        }
        _int() {
            if (this.constructor === Nf) throw new Error("Method not implemented");
            return BigInt(0);
        }
        bool() {
            return this.float() >= .5;
        }
        coin(t = .5) {
            return this.float() < t;
        }
        int() {
            return Number(this._int());
        }
        bigInt() {
            return this._int();
        }
        float() {
            return this.int() * (1 / this.max);
        }
        float53() {
            const t = this.int() >>> 5, n = this.int() >>> 6;
            return (t * 67108864 + n) * (1 / 9007199254740992);
        }
        randRange(t, n) {
            const r = n - t, i = this.max % r;
            let o = this.int();
            for(; o < i;)o = this.int();
            return t + o % r;
        }
        randBelow(t) {
            return this.randRange(0, t);
        }
        choice(t) {
            return t[this.randBelow(t.length)];
        }
        shuffle(t, n = !0) {
            let r = t;
            n || (r = Array.from(r));
            for(let i = r.length - 1; i > 0; i--){
                const o = this.randRange(0, i), s = r[i];
                r[i] = r[o], r[o] = s;
            }
            return r;
        }
        initArray(t, n) {
            return Array.from({
                length: t
            }, n);
        }
        boolArray(t) {
            return this.initArray(t, ()=>this.bool());
        }
        coinArray(t, n = .5) {
            return this.initArray(t, ()=>this.coin(n));
        }
        intArray(t) {
            return this.initArray(t, ()=>this.int());
        }
        bigIntArray(t) {
            return this.initArray(t, ()=>this.bigInt());
        }
        randRangeArray(t, n, r) {
            return this.initArray(t, ()=>this.randRange(n, r));
        }
        floatArray(t) {
            return this.initArray(t, ()=>this.float());
        }
        float53Array(t) {
            return this.initArray(t, ()=>this.float53());
        }
    }
    class kee extends Nf {
        constructor(t, n){
            super(t, n);
        }
        int() {
            return Number(this._int() >> 11n);
        }
        float() {
            return this.int() / this.max;
        }
        float53() {
            return this.float();
        }
    }
    const Cee = 2 ** 32, jee = 2 ** 53;
    class MM extends kee {
        constructor(t = Date.now(), n = 13, r = 7, i = 17){
            super(jee, BigInt(t)), this.seed = t, this.a = this.cast(BigInt(n), 64), this.b = this.cast(BigInt(r), 64), this.c = this.cast(BigInt(i), 64);
        }
        reset() {
            this.x = this.seed;
        }
        get seed() {
            return this._seed;
        }
        set seed(t) {
            this._seed = this.cast(BigInt(t), 64), this.x = this._seed;
        }
        _int() {
            let { x: t } = this;
            return t ^= t << this.a, t = this.cast(t, 64), t ^= t >> this.b, t ^= t << this.c, t = this.cast(t, 64), this.x = t, t;
        }
    }
    class LM extends Nf {
        constructor(t = Date.now(), n = 362436069, r = 521288629, i = 88675123, o = 5783321, s = 6615241, l = 362437){
            super(Cee, BigInt(t)), this._seed = this.cast(this._seed, 32), this.x = this._seed, this.y = this.cast(BigInt(n), 32), this.z = this.cast(BigInt(r), 32), this.w = this.cast(BigInt(i), 32), this.v = this.cast(BigInt(o), 32), this.d = this.cast(BigInt(s), 32), this.weyl = this.cast(BigInt(l), 32), this.origParams = {
                y: this.y,
                z: this.z,
                w: this.w,
                v: this.v,
                d: this.d
            };
        }
        reset() {
            this.x = this.seed, Object.assign(this, this.origParams);
        }
        get seed() {
            return this._seed;
        }
        set seed(t) {
            this._seed = this.cast(BigInt(t), 32), this.reset();
        }
        _int() {
            let t = this.x, { v: n } = this;
            return t ^= t >> 2n, t ^= t << 1n, n ^= n << 4n, this.x = this.y, this.y = this.z, this.z = this.w, this.w = this.v, this.v = this.cast(n ^ t, 32), this.d += this.weyl, this.cast(this.d + this.v, 32);
        }
    }
    new MM(Date.now());
    new MM(Date.now());
    const Ree = ({ seed: e, plotSize: t, plotCount: n, tile: r, scale: i = 1, noise: o, layers: s })=>{
        const l = new LM(rA(e)), u = 1 / (n * i);
        s({
            random () {
                return l.float();
            }
        }).sort((p, m)=>p.level - m.level);
        const { land: f } = o({
            seed: e
        });
        return ({ x: p, z: m })=>{
            const g = new Array(n ** 2);
            for(let v = 0; v < g.length; v++){
                const x = v % n * t, b = Math.floor(v / n) * t, S = (p * n + v % n) * u, N = (m * n + Math.floor(v / n)) * u;
                g[v] = {
                    pos: {
                        x,
                        z: x
                    },
                    abs: {
                        x: x + p * n * t,
                        z: b + m * n * t
                    },
                    noise: f(S, N),
                    tile: r
                };
            }
            return g;
        };
    }, $M = Math.sqrt(3), Oee = .5 * ($M - 1), od = (3 - $M) / 6, IO = (e)=>Math.floor(e) | 0, _O = new Float64Array([
        1,
        1,
        -1,
        1,
        1,
        -1,
        -1,
        -1,
        1,
        0,
        -1,
        0,
        1,
        0,
        -1,
        0,
        0,
        1,
        0,
        -1,
        0,
        1,
        0,
        -1
    ]);
    function Tee(e = Math.random) {
        const t = Pee(e), n = new Float64Array(t).map((i)=>_O[i % 12 * 2]), r = new Float64Array(t).map((i)=>_O[i % 12 * 2 + 1]);
        return function(o, s) {
            let l = 0, u = 0, f = 0;
            const p = (o + s) * Oee, m = IO(o + p), g = IO(s + p), v = (m + g) * od, x = m - v, b = g - v, S = o - x, N = s - b;
            let _, I;
            S > N ? (_ = 1, I = 0) : (_ = 0, I = 1);
            const C = S - _ + od, A = N - I + od, R = S - 1 + 2 * od, D = N - 1 + 2 * od, O = m & 255, E = g & 255;
            let F = .5 - S * S - N * N;
            if (F >= 0) {
                const L = O + t[E], P = n[L], V = r[L];
                F *= F, l = F * F * (P * S + V * N);
            }
            let j = .5 - C * C - A * A;
            if (j >= 0) {
                const L = O + _ + t[E + I], P = n[L], V = r[L];
                j *= j, u = j * j * (P * C + V * A);
            }
            let M = .5 - R * R - D * D;
            if (M >= 0) {
                const L = O + 1 + t[E + 1], P = n[L], V = r[L];
                M *= M, f = M * M * (P * R + V * D);
            }
            return 70 * (l + u + f);
        };
    }
    function Pee(e) {
        const n = new Uint8Array(512);
        for(let r = 0; r < 512 / 2; r++)n[r] = r;
        for(let r = 0; r < 512 / 2 - 1; r++){
            const i = r + ~~(e() * (256 - r)), o = n[r];
            n[r] = n[i], n[i] = o;
        }
        for(let r = 256; r < 512; r++)n[r] = n[r - 256];
        return n;
    }
    const Aee = ({ seed: e, layers: t })=>{
        const n = t.map(({ layers: r, name: i })=>r.map(({ name: o })=>{
                const s = new LM(rA(`${e}-${i}-${o}`));
                return Tee(()=>s.float());
            }));
        return (r, i)=>{
            const o = t.reduce((s, l, u)=>{
                const f = l.layers.reduce((m, g, v)=>{
                    const x = n[u][v], S = (x(r * g.scale, i * g.scale) + 1) / 2, N = (m + S * g.weight) * l.weight;
                    return g.limit ? Math.min(g.limit.max, Math.max(g.limit.min, N)) : N;
                }, 0), p = (s + f) * l.weight;
                return l.limit ? Math.min(l.limit.max, Math.max(l.limit.min, p)) : p;
            }, 0);
            return Math.min(1, o);
        };
    }, qM = Le("/$locale/apps/derivean/map/$mapId")({
        async loader ({ context: { queryClient: e, kysely: t, session: n }, params: { mapId: r } }) {
            const i = await n();
            return {
                user: i,
                cycle: await e.ensureQueryData({
                    queryKey: [
                        "map",
                        r,
                        "cycle"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (o)=>(await o.selectFrom("Cycle as c").select((s)=>s.fn.count("c.id").as("count")).where("c.userId", "=", i.id).executeTakeFirstOrThrow()).count);
                    }
                })
            };
        },
        component () {
            const { mapId: e } = qM.useParams(), t = $.useRef(null), n = 64, r = 1;
            return $.useEffect(()=>{
                if (!t.current) return;
                const i = t.current, o = i.getContext("2d");
                if (!o) return;
                i.width = n * r * nc.chunkSize, i.height = n * r * nc.chunkSize;
                const s = Ree({
                    plotCount: nc.plotCount,
                    plotSize: nc.plotSize * r,
                    seed: e,
                    scale: 1,
                    noise ({ seed: u }) {
                        return {
                            land: Aee({
                                seed: u,
                                layers: [
                                    {
                                        name: "landmass",
                                        layers: [
                                            {
                                                name: "base",
                                                scale: .05,
                                                weight: 1
                                            },
                                            {
                                                name: "variation",
                                                scale: -1 * .05,
                                                weight: 1
                                            }
                                        ],
                                        weight: 1
                                    }
                                ]
                            })
                        };
                    },
                    tile: {
                        id: "grass",
                        chance: 100,
                        color: "#00FF00",
                        noise: 1
                    },
                    layers () {
                        return [];
                    }
                }), l = (u)=>{
                    const f = Math.max(0, Math.min(1, u)), m = Math.round(f * 255).toString(16).padStart(2, "0");
                    return `#${m}${m}${m}`;
                };
                for(let u = 0; u < n; u++)for(let f = 0; f < n; f++)s({
                    x: u,
                    z: f
                }).forEach(({ abs: m, noise: g })=>{
                    o.fillStyle = l(g), o.fillRect(m.x, m.z, nc.plotSize * r, nc.plotSize * r);
                });
            }, []), d.jsx("div", {
                className: "w-screen h-screen overflow-auto",
                children: d.jsx("canvas", {
                    ref: t,
                    style: {
                        display: "block"
                    }
                })
            });
        }
    }), BM = Le("/$locale/apps/derivean/db/schema")({
        async loader ({ context: { kysely: e } }) {
            return {
                tables: await e.introspection.getTables()
            };
        },
        component () {
            const { tables: e } = BM.useLoaderData(), t = ({ dataType: i, isNullable: o })=>{
                const s = i.toLowerCase();
                let l = `z.never({message: '${i}'})`;
                switch(s){
                    case "integer":
                        {
                            l = "z.number().int()";
                            break;
                        }
                    case "float4":
                        {
                            l = "z.number()";
                            break;
                        }
                    case "datetime":
                        {
                            l = "z.string()";
                            break;
                        }
                    case "boolean":
                        {
                            l = "withBoolSchema()";
                            break;
                        }
                    case "text":
                        l = "z.string()";
                }
                return s.startsWith("varchar") && (l = `z.string()${o ? "" : ".min(1)"}`), `
// ${i} / ${o ? "nullable" : "not nullable"}
${l}${o ? ".nullish()" : ""}
`;
            }, n = e.map((i)=>{
                const o = i.name.replaceAll("_", "");
                return `
export const with${o}Schema = <
    TShapeSchema extends ShapeSchema,
    TFilterSchema extends FilterSchema,
>({
    shape,
    filter,
}: {
    shape: TShapeSchema;
    filter: TFilterSchema;
}) => {
    return withSourceSchema({
        entity: IdentitySchema.merge(z.object({
                ${i.columns.filter(({ name: s })=>s !== "id").map((s)=>`
    "${s.name}": ${t(s)}
        `.trim()).join(`,
			`)},
        })),
        shape,
        filter,
        sort: [${i.columns.map((s)=>`"${s.name}"`).join(", ")}],
    });
}

export type ${o}Entity = ReturnType<typeof with${o}Schema>['~entity'];
            `.trim();
            }), r = e.map((i)=>{
                const o = i.name.replaceAll("_", "");
                return `${i.name}: ${o}Entity;`;
            });
            return d.jsxs("pre", {
                children: [
                    `
import {
    IdentitySchema,
    withSourceSchema,
    type FilterSchema,
    type ShapeSchema,
    withBoolSchema,
} from "@use-pico/common";
import { z } from "zod";
            `.trim(),
                    `

${n.join(`

`)}`,
                    `

export interface Database {
    ${r.join(`
	`)}
}
                `
                ]
            });
        }
    }), EO = vn(), Fee = [
        EO({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "User name (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsx(Te, {
                    to: "/$locale/apps/derivean/root/user/$id/view",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: t
                });
            },
            size: 14
        }),
        EO({
            name: "login",
            header () {
                return d.jsx(B, {
                    label: "User login (label)"
                });
            },
            render ({ value: e }) {
                return e;
            },
            size: 14
        })
    ], Dee = ({ table: e, ...t })=>{
        const n = Bt([
            [
                "GameMap"
            ],
            [
                "Management"
            ],
            [
                "User_Inventory"
            ]
        ]), r = Ye({
            async mutationFn ({ userId: i }) {
                return Pe.transaction().execute(async (o)=>{
                    await o.deleteFrom("Map").where("userId", "=", i).execute();
                });
            },
            async onSuccess () {
                await n();
            }
        });
        return d.jsx(gn, {
            table: yn({
                ...e,
                columns: Fee
            }),
            action: {
                row ({ data: i }) {
                    return d.jsx(zt, {
                        children: d.jsx(IS, {
                            icon: _n,
                            onClick: ()=>{
                                r.mutateAsync({
                                    userId: i.id
                                });
                            },
                            children: d.jsx(B, {
                                label: "Reset game (menu)"
                            })
                        })
                    });
                }
            },
            ...t
        });
    }, Mee = D9({
        shape: T.object({
            name: T.string().min(1),
            login: T.string().min(1),
            password: T.string().min(1)
        }),
        filter: pr.merge(T.object({
            login: T.string().optional(),
            password: T.string().optional()
        }))
    }), xm = Le("/$locale/apps/derivean/root/user/list")({
        validateSearch: en(mn(Mee)),
        loaderDeps ({ search: { filter: e, cursor: t } }) {
            return {
                filter: e,
                cursor: t
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r } }) {
            return e.ensureQueryData({
                queryKey: [
                    "User",
                    "list-count",
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute((i)=>Vt({
                            select: i.selectFrom("User as u").select([
                                "u.id",
                                "u.name",
                                "u.login"
                            ]),
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                login: T.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component: ()=>{
            const { data: e, count: t } = xm.useLoaderData(), { filter: n, cursor: r, selection: i } = xm.useSearch(), o = xm.useNavigate(), { tva: s } = Wt({
                from: "__root__"
            }), l = s().slots;
            return d.jsx("div", {
                className: l.base(),
                children: d.jsx(Dee, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, o)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of users (label)"
                        }),
                        ...fn(o)
                    }
                })
            });
        }
    }), Lee = ({ entity: e, ...t })=>{
        const { locale: n } = Ke({
            from: "/$locale"
        });
        return d.jsxs(wl, {
            ...t,
            children: [
                d.jsx(Dt, {
                    icon: US,
                    to: "/$locale/apps/derivean/root/user/$id/view",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "View detail (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: ui,
                    to: "/$locale/apps/derivean/root/user/$id/building/list",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Building list (menu)"
                    })
                })
            ]
        });
    }, $ee = (e)=>{
        const { locale: t } = Ke({
            from: "/$locale"
        });
        return d.jsx(cu, {
            title: ({ entity: n })=>d.jsx(uu, {
                    icon: US,
                    title: n.name
                }),
            actions: ()=>d.jsx(d.Fragment, {
                    children: d.jsx(Te, {
                        icon: wy,
                        to: "/$locale/apps/derivean/root/user/list",
                        params: {
                            locale: t
                        },
                        children: d.jsx(B, {
                            label: "User list (label)"
                        })
                    })
                }),
            ...e
        });
    }, zM = Le("/$locale/apps/derivean/root/user/$id")({
        async loader ({ context: { kysely: e }, params: { id: t } }) {
            return e.transaction().execute(async (n)=>({
                    entity: await to({
                        select: n.selectFrom("User as u").select([
                            "u.id",
                            "u.name"
                        ]).where("u.id", "=", t),
                        output: T.object({
                            id: T.string().min(1),
                            name: T.string().min(1)
                        })
                    })
                }));
        },
        component () {
            const { tva: e } = Wt({
                from: "__root__"
            }), { entity: t } = zM.useLoaderData(), n = e().slots;
            return d.jsxs("div", {
                className: n.base(),
                children: [
                    d.jsx($ee, {
                        entity: t
                    }),
                    d.jsx(Lee, {
                        entity: t
                    }),
                    d.jsx(Pi, {})
                ]
            });
        }
    }), Xf = F9({
        shape: T.object({
            code: T.string().min(1),
            label: T.string().min(1),
            group: T.string().nullish(),
            sort: vo()
        }),
        filter: pr.merge(T.object({
            code: T.string().optional(),
            group: T.string().optional()
        }))
    }), kO = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(Xf.shape),
            defaultValues: {
                sort: 0,
                ...t
            }
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "code",
                    label: d.jsx(B, {
                        label: "Tag code (label)"
                    }),
                    required: !0,
                    children: d.jsx("input", {
                        type: "text",
                        className: s.input(),
                        ...o.register("code")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "label",
                    label: d.jsx(B, {
                        label: "Tag label (label)"
                    }),
                    required: !0,
                    children: d.jsx("input", {
                        type: "text",
                        className: s.input(),
                        ...o.register("label")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "group",
                    label: d.jsx(B, {
                        label: "Tag group (label)"
                    }),
                    children: d.jsx("input", {
                        type: "text",
                        className: s.input(),
                        ...o.register("group")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "sort",
                    label: d.jsx(B, {
                        label: "Tag sort (label)"
                    }),
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        ...o.register("sort")
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: uf,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, w0 = vn(), qee = [
        w0({
            name: "label",
            header () {
                return d.jsx(B, {
                    label: "Tag label (label)"
                });
            },
            render ({ value: e }) {
                return e;
            },
            size: 14
        }),
        w0({
            name: "code",
            header () {
                return d.jsx(B, {
                    label: "Tag code (label)"
                });
            },
            render ({ value: e }) {
                return e;
            },
            size: 14
        }),
        w0({
            name: "group",
            header () {
                return d.jsx(B, {
                    label: "Tag group (label)"
                });
            },
            render ({ value: e }) {
                return e;
            },
            filter: {
                path: "group",
                onFilter ({ data: e, filter: t }) {
                    t.shallow("group", e.group);
                }
            },
            size: 24
        })
    ], WM = ({ group: e, table: t, ...n })=>{
        const r = Bt([
            [
                "Tag"
            ],
            [
                "Resource"
            ]
        ]);
        return d.jsx(gn, {
            table: yn({
                ...t,
                columns: qee
            }),
            action: {
                table () {
                    return d.jsx(zt, {
                        children: d.jsx(gt, {
                            label: d.jsx(B, {
                                label: "Create tag (menu)"
                            }),
                            textTitle: d.jsx(B, {
                                label: "Create tag (modal)"
                            }),
                            icon: uf,
                            children: d.jsx(kO, {
                                defaultValues: {
                                    group: e
                                },
                                mutation: Ye({
                                    async mutationFn (i) {
                                        return _t.promise(Pe.transaction().execute((o)=>o.insertInto("Tag").values({
                                                id: xt(),
                                                ...i
                                            }).returningAll().executeTakeFirstOrThrow()), dr("Create tag"));
                                    },
                                    async onSuccess () {
                                        await r();
                                    }
                                })
                            })
                        })
                    });
                },
                row ({ data: i }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit tag (modal)"
                                }),
                                icon: uf,
                                children: d.jsx(kO, {
                                    defaultValues: {
                                        group: e,
                                        ...i
                                    },
                                    mutation: Ye({
                                        async mutationFn (o) {
                                            return _t.promise(Pe.transaction().execute((s)=>s.updateTable("Tag").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow()), dr("Edit tag"));
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete tag (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>{
                                        await Pe.transaction().execute((o)=>o.deleteFrom("Tag").where("id", "=", i.id).execute());
                                    },
                                    textContent: d.jsx(B, {
                                        label: "Tag delete (content)"
                                    }),
                                    textToast: "Tag delete",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, bm = Le("/$locale/apps/derivean/root/tag/list")({
        validateSearch: en(mn(Xf)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Tag",
                    "list-count",
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (i)=>Vt({
                            select: i.selectFrom("Tag as t").select([
                                "t.id",
                                "t.code",
                                "t.label",
                                "t.group",
                                "t.sort"
                            ]).orderBy("t.sort", "desc"),
                            output: T.object({
                                id: T.string().min(1),
                                code: T.string().min(1),
                                label: T.string().min(1),
                                group: T.string().nullish(),
                                sort: T.number().int().nonnegative()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component: ()=>{
            const { data: e, count: t } = bm.useLoaderData(), { filter: n, cursor: r, selection: i } = bm.useSearch(), o = bm.useNavigate(), { tva: s } = Wt({
                from: "__root__"
            }), l = s().slots;
            return d.jsx("div", {
                className: l.base(),
                children: d.jsx(WM, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, o)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of items"
                        }),
                        ...fn(o)
                    }
                })
            });
        }
    }), Bee = ({ group: e, ...t })=>d.jsx(bF, {
            icon: uf,
            table: (n)=>d.jsx(WM, {
                    group: e,
                    ...n
                }),
            render: ({ entities: n })=>d.jsx(SF, {
                    tags: n
                }),
            queryKey: "Tag",
            query: async ({ filter: n, cursor: r })=>Pe.transaction().execute(async (i)=>Vt({
                        select: i.selectFrom("Tag as t").select([
                            "t.id",
                            "t.code",
                            "t.label",
                            "t.group",
                            "t.sort"
                        ]),
                        output: Xf.entity,
                        query ({ select: o, where: s }) {
                            let l = o;
                            if (s?.id && (l = l.where("t.id", "=", s.id)), s?.idIn && (l = l.where("t.id", "in", s.idIn)), s?.fulltext) {
                                const u = `%${s.fulltext}%`.toLowerCase();
                                l = l.where((f)=>f.or([
                                        f("t.code", "like", u),
                                        f("t.group", "like", u),
                                        f("t.label", "like", u),
                                        f("t.id", "like", u)
                                    ]));
                            }
                            return l;
                        },
                        filter: n,
                        cursor: r
                    })),
            ...t
        }), VM = A9({
        shape: T.object({
            name: T.string().min(1),
            weight: vo(),
            tagIds: T.array(T.string()).optional(),
            image: T.instanceof(FileList, {
                message: "You must upload a file."
            }).transform((e)=>e[0]).refine((e)=>(e && e.size < 5 * 1024 * 1024, !0), {
                message: Wr.text("File size must be less than 5MB")
            }).refine((e)=>e ? [
                    "image/png",
                    "image/jpeg",
                    "image/webp"
                ].includes(e.type) : !0, {
                message: "Only PNG/JPEG/WEBP files are allowed."
            }).optional()
        }),
        filter: pr.merge(T.object({
            name: T.string().optional()
        }))
    }), CO = ({ group: e = "resource", mutation: t, defaultValues: n, variant: r, tva: i = zn, css: o })=>{
        const s = Wn({
            resolver: Vn(VM.shape),
            defaultValues: {
                name: "",
                weight: 1,
                ...n
            }
        }), l = i({
            ...r,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: o
        }).slots;
        return d.jsxs("form", {
            className: l.base(),
            onSubmit: mr({
                form: s,
                mutation: t
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: s.formState,
                    name: "name",
                    label: d.jsx(B, {
                        label: "Resource name (label)"
                    }),
                    children: d.jsx("input", {
                        type: "text",
                        className: l.input(),
                        ...s.register("name")
                    })
                }),
                d.jsx(ot, {
                    formState: s.formState,
                    name: "weight",
                    label: d.jsx(B, {
                        label: "Resource weight (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Weight is used to compute, how fast a resource moves on the road (hint)"
                    }),
                    required: !0,
                    children: d.jsx("input", {
                        type: "number",
                        className: l.input(),
                        min: 1,
                        ...s.register("weight")
                    })
                }),
                d.jsx(ot, {
                    formState: s.formState,
                    name: "image",
                    label: d.jsx(B, {
                        label: "Resource image (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Resource image (hint)"
                    }),
                    children: d.jsx("input", {
                        type: "file",
                        className: l.input(),
                        ...s.register("image")
                    })
                }),
                d.jsx(ot, {
                    formState: s.formState,
                    name: "tagIds",
                    label: d.jsx(B, {
                        label: "Resource tags (label)"
                    }),
                    children: d.jsx(Ir, {
                        control: s.control,
                        name: "tagIds",
                        render: ({ field: { ref: u, ...f } })=>d.jsx(Bee, {
                                group: e,
                                textTitle: d.jsx(B, {
                                    label: "Select resource tags (title)"
                                }),
                                textSelect: d.jsx(B, {
                                    label: "Select resource tags (label)"
                                }),
                                allowEmpty: !0,
                                ...f
                            })
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: Xt,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, rc = vn(), zee = [
        rc({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Resource name (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsx(Te, {
                    icon: d.jsx("div", {
                        className: it([
                            "border-2",
                            "border-purple-400",
                            "rounded-md",
                            "w-[64px]",
                            "h-[64px]",
                            "bg-contain",
                            `bg-${e.id}`
                        ])
                    }),
                    to: "/$locale/apps/derivean/root/resource/$id/view",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: t
                });
            },
            size: 18
        }),
        rc({
            name: "weight",
            header () {
                return d.jsx(B, {
                    label: "Resource weight (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 12
        }),
        rc({
            name: "countProduction",
            header () {
                return d.jsx(B, {
                    label: "Resource production count (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(cr, {
                    css: {
                        base: e !== void 0 && e === 0 ? [
                            "bg-red-100",
                            "text-red-500",
                            "border-red-600"
                        ] : []
                    },
                    children: mt({
                        number: e
                    })
                });
            },
            size: 12
        }),
        rc({
            name: "countRequirement",
            header () {
                return d.jsx(B, {
                    label: "Resource requirement count (label)"
                });
            },
            render ({ data: e, value: t }) {
                return d.jsx(cr, {
                    css: {
                        base: e.countRequirement === 0 && e.countProductionRequirement === 0 ? [
                            "bg-red-100",
                            "text-red-500",
                            "border-red-600"
                        ] : []
                    },
                    children: mt({
                        number: t
                    })
                });
            },
            size: 12
        }),
        rc({
            name: "countProductionRequirement",
            header () {
                return d.jsx(B, {
                    label: "Resource production requirement count (label)"
                });
            },
            render ({ data: e, value: t }) {
                return d.jsx(cr, {
                    css: {
                        base: e.countRequirement === 0 && e.countProductionRequirement === 0 ? [
                            "bg-red-100",
                            "text-red-500",
                            "border-red-600"
                        ] : []
                    },
                    children: mt({
                        number: t
                    })
                });
            },
            size: 18
        }),
        rc({
            name: "tags",
            header () {
                return d.jsx(B, {
                    label: "Resource tags (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(SF, {
                    tags: e
                });
            },
            size: 32
        })
    ], UM = ({ group: e, table: t, ...n })=>{
        const r = Bt([
            [
                "Resource"
            ],
            [
                "Resource_Tag"
            ]
        ]);
        return d.jsx(gn, {
            table: yn({
                ...t,
                columns: zee
            }),
            action: {
                table () {
                    return d.jsx(zt, {
                        children: d.jsx(gt, {
                            label: d.jsx(B, {
                                label: "Create resource (menu)"
                            }),
                            textTitle: d.jsx(B, {
                                label: "Create resource (modal)"
                            }),
                            icon: Xt,
                            children: ({ close: i })=>d.jsx(CO, {
                                    group: e,
                                    mutation: Ye({
                                        async mutationFn ({ image: o, tagIds: s = [], ...l }) {
                                            return Pe.transaction().execute(async (u)=>{
                                                const f = await u.insertInto("Resource").values({
                                                    id: xt(),
                                                    ...l,
                                                    image: o ? await Yc(o) : null
                                                }).returningAll().executeTakeFirstOrThrow();
                                                return s.length && await u.insertInto("Resource_Tag").values(s.map((p)=>({
                                                        id: xt(),
                                                        resourceId: f.id,
                                                        tagId: p
                                                    }))).execute(), f;
                                            });
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit resource (modal)"
                                }),
                                icon: Xt,
                                children: ({ close: o })=>d.jsx(CO, {
                                        defaultValues: {
                                            ...i,
                                            tagIds: i.tags.map(({ id: s })=>s)
                                        },
                                        mutation: Ye({
                                            async mutationFn ({ image: s, tagIds: l, ...u }) {
                                                return _t.promise(Pe.transaction().execute(async (f)=>{
                                                    const p = await f.updateTable("Resource").set({
                                                        ...u,
                                                        image: s ? await Yc(s) : null
                                                    }).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow();
                                                    return await f.deleteFrom("Resource_Tag").where("resourceId", "=", p.id).execute(), l?.length && await f.insertInto("Resource_Tag").values(l.map((m)=>({
                                                            id: xt(),
                                                            resourceId: p.id,
                                                            tagId: m
                                                        }))).execute(), p;
                                                }), dr("Update resource"));
                                            },
                                            async onSuccess () {
                                                await r(), o();
                                            }
                                        })
                                    })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete resource (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>Pe.transaction().execute(async (o)=>o.deleteFrom("Resource").where("id", "=", i.id).execute()),
                                    textContent: d.jsx(B, {
                                        label: "Resource delete (content)"
                                    }),
                                    textToast: "Resource delete",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, wm = Le("/$locale/apps/derivean/root/resource/list")({
        validateSearch: en(mn(VM)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Resource",
                    "list-count",
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute((i)=>Vt({
                            select: i.selectFrom("Resource as r").select([
                                "r.id",
                                "r.name",
                                "r.weight",
                                (o)=>o.selectFrom("Tag as t").select((s)=>un`json_group_array(json_object(
                                            'id', ${s.ref("t.id")},
                                            'code', ${s.ref("t.code")},
                                            'group', ${s.ref("t.group")},
                                            'sort', ${s.ref("t.sort")},
                                            'label', ${s.ref("t.label")}
                                        ))`.as("tags")).where("t.id", "in", o.selectFrom("Resource_Tag as rt").select("rt.tagId").whereRef("rt.resourceId", "=", "r.id")).as("tags"),
                                (o)=>o.selectFrom("Blueprint_Requirement").select((s)=>s.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countRequirement"),
                                (o)=>o.selectFrom("Blueprint_Production").select((s)=>s.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countProduction"),
                                (o)=>o.selectFrom("Blueprint_Production_Requirement").select((s)=>s.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countProductionRequirement")
                            ]).orderBy("r.name", "asc"),
                            query ({ select: o, where: s }) {
                                let l = o;
                                if (s?.fulltext) {
                                    const u = `%${s.fulltext}%`.toLowerCase();
                                    l = l.where((f)=>f.or([
                                            f("r.id", "like", u),
                                            f("r.name", "like", u),
                                            f("r.id", "in", f.selectFrom("Resource_Tag as rt").innerJoin("Tag as t", "t.id", "rt.tagId").select("rt.resourceId").where((p)=>p.or([
                                                    p("t.code", "like", u),
                                                    p("t.label", "like", u),
                                                    p("t.group", "like", u)
                                                ])))
                                        ]));
                                }
                                return l;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                weight: vo(),
                                countRequirement: T.number().nonnegative(),
                                countProduction: T.number().nonnegative(),
                                countProductionRequirement: T.number().nonnegative(),
                                tags: Yn(Xf.entity)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component: ()=>{
            const { data: e, count: t } = wm.useLoaderData(), { filter: n, cursor: r, selection: i } = wm.useSearch(), o = wm.useNavigate(), { tva: s } = Wt({
                from: "__root__"
            }), l = s().slots;
            return d.jsx("div", {
                className: l.base(),
                children: d.jsx(UM, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, o)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of items"
                        }),
                        ...fn(o)
                    }
                })
            });
        }
    }), Wee = ({ entity: e, ...t })=>{
        const { locale: n } = Ke({
            from: "/$locale"
        });
        return d.jsx(wl, {
            ...t,
            children: d.jsx(Dt, {
                icon: Xt,
                to: "/$locale/apps/derivean/root/resource/$id/view",
                params: {
                    locale: n,
                    id: e.id
                },
                children: d.jsx(B, {
                    label: "View detail (menu)"
                })
            })
        });
    }, Vee = (e)=>{
        const { locale: t } = Ke({
            from: "/$locale"
        });
        return d.jsx(cu, {
            title: ({ entity: n })=>d.jsx(uu, {
                    icon: Xt,
                    title: n.name
                }),
            actions: ()=>d.jsx(d.Fragment, {
                    children: d.jsx(Te, {
                        icon: wy,
                        to: "/$locale/apps/derivean/root/resource/list",
                        params: {
                            locale: t
                        },
                        children: d.jsx(B, {
                            label: "Resource list (label)"
                        })
                    })
                }),
            ...e
        });
    }, HM = Le("/$locale/apps/derivean/root/resource/$id")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { id: n } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Resource",
                    n
                ],
                async queryFn () {
                    return t.transaction().execute(async (r)=>({
                            entity: await to({
                                select: r.selectFrom("Resource as r").select([
                                    "r.id",
                                    "r.name",
                                    "r.image"
                                ]).where("r.id", "=", n),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    image: T.string().nullish()
                                })
                            })
                        }));
                }
            });
        },
        component: ()=>{
            const { tva: e } = Wt({
                from: "__root__"
            }), { entity: t } = HM.useLoaderData(), n = e().slots;
            return d.jsxs("div", {
                className: n.base(),
                children: [
                    d.jsx(Vee, {
                        entity: t
                    }),
                    d.jsx(Wee, {
                        entity: t
                    }),
                    d.jsx(Pi, {})
                ]
            });
        }
    }), Nm = Le("/$locale/apps/derivean/root/region/list")({
        validateSearch: en(mn(mI)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Region",
                    "list-count",
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute((i)=>Vt({
                            select: i.selectFrom("Region as r").select([
                                "r.id",
                                "r.name",
                                "r.probability",
                                "r.limit"
                            ]).orderBy("r.name", "asc"),
                            query ({ select: o, where: s }) {
                                let l = o;
                                if (s?.fulltext) {
                                    const u = `%${s.fulltext}%`.toLowerCase();
                                    l = l.where((f)=>f.or([
                                            f("r.id", "like", u),
                                            f("r.name", "like", u)
                                        ]));
                                }
                                return l;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                probability: T.number().int().min(0),
                                limit: T.number().int().min(0)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component: ()=>{
            const { data: e, count: t } = Nm.useLoaderData(), { filter: n, cursor: r, selection: i } = Nm.useSearch(), o = Nm.useNavigate(), { tva: s } = Wt({
                from: "__root__"
            }), l = s().slots;
            return d.jsx("div", {
                className: l.base(),
                children: d.jsx(AM, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, o)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of items"
                        }),
                        ...fn(o)
                    }
                })
            });
        }
    }), Uee = Le("/$locale/apps/derivean/root/region/$id")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { id: n } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Region",
                    n
                ],
                async queryFn () {
                    return t.transaction().execute(async (r)=>({
                            entity: await to({
                                select: r.selectFrom("Region as r").select([
                                    "r.id",
                                    "r.name",
                                    "r.image"
                                ]).where("r.id", "=", n),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    image: T.string().nullish()
                                })
                            })
                        }));
                }
            });
        },
        component: ()=>{
            const { tva: e } = Wt({
                from: "__root__"
            }), t = e().slots;
            return d.jsx("div", {
                className: t.base(),
                children: d.jsx(Pi, {})
            });
        }
    }), yI = "icon-[gala--clock]", Ys = "icon-[mingcute--inventory-line]", Hee = lt({
        slot: {
            item: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "bg-sky-100",
                "border",
                "rounded-sm",
                "border-sky-300",
                "py-1",
                "px-2",
                "bg-sky-100",
                "border-sky-300",
                "text-sky-500"
            ]
        },
        variant: {
            missing: {
                true: []
            }
        },
        match: [
            {
                if: {
                    missing: !0
                },
                then: {
                    item: [
                        "bg-amber-100",
                        "border-amber-300"
                    ]
                }
            }
        ],
        defaults: {
            missing: !1
        }
    }), KM = ({ dependencies: e, variant: t, tva: n = Hee, css: r, ...i })=>{
        const o = n({
            ...t,
            css: r
        }).slots;
        return d.jsx(ca, {
            items: e,
            render: ({ entity: s })=>d.jsx("div", {
                    className: o.item(),
                    children: d.jsx("div", {
                        children: s.name
                    })
                }),
            ...i
        });
    };
    var Qh = {}, jO;
    function Kee() {
        if (jO) return Qh;
        jO = 1;
        function e(r, i, o, s) {
            var l = new Set;
            return function(u) {
                if (!l.has(u)) {
                    var f = new Set, p = [], m = [];
                    for(m.push({
                        node: u,
                        processed: !1
                    }); m.length > 0;){
                        var g = m[m.length - 1], v = g.processed, x = g.node;
                        if (v) m.pop(), p.pop(), f.delete(x), l.add(x), (!i || r.get(x).length === 0) && o.push(x);
                        else {
                            if (l.has(x)) {
                                m.pop();
                                continue;
                            } else if (f.has(x)) {
                                if (s) {
                                    m.pop();
                                    continue;
                                }
                                throw p.push(x), new n(p);
                            }
                            f.add(x), p.push(x);
                            for(var b = r.get(x), S = b.length - 1; S >= 0; S--)m.push({
                                node: b[S],
                                processed: !1
                            });
                            g.processed = !0;
                        }
                    }
                }
            };
        }
        var t = Qh.DepGraph = function(i) {
            this.nodes = new Map, this.outgoingEdges = new Map, this.incomingEdges = new Map, this.circular = i && !!i.circular;
        };
        t.prototype = {
            size: function() {
                return this.nodes.size;
            },
            addNode: function(r, i) {
                this.hasNode(r) || (arguments.length === 2 ? this.nodes.set(r, i) : this.nodes.set(r, r), this.outgoingEdges.set(r, []), this.incomingEdges.set(r, []));
            },
            removeNode: function(r) {
                this.hasNode(r) && (this.nodes.delete(r), this.outgoingEdges.delete(r), this.incomingEdges.delete(r), [
                    this.incomingEdges,
                    this.outgoingEdges
                ].forEach(function(i) {
                    i.forEach(function(o) {
                        var s = o.indexOf(r);
                        s >= 0 && o.splice(s, 1);
                    });
                }));
            },
            hasNode: function(r) {
                return this.nodes.has(r);
            },
            getNodeData: function(r) {
                if (this.hasNode(r)) return this.nodes.get(r);
                throw new Error("Node does not exist: " + r);
            },
            setNodeData: function(r, i) {
                if (this.hasNode(r)) this.nodes.set(r, i);
                else throw new Error("Node does not exist: " + r);
            },
            addDependency: function(r, i) {
                if (!this.hasNode(r)) throw new Error("Node does not exist: " + r);
                if (!this.hasNode(i)) throw new Error("Node does not exist: " + i);
                return this.outgoingEdges.get(r).indexOf(i) === -1 && this.outgoingEdges.get(r).push(i), this.incomingEdges.get(i).indexOf(r) === -1 && this.incomingEdges.get(i).push(r), !0;
            },
            removeDependency: function(r, i) {
                var o;
                this.hasNode(r) && (o = this.outgoingEdges.get(r).indexOf(i), o >= 0 && this.outgoingEdges.get(r).splice(o, 1)), this.hasNode(i) && (o = this.incomingEdges.get(i).indexOf(r), o >= 0 && this.incomingEdges.get(i).splice(o, 1));
            },
            clone: function() {
                var r = this, i = new t;
                return r.nodes.forEach(function(o, s) {
                    i.nodes.set(s, o), i.outgoingEdges.set(s, r.outgoingEdges.get(s).slice(0)), i.incomingEdges.set(s, r.incomingEdges.get(s).slice(0));
                }), i.circular = r.circular, i;
            },
            directDependenciesOf: function(r) {
                if (this.hasNode(r)) return this.outgoingEdges.get(r).slice(0);
                throw new Error("Node does not exist: " + r);
            },
            directDependantsOf: function(r) {
                if (this.hasNode(r)) return this.incomingEdges.get(r).slice(0);
                throw new Error("Node does not exist: " + r);
            },
            dependenciesOf: function(r, i) {
                if (this.hasNode(r)) {
                    var o = [], s = e(this.outgoingEdges, i, o, this.circular);
                    s(r);
                    var l = o.indexOf(r);
                    return l >= 0 && o.splice(l, 1), o;
                } else throw new Error("Node does not exist: " + r);
            },
            dependantsOf: function(r, i) {
                if (this.hasNode(r)) {
                    var o = [], s = e(this.incomingEdges, i, o, this.circular);
                    s(r);
                    var l = o.indexOf(r);
                    return l >= 0 && o.splice(l, 1), o;
                } else throw new Error("Node does not exist: " + r);
            },
            overallOrder: function(r) {
                var i = this, o = [], s = Array.from(this.nodes.keys());
                if (s.length === 0) return o;
                if (!this.circular) {
                    var l = e(this.outgoingEdges, !1, [], this.circular);
                    s.forEach(function(f) {
                        l(f);
                    });
                }
                var u = e(this.outgoingEdges, r, o, this.circular);
                return s.filter(function(f) {
                    return i.incomingEdges.get(f).length === 0;
                }).forEach(function(f) {
                    u(f);
                }), this.circular && s.filter(function(f) {
                    return o.indexOf(f) === -1;
                }).forEach(function(f) {
                    u(f);
                }), o;
            },
            entryNodes: function() {
                var r = this;
                return Array.from(this.nodes.keys()).filter(function(i) {
                    return r.incomingEdges.get(i).length === 0;
                });
            }
        }, t.prototype.directDependentsOf = t.prototype.directDependantsOf, t.prototype.dependentsOf = t.prototype.dependantsOf;
        var n = Qh.DepGraphCycleError = function(r) {
            var i = "Dependency Cycle Found: " + r.join(" -> "), o = new Error(i);
            return o.cyclePath = r, Object.setPrototypeOf(o, Object.getPrototypeOf(this)), Error.captureStackTrace && Error.captureStackTrace(o, n), o;
        };
        return n.prototype = Object.create(Error.prototype, {
            constructor: {
                value: Error,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), Object.setPrototypeOf(n, Error), Qh;
    }
    var GM = Kee();
    const ep = async ({ tx: e })=>{
        const t = new GM.DepGraph({
            circular: !1
        });
        for await (const { id: n, name: r } of await e.selectFrom("Blueprint").select([
            "id",
            "name"
        ]).execute())t.addNode(n, r);
        for await (const { blueprintId: n, dependencyId: r } of await e.selectFrom("Blueprint_Dependency").select([
            "blueprintId",
            "dependencyId"
        ]).execute())t.addDependency(n, r);
        return t;
    }, Sf = async ({ tx: e })=>{
        const t = ep({
            tx: e
        }), n = await e.selectFrom("Blueprint as bl").select([
            "bl.id"
        ]).execute();
        for await (const r of n){
            const i = (await t).dependenciesOf(r.id);
            await e.updateTable("Blueprint").set({
                sort: i.length
            }).where("id", "=", r.id).execute();
        }
    }, QM = async ({ tx: e, blueprintId: t })=>{
        await e.deleteFrom("Blueprint_Inventory").where("blueprintId", "=", t).execute();
        const n = await e.selectFrom("Blueprint_Requirement").select([
            "resourceId",
            "amount"
        ]).where("blueprintId", "=", t).execute();
        for await (const { resourceId: i, amount: o } of n)await e.insertInto("Blueprint_Inventory").values({
            id: xt(),
            blueprintId: t,
            inventoryId: (await e.insertInto("Inventory").values({
                id: xt(),
                resourceId: i,
                amount: 0,
                limit: o,
                type: "construction"
            }).returning("id").executeTakeFirstOrThrow()).id
        }).execute();
        const r = await e.selectFrom(e.selectFrom("Blueprint_Production").select([
            "resourceId",
            "amount"
        ]).where("blueprintId", "=", t).union(e.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Blueprint_Production as bp", "bp.id", "bpr.blueprintProductionId").select([
            "bpr.resourceId",
            "bpr.amount"
        ]).where("bp.blueprintId", "=", t)).union(e.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Blueprint_Production as bp", "bp.id", "bpr.blueprintProductionId").select([
            "bpr.resourceId",
            "bpr.amount"
        ]).where("bp.blueprintId", "=", t)).as("resources")).select([
            "resourceId",
            (i)=>i.fn.max("amount").as("amount")
        ]).groupBy("resourceId").orderBy("amount", "desc").execute();
        for await (const { resourceId: i, amount: o } of r)await e.insertInto("Blueprint_Inventory").values({
            id: xt(),
            blueprintId: t,
            inventoryId: (await e.insertInto("Inventory").values({
                id: xt(),
                resourceId: i,
                amount: 0,
                limit: o * 5,
                type: "storage"
            }).returning("id").executeTakeFirstOrThrow()).id
        }).execute();
    }, Gee = lt({
        slot: {
            item: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "bg-sky-100",
                "border",
                "rounded-sm",
                "border-sky-300",
                "py-1",
                "px-2"
            ]
        },
        variant: {
            passive: {
                true: []
            },
            missing: {
                true: []
            }
        },
        match: [
            {
                if: {
                    passive: !0
                },
                then: {
                    item: [
                        "bg-purple-100",
                        "border-purple-300",
                        "text-purple-500"
                    ]
                }
            },
            {
                if: {
                    passive: !1
                },
                then: {
                    item: [
                        "bg-sky-100",
                        "border-sky-300",
                        "text-sky-500"
                    ]
                }
            },
            {
                if: {
                    missing: !0
                },
                then: {
                    item: [
                        "bg-amber-100",
                        "border-amber-300"
                    ]
                }
            }
        ],
        defaults: {
            passive: !1,
            missing: !1
        }
    }), qy = ({ requirements: e, diff: t, variant: n, tva: r = Gee, css: i, ...o })=>{
        const s = r({
            ...n,
            css: i
        }).slots;
        return d.jsx(ca, {
            items: e,
            render: ({ entity: l })=>{
                const u = t?.find((p)=>p.resourceId === l.resourceId), f = u?.amount ? u.amount - l.amount : -l.amount;
                return d.jsxs("div", {
                    className: s.item({
                        css: !t || f >= 0 ? [] : [
                            "text-red-700",
                            "bg-red-100",
                            "border-red-300"
                        ],
                        passive: l.passive
                    }),
                    children: [
                        d.jsx("div", {
                            children: l.name
                        }),
                        d.jsxs("div", {
                            className: "text-md font-bold text-slate-500",
                            children: [
                                "x",
                                mt({
                                    number: l.amount
                                })
                            ]
                        }),
                        t ? f >= 0 ? d.jsx(st, {
                            icon: "icon-[pajamas--check-sm]",
                            css: {
                                base: [
                                    "text-emerald-600"
                                ]
                            }
                        }) : d.jsxs("div", {
                            className: "flex flex-row gao-2 items-center text-sm text-red-500",
                            children: [
                                d.jsx(st, {
                                    icon: "icon-[charm--cross]",
                                    css: {
                                        base: [
                                            "text-red-500"
                                        ]
                                    }
                                }),
                                "(",
                                mt({
                                    number: f
                                }),
                                ")"
                            ]
                        }) : null
                    ]
                });
            },
            ...o
        });
    }, sd = vn(), Qee = [
        sd({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Building name (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsxs("div", {
                    className: "flex flex-row gap-2 items-center",
                    children: [
                        d.jsx(Te, {
                            icon: d.jsx("div", {
                                className: it([
                                    "border-2",
                                    "border-purple-400",
                                    "rounded-md",
                                    "w-[64px]",
                                    "h-[64px]",
                                    "bg-contain",
                                    `bg-${e.id}`
                                ])
                            }),
                            to: "/$locale/apps/derivean/root/blueprint/$id/view",
                            params: {
                                locale: n,
                                id: e.id
                            },
                            children: t
                        }),
                        d.jsx(Te, {
                            icon: "icon-[ph--graph-light]",
                            to: "/$locale/apps/derivean/root/editor",
                            params: {
                                locale: n
                            },
                            search: {
                                zoomTo: e.id
                            }
                        })
                    ]
                });
            },
            size: 18
        }),
        sd({
            name: "dependencies",
            header () {
                return d.jsx(B, {
                    label: "Blueprint dependencies (label)"
                });
            },
            render ({ value: e }) {
                return e.length > 0 ? d.jsxs("div", {
                    className: "flex flex-col flex-wrap gap-2 w-full",
                    children: [
                        d.jsx(KM, {
                            textTitle: d.jsx(B, {
                                label: "Blueprint dependencies (title)"
                            }),
                            dependencies: e
                        }),
                        d.jsx("div", {
                            className: "border-b border-slate-200"
                        })
                    ]
                }) : d.jsx(B, {
                    label: "No dependencies (label)"
                });
            },
            size: 32
        }),
        sd({
            name: "requirements",
            header () {
                return d.jsx(B, {
                    label: "Required resources (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(qy, {
                    textTitle: d.jsx(B, {
                        label: "Blueprint requirements (title)"
                    }),
                    textEmpty: d.jsx(B, {
                        label: "No requirements (label)"
                    }),
                    requirements: e
                });
            },
            size: 32
        }),
        sd({
            name: "cycles",
            header () {
                return d.jsx(B, {
                    label: "Construction cycles (label)"
                });
            },
            render ({ value: e }) {
                return d.jsxs("div", {
                    className: "flex flex-row items-center gap-2",
                    children: [
                        d.jsx(st, {
                            icon: yI
                        }),
                        mt({
                            number: e
                        })
                    ]
                });
            },
            size: 8
        }),
        sd({
            name: "limit",
            header () {
                return d.jsx(B, {
                    label: "Building limit (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 8
        })
    ], JM = ({ dependencies: e, table: t, ...n })=>{
        const r = Bt([
            [
                "Blueprint_Inventory"
            ],
            [
                "Blueprint"
            ],
            [
                "Inventory"
            ]
        ]), i = Ye({
            async mutationFn () {
                return Pe.transaction().execute(async (o)=>{
                    const s = await o.selectFrom("Blueprint").select([
                        "id"
                    ]).execute();
                    for await (const { id: l } of s)await QM({
                        tx: o,
                        blueprintId: l
                    });
                });
            },
            async onSuccess () {
                await r();
            },
            onError (o) {
                console.error(o);
            }
        });
        return d.jsx(gn, {
            table: yn({
                ...t,
                columns: Qee,
                context: {
                    dependencies: e
                }
            }),
            action: {
                table () {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(IS, {
                                icon: Ys,
                                onClick: ()=>{
                                    _t.promise(i.mutateAsync(), dr("Fill inventories"));
                                },
                                children: d.jsx(B, {
                                    label: "Fill inventories (label)"
                                })
                            }),
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Create blueprint (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Create blueprint (modal)"
                                }),
                                icon: Et,
                                children: ({ close: o })=>d.jsx(Wg, {
                                        mutation: Ye({
                                            async mutationFn ({ image: s, regionIds: l, ...u }) {
                                                Pe.transaction().execute(async (f)=>{
                                                    const p = await f.insertInto("Blueprint").values({
                                                        id: xt(),
                                                        ...u,
                                                        image: s ? await Yc(s) : null
                                                    }).returningAll().executeTakeFirstOrThrow();
                                                    return l?.length && await f.insertInto("Blueprint_Region").values(l.map((m)=>({
                                                            id: xt(),
                                                            blueprintId: p.id,
                                                            regionId: m
                                                        }))).execute(), await Sf({
                                                        tx: f
                                                    }), p;
                                                });
                                            },
                                            async onSuccess () {
                                                await r(), o();
                                            }
                                        })
                                    })
                            })
                        ]
                    });
                },
                row ({ data: o }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit blueprint (modal)"
                                }),
                                icon: Et,
                                children: ({ close: s })=>d.jsx(Wg, {
                                        defaultValues: {
                                            ...o,
                                            regionIds: o.regions.map((l)=>l.id)
                                        },
                                        mutation: Ye({
                                            async mutationFn ({ image: l, regionIds: u, ...f }) {
                                                return Pe.transaction().execute(async (p)=>{
                                                    const m = await p.updateTable("Blueprint").set({
                                                        ...f,
                                                        image: l ? await Yc(l) : null
                                                    }).where("id", "=", o.id).returningAll().executeTakeFirstOrThrow();
                                                    return await p.deleteFrom("Blueprint_Region").where("blueprintId", "=", m.id).execute(), u?.length && await p.insertInto("Blueprint_Region").values(u.map((g)=>({
                                                            id: xt(),
                                                            blueprintId: m.id,
                                                            regionId: g
                                                        }))).execute(), await Sf({
                                                        tx: p
                                                    }), m;
                                                });
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete blueprint (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>Pe.transaction().execute(async (s)=>s.deleteFrom("Blueprint").where("id", "=", o.id).execute()),
                                    textContent: d.jsx(B, {
                                        label: "Delete blueprint (content)"
                                    }),
                                    textToast: "Delete blueprint",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, pa = S9({
        shape: T.object({
            dependencyId: T.string().min(1)
        }),
        filter: pr.merge(T.object({
            blueprintId: T.string().optional(),
            dependencyId: T.string().optional()
        }))
    }), du = j9({
        shape: T.object({
            resourceId: T.string().min(1),
            amount: ts(),
            passive: T.boolean()
        }),
        filter: pr.merge(T.object({
            blueprintId: T.string().optional(),
            resourceId: T.string().optional()
        }))
    }), Sm = Le("/$locale/apps/derivean/root/blueprint/list")({
        validateSearch: en(mn(gI)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r } }) {
            return {
                data: await e.ensureQueryData({
                    queryKey: [
                        "Blueprint",
                        "list-count",
                        {
                            filter: n,
                            cursor: r
                        }
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (o)=>Vt({
                                select: o.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.image",
                                    "bl.name",
                                    "bl.sort",
                                    "bl.cycles",
                                    "bl.limit",
                                    (s)=>s.selectFrom("Blueprint_Region as br").innerJoin("Region as r", "r.id", "br.regionId").select((l)=>Gs.jsonGroupArray({
                                                id: l.ref("r.id"),
                                                name: l.ref("r.name")
                                            }).as("regions")).whereRef("br.blueprintId", "=", "bl.id").as("regions"),
                                    (s)=>s.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select((l)=>un`json_group_array(json_object(
                                                'id', ${l.ref("br.id")},
                                                'amount', ${l.ref("br.amount")},
                                                'passive', ${l.ref("br.passive")},
                                                'resourceId', ${l.ref("br.resourceId")},
                                                'blueprintId', ${l.ref("br.blueprintId")},
                                                'name', ${l.ref("r.name")}
                                            ))`.as("requirements")).whereRef("br.blueprintId", "=", "bl.id").as("requirements"),
                                    (s)=>s.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as bl2", "bl2.id", "bd.dependencyId").select((l)=>un`json_group_array(json_object(
                                                        'id', ${l.ref("bd.id")},
                                                        'dependencyId', ${l.ref("bd.dependencyId")},
                                                        'blueprintId', ${l.ref("bd.blueprintId")},
                                                        'name', ${l.ref("bl2.name")}
                                                    ))`.as("requirements")).whereRef("bd.blueprintId", "=", "bl.id").orderBy("bl2.name", "asc").as("dependencies")
                                ]).orderBy("bl.sort", "asc").orderBy("bl.name", "asc"),
                                query ({ select: s, where: l }) {
                                    let u = s;
                                    if (l?.id && (u = u.where("bl.id", "=", l.id)), l?.fulltext) {
                                        const f = `%${l.fulltext}%`.toLowerCase();
                                        u = u.where((p)=>p.or([
                                                p("bl.id", "like", f),
                                                p("bl.name", "like", f)
                                            ]));
                                    }
                                    return u;
                                },
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    image: T.string().nullish(),
                                    cycles: T.number().nonnegative(),
                                    sort: T.number().nonnegative(),
                                    limit: T.number().nonnegative(),
                                    regions: Yn(T.object({
                                        id: T.string().min(1),
                                        name: T.string().min(1)
                                    })),
                                    requirements: Yn(du.entity.merge(T.object({
                                        name: T.string().min(1)
                                    }))),
                                    dependencies: Yn(pa.entity.merge(T.object({
                                        name: T.string().min(1)
                                    })))
                                }),
                                filter: n,
                                cursor: r
                            }));
                    }
                }),
                dependencies: await t.transaction().execute(async (o)=>ep({
                        tx: o
                    }))
            };
        },
        component () {
            const { data: { data: e, count: t }, dependencies: n } = Sm.useLoaderData(), { filter: r, cursor: i, selection: o } = Sm.useSearch(), s = Sm.useNavigate(), { tva: l } = Wt({
                from: "__root__"
            }), u = l().slots;
            return d.jsx("div", {
                className: u.base(),
                children: d.jsx(JM, {
                    dependencies: n,
                    table: {
                        data: e,
                        filter: {
                            value: r,
                            set: pn(s)
                        },
                        selection: {
                            type: "multi",
                            value: o,
                            set: Ur(s)
                        }
                    },
                    fulltext: {
                        value: r?.fulltext,
                        set: hn(r?.fulltext, s)
                    },
                    cursor: {
                        count: t,
                        cursor: i,
                        textTotal: d.jsx(B, {
                            label: "Number of blueprints"
                        }),
                        ...fn(s)
                    }
                })
            });
        }
    }), Jee = ({ entity: e, ...t })=>{
        const { locale: n } = Ke({
            from: "/$locale"
        });
        return d.jsxs(wl, {
            ...t,
            children: [
                d.jsx(Dt, {
                    icon: Et,
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "View detail (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: ui,
                    to: "/$locale/apps/derivean/root/blueprint/$id/dependencies",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Blueprint dependencies (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: Xt,
                    to: "/$locale/apps/derivean/root/blueprint/$id/requirements",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Required resources (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: Oi,
                    to: "/$locale/apps/derivean/root/blueprint/$id/production",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Resource production (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: Ys,
                    to: "/$locale/apps/derivean/root/blueprint/$id/inventory",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Blueprint inventory (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: "icon-[solar--bomb-minimalistic-outline]",
                    to: "/$locale/apps/derivean/root/blueprint/$id/conflicts",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Blueprint conflicts (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: tF,
                    to: "/$locale/apps/derivean/root/blueprint/$id/edit",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Edit (menu)"
                    })
                })
            ]
        });
    }, Zee = (e)=>{
        const { locale: t } = Ke({
            from: "/$locale"
        });
        return d.jsx(cu, {
            title: ({ entity: n })=>d.jsx(uu, {
                    icon: Et,
                    title: n.name
                }),
            actions: ({ entity: n })=>d.jsxs(d.Fragment, {
                    children: [
                        d.jsx(Te, {
                            icon: wy,
                            to: "/$locale/apps/derivean/root/blueprint/list",
                            params: {
                                locale: t
                            },
                            children: d.jsx(B, {
                                label: "Blueprint list (label)"
                            })
                        }),
                        d.jsx(Te, {
                            icon: "icon-[ph--graph-light]",
                            to: "/$locale/apps/derivean/root/editor",
                            params: {
                                locale: t
                            },
                            search: {
                                zoomTo: n.id
                            },
                            children: d.jsx(B, {
                                label: "Editor (label)"
                            })
                        })
                    ]
                }),
            ...e
        });
    }, ZM = Le("/$locale/apps/derivean/root/blueprint/$id")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { id: n } }) {
            return {
                entity: await e.ensureQueryData({
                    queryKey: [
                        "Blueprint",
                        "fetch",
                        n
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (i)=>to({
                                select: i.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.name",
                                    "bl.sort",
                                    "bl.cycles",
                                    (o)=>o.selectFrom("Blueprint_Region as br").innerJoin("Region as r", "r.id", "br.regionId").select((s)=>Gs.jsonGroupArray({
                                                id: s.ref("r.id"),
                                                name: s.ref("r.name")
                                            }).as("regions")).whereRef("br.blueprintId", "=", "bl.id").as("regions"),
                                    (o)=>o.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select((s)=>Gs.jsonGroupArray({
                                                id: s.ref("br.id"),
                                                amount: s.ref("br.amount"),
                                                passive: s.ref("br.passive"),
                                                resourceId: s.ref("br.resourceId"),
                                                blueprintId: s.ref("br.blueprintId"),
                                                name: s.ref("r.name")
                                            }).as("requirements")).whereRef("br.blueprintId", "=", "bl.id").as("requirements"),
                                    (o)=>o.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as bl2", "bl2.id", "bd.dependencyId").select((s)=>Gs.jsonGroupArray({
                                                id: s.ref("bd.id"),
                                                dependencyId: s.ref("bd.dependencyId"),
                                                blueprintId: s.ref("bd.blueprintId"),
                                                name: s.ref("bl2.name")
                                            }).as("requirements")).whereRef("bd.blueprintId", "=", "bl.id").orderBy("bl2.name", "asc").as("dependencies")
                                ]).where("bl.id", "=", n).orderBy("bl.name", "asc"),
                                query ({ select: o, where: s }) {
                                    let l = o;
                                    if (s?.fulltext) {
                                        const u = `%${s.fulltext}%`.toLowerCase();
                                        l = l.where((f)=>f.or([
                                                f("bl.id", "like", u),
                                                f("bl.name", "like", u),
                                                f("bl.id", "in", f.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select("br.blueprintId").where((p)=>p.or([
                                                        p("r.name", "like", u)
                                                    ]))),
                                                f("bl.id", "in", f.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as b", "b.id", "bd.dependencyId").select("bd.blueprintId").where((p)=>p.or([
                                                        p("b.name", "like", u)
                                                    ])))
                                            ]));
                                    }
                                    return l;
                                },
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    cycles: T.number().nonnegative(),
                                    sort: T.number().nonnegative(),
                                    regions: Yn(T.object({
                                        id: T.string().min(1),
                                        name: T.string().min(1)
                                    })),
                                    requirements: Yn(du.entity.merge(T.object({
                                        name: T.string().min(1)
                                    }))),
                                    dependencies: Yn(pa.entity.merge(T.object({
                                        name: T.string().min(1)
                                    })))
                                })
                            }));
                    }
                }),
                graph: await t.transaction().execute(async (i)=>ep({
                        tx: i
                    }))
            };
        },
        component () {
            const { tva: e } = Wt({
                from: "__root__"
            }), { entity: t } = ZM.useLoaderData(), n = e().slots;
            return d.jsxs("div", {
                className: n.base(),
                children: [
                    d.jsx(Zee, {
                        entity: t
                    }),
                    d.jsx(Jee, {
                        entity: t
                    }),
                    d.jsx(Pi, {})
                ]
            });
        }
    }), Yee = Le("/$locale/apps/derivean/map/$mapId/view")({}), RO = vn(), Xee = [
        RO({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Building name (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsxs("div", {
                    className: "flex flex-row gap-2 items-center",
                    children: [
                        d.jsx(Te, {
                            icon: "icon-[ph--graph-light]",
                            to: "/$locale/apps/derivean/game",
                            params: {
                                locale: n
                            },
                            search: {
                                blueprintId: e.id
                            }
                        }),
                        d.jsx(Te, {
                            icon: d.jsx("div", {
                                className: it([
                                    "border-2",
                                    "border-purple-400",
                                    "rounded-md",
                                    "w-[64px]",
                                    "h-[64px]",
                                    "bg-contain",
                                    `bg-${e.id}`
                                ])
                            }),
                            to: "/$locale/apps/derivean/game/blueprint/$id/view",
                            params: {
                                locale: n,
                                id: e.id
                            },
                            children: t
                        })
                    ]
                });
            },
            size: 18
        }),
        RO({
            name: "cycles",
            header () {
                return d.jsx(B, {
                    label: "Construction cycles (label)"
                });
            },
            render ({ value: e }) {
                return d.jsxs("div", {
                    className: "flex flex-row items-center gap-2",
                    children: [
                        d.jsx(st, {
                            icon: yI
                        }),
                        mt({
                            number: e
                        })
                    ]
                });
            },
            size: 8
        })
    ], ete = ({ table: e, ...t })=>d.jsx(gn, {
            table: yn({
                ...e,
                columns: Xee
            }),
            ...t
        }), Im = Le("/$locale/apps/derivean/game/blueprint/list")({
        validateSearch: en(mn(gI)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t, session: n }, deps: { filter: r, cursor: i } }) {
            const o = await n();
            return {
                data: await e.ensureQueryData({
                    queryKey: [
                        "Blueprint",
                        "list-count",
                        {
                            filter: r,
                            cursor: i
                        }
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (l)=>Vt({
                                select: l.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.name",
                                    "bl.cycles"
                                ]).where("bl.id", "in", l.selectFrom("Building as bg").select("bg.blueprintId").where("bg.userId", "=", o.id)).orderBy("bl.sort", "asc").orderBy("bl.name", "asc"),
                                query ({ select: u, where: f }) {
                                    let p = u;
                                    if (f?.id && (p = p.where("bl.id", "=", f.id)), f?.fulltext) {
                                        const m = `%${f.fulltext}%`.toLowerCase();
                                        p = p.where((g)=>g.or([
                                                g("bl.id", "like", m),
                                                g("bl.name", "like", m)
                                            ]));
                                    }
                                    return p;
                                },
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    cycles: T.number().nonnegative()
                                }),
                                filter: r,
                                cursor: i
                            }));
                    }
                })
            };
        },
        component () {
            const { data: { data: e, count: t } } = Im.useLoaderData(), { filter: n, cursor: r } = Im.useSearch(), i = Im.useNavigate(), { tva: o } = Wt({
                from: "__root__"
            }), s = o().slots;
            return d.jsx("div", {
                className: s.base(),
                children: d.jsx(ete, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, i)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of blueprints"
                        }),
                        ...fn(i)
                    }
                })
            });
        }
    }), tte = ({ entity: e, ...t })=>{
        const { locale: n } = Ke({
            from: "/$locale"
        });
        return d.jsxs(wl, {
            ...t,
            children: [
                d.jsx(Dt, {
                    icon: Et,
                    to: "/$locale/apps/derivean/game/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "View detail (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: ui,
                    to: "/$locale/apps/derivean/game/blueprint/$id/dependencies",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Blueprint dependencies (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: Xt,
                    to: "/$locale/apps/derivean/game/blueprint/$id/requirements",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Required resources (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: Oi,
                    to: "/$locale/apps/derivean/game/blueprint/$id/production",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Resource production (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: "icon-[solar--bomb-minimalistic-outline]",
                    to: "/$locale/apps/derivean/game/blueprint/$id/conflicts",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Blueprint conflicts (menu)"
                    })
                })
            ]
        });
    }, nte = (e)=>{
        const { locale: t } = Ke({
            from: "/$locale"
        });
        return d.jsx(cu, {
            title: ({ entity: n })=>d.jsx(uu, {
                    icon: Et,
                    title: n.name
                }),
            actions: ()=>d.jsx(d.Fragment, {
                    children: d.jsx(Te, {
                        icon: wy,
                        to: "/$locale/apps/derivean/game/blueprint/list",
                        params: {
                            locale: t
                        },
                        children: d.jsx(B, {
                            label: "Blueprint list (label)"
                        })
                    })
                }),
            ...e
        });
    }, YM = Le("/$locale/apps/derivean/game/blueprint/$id")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { id: n } }) {
            return {
                entity: await e.ensureQueryData({
                    queryKey: [
                        "Blueprint",
                        "fetch",
                        n
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (i)=>to({
                                select: i.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.name",
                                    "bl.cycles"
                                ]).where("bl.id", "=", n).orderBy("bl.name", "asc"),
                                query ({ select: o, where: s }) {
                                    let l = o;
                                    if (s?.fulltext) {
                                        const u = `%${s.fulltext}%`.toLowerCase();
                                        l = l.where((f)=>f.or([
                                                f("bl.id", "like", u),
                                                f("bl.name", "like", u),
                                                f("bl.id", "in", f.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select("br.blueprintId").where((p)=>p.or([
                                                        p("r.name", "like", u)
                                                    ]))),
                                                f("bl.id", "in", f.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as b", "b.id", "bd.dependencyId").select("bd.blueprintId").where((p)=>p.or([
                                                        p("b.name", "like", u)
                                                    ])))
                                            ]));
                                    }
                                    return l;
                                },
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    cycles: T.number().nonnegative()
                                })
                            }));
                    }
                }),
                graph: await t.transaction().execute(async (i)=>ep({
                        tx: i
                    }))
            };
        },
        component () {
            const { tva: e } = Wt({
                from: "__root__"
            }), { entity: t } = YM.useLoaderData(), n = e().slots;
            return d.jsxs("div", {
                className: n.base(),
                children: [
                    d.jsx(nte, {
                        entity: t
                    }),
                    d.jsx(tte, {
                        entity: t
                    }),
                    d.jsx(Pi, {})
                ]
            });
        }
    }), rte = Le("/$locale/apps/derivean/root/user/$id/view")({
        component () {
            return "yep";
        }
    }), ite = Le("/$locale/apps/derivean/root/resource/$id/view")({
        component () {
            const { entity: { image: e } } = On({
                from: "/$locale/apps/derivean/root/resource/$id"
            });
            return d.jsx(d.Fragment, {
                children: d.jsx("img", {
                    src: e || void 0
                })
            });
        }
    }), ote = Le("/$locale/apps/derivean/root/region/$id/view")({
        component () {
            const { entity: { image: e } } = On({
                from: "/$locale/apps/derivean/root/region/$id"
            });
            return d.jsx(d.Fragment, {
                children: e ? d.jsx("img", {
                    src: e || void 0
                }) : "no image"
            });
        }
    }), vI = "icon-[carbon--document-requirements]", ste = ({ entity: e, ...t })=>{
        const { locale: n } = Ke({
            from: "/$locale"
        });
        return d.jsxs(wl, {
            ...t,
            children: [
                d.jsx(Dt, {
                    icon: vI,
                    to: "/$locale/apps/derivean/root/blueprint/production/$id/requirements",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Production requirements (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: Xt,
                    to: "/$locale/apps/derivean/root/blueprint/production/$id/resources",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Production resource requirements (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: Et,
                    to: "/$locale/apps/derivean/root/blueprint/production/$id/dependencies",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Production resource dependencies (menu)"
                    })
                })
            ]
        });
    }, ate = (e)=>{
        const { locale: t } = Ke({
            from: "/$locale"
        });
        return d.jsx(cu, {
            title: ({ entity: n })=>d.jsx(uu, {
                    icon: Oi,
                    title: n.resource,
                    subtitle: n.blueprint
                }),
            actions: ({ entity: n })=>d.jsx(d.Fragment, {
                    children: d.jsx(Te, {
                        icon: Et,
                        to: "/$locale/apps/derivean/root/blueprint/$id/production",
                        params: {
                            locale: t,
                            id: n.blueprintId
                        },
                        children: d.jsx(B, {
                            label: "Building base detail (label)"
                        })
                    })
                }),
            ...e
        });
    }, XM = Le("/$locale/apps/derivean/root/blueprint/production/$id")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { id: n } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Production",
                    n
                ],
                async queryFn () {
                    return t.transaction().execute(async (r)=>({
                            entity: await to({
                                select: r.selectFrom("Blueprint_Production as bp").innerJoin("Resource as r", "r.id", "bp.resourceId").innerJoin("Blueprint as bl", "bl.id", "bp.blueprintId").select([
                                    "bp.id",
                                    "bp.amount",
                                    "bp.cycles",
                                    "r.name as resource",
                                    "bp.blueprintId",
                                    "bl.name as blueprint"
                                ]).where("bp.id", "=", n),
                                output: T.object({
                                    id: T.string().min(1),
                                    resource: T.string().min(1),
                                    blueprint: T.string().min(1),
                                    blueprintId: T.string().min(1),
                                    amount: T.number().nonnegative(),
                                    cycles: T.number().int().nonnegative()
                                })
                            })
                        }));
                }
            });
        },
        component () {
            const { entity: e } = XM.useLoaderData(), { tva: t } = Wt({
                from: "__root__"
            }), n = t().slots;
            return d.jsxs("div", {
                className: n.base(),
                children: [
                    d.jsx(ate, {
                        entity: e
                    }),
                    d.jsx(ste, {
                        entity: e
                    }),
                    d.jsx(Pi, {})
                ]
            });
        }
    }), lte = ({ graph: e, blueprintId: t, mode: n = "dependencies", reverse: r = !1 })=>{
        try {
            const i = ((o)=>r ? o.reverse() : o)(n === "dependants" ? e.dependantsOf(t) : e.dependenciesOf(t));
            return d.jsxs("div", {
                className: it([
                    "flex",
                    "flex-row",
                    "flex-wrap",
                    "gap-2",
                    "items-center"
                ]),
                children: [
                    i.length > 0 ? d.jsx(st, {
                        css: {
                            base: [
                                "text-emerald-500"
                            ]
                        },
                        icon: "icon-[charm--circle-tick]"
                    }) : d.jsx(st, {
                        css: {
                            base: [
                                "text-amber-500"
                            ]
                        },
                        icon: "icon-[fe--question]"
                    }),
                    i.length > 0 ? i.map((o)=>d.jsx(cr, {
                            css: {
                                base: [
                                    "bg-emerald-200",
                                    "text-emerald-700",
                                    "border-emerald-500"
                                ]
                            },
                            children: e.getNodeData(o)
                        }, xt())) : d.jsx(B, {
                        css: {
                            base: [
                                "text-amber-500",
                                "font-bold"
                            ]
                        },
                        label: "No dependents (label)"
                    })
                ]
            });
        } catch (i) {
            return i instanceof GM.DepGraphCycleError ? d.jsxs("div", {
                className: it([
                    "flex",
                    "flex-row",
                    "gap-2",
                    "items-center"
                ]),
                children: [
                    d.jsx(st, {
                        css: {
                            base: [
                                "text-red-500"
                            ]
                        },
                        icon: "icon-[charm--circle-cross]"
                    }),
                    i.cyclePath.map((o)=>d.jsx(cr, {
                            css: {
                                base: [
                                    "bg-red-200",
                                    "text-red-700",
                                    "border-red-500"
                                ]
                            },
                            children: e.getNodeData(o)
                        }, xt()))
                ]
            }) : "kaboom";
        }
    }, cte = ({ dependencies: e, ...t })=>d.jsx(HA, {
            items: [
                {
                    id: "name",
                    label: d.jsx(B, {
                        label: "Building name (label)"
                    }),
                    render ({ entity: n }) {
                        return n.name;
                    }
                },
                {
                    id: "cycles",
                    label: d.jsx(B, {
                        label: "Construction cycles (label)"
                    }),
                    render ({ entity: n }) {
                        return mt({
                            number: n.cycles
                        });
                    }
                },
                {
                    id: "regions",
                    label: d.jsx(B, {
                        label: "Regions (label)"
                    }),
                    render ({ entity: n }) {
                        return d.jsx(ca, {
                            items: n.regions,
                            css: {
                                base: [
                                    "flex",
                                    "flex-row",
                                    "gap-2"
                                ]
                            },
                            textEmpty: d.jsx(B, {
                                label: "No regions (label)"
                            }),
                            render: ({ entity: r })=>d.jsx("div", {
                                    className: it([
                                        "p-2",
                                        "border",
                                        "border-blue-300",
                                        "bg-blue-50",
                                        "rounded-sm"
                                    ]),
                                    children: r.name
                                })
                        });
                    }
                },
                {
                    id: "requirements",
                    label: d.jsx(B, {
                        label: "Required resources (label)"
                    }),
                    render ({ entity: n }) {
                        return d.jsx(qy, {
                            requirements: n.requirements,
                            textEmpty: d.jsx(B, {
                                label: "No requirements (label)"
                            })
                        });
                    }
                },
                {
                    id: "dependencies",
                    label: d.jsx(B, {
                        label: "Blueprint dependencies (label)"
                    }),
                    render ({ entity: n }) {
                        return d.jsx(KM, {
                            dependencies: n.dependencies,
                            textEmpty: d.jsx(B, {
                                label: "No dependencies (label)"
                            })
                        });
                    }
                },
                {
                    id: "deps",
                    label: d.jsx(B, {
                        label: "Blueprint dependency graph (label)"
                    }),
                    render ({ entity: n }) {
                        return d.jsx(lte, {
                            graph: e,
                            blueprintId: n.id
                        });
                    }
                },
                {
                    id: "preview",
                    render ({ entity: n }) {
                        return d.jsx("div", {
                            className: it([
                                "mx-auto",
                                "border-2",
                                "border-purple-400",
                                "rounded-md",
                                "w-[256px]",
                                "h-[256px]",
                                "bg-contain",
                                `bg-${n.id}`
                            ])
                        });
                    }
                }
            ],
            ...t
        }), eL = Le("/$locale/apps/derivean/root/blueprint/$id/view")({
        async loader ({ context: { kysely: e } }) {
            return {
                dependencies: await e.transaction().execute(async (t)=>ep({
                        tx: t
                    }))
            };
        },
        component () {
            const { dependencies: e } = eL.useLoaderData(), { entity: t } = On({
                from: "/$locale/apps/derivean/root/blueprint/$id"
            });
            return d.jsx("div", {
                className: "w-1/2 mx-auto",
                children: d.jsx(cte, {
                    dependencies: e,
                    entity: t
                })
            });
        }
    }), tp = ({ group: e, ...t })=>d.jsx(wF, {
            icon: Xt,
            textTitle: d.jsx(B, {
                label: "Select resource (title)"
            }),
            textSelect: d.jsx(B, {
                label: "Select resource (label)"
            }),
            table: (n)=>d.jsx(UM, {
                    group: e,
                    ...n
                }),
            render: ({ entity: n })=>n.name,
            queryKey: "Resource",
            query: async ({ filter: n, cursor: r })=>Pe.transaction().execute(async (i)=>Vt({
                        select: i.selectFrom("Resource as r").select([
                            "r.id",
                            "r.name",
                            "r.weight",
                            (o)=>o.selectFrom("Tag as t").select((s)=>un`json_group_array(json_object(
                                                'id', ${s.ref("t.id")},
                                                'code', ${s.ref("t.code")},
                                                'group', ${s.ref("t.group")},
                                                'sort', ${s.ref("t.sort")},
                                                'label', ${s.ref("t.label")}
                                            ))`.as("tags")).where("t.id", "in", i.selectFrom("Resource_Tag as rt").select("rt.tagId").where("rt.resourceId", "=", o.ref("r.id"))).as("tags"),
                            (o)=>o.selectFrom("Blueprint_Requirement").select((s)=>s.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countRequirement"),
                            (o)=>o.selectFrom("Blueprint_Production").select((s)=>s.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countProduction"),
                            (o)=>o.selectFrom("Blueprint_Production_Requirement").select((s)=>s.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countProductionRequirement")
                        ]).orderBy("r.name", "asc"),
                        query ({ select: o, where: s }) {
                            let l = o;
                            if (s?.id && (l = l.where("r.id", "=", s.id)), s?.fulltext) {
                                const u = `%${s.fulltext}%`.toLowerCase();
                                l = l.where((f)=>f.or([
                                        f("r.id", "like", u),
                                        f("r.name", "like", u),
                                        f("r.id", "in", f.selectFrom("Resource_Tag as rt").innerJoin("Tag as t", "t.id", "rt.tagId").select("rt.resourceId").where((p)=>p.or([
                                                p("t.code", "like", u),
                                                p("t.label", "like", u),
                                                p("t.group", "like", u)
                                            ])))
                                    ]));
                            }
                            return l;
                        },
                        output: T.object({
                            id: T.string().min(1),
                            name: T.string().min(1),
                            weight: vo(),
                            tags: Yn(Xf.entity),
                            countRequirement: T.number().nonnegative(),
                            countProduction: T.number().nonnegative(),
                            countProductionRequirement: T.number().nonnegative()
                        }),
                        filter: n,
                        cursor: r
                    })),
            ...t
        }), OO = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(du.shape),
            defaultValues: {
                amount: 1,
                passive: !1,
                ...t
            }
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "resourceId",
                    label: d.jsx(B, {
                        label: "Requirement (label)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "resourceId",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(tp, {
                                allowEmpty: !0,
                                ...u
                            })
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "amount",
                    label: d.jsx(B, {
                        label: "Amount (label)"
                    }),
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        ...o.register("amount")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "passive",
                    label: d.jsx(B, {
                        label: "Passive requirement (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Passive requirement (hint)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "passive",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(UA, {
                                ...u
                            })
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: Xt,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, N0 = vn(), ute = [
        N0({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: e }) {
                return e;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: e, filter: t }) {
                    t.shallow("resourceID", e.resourceId);
                }
            },
            size: 22
        }),
        N0({
            name: "amount",
            header () {
                return d.jsx(B, {
                    label: "Amount (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 10
        }),
        N0({
            name: "passive",
            header () {
                return d.jsx(B, {
                    label: "Passive requirement (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(by, {
                    value: e
                });
            },
            size: 10
        })
    ], dte = ({ blueprintId: e, table: t, ...n })=>{
        const r = Bt([
            [
                "Blueprint"
            ],
            [
                "Blueprint_Requirement"
            ],
            [
                "Blueprint_Resource_Requirement"
            ],
            [
                "Resource"
            ]
        ]);
        return d.jsx(gn, {
            table: yn({
                ...t,
                columns: ute
            }),
            action: {
                table () {
                    return d.jsx(zt, {
                        children: d.jsx(gt, {
                            label: d.jsx(B, {
                                label: "Create requirement item (menu)"
                            }),
                            textTitle: d.jsx(B, {
                                label: "Create requirement item (modal)"
                            }),
                            icon: Xt,
                            children: d.jsx(OO, {
                                mutation: Ye({
                                    async mutationFn (i) {
                                        return Pe.transaction().execute(async (o)=>o.insertInto("Blueprint_Requirement").values({
                                                id: xt(),
                                                ...i,
                                                blueprintId: e
                                            }).execute());
                                    },
                                    async onSuccess () {
                                        await r();
                                    }
                                })
                            })
                        })
                    });
                },
                row ({ data: i }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit requirement item (modal)"
                                }),
                                icon: Xt,
                                children: d.jsx(OO, {
                                    defaultValues: i,
                                    mutation: Ye({
                                        async mutationFn (o) {
                                            return Pe.transaction().execute(async (s)=>s.updateTable("Blueprint_Requirement").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete requirement item (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>Pe.transaction().execute(async (o)=>o.deleteFrom("Blueprint_Requirement").where("id", "=", i.id).execute()),
                                    textContent: d.jsx(B, {
                                        label: "Delete requirement item (content)"
                                    }),
                                    textToast: "Delete requirement item",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, hd = Le("/$locale/apps/derivean/root/blueprint/$id/requirements")({
        validateSearch: en(mn(du)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Requirement",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select([
                                "br.id",
                                "r.name",
                                "br.resourceId",
                                "br.amount",
                                "br.passive"
                            ]).where("br.blueprintId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                return l?.id && (u = u.where("br.id", "=", l.id)), l?.idIn && (u = u.where("br.id", "in", l.idIn)), l?.resourceId && (u = u.where("br.resourceId", "=", l.resourceId)), u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                resourceId: T.string().min(1),
                                amount: T.number().nonnegative(),
                                passive: Ai()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = hd.useLoaderData(), { filter: n, cursor: r, selection: i } = hd.useSearch(), { id: o } = hd.useParams(), s = hd.useNavigate(), { tva: l } = Wt({
                from: "__root__"
            }), u = l().slots;
            return d.jsx("div", {
                className: u.base(),
                children: d.jsx(dte, {
                    blueprintId: o,
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, s)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of requirements (label)"
                        }),
                        ...fn(s)
                    }
                })
            });
        }
    }), xI = _9({
        shape: T.object({
            resourceId: T.string().min(1),
            amount: ts(),
            cycles: vo()
        }),
        filter: pr.merge(T.object({
            blueprintId: T.string().optional(),
            resourceId: T.string().optional()
        }))
    }), TO = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(xI.shape),
            defaultValues: {
                amount: 1,
                cycles: 1,
                ...t
            }
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "resourceId",
                    label: d.jsx(B, {
                        label: "Resource name (label)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "resourceId",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(tp, {
                                textTitle: d.jsx(B, {
                                    label: "Select resource (title)"
                                }),
                                allowEmpty: !0,
                                ...u
                            })
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "amount",
                    label: d.jsx(B, {
                        label: "Amount (label)"
                    }),
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        ...o.register("amount")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "cycles",
                    label: d.jsx(B, {
                        label: "Production cycles (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Production cycles (hint)"
                    }),
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        ...o.register("cycles")
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: Oi,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, np = (e)=>d.jsx(wF, {
            icon: Et,
            textTitle: d.jsx(B, {
                label: "Select blueprint (title)"
            }),
            table: ({ table: t, ...n })=>d.jsx(JM, {
                    table: {
                        ...t,
                        hidden: [
                            "requirements",
                            "dependencies"
                        ]
                    },
                    ...n
                }),
            render: ({ entity: t })=>t.name,
            queryKey: "Blueprint",
            query: async ({ filter: t, cursor: n })=>Pe.transaction().execute(async (r)=>Vt({
                        select: r.selectFrom("Blueprint as b").select([
                            "b.id",
                            "b.name",
                            "b.sort",
                            "b.cycles",
                            "b.limit",
                            (i)=>i.selectFrom("Blueprint_Region as br").innerJoin("Region as r", "r.id", "br.regionId").select((o)=>Gs.jsonGroupArray({
                                        id: o.ref("r.id"),
                                        name: o.ref("r.name")
                                    }).as("regions")).whereRef("br.blueprintId", "=", "b.id").as("regions"),
                            (i)=>i.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select((o)=>un`json_group_array(json_object(
                                                    'id', ${o.ref("br.id")},
                                                    'amount', ${o.ref("br.amount")},
                                                    'passive', ${o.ref("br.passive")},
                                                    'resourceId', ${o.ref("br.resourceId")},
                                                    'blueprintId', ${o.ref("br.blueprintId")},
                                                    'name', ${o.ref("r.name")}
                                                ))`.as("requirements")).whereRef("br.blueprintId", "=", "b.id").as("requirements"),
                            (i)=>i.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as b", "b.id", "bd.blueprintId").select((o)=>un`json_group_array(json_object(
                                                    'id', ${o.ref("bd.id")},
                                                    'dependencyId', ${o.ref("bd.dependencyId")},
                                                    'blueprintId', ${o.ref("bd.blueprintId")},
                                                    'name', ${o.ref("b.name")}
                                                ))`.as("requirements")).whereRef("bd.blueprintId", "=", "b.id").as("dependencies")
                        ]).orderBy("b.name", "asc"),
                        query ({ select: i, where: o }) {
                            let s = i;
                            if (o?.id && (s = s.where("b.id", "=", o.id)), o?.fulltext) {
                                const l = `%${o.fulltext}%`.toLowerCase();
                                s = s.where((u)=>u.or([
                                        u("b.id", "like", l),
                                        u("b.name", "like", l)
                                    ]));
                            }
                            return s;
                        },
                        output: T.object({
                            id: T.string().min(1),
                            name: T.string().min(1),
                            cycles: T.number().nonnegative(),
                            sort: T.number().nonnegative(),
                            limit: T.number().nonnegative(),
                            regions: Yn(T.object({
                                id: T.string().min(1),
                                name: T.string().min(1)
                            })),
                            requirements: Yn(du.entity.merge(T.object({
                                name: T.string().min(1)
                            }))),
                            dependencies: Yn(pa.entity.merge(T.object({
                                name: T.string().min(1)
                            })))
                        }),
                        filter: t,
                        cursor: n
                    })),
            ...e
        }), fte = T.object({
        blueprintId: T.string().min(1)
    }), pte = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(fte),
            defaultValues: t
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "blueprintId",
                    label: d.jsx(B, {
                        label: "Target blueprint (label)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "blueprintId",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(np, {
                                allowEmpty: !0,
                                ...u
                            })
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: Et,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, ic = vn(), hte = [
        ic({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Resource name (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsx(Te, {
                    icon: Oi,
                    to: "/$locale/apps/derivean/root/blueprint/production/$id/requirements",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: t
                });
            },
            size: 18
        }),
        ic({
            name: "amount",
            header () {
                return d.jsx(B, {
                    label: "Amount (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 8
        }),
        ic({
            name: "cycles",
            header () {
                return d.jsx(B, {
                    label: "Production cycles (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 8
        }),
        ic({
            name: "requirements",
            header () {
                return d.jsx(B, {
                    label: "Required resources (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(qy, {
                    textTitle: d.jsx(B, {
                        label: "Resource requirements (title)"
                    }),
                    textEmpty: d.jsx(B, {
                        label: "No requirements (label)"
                    }),
                    requirements: e
                });
            },
            size: 32
        }),
        ic({
            name: "resources",
            header () {
                return d.jsx(B, {
                    label: "Required production resources (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(ca, {
                    items: e,
                    render: ({ entity: t })=>d.jsxs("div", {
                            className: it([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "bg-sky-100",
                                "border",
                                "rounded-sm",
                                "border-sky-300",
                                "py-1",
                                "px-2"
                            ]),
                            children: [
                                d.jsx("div", {
                                    children: t.name
                                }),
                                d.jsxs("div", {
                                    className: "text-md font-bold text-slate-500",
                                    children: [
                                        "x",
                                        mt({
                                            number: t.amount
                                        })
                                    ]
                                })
                            ]
                        })
                });
            },
            size: 32
        }),
        ic({
            name: "dependencies",
            header () {
                return d.jsx(B, {
                    label: "Required production dependencies (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(ca, {
                    items: e,
                    render: ({ entity: t })=>d.jsx("div", {
                            className: it([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "bg-sky-100",
                                "border",
                                "rounded-sm",
                                "border-sky-300",
                                "py-1",
                                "px-2"
                            ]),
                            children: d.jsx("div", {
                                children: t.name
                            })
                        })
                });
            },
            size: 32
        })
    ], mte = ({ blueprintId: e, table: t, ...n })=>{
        const r = Bt([
            [
                "Blueprint"
            ],
            [
                "Blueprint_Production"
            ],
            [
                "Blueprint_Production_Requirement"
            ],
            [
                "Resource"
            ]
        ]);
        return d.jsx(gn, {
            table: yn({
                ...t,
                columns: hte
            }),
            action: {
                table () {
                    return d.jsx(zt, {
                        children: d.jsx(gt, {
                            label: d.jsx(B, {
                                label: "Create blueprint production (menu)"
                            }),
                            textTitle: d.jsx(B, {
                                label: "Create blueprint production (modal)"
                            }),
                            icon: Oi,
                            children: ({ close: i })=>d.jsx(TO, {
                                    mutation: Ye({
                                        async mutationFn (o) {
                                            return Pe.transaction().execute(async (s)=>await s.insertInto("Blueprint_Production").values({
                                                    id: xt(),
                                                    ...o,
                                                    blueprintId: e
                                                }).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit blueprint production (modal)"
                                }),
                                icon: Oi,
                                children: d.jsx(TO, {
                                    defaultValues: i,
                                    mutation: Ye({
                                        async mutationFn (o) {
                                            return Pe.transaction().execute(async (s)=>s.updateTable("Blueprint_Production").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Move production to (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Move production to (modal)"
                                }),
                                icon: Xt,
                                children: ({ close: o })=>d.jsx(pte, {
                                        mutation: Ye({
                                            async mutationFn (s) {
                                                return Pe.transaction().execute(async (l)=>{
                                                    await l.updateTable("Blueprint_Production").set({
                                                        blueprintId: s.blueprintId
                                                    }).where("id", "=", i.id).execute();
                                                });
                                            },
                                            async onSuccess () {
                                                await r(), o();
                                            }
                                        })
                                    })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete blueprint production (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>Pe.transaction().execute(async (o)=>o.deleteFrom("Blueprint_Production").where("id", "=", i.id).execute()),
                                    textContent: d.jsx(B, {
                                        label: "Delete blueprint production (content)"
                                    }),
                                    textToast: "Delete blueprint production",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, rp = E9({
        shape: T.object({
            blueprintId: T.string().min(1)
        }),
        filter: pr
    }), ip = k9({
        shape: T.object({
            resourceId: T.string().min(1),
            amount: ts(),
            passive: T.boolean()
        }),
        filter: pr.merge(T.object({
            blueprintProductionId: T.string().optional(),
            resourceId: T.string().optional()
        }))
    }), op = C9({
        shape: T.object({
            resourceId: T.string().min(1),
            amount: ts()
        }),
        filter: pr.merge(T.object({
            resourceId: T.string().optional()
        }))
    }), md = Le("/$locale/apps/derivean/root/blueprint/$id/production")({
        validateSearch: en(mn(xI)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Production",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Production as bp").innerJoin("Blueprint as bl", "bl.id", "bp.blueprintId").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                "bp.id",
                                "r.name",
                                "bp.amount",
                                "bp.blueprintId",
                                "bp.cycles",
                                "bp.resourceId",
                                (s)=>s.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select((l)=>un`json_group_array(json_object(
                                                'id', ${l.ref("bpr.id")},
                                                'amount', ${l.ref("bpr.amount")},
                                                'passive', ${l.ref("bpr.passive")},
                                                'blueprintProductionId', ${l.ref("bpr.blueprintProductionId")},
                                                'resourceId', ${l.ref("bpr.resourceId")},
                                                'name', ${l.ref("r.name")}
                                            ))`.as("requirements")).whereRef("bpr.blueprintProductionId", "=", "bp.id").as("requirements"),
                                (s)=>s.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select((l)=>un`json_group_array(json_object(
                                                'id', ${l.ref("bpr.id")},
                                                'amount', ${l.ref("bpr.amount")},
                                                'blueprintProductionId', ${l.ref("bpr.blueprintProductionId")},
                                                'resourceId', ${l.ref("bpr.resourceId")},
                                                'name', ${l.ref("r.name")}
                                            ))`.as("requirements")).whereRef("bpr.blueprintProductionId", "=", "bp.id").as("resources"),
                                (s)=>s.selectFrom("Blueprint_Production_Dependency as bpd").innerJoin("Blueprint as bl2", "bl2.id", "bpd.blueprintId").select((l)=>un`json_group_array(json_object(
                                                'id', ${l.ref("bpd.id")},
                                                'blueprintProductionId', ${l.ref("bpd.blueprintProductionId")},
                                                'blueprintId', ${l.ref("bpd.blueprintId")},
                                                'name', ${l.ref("bl2.name")}
                                            ))`.as("requirements")).whereRef("bpd.blueprintProductionId", "=", "bp.id").as("dependencies")
                            ]).where("bp.blueprintId", "=", i).orderBy("r.name", "asc"),
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                blueprintId: T.string().min(1),
                                resourceId: T.string().min(1),
                                amount: T.number().nonnegative(),
                                cycles: T.number().nonnegative(),
                                requirements: Yn(ip.entity.merge(T.object({
                                    name: T.string().min(1)
                                }))),
                                resources: Yn(op.entity.merge(T.object({
                                    name: T.string().min(1)
                                }))),
                                dependencies: Yn(rp.entity.merge(T.object({
                                    name: T.string().min(1)
                                })))
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = md.useLoaderData(), { filter: n, cursor: r, selection: i } = md.useSearch(), { id: o } = md.useParams(), s = md.useNavigate(), { tva: l } = Wt({
                from: "__root__"
            }), u = l().slots;
            return d.jsx("div", {
                className: u.base(),
                children: d.jsx(mte, {
                    blueprintId: o,
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, s)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of productions (label)"
                        }),
                        ...fn(s)
                    }
                })
            });
        }
    }), gte = ({ label: e, ...t })=>d.jsx(B, {
            label: `Inventory type - ${e}`,
            ...t
        }), yte = O9({
        shape: T.object({
            resourceId: T.string().min(1),
            amount: ts(),
            limit: ts(),
            type: T.enum([
                "storage",
                "construction"
            ])
        }),
        filter: pr.merge(T.object({
            resourceId: T.string().optional(),
            type: T.enum([
                "storage",
                "construction"
            ]).optional()
        }))
    }), PO = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(yte.shape),
            defaultValues: {
                amount: 0,
                limit: 0,
                type: "storage",
                ...t
            }
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "resourceId",
                    label: d.jsx(B, {
                        label: "Resource name (label)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "resourceId",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(tp, {
                                textTitle: d.jsx(B, {
                                    label: "Select resource (title)"
                                }),
                                allowEmpty: !0,
                                ...u
                            })
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "type",
                    label: d.jsx(B, {
                        label: "Inventory type (label)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "type",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(KA, {
                                items: [
                                    {
                                        id: "storage",
                                        value: Wr.text("Inventory type - storage")
                                    },
                                    {
                                        id: "construction",
                                        value: Wr.text("Inventory type - construction")
                                    }
                                ],
                                render: ({ entity: f })=>f.value,
                                ...u
                            })
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "amount",
                    label: d.jsx(B, {
                        label: "Amount (label)"
                    }),
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        ...o.register("amount")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "limit",
                    label: d.jsx(B, {
                        label: "Inventory limit (label)"
                    }),
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        ...o.register("limit")
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: Ys,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, Jh = vn(), vte = [
        Jh({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Resource name (label)"
                });
            },
            render ({ value: e }) {
                return e;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: e, filter: t }) {
                    t.shallow("resourceId", e.resourceId);
                }
            },
            size: 18
        }),
        Jh({
            name: "type",
            header () {
                return d.jsx(B, {
                    label: "Inventory type (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(gte, {
                    label: e
                });
            },
            filter: {
                path: "type",
                onFilter ({ data: e, filter: t }) {
                    t.shallow("type", e.type);
                }
            },
            size: 12
        }),
        Jh({
            name: "amount",
            header () {
                return d.jsx(B, {
                    label: "Amount (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 12
        }),
        Jh({
            name: "limit",
            header () {
                return d.jsx(B, {
                    label: "Inventory limit (label)"
                });
            },
            render ({ value: e, data: t }) {
                return d.jsxs("div", {
                    className: "flex flex-row items-center gap-2 w-full",
                    children: [
                        d.jsx("div", {
                            children: mt({
                                number: e
                            })
                        }),
                        d.jsx(Iy, {
                            value: 100 * t.amount / t.limit
                        })
                    ]
                });
            },
            size: 14
        })
    ], xte = ({ blueprintId: e, table: t, ...n })=>{
        const r = Bt([
            [
                "Blueprint_Inventory"
            ]
        ]), i = Ye({
            async mutationFn () {
                return Pe.transaction().execute(async (o)=>QM({
                        tx: o,
                        blueprintId: e
                    }));
            },
            async onSuccess () {
                await r();
            },
            onError (o) {
                console.error(o);
            }
        });
        return d.jsx(gn, {
            table: yn({
                ...t,
                columns: vte
            }),
            action: {
                table () {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Create inventory item (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Create inventory item (modal)"
                                }),
                                icon: Ys,
                                children: d.jsx(PO, {
                                    mutation: Ye({
                                        async mutationFn (o) {
                                            return _t.promise(Pe.transaction().execute(async (s)=>s.insertInto("Blueprint_Inventory").values({
                                                    id: xt(),
                                                    blueprintId: e,
                                                    inventoryId: (await s.insertInto("Inventory").values({
                                                        id: xt(),
                                                        ...o
                                                    }).returningAll().executeTakeFirstOrThrow()).id
                                                }).returningAll().executeTakeFirstOrThrow()), dr("Create inventory item"));
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            d.jsx(IS, {
                                icon: Ys,
                                onClick: ()=>{
                                    i.mutate();
                                },
                                children: d.jsx(B, {
                                    label: "Fill inventory (label)"
                                })
                            })
                        ]
                    });
                },
                row ({ data: o }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit inventory item (modal)"
                                }),
                                icon: Ys,
                                children: d.jsx(PO, {
                                    defaultValues: o,
                                    mutation: Ye({
                                        async mutationFn (s) {
                                            return _t.promise(Pe.transaction().execute(async (l)=>l.updateTable("Inventory").set(s).where("id", "=", o.inventoryId).returningAll().executeTakeFirstOrThrow()), dr("Update inventory item"));
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete inventory item (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>Pe.transaction().execute(async (s)=>s.deleteFrom("Inventory").where("id", "=", o.inventoryId).execute()),
                                    textContent: d.jsx(B, {
                                        label: "Inventory item delete (content)"
                                    }),
                                    textToast: "Inventory item delete",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, bte = I9({
        shape: T.object({
            blueprintId: T.string().min(1),
            inventoryId: T.string().min(1)
        }),
        filter: pr.merge(T.object({
            blueprintId: T.string().optional(),
            inventoryId: T.string().optional()
        }))
    }), gd = Le("/$locale/apps/derivean/root/blueprint/$id/inventory")({
        validateSearch: en(mn(bte)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Inventory",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute((o)=>Vt({
                            select: o.selectFrom("Blueprint_Inventory as bi").innerJoin("Inventory as i", "i.id", "bi.inventoryId").innerJoin("Resource as r", "r.id", "i.resourceId").select([
                                "bi.id",
                                "r.name",
                                "i.amount",
                                "i.limit",
                                "i.type",
                                "i.resourceId",
                                "bi.blueprintId",
                                "bi.inventoryId"
                            ]).where("bi.blueprintId", "=", i).orderBy("i.type", "asc").orderBy("r.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                if (l?.id && (u = u.where("bi.id", "=", l.id)), l?.idIn && (u = u.where("bi.id", "in", l.idIn)), l?.fulltext) {
                                    const f = `%${l.fulltext}%`.toLowerCase();
                                    u = u.where((p)=>p.or([
                                            p("bi.id", "like", `%${f}%`),
                                            p("r.id", "like", `%${f}%`),
                                            p("r.name", "like", `%${f}%`),
                                            p("r.id", "in", p.selectFrom("Resource_Tag as rt").innerJoin("Tag as t", "t.id", "rt.tagId").select("rt.resourceId").where((m)=>m.or([
                                                    m("t.code", "like", f),
                                                    m("t.label", "like", f),
                                                    m("t.group", "like", f)
                                                ])))
                                        ]));
                                }
                                return u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                type: T.enum([
                                    "storage",
                                    "construction"
                                ]),
                                resourceId: T.string().min(1),
                                blueprintId: T.string().min(1),
                                inventoryId: T.string().min(1),
                                amount: T.number().nonnegative(),
                                limit: T.number().int().nonnegative()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = gd.useLoaderData(), { filter: n, cursor: r, selection: i } = gd.useSearch(), { id: o } = gd.useParams(), s = gd.useNavigate(), { tva: l } = Wt({
                from: "__root__"
            }), u = l().slots;
            return d.jsx("div", {
                className: u.base(),
                children: d.jsx(xte, {
                    blueprintId: o,
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, s)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of items"
                        }),
                        ...fn(s)
                    }
                })
            });
        }
    }), tL = Le("/$locale/apps/derivean/root/blueprint/$id/edit")({
        component: ()=>{
            const { entity: e } = On({
                from: "/$locale/apps/derivean/root/blueprint/$id"
            }), t = tL.useNavigate(), n = Bt([
                [
                    "Blueprint"
                ]
            ]);
            return d.jsx("div", {
                className: "w-1/2 mx-auto",
                children: d.jsx(Wg, {
                    defaultValues: e,
                    mutation: Ye({
                        async mutationFn ({ image: r, regionIds: i, ...o }) {
                            return Pe.transaction().execute(async (s)=>{
                                await s.updateTable("Blueprint").set({
                                    ...o,
                                    image: r ? await iA(r) : null
                                }).where("id", "=", e.id).returningAll().executeTakeFirstOrThrow(), await s.deleteFrom("Blueprint_Region").where("blueprintId", "=", e.id).execute(), i?.length && await s.insertInto("Blueprint_Region").values(i.map((l)=>({
                                        id: xt(),
                                        blueprintId: e.id,
                                        regionId: l
                                    }))).execute();
                            });
                        },
                        async onSuccess () {
                            await n(), t({
                                to: "/$locale/apps/derivean/root/blueprint/$id/view",
                                params: {
                                    id: e.id
                                }
                            });
                        }
                    })
                })
            });
        }
    }), AO = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(pa.shape),
            defaultValues: t
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "dependencyId",
                    label: d.jsx(B, {
                        label: "Blueprint dependency (label)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "dependencyId",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(np, {
                                textTitle: d.jsx(B, {
                                    label: "Select blueprint (title)"
                                }),
                                allowEmpty: !0,
                                ...u
                            })
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: Et,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, wte = vn(), Nte = [
        wte({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Required building (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsx(Te, {
                    icon: Et,
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: e.dependencyId
                    },
                    children: t
                });
            },
            size: 22
        })
    ], Ste = ({ blueprintId: e, table: t, ...n })=>{
        const r = Bt([
            [
                "Blueprint_Dependency"
            ],
            [
                "Blueprint"
            ]
        ]);
        return d.jsx(gn, {
            table: yn({
                ...t,
                columns: Nte
            }),
            action: {
                table () {
                    return d.jsx(zt, {
                        children: d.jsx(gt, {
                            label: d.jsx(B, {
                                label: "Create blueprint dependency (menu)"
                            }),
                            textTitle: d.jsx(B, {
                                label: "Create blueprint dependency (modal)"
                            }),
                            icon: Et,
                            children: ({ close: i })=>d.jsx(AO, {
                                    mutation: Ye({
                                        async mutationFn (o) {
                                            return _t.promise(Pe.transaction().execute(async (s)=>{
                                                const l = s.insertInto("Blueprint_Dependency").values({
                                                    id: xt(),
                                                    ...o,
                                                    blueprintId: e
                                                }).returningAll().executeTakeFirstOrThrow();
                                                return await Sf({
                                                    tx: s
                                                }), l;
                                            }), dr("Create blueprint dependency"));
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit blueprint dependency (modal)"
                                }),
                                icon: Et,
                                children: ({ close: o })=>d.jsx(AO, {
                                        defaultValues: i,
                                        mutation: Ye({
                                            async mutationFn (s) {
                                                return _t.promise(Pe.transaction().execute(async (l)=>l.updateTable("Blueprint_Dependency").set(s).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow()), dr("Update blueprint dependency"));
                                            },
                                            async onSuccess () {
                                                await r(), o();
                                            }
                                        })
                                    })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete blueprint dependency (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>Pe.transaction().execute(async (o)=>o.deleteFrom("Blueprint_Dependency").where("id", "=", i.id).execute()),
                                    textContent: d.jsx(B, {
                                        label: "Delete blueprint dependency (content)"
                                    }),
                                    textToast: "Delete blueprint dependency",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, yd = Le("/$locale/apps/derivean/root/blueprint/$id/dependencies")({
        validateSearch: en(mn(pa)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Dependency",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as bl", "bl.id", "bd.dependencyId").select([
                                "bd.id",
                                "bl.name",
                                "bd.blueprintId",
                                "bd.dependencyId"
                            ]).where("bd.blueprintId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                return l?.id && (u = u.where("bd.id", "=", l.id)), l?.idIn && (u = u.where("bd.id", "in", l.idIn)), l?.blueprintId && (u = u.where("bd.blueprintId", "=", l.blueprintId)), l?.dependencyId && (u = u.where("bd.dependencyId", "=", l.dependencyId)), u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                blueprintId: T.string().min(1),
                                dependencyId: T.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = yd.useLoaderData(), { filter: n, cursor: r, selection: i } = yd.useSearch(), { id: o } = yd.useParams(), s = yd.useNavigate(), { tva: l } = Wt({
                from: "__root__"
            }), u = l().slots;
            return d.jsx("div", {
                className: u.base(),
                children: d.jsx(Ste, {
                    blueprintId: o,
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, s)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of requirements (label)"
                        }),
                        ...fn(s)
                    }
                })
            });
        }
    }), Ite = N9({
        shape: T.object({
            conflictId: T.string().min(1)
        }),
        filter: pr
    }), FO = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(Ite.shape),
            defaultValues: t
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "conflictId",
                    label: d.jsx(B, {
                        label: "Blueprint conflict (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Blueprint conflict (hint)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "conflictId",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(np, {
                                textTitle: d.jsx(B, {
                                    label: "Select blueprint conflict (title)"
                                }),
                                allowEmpty: !0,
                                ...u
                            })
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: Et,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, _te = vn(), Ete = [
        _te({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Conflict building (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsx(Te, {
                    icon: Et,
                    to: "/$locale/apps/derivean/root/blueprint/$id/conflicts",
                    params: {
                        locale: n,
                        id: e.conflictId
                    },
                    children: t
                });
            },
            size: 22
        })
    ], kte = ({ blueprintId: e, table: t, ...n })=>{
        const r = Bt([
            [
                "Blueprint_Conflict"
            ],
            [
                "Blueprint"
            ]
        ]);
        return d.jsx(gn, {
            table: yn({
                ...t,
                columns: Ete
            }),
            action: {
                table () {
                    return d.jsx(zt, {
                        children: d.jsx(gt, {
                            label: d.jsx(B, {
                                label: "Create blueprint conflict (menu)"
                            }),
                            textTitle: d.jsx(B, {
                                label: "Create blueprint conflict (modal)"
                            }),
                            icon: Et,
                            children: ({ close: i })=>d.jsx(FO, {
                                    mutation: Ye({
                                        async mutationFn (o) {
                                            return _t.promise(Pe.transaction().execute(async (s)=>{
                                                const l = s.insertInto("Blueprint_Conflict").values({
                                                    id: xt(),
                                                    ...o,
                                                    blueprintId: e
                                                }).returningAll().executeTakeFirstOrThrow();
                                                return await Sf({
                                                    tx: s
                                                }), l;
                                            }), dr("Create blueprint conflict"));
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit blueprint conflict (modal)"
                                }),
                                icon: Et,
                                children: ({ close: o })=>d.jsx(FO, {
                                        defaultValues: i,
                                        mutation: Ye({
                                            async mutationFn (s) {
                                                return _t.promise(Pe.transaction().execute(async (l)=>l.updateTable("Blueprint_Conflict").set(s).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow()), dr("Update blueprint conflict"));
                                            },
                                            async onSuccess () {
                                                await r(), o();
                                            }
                                        })
                                    })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete blueprint conflict (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>Pe.transaction().execute(async (o)=>o.deleteFrom("Blueprint_Conflict").where("id", "=", i.id).execute()),
                                    textContent: d.jsx(B, {
                                        label: "Delete blueprint conflict (content)"
                                    }),
                                    textToast: "Delete blueprint conflict",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, vd = Le("/$locale/apps/derivean/root/blueprint/$id/conflicts")({
        validateSearch: en(mn(pa)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Conflict",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Conflict as bc").innerJoin("Blueprint as bl", "bl.id", "bc.conflictId").select([
                                "bc.id",
                                "bl.name",
                                "bc.blueprintId",
                                "bc.conflictId"
                            ]).where("bc.blueprintId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                return l?.id && (u = u.where("bc.id", "=", l.id)), l?.idIn && (u = u.where("bc.id", "in", l.idIn)), u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                blueprintId: T.string().min(1),
                                conflictId: T.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = vd.useLoaderData(), { filter: n, cursor: r, selection: i } = vd.useSearch(), { id: o } = vd.useParams(), s = vd.useNavigate(), { tva: l } = Wt({
                from: "__root__"
            }), u = l().slots;
            return d.jsx("div", {
                className: u.base(),
                children: d.jsx(kte, {
                    blueprintId: o,
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, s)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of conflicts (label)"
                        }),
                        ...fn(s)
                    }
                })
            });
        }
    }), Cte = ({ land: e })=>{
        const { mapId: t, locale: n } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsx("div", {
            className: it([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100"
            ]),
            children: d.jsxs("div", {
                className: "flex flex-row items-center justify-between",
                children: [
                    d.jsx(Te, {
                        to: "/$locale/apps/derivean/map/$mapId/land/list",
                        params: {
                            locale: n,
                            mapId: t
                        },
                        search: {
                            zoomToId: e.id
                        },
                        children: e.name
                    }),
                    d.jsx("div", {
                        className: "flex flex-col items-end text-xs",
                        children: d.jsx("div", {
                            className: "flex flex-row gap-1 items-center",
                            children: d.jsx("div", {
                                className: "font-bold",
                                children: mt({
                                    number: e.position
                                })
                            })
                        })
                    })
                ]
            })
        });
    }, jte = lt({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-4",
                "w-4/12",
                "border-l-2",
                "border-slate-200",
                "shadow-xs",
                "relative",
                "max-h-screen"
            ],
            title: [
                "flex",
                "flex-row",
                "justify-between",
                "items-center",
                "px-4",
                "py-4",
                "shadow-md"
            ],
            content: [
                "flex",
                "flex-col",
                "gap-2",
                "max-h-full",
                "overflow-y-auto",
                "px-4",
                "mb-4"
            ]
        },
        variant: {},
        defaults: {}
    }), Kr = ({ icon: e, textTitle: t, textSubTitle: n, variant: r, tva: i = jte, css: o, children: s })=>{
        const { mapId: l, locale: u } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        }), f = i({
            ...r,
            css: o
        }).slots;
        return d.jsxs("div", {
            className: f.base(),
            children: [
                d.jsxs("div", {
                    className: f.title(),
                    children: [
                        d.jsxs("div", {
                            className: "flex flex-col gap-2 font-bold",
                            children: [
                                d.jsxs("div", {
                                    className: "flex flex-row gap-2 items-center",
                                    children: [
                                        d.jsx(st, {
                                            icon: e,
                                            css: {
                                                base: [
                                                    "text-slate-500"
                                                ]
                                            }
                                        }),
                                        t
                                    ]
                                }),
                                n ? d.jsx("div", {
                                    className: "flex flex-row gap-2 items-center text-sm text-slate-500",
                                    children: n
                                }) : null
                            ]
                        }),
                        d.jsx(Te, {
                            to: "/$locale/apps/derivean/map/$mapId/view",
                            params: {
                                locale: u,
                                mapId: l
                            },
                            children: d.jsx(ft, {
                                iconEnabled: qS,
                                variant: {
                                    variant: "subtle"
                                }
                            })
                        })
                    ]
                }),
                d.jsx("div", {
                    className: f.content(),
                    children: s
                })
            ]
        });
    }, bI = "icon-[lucide--land-plot]", Rte = ({ land: e, ...t })=>d.jsx(Kr, {
            icon: bI,
            textTitle: d.jsx(B, {
                label: "Land list (label)"
            }),
            ...t,
            children: e.map((n)=>d.jsx(Cte, {
                    land: n
                }, n.id))
        }), nL = Le("/$locale/apps/derivean/map/$mapId/land/list")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { mapId: n } }) {
            return {
                land: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "land",
                        "list"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (r)=>er({
                                select: r.selectFrom("Land as l").innerJoin("Region as r", "r.id", "l.regionId").select([
                                    "l.id",
                                    "r.name",
                                    "l.mapId",
                                    "l.position"
                                ]).where("l.mapId", "=", n).orderBy("r.name"),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    mapId: T.string().min(1),
                                    position: T.number()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { land: e } = nL.useLoaderData();
            return d.jsx(Rte, {
                land: e
            });
        }
    }), Ote = Le("/$locale/apps/derivean/map/$mapId/land/$landId")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { mapId: n, landId: r } }) {
            return {
                land: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "land",
                        r,
                        "fetch"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (i)=>to({
                                select: i.selectFrom("Land as l").innerJoin("Region as r", "r.id", "l.regionId").select([
                                    "l.id",
                                    "r.name",
                                    "l.mapId"
                                ]).where("l.id", "=", r),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    mapId: T.string().min(1)
                                })
                            }));
                    }
                })
            };
        }
    }), Tte = ({ building: e })=>{
        const { mapId: t, locale: n } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsx("div", {
            className: it([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100"
            ]),
            children: d.jsxs("div", {
                className: "flex flex-row items-center justify-between",
                children: [
                    d.jsx(Te, {
                        icon: ui,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: n,
                            mapId: t,
                            buildingId: e.id
                        },
                        children: e.name
                    }),
                    d.jsx(Te, {
                        icon: bI,
                        to: "/$locale/apps/derivean/map/$mapId/building/list",
                        params: {
                            locale: n,
                            mapId: t
                        },
                        search: {
                            zoomToId: e.landId
                        },
                        children: e.land
                    })
                ]
            })
        });
    }, Pte = ({ building: e, ...t })=>d.jsx(Kr, {
            icon: ui,
            textTitle: d.jsx(B, {
                label: "Building list (label)"
            }),
            ...t,
            children: e.length > 0 ? e.map((n)=>d.jsx(Tte, {
                    building: n
                }, n.id)) : d.jsx("div", {
                className: it([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: d.jsx(B, {
                    label: "No buildings yet. (label)"
                })
            })
        }), rL = Le("/$locale/apps/derivean/map/$mapId/building/list")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { mapId: n } }) {
            return {
                building: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        "list"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (r)=>er({
                                select: r.selectFrom("Building as b").innerJoin("Blueprint as bl", "bl.id", "b.blueprintId").innerJoin("Land as l", "l.id", "b.landId").innerJoin("Region as r", "r.id", "l.regionId").select([
                                    "b.id",
                                    "bl.name",
                                    "b.landId",
                                    "r.name as land"
                                ]).where("l.mapId", "=", n).orderBy("bl.name", "asc"),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    landId: T.string().min(1),
                                    land: T.string().min(1)
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: e } = rL.useLoaderData();
            return d.jsx(Pte, {
                building: e
            });
        }
    }), Ate = Le("/$locale/apps/derivean/map/$mapId/building/$buildingId")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { mapId: n, buildingId: r } }) {
            return {
                building: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "fetch"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (i)=>to({
                                select: i.selectFrom("Building as b").innerJoin("Blueprint as bl", "bl.id", "b.blueprintId").innerJoin("Land as l", "l.id", "b.landId").innerJoin("Region as r", "r.id", "l.regionId").select([
                                    "b.id",
                                    "bl.name",
                                    "b.blueprintId",
                                    "r.name as land",
                                    "b.constructionId",
                                    "b.productionId",
                                    "b.recurringProductionId"
                                ]).where("b.id", "=", r),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    blueprintId: T.string().min(1),
                                    land: T.string().min(1),
                                    constructionId: T.string().nullish(),
                                    productionId: T.string().nullish(),
                                    recurringProductionId: T.string().nullish()
                                })
                            }));
                    }
                })
            };
        }
    }), Fte = Le("/$locale/apps/derivean/map/$mapId/blueprint/$blueprintId")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { blueprintId: n } }) {
            return {
                blueprint: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        "blueprint",
                        n,
                        "fetch"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (r)=>to({
                                select: r.selectFrom("Blueprint as b").select([
                                    "b.id",
                                    "b.name"
                                ]).where("b.id", "=", n),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1)
                                })
                            }));
                    }
                })
            };
        }
    }), Dte = ({ entity: e, ...t })=>{
        const { locale: n } = Ke({
            from: "/$locale"
        });
        return d.jsxs(wl, {
            ...t,
            children: [
                d.jsx(Dt, {
                    icon: vI,
                    to: "/$locale/apps/derivean/game/blueprint/production/$id/requirements",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Production requirements (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: Xt,
                    to: "/$locale/apps/derivean/game/blueprint/production/$id/resources",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Production resource requirements (menu)"
                    })
                }),
                d.jsx(Dt, {
                    icon: Et,
                    to: "/$locale/apps/derivean/game/blueprint/production/$id/dependencies",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: d.jsx(B, {
                        label: "Production resource dependencies (menu)"
                    })
                })
            ]
        });
    }, Mte = (e)=>{
        const { locale: t } = Ke({
            from: "/$locale"
        });
        return d.jsx(cu, {
            title: ({ entity: n })=>d.jsx(uu, {
                    icon: Oi,
                    title: n.resource,
                    subtitle: n.blueprint
                }),
            actions: ({ entity: n })=>d.jsx(d.Fragment, {
                    children: d.jsx(Te, {
                        icon: Et,
                        to: "/$locale/apps/derivean/game/blueprint/$id/production",
                        params: {
                            locale: t,
                            id: n.blueprintId
                        },
                        children: d.jsx(B, {
                            label: "Building base detail (label)"
                        })
                    })
                }),
            ...e
        });
    }, iL = Le("/$locale/apps/derivean/game/blueprint/production/$id")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { id: n } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Production",
                    n
                ],
                async queryFn () {
                    return t.transaction().execute(async (r)=>({
                            entity: await to({
                                select: r.selectFrom("Blueprint_Production as bp").innerJoin("Resource as r", "r.id", "bp.resourceId").innerJoin("Blueprint as bl", "bl.id", "bp.blueprintId").select([
                                    "bp.id",
                                    "bp.amount",
                                    "bp.cycles",
                                    "r.name as resource",
                                    "bp.blueprintId",
                                    "bl.name as blueprint"
                                ]).where("bp.id", "=", n),
                                output: T.object({
                                    id: T.string().min(1),
                                    resource: T.string().min(1),
                                    blueprint: T.string().min(1),
                                    blueprintId: T.string().min(1),
                                    amount: T.number().nonnegative(),
                                    cycles: T.number().int().nonnegative()
                                })
                            })
                        }));
                }
            });
        },
        component () {
            const { entity: e } = iL.useLoaderData(), { tva: t } = Wt({
                from: "__root__"
            }), n = t().slots;
            return d.jsxs("div", {
                className: n.base(),
                children: [
                    d.jsx(Mte, {
                        entity: e
                    }),
                    d.jsx(Dte, {
                        entity: e
                    }),
                    d.jsx(Pi, {})
                ]
            });
        }
    }), Lte = (e)=>d.jsx(HA, {
            items: [
                {
                    id: "name",
                    label: d.jsx(B, {
                        label: "Building name (label)"
                    }),
                    render ({ entity: t }) {
                        return t.name;
                    }
                },
                {
                    id: "cycles",
                    label: d.jsx(B, {
                        label: "Construction cycles (label)"
                    }),
                    render ({ entity: t }) {
                        return mt({
                            number: t.cycles
                        });
                    }
                }
            ],
            ...e
        }), $te = Le("/$locale/apps/derivean/game/blueprint/$id/view")({
        component () {
            const { entity: e } = On({
                from: "/$locale/apps/derivean/game/blueprint/$id"
            });
            return d.jsx("div", {
                className: "w-1/2 mx-auto",
                children: d.jsx(Lte, {
                    entity: e
                })
            });
        }
    }), S0 = vn(), qte = [
        S0({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: e }) {
                return e;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: e, filter: t }) {
                    t.shallow("resourceID", e.resourceId);
                }
            },
            size: 22
        }),
        S0({
            name: "amount",
            header () {
                return d.jsx(B, {
                    label: "Amount (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 10
        }),
        S0({
            name: "passive",
            header () {
                return d.jsx(B, {
                    label: "Passive requirement (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(by, {
                    value: e
                });
            },
            size: 10
        })
    ], Bte = ({ table: e, ...t })=>d.jsx(gn, {
            table: yn({
                ...e,
                columns: qte
            }),
            ...t
        }), _m = Le("/$locale/apps/derivean/game/blueprint/$id/requirements")({
        validateSearch: en(mn(du)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Requirement",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select([
                                "br.id",
                                "r.name",
                                "br.resourceId",
                                "br.amount",
                                "br.passive"
                            ]).where("br.blueprintId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                return l?.id && (u = u.where("br.id", "=", l.id)), l?.idIn && (u = u.where("br.id", "in", l.idIn)), l?.resourceId && (u = u.where("br.resourceId", "=", l.resourceId)), u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                resourceId: T.string().min(1),
                                amount: T.number().nonnegative(),
                                passive: Ai()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = _m.useLoaderData(), { filter: n, cursor: r } = _m.useSearch(), i = _m.useNavigate(), { tva: o } = Wt({
                from: "__root__"
            }), s = o().slots;
            return d.jsx("div", {
                className: s.base(),
                children: d.jsx(Bte, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, i)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of requirements (label)"
                        }),
                        ...fn(i)
                    }
                })
            });
        }
    }), oc = vn(), zte = [
        oc({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Resource name (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsx(Te, {
                    icon: Oi,
                    to: "/$locale/apps/derivean/game/blueprint/production/$id/requirements",
                    params: {
                        locale: n,
                        id: e.id
                    },
                    children: t
                });
            },
            size: 18
        }),
        oc({
            name: "amount",
            header () {
                return d.jsx(B, {
                    label: "Amount (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 8
        }),
        oc({
            name: "cycles",
            header () {
                return d.jsx(B, {
                    label: "Production cycles (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 8
        }),
        oc({
            name: "requirements",
            header () {
                return d.jsx(B, {
                    label: "Required resources (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(qy, {
                    textTitle: d.jsx(B, {
                        label: "Resource requirements (title)"
                    }),
                    textEmpty: d.jsx(B, {
                        label: "No requirements (label)"
                    }),
                    requirements: e
                });
            },
            size: 32
        }),
        oc({
            name: "resources",
            header () {
                return d.jsx(B, {
                    label: "Required production resources (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(ca, {
                    items: e,
                    render: ({ entity: t })=>d.jsxs("div", {
                            className: it([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "bg-sky-100",
                                "border",
                                "rounded-sm",
                                "border-sky-300",
                                "py-1",
                                "px-2"
                            ]),
                            children: [
                                d.jsx("div", {
                                    children: t.name
                                }),
                                d.jsxs("div", {
                                    className: "text-md font-bold text-slate-500",
                                    children: [
                                        "x",
                                        mt({
                                            number: t.amount
                                        })
                                    ]
                                })
                            ]
                        })
                });
            },
            size: 32
        }),
        oc({
            name: "dependencies",
            header () {
                return d.jsx(B, {
                    label: "Required production dependencies (label)"
                });
            },
            render ({ value: e }) {
                const { locale: t } = Ke({
                    from: "/$locale"
                });
                return d.jsx(ca, {
                    items: e,
                    render: ({ entity: n })=>d.jsx("div", {
                            className: it([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "bg-sky-100",
                                "border",
                                "rounded-sm",
                                "border-sky-300",
                                "py-1",
                                "px-2"
                            ]),
                            children: d.jsx(Te, {
                                to: "/$locale/apps/derivean/game/blueprint/$id/requirements",
                                params: {
                                    locale: t,
                                    id: n.blueprintId
                                },
                                children: n.name
                            })
                        })
                });
            },
            size: 32
        })
    ], Wte = ({ table: e, ...t })=>d.jsx(gn, {
            table: yn({
                ...e,
                columns: zte
            }),
            ...t
        }), Em = Le("/$locale/apps/derivean/game/blueprint/$id/production")({
        validateSearch: en(mn(xI)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Production",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Production as bp").innerJoin("Blueprint as bl", "bl.id", "bp.blueprintId").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                "bp.id",
                                "r.name",
                                "bp.amount",
                                "bp.blueprintId",
                                "bp.cycles",
                                "bp.resourceId",
                                (s)=>s.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select((l)=>un`json_group_array(json_object(
                                                'id', ${l.ref("bpr.id")},
                                                'amount', ${l.ref("bpr.amount")},
                                                'passive', ${l.ref("bpr.passive")},
                                                'blueprintProductionId', ${l.ref("bpr.blueprintProductionId")},
                                                'resourceId', ${l.ref("bpr.resourceId")},
                                                'name', ${l.ref("r.name")}
                                            ))`.as("requirements")).whereRef("bpr.blueprintProductionId", "=", "bp.id").as("requirements"),
                                (s)=>s.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select((l)=>un`json_group_array(json_object(
                                                'id', ${l.ref("bpr.id")},
                                                'amount', ${l.ref("bpr.amount")},
                                                'blueprintProductionId', ${l.ref("bpr.blueprintProductionId")},
                                                'resourceId', ${l.ref("bpr.resourceId")},
                                                'name', ${l.ref("r.name")}
                                            ))`.as("requirements")).whereRef("bpr.blueprintProductionId", "=", "bp.id").as("resources"),
                                (s)=>s.selectFrom("Blueprint_Production_Dependency as bpd").innerJoin("Blueprint as bl2", "bl2.id", "bpd.blueprintId").select((l)=>un`json_group_array(json_object(
                                                'id', ${l.ref("bpd.id")},
                                                'blueprintProductionId', ${l.ref("bpd.blueprintProductionId")},
                                                'blueprintId', ${l.ref("bpd.blueprintId")},
                                                'name', ${l.ref("bl2.name")}
                                            ))`.as("requirements")).whereRef("bpd.blueprintProductionId", "=", "bp.id").as("dependencies")
                            ]).where("bp.blueprintId", "=", i).orderBy("r.name", "asc"),
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                blueprintId: T.string().min(1),
                                resourceId: T.string().min(1),
                                amount: T.number().nonnegative(),
                                cycles: T.number().nonnegative(),
                                requirements: Yn(ip.entity.merge(T.object({
                                    name: T.string().min(1)
                                }))),
                                resources: Yn(op.entity.merge(T.object({
                                    name: T.string().min(1)
                                }))),
                                dependencies: Yn(rp.entity.merge(T.object({
                                    name: T.string().min(1)
                                })))
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = Em.useLoaderData(), { filter: n, cursor: r } = Em.useSearch(), i = Em.useNavigate(), { tva: o } = Wt({
                from: "__root__"
            }), s = o().slots;
            return d.jsx("div", {
                className: s.base(),
                children: d.jsx(Wte, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, i)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of productions (label)"
                        }),
                        ...fn(i)
                    }
                })
            });
        }
    }), Vte = vn(), Ute = [
        Vte({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Required building (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsx(Te, {
                    icon: Et,
                    to: "/$locale/apps/derivean/game/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: e.dependencyId
                    },
                    children: t
                });
            },
            size: 22
        })
    ], Hte = ({ table: e, ...t })=>d.jsx(gn, {
            table: yn({
                ...e,
                columns: Ute
            }),
            ...t
        }), km = Le("/$locale/apps/derivean/game/blueprint/$id/dependencies")({
        validateSearch: en(mn(pa)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Dependency",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as bl", "bl.id", "bd.dependencyId").select([
                                "bd.id",
                                "bl.name",
                                "bd.blueprintId",
                                "bd.dependencyId"
                            ]).where("bd.blueprintId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                return l?.id && (u = u.where("bd.id", "=", l.id)), l?.idIn && (u = u.where("bd.id", "in", l.idIn)), l?.blueprintId && (u = u.where("bd.blueprintId", "=", l.blueprintId)), l?.dependencyId && (u = u.where("bd.dependencyId", "=", l.dependencyId)), u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                blueprintId: T.string().min(1),
                                dependencyId: T.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = km.useLoaderData(), { filter: n, cursor: r } = km.useSearch(), i = km.useNavigate(), { tva: o } = Wt({
                from: "__root__"
            }), s = o().slots;
            return d.jsx("div", {
                className: s.base(),
                children: d.jsx(Hte, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, i)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of dependencies (label)"
                        }),
                        ...fn(i)
                    }
                })
            });
        }
    }), Kte = vn(), Gte = [
        Kte({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Conflict building (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsx(Te, {
                    icon: Et,
                    to: "/$locale/apps/derivean/game/blueprint/$id/conflicts",
                    params: {
                        locale: n,
                        id: e.conflictId
                    },
                    children: t
                });
            },
            size: 22
        })
    ], Qte = ({ table: e, ...t })=>d.jsx(gn, {
            table: yn({
                ...e,
                columns: Gte
            }),
            ...t
        }), Cm = Le("/$locale/apps/derivean/game/blueprint/$id/conflicts")({
        validateSearch: en(mn(pa)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Conflict",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Conflict as bc").innerJoin("Blueprint as bl", "bl.id", "bc.conflictId").select([
                                "bc.id",
                                "bl.name",
                                "bc.blueprintId",
                                "bc.conflictId"
                            ]).where("bc.blueprintId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                return l?.id && (u = u.where("bc.id", "=", l.id)), l?.idIn && (u = u.where("bc.id", "in", l.idIn)), u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                blueprintId: T.string().min(1),
                                conflictId: T.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = Cm.useLoaderData(), { filter: n, cursor: r } = Cm.useSearch(), i = Cm.useNavigate(), { tva: o } = Wt({
                from: "__root__"
            }), s = o().slots;
            return d.jsx("div", {
                className: s.base(),
                children: d.jsx(Qte, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, i)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of conflicts (label)"
                        }),
                        ...fn(i)
                    }
                })
            });
        }
    }), oL = R9({
        shape: T.object({
            blueprintId: T.string().min(1),
            constructionId: T.string().optional(),
            productionId: T.string().optional(),
            recurringProductionId: T.string().optional(),
            x: ts(),
            y: ts()
        }),
        filter: pr.merge(T.object({
            userId: T.string().optional(),
            blueprintId: T.string().optional(),
            name: T.string().optional()
        }))
    }), Jte = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(oL.shape),
            defaultValues: t
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "blueprintId",
                    label: d.jsx(B, {
                        label: "Select blueprint (label)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "blueprintId",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(np, {
                                allowEmpty: !0,
                                ...u
                            })
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: ui,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, Zte = vn(), Yte = [
        Zte({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Building name (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsxs("div", {
                    className: "flex flex-row gap-2",
                    children: [
                        d.jsx(Te, {
                            icon: Et,
                            to: "/$locale/apps/derivean/root/blueprint/$id/view",
                            params: {
                                locale: n,
                                id: e.blueprintId
                            }
                        }),
                        t
                    ]
                });
            },
            size: 14
        })
    ], Xte = ({ table: e, ...t })=>{
        const n = Bt([
            [
                "Building"
            ]
        ]);
        return d.jsx(gn, {
            table: yn({
                ...e,
                columns: Yte
            }),
            action: {
                row ({ data: r }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit building (modal)"
                                }),
                                icon: ui,
                                children: d.jsx(Jte, {
                                    defaultValues: r,
                                    mutation: Ye({
                                        async mutationFn (i) {
                                            return _t.promise(Pe.transaction().execute((o)=>o.updateTable("Building").set(i).where("id", "=", r.id).returningAll().executeTakeFirstOrThrow()), dr("Edit building"));
                                        },
                                        async onSuccess () {
                                            await n();
                                        }
                                    })
                                })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete building (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>Pe.transaction().execute(async (i)=>i.deleteFrom("Building").where("id", "=", r.id).execute()),
                                    textContent: d.jsx(B, {
                                        label: "Building delete (content)"
                                    }),
                                    textToast: "Building delete",
                                    invalidator: n
                                })
                            })
                        ]
                    });
                }
            },
            ...t
        });
    }, jm = Le("/$locale/apps/derivean/root/user/$id/building/list")({
        validateSearch: en(mn(oL)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Building",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute((o)=>Vt({
                            select: o.selectFrom("Building as b").innerJoin("Blueprint as bl", "bl.id", "b.blueprintId").select([
                                "b.id",
                                "bl.name",
                                "b.blueprintId"
                            ]).where("b.userId", "=", i),
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                blueprintId: T.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = jm.useLoaderData(), { filter: n, cursor: r, selection: i } = jm.useSearch(), o = jm.useNavigate(), { tva: s } = Wt({
                from: "__root__"
            }), l = s().slots;
            return d.jsx("div", {
                className: l.base(),
                children: d.jsx(Xte, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, o)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of buildings (label)"
                        }),
                        ...fn(o)
                    }
                })
            });
        }
    }), DO = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(op.shape),
            defaultValues: {
                amount: 1,
                ...t
            }
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "resourceId",
                    label: d.jsx(B, {
                        label: "Requirement (label)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "resourceId",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(tp, {
                                allowEmpty: !0,
                                ...u
                            })
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "amount",
                    label: d.jsx(B, {
                        label: "Amount (label)"
                    }),
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        ...o.register("amount")
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: Xt,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, MO = vn(), ene = [
        MO({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: e }) {
                return e;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: e, filter: t }) {
                    t.shallow("resourceID", e.resourceId);
                }
            },
            size: 22
        }),
        MO({
            name: "amount",
            header () {
                return d.jsx(B, {
                    label: "Amount (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 10
        })
    ], tne = ({ blueprintProductionId: e, table: t, ...n })=>{
        const r = Bt([
            [
                "Blueprint_Production_Resource"
            ],
            [
                "Blueprint_Production"
            ],
            [
                "Resource"
            ]
        ]);
        return d.jsx(gn, {
            table: yn({
                ...t,
                columns: ene
            }),
            action: {
                table () {
                    return d.jsx(zt, {
                        children: d.jsx(gt, {
                            label: d.jsx(B, {
                                label: "Create production resource requirement (menu)"
                            }),
                            textTitle: d.jsx(B, {
                                label: "Create production resource requirement (modal)"
                            }),
                            icon: Xt,
                            children: ({ close: i })=>d.jsx(DO, {
                                    mutation: Ye({
                                        async mutationFn (o) {
                                            return Pe.transaction().execute(async (s)=>s.insertInto("Blueprint_Production_Resource").values({
                                                    id: xt(),
                                                    ...o,
                                                    blueprintProductionId: e
                                                }).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit production resource requirement (modal)"
                                }),
                                icon: Xt,
                                children: ({ close: o })=>d.jsx(DO, {
                                        defaultValues: i,
                                        mutation: Ye({
                                            async mutationFn (s) {
                                                return Pe.transaction().execute(async (l)=>l.updateTable("Blueprint_Production_Resource").set(s).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow());
                                            },
                                            async onSuccess () {
                                                await r(), o();
                                            }
                                        })
                                    })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete production resource requirement (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>Pe.transaction().execute(async (o)=>o.deleteFrom("Blueprint_Production_Resource").where("id", "=", i.id).execute()),
                                    textContent: d.jsx(B, {
                                        label: "Delete production resource requirement (content)"
                                    }),
                                    textToast: "Delete production resource requirement item",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, xd = Le("/$locale/apps/derivean/root/blueprint/production/$id/resources")({
        validateSearch: en(mn(op)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Resource",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                "bpr.id",
                                "r.name",
                                "bpr.resourceId",
                                "bpr.amount"
                            ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                return l?.id && (u = u.where("bpr.id", "=", l.id)), l?.idIn && (u = u.where("bpr.id", "in", l.idIn)), l?.resourceId && (u = u.where("bpr.resourceId", "=", l.resourceId)), u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                resourceId: T.string().min(1),
                                amount: T.number().nonnegative()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = xd.useLoaderData(), { filter: n, cursor: r, selection: i } = xd.useSearch(), { id: o } = xd.useParams(), s = xd.useNavigate();
            return d.jsx(d.Fragment, {
                children: d.jsx(tne, {
                    blueprintProductionId: o,
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, s)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of production resource requirements (label)"
                        }),
                        ...fn(s)
                    }
                })
            });
        }
    }), LO = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(ip.shape),
            defaultValues: {
                amount: 1,
                passive: !1,
                ...t
            }
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "resourceId",
                    label: d.jsx(B, {
                        label: "Requirement (label)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "resourceId",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(tp, {
                                allowEmpty: !0,
                                ...u
                            })
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "amount",
                    label: d.jsx(B, {
                        label: "Amount (label)"
                    }),
                    children: d.jsx("input", {
                        type: "number",
                        className: s.input(),
                        ...o.register("amount")
                    })
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "passive",
                    label: d.jsx(B, {
                        label: "Passive requirement (label)"
                    }),
                    hint: d.jsx(B, {
                        label: "Passive requirement (hint)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "passive",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(UA, {
                                ...u
                            })
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: Xt,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, I0 = vn(), nne = [
        I0({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: e }) {
                return e;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: e, filter: t }) {
                    t.shallow("resourceID", e.resourceId);
                }
            },
            size: 12
        }),
        I0({
            name: "amount",
            header () {
                return d.jsx(B, {
                    label: "Amount (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 10
        }),
        I0({
            name: "passive",
            header () {
                return d.jsx(B, {
                    label: "Passive requirement (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(by, {
                    value: e
                });
            },
            size: 10
        })
    ], rne = ({ blueprintProductionId: e, table: t, ...n })=>{
        const r = Bt([
            [
                "Blueprint_Production_Requirement"
            ],
            [
                "Blueprint_Production"
            ],
            [
                "Resource"
            ]
        ]);
        return d.jsx(gn, {
            table: yn({
                ...t,
                columns: nne
            }),
            action: {
                table () {
                    return d.jsx(zt, {
                        children: d.jsx(gt, {
                            label: d.jsx(B, {
                                label: "Create production requirement (menu)"
                            }),
                            textTitle: d.jsx(B, {
                                label: "Create production requirement (modal)"
                            }),
                            icon: Xt,
                            children: ({ close: i })=>d.jsx(LO, {
                                    mutation: Ye({
                                        async mutationFn (o) {
                                            return Pe.transaction().execute(async (s)=>s.insertInto("Blueprint_Production_Requirement").values({
                                                    id: xt(),
                                                    ...o,
                                                    blueprintProductionId: e
                                                }).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit production requirement (modal)"
                                }),
                                icon: Xt,
                                children: ({ close: o })=>d.jsx(LO, {
                                        defaultValues: i,
                                        mutation: Ye({
                                            async mutationFn (s) {
                                                return Pe.transaction().execute(async (l)=>l.updateTable("Blueprint_Production_Requirement").set(s).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow());
                                            },
                                            async onSuccess () {
                                                await r(), o();
                                            }
                                        })
                                    })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete production requirement (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>Pe.transaction().execute(async (o)=>o.deleteFrom("Blueprint_Production_Requirement").where("id", "=", i.id).execute()),
                                    textContent: d.jsx(B, {
                                        label: "Delete production requirement (content)"
                                    }),
                                    textToast: "Delete production requirement item",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, bd = Le("/$locale/apps/derivean/root/blueprint/production/$id/requirements")({
        validateSearch: en(mn(ip)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Requirement",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                "bpr.id",
                                "r.name",
                                "bpr.resourceId",
                                "bpr.amount",
                                "bpr.passive"
                            ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                return l?.id && (u = u.where("bpr.id", "=", l.id)), l?.idIn && (u = u.where("bpr.id", "in", l.idIn)), l?.resourceId && (u = u.where("bpr.resourceId", "=", l.resourceId)), u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                resourceId: T.string().min(1),
                                amount: T.number().nonnegative(),
                                passive: Ai()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = bd.useLoaderData(), { filter: n, cursor: r, selection: i } = bd.useSearch(), { id: o } = bd.useParams(), s = bd.useNavigate();
            return d.jsx(d.Fragment, {
                children: d.jsx(rne, {
                    blueprintProductionId: o,
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, s)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of production requirements (label)"
                        }),
                        ...fn(s)
                    }
                })
            });
        }
    }), $O = ({ mutation: e, defaultValues: t, variant: n, tva: r = zn, css: i })=>{
        const o = Wn({
            resolver: Vn(rp.shape),
            defaultValues: t
        }), s = r({
            ...n,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: i
        }).slots;
        return d.jsxs("form", {
            className: s.base(),
            onSubmit: mr({
                form: o,
                mutation: e
            }),
            children: [
                d.jsx(Dn, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                d.jsx(ot, {
                    formState: o.formState,
                    name: "blueprintId",
                    label: d.jsx(B, {
                        label: "Blueprint dependency (label)"
                    }),
                    children: d.jsx(Ir, {
                        control: o.control,
                        name: "blueprintId",
                        render: ({ field: { ref: l, ...u } })=>d.jsx(np, {
                                textTitle: d.jsx(B, {
                                    label: "Select blueprint (title)"
                                }),
                                allowEmpty: !0,
                                ...u
                            })
                    })
                }),
                d.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: d.jsx(ft, {
                        iconEnabled: Et,
                        type: "submit",
                        children: d.jsx(B, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, ine = vn(), one = [
        ine({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Required building (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsx(Te, {
                    icon: Et,
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: e.blueprintId
                    },
                    children: t
                });
            },
            size: 22
        })
    ], sne = ({ blueprintProductionId: e, table: t, ...n })=>{
        const r = Bt([
            [
                "Blueprint_Production_Dependency"
            ],
            [
                "Blueprint"
            ]
        ]);
        return d.jsx(gn, {
            table: yn({
                ...t,
                columns: one
            }),
            action: {
                table () {
                    return d.jsx(zt, {
                        children: d.jsx(gt, {
                            label: d.jsx(B, {
                                label: "Create blueprint production dependency (menu)"
                            }),
                            textTitle: d.jsx(B, {
                                label: "Create blueprint production dependency (modal)"
                            }),
                            icon: Et,
                            children: ({ close: i })=>d.jsx($O, {
                                    mutation: Ye({
                                        async mutationFn (o) {
                                            return _t.promise(Pe.transaction().execute(async (s)=>{
                                                const l = s.insertInto("Blueprint_Production_Dependency").values({
                                                    id: xt(),
                                                    ...o,
                                                    blueprintProductionId: e
                                                }).returningAll().executeTakeFirstOrThrow();
                                                return await Sf({
                                                    tx: s
                                                }), l;
                                            }), dr("Create blueprint production dependency"));
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return d.jsxs(zt, {
                        children: [
                            d.jsx(gt, {
                                label: d.jsx(B, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Edit blueprint production dependency (modal)"
                                }),
                                icon: Et,
                                children: ({ close: o })=>d.jsx($O, {
                                        defaultValues: i,
                                        mutation: Ye({
                                            async mutationFn (s) {
                                                return _t.promise(Pe.transaction().execute(async (l)=>l.updateTable("Blueprint_Production_Dependency").set(s).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow()), dr("Update blueprint production dependency"));
                                            },
                                            async onSuccess () {
                                                await r(), o();
                                            }
                                        })
                                    })
                            }),
                            d.jsx(gt, {
                                icon: _n,
                                label: d.jsx(B, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: d.jsx(B, {
                                    label: "Delete blueprint production dependency (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: d.jsx(Hr, {
                                    callback: async ()=>Pe.transaction().execute(async (o)=>o.deleteFrom("Blueprint_Production_Dependency").where("id", "=", i.id).execute()),
                                    textContent: d.jsx(B, {
                                        label: "Delete blueprint production dependency (content)"
                                    }),
                                    textToast: "Delete blueprint production dependency",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, wd = Le("/$locale/apps/derivean/root/blueprint/production/$id/dependencies")({
        validateSearch: en(mn(rp)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Dependency",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Production_Dependency as bpd").innerJoin("Blueprint as bl", "bl.id", "bpd.blueprintId").select([
                                "bpd.id",
                                "bl.name",
                                "bpd.blueprintId"
                            ]).where("bpd.blueprintProductionId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                return l?.id && (u = u.where("bpd.id", "=", l.id)), l?.idIn && (u = u.where("bpd.id", "in", l.idIn)), u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                blueprintId: T.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = wd.useLoaderData(), { filter: n, cursor: r, selection: i } = wd.useSearch(), { id: o } = wd.useParams(), s = wd.useNavigate(), { tva: l } = Wt({
                from: "__root__"
            }), u = l().slots;
            return d.jsx("div", {
                className: u.base(),
                children: d.jsx(sne, {
                    blueprintProductionId: o,
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ur(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, s)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of dependencies (label)"
                        }),
                        ...fn(s)
                    }
                })
            });
        }
    }), ane = Le("/$locale/apps/derivean/map/$mapId/road/$roadId/view")({
        component () {
            return "mrdka";
        }
    }), lne = lt({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "bg-white",
                "border",
                "border-slate-300",
                "p-2",
                "hover:bg-slate-100",
                "cursor-draggable"
            ]
        },
        variant: {
            isDragging: {
                true: []
            }
        },
        match: [
            {
                if: {
                    isDragging: !0
                },
                then: {
                    base: [
                        "cursor-grabbing",
                        "bg-slate-100"
                    ]
                }
            }
        ],
        defaults: {
            isDragging: !1
        }
    }), zN = "icon-[emojione-monotone--construction]", cne = async ({ userId: e, blueprintId: t, landId: n, plotId: r, plan: i, valid: o })=>Pe.transaction().execute(async (s)=>{
            const l = await s.selectFrom("Blueprint as b").select([
                "b.cycles"
            ]).where("b.id", "=", t).executeTakeFirstOrThrow(), u = await s.insertInto("Building").values({
                id: xt(),
                userId: e,
                blueprintId: t,
                landId: n,
                constructionId: (await s.insertInto("Construction").values({
                    id: xt(),
                    userId: e,
                    cycle: 0,
                    cycles: l.cycles,
                    plan: i
                }).returning("id").executeTakeFirstOrThrow()).id,
                plotId: r,
                valid: o
            }).returningAll().executeTakeFirstOrThrow(), f = await s.selectFrom("Inventory as i").select([
                "i.amount",
                "i.limit",
                "i.resourceId",
                "i.type"
            ]).where("i.id", "in", s.selectFrom("Blueprint_Inventory as bi").select("bi.inventoryId").where("bi.blueprintId", "=", t)).execute();
            for await (const { amount: p, limit: m, resourceId: g, type: v } of f)await s.insertInto("Building_Inventory").values({
                id: xt(),
                buildingId: u.id,
                inventoryId: (await s.insertInto("Inventory").values({
                    id: xt(),
                    amount: p,
                    limit: m,
                    resourceId: g,
                    type: v
                }).returning("id").executeTakeFirstOrThrow()).id
            }).execute();
            return u;
        }), wI = $.memo(({ cycles: e })=>d.jsxs("div", {
            className: it([
                "flex",
                "flex-row",
                "items-center",
                "gap-2"
            ]),
            children: [
                d.jsx(st, {
                    css: {
                        base: [
                            "text-slate-400"
                        ]
                    },
                    icon: yI
                }),
                d.jsx("div", {
                    className: "font-bold text-md",
                    children: mt({
                        number: e
                    })
                })
            ]
        })), une = ({ blueprint: e, land: t, userId: n, variant: r, tva: i = lne, css: o })=>{
        const { mapId: s, locale: l } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        }), u = gl(), f = Bt([
            [
                "GameMap"
            ]
        ]), p = Ye({
            async mutationFn ({ blueprintId: g, landId: v, plotId: x }) {
                const b = await cne({
                    userId: n,
                    blueprintId: g,
                    landId: v,
                    plotId: x,
                    plan: !0,
                    valid: !1
                });
                u({
                    to: "/$locale/apps/derivean/map/$mapId/land/$landId/construction",
                    params: {
                        locale: l,
                        mapId: s,
                        landId: t.id
                    },
                    search: {
                        zoomToId: b.id
                    }
                });
            },
            async onSuccess () {
                await f();
            },
            onError (g) {
                console.error(g);
            }
        }), m = i({
            ...r,
            css: o
        }).slots;
        return d.jsx("div", {
            className: m.base(),
            children: d.jsxs("div", {
                className: "flex flex-row gap-2 items-center justify-between",
                children: [
                    d.jsxs("div", {
                        className: "flex flex-row gap-2",
                        children: [
                            d.jsxs(cr, {
                                children: [
                                    "x",
                                    e.count
                                ]
                            }),
                            d.jsx(Te, {
                                to: "/$locale/apps/derivean/map/$mapId/blueprint/$blueprintId/requirements",
                                params: {
                                    locale: l,
                                    mapId: s,
                                    blueprintId: e.id
                                },
                                css: {
                                    base: [
                                        "font-bold"
                                    ]
                                },
                                children: e.name
                            })
                        ]
                    }),
                    d.jsxs("div", {
                        className: "flex flex-row gap-2",
                        children: [
                            d.jsx(wI, {
                                cycles: e.cycles
                            }),
                            d.jsx(ft, {
                                iconEnabled: zN,
                                iconDisabled: zN,
                                loading: p.isPending,
                                onClick: ()=>{
                                    p.mutate({
                                        blueprintId: e.id,
                                        landId: t.id,
                                        plotId: "unknown`"
                                    });
                                }
                            })
                        ]
                    })
                ]
            })
        });
    }, dne = ({ userId: e, land: t, blueprints: n, ...r })=>{
        const { locale: i, mapId: o } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsx(Kr, {
            icon: zN,
            textTitle: d.jsx(Te, {
                to: "/$locale/apps/derivean/map/$mapId/land/$landId/construction",
                params: {
                    locale: i,
                    mapId: o,
                    landId: t.id
                },
                search: {
                    zoomToId: t.id
                },
                children: t.name
            }),
            textSubTitle: d.jsx(B, {
                label: "Construction (label)"
            }),
            ...r,
            children: n.length > 0 ? n.map((s)=>d.jsx(une, {
                    blueprint: s,
                    userId: e,
                    land: t
                }, s.id)) : d.jsx("div", {
                className: it([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: d.jsx(B, {
                    label: "There are no available blueprints (label)"
                })
            })
        });
    }, sL = Le("/$locale/apps/derivean/map/$mapId/land/$landId/construction")({
        async loader ({ context: { queryClient: e, kysely: t, session: n }, params: { mapId: r, landId: i } }) {
            const o = await n();
            return {
                user: o,
                blueprints: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        r,
                        "land",
                        i,
                        "construction",
                        "list"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (s)=>er({
                                select: s.selectFrom(s.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.name",
                                    "bl.sort",
                                    "bl.cycles",
                                    (l)=>l.selectFrom("Building as bg").select((u)=>u.fn.count("bg.id").as("count")).whereRef("bg.blueprintId", "=", "bl.id").where("bg.userId", "=", o.id).where("bg.landId", "is", i).as("count"),
                                    (l)=>l.case().when(l.not(l.exists(l.selectFrom("Blueprint_Dependency as bd").select(l.lit(1).as("one")).whereRef("bd.blueprintId", "=", "bl.id").where((u)=>u.not(u.exists(u.selectFrom("Building as b").innerJoin("Land as l", "l.id", "b.landId").select(u.lit(1).as("one")).where("b.constructionId", "is", null).where("b.userId", "=", o.id).where("l.mapId", "=", r).whereRef("b.blueprintId", "=", "bd.dependencyId"))))))).then(l.lit(!0)).else(l.lit(!1)).end().as("withAvailableBuildings")
                                ]).where("bl.id", "not in", s.selectFrom("Blueprint_Conflict as bc").select("bc.conflictId").where("bc.blueprintId", "in", s.selectFrom("Building as bg").innerJoin("Land as l", "l.id", "bg.landId").select("bg.blueprintId").where("bg.userId", "=", o.id).where("l.mapId", "=", r))).where("bl.id", "in", s.selectFrom("Blueprint_Region as br").innerJoin("Land as l", "l.regionId", "br.regionId").select("br.blueprintId").where("l.id", "=", i)).as("blueprint")).selectAll().where("withAvailableBuildings", "=", !0).orderBy("blueprint.sort", "asc"),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    count: T.number().int().nonnegative(),
                                    cycles: T.number().int().nonnegative(),
                                    sort: T.number().int().nonnegative(),
                                    withAvailableBuildings: Ai()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { user: e, blueprints: t } = sL.useLoaderData(), { land: n } = On({
                from: "/$locale/apps/derivean/map/$mapId/land/$landId"
            });
            return d.jsx(dne, {
                userId: e.id,
                land: n,
                blueprints: t
            });
        }
    }), Da = [
        "p-4",
        "border",
        "border-slate-300",
        "w-full",
        "justify-start"
    ], rl = "icon-[hugeicons--package-receive]", WN = "icon-[heroicons--queue-list]", Vg = "icon-[hugeicons--package-sent]", aL = "icon-[icon-park-outline--transport]", fne = ({ building: e })=>{
        const { mapId: t, locale: n } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsxs(Kr, {
            icon: ui,
            textTitle: d.jsx(Te, {
                to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                params: {
                    locale: n,
                    mapId: t,
                    buildingId: e.id
                },
                search: {
                    zoomToId: e.id
                },
                children: e.name
            }),
            textSubTitle: e.land,
            children: [
                d.jsx(Te, {
                    icon: Oi,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                    params: {
                        locale: n,
                        mapId: t,
                        buildingId: e.id
                    },
                    css: {
                        base: Da
                    },
                    children: d.jsx(B, {
                        label: "Building production (label)"
                    })
                }),
                d.jsx(Te, {
                    icon: WN,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/queue",
                    params: {
                        locale: n,
                        mapId: t,
                        buildingId: e.id
                    },
                    css: {
                        base: Da
                    },
                    children: d.jsx(B, {
                        label: "Production queue (label)"
                    })
                }),
                d.jsx(Te, {
                    icon: Ys,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/inventory",
                    params: {
                        locale: n,
                        mapId: t,
                        buildingId: e.id
                    },
                    css: {
                        base: Da
                    },
                    children: d.jsx(B, {
                        label: "Building inventory (label)"
                    })
                }),
                d.jsx(Te, {
                    icon: Vg,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/supply",
                    params: {
                        locale: n,
                        mapId: t,
                        buildingId: e.id
                    },
                    css: {
                        base: Da
                    },
                    children: d.jsx(B, {
                        label: "Supply list (label)"
                    })
                }),
                d.jsx(Te, {
                    icon: rl,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/demand",
                    params: {
                        locale: n,
                        mapId: t,
                        buildingId: e.id
                    },
                    css: {
                        base: Da
                    },
                    children: d.jsx(B, {
                        label: "Demand list (label)"
                    })
                }),
                d.jsx(Te, {
                    icon: aL,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/transport",
                    params: {
                        locale: n,
                        mapId: t,
                        buildingId: e.id
                    },
                    css: {
                        base: Da
                    },
                    children: d.jsx(B, {
                        label: "Transport list (label)"
                    })
                }),
                d.jsx(Te, {
                    icon: ui,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/link",
                    params: {
                        locale: n,
                        mapId: t,
                        buildingId: e.id
                    },
                    css: {
                        base: Da
                    },
                    children: d.jsx(B, {
                        label: "Building links (label)"
                    })
                }),
                d.jsx("div", {
                    className: "border-b border-slate-300"
                }),
                d.jsx("div", {
                    className: it([
                        "w-full",
                        "h-96",
                        "bg-contain",
                        "p-2",
                        `bg-${e.blueprintId}`
                    ])
                })
            ]
        });
    }, NI = "icon-[hugeicons--package]", pne = ({ mapId: e, userId: t, requirement: n })=>{
        const r = Bt([
            [
                "GameMap"
            ]
        ]), i = n.available || 0, o = Ye({
            async mutationFn ({ demandId: l }) {
                return Pe.transaction().execute(async (u)=>{
                    const { priority: f } = await u.selectFrom("Demand as d").select((p)=>p.fn.max("d.priority").as("priority")).where("d.mapId", "=", e).where("d.userId", "=", t).where("d.id", "!=", l).executeTakeFirstOrThrow();
                    return u.updateTable("Demand").set({
                        priority: f + 1
                    }).where("id", "=", l).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        }), s = Ye({
            async mutationFn ({ demandId: l }) {
                return Pe.transaction().execute(async (u)=>{
                    const { priority: f } = await u.selectFrom("Demand as d").select((p)=>p.fn.min("d.priority").as("priority")).where("d.mapId", "=", e).where("d.userId", "=", t).where("d.id", "!=", l).executeTakeFirstOrThrow();
                    return u.updateTable("Demand").set({
                        priority: f - 1
                    }).where("id", "=", l).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        });
        return d.jsxs("div", {
            className: it([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100",
                n.supply ? [
                    "bg-purple-50",
                    "border-purple-400",
                    "hover:bg-purple-50",
                    "hover:border-purple-400"
                ] : [
                    "bg-red-50",
                    "border-red-400",
                    "hover:bg-red-50",
                    "hover:border-red-400"
                ],
                n.transport || i >= n.amount ? [
                    "bg-green-50",
                    "border-green-400",
                    "hover:bg-green-50",
                    "hover:border-green-400"
                ] : void 0
            ]),
            children: [
                d.jsxs("div", {
                    className: "flex flex-row items-center justify-between",
                    children: [
                        d.jsxs("div", {
                            className: it([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                n.supply ? [
                                    "text-purple-600"
                                ] : [
                                    "text-red-600"
                                ],
                                n.transport || i >= n.amount ? [
                                    "text-green-600"
                                ] : void 0
                            ]),
                            children: [
                                n.supply || i >= n.amount ? d.jsx(st, {
                                    icon: rl
                                }) : d.jsx(st, {
                                    icon: NI
                                }),
                                d.jsx("div", {
                                    className: "font-bold",
                                    children: n.name
                                })
                            ]
                        }),
                        d.jsxs("div", {
                            className: "flex flex-row gap-1 items-center",
                            children: [
                                d.jsx("div", {
                                    children: mt({
                                        number: i
                                    })
                                }),
                                d.jsx("div", {
                                    children: "/"
                                }),
                                d.jsx("div", {
                                    className: "font-bold",
                                    children: mt({
                                        number: n.amount
                                    })
                                })
                            ]
                        })
                    ]
                }),
                d.jsx(Iy, {
                    value: 100 * i / n.amount,
                    css: {
                        progress: i >= n.amount ? [
                            "bg-green-500"
                        ] : void 0
                    }
                }),
                n.demand ? d.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between w-full",
                    children: [
                        d.jsx(ft, {
                            iconEnabled: eF,
                            variant: {
                                variant: "subtle"
                            },
                            loading: o.isPending || s.isPending,
                            onClick: ()=>{
                                n.demand && o.mutate({
                                    demandId: n.demand.id
                                });
                            },
                            children: d.jsx(B, {
                                label: "Priority up (label)"
                            })
                        }),
                        d.jsx(cr, {
                            css: {
                                base: [
                                    "bg-purple-50",
                                    "border-purple-400",
                                    "text-purple-600"
                                ]
                            },
                            children: n.demand.priority
                        }),
                        d.jsx(ft, {
                            iconEnabled: XA,
                            variant: {
                                variant: "subtle"
                            },
                            loading: o.isPending || s.isPending,
                            onClick: ()=>{
                                n.demand && s.mutate({
                                    demandId: n.demand.id
                                });
                            },
                            children: d.jsx(B, {
                                label: "Priority down (label)"
                            })
                        })
                    ]
                }) : null
            ]
        });
    }, hne = ({ userId: e, building: t, requirement: n, ...r })=>{
        const { locale: i, mapId: o } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsx(Kr, {
            icon: vI,
            textTitle: d.jsx(B, {
                label: "Construction requirements (label)"
            }),
            textSubTitle: d.jsx(Te, {
                to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                params: {
                    locale: i,
                    mapId: o,
                    buildingId: t.id
                },
                search: {
                    zoomToId: t.id
                },
                children: t.name
            }),
            ...r,
            children: n.length > 0 ? n.map((s)=>d.jsx(pne, {
                    mapId: o,
                    userId: e,
                    requirement: s
                }, s.id)) : d.jsx("div", {
                className: it([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-green-400",
                    "p-4",
                    "bg-green-200",
                    "font-bold"
                ]),
                children: d.jsx(B, {
                    label: "There are no construction requirements (label)"
                })
            })
        });
    }, lL = Le("/$locale/apps/derivean/map/$mapId/building/$buildingId/view")({
        async loader ({ context: { queryClient: e, kysely: t, session: n }, params: { mapId: r, buildingId: i } }) {
            return {
                user: await n(),
                requirement: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        r,
                        "building",
                        i,
                        "construction",
                        "requirement"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (s)=>er({
                                select: s.selectFrom("Blueprint_Requirement as br").innerJoin("Building as bg", (l)=>l.onRef("bg.blueprintId", "=", "br.blueprintId").on("bg.id", "=", i)).innerJoin("Resource as r", "r.id", "br.resourceId").select([
                                    "br.id",
                                    "r.name",
                                    "br.amount",
                                    "br.passive",
                                    (l)=>l.selectFrom("Transport as t").select((u)=>u.fn.count("t.id").as("transport")).whereRef("t.targetId", "=", "bg.id").whereRef("t.resourceId", "=", "br.resourceId").as("transport"),
                                    (l)=>l.selectFrom("Supply as s").innerJoin("Building as b", "b.id", "s.buildingId").innerJoin("Blueprint as bp", "bp.id", "b.blueprintId").select((u)=>Gs.jsonObject({
                                                id: u.ref("s.id"),
                                                buildingId: u.ref("s.buildingId"),
                                                name: u.ref("bp.name")
                                            }).as("supply")).whereRef("s.resourceId", "=", "br.resourceId").where("s.buildingId", "in", l.selectFrom("Building_To_Building as btb").select("btb.linkId").where("btb.buildingId", "=", i)).as("supply"),
                                    (l)=>l.selectFrom("Inventory as i").select([
                                            "i.amount"
                                        ]).where("i.id", "in", s.selectFrom("Building_Inventory as bi").select("bi.inventoryId").where("bi.buildingId", "=", i)).whereRef("i.resourceId", "=", "br.resourceId").where("i.type", "=", "construction").limit(1).as("available"),
                                    (l)=>l.selectFrom("Demand as d").select((u)=>Gs.jsonObject({
                                                id: u.ref("d.id"),
                                                priority: u.ref("d.priority")
                                            }).as("demand")).whereRef("d.resourceId", "=", "br.resourceId").where("d.buildingId", "=", i).as("demand")
                                ]).orderBy("r.name", "asc"),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    amount: T.number().nonnegative(),
                                    transport: T.number().nonnegative(),
                                    available: T.number().nonnegative().nullish(),
                                    supply: eC(T.object({
                                        id: T.string().min(1),
                                        buildingId: T.string().min(1),
                                        name: T.string().min(1)
                                    })).nullish(),
                                    demand: eC(T.object({
                                        id: T.string().min(1),
                                        priority: T.number()
                                    })).nullish(),
                                    passive: Ai()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: e } = On({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { user: t, requirement: n } = lL.useLoaderData();
            return e.constructionId ? d.jsx(hne, {
                userId: t.id,
                building: e,
                requirement: n
            }) : d.jsx(fne, {
                building: e
            });
        }
    }), mne = ({ transport: e })=>{
        const { mapId: t, locale: n } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsxs("div", {
            className: it([
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                "hover:border-slate-300",
                "hover:bg-slate-100"
            ]),
            children: [
                d.jsx("div", {
                    className: "font-bold",
                    children: e.resource
                }),
                d.jsx(Te, {
                    icon: ui,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                    params: {
                        locale: n,
                        mapId: t,
                        buildingId: e.sourceId
                    },
                    search: {
                        zoomToId: e.sourceId
                    },
                    children: e.source
                }),
                d.jsxs(cr, {
                    children: [
                        "x",
                        e.amount
                    ]
                })
            ]
        });
    }, gne = ({ building: e, transport: t, ...n })=>{
        const { mapId: r, locale: i } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsx(Kr, {
            icon: aL,
            textTitle: d.jsx(B, {
                label: "Transport list (label)"
            }),
            textSubTitle: d.jsxs(d.Fragment, {
                children: [
                    d.jsx(Te, {
                        icon: ci,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: e.id
                        }
                    }),
                    d.jsx(Te, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/transport",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: e.id
                        },
                        search: {
                            zoomToId: e.id
                        },
                        children: e.name
                    })
                ]
            }),
            ...n,
            children: t.length > 0 ? t.map((o)=>d.jsx(mne, {
                    transport: o
                }, o.id)) : d.jsx("div", {
                className: it([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-green-400",
                    "p-4",
                    "bg-green-200",
                    "font-bold"
                ]),
                children: d.jsx(B, {
                    label: "There is nothing on the way to this building. (label)"
                })
            })
        });
    }, cL = Le("/$locale/apps/derivean/map/$mapId/building/$buildingId/transport")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { mapId: n, buildingId: r } }) {
            return {
                transport: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "transport",
                        "list"
                    ],
                    queryFn: async ()=>t.transaction().execute(async (i)=>er({
                                select: i.selectFrom("Transport as t").innerJoin("Building as source", "source.id", "t.sourceId").innerJoin("Blueprint as bl", "bl.id", "source.blueprintId").innerJoin("Resource as r", "r.id", "t.resourceId").select([
                                    "t.id",
                                    "r.name as resource",
                                    "source.id as sourceId",
                                    "bl.name as source",
                                    "t.amount"
                                ]).where("t.targetId", "=", r).orderBy("r.name", "asc"),
                                output: T.object({
                                    id: T.string().min(1),
                                    resource: T.string().min(1),
                                    source: T.string().min(1),
                                    sourceId: T.string().min(1),
                                    amount: T.number()
                                })
                            }))
                })
            };
        },
        component () {
            const { building: e } = On({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { transport: t } = cL.useLoaderData();
            return d.jsx(gne, {
                building: e,
                transport: t
            });
        }
    }), yne = ({ supply: e })=>{
        const t = Bt([
            [
                "GameMap"
            ]
        ]), n = Ye({
            async mutationFn ({ supplyId: r }) {
                return Pe.transaction().execute(async (i)=>i.deleteFrom("Supply").where("id", "=", r).execute());
            },
            async onSuccess () {
                await t();
            }
        });
        return d.jsxs("div", {
            className: it([
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                "hover:border-slate-300",
                "hover:bg-slate-100"
            ]),
            children: [
                d.jsx("div", {
                    className: "flex flex-row gap-2 items-center",
                    children: e.name
                }),
                d.jsx(ft, {
                    iconEnabled: _n,
                    loading: n.isPending,
                    onClick: ()=>{
                        n.mutate({
                            supplyId: e.id
                        });
                    },
                    variant: {
                        variant: "danger"
                    }
                })
            ]
        });
    }, vne = ({ building: e, supply: t, ...n })=>{
        const { mapId: r, locale: i } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsx(Kr, {
            icon: Vg,
            textTitle: d.jsx(B, {
                label: "Supply of (label)"
            }),
            textSubTitle: d.jsxs(d.Fragment, {
                children: [
                    d.jsx(Te, {
                        icon: ci,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: e.id
                        }
                    }),
                    d.jsx(Te, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/supply",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: e.id
                        },
                        search: {
                            zoomToId: e.id
                        },
                        children: e.name
                    })
                ]
            }),
            ...n,
            children: t.length > 0 ? t.map((o)=>d.jsx(yne, {
                    supply: o
                }, o.id)) : d.jsx("div", {
                className: it([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: d.jsx(B, {
                    label: "This building does not supply anything. (label)"
                })
            })
        });
    }, uL = Le("/$locale/apps/derivean/map/$mapId/building/$buildingId/supply")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { mapId: n, buildingId: r } }) {
            return {
                supply: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "supply",
                        "list"
                    ],
                    queryFn: async ()=>t.transaction().execute(async (i)=>er({
                                select: i.selectFrom("Supply as s").innerJoin("Resource as r", "r.id", "s.resourceId").select([
                                    "s.id",
                                    "r.name"
                                ]).where("s.buildingId", "=", r).orderBy("r.name", "asc"),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1)
                                })
                            }))
                })
            };
        },
        component () {
            const { building: e } = On({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { supply: t } = uL.useLoaderData();
            return d.jsx(vne, {
                building: e,
                supply: t
            });
        }
    }), xne = ({ building: e, link: t })=>{
        const { mapId: n, locale: r } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsx("div", {
            className: it([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100"
            ]),
            children: d.jsxs("div", {
                className: "flex flex-row items-center justify-between",
                children: [
                    d.jsx(Te, {
                        icon: ui,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: r,
                            mapId: n,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    }),
                    d.jsx(Te, {
                        icon: bI,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/link",
                        params: {
                            locale: r,
                            mapId: n,
                            buildingId: e.id
                        },
                        search: {
                            zoomToId: t.landId
                        },
                        children: t.land
                    })
                ]
            })
        });
    }, bne = ({ building: e, link: t, ...n })=>{
        const { locale: r, mapId: i } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsx(Kr, {
            icon: ui,
            textTitle: d.jsx(B, {
                label: "Building links (label)"
            }),
            textSubTitle: d.jsxs(d.Fragment, {
                children: [
                    d.jsx(Te, {
                        icon: ci,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: r,
                            mapId: i,
                            buildingId: e.id
                        }
                    }),
                    d.jsx(Te, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/link",
                        params: {
                            locale: r,
                            mapId: i,
                            buildingId: e.id
                        },
                        search: {
                            zoomToId: e.id
                        },
                        children: e.name
                    })
                ]
            }),
            ...n,
            children: t.length > 0 ? t.map((o)=>d.jsx(xne, {
                    building: e,
                    link: o
                }, o.id)) : d.jsx("div", {
                className: it([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: d.jsx(B, {
                    label: "No linked buildings. (label)"
                })
            })
        });
    }, dL = Le("/$locale/apps/derivean/map/$mapId/building/$buildingId/link")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { mapId: n, buildingId: r } }) {
            return {
                link: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "link"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (i)=>er({
                                select: i.selectFrom("Building_To_Building as btb").innerJoin("Building as b", "b.id", "btb.linkId").innerJoin("Land as l", "l.id", "b.landId").innerJoin("Region as r", "r.id", "l.regionId").innerJoin("Blueprint as bp", "bp.id", "b.blueprintId").select([
                                    "btb.id",
                                    "bp.name",
                                    "b.landId",
                                    "r.name as land"
                                ]).where("btb.buildingId", "=", r).orderBy("bp.name"),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    landId: T.string().min(1),
                                    land: T.string().min(1)
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: e } = On({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { link: t } = dL.useLoaderData();
            return d.jsx(bne, {
                link: t,
                building: e
            });
        }
    }), wne = T.object({
        buildingId: T.string().min(1),
        resourceId: T.string().min(1),
        mapId: T.string().min(1),
        userId: T.string().min(1),
        amount: ts()
    }), Nne = ({ mapId: e, userId: t, inventory: n })=>{
        const r = Bt([
            [
                "GameMap"
            ]
        ]), i = Ye({
            async mutationFn ({ buildingId: u, resourceId: f, supplyId: p, mapId: m, userId: g }) {
                return Pe.transaction().execute(async (v)=>p ? v.deleteFrom("Supply").where("id", "=", p).execute() : v.insertInto("Supply").values({
                        id: xt(),
                        buildingId: u,
                        resourceId: f,
                        mapId: m,
                        userId: g
                    }).execute());
            },
            async onSuccess () {
                await r();
            }
        }), o = Ye({
            async mutationFn ({ buildingId: u, resourceId: f, demandId: p, mapId: m, userId: g, amount: v }) {
                return Pe.transaction().execute(async (x)=>{
                    if (p) return x.deleteFrom("Demand").where("id", "=", p).execute();
                    const { sum: b } = await x.selectFrom("Transport as t").select((N)=>N.fn.sum("t.amount").as("sum")).where("t.resourceId", "=", f).where("t.targetId", "=", u).executeTakeFirstOrThrow(), S = v + (b || 0);
                    if (n.limit > 0 && S <= 0) {
                        _t.error(Wr.text("Not enough space (inventory is full/all resources are already on the way) (toast)"));
                        return;
                    }
                    return x.insertInto("Demand").values({
                        id: xt(),
                        buildingId: u,
                        resourceId: f,
                        mapId: m,
                        userId: g,
                        amount: n.limit > 0 ? S : 1,
                        priority: 0,
                        type: "storage"
                    }).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        }), s = Wn({
            resolver: Vn(wne),
            defaultValues: {
                mapId: e,
                userId: t,
                buildingId: n.buildingId,
                resourceId: n.resourceId,
                amount: n.limit > 0 ? n.limit - n.amount : 1
            }
        }), l = zn({
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting
        }).slots;
        return d.jsxs("div", {
            className: it([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100",
                n.limit > 0 && n.amount >= n.limit ? [
                    "border-amber-400",
                    "bg-amber-50",
                    "hover:bg-amber-50",
                    "hover:border-amber-600"
                ] : void 0,
                n.supplyId || n.demandId ? [
                    "bg-purple-50",
                    "border-purple-400",
                    "hover:bg-purple-50",
                    "hover:border-purple-400"
                ] : void 0
            ]),
            children: [
                d.jsxs("div", {
                    className: "flex flex-row items-center justify-between",
                    children: [
                        d.jsxs("div", {
                            className: it([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                n.supplyId || n.demandId ? [
                                    "text-purple-600"
                                ] : void 0
                            ]),
                            children: [
                                d.jsx("div", {
                                    className: "font-bold",
                                    children: n.name
                                }),
                                n.supplyId ? d.jsx(st, {
                                    icon: Vg
                                }) : null,
                                n.demandId ? d.jsx(st, {
                                    icon: rl
                                }) : null
                            ]
                        }),
                        mt({
                            number: n.amount
                        }),
                        " /",
                        " ",
                        mt({
                            number: n.limit
                        })
                    ]
                }),
                d.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between",
                    children: [
                        d.jsx(ft, {
                            iconEnabled: n.supplyId ? _n : Vg,
                            loading: i.isPending,
                            onClick: ()=>{
                                i.mutate({
                                    mapId: e,
                                    userId: t,
                                    buildingId: n.buildingId,
                                    resourceId: n.resourceId,
                                    supplyId: n.supplyId
                                });
                            },
                            variant: {
                                variant: "subtle"
                            },
                            children: n.supplyId ? d.jsx(B, {
                                label: "Cancel supply (label)"
                            }) : d.jsx(B, {
                                label: "Supply resource (label)"
                            })
                        }),
                        d.jsx("div", {
                            className: it([
                                "border-2",
                                "border-purple-400",
                                "rounded-md",
                                "w-[64px]",
                                "h-[64px]",
                                "bg-contain",
                                `bg-${n.resourceId}`
                            ])
                        }),
                        n.demandId ? d.jsx(ft, {
                            iconEnabled: _n,
                            loading: o.isPending,
                            onClick: ()=>{
                                o.mutate({
                                    mapId: e,
                                    userId: t,
                                    buildingId: n.buildingId,
                                    resourceId: n.resourceId,
                                    amount: 0,
                                    demandId: n.demandId
                                });
                            },
                            variant: {
                                variant: "subtle"
                            },
                            children: d.jsx(B, {
                                label: "Cancel demand (label)"
                            })
                        }) : d.jsx(xl, {
                            textTitle: d.jsx(B, {
                                label: "Demand resource (title)"
                            }),
                            target: d.jsx(ft, {
                                iconEnabled: rl,
                                variant: {
                                    variant: "subtle"
                                },
                                children: d.jsx(B, {
                                    label: "Demand resource (label)"
                                })
                            }),
                            css: {
                                modal: [
                                    "w-1/3"
                                ]
                            },
                            children: d.jsxs("form", {
                                className: l.base(),
                                onSubmit: mr({
                                    form: s,
                                    mutation: o
                                }),
                                children: [
                                    d.jsx(Dn, {
                                        variant: {
                                            highlight: !0
                                        },
                                        error: s.formState.errors.root
                                    }),
                                    d.jsx(ot, {
                                        formState: s.formState,
                                        name: "amount",
                                        label: d.jsx(B, {
                                            label: "Demanded amount (label)"
                                        }),
                                        children: d.jsx("input", {
                                            type: "number",
                                            min: 1,
                                            max: n.limit - n.amount,
                                            className: l.input(),
                                            ...s.register("amount")
                                        })
                                    }),
                                    d.jsx(ft, {
                                        iconEnabled: rl,
                                        iconDisabled: NI,
                                        type: "submit",
                                        children: d.jsx(B, {
                                            label: "Submit demand (submit)"
                                        })
                                    })
                                ]
                            })
                        })
                    ]
                }),
                n.limit > 0 ? d.jsx(Iy, {
                    variant: {
                        size: "md"
                    },
                    value: 100 * n.amount / n.limit,
                    css: {
                        progress: n.amount >= n.limit ? [
                            "bg-amber-500"
                        ] : void 0
                    }
                }) : null
            ]
        });
    }, Sne = ({ building: e, userId: t, inventory: n, fulltextProps: r, ...i })=>{
        const { locale: o, mapId: s } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsxs(Kr, {
            icon: Ys,
            textTitle: d.jsx(B, {
                label: "Inventory (label)"
            }),
            textSubTitle: d.jsxs(d.Fragment, {
                children: [
                    d.jsx(Te, {
                        icon: ci,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: o,
                            mapId: s,
                            buildingId: e.id
                        }
                    }),
                    d.jsx(Te, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/inventory",
                        params: {
                            locale: o,
                            mapId: s,
                            buildingId: e.id
                        },
                        children: e.name
                    })
                ]
            }),
            ...i,
            children: [
                d.jsx(YA, {
                    ...r
                }),
                d.jsx("div", {
                    children: d.jsx(B, {
                        label: "Inventory - storage (label)",
                        css: {
                            base: [
                                "font-bold",
                                "text-slate-500"
                            ]
                        }
                    })
                }),
                n.length > 0 ? n.map((l)=>d.jsx(Nne, {
                        mapId: s,
                        userId: t,
                        inventory: l
                    }, l.id)) : d.jsx("div", {
                    className: it([
                        "flex",
                        "items-center",
                        "justify-center",
                        "rounded-sm",
                        "border",
                        "border-amber-400",
                        "p-4",
                        "bg-amber-200",
                        "font-bold"
                    ]),
                    children: d.jsx(B, {
                        label: "No inventory storage. (label)"
                    })
                })
            ]
        });
    }, Rm = Le("/$locale/apps/derivean/map/$mapId/building/$buildingId/inventory")({
        validateSearch: en(T.object({
            fulltext: T.string().optional()
        })),
        loaderDeps ({ search: { fulltext: e } }) {
            return {
                fulltext: e
            };
        },
        async loader ({ context: { queryClient: e, kysely: t, session: n }, deps: { fulltext: r }, params: { mapId: i, buildingId: o } }) {
            return {
                user: await n(),
                inventory: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        i,
                        "building",
                        o,
                        "inventory",
                        "storage",
                        {
                            fulltext: r
                        }
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (l)=>er({
                                select: l.selectFrom("Inventory as i").innerJoin("Building_Inventory as bi", (u)=>u.on("bi.buildingId", "=", o).onRef("bi.inventoryId", "=", "i.id")).innerJoin("Resource as r", "r.id", "i.resourceId").leftJoin("Supply as s", (u)=>u.onRef("s.resourceId", "=", "i.resourceId").on("s.buildingId", "=", o)).leftJoin("Demand as d", (u)=>u.onRef("d.resourceId", "=", "i.resourceId").on("d.buildingId", "=", o)).select([
                                    "i.id",
                                    "i.amount",
                                    "i.limit",
                                    "r.name",
                                    "bi.buildingId",
                                    "i.resourceId",
                                    "s.id as supplyId",
                                    "d.id as demandId"
                                ]).where("i.type", "in", [
                                    "storage"
                                ]).orderBy("r.name"),
                                query ({ select: u, where: f }) {
                                    let p = u;
                                    if (f?.fulltext) {
                                        const m = `%${f.fulltext}%`.toLowerCase();
                                        p = p.where((g)=>g.or([
                                                g("r.name", "like", m)
                                            ]));
                                    }
                                    return p;
                                },
                                output: T.object({
                                    id: T.string().min(1),
                                    buildingId: T.string().min(1),
                                    resourceId: T.string().min(1),
                                    amount: T.number().nonnegative(),
                                    limit: T.number().nonnegative(),
                                    name: T.string().min(1),
                                    supplyId: T.string().nullish(),
                                    demandId: T.string().nullish()
                                }),
                                filter: {
                                    fulltext: r
                                }
                            }));
                    }
                })
            };
        },
        component () {
            const { building: e } = On({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { fulltext: t } = Rm.useSearch(), n = Rm.useNavigate(), { user: r, inventory: i } = Rm.useLoaderData();
            return d.jsx(Sne, {
                building: e,
                userId: r.id,
                inventory: i,
                fulltextProps: {
                    value: t,
                    onFulltext (o) {
                        n({
                            search: {
                                fulltext: o
                            }
                        });
                    }
                }
            });
        }
    }), Ine = ({ mapId: e, userId: t, demand: n })=>{
        const r = Bt([
            [
                "GameMap"
            ]
        ]), i = Ye({
            async mutationFn ({ demandId: l }) {
                return Pe.transaction().execute(async (u)=>u.deleteFrom("Demand").where("id", "=", l).execute());
            },
            async onSuccess () {
                await r();
            }
        }), o = Ye({
            async mutationFn ({ demandId: l }) {
                return Pe.transaction().execute(async (u)=>{
                    const { priority: f } = await u.selectFrom("Demand as d").select((p)=>p.fn.max("d.priority").as("priority")).where("d.mapId", "=", e).where("d.userId", "=", t).where("d.id", "!=", l).executeTakeFirstOrThrow();
                    return u.updateTable("Demand").set({
                        priority: f + 1
                    }).where("id", "=", l).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        }), s = Ye({
            async mutationFn ({ demandId: l }) {
                return Pe.transaction().execute(async (u)=>{
                    const { priority: f } = await u.selectFrom("Demand as d").select((p)=>p.fn.min("d.priority").as("priority")).where("d.mapId", "=", e).where("d.userId", "=", t).where("d.id", "!=", l).executeTakeFirstOrThrow();
                    return u.updateTable("Demand").set({
                        priority: f - 1
                    }).where("id", "=", l).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        });
        return d.jsxs("div", {
            className: it([
                "flex",
                "flex-col",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                n.transport ? [
                    "text-green-600",
                    "bg-green-50",
                    "border-green-400"
                ] : void 0
            ]),
            children: [
                d.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between w-full",
                    children: [
                        d.jsxs("div", {
                            className: "flex flex-row gap-2 items-center",
                            children: [
                                (n.transport || 0) > 0 ? d.jsx(st, {
                                    icon: rl
                                }) : d.jsx(st, {
                                    icon: NI
                                }),
                                d.jsx("div", {
                                    className: "font-bold",
                                    children: n.name
                                })
                            ]
                        }),
                        d.jsxs("div", {
                            className: "flex flex-row gap-2 items-center",
                            children: [
                                d.jsxs(cr, {
                                    css: {
                                        base: n.transport ? [
                                            "bg-green-50",
                                            "border-green-400",
                                            "hover:bg-green-50",
                                            "hover:border-green-400"
                                        ] : void 0
                                    },
                                    children: [
                                        "x",
                                        mt({
                                            number: n.amount
                                        })
                                    ]
                                }),
                                d.jsx(ft, {
                                    iconEnabled: _n,
                                    loading: i.isPending,
                                    onClick: ()=>{
                                        i.mutate({
                                            demandId: n.id
                                        });
                                    },
                                    variant: {
                                        variant: "danger"
                                    }
                                })
                            ]
                        })
                    ]
                }),
                d.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between w-full",
                    children: [
                        d.jsx(ft, {
                            iconEnabled: eF,
                            variant: {
                                variant: "subtle"
                            },
                            loading: o.isPending || s.isPending,
                            onClick: ()=>{
                                o.mutate({
                                    demandId: n.id
                                });
                            },
                            children: d.jsx(B, {
                                label: "Priority up (label)"
                            })
                        }),
                        d.jsx(cr, {
                            css: {
                                base: [
                                    "bg-purple-50",
                                    "border-purple-400",
                                    "text-purple-600"
                                ]
                            },
                            children: n.priority
                        }),
                        d.jsx(ft, {
                            iconEnabled: XA,
                            variant: {
                                variant: "subtle"
                            },
                            loading: o.isPending || s.isPending,
                            onClick: ()=>{
                                s.mutate({
                                    demandId: n.id
                                });
                            },
                            children: d.jsx(B, {
                                label: "Priority down (label)"
                            })
                        })
                    ]
                })
            ]
        });
    }, _ne = ({ userId: e, building: t, demand: n, ...r })=>{
        const { mapId: i, locale: o } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsx(Kr, {
            icon: rl,
            textTitle: d.jsx(B, {
                label: "Demand (label)"
            }),
            textSubTitle: d.jsxs(d.Fragment, {
                children: [
                    d.jsx(Te, {
                        icon: ci,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: o,
                            mapId: i,
                            buildingId: t.id
                        }
                    }),
                    d.jsx(Te, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/demand",
                        params: {
                            locale: o,
                            mapId: i,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...r,
            children: n.length > 0 ? n.map((s)=>d.jsx(Ine, {
                    mapId: i,
                    userId: e,
                    demand: s
                }, s.id)) : d.jsx("div", {
                className: it([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-green-400",
                    "p-4",
                    "bg-green-200",
                    "font-bold"
                ]),
                children: d.jsx(B, {
                    label: "This building does not demand anything. (label)"
                })
            })
        });
    }, fL = Le("/$locale/apps/derivean/map/$mapId/building/$buildingId/demand")({
        async loader ({ context: { queryClient: e, kysely: t, session: n }, params: { mapId: r, buildingId: i } }) {
            return {
                user: await n(),
                demand: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        r,
                        "building",
                        i,
                        "demand",
                        "list"
                    ],
                    queryFn: async ()=>t.transaction().execute(async (s)=>er({
                                select: s.selectFrom("Demand as d").innerJoin("Building_Inventory as bi", "bi.buildingId", "d.buildingId").innerJoin("Inventory as i", (l)=>l.onRef("i.id", "=", "bi.inventoryId").onRef("i.resourceId", "=", "d.resourceId")).innerJoin("Resource as r", "r.id", "d.resourceId").select([
                                    "d.id",
                                    "r.name",
                                    "d.amount",
                                    "i.limit",
                                    "d.priority",
                                    "i.amount as available",
                                    (l)=>l.selectFrom("Transport as t").select((u)=>u.fn.sum("t.amount").as("transport")).whereRef("t.targetId", "=", "d.buildingId").whereRef("t.resourceId", "=", "d.resourceId").as("transport")
                                ]).where("d.buildingId", "=", i).where("i.type", "=", "storage").where("d.type", "=", "storage").orderBy("r.name", "asc"),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    amount: T.number(),
                                    available: T.number(),
                                    priority: T.number(),
                                    limit: T.number(),
                                    transport: T.number().nullish()
                                })
                            }))
                })
            };
        },
        component () {
            const { building: e } = On({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { user: t, demand: n } = fL.useLoaderData();
            return d.jsx(_ne, {
                userId: t.id,
                building: e,
                demand: n
            });
        }
    }), pL = ({ requirement: e })=>{
        const t = (e.available || 0) >= e.amount;
        return d.jsxs("div", {
            className: it([
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                "hover:border-slate-300",
                "hover:bg-slate-100",
                e.passive ? [
                    "border-purple-300",
                    "hover:border-purple-500",
                    "hover:bg-purple-100"
                ] : void 0,
                e.available === void 0 || t ? void 0 : [
                    "border-red-500",
                    "bg-red-50",
                    "hover:bg-red-50",
                    "hover:border-red-600"
                ]
            ]),
            children: [
                d.jsx("div", {
                    className: "font-bold",
                    children: e.name
                }),
                e.available === void 0 ? d.jsxs(cr, {
                    children: [
                        "x",
                        mt({
                            number: e.amount
                        })
                    ]
                }) : d.jsxs(cr, {
                    css: {
                        base: t ? [
                            "bg-green-200",
                            "border-green-500"
                        ] : [
                            "bg-red-200",
                            "border-red-500"
                        ]
                    },
                    children: [
                        d.jsx("div", {
                            className: "font-bold",
                            children: mt({
                                number: e.available
                            })
                        }),
                        d.jsx("div", {
                            children: "/"
                        }),
                        d.jsx("div", {
                            className: "font-light",
                            children: mt({
                                number: e.amount
                            })
                        })
                    ]
                })
            ]
        });
    }, Ene = ({ blueprint: e, requirement: t, ...n })=>d.jsxs(Kr, {
            icon: Xt,
            textTitle: d.jsx(B, {
                label: "Building requirements (label)"
            }),
            textSubTitle: e.name,
            ...n,
            children: [
                t.length > 0 ? t.map((r)=>d.jsx(pL, {
                        requirement: r
                    }, r.id)) : d.jsx("div", {
                    className: it([
                        "flex",
                        "items-center",
                        "justify-center",
                        "rounded-sm",
                        "border",
                        "border-green-400",
                        "p-4",
                        "bg-green-200",
                        "font-bold"
                    ]),
                    children: d.jsx(B, {
                        label: "There are no requirements. (label)"
                    })
                }),
                d.jsx("div", {
                    className: "border-b border-slate-300"
                }),
                d.jsx("div", {
                    className: it([
                        "w-full",
                        "h-96",
                        "bg-contain",
                        "p-2",
                        `bg-${e.id}`
                    ])
                })
            ]
        }), hL = Le("/$locale/apps/derivean/map/$mapId/blueprint/$blueprintId/requirements")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { blueprintId: n } }) {
            return {
                requirement: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        "blueprint",
                        n,
                        "requirements"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (r)=>er({
                                select: r.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select([
                                    "br.id",
                                    "r.name",
                                    "br.amount",
                                    "br.passive"
                                ]).where("br.blueprintId", "=", n),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    amount: T.number().nonnegative(),
                                    passive: Ai()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { blueprint: e } = On({
                from: "/$locale/apps/derivean/map/$mapId/blueprint/$blueprintId"
            }), { requirement: t } = hL.useLoaderData();
            return d.jsx(Ene, {
                blueprint: e,
                requirement: t
            });
        }
    }), qO = vn(), kne = [
        qO({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: e }) {
                return e;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: e, filter: t }) {
                    t.shallow("resourceID", e.resourceId);
                }
            },
            size: 22
        }),
        qO({
            name: "amount",
            header () {
                return d.jsx(B, {
                    label: "Amount (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 10
        })
    ], Cne = ({ table: e, ...t })=>d.jsx(gn, {
            table: yn({
                ...e,
                columns: kne
            }),
            ...t
        }), Om = Le("/$locale/apps/derivean/game/blueprint/production/$id/resources")({
        validateSearch: en(mn(op)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Resource",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                "bpr.id",
                                "r.name",
                                "bpr.resourceId",
                                "bpr.amount"
                            ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                return l?.id && (u = u.where("bpr.id", "=", l.id)), l?.idIn && (u = u.where("bpr.id", "in", l.idIn)), l?.resourceId && (u = u.where("bpr.resourceId", "=", l.resourceId)), u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                resourceId: T.string().min(1),
                                amount: T.number().nonnegative()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = Om.useLoaderData(), { filter: n, cursor: r } = Om.useSearch(), i = Om.useNavigate();
            return d.jsx(d.Fragment, {
                children: d.jsx(Cne, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, i)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of production resource requirements (label)"
                        }),
                        ...fn(i)
                    }
                })
            });
        }
    }), _0 = vn(), jne = [
        _0({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: e }) {
                return e;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: e, filter: t }) {
                    t.shallow("resourceID", e.resourceId);
                }
            },
            size: 12
        }),
        _0({
            name: "amount",
            header () {
                return d.jsx(B, {
                    label: "Amount (label)"
                });
            },
            render ({ value: e }) {
                return mt({
                    number: e
                });
            },
            size: 10
        }),
        _0({
            name: "passive",
            header () {
                return d.jsx(B, {
                    label: "Passive requirement (label)"
                });
            },
            render ({ value: e }) {
                return d.jsx(by, {
                    value: e
                });
            },
            size: 10
        })
    ], Rne = ({ table: e, ...t })=>d.jsx(gn, {
            table: yn({
                ...e,
                columns: jne
            }),
            ...t
        }), Tm = Le("/$locale/apps/derivean/game/blueprint/production/$id/requirements")({
        validateSearch: en(mn(ip)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Requirement",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                "bpr.id",
                                "r.name",
                                "bpr.resourceId",
                                "bpr.amount",
                                "bpr.passive"
                            ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                return l?.id && (u = u.where("bpr.id", "=", l.id)), l?.idIn && (u = u.where("bpr.id", "in", l.idIn)), l?.resourceId && (u = u.where("bpr.resourceId", "=", l.resourceId)), u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                resourceId: T.string().min(1),
                                amount: T.number().nonnegative(),
                                passive: Ai()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = Tm.useLoaderData(), { filter: n, cursor: r } = Tm.useSearch(), i = Tm.useNavigate();
            return d.jsx(d.Fragment, {
                children: d.jsx(Rne, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, i)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of production requirements (label)"
                        }),
                        ...fn(i)
                    }
                })
            });
        }
    }), One = vn(), Tne = [
        One({
            name: "name",
            header () {
                return d.jsx(B, {
                    label: "Required building (label)"
                });
            },
            render ({ data: e, value: t }) {
                const { locale: n } = Ke({
                    from: "/$locale"
                });
                return d.jsx(Te, {
                    icon: Et,
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: e.blueprintId
                    },
                    children: t
                });
            },
            size: 22
        })
    ], Pne = ({ table: e, ...t })=>d.jsx(gn, {
            table: yn({
                ...e,
                columns: Tne
            }),
            ...t
        }), Pm = Le("/$locale/apps/derivean/game/blueprint/production/$id/dependencies")({
        validateSearch: en(mn(rp)),
        loaderDeps ({ search: { filter: e, cursor: t, sort: n } }) {
            return {
                filter: e,
                cursor: t,
                sort: n
            };
        },
        async loader ({ context: { queryClient: e, kysely: t }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return e.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Dependency",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return t.transaction().execute(async (o)=>Vt({
                            select: o.selectFrom("Blueprint_Production_Dependency as bpd").innerJoin("Blueprint as bl", "bl.id", "bpd.blueprintId").select([
                                "bpd.id",
                                "bl.name",
                                "bpd.blueprintId"
                            ]).where("bpd.blueprintProductionId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: s, where: l }) {
                                let u = s;
                                return l?.id && (u = u.where("bpd.id", "=", l.id)), l?.idIn && (u = u.where("bpd.id", "in", l.idIn)), u;
                            },
                            output: T.object({
                                id: T.string().min(1),
                                name: T.string().min(1),
                                blueprintId: T.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: e, count: t } = Pm.useLoaderData(), { filter: n, cursor: r } = Pm.useSearch(), i = Pm.useNavigate(), { tva: o } = Wt({
                from: "__root__"
            }), s = o().slots;
            return d.jsx("div", {
                className: s.base(),
                children: d.jsx(Pne, {
                    table: {
                        data: e,
                        filter: {
                            value: n,
                            set: pn(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: hn(n?.fulltext, i)
                    },
                    cursor: {
                        count: t,
                        cursor: r,
                        textTotal: d.jsx(B, {
                            label: "Number of dependencies (label)"
                        }),
                        ...fn(i)
                    }
                })
            });
        }
    }), Ane = ({ queue: e, inventory: t })=>{
        const n = t.find((i)=>i.resourceId === e.resourceId), r = n && n.amount + e.amount > n.limit;
        return d.jsxs("div", {
            className: it([
                "flex",
                "flex-col",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                "hover:border-slate-300",
                r ? [
                    "border-red-400",
                    "hover:border-red-600"
                ] : void 0
            ]),
            children: [
                d.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between w-full",
                    children: [
                        d.jsx("div", {
                            className: "font-bold",
                            children: e.name
                        }),
                        d.jsx("div", {
                            className: "flex flex-row gap-2 items-center",
                            children: d.jsxs(cr, {
                                children: [
                                    "x",
                                    mt({
                                        number: e.amount
                                    })
                                ]
                            })
                        }),
                        d.jsx(wI, {
                            cycles: e.cycles
                        })
                    ]
                }),
                d.jsx(Iy, {
                    css: {
                        progress: r ? [
                            "bg-red-500"
                        ] : void 0
                    },
                    value: 100 * e.cycle / e.cycles
                })
            ]
        });
    }, Fne = ({ building: e, queue: t, inventory: n, ...r })=>{
        const { mapId: i, locale: o } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsx(Kr, {
            icon: WN,
            textTitle: d.jsx(B, {
                label: "Production queue (label)"
            }),
            textSubTitle: d.jsxs(d.Fragment, {
                children: [
                    d.jsx(Te, {
                        icon: ci,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: o,
                            mapId: i,
                            buildingId: e.id
                        }
                    }),
                    d.jsx(Te, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: o,
                            mapId: i,
                            buildingId: e.id
                        },
                        search: {
                            zoomToId: e.id
                        },
                        children: e.name
                    })
                ]
            }),
            ...r,
            children: t.length > 0 ? t.map((s)=>d.jsx(Ane, {
                    queue: s,
                    inventory: n
                }, s.id)) : d.jsxs("div", {
                className: it([
                    "flex",
                    "flex-col",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: [
                    d.jsx(B, {
                        label: "Production queue is empty. (label)"
                    }),
                    d.jsx(Te, {
                        icon: WN,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                        params: {
                            locale: o,
                            mapId: i,
                            buildingId: e.id
                        },
                        children: d.jsx(B, {
                            label: "Plan queue (label)"
                        })
                    })
                ]
            })
        });
    }, mL = Le("/$locale/apps/derivean/map/$mapId/building/$buildingId/production/queue")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { mapId: n, buildingId: r } }) {
            return {
                queue: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "production",
                        "queue"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (i)=>er({
                                select: i.selectFrom("Production as p").innerJoin("Blueprint_Production as bp", "bp.id", "p.blueprintProductionId").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                    "p.id",
                                    "r.name",
                                    "bp.resourceId",
                                    "p.cycle",
                                    "bp.amount",
                                    "bp.cycles"
                                ]).where("p.buildingId", "=", r),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    resourceId: T.string().min(1),
                                    amount: T.number().nonnegative(),
                                    cycle: T.number().int().nonnegative(),
                                    cycles: T.number().int().nonnegative()
                                })
                            }));
                    }
                }),
                inventory: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "inventory",
                        "list"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (i)=>er({
                                select: i.selectFrom("Inventory as i").innerJoin("Resource as r", "r.id", "i.resourceId").select([
                                    "i.id",
                                    "i.resourceId",
                                    "i.amount",
                                    "i.limit",
                                    "r.name"
                                ]).where("i.id", "in", i.selectFrom("Building_Inventory as bi").select("bi.inventoryId").where("bi.buildingId", "=", r)).orderBy("r.name"),
                                query ({ select: o, where: s }) {
                                    let l = o;
                                    if (s?.fulltext) {
                                        const u = `%${s.fulltext}%`.toLowerCase();
                                        l = l.where((f)=>f.or([
                                                f("r.name", "like", u)
                                            ]));
                                    }
                                    return l;
                                },
                                output: T.object({
                                    id: T.string().min(1),
                                    resourceId: T.string().min(1),
                                    amount: T.number().nonnegative(),
                                    limit: T.number().nonnegative(),
                                    name: T.string().min(1)
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: e } = On({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { queue: t, inventory: n } = mL.useLoaderData();
            return d.jsx(Fne, {
                building: e,
                queue: t,
                inventory: n
            });
        }
    }), BO = "icon-[tabler--basket]", Dne = "icon-[oui--refresh]", Mne = ({ building: e, production: t })=>{
        const { mapId: n, locale: r } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        }), i = Bt([
            [
                "GameMap"
            ]
        ]), o = Ye({
            async mutationFn ({ blueprintProductionId: f, buildingId: p }) {
                return Pe.transaction().execute(async (m)=>m.updateTable("Building").set({
                        productionId: f
                    }).where("id", "=", p).execute());
            },
            async onSuccess () {
                await i();
            }
        }), s = Ye({
            async mutationFn ({ buildingId: f }) {
                return Pe.transaction().execute(async (p)=>p.updateTable("Building").set({
                        productionId: null
                    }).where("id", "=", f).execute());
            },
            async onSuccess () {
                await i();
            }
        }), l = Ye({
            async mutationFn ({ blueprintProductionId: f, buildingId: p }) {
                return Pe.transaction().execute(async (m)=>m.updateTable("Building").set({
                        recurringProductionId: f
                    }).where("id", "=", p).execute());
            },
            async onSuccess () {
                await i();
            }
        }), u = Ye({
            async mutationFn ({ buildingId: f }) {
                return Pe.transaction().execute(async (p)=>p.updateTable("Building").set({
                        recurringProductionId: null
                    }).where("id", "=", f).execute());
            },
            async onSuccess () {
                await i();
            }
        });
        return d.jsxs("div", {
            className: it([
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                t.withAvailableResources ? [
                    "bg-green-50",
                    "border-green-500"
                ] : [
                    "bg-red-50",
                    "border-red-500"
                ]
            ]),
            children: [
                d.jsxs("div", {
                    className: "flex flex-row gap-2 items-center",
                    children: [
                        e.productionId === t.id ? d.jsx(ft, {
                            iconEnabled: BO,
                            loading: s.isPending,
                            onClick: ()=>{
                                s.mutate({
                                    buildingId: e.id
                                });
                            }
                        }) : d.jsx(ft, {
                            iconEnabled: "icon-[solar--play-outline]",
                            loading: o.isPending,
                            onClick: ()=>{
                                o.mutate({
                                    blueprintProductionId: t.id,
                                    buildingId: e.id
                                });
                            }
                        }),
                        e.recurringProductionId === t.id ? d.jsx(ft, {
                            iconEnabled: BO,
                            loading: u.isPending,
                            onClick: ()=>{
                                u.mutate({
                                    buildingId: e.id
                                });
                            }
                        }) : d.jsx(ft, {
                            iconEnabled: Dne,
                            loading: l.isPending,
                            onClick: ()=>{
                                l.mutate({
                                    blueprintProductionId: t.id,
                                    buildingId: e.id
                                });
                            }
                        }),
                        d.jsxs(Te, {
                            to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/$productionId/requirements",
                            params: {
                                locale: r,
                                mapId: n,
                                buildingId: e.id,
                                productionId: t.id
                            },
                            children: [
                                t.name,
                                d.jsxs(cr, {
                                    children: [
                                        "x",
                                        mt({
                                            number: t.amount
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                }),
                d.jsx(wI, {
                    cycles: t.cycles
                })
            ]
        });
    }, Lne = ({ building: e, production: t, ...n })=>{
        const { mapId: r, locale: i } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsx(Kr, {
            icon: Oi,
            textTitle: d.jsx(B, {
                label: "Building production (label)"
            }),
            textSubTitle: d.jsxs(d.Fragment, {
                children: [
                    d.jsx(Te, {
                        icon: ci,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: e.id
                        }
                    }),
                    d.jsx(Te, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: e.id
                        },
                        search: {
                            zoomToId: e.id
                        },
                        children: e.name
                    })
                ]
            }),
            ...n,
            children: t.length > 0 ? t.map((o)=>d.jsx(Mne, {
                    building: e,
                    production: o
                }, o.id)) : d.jsx("div", {
                className: it([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: d.jsx(B, {
                    label: "This building does not produce anything. (label)"
                })
            })
        });
    }, gL = Le("/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list")({
        async loader ({ context: { queryClient: e, kysely: t, session: n }, params: { mapId: r, buildingId: i } }) {
            const o = await n();
            return {
                production: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        r,
                        "building",
                        i,
                        "production",
                        "list"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (s)=>er({
                                select: s.selectFrom("Blueprint_Production as bp").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                    "bp.id",
                                    "r.name",
                                    "bp.amount",
                                    "bp.cycles",
                                    (l)=>l.case().when(l.not(l.exists(l.selectFrom("Blueprint_Production_Requirement as bpr").select(l.lit(1).as("one")).whereRef("bpr.blueprintProductionId", "=", "bp.id").where((u)=>u.not(u.exists(u.selectFrom("Inventory as i").select(u.lit(1).as("one")).where("i.id", "in", u.selectFrom("Building_Inventory").select("inventoryId").where("buildingId", "=", i)).where("i.type", "in", [
                                                "storage"
                                            ]).whereRef("i.resourceId", "=", "bpr.resourceId").whereRef("i.amount", ">=", "bpr.amount"))))))).then(l.lit(!0)).else(l.lit(!1)).end().as("withAvailableResources")
                                ]).where("bp.blueprintId", "=", s.selectFrom("Building as b").select("b.blueprintId").where("b.id", "=", i)).where((l)=>l.not(l.exists(l.selectFrom("Blueprint_Production_Dependency as bpd").select("bpd.blueprintProductionId").whereRef("bpd.blueprintProductionId", "=", "bp.id").where((u)=>u.not(u.exists(u.selectFrom("Building as b").select("b.blueprintId").where("b.userId", "=", o.id).where("b.constructionId", "is", null).whereRef("b.blueprintId", "=", "bpd.blueprintId"))))))).where((l)=>l.not(l.exists(l.selectFrom("Blueprint_Production_Resource as bpr").select("bpr.blueprintProductionId").whereRef("bpr.blueprintProductionId", "=", "bp.id").where((u)=>u.not(u.exists(u.selectFrom("Inventory as i").select("i.resourceId").where("i.id", "in", u.selectFrom("Building_Inventory").select("inventoryId").where("buildingId", "=", i)).whereRef("i.resourceId", "=", "bpr.resourceId").whereRef("i.amount", ">=", "bpr.amount"))))))).orderBy("r.name"),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    amount: T.number().nonnegative(),
                                    cycles: T.number().int().nonnegative(),
                                    withAvailableResources: Ai()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: e } = On({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { production: t } = gL.useLoaderData();
            return d.jsx(Lne, {
                building: e,
                production: t
            });
        }
    }), $ne = Le("/$locale/apps/derivean/map/$mapId/building/$buildingId/production/$productionId")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { mapId: n, buildingId: r, productionId: i } }) {
            return {
                production: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "production",
                        i,
                        "fetch"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (o)=>to({
                                select: o.selectFrom("Blueprint_Production as bp").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                    "bp.id",
                                    "bp.amount",
                                    "r.name"
                                ]).where("bp.id", "=", i),
                                output: T.object({
                                    id: T.string().min(1),
                                    amount: T.number().nonnegative(),
                                    name: T.string().min(1)
                                })
                            }));
                    }
                })
            };
        }
    }), qne = ({ building: e, production: t, requirement: n, ...r })=>{
        const { mapId: i, locale: o } = Ke({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return d.jsx(Kr, {
            icon: Xt,
            textTitle: d.jsx(B, {
                label: "Production requirements (label)"
            }),
            textSubTitle: d.jsxs(d.Fragment, {
                children: [
                    d.jsx(Te, {
                        icon: ci,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                        params: {
                            locale: o,
                            mapId: i,
                            buildingId: e.id
                        }
                    }),
                    d.jsx(Te, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                        params: {
                            locale: o,
                            mapId: i,
                            buildingId: e.id
                        },
                        search: {
                            zoomToId: e.id
                        },
                        children: e.name
                    }),
                    d.jsx("div", {
                        children: t.name
                    })
                ]
            }),
            ...r,
            children: n.length > 0 ? n.map((s)=>d.jsx(pL, {
                    requirement: s
                }, s.id)) : d.jsx("div", {
                className: it([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-green-400",
                    "p-4",
                    "bg-green-200",
                    "font-bold"
                ]),
                children: d.jsx(B, {
                    label: "There are no requirements. (label)"
                })
            })
        });
    }, yL = Le("/$locale/apps/derivean/map/$mapId/building/$buildingId/production/$productionId/requirements")({
        async loader ({ context: { queryClient: e, kysely: t }, params: { mapId: n, buildingId: r, productionId: i } }) {
            return {
                requirement: await e.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "production",
                        i,
                        "requirement",
                        "list"
                    ],
                    async queryFn () {
                        return t.transaction().execute(async (o)=>er({
                                select: o.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                    "bpr.id",
                                    "r.name",
                                    "bpr.amount",
                                    "bpr.passive",
                                    (s)=>s.selectFrom("Inventory as i").select([
                                            "i.amount"
                                        ]).where("i.id", "in", o.selectFrom("Building_Inventory as bi").select("bi.inventoryId").where("bi.buildingId", "=", r)).whereRef("i.resourceId", "=", "bpr.resourceId").where("i.type", "=", "storage").orderBy("i.amount", "desc").limit(1).as("available")
                                ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                                output: T.object({
                                    id: T.string().min(1),
                                    name: T.string().min(1),
                                    amount: T.number().nonnegative(),
                                    available: T.number().nonnegative().nullish(),
                                    passive: Ai()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: e } = On({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { production: t } = On({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/$productionId"
            }), { requirement: n } = yL.useLoaderData();
            return d.jsx(qne, {
                building: e,
                production: t,
                requirement: n
            });
        }
    }), SI = MK.update({
        id: "/$locale",
        path: "/$locale",
        getParentRoute: ()=>KS
    }), Bne = qK.update({
        id: "/",
        path: "/",
        getParentRoute: ()=>KS
    }), zne = BK.update({
        id: "/",
        path: "/",
        getParentRoute: ()=>SI
    }), ha = WK.update({
        id: "/apps/derivean",
        path: "/apps/derivean",
        getParentRoute: ()=>SI
    }), hi = HK.update({
        id: "/root",
        path: "/root",
        getParentRoute: ()=>ha
    }), vL = KK.update({
        id: "/map",
        path: "/map",
        getParentRoute: ()=>ha
    }), sp = GK.update({
        id: "/game",
        path: "/game",
        getParentRoute: ()=>ha
    }), Wne = XK.update({
        id: "/",
        path: "/",
        getParentRoute: ()=>hi
    }), Vne = VF.update({
        id: "/",
        path: "/",
        getParentRoute: ()=>sp
    }), Une = BN.update({
        id: "/editor",
        path: "/editor",
        getParentRoute: ()=>hi
    }), Hne = bee.update({
        id: "/public/register",
        path: "/public/register",
        getParentRoute: ()=>ha
    }), Kne = wee.update({
        id: "/public/logout",
        path: "/public/logout",
        getParentRoute: ()=>ha
    }), Gne = _ee.update({
        id: "/public/login",
        path: "/public/login",
        getParentRoute: ()=>ha
    }), ma = qM.update({
        id: "/$mapId",
        path: "/$mapId",
        getParentRoute: ()=>vL
    }), Qne = BM.update({
        id: "/db/schema",
        path: "/db/schema",
        getParentRoute: ()=>ha
    }), Jne = xm.update({
        id: "/user/list",
        path: "/user/list",
        getParentRoute: ()=>hi
    }), II = zM.update({
        id: "/user/$id",
        path: "/user/$id",
        getParentRoute: ()=>hi
    }), Zne = bm.update({
        id: "/tag/list",
        path: "/tag/list",
        getParentRoute: ()=>hi
    }), Yne = wm.update({
        id: "/resource/list",
        path: "/resource/list",
        getParentRoute: ()=>hi
    }), xL = HM.update({
        id: "/resource/$id",
        path: "/resource/$id",
        getParentRoute: ()=>hi
    }), Xne = Nm.update({
        id: "/region/list",
        path: "/region/list",
        getParentRoute: ()=>hi
    }), bL = Uee.update({
        id: "/region/$id",
        path: "/region/$id",
        getParentRoute: ()=>hi
    }), ere = Sm.update({
        id: "/blueprint/list",
        path: "/blueprint/list",
        getParentRoute: ()=>hi
    }), ga = ZM.update({
        id: "/blueprint/$id",
        path: "/blueprint/$id",
        getParentRoute: ()=>hi
    }), tre = Yee.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>ma
    }), nre = Im.update({
        id: "/blueprint/list",
        path: "/blueprint/list",
        getParentRoute: ()=>sp
    }), fu = YM.update({
        id: "/blueprint/$id",
        path: "/blueprint/$id",
        getParentRoute: ()=>sp
    }), rre = rte.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>II
    }), ire = ite.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>xL
    }), ore = ote.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>bL
    }), By = XM.update({
        id: "/blueprint/production/$id",
        path: "/blueprint/production/$id",
        getParentRoute: ()=>hi
    }), sre = eL.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>ga
    }), are = hd.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>ga
    }), lre = md.update({
        id: "/production",
        path: "/production",
        getParentRoute: ()=>ga
    }), cre = gd.update({
        id: "/inventory",
        path: "/inventory",
        getParentRoute: ()=>ga
    }), ure = tL.update({
        id: "/edit",
        path: "/edit",
        getParentRoute: ()=>ga
    }), dre = yd.update({
        id: "/dependencies",
        path: "/dependencies",
        getParentRoute: ()=>ga
    }), fre = vd.update({
        id: "/conflicts",
        path: "/conflicts",
        getParentRoute: ()=>ga
    }), pre = nL.update({
        id: "/land/list",
        path: "/land/list",
        getParentRoute: ()=>ma
    }), wL = Ote.update({
        id: "/land/$landId",
        path: "/land/$landId",
        getParentRoute: ()=>ma
    }), hre = rL.update({
        id: "/building/list",
        path: "/building/list",
        getParentRoute: ()=>ma
    }), Co = Ate.update({
        id: "/building/$buildingId",
        path: "/building/$buildingId",
        getParentRoute: ()=>ma
    }), NL = Fte.update({
        id: "/blueprint/$blueprintId",
        path: "/blueprint/$blueprintId",
        getParentRoute: ()=>ma
    }), zy = iL.update({
        id: "/blueprint/production/$id",
        path: "/blueprint/production/$id",
        getParentRoute: ()=>sp
    }), mre = $te.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>fu
    }), gre = _m.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>fu
    }), yre = Em.update({
        id: "/production",
        path: "/production",
        getParentRoute: ()=>fu
    }), vre = km.update({
        id: "/dependencies",
        path: "/dependencies",
        getParentRoute: ()=>fu
    }), xre = Cm.update({
        id: "/conflicts",
        path: "/conflicts",
        getParentRoute: ()=>fu
    }), bre = jm.update({
        id: "/building/list",
        path: "/building/list",
        getParentRoute: ()=>II
    }), wre = xd.update({
        id: "/resources",
        path: "/resources",
        getParentRoute: ()=>By
    }), Nre = bd.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>By
    }), Sre = wd.update({
        id: "/dependencies",
        path: "/dependencies",
        getParentRoute: ()=>By
    }), Ire = ane.update({
        id: "/road/$roadId/view",
        path: "/road/$roadId/view",
        getParentRoute: ()=>ma
    }), _re = sL.update({
        id: "/construction",
        path: "/construction",
        getParentRoute: ()=>wL
    }), Ere = lL.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>Co
    }), kre = cL.update({
        id: "/transport",
        path: "/transport",
        getParentRoute: ()=>Co
    }), Cre = uL.update({
        id: "/supply",
        path: "/supply",
        getParentRoute: ()=>Co
    }), jre = dL.update({
        id: "/link",
        path: "/link",
        getParentRoute: ()=>Co
    }), Rre = Rm.update({
        id: "/inventory",
        path: "/inventory",
        getParentRoute: ()=>Co
    }), Ore = fL.update({
        id: "/demand",
        path: "/demand",
        getParentRoute: ()=>Co
    }), Tre = hL.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>NL
    }), Pre = Om.update({
        id: "/resources",
        path: "/resources",
        getParentRoute: ()=>zy
    }), Are = Tm.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>zy
    }), Fre = Pm.update({
        id: "/dependencies",
        path: "/dependencies",
        getParentRoute: ()=>zy
    }), Dre = mL.update({
        id: "/production/queue",
        path: "/production/queue",
        getParentRoute: ()=>Co
    }), Mre = gL.update({
        id: "/production/list",
        path: "/production/list",
        getParentRoute: ()=>Co
    }), SL = $ne.update({
        id: "/production/$productionId",
        path: "/production/$productionId",
        getParentRoute: ()=>Co
    }), Lre = yL.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>SL
    }), $re = {
        LocaleAppsDeriveanGameBlueprintIdConflictsRoute: xre,
        LocaleAppsDeriveanGameBlueprintIdDependenciesRoute: vre,
        LocaleAppsDeriveanGameBlueprintIdProductionRoute: yre,
        LocaleAppsDeriveanGameBlueprintIdRequirementsRoute: gre,
        LocaleAppsDeriveanGameBlueprintIdViewRoute: mre
    }, qre = fu._addFileChildren($re), Bre = {
        LocaleAppsDeriveanGameBlueprintProductionIdDependenciesRoute: Fre,
        LocaleAppsDeriveanGameBlueprintProductionIdRequirementsRoute: Are,
        LocaleAppsDeriveanGameBlueprintProductionIdResourcesRoute: Pre
    }, zre = zy._addFileChildren(Bre), Wre = {
        LocaleAppsDeriveanGameIndexRoute: Vne,
        LocaleAppsDeriveanGameBlueprintIdRoute: qre,
        LocaleAppsDeriveanGameBlueprintListRoute: nre,
        LocaleAppsDeriveanGameBlueprintProductionIdRoute: zre
    }, Vre = sp._addFileChildren(Wre), Ure = {
        LocaleAppsDeriveanMapMapIdBlueprintBlueprintIdRequirementsRoute: Tre
    }, Hre = NL._addFileChildren(Ure), Kre = {
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdProductionProductionIdRequirementsRoute: Lre
    }, Gre = SL._addFileChildren(Kre), Qre = {
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdDemandRoute: Ore,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdInventoryRoute: Rre,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdLinkRoute: jre,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdSupplyRoute: Cre,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdTransportRoute: kre,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdViewRoute: Ere,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdProductionProductionIdRoute: Gre,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdProductionListRoute: Mre,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdProductionQueueRoute: Dre
    }, Jre = Co._addFileChildren(Qre), Zre = {
        LocaleAppsDeriveanMapMapIdLandLandIdConstructionRoute: _re
    }, Yre = wL._addFileChildren(Zre), Xre = {
        LocaleAppsDeriveanMapMapIdViewRoute: tre,
        LocaleAppsDeriveanMapMapIdBlueprintBlueprintIdRoute: Hre,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdRoute: Jre,
        LocaleAppsDeriveanMapMapIdBuildingListRoute: hre,
        LocaleAppsDeriveanMapMapIdLandLandIdRoute: Yre,
        LocaleAppsDeriveanMapMapIdLandListRoute: pre,
        LocaleAppsDeriveanMapMapIdRoadRoadIdViewRoute: Ire
    }, eie = ma._addFileChildren(Xre), tie = {
        LocaleAppsDeriveanMapMapIdRoute: eie
    }, nie = vL._addFileChildren(tie), rie = {
        LocaleAppsDeriveanRootBlueprintIdConflictsRoute: fre,
        LocaleAppsDeriveanRootBlueprintIdDependenciesRoute: dre,
        LocaleAppsDeriveanRootBlueprintIdEditRoute: ure,
        LocaleAppsDeriveanRootBlueprintIdInventoryRoute: cre,
        LocaleAppsDeriveanRootBlueprintIdProductionRoute: lre,
        LocaleAppsDeriveanRootBlueprintIdRequirementsRoute: are,
        LocaleAppsDeriveanRootBlueprintIdViewRoute: sre
    }, iie = ga._addFileChildren(rie), oie = {
        LocaleAppsDeriveanRootRegionIdViewRoute: ore
    }, sie = bL._addFileChildren(oie), aie = {
        LocaleAppsDeriveanRootResourceIdViewRoute: ire
    }, lie = xL._addFileChildren(aie), cie = {
        LocaleAppsDeriveanRootUserIdViewRoute: rre,
        LocaleAppsDeriveanRootUserIdBuildingListRoute: bre
    }, uie = II._addFileChildren(cie), die = {
        LocaleAppsDeriveanRootBlueprintProductionIdDependenciesRoute: Sre,
        LocaleAppsDeriveanRootBlueprintProductionIdRequirementsRoute: Nre,
        LocaleAppsDeriveanRootBlueprintProductionIdResourcesRoute: wre
    }, fie = By._addFileChildren(die), pie = {
        LocaleAppsDeriveanRootEditorRoute: Une,
        LocaleAppsDeriveanRootIndexRoute: Wne,
        LocaleAppsDeriveanRootBlueprintIdRoute: iie,
        LocaleAppsDeriveanRootBlueprintListRoute: ere,
        LocaleAppsDeriveanRootRegionIdRoute: sie,
        LocaleAppsDeriveanRootRegionListRoute: Xne,
        LocaleAppsDeriveanRootResourceIdRoute: lie,
        LocaleAppsDeriveanRootResourceListRoute: Yne,
        LocaleAppsDeriveanRootTagListRoute: Zne,
        LocaleAppsDeriveanRootUserIdRoute: uie,
        LocaleAppsDeriveanRootUserListRoute: Jne,
        LocaleAppsDeriveanRootBlueprintProductionIdRoute: fie
    }, hie = hi._addFileChildren(pie), mie = {
        LocaleAppsDeriveanGameRoute: Vre,
        LocaleAppsDeriveanMapRoute: nie,
        LocaleAppsDeriveanRootRoute: hie,
        LocaleAppsDeriveanDbSchemaRoute: Qne,
        LocaleAppsDeriveanPublicLoginRoute: Gne,
        LocaleAppsDeriveanPublicLogoutRoute: Kne,
        LocaleAppsDeriveanPublicRegisterRoute: Hne
    }, gie = ha._addFileChildren(mie), yie = {
        LocaleIndexRoute: zne,
        LocaleAppsDeriveanRoute: gie
    }, vie = SI._addFileChildren(yie), xie = {
        IndexRoute: Bne,
        LocaleRoute: vie
    }, bie = KS._addFileChildren(xie)._addFileTypes(), IL = new I$({
        defaultOptions: {
            queries: {
                placeholderData: d$
            }
        }
    }), wie = Gq({
        routeTree: bie,
        context: {
            queryClient: IL,
            tva: I8,
            async session () {
                return Vf.parse(null);
            },
            kysely: Pe
        },
        scrollRestoration: !0,
        defaultPendingComponent: mK,
        defaultPreload: "intent",
        defaultPreloadStaleTime: 0,
        defaultPendingMinMs: 200
    }), zO = document.getElementById("app");
    I4({
        limit: {
            maxRequests: 10,
            perMilliseconds: 100
        }
    });
    zO.innerHTML || DK.createRoot(zO).render(d.jsx($.StrictMode, {
        children: d.jsx(R$, {
            client: IL,
            children: d.jsx(Xq, {
                router: wie
            })
        })
    }));
})();
