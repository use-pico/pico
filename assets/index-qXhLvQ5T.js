(async ()=>{
    function v9(t, e) {
        for(var n = 0; n < e.length; n++){
            const r = e[n];
            if (typeof r != "string" && !Array.isArray(r)) {
                for(const i in r)if (i !== "default" && !(i in t)) {
                    const s = Object.getOwnPropertyDescriptor(r, i);
                    s && Object.defineProperty(t, i, s.get ? s : {
                        enumerable: !0,
                        get: ()=>r[i]
                    });
                }
            }
        }
        return Object.freeze(Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }));
    }
    (function() {
        const e = document.createElement("link").relList;
        if (e && e.supports && e.supports("modulepreload")) return;
        for (const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);
        new MutationObserver((i)=>{
            for (const s of i)if (s.type === "childList") for (const o of s.addedNodes)o.tagName === "LINK" && o.rel === "modulepreload" && r(o);
        }).observe(document, {
            childList: !0,
            subtree: !0
        });
        function n(i) {
            const s = {};
            return i.integrity && (s.integrity = i.integrity), i.referrerPolicy && (s.referrerPolicy = i.referrerPolicy), i.crossOrigin === "use-credentials" ? s.credentials = "include" : i.crossOrigin === "anonymous" ? s.credentials = "omit" : s.credentials = "same-origin", s;
        }
        function r(i) {
            if (i.ep) return;
            i.ep = !0;
            const s = n(i);
            fetch(i.href, s);
        }
    })();
    var Ep = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
    function Ao(t) {
        return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
    }
    function x9(t) {
        if (t.__esModule) return t;
        var e = t.default;
        if (typeof e == "function") {
            var n = function r() {
                return this instanceof r ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
            };
            n.prototype = e.prototype;
        } else n = {};
        return Object.defineProperty(n, "__esModule", {
            value: !0
        }), Object.keys(t).forEach(function(r) {
            var i = Object.getOwnPropertyDescriptor(t, r);
            Object.defineProperty(n, r, i.get ? i : {
                enumerable: !0,
                get: function() {
                    return t[r];
                }
            });
        }), n;
    }
    var XC = {
        exports: {}
    }, yx = {}, KC = {
        exports: {}
    }, Hn = {};
    var PL;
    function b9() {
        if (PL) return Hn;
        PL = 1;
        var t = Symbol.for("react.element"), e = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), o = Symbol.for("react.context"), a = Symbol.for("react.forward_ref"), l = Symbol.for("react.suspense"), c = Symbol.for("react.memo"), u = Symbol.for("react.lazy"), f = Symbol.iterator;
        function p(Y) {
            return Y === null || typeof Y != "object" ? null : (Y = f && Y[f] || Y["@@iterator"], typeof Y == "function" ? Y : null);
        }
        var g = {
            isMounted: function() {
                return !1;
            },
            enqueueForceUpdate: function() {},
            enqueueReplaceState: function() {},
            enqueueSetState: function() {}
        }, x = Object.assign, S = {};
        function _(Y, le, ue) {
            this.props = Y, this.context = le, this.refs = S, this.updater = ue || g;
        }
        _.prototype.isReactComponent = {}, _.prototype.setState = function(Y, le) {
            if (typeof Y != "object" && typeof Y != "function" && Y != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
            this.updater.enqueueSetState(this, Y, le, "setState");
        }, _.prototype.forceUpdate = function(Y) {
            this.updater.enqueueForceUpdate(this, Y, "forceUpdate");
        };
        function b() {}
        b.prototype = _.prototype;
        function M(Y, le, ue) {
            this.props = Y, this.context = le, this.refs = S, this.updater = ue || g;
        }
        var E = M.prototype = new b;
        E.constructor = M, x(E, _.prototype), E.isPureReactComponent = !0;
        var T = Array.isArray, k = Object.prototype.hasOwnProperty, N = {
            current: null
        }, D = {
            key: !0,
            ref: !0,
            __self: !0,
            __source: !0
        };
        function L(Y, le, ue) {
            var ie, he = {}, ge = null, ve = null;
            if (le != null) for(ie in le.ref !== void 0 && (ve = le.ref), le.key !== void 0 && (ge = "" + le.key), le)k.call(le, ie) && !D.hasOwnProperty(ie) && (he[ie] = le[ie]);
            var Ee = arguments.length - 2;
            if (Ee === 1) he.children = ue;
            else if (1 < Ee) {
                for(var Ce = Array(Ee), Ne = 0; Ne < Ee; Ne++)Ce[Ne] = arguments[Ne + 2];
                he.children = Ce;
            }
            if (Y && Y.defaultProps) for(ie in Ee = Y.defaultProps, Ee)he[ie] === void 0 && (he[ie] = Ee[ie]);
            return {
                $$typeof: t,
                type: Y,
                key: ge,
                ref: ve,
                props: he,
                _owner: N.current
            };
        }
        function R(Y, le) {
            return {
                $$typeof: t,
                type: Y.type,
                key: le,
                ref: Y.ref,
                props: Y.props,
                _owner: Y._owner
            };
        }
        function A(Y) {
            return typeof Y == "object" && Y !== null && Y.$$typeof === t;
        }
        function P(Y) {
            var le = {
                "=": "=0",
                ":": "=2"
            };
            return "$" + Y.replace(/[=:]/g, function(ue) {
                return le[ue];
            });
        }
        var B = /\/+/g;
        function U(Y, le) {
            return typeof Y == "object" && Y !== null && Y.key != null ? P("" + Y.key) : le.toString(36);
        }
        function j(Y, le, ue, ie, he) {
            var ge = typeof Y;
            (ge === "undefined" || ge === "boolean") && (Y = null);
            var ve = !1;
            if (Y === null) ve = !0;
            else switch(ge){
                case "string":
                case "number":
                    ve = !0;
                    break;
                case "object":
                    switch(Y.$$typeof){
                        case t:
                        case e:
                            ve = !0;
                    }
            }
            if (ve) return ve = Y, he = he(ve), Y = ie === "" ? "." + U(ve, 0) : ie, T(he) ? (ue = "", Y != null && (ue = Y.replace(B, "$&/") + "/"), j(he, le, ue, "", function(Ne) {
                return Ne;
            })) : he != null && (A(he) && (he = R(he, ue + (!he.key || ve && ve.key === he.key ? "" : ("" + he.key).replace(B, "$&/") + "/") + Y)), le.push(he)), 1;
            if (ve = 0, ie = ie === "" ? "." : ie + ":", T(Y)) for(var Ee = 0; Ee < Y.length; Ee++){
                ge = Y[Ee];
                var Ce = ie + U(ge, Ee);
                ve += j(ge, le, ue, Ce, he);
            }
            else if (Ce = p(Y), typeof Ce == "function") for(Y = Ce.call(Y), Ee = 0; !(ge = Y.next()).done;)ge = ge.value, Ce = ie + U(ge, Ee++), ve += j(ge, le, ue, Ce, he);
            else if (ge === "object") throw le = String(Y), Error("Objects are not valid as a React child (found: " + (le === "[object Object]" ? "object with keys {" + Object.keys(Y).join(", ") + "}" : le) + "). If you meant to render a collection of children, use an array instead.");
            return ve;
        }
        function K(Y, le, ue) {
            if (Y == null) return Y;
            var ie = [], he = 0;
            return j(Y, ie, "", "", function(ge) {
                return le.call(ue, ge, he++);
            }), ie;
        }
        function q(Y) {
            if (Y._status === -1) {
                var le = Y._result;
                le = le(), le.then(function(ue) {
                    (Y._status === 0 || Y._status === -1) && (Y._status = 1, Y._result = ue);
                }, function(ue) {
                    (Y._status === 0 || Y._status === -1) && (Y._status = 2, Y._result = ue);
                }), Y._status === -1 && (Y._status = 0, Y._result = le);
            }
            if (Y._status === 1) return Y._result.default;
            throw Y._result;
        }
        var te = {
            current: null
        }, W = {
            transition: null
        }, J = {
            ReactCurrentDispatcher: te,
            ReactCurrentBatchConfig: W,
            ReactCurrentOwner: N
        };
        function Q() {
            throw Error("act(...) is not supported in production builds of React.");
        }
        return Hn.Children = {
            map: K,
            forEach: function(Y, le, ue) {
                K(Y, function() {
                    le.apply(this, arguments);
                }, ue);
            },
            count: function(Y) {
                var le = 0;
                return K(Y, function() {
                    le++;
                }), le;
            },
            toArray: function(Y) {
                return K(Y, function(le) {
                    return le;
                }) || [];
            },
            only: function(Y) {
                if (!A(Y)) throw Error("React.Children.only expected to receive a single React element child.");
                return Y;
            }
        }, Hn.Component = _, Hn.Fragment = n, Hn.Profiler = i, Hn.PureComponent = M, Hn.StrictMode = r, Hn.Suspense = l, Hn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = J, Hn.act = Q, Hn.cloneElement = function(Y, le, ue) {
            if (Y == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + Y + ".");
            var ie = x({}, Y.props), he = Y.key, ge = Y.ref, ve = Y._owner;
            if (le != null) {
                if (le.ref !== void 0 && (ge = le.ref, ve = N.current), le.key !== void 0 && (he = "" + le.key), Y.type && Y.type.defaultProps) var Ee = Y.type.defaultProps;
                for(Ce in le)k.call(le, Ce) && !D.hasOwnProperty(Ce) && (ie[Ce] = le[Ce] === void 0 && Ee !== void 0 ? Ee[Ce] : le[Ce]);
            }
            var Ce = arguments.length - 2;
            if (Ce === 1) ie.children = ue;
            else if (1 < Ce) {
                Ee = Array(Ce);
                for(var Ne = 0; Ne < Ce; Ne++)Ee[Ne] = arguments[Ne + 2];
                ie.children = Ee;
            }
            return {
                $$typeof: t,
                type: Y.type,
                key: he,
                ref: ge,
                props: ie,
                _owner: ve
            };
        }, Hn.createContext = function(Y) {
            return Y = {
                $$typeof: o,
                _currentValue: Y,
                _currentValue2: Y,
                _threadCount: 0,
                Provider: null,
                Consumer: null,
                _defaultValue: null,
                _globalName: null
            }, Y.Provider = {
                $$typeof: s,
                _context: Y
            }, Y.Consumer = Y;
        }, Hn.createElement = L, Hn.createFactory = function(Y) {
            var le = L.bind(null, Y);
            return le.type = Y, le;
        }, Hn.createRef = function() {
            return {
                current: null
            };
        }, Hn.forwardRef = function(Y) {
            return {
                $$typeof: a,
                render: Y
            };
        }, Hn.isValidElement = A, Hn.lazy = function(Y) {
            return {
                $$typeof: u,
                _payload: {
                    _status: -1,
                    _result: Y
                },
                _init: q
            };
        }, Hn.memo = function(Y, le) {
            return {
                $$typeof: c,
                type: Y,
                compare: le === void 0 ? null : le
            };
        }, Hn.startTransition = function(Y) {
            var le = W.transition;
            W.transition = {};
            try {
                Y();
            } finally{
                W.transition = le;
            }
        }, Hn.unstable_act = Q, Hn.useCallback = function(Y, le) {
            return te.current.useCallback(Y, le);
        }, Hn.useContext = function(Y) {
            return te.current.useContext(Y);
        }, Hn.useDebugValue = function() {}, Hn.useDeferredValue = function(Y) {
            return te.current.useDeferredValue(Y);
        }, Hn.useEffect = function(Y, le) {
            return te.current.useEffect(Y, le);
        }, Hn.useId = function() {
            return te.current.useId();
        }, Hn.useImperativeHandle = function(Y, le, ue) {
            return te.current.useImperativeHandle(Y, le, ue);
        }, Hn.useInsertionEffect = function(Y, le) {
            return te.current.useInsertionEffect(Y, le);
        }, Hn.useLayoutEffect = function(Y, le) {
            return te.current.useLayoutEffect(Y, le);
        }, Hn.useMemo = function(Y, le) {
            return te.current.useMemo(Y, le);
        }, Hn.useReducer = function(Y, le, ue) {
            return te.current.useReducer(Y, le, ue);
        }, Hn.useRef = function(Y) {
            return te.current.useRef(Y);
        }, Hn.useState = function(Y) {
            return te.current.useState(Y);
        }, Hn.useSyncExternalStore = function(Y, le, ue) {
            return te.current.useSyncExternalStore(Y, le, ue);
        }, Hn.useTransition = function() {
            return te.current.useTransition();
        }, Hn.version = "18.3.1", Hn;
    }
    var kL;
    function rv() {
        return kL || (kL = 1, KC.exports = b9()), KC.exports;
    }
    var OL;
    function w9() {
        if (OL) return yx;
        OL = 1;
        var t = rv(), e = Symbol.for("react.element"), n = Symbol.for("react.fragment"), r = Object.prototype.hasOwnProperty, i = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, s = {
            key: !0,
            ref: !0,
            __self: !0,
            __source: !0
        };
        function o(a, l, c) {
            var u, f = {}, p = null, g = null;
            c !== void 0 && (p = "" + c), l.key !== void 0 && (p = "" + l.key), l.ref !== void 0 && (g = l.ref);
            for(u in l)r.call(l, u) && !s.hasOwnProperty(u) && (f[u] = l[u]);
            if (a && a.defaultProps) for(u in l = a.defaultProps, l)f[u] === void 0 && (f[u] = l[u]);
            return {
                $$typeof: e,
                type: a,
                key: p,
                ref: g,
                props: f,
                _owner: i.current
            };
        }
        return yx.Fragment = n, yx.jsx = o, yx.jsxs = o, yx;
    }
    var LL;
    function _9() {
        return LL || (LL = 1, XC.exports = w9()), XC.exports;
    }
    var v = _9(), iv = class {
        constructor(){
            this.listeners = new Set, this.subscribe = this.subscribe.bind(this);
        }
        subscribe(t) {
            return this.listeners.add(t), this.onSubscribe(), ()=>{
                this.listeners.delete(t), this.onUnsubscribe();
            };
        }
        hasListeners() {
            return this.listeners.size > 0;
        }
        onSubscribe() {}
        onUnsubscribe() {}
    }, Gp = typeof window > "u" || "Deno" in globalThis;
    function rl() {}
    function S9(t, e) {
        return typeof t == "function" ? t(e) : t;
    }
    function WN(t) {
        return typeof t == "number" && t >= 0 && t !== 1 / 0;
    }
    function L4(t, e) {
        return Math.max(t + (e || 0) - Date.now(), 0);
    }
    function gy(t, e) {
        return typeof t == "function" ? t(e) : t;
    }
    function ql(t, e) {
        return typeof t == "function" ? t(e) : t;
    }
    function DL(t, e) {
        const { type: n = "all", exact: r, fetchStatus: i, predicate: s, queryKey: o, stale: a } = t;
        if (o) {
            if (r) {
                if (e.queryHash !== Rk(o, e.options)) return !1;
            } else if (!k0(e.queryKey, o)) return !1;
        }
        if (n !== "all") {
            const l = e.isActive();
            if (n === "active" && !l || n === "inactive" && l) return !1;
        }
        return !(typeof a == "boolean" && e.isStale() !== a || i && i !== e.state.fetchStatus || s && !s(e));
    }
    function FL(t, e) {
        const { exact: n, status: r, predicate: i, mutationKey: s } = t;
        if (s) {
            if (!e.options.mutationKey) return !1;
            if (n) {
                if (Xp(e.options.mutationKey) !== Xp(s)) return !1;
            } else if (!k0(e.options.mutationKey, s)) return !1;
        }
        return !(r && e.state.status !== r || i && !i(e));
    }
    function Rk(t, e) {
        return (e?.queryKeyHashFn || Xp)(t);
    }
    function Xp(t) {
        return JSON.stringify(t, (e, n)=>qN(n) ? Object.keys(n).sort().reduce((r, i)=>(r[i] = n[i], r), {}) : n);
    }
    function k0(t, e) {
        return t === e ? !0 : typeof t != typeof e ? !1 : t && e && typeof t == "object" && typeof e == "object" ? !Object.keys(e).some((n)=>!k0(t[n], e[n])) : !1;
    }
    function Ak(t, e) {
        if (t === e) return t;
        const n = jL(t) && jL(e);
        if (n || qN(t) && qN(e)) {
            const r = n ? t : Object.keys(t), i = r.length, s = n ? e : Object.keys(e), o = s.length, a = n ? [] : {};
            let l = 0;
            for(let c = 0; c < o; c++){
                const u = n ? c : s[c];
                (!n && r.includes(u) || n) && t[u] === void 0 && e[u] === void 0 ? (a[u] = void 0, l++) : (a[u] = Ak(t[u], e[u]), a[u] === t[u] && t[u] !== void 0 && l++);
            }
            return i === o && l === i ? t : a;
        }
        return e;
    }
    function U1(t, e) {
        if (!e || Object.keys(t).length !== Object.keys(e).length) return !1;
        for(const n in t)if (t[n] !== e[n]) return !1;
        return !0;
    }
    function jL(t) {
        return Array.isArray(t) && t.length === Object.keys(t).length;
    }
    function qN(t) {
        if (!BL(t)) return !1;
        const e = t.constructor;
        if (e === void 0) return !0;
        const n = e.prototype;
        return !(!BL(n) || !n.hasOwnProperty("isPrototypeOf") || Object.getPrototypeOf(t) !== Object.prototype);
    }
    function BL(t) {
        return Object.prototype.toString.call(t) === "[object Object]";
    }
    function E9(t) {
        return new Promise((e)=>{
            setTimeout(e, t);
        });
    }
    function HN(t, e, n) {
        return typeof n.structuralSharing == "function" ? n.structuralSharing(t, e) : n.structuralSharing !== !1 ? Ak(t, e) : e;
    }
    function M9(t) {
        return t;
    }
    function T9(t, e, n = 0) {
        const r = [
            ...t,
            e
        ];
        return n && r.length > n ? r.slice(1) : r;
    }
    function C9(t, e, n = 0) {
        const r = [
            e,
            ...t
        ];
        return n && r.length > n ? r.slice(0, -1) : r;
    }
    var Nk = Symbol();
    function D4(t, e) {
        return !t.queryFn && e?.initialPromise ? ()=>e.initialPromise : !t.queryFn || t.queryFn === Nk ? ()=>Promise.reject(new Error(`Missing queryFn: '${t.queryHash}'`)) : t.queryFn;
    }
    var I9 = class extends iv {
        #e;
        #t;
        #n;
        constructor(){
            super(), this.#n = (t)=>{
                if (!Gp && window.addEventListener) {
                    const e = ()=>t();
                    return window.addEventListener("visibilitychange", e, !1), ()=>{
                        window.removeEventListener("visibilitychange", e);
                    };
                }
            };
        }
        onSubscribe() {
            this.#t || this.setEventListener(this.#n);
        }
        onUnsubscribe() {
            this.hasListeners() || (this.#t?.(), this.#t = void 0);
        }
        setEventListener(t) {
            this.#n = t, this.#t?.(), this.#t = t((e)=>{
                typeof e == "boolean" ? this.setFocused(e) : this.onFocus();
            });
        }
        setFocused(t) {
            this.#e !== t && (this.#e = t, this.onFocus());
        }
        onFocus() {
            const t = this.isFocused();
            this.listeners.forEach((e)=>{
                e(t);
            });
        }
        isFocused() {
            return typeof this.#e == "boolean" ? this.#e : globalThis.document?.visibilityState !== "hidden";
        }
    }, Pk = new I9, R9 = class extends iv {
        #e = !0;
        #t;
        #n;
        constructor(){
            super(), this.#n = (t)=>{
                if (!Gp && window.addEventListener) {
                    const e = ()=>t(!0), n = ()=>t(!1);
                    return window.addEventListener("online", e, !1), window.addEventListener("offline", n, !1), ()=>{
                        window.removeEventListener("online", e), window.removeEventListener("offline", n);
                    };
                }
            };
        }
        onSubscribe() {
            this.#t || this.setEventListener(this.#n);
        }
        onUnsubscribe() {
            this.hasListeners() || (this.#t?.(), this.#t = void 0);
        }
        setEventListener(t) {
            this.#n = t, this.#t?.(), this.#t = t(this.setOnline.bind(this));
        }
        setOnline(t) {
            this.#e !== t && (this.#e = t, this.listeners.forEach((n)=>{
                n(t);
            }));
        }
        isOnline() {
            return this.#e;
        }
    }, z1 = new R9;
    function $N() {
        let t, e;
        const n = new Promise((i, s)=>{
            t = i, e = s;
        });
        n.status = "pending", n.catch(()=>{});
        function r(i) {
            Object.assign(n, i), delete n.resolve, delete n.reject;
        }
        return n.resolve = (i)=>{
            r({
                status: "fulfilled",
                value: i
            }), t(i);
        }, n.reject = (i)=>{
            r({
                status: "rejected",
                reason: i
            }), e(i);
        }, n;
    }
    function A9(t) {
        return Math.min(1e3 * 2 ** t, 3e4);
    }
    function F4(t) {
        return (t ?? "online") === "online" ? z1.isOnline() : !0;
    }
    var j4 = class extends Error {
        constructor(t){
            super("CancelledError"), this.revert = t?.revert, this.silent = t?.silent;
        }
    };
    function YC(t) {
        return t instanceof j4;
    }
    function B4(t) {
        let e = !1, n = 0, r = !1, i;
        const s = $N(), o = (S)=>{
            r || (p(new j4(S)), t.abort?.());
        }, a = ()=>{
            e = !0;
        }, l = ()=>{
            e = !1;
        }, c = ()=>Pk.isFocused() && (t.networkMode === "always" || z1.isOnline()) && t.canRun(), u = ()=>F4(t.networkMode) && t.canRun(), f = (S)=>{
            r || (r = !0, t.onSuccess?.(S), i?.(), s.resolve(S));
        }, p = (S)=>{
            r || (r = !0, t.onError?.(S), i?.(), s.reject(S));
        }, g = ()=>new Promise((S)=>{
                i = (_)=>{
                    (r || c()) && S(_);
                }, t.onPause?.();
            }).then(()=>{
                i = void 0, r || t.onContinue?.();
            }), x = ()=>{
            if (r) return;
            let S;
            const _ = n === 0 ? t.initialPromise : void 0;
            try {
                S = _ ?? t.fn();
            } catch (b) {
                S = Promise.reject(b);
            }
            Promise.resolve(S).then(f).catch((b)=>{
                if (r) return;
                const M = t.retry ?? (Gp ? 0 : 3), E = t.retryDelay ?? A9, T = typeof E == "function" ? E(n, b) : E, k = M === !0 || typeof M == "number" && n < M || typeof M == "function" && M(n, b);
                if (e || !k) {
                    p(b);
                    return;
                }
                n++, t.onFail?.(n, b), E9(T).then(()=>c() ? void 0 : g()).then(()=>{
                    e ? p(b) : x();
                });
            });
        };
        return {
            promise: s,
            cancel: o,
            continue: ()=>(i?.(), s),
            cancelRetry: a,
            continueRetry: l,
            canStart: u,
            start: ()=>(u() ? x() : g().then(x), s)
        };
    }
    function N9() {
        let t = [], e = 0, n = (a)=>{
            a();
        }, r = (a)=>{
            a();
        }, i = (a)=>setTimeout(a, 0);
        const s = (a)=>{
            e ? t.push(a) : i(()=>{
                n(a);
            });
        }, o = ()=>{
            const a = t;
            t = [], a.length && i(()=>{
                r(()=>{
                    a.forEach((l)=>{
                        n(l);
                    });
                });
            });
        };
        return {
            batch: (a)=>{
                let l;
                e++;
                try {
                    l = a();
                } finally{
                    e--, e || o();
                }
                return l;
            },
            batchCalls: (a)=>(...l)=>{
                    s(()=>{
                        a(...l);
                    });
                },
            schedule: s,
            setNotifyFunction: (a)=>{
                n = a;
            },
            setBatchNotifyFunction: (a)=>{
                r = a;
            },
            setScheduler: (a)=>{
                i = a;
            }
        };
    }
    var ji = N9(), U4 = class {
        #e;
        destroy() {
            this.clearGcTimeout();
        }
        scheduleGc() {
            this.clearGcTimeout(), WN(this.gcTime) && (this.#e = setTimeout(()=>{
                this.optionalRemove();
            }, this.gcTime));
        }
        updateGcTime(t) {
            this.gcTime = Math.max(this.gcTime || 0, t ?? (Gp ? 1 / 0 : 5 * 60 * 1e3));
        }
        clearGcTimeout() {
            this.#e && (clearTimeout(this.#e), this.#e = void 0);
        }
    }, P9 = class extends U4 {
        #e;
        #t;
        #n;
        #r;
        #s;
        #c;
        #o;
        constructor(t){
            super(), this.#o = !1, this.#c = t.defaultOptions, this.setOptions(t.options), this.observers = [], this.#r = t.client, this.#n = this.#r.getQueryCache(), this.queryKey = t.queryKey, this.queryHash = t.queryHash, this.#e = k9(this.options), this.state = t.state ?? this.#e, this.scheduleGc();
        }
        get meta() {
            return this.options.meta;
        }
        get promise() {
            return this.#s?.promise;
        }
        setOptions(t) {
            this.options = {
                ...this.#c,
                ...t
            }, this.updateGcTime(this.options.gcTime);
        }
        optionalRemove() {
            !this.observers.length && this.state.fetchStatus === "idle" && this.#n.remove(this);
        }
        setData(t, e) {
            const n = HN(this.state.data, t, this.options);
            return this.#a({
                data: n,
                type: "success",
                dataUpdatedAt: e?.updatedAt,
                manual: e?.manual
            }), n;
        }
        setState(t, e) {
            this.#a({
                type: "setState",
                state: t,
                setStateOptions: e
            });
        }
        cancel(t) {
            const e = this.#s?.promise;
            return this.#s?.cancel(t), e ? e.then(rl).catch(rl) : Promise.resolve();
        }
        destroy() {
            super.destroy(), this.cancel({
                silent: !0
            });
        }
        reset() {
            this.destroy(), this.setState(this.#e);
        }
        isActive() {
            return this.observers.some((t)=>ql(t.options.enabled, this) !== !1);
        }
        isDisabled() {
            return this.getObserversCount() > 0 ? !this.isActive() : this.options.queryFn === Nk || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;
        }
        isStale() {
            return this.state.isInvalidated ? !0 : this.getObserversCount() > 0 ? this.observers.some((t)=>t.getCurrentResult().isStale) : this.state.data === void 0;
        }
        isStaleByTime(t = 0) {
            return this.state.isInvalidated || this.state.data === void 0 || !L4(this.state.dataUpdatedAt, t);
        }
        onFocus() {
            this.observers.find((e)=>e.shouldFetchOnWindowFocus())?.refetch({
                cancelRefetch: !1
            }), this.#s?.continue();
        }
        onOnline() {
            this.observers.find((e)=>e.shouldFetchOnReconnect())?.refetch({
                cancelRefetch: !1
            }), this.#s?.continue();
        }
        addObserver(t) {
            this.observers.includes(t) || (this.observers.push(t), this.clearGcTimeout(), this.#n.notify({
                type: "observerAdded",
                query: this,
                observer: t
            }));
        }
        removeObserver(t) {
            this.observers.includes(t) && (this.observers = this.observers.filter((e)=>e !== t), this.observers.length || (this.#s && (this.#o ? this.#s.cancel({
                revert: !0
            }) : this.#s.cancelRetry()), this.scheduleGc()), this.#n.notify({
                type: "observerRemoved",
                query: this,
                observer: t
            }));
        }
        getObserversCount() {
            return this.observers.length;
        }
        invalidate() {
            this.state.isInvalidated || this.#a({
                type: "invalidate"
            });
        }
        fetch(t, e) {
            if (this.state.fetchStatus !== "idle") {
                if (this.state.data !== void 0 && e?.cancelRefetch) this.cancel({
                    silent: !0
                });
                else if (this.#s) return this.#s.continueRetry(), this.#s.promise;
            }
            if (t && this.setOptions(t), !this.options.queryFn) {
                const a = this.observers.find((l)=>l.options.queryFn);
                a && this.setOptions(a.options);
            }
            const n = new AbortController, r = (a)=>{
                Object.defineProperty(a, "signal", {
                    enumerable: !0,
                    get: ()=>(this.#o = !0, n.signal)
                });
            }, i = ()=>{
                const a = D4(this.options, e), l = {
                    client: this.#r,
                    queryKey: this.queryKey,
                    meta: this.meta
                };
                return r(l), this.#o = !1, this.options.persister ? this.options.persister(a, l, this) : a(l);
            }, s = {
                fetchOptions: e,
                options: this.options,
                queryKey: this.queryKey,
                client: this.#r,
                state: this.state,
                fetchFn: i
            };
            r(s), this.options.behavior?.onFetch(s, this), this.#t = this.state, (this.state.fetchStatus === "idle" || this.state.fetchMeta !== s.fetchOptions?.meta) && this.#a({
                type: "fetch",
                meta: s.fetchOptions?.meta
            });
            const o = (a)=>{
                YC(a) && a.silent || this.#a({
                    type: "error",
                    error: a
                }), YC(a) || (this.#n.config.onError?.(a, this), this.#n.config.onSettled?.(this.state.data, a, this)), this.scheduleGc();
            };
            return this.#s = B4({
                initialPromise: e?.initialPromise,
                fn: s.fetchFn,
                abort: n.abort.bind(n),
                onSuccess: (a)=>{
                    if (a === void 0) {
                        o(new Error(`${this.queryHash} data is undefined`));
                        return;
                    }
                    try {
                        this.setData(a);
                    } catch (l) {
                        o(l);
                        return;
                    }
                    this.#n.config.onSuccess?.(a, this), this.#n.config.onSettled?.(a, this.state.error, this), this.scheduleGc();
                },
                onError: o,
                onFail: (a, l)=>{
                    this.#a({
                        type: "failed",
                        failureCount: a,
                        error: l
                    });
                },
                onPause: ()=>{
                    this.#a({
                        type: "pause"
                    });
                },
                onContinue: ()=>{
                    this.#a({
                        type: "continue"
                    });
                },
                retry: s.options.retry,
                retryDelay: s.options.retryDelay,
                networkMode: s.options.networkMode,
                canRun: ()=>!0
            }), this.#s.start();
        }
        #a(t) {
            const e = (n)=>{
                switch(t.type){
                    case "failed":
                        return {
                            ...n,
                            fetchFailureCount: t.failureCount,
                            fetchFailureReason: t.error
                        };
                    case "pause":
                        return {
                            ...n,
                            fetchStatus: "paused"
                        };
                    case "continue":
                        return {
                            ...n,
                            fetchStatus: "fetching"
                        };
                    case "fetch":
                        return {
                            ...n,
                            ...z4(n.data, this.options),
                            fetchMeta: t.meta ?? null
                        };
                    case "success":
                        return {
                            ...n,
                            data: t.data,
                            dataUpdateCount: n.dataUpdateCount + 1,
                            dataUpdatedAt: t.dataUpdatedAt ?? Date.now(),
                            error: null,
                            isInvalidated: !1,
                            status: "success",
                            ...!t.manual && {
                                fetchStatus: "idle",
                                fetchFailureCount: 0,
                                fetchFailureReason: null
                            }
                        };
                    case "error":
                        const r = t.error;
                        return YC(r) && r.revert && this.#t ? {
                            ...this.#t,
                            fetchStatus: "idle"
                        } : {
                            ...n,
                            error: r,
                            errorUpdateCount: n.errorUpdateCount + 1,
                            errorUpdatedAt: Date.now(),
                            fetchFailureCount: n.fetchFailureCount + 1,
                            fetchFailureReason: r,
                            fetchStatus: "idle",
                            status: "error"
                        };
                    case "invalidate":
                        return {
                            ...n,
                            isInvalidated: !0
                        };
                    case "setState":
                        return {
                            ...n,
                            ...t.state
                        };
                }
            };
            this.state = e(this.state), ji.batch(()=>{
                this.observers.forEach((n)=>{
                    n.onQueryUpdate();
                }), this.#n.notify({
                    query: this,
                    type: "updated",
                    action: t
                });
            });
        }
    };
    function z4(t, e) {
        return {
            fetchFailureCount: 0,
            fetchFailureReason: null,
            fetchStatus: F4(e.networkMode) ? "fetching" : "paused",
            ...t === void 0 && {
                error: null,
                status: "pending"
            }
        };
    }
    function k9(t) {
        const e = typeof t.initialData == "function" ? t.initialData() : t.initialData, n = e !== void 0, r = n ? typeof t.initialDataUpdatedAt == "function" ? t.initialDataUpdatedAt() : t.initialDataUpdatedAt : 0;
        return {
            data: e,
            dataUpdateCount: 0,
            dataUpdatedAt: n ? r ?? Date.now() : 0,
            error: null,
            errorUpdateCount: 0,
            errorUpdatedAt: 0,
            fetchFailureCount: 0,
            fetchFailureReason: null,
            fetchMeta: null,
            isInvalidated: !1,
            status: n ? "success" : "pending",
            fetchStatus: "idle"
        };
    }
    var O9 = class extends iv {
        constructor(t = {}){
            super(), this.config = t, this.#e = new Map;
        }
        #e;
        build(t, e, n) {
            const r = e.queryKey, i = e.queryHash ?? Rk(r, e);
            let s = this.get(i);
            return s || (s = new P9({
                client: t,
                queryKey: r,
                queryHash: i,
                options: t.defaultQueryOptions(e),
                state: n,
                defaultOptions: t.getQueryDefaults(r)
            }), this.add(s)), s;
        }
        add(t) {
            this.#e.has(t.queryHash) || (this.#e.set(t.queryHash, t), this.notify({
                type: "added",
                query: t
            }));
        }
        remove(t) {
            const e = this.#e.get(t.queryHash);
            e && (t.destroy(), e === t && this.#e.delete(t.queryHash), this.notify({
                type: "removed",
                query: t
            }));
        }
        clear() {
            ji.batch(()=>{
                this.getAll().forEach((t)=>{
                    this.remove(t);
                });
            });
        }
        get(t) {
            return this.#e.get(t);
        }
        getAll() {
            return [
                ...this.#e.values()
            ];
        }
        find(t) {
            const e = {
                exact: !0,
                ...t
            };
            return this.getAll().find((n)=>DL(e, n));
        }
        findAll(t = {}) {
            const e = this.getAll();
            return Object.keys(t).length > 0 ? e.filter((n)=>DL(t, n)) : e;
        }
        notify(t) {
            ji.batch(()=>{
                this.listeners.forEach((e)=>{
                    e(t);
                });
            });
        }
        onFocus() {
            ji.batch(()=>{
                this.getAll().forEach((t)=>{
                    t.onFocus();
                });
            });
        }
        onOnline() {
            ji.batch(()=>{
                this.getAll().forEach((t)=>{
                    t.onOnline();
                });
            });
        }
    }, L9 = class extends U4 {
        #e;
        #t;
        #n;
        constructor(t){
            super(), this.mutationId = t.mutationId, this.#t = t.mutationCache, this.#e = [], this.state = t.state || V4(), this.setOptions(t.options), this.scheduleGc();
        }
        setOptions(t) {
            this.options = t, this.updateGcTime(this.options.gcTime);
        }
        get meta() {
            return this.options.meta;
        }
        addObserver(t) {
            this.#e.includes(t) || (this.#e.push(t), this.clearGcTimeout(), this.#t.notify({
                type: "observerAdded",
                mutation: this,
                observer: t
            }));
        }
        removeObserver(t) {
            this.#e = this.#e.filter((e)=>e !== t), this.scheduleGc(), this.#t.notify({
                type: "observerRemoved",
                mutation: this,
                observer: t
            });
        }
        optionalRemove() {
            this.#e.length || (this.state.status === "pending" ? this.scheduleGc() : this.#t.remove(this));
        }
        continue() {
            return this.#n?.continue() ?? this.execute(this.state.variables);
        }
        async execute(t) {
            this.#n = B4({
                fn: ()=>this.options.mutationFn ? this.options.mutationFn(t) : Promise.reject(new Error("No mutationFn found")),
                onFail: (r, i)=>{
                    this.#r({
                        type: "failed",
                        failureCount: r,
                        error: i
                    });
                },
                onPause: ()=>{
                    this.#r({
                        type: "pause"
                    });
                },
                onContinue: ()=>{
                    this.#r({
                        type: "continue"
                    });
                },
                retry: this.options.retry ?? 0,
                retryDelay: this.options.retryDelay,
                networkMode: this.options.networkMode,
                canRun: ()=>this.#t.canRun(this)
            });
            const e = this.state.status === "pending", n = !this.#n.canStart();
            try {
                if (!e) {
                    this.#r({
                        type: "pending",
                        variables: t,
                        isPaused: n
                    }), await this.#t.config.onMutate?.(t, this);
                    const i = await this.options.onMutate?.(t);
                    i !== this.state.context && this.#r({
                        type: "pending",
                        context: i,
                        variables: t,
                        isPaused: n
                    });
                }
                const r = await this.#n.start();
                return await this.#t.config.onSuccess?.(r, t, this.state.context, this), await this.options.onSuccess?.(r, t, this.state.context), await this.#t.config.onSettled?.(r, null, this.state.variables, this.state.context, this), await this.options.onSettled?.(r, null, t, this.state.context), this.#r({
                    type: "success",
                    data: r
                }), r;
            } catch (r) {
                try {
                    throw await this.#t.config.onError?.(r, t, this.state.context, this), await this.options.onError?.(r, t, this.state.context), await this.#t.config.onSettled?.(void 0, r, this.state.variables, this.state.context, this), await this.options.onSettled?.(void 0, r, t, this.state.context), r;
                } finally{
                    this.#r({
                        type: "error",
                        error: r
                    });
                }
            } finally{
                this.#t.runNext(this);
            }
        }
        #r(t) {
            const e = (n)=>{
                switch(t.type){
                    case "failed":
                        return {
                            ...n,
                            failureCount: t.failureCount,
                            failureReason: t.error
                        };
                    case "pause":
                        return {
                            ...n,
                            isPaused: !0
                        };
                    case "continue":
                        return {
                            ...n,
                            isPaused: !1
                        };
                    case "pending":
                        return {
                            ...n,
                            context: t.context,
                            data: void 0,
                            failureCount: 0,
                            failureReason: null,
                            error: null,
                            isPaused: t.isPaused,
                            status: "pending",
                            variables: t.variables,
                            submittedAt: Date.now()
                        };
                    case "success":
                        return {
                            ...n,
                            data: t.data,
                            failureCount: 0,
                            failureReason: null,
                            error: null,
                            status: "success",
                            isPaused: !1
                        };
                    case "error":
                        return {
                            ...n,
                            data: void 0,
                            error: t.error,
                            failureCount: n.failureCount + 1,
                            failureReason: t.error,
                            isPaused: !1,
                            status: "error"
                        };
                }
            };
            this.state = e(this.state), ji.batch(()=>{
                this.#e.forEach((n)=>{
                    n.onMutationUpdate(t);
                }), this.#t.notify({
                    mutation: this,
                    type: "updated",
                    action: t
                });
            });
        }
    };
    function V4() {
        return {
            context: void 0,
            data: void 0,
            error: null,
            failureCount: 0,
            failureReason: null,
            isPaused: !1,
            status: "idle",
            variables: void 0,
            submittedAt: 0
        };
    }
    var D9 = class extends iv {
        constructor(t = {}){
            super(), this.config = t, this.#e = new Set, this.#t = new Map, this.#n = 0;
        }
        #e;
        #t;
        #n;
        build(t, e, n) {
            const r = new L9({
                mutationCache: this,
                mutationId: ++this.#n,
                options: t.defaultMutationOptions(e),
                state: n
            });
            return this.add(r), r;
        }
        add(t) {
            this.#e.add(t);
            const e = __(t);
            if (typeof e == "string") {
                const n = this.#t.get(e);
                n ? n.push(t) : this.#t.set(e, [
                    t
                ]);
            }
            this.notify({
                type: "added",
                mutation: t
            });
        }
        remove(t) {
            if (this.#e.delete(t)) {
                const e = __(t);
                if (typeof e == "string") {
                    const n = this.#t.get(e);
                    if (n) if (n.length > 1) {
                        const r = n.indexOf(t);
                        r !== -1 && n.splice(r, 1);
                    } else n[0] === t && this.#t.delete(e);
                }
            }
            this.notify({
                type: "removed",
                mutation: t
            });
        }
        canRun(t) {
            const e = __(t);
            if (typeof e == "string") {
                const r = this.#t.get(e)?.find((i)=>i.state.status === "pending");
                return !r || r === t;
            } else return !0;
        }
        runNext(t) {
            const e = __(t);
            return typeof e == "string" ? this.#t.get(e)?.find((r)=>r !== t && r.state.isPaused)?.continue() ?? Promise.resolve() : Promise.resolve();
        }
        clear() {
            ji.batch(()=>{
                this.#e.forEach((t)=>{
                    this.notify({
                        type: "removed",
                        mutation: t
                    });
                }), this.#e.clear(), this.#t.clear();
            });
        }
        getAll() {
            return Array.from(this.#e);
        }
        find(t) {
            const e = {
                exact: !0,
                ...t
            };
            return this.getAll().find((n)=>FL(e, n));
        }
        findAll(t = {}) {
            return this.getAll().filter((e)=>FL(t, e));
        }
        notify(t) {
            ji.batch(()=>{
                this.listeners.forEach((e)=>{
                    e(t);
                });
            });
        }
        resumePausedMutations() {
            const t = this.getAll().filter((e)=>e.state.isPaused);
            return ji.batch(()=>Promise.all(t.map((e)=>e.continue().catch(rl))));
        }
    };
    function __(t) {
        return t.options.scope?.id;
    }
    function UL(t) {
        return {
            onFetch: (e, n)=>{
                const r = e.options, i = e.fetchOptions?.meta?.fetchMore?.direction, s = e.state.data?.pages || [], o = e.state.data?.pageParams || [];
                let a = {
                    pages: [],
                    pageParams: []
                }, l = 0;
                const c = async ()=>{
                    let u = !1;
                    const f = (x)=>{
                        Object.defineProperty(x, "signal", {
                            enumerable: !0,
                            get: ()=>(e.signal.aborted ? u = !0 : e.signal.addEventListener("abort", ()=>{
                                    u = !0;
                                }), e.signal)
                        });
                    }, p = D4(e.options, e.fetchOptions), g = async (x, S, _)=>{
                        if (u) return Promise.reject();
                        if (S == null && x.pages.length) return Promise.resolve(x);
                        const b = {
                            client: e.client,
                            queryKey: e.queryKey,
                            pageParam: S,
                            direction: _ ? "backward" : "forward",
                            meta: e.options.meta
                        };
                        f(b);
                        const M = await p(b), { maxPages: E } = e.options, T = _ ? C9 : T9;
                        return {
                            pages: T(x.pages, M, E),
                            pageParams: T(x.pageParams, S, E)
                        };
                    };
                    if (i && s.length) {
                        const x = i === "backward", S = x ? F9 : zL, _ = {
                            pages: s,
                            pageParams: o
                        }, b = S(r, _);
                        a = await g(_, b, x);
                    } else {
                        const x = t ?? s.length;
                        do {
                            const S = l === 0 ? o[0] ?? r.initialPageParam : zL(r, a);
                            if (l > 0 && S == null) break;
                            a = await g(a, S), l++;
                        }while (l < x);
                    }
                    return a;
                };
                e.options.persister ? e.fetchFn = ()=>e.options.persister?.(c, {
                        client: e.client,
                        queryKey: e.queryKey,
                        meta: e.options.meta,
                        signal: e.signal
                    }, n) : e.fetchFn = c;
            }
        };
    }
    function zL(t, { pages: e, pageParams: n }) {
        const r = e.length - 1;
        return e.length > 0 ? t.getNextPageParam(e[r], e, n[r], n) : void 0;
    }
    function F9(t, { pages: e, pageParams: n }) {
        return e.length > 0 ? t.getPreviousPageParam?.(e[0], e, n[0], n) : void 0;
    }
    var j9 = class {
        #e;
        #t;
        #n;
        #r;
        #s;
        #c;
        #o;
        #a;
        constructor(t = {}){
            this.#e = t.queryCache || new O9, this.#t = t.mutationCache || new D9, this.#n = t.defaultOptions || {}, this.#r = new Map, this.#s = new Map, this.#c = 0;
        }
        mount() {
            this.#c++, this.#c === 1 && (this.#o = Pk.subscribe(async (t)=>{
                t && (await this.resumePausedMutations(), this.#e.onFocus());
            }), this.#a = z1.subscribe(async (t)=>{
                t && (await this.resumePausedMutations(), this.#e.onOnline());
            }));
        }
        unmount() {
            this.#c--, this.#c === 0 && (this.#o?.(), this.#o = void 0, this.#a?.(), this.#a = void 0);
        }
        isFetching(t) {
            return this.#e.findAll({
                ...t,
                fetchStatus: "fetching"
            }).length;
        }
        isMutating(t) {
            return this.#t.findAll({
                ...t,
                status: "pending"
            }).length;
        }
        getQueryData(t) {
            const e = this.defaultQueryOptions({
                queryKey: t
            });
            return this.#e.get(e.queryHash)?.state.data;
        }
        ensureQueryData(t) {
            const e = this.defaultQueryOptions(t), n = this.#e.build(this, e), r = n.state.data;
            return r === void 0 ? this.fetchQuery(t) : (t.revalidateIfStale && n.isStaleByTime(gy(e.staleTime, n)) && this.prefetchQuery(e), Promise.resolve(r));
        }
        getQueriesData(t) {
            return this.#e.findAll(t).map(({ queryKey: e, state: n })=>{
                const r = n.data;
                return [
                    e,
                    r
                ];
            });
        }
        setQueryData(t, e, n) {
            const r = this.defaultQueryOptions({
                queryKey: t
            }), s = this.#e.get(r.queryHash)?.state.data, o = S9(e, s);
            if (o !== void 0) return this.#e.build(this, r).setData(o, {
                ...n,
                manual: !0
            });
        }
        setQueriesData(t, e, n) {
            return ji.batch(()=>this.#e.findAll(t).map(({ queryKey: r })=>[
                        r,
                        this.setQueryData(r, e, n)
                    ]));
        }
        getQueryState(t) {
            const e = this.defaultQueryOptions({
                queryKey: t
            });
            return this.#e.get(e.queryHash)?.state;
        }
        removeQueries(t) {
            const e = this.#e;
            ji.batch(()=>{
                e.findAll(t).forEach((n)=>{
                    e.remove(n);
                });
            });
        }
        resetQueries(t, e) {
            const n = this.#e, r = {
                type: "active",
                ...t
            };
            return ji.batch(()=>(n.findAll(t).forEach((i)=>{
                    i.reset();
                }), this.refetchQueries(r, e)));
        }
        cancelQueries(t, e = {}) {
            const n = {
                revert: !0,
                ...e
            }, r = ji.batch(()=>this.#e.findAll(t).map((i)=>i.cancel(n)));
            return Promise.all(r).then(rl).catch(rl);
        }
        invalidateQueries(t, e = {}) {
            return ji.batch(()=>{
                if (this.#e.findAll(t).forEach((r)=>{
                    r.invalidate();
                }), t?.refetchType === "none") return Promise.resolve();
                const n = {
                    ...t,
                    type: t?.refetchType ?? t?.type ?? "active"
                };
                return this.refetchQueries(n, e);
            });
        }
        refetchQueries(t, e = {}) {
            const n = {
                ...e,
                cancelRefetch: e.cancelRefetch ?? !0
            }, r = ji.batch(()=>this.#e.findAll(t).filter((i)=>!i.isDisabled()).map((i)=>{
                    let s = i.fetch(void 0, n);
                    return n.throwOnError || (s = s.catch(rl)), i.state.fetchStatus === "paused" ? Promise.resolve() : s;
                }));
            return Promise.all(r).then(rl);
        }
        fetchQuery(t) {
            const e = this.defaultQueryOptions(t);
            e.retry === void 0 && (e.retry = !1);
            const n = this.#e.build(this, e);
            return n.isStaleByTime(gy(e.staleTime, n)) ? n.fetch(e) : Promise.resolve(n.state.data);
        }
        prefetchQuery(t) {
            return this.fetchQuery(t).then(rl).catch(rl);
        }
        fetchInfiniteQuery(t) {
            return t.behavior = UL(t.pages), this.fetchQuery(t);
        }
        prefetchInfiniteQuery(t) {
            return this.fetchInfiniteQuery(t).then(rl).catch(rl);
        }
        ensureInfiniteQueryData(t) {
            return t.behavior = UL(t.pages), this.ensureQueryData(t);
        }
        resumePausedMutations() {
            return z1.isOnline() ? this.#t.resumePausedMutations() : Promise.resolve();
        }
        getQueryCache() {
            return this.#e;
        }
        getMutationCache() {
            return this.#t;
        }
        getDefaultOptions() {
            return this.#n;
        }
        setDefaultOptions(t) {
            this.#n = t;
        }
        setQueryDefaults(t, e) {
            this.#r.set(Xp(t), {
                queryKey: t,
                defaultOptions: e
            });
        }
        getQueryDefaults(t) {
            const e = [
                ...this.#r.values()
            ], n = {};
            return e.forEach((r)=>{
                k0(t, r.queryKey) && Object.assign(n, r.defaultOptions);
            }), n;
        }
        setMutationDefaults(t, e) {
            this.#s.set(Xp(t), {
                mutationKey: t,
                defaultOptions: e
            });
        }
        getMutationDefaults(t) {
            const e = [
                ...this.#s.values()
            ];
            let n = {};
            return e.forEach((r)=>{
                k0(t, r.mutationKey) && (n = {
                    ...n,
                    ...r.defaultOptions
                });
            }), n;
        }
        defaultQueryOptions(t) {
            if (t._defaulted) return t;
            const e = {
                ...this.#n.queries,
                ...this.getQueryDefaults(t.queryKey),
                ...t,
                _defaulted: !0
            };
            return e.queryHash || (e.queryHash = Rk(e.queryKey, e)), e.refetchOnReconnect === void 0 && (e.refetchOnReconnect = e.networkMode !== "always"), e.throwOnError === void 0 && (e.throwOnError = !!e.suspense), !e.networkMode && e.persister && (e.networkMode = "offlineFirst"), e.queryFn === Nk && (e.enabled = !1), e;
        }
        defaultMutationOptions(t) {
            return t?._defaulted ? t : {
                ...this.#n.mutations,
                ...t?.mutationKey && this.getMutationDefaults(t.mutationKey),
                ...t,
                _defaulted: !0
            };
        }
        clear() {
            this.#e.clear(), this.#t.clear();
        }
    }, B9 = class extends iv {
        constructor(t, e){
            super(), this.options = e, this.#e = t, this.#a = null, this.#o = $N(), this.options.experimental_prefetchInRender || this.#o.reject(new Error("experimental_prefetchInRender feature flag is not enabled")), this.bindMethods(), this.setOptions(e);
        }
        #e;
        #t = void 0;
        #n = void 0;
        #r = void 0;
        #s;
        #c;
        #o;
        #a;
        #u;
        #l;
        #i;
        #m;
        #g;
        #f;
        #h = new Set;
        bindMethods() {
            this.refetch = this.refetch.bind(this);
        }
        onSubscribe() {
            this.listeners.size === 1 && (this.#t.addObserver(this), VL(this.#t, this.options) ? this.#v() : this.updateResult(), this.#x());
        }
        onUnsubscribe() {
            this.hasListeners() || this.destroy();
        }
        shouldFetchOnReconnect() {
            return GN(this.#t, this.options, this.options.refetchOnReconnect);
        }
        shouldFetchOnWindowFocus() {
            return GN(this.#t, this.options, this.options.refetchOnWindowFocus);
        }
        destroy() {
            this.listeners = new Set, this.#_(), this.#E(), this.#t.removeObserver(this);
        }
        setOptions(t, e) {
            const n = this.options, r = this.#t;
            if (this.options = this.#e.defaultQueryOptions(t), this.options.enabled !== void 0 && typeof this.options.enabled != "boolean" && typeof this.options.enabled != "function" && typeof ql(this.options.enabled, this.#t) != "boolean") throw new Error("Expected enabled to be a boolean or a callback that returns a boolean");
            this.#y(), this.#t.setOptions(this.options), n._defaulted && !U1(this.options, n) && this.#e.getQueryCache().notify({
                type: "observerOptionsUpdated",
                query: this.#t,
                observer: this
            });
            const i = this.hasListeners();
            i && WL(this.#t, r, this.options, n) && this.#v(), this.updateResult(e), i && (this.#t !== r || ql(this.options.enabled, this.#t) !== ql(n.enabled, this.#t) || gy(this.options.staleTime, this.#t) !== gy(n.staleTime, this.#t)) && this.#p();
            const s = this.#b();
            i && (this.#t !== r || ql(this.options.enabled, this.#t) !== ql(n.enabled, this.#t) || s !== this.#f) && this.#w(s);
        }
        getOptimisticResult(t) {
            const e = this.#e.getQueryCache().build(this.#e, t), n = this.createResult(e, t);
            return z9(this, n) && (this.#r = n, this.#c = this.options, this.#s = this.#t.state), n;
        }
        getCurrentResult() {
            return this.#r;
        }
        trackResult(t, e) {
            const n = {};
            return Object.keys(t).forEach((r)=>{
                Object.defineProperty(n, r, {
                    configurable: !1,
                    enumerable: !0,
                    get: ()=>(this.trackProp(r), e?.(r), t[r])
                });
            }), n;
        }
        trackProp(t) {
            this.#h.add(t);
        }
        getCurrentQuery() {
            return this.#t;
        }
        refetch({ ...t } = {}) {
            return this.fetch({
                ...t
            });
        }
        fetchOptimistic(t) {
            const e = this.#e.defaultQueryOptions(t), n = this.#e.getQueryCache().build(this.#e, e);
            return n.fetch().then(()=>this.createResult(n, e));
        }
        fetch(t) {
            return this.#v({
                ...t,
                cancelRefetch: t.cancelRefetch ?? !0
            }).then(()=>(this.updateResult(), this.#r));
        }
        #v(t) {
            this.#y();
            let e = this.#t.fetch(this.options, t);
            return t?.throwOnError || (e = e.catch(rl)), e;
        }
        #p() {
            this.#_();
            const t = gy(this.options.staleTime, this.#t);
            if (Gp || this.#r.isStale || !WN(t)) return;
            const n = L4(this.#r.dataUpdatedAt, t) + 1;
            this.#m = setTimeout(()=>{
                this.#r.isStale || this.updateResult();
            }, n);
        }
        #b() {
            return (typeof this.options.refetchInterval == "function" ? this.options.refetchInterval(this.#t) : this.options.refetchInterval) ?? !1;
        }
        #w(t) {
            this.#E(), this.#f = t, !(Gp || ql(this.options.enabled, this.#t) === !1 || !WN(this.#f) || this.#f === 0) && (this.#g = setInterval(()=>{
                (this.options.refetchIntervalInBackground || Pk.isFocused()) && this.#v();
            }, this.#f));
        }
        #x() {
            this.#p(), this.#w(this.#b());
        }
        #_() {
            this.#m && (clearTimeout(this.#m), this.#m = void 0);
        }
        #E() {
            this.#g && (clearInterval(this.#g), this.#g = void 0);
        }
        createResult(t, e) {
            const n = this.#t, r = this.options, i = this.#r, s = this.#s, o = this.#c, l = t !== n ? t.state : this.#n, { state: c } = t;
            let u = {
                ...c
            }, f = !1, p;
            if (e._optimisticResults) {
                const D = this.hasListeners(), L = !D && VL(t, e), R = D && WL(t, n, e, r);
                (L || R) && (u = {
                    ...u,
                    ...z4(c.data, t.options)
                }), e._optimisticResults === "isRestoring" && (u.fetchStatus = "idle");
            }
            let { error: g, errorUpdatedAt: x, status: S } = u;
            if (e.select && u.data !== void 0) if (i && u.data === s?.data && e.select === this.#u) p = this.#l;
            else try {
                this.#u = e.select, p = e.select(u.data), p = HN(i?.data, p, e), this.#l = p, this.#a = null;
            } catch (D) {
                this.#a = D;
            }
            else p = u.data;
            if (e.placeholderData !== void 0 && p === void 0 && S === "pending") {
                let D;
                if (i?.isPlaceholderData && e.placeholderData === o?.placeholderData) D = i.data;
                else if (D = typeof e.placeholderData == "function" ? e.placeholderData(this.#i?.state.data, this.#i) : e.placeholderData, e.select && D !== void 0) try {
                    D = e.select(D), this.#a = null;
                } catch (L) {
                    this.#a = L;
                }
                D !== void 0 && (S = "success", p = HN(i?.data, D, e), f = !0);
            }
            this.#a && (g = this.#a, p = this.#l, x = Date.now(), S = "error");
            const _ = u.fetchStatus === "fetching", b = S === "pending", M = S === "error", E = b && _, T = p !== void 0, N = {
                status: S,
                fetchStatus: u.fetchStatus,
                isPending: b,
                isSuccess: S === "success",
                isError: M,
                isInitialLoading: E,
                isLoading: E,
                data: p,
                dataUpdatedAt: u.dataUpdatedAt,
                error: g,
                errorUpdatedAt: x,
                failureCount: u.fetchFailureCount,
                failureReason: u.fetchFailureReason,
                errorUpdateCount: u.errorUpdateCount,
                isFetched: u.dataUpdateCount > 0 || u.errorUpdateCount > 0,
                isFetchedAfterMount: u.dataUpdateCount > l.dataUpdateCount || u.errorUpdateCount > l.errorUpdateCount,
                isFetching: _,
                isRefetching: _ && !b,
                isLoadingError: M && !T,
                isPaused: u.fetchStatus === "paused",
                isPlaceholderData: f,
                isRefetchError: M && T,
                isStale: kk(t, e),
                refetch: this.refetch,
                promise: this.#o
            };
            if (this.options.experimental_prefetchInRender) {
                const D = (A)=>{
                    N.status === "error" ? A.reject(N.error) : N.data !== void 0 && A.resolve(N.data);
                }, L = ()=>{
                    const A = this.#o = N.promise = $N();
                    D(A);
                }, R = this.#o;
                switch(R.status){
                    case "pending":
                        t.queryHash === n.queryHash && D(R);
                        break;
                    case "fulfilled":
                        (N.status === "error" || N.data !== R.value) && L();
                        break;
                    case "rejected":
                        (N.status !== "error" || N.error !== R.reason) && L();
                        break;
                }
            }
            return N;
        }
        updateResult(t) {
            const e = this.#r, n = this.createResult(this.#t, this.options);
            if (this.#s = this.#t.state, this.#c = this.options, this.#s.data !== void 0 && (this.#i = this.#t), U1(n, e)) return;
            this.#r = n;
            const r = {}, i = ()=>{
                if (!e) return !0;
                const { notifyOnChangeProps: s } = this.options, o = typeof s == "function" ? s() : s;
                if (o === "all" || !o && !this.#h.size) return !0;
                const a = new Set(o ?? this.#h);
                return this.options.throwOnError && a.add("error"), Object.keys(this.#r).some((l)=>{
                    const c = l;
                    return this.#r[c] !== e[c] && a.has(c);
                });
            };
            t?.listeners !== !1 && i() && (r.listeners = !0), this.#R({
                ...r,
                ...t
            });
        }
        #y() {
            const t = this.#e.getQueryCache().build(this.#e, this.options);
            if (t === this.#t) return;
            const e = this.#t;
            this.#t = t, this.#n = t.state, this.hasListeners() && (e?.removeObserver(this), t.addObserver(this));
        }
        onQueryUpdate() {
            this.updateResult(), this.hasListeners() && this.#x();
        }
        #R(t) {
            ji.batch(()=>{
                t.listeners && this.listeners.forEach((e)=>{
                    e(this.#r);
                }), this.#e.getQueryCache().notify({
                    query: this.#t,
                    type: "observerResultsUpdated"
                });
            });
        }
    };
    function U9(t, e) {
        return ql(e.enabled, t) !== !1 && t.state.data === void 0 && !(t.state.status === "error" && e.retryOnMount === !1);
    }
    function VL(t, e) {
        return U9(t, e) || t.state.data !== void 0 && GN(t, e, e.refetchOnMount);
    }
    function GN(t, e, n) {
        if (ql(e.enabled, t) !== !1) {
            const r = typeof n == "function" ? n(t) : n;
            return r === "always" || r !== !1 && kk(t, e);
        }
        return !1;
    }
    function WL(t, e, n, r) {
        return (t !== e || ql(r.enabled, t) === !1) && (!n.suspense || t.state.status !== "error") && kk(t, n);
    }
    function kk(t, e) {
        return ql(e.enabled, t) !== !1 && t.isStaleByTime(gy(e.staleTime, t));
    }
    function z9(t, e) {
        return !U1(t.getCurrentResult(), e);
    }
    var V9 = class extends iv {
        #e;
        #t = void 0;
        #n;
        #r;
        constructor(e, n){
            super(), this.#e = e, this.setOptions(n), this.bindMethods(), this.#s();
        }
        bindMethods() {
            this.mutate = this.mutate.bind(this), this.reset = this.reset.bind(this);
        }
        setOptions(e) {
            const n = this.options;
            this.options = this.#e.defaultMutationOptions(e), U1(this.options, n) || this.#e.getMutationCache().notify({
                type: "observerOptionsUpdated",
                mutation: this.#n,
                observer: this
            }), n?.mutationKey && this.options.mutationKey && Xp(n.mutationKey) !== Xp(this.options.mutationKey) ? this.reset() : this.#n?.state.status === "pending" && this.#n.setOptions(this.options);
        }
        onUnsubscribe() {
            this.hasListeners() || this.#n?.removeObserver(this);
        }
        onMutationUpdate(e) {
            this.#s(), this.#c(e);
        }
        getCurrentResult() {
            return this.#t;
        }
        reset() {
            this.#n?.removeObserver(this), this.#n = void 0, this.#s(), this.#c();
        }
        mutate(e, n) {
            return this.#r = n, this.#n?.removeObserver(this), this.#n = this.#e.getMutationCache().build(this.#e, this.options), this.#n.addObserver(this), this.#n.execute(e);
        }
        #s() {
            const e = this.#n?.state ?? V4();
            this.#t = {
                ...e,
                isPending: e.status === "pending",
                isSuccess: e.status === "success",
                isError: e.status === "error",
                isIdle: e.status === "idle",
                mutate: this.mutate,
                reset: this.reset
            };
        }
        #c(e) {
            ji.batch(()=>{
                if (this.#r && this.hasListeners()) {
                    const n = this.#t.variables, r = this.#t.context;
                    e?.type === "success" ? (this.#r.onSuccess?.(e.data, n, r), this.#r.onSettled?.(e.data, null, n, r)) : e?.type === "error" && (this.#r.onError?.(e.error, n, r), this.#r.onSettled?.(void 0, e.error, n, r));
                }
                this.listeners.forEach((n)=>{
                    n(this.#t);
                });
            });
        }
    }, X = rv();
    const nr = Ao(X), W9 = v9({
        __proto__: null,
        default: nr
    }, [
        X
    ]);
    var W4 = X.createContext(void 0), BM = (t)=>{
        const e = X.useContext(W4);
        if (!e) throw new Error("No QueryClient set, use QueryClientProvider to set one");
        return e;
    }, q9 = ({ client: t, children: e })=>(X.useEffect(()=>(t.mount(), ()=>{
                t.unmount();
            }), [
            t
        ]), v.jsx(W4.Provider, {
            value: t,
            children: e
        })), q4 = X.createContext(!1), H9 = ()=>X.useContext(q4);
    q4.Provider;
    function $9() {
        let t = !1;
        return {
            clearReset: ()=>{
                t = !1;
            },
            reset: ()=>{
                t = !0;
            },
            isReset: ()=>t
        };
    }
    var G9 = X.createContext($9()), X9 = ()=>X.useContext(G9);
    function H4(t, e) {
        return typeof t == "function" ? t(...e) : !!t;
    }
    function XN() {}
    var K9 = (t, e)=>{
        (t.suspense || t.throwOnError || t.experimental_prefetchInRender) && (e.isReset() || (t.retryOnMount = !1));
    }, Y9 = (t)=>{
        X.useEffect(()=>{
            t.clearReset();
        }, [
            t
        ]);
    }, Z9 = ({ result: t, errorResetBoundary: e, throwOnError: n, query: r, suspense: i })=>t.isError && !e.isReset() && !t.isFetching && r && (i && t.data === void 0 || H4(n, [
            t.error,
            r
        ])), J9 = (t)=>{
        const e = t.staleTime;
        t.suspense && (t.staleTime = typeof e == "function" ? (...n)=>Math.max(e(...n), 1e3) : Math.max(e ?? 1e3, 1e3), typeof t.gcTime == "number" && (t.gcTime = Math.max(t.gcTime, 1e3)));
    }, Q9 = (t, e)=>t.isLoading && t.isFetching && !e, e7 = (t, e)=>t?.suspense && e.isPending, qL = (t, e, n)=>e.fetchOptimistic(t).catch(()=>{
            n.clearReset();
        });
    function t7(t, e, n) {
        const r = BM(), i = H9(), s = X9(), o = r.defaultQueryOptions(t);
        r.getDefaultOptions().queries?._experimental_beforeQuery?.(o), o._optimisticResults = i ? "isRestoring" : "optimistic", J9(o), K9(o, s), Y9(s);
        const a = !r.getQueryCache().get(o.queryHash), [l] = X.useState(()=>new e(r, o)), c = l.getOptimisticResult(o), u = !i && t.subscribed !== !1;
        if (X.useSyncExternalStore(X.useCallback((f)=>{
            const p = u ? l.subscribe(ji.batchCalls(f)) : XN;
            return l.updateResult(), p;
        }, [
            l,
            u
        ]), ()=>l.getCurrentResult(), ()=>l.getCurrentResult()), X.useEffect(()=>{
            l.setOptions(o, {
                listeners: !1
            });
        }, [
            o,
            l
        ]), e7(o, c)) throw qL(o, l, s);
        if (Z9({
            result: c,
            errorResetBoundary: s,
            throwOnError: o.throwOnError,
            query: r.getQueryCache().get(o.queryHash),
            suspense: o.suspense
        })) throw c.error;
        return r.getDefaultOptions().queries?._experimental_afterQuery?.(o, c), o.experimental_prefetchInRender && !Gp && Q9(c, i) && (a ? qL(o, l, s) : r.getQueryCache().get(o.queryHash)?.promise)?.catch(XN).finally(()=>{
            l.updateResult();
        }), o.notifyOnChangeProps ? c : l.trackResult(c);
    }
    function V1(t, e) {
        return t7(t, B9);
    }
    function HL(t, e) {
        return t.findAll(e.filters).map((n)=>e.select ? e.select(n) : n.state);
    }
    function n7(t = {}, e) {
        const n = BM().getMutationCache(), r = X.useRef(t), i = X.useRef(null);
        return i.current || (i.current = HL(n, t)), X.useEffect(()=>{
            r.current = t;
        }), X.useSyncExternalStore(X.useCallback((s)=>n.subscribe(()=>{
                const o = Ak(i.current, HL(n, r.current));
                i.current !== o && (i.current = o, ji.schedule(s));
            }), [
            n
        ]), ()=>i.current, ()=>i.current);
    }
    function an(t, e) {
        const n = BM(), [r] = X.useState(()=>new V9(n, t));
        X.useEffect(()=>{
            r.setOptions(t);
        }, [
            r,
            t
        ]);
        const i = X.useSyncExternalStore(X.useCallback((o)=>r.subscribe(ji.batchCalls(o)), [
            r
        ]), ()=>r.getCurrentResult(), ()=>r.getCurrentResult()), s = X.useCallback((o, a)=>{
            r.mutate(o, a).catch(XN);
        }, [
            r
        ]);
        if (i.error && H4(r.options.throwOnError, [
            i.error
        ])) throw i.error;
        return {
            ...i,
            mutate: s,
            mutateAsync: i.mutate
        };
    }
    var r7 = "Invariant failed";
    function Yl(t, e) {
        if (!t) throw new Error(r7);
    }
    function yy(t) {
        const e = t.resolvedLocation, n = t.location, r = e?.pathname !== n.pathname, i = e?.href !== n.href, s = e?.hash !== n.hash;
        return {
            fromLocation: e,
            toLocation: n,
            pathChanged: r,
            hrefChanged: i,
            hashChanged: s
        };
    }
    const i7 = "Error preloading route! ☝️";
    function l0(t) {
        return t[t.length - 1];
    }
    function s7(t) {
        return typeof t == "function";
    }
    function Mp(t, e) {
        return s7(t) ? t(e) : t;
    }
    function KN(t, e) {
        return e.reduce((n, r)=>(n[r] = t[r], n), {});
    }
    function el(t, e) {
        if (t === e) return t;
        const n = e, r = GL(t) && GL(n);
        if (r || W1(t) && W1(n)) {
            const i = r ? t : Object.keys(t), s = i.length, o = r ? n : Object.keys(n), a = o.length, l = r ? [] : {};
            let c = 0;
            for(let u = 0; u < a; u++){
                const f = r ? u : o[u];
                (!r && i.includes(f) || r) && t[f] === void 0 && n[f] === void 0 ? (l[f] = void 0, c++) : (l[f] = el(t[f], n[f]), l[f] === t[f] && t[f] !== void 0 && c++);
            }
            return s === a && c === s ? t : l;
        }
        return n;
    }
    function W1(t) {
        if (!$L(t)) return !1;
        const e = t.constructor;
        if (typeof e > "u") return !0;
        const n = e.prototype;
        return !(!$L(n) || !n.hasOwnProperty("isPrototypeOf"));
    }
    function $L(t) {
        return Object.prototype.toString.call(t) === "[object Object]";
    }
    function GL(t) {
        return Array.isArray(t) && t.length === Object.keys(t).length;
    }
    function XL(t, e) {
        let n = Object.keys(t);
        return e && (n = n.filter((r)=>t[r] !== void 0)), n;
    }
    function vy(t, e, n) {
        if (t === e) return !0;
        if (typeof t != typeof e) return !1;
        if (W1(t) && W1(e)) {
            const r = n?.ignoreUndefined ?? !0, i = XL(t, r), s = XL(e, r);
            return !n?.partial && i.length !== s.length ? !1 : s.every((o)=>vy(t[o], e[o], n));
        }
        return Array.isArray(t) && Array.isArray(e) ? t.length !== e.length ? !1 : !t.some((r, i)=>!vy(r, e[i], n)) : !1;
    }
    function Xg(t) {
        let e, n;
        const r = new Promise((i, s)=>{
            e = i, n = s;
        });
        return r.status = "pending", r.resolve = (i)=>{
            r.status = "resolved", r.value = i, e(i), t?.(i);
        }, r.reject = (i)=>{
            r.status = "rejected", n(i);
        }, r;
    }
    function o7(t) {
        return /%[0-9A-Fa-f]{2}/.test(t);
    }
    function td(t) {
        return UM(t.filter((e)=>e !== void 0).join("/"));
    }
    function UM(t) {
        return t.replace(/\/{2,}/g, "/");
    }
    function Ok(t) {
        return t === "/" ? t : t.replace(/^\/{1,}/, "");
    }
    function Tp(t) {
        return t === "/" ? t : t.replace(/\/{1,}$/, "");
    }
    function a7(t) {
        return Tp(Ok(t));
    }
    function q1(t, e) {
        return t.endsWith("/") && t !== "/" && t !== `${e}/` ? t.slice(0, -1) : t;
    }
    function l7(t, e, n) {
        return q1(t, n) === q1(e, n);
    }
    function c7({ basepath: t, base: e, to: n, trailingSlash: r = "never", caseSensitive: i }) {
        var s, o;
        e = H1(t, e, i), n = H1(t, n, i);
        let a = Oy(e);
        const l = Oy(n);
        a.length > 1 && ((s = l0(a)) == null ? void 0 : s.value) === "/" && a.pop(), l.forEach((u, f)=>{
            u.value === "/" ? f ? f === l.length - 1 && a.push(u) : a = [
                u
            ] : u.value === ".." ? a.pop() : u.value === "." || a.push(u);
        }), a.length > 1 && (((o = l0(a)) == null ? void 0 : o.value) === "/" ? r === "never" && a.pop() : r === "always" && a.push({
            type: "pathname",
            value: "/"
        }));
        const c = td([
            t,
            ...a.map((u)=>u.value)
        ]);
        return UM(c);
    }
    function Oy(t) {
        if (!t) return [];
        t = UM(t);
        const e = [];
        if (t.slice(0, 1) === "/" && (t = t.substring(1), e.push({
            type: "pathname",
            value: "/"
        })), !t) return e;
        const n = t.split("/").filter(Boolean);
        return e.push(...n.map((r)=>r === "$" || r === "*" ? {
                type: "wildcard",
                value: r
            } : r.charAt(0) === "$" ? {
                type: "param",
                value: r
            } : {
                type: "pathname",
                value: decodeURI(r)
            })), t.slice(-1) === "/" && (t = t.substring(1), e.push({
            type: "pathname",
            value: "/"
        })), e;
    }
    function S_({ path: t, params: e, leaveWildcards: n, leaveParams: r, decodeCharMap: i }) {
        const s = Oy(t);
        function o(c) {
            const u = e[c], f = typeof u == "string";
            return [
                "*",
                "_splat"
            ].includes(c) ? f ? encodeURI(u) : u : f ? u7(u, i) : u;
        }
        const a = {}, l = td(s.map((c)=>{
            if (c.type === "wildcard") {
                a._splat = e._splat;
                const u = o("_splat");
                return n ? `${c.value}${u ?? ""}` : u;
            }
            if (c.type === "param") {
                const u = c.value.substring(1);
                if (a[u] = e[u], r) {
                    const f = o(c.value);
                    return `${c.value}${f ?? ""}`;
                }
                return o(u) ?? "undefined";
            }
            return c.value;
        }));
        return {
            usedParams: a,
            interpolatedPath: l
        };
    }
    function u7(t, e) {
        let n = encodeURIComponent(t);
        if (e) for (const [r, i] of e)n = n.replaceAll(r, i);
        return n;
    }
    function E_(t, e, n) {
        const r = d7(t, e, n);
        if (!(n.to && !r)) return r ?? {};
    }
    function H1(t, e, n = !1) {
        const r = n ? t : t.toLowerCase(), i = n ? e : e.toLowerCase();
        switch(!0){
            case r === "/":
                return e;
            case i === r:
                return "";
            case e.length < t.length:
                return e;
            case i[r.length] !== "/":
                return e;
            case i.startsWith(r):
                return e.slice(t.length);
            default:
                return e;
        }
    }
    function d7(t, e, n) {
        if (t !== "/" && !e.startsWith(t)) return;
        e = H1(t, e, n.caseSensitive);
        const r = H1(t, `${n.to ?? "$"}`, n.caseSensitive), i = Oy(e), s = Oy(r);
        e.startsWith("/") || i.unshift({
            type: "pathname",
            value: "/"
        }), r.startsWith("/") || s.unshift({
            type: "pathname",
            value: "/"
        });
        const o = {};
        return (()=>{
            for(let l = 0; l < Math.max(i.length, s.length); l++){
                const c = i[l], u = s[l], f = l >= i.length - 1, p = l >= s.length - 1;
                if (u) {
                    if (u.type === "wildcard") {
                        const g = decodeURI(td(i.slice(l).map((x)=>x.value)));
                        return o["*"] = g, o._splat = g, !0;
                    }
                    if (u.type === "pathname") {
                        if (u.value === "/" && !c?.value) return !0;
                        if (c) {
                            if (n.caseSensitive) {
                                if (u.value !== c.value) return !1;
                            } else if (u.value.toLowerCase() !== c.value.toLowerCase()) return !1;
                        }
                    }
                    if (!c) return !1;
                    if (u.type === "param") {
                        if (c.value === "/") return !1;
                        c.value.charAt(0) !== "$" && (o[u.value.substring(1)] = decodeURIComponent(c.value));
                    }
                }
                if (!f && p) return o["**"] = td(i.slice(l + 1).map((g)=>g.value)), !!n.fuzzy && u?.value !== "/";
            }
            return !0;
        })() ? o : void 0;
    }
    function f7(t, e) {
        let n, r, i, s = "";
        for(n in t)if ((i = t[n]) !== void 0) if (Array.isArray(i)) for(r = 0; r < i.length; r++)s && (s += "&"), s += encodeURIComponent(n) + "=" + encodeURIComponent(i[r]);
        else s && (s += "&"), s += encodeURIComponent(n) + "=" + encodeURIComponent(i);
        return "" + s;
    }
    function KL(t) {
        if (!t) return "";
        const e = o7(t) ? decodeURIComponent(t) : decodeURIComponent(encodeURIComponent(t));
        return e === "false" ? !1 : e === "true" ? !0 : +e * 0 === 0 && +e + "" === e ? +e : e;
    }
    function h7(t, e) {
        let n, r;
        const i = {}, s = t.split("&");
        for(; n = s.shift();){
            const o = n.indexOf("=");
            if (o !== -1) {
                r = n.slice(0, o), r = decodeURIComponent(r);
                const a = n.slice(o + 1);
                i[r] !== void 0 ? i[r] = [].concat(i[r], KL(a)) : i[r] = KL(a);
            } else r = n, r = decodeURIComponent(r), i[r] = "";
        }
        return i;
    }
    const Zo = "__root__", p7 = g7(JSON.parse), m7 = y7(JSON.stringify, JSON.parse);
    function g7(t) {
        return (e)=>{
            e.substring(0, 1) === "?" && (e = e.substring(1));
            const n = h7(e);
            for(const r in n){
                const i = n[r];
                if (typeof i == "string") try {
                    n[r] = t(i);
                } catch  {}
            }
            return n;
        };
    }
    function y7(t, e) {
        function n(r) {
            if (typeof r == "object" && r !== null) try {
                return t(r);
            } catch  {}
            else if (typeof r == "string" && typeof e == "function") try {
                return e(r), t(r);
            } catch  {}
            return r;
        }
        return (r)=>{
            r = {
                ...r
            }, Object.keys(r).forEach((s)=>{
                const o = r[s];
                typeof o > "u" || o === void 0 ? delete r[s] : r[s] = n(o);
            });
            const i = f7(r).toString();
            return i ? `?${i}` : "";
        };
    }
    const kf = "__TSR_index", YL = "popstate", ZL = "beforeunload";
    function $4(t) {
        let e = t.getLocation();
        const n = new Set, r = (o)=>{
            e = t.getLocation(), n.forEach((a)=>a({
                    location: e,
                    action: o
                }));
        }, i = (o)=>{
            t.notifyOnIndexChange ?? !0 ? r(o) : e = t.getLocation();
        }, s = async ({ task: o, navigateOpts: a, ...l })=>{
            var c, u;
            if (a?.ignoreBlocker ?? !1) {
                o();
                return;
            }
            const p = ((c = t.getBlockers) == null ? void 0 : c.call(t)) ?? [], g = l.type === "PUSH" || l.type === "REPLACE";
            if (typeof document < "u" && p.length && g) for (const x of p){
                const S = O0(l.path, l.state);
                if (await x.blockerFn({
                    currentLocation: e,
                    nextLocation: S,
                    action: l.type
                })) {
                    (u = t.onBlocked) == null || u.call(t);
                    return;
                }
            }
            o();
        };
        return {
            get location () {
                return e;
            },
            get length () {
                return t.getLength();
            },
            subscribers: n,
            subscribe: (o)=>(n.add(o), ()=>{
                    n.delete(o);
                }),
            push: (o, a, l)=>{
                const c = e.state[kf];
                a = YN(c + 1, a), s({
                    task: ()=>{
                        t.pushState(o, a), r({
                            type: "PUSH"
                        });
                    },
                    navigateOpts: l,
                    type: "PUSH",
                    path: o,
                    state: a
                });
            },
            replace: (o, a, l)=>{
                const c = e.state[kf];
                a = YN(c, a), s({
                    task: ()=>{
                        t.replaceState(o, a), r({
                            type: "REPLACE"
                        });
                    },
                    navigateOpts: l,
                    type: "REPLACE",
                    path: o,
                    state: a
                });
            },
            go: (o, a)=>{
                s({
                    task: ()=>{
                        t.go(o), i({
                            type: "GO",
                            index: o
                        });
                    },
                    navigateOpts: a,
                    type: "GO"
                });
            },
            back: (o)=>{
                s({
                    task: ()=>{
                        t.back(o?.ignoreBlocker ?? !1), i({
                            type: "BACK"
                        });
                    },
                    navigateOpts: o,
                    type: "BACK"
                });
            },
            forward: (o)=>{
                s({
                    task: ()=>{
                        t.forward(o?.ignoreBlocker ?? !1), i({
                            type: "FORWARD"
                        });
                    },
                    navigateOpts: o,
                    type: "FORWARD"
                });
            },
            canGoBack: ()=>e.state[kf] !== 0,
            createHref: (o)=>t.createHref(o),
            block: (o)=>{
                var a;
                if (!t.setBlockers) return ()=>{};
                const l = ((a = t.getBlockers) == null ? void 0 : a.call(t)) ?? [];
                return t.setBlockers([
                    ...l,
                    o
                ]), ()=>{
                    var c, u;
                    const f = ((c = t.getBlockers) == null ? void 0 : c.call(t)) ?? [];
                    (u = t.setBlockers) == null || u.call(t, f.filter((p)=>p !== o));
                };
            },
            flush: ()=>{
                var o;
                return (o = t.flush) == null ? void 0 : o.call(t);
            },
            destroy: ()=>{
                var o;
                return (o = t.destroy) == null ? void 0 : o.call(t);
            },
            notify: r
        };
    }
    function YN(t, e) {
        return e || (e = {}), {
            ...e,
            key: Lk(),
            [kf]: t
        };
    }
    function v7(t) {
        var e;
        const n = typeof document < "u" ? window : void 0, r = n.history.pushState, i = n.history.replaceState;
        let s = [];
        const o = ()=>s, a = (R)=>s = R, l = (R)=>R, c = ()=>O0(`${n.location.pathname}${n.location.search}${n.location.hash}`, n.history.state);
        (e = n.history.state) != null && e.key || n.history.replaceState({
            [kf]: 0,
            key: Lk()
        }, "");
        let u = c(), f, p = !1, g = !1, x = !1, S = !1;
        const _ = ()=>u;
        let b, M;
        const E = ()=>{
            b && (L._ignoreSubscribers = !0, (b.isPush ? n.history.pushState : n.history.replaceState)(b.state, "", b.href), L._ignoreSubscribers = !1, b = void 0, M = void 0, f = void 0);
        }, T = (R, A, P)=>{
            const B = l(A);
            M || (f = u), u = O0(A, P), b = {
                href: B,
                state: P,
                isPush: b?.isPush || R === "push"
            }, M || (M = Promise.resolve().then(()=>E()));
        }, k = (R)=>{
            u = c(), L.notify({
                type: R
            });
        }, N = async ()=>{
            if (g) {
                g = !1;
                return;
            }
            const R = c(), A = R.state[kf] - u.state[kf], P = A === 1, B = A === -1, U = !P && !B || p;
            p = !1;
            const j = U ? "GO" : B ? "BACK" : "FORWARD", K = U ? {
                type: "GO",
                index: A
            } : {
                type: B ? "BACK" : "FORWARD"
            };
            if (x) x = !1;
            else {
                const q = o();
                if (typeof document < "u" && q.length) {
                    for (const te of q)if (await te.blockerFn({
                        currentLocation: u,
                        nextLocation: R,
                        action: j
                    })) {
                        g = !0, n.history.go(1), L.notify(K);
                        return;
                    }
                }
            }
            u = c(), L.notify(K);
        }, D = (R)=>{
            if (S) {
                S = !1;
                return;
            }
            let A = !1;
            const P = o();
            if (typeof document < "u" && P.length) for (const B of P){
                const U = B.enableBeforeUnload ?? !0;
                if (U === !0) {
                    A = !0;
                    break;
                }
                if (typeof U == "function" && U() === !0) {
                    A = !0;
                    break;
                }
            }
            if (A) return R.preventDefault(), R.returnValue = "";
        }, L = $4({
            getLocation: _,
            getLength: ()=>n.history.length,
            pushState: (R, A)=>T("push", R, A),
            replaceState: (R, A)=>T("replace", R, A),
            back: (R)=>(R && (x = !0), S = !0, n.history.back()),
            forward: (R)=>{
                R && (x = !0), S = !0, n.history.forward();
            },
            go: (R)=>{
                p = !0, n.history.go(R);
            },
            createHref: (R)=>l(R),
            flush: E,
            destroy: ()=>{
                n.history.pushState = r, n.history.replaceState = i, n.removeEventListener(ZL, D, {
                    capture: !0
                }), n.removeEventListener(YL, N);
            },
            onBlocked: ()=>{
                f && u !== f && (u = f);
            },
            getBlockers: o,
            setBlockers: a,
            notifyOnIndexChange: !1
        });
        return n.addEventListener(ZL, D, {
            capture: !0
        }), n.addEventListener(YL, N), n.history.pushState = function(...R) {
            const A = r.apply(n.history, R);
            return L._ignoreSubscribers || k("PUSH"), A;
        }, n.history.replaceState = function(...R) {
            const A = i.apply(n.history, R);
            return L._ignoreSubscribers || k("REPLACE"), A;
        }, L;
    }
    function x7(t = {
        initialEntries: [
            "/"
        ]
    }) {
        const e = t.initialEntries;
        let n = t.initialIndex ? Math.min(Math.max(t.initialIndex, 0), e.length - 1) : e.length - 1;
        const r = e.map((s, o)=>YN(o, void 0));
        return $4({
            getLocation: ()=>O0(e[n], r[n]),
            getLength: ()=>e.length,
            pushState: (s, o)=>{
                n < e.length - 1 && (e.splice(n + 1), r.splice(n + 1)), r.push(o), e.push(s), n = Math.max(e.length - 1, 0);
            },
            replaceState: (s, o)=>{
                r[n] = o, e[n] = s;
            },
            back: ()=>{
                n = Math.max(n - 1, 0);
            },
            forward: ()=>{
                n = Math.min(n + 1, e.length - 1);
            },
            go: (s)=>{
                n = Math.min(Math.max(n + s, 0), e.length - 1);
            },
            createHref: (s)=>s
        });
    }
    function O0(t, e) {
        const n = t.indexOf("#"), r = t.indexOf("?");
        return {
            href: t,
            pathname: t.substring(0, n > 0 ? r > 0 ? Math.min(n, r) : n : r > 0 ? r : t.length),
            hash: n > -1 ? t.substring(n) : "",
            search: r > -1 ? t.slice(r, n === -1 ? void 0 : n) : "",
            state: e || {
                [kf]: 0,
                key: Lk()
            }
        };
    }
    function Lk() {
        return (Math.random() + 1).toString(36).substring(7);
    }
    function Dk(t) {
        const e = t.errorComponent ?? zM;
        return v.jsx(b7, {
            getResetKey: t.getResetKey,
            onCatch: t.onCatch,
            children: ({ error: n, reset: r })=>n ? X.createElement(e, {
                    error: n,
                    reset: r
                }) : t.children
        });
    }
    class b7 extends X.Component {
        constructor(){
            super(...arguments), this.state = {
                error: null
            };
        }
        static getDerivedStateFromProps(e) {
            return {
                resetKey: e.getResetKey()
            };
        }
        static getDerivedStateFromError(e) {
            return {
                error: e
            };
        }
        reset() {
            this.setState({
                error: null
            });
        }
        componentDidUpdate(e, n) {
            n.error && n.resetKey !== this.state.resetKey && this.reset();
        }
        componentDidCatch(e, n) {
            this.props.onCatch && this.props.onCatch(e, n);
        }
        render() {
            return this.props.children({
                error: this.state.resetKey !== this.props.getResetKey() ? null : this.state.error,
                reset: ()=>{
                    this.reset();
                }
            });
        }
    }
    function zM({ error: t }) {
        const [e, n] = X.useState(!1);
        return v.jsxs("div", {
            style: {
                padding: ".5rem",
                maxWidth: "100%"
            },
            children: [
                v.jsxs("div", {
                    style: {
                        display: "flex",
                        alignItems: "center",
                        gap: ".5rem"
                    },
                    children: [
                        v.jsx("strong", {
                            style: {
                                fontSize: "1rem"
                            },
                            children: "Something went wrong!"
                        }),
                        v.jsx("button", {
                            style: {
                                appearance: "none",
                                fontSize: ".6em",
                                border: "1px solid currentColor",
                                padding: ".1rem .2rem",
                                fontWeight: "bold",
                                borderRadius: ".25rem"
                            },
                            onClick: ()=>n((r)=>!r),
                            children: e ? "Hide Error" : "Show Error"
                        })
                    ]
                }),
                v.jsx("div", {
                    style: {
                        height: ".25rem"
                    }
                }),
                e ? v.jsx("div", {
                    children: v.jsx("pre", {
                        style: {
                            fontSize: ".7em",
                            border: "1px solid red",
                            borderRadius: ".25rem",
                            padding: ".3rem",
                            color: "red",
                            overflow: "auto"
                        },
                        children: t.message ? v.jsx("code", {
                            children: t.message
                        }) : null
                    })
                }) : null
            ]
        });
    }
    var ZC = {
        exports: {}
    }, JC = {}, QC = {
        exports: {}
    }, eI = {};
    var JL;
    function w7() {
        if (JL) return eI;
        JL = 1;
        var t = rv();
        function e(f, p) {
            return f === p && (f !== 0 || 1 / f === 1 / p) || f !== f && p !== p;
        }
        var n = typeof Object.is == "function" ? Object.is : e, r = t.useState, i = t.useEffect, s = t.useLayoutEffect, o = t.useDebugValue;
        function a(f, p) {
            var g = p(), x = r({
                inst: {
                    value: g,
                    getSnapshot: p
                }
            }), S = x[0].inst, _ = x[1];
            return s(function() {
                S.value = g, S.getSnapshot = p, l(S) && _({
                    inst: S
                });
            }, [
                f,
                g,
                p
            ]), i(function() {
                return l(S) && _({
                    inst: S
                }), f(function() {
                    l(S) && _({
                        inst: S
                    });
                });
            }, [
                f
            ]), o(g), g;
        }
        function l(f) {
            var p = f.getSnapshot;
            f = f.value;
            try {
                var g = p();
                return !n(f, g);
            } catch  {
                return !0;
            }
        }
        function c(f, p) {
            return p();
        }
        var u = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? c : a;
        return eI.useSyncExternalStore = t.useSyncExternalStore !== void 0 ? t.useSyncExternalStore : u, eI;
    }
    var QL;
    function _7() {
        return QL || (QL = 1, QC.exports = w7()), QC.exports;
    }
    var eD;
    function S7() {
        if (eD) return JC;
        eD = 1;
        var t = rv(), e = _7();
        function n(c, u) {
            return c === u && (c !== 0 || 1 / c === 1 / u) || c !== c && u !== u;
        }
        var r = typeof Object.is == "function" ? Object.is : n, i = e.useSyncExternalStore, s = t.useRef, o = t.useEffect, a = t.useMemo, l = t.useDebugValue;
        return JC.useSyncExternalStoreWithSelector = function(c, u, f, p, g) {
            var x = s(null);
            if (x.current === null) {
                var S = {
                    hasValue: !1,
                    value: null
                };
                x.current = S;
            } else S = x.current;
            x = a(function() {
                function b(N) {
                    if (!M) {
                        if (M = !0, E = N, N = p(N), g !== void 0 && S.hasValue) {
                            var D = S.value;
                            if (g(D, N)) return T = D;
                        }
                        return T = N;
                    }
                    if (D = T, r(E, N)) return D;
                    var L = p(N);
                    return g !== void 0 && g(D, L) ? (E = N, D) : (E = N, T = L);
                }
                var M = !1, E, T, k = f === void 0 ? null : f;
                return [
                    function() {
                        return b(u());
                    },
                    k === null ? void 0 : function() {
                        return b(k());
                    }
                ];
            }, [
                u,
                f,
                p,
                g
            ]);
            var _ = i(c, x[0], x[1]);
            return o(function() {
                S.hasValue = !0, S.value = _;
            }, [
                _
            ]), l(_), _;
        }, JC;
    }
    var tD;
    function E7() {
        return tD || (tD = 1, ZC.exports = S7()), ZC.exports;
    }
    var G4 = E7();
    const M7 = Ao(G4), xy = new WeakMap, GS = new WeakMap, $1 = {
        current: []
    };
    let tI = !1, c0 = 0;
    const Ux = new Set, M_ = new Map;
    function X4(t) {
        const e = Array.from(t).sort((n, r)=>n instanceof by && n.options.deps.includes(r) ? 1 : r instanceof by && r.options.deps.includes(n) ? -1 : 0);
        for (const n of e){
            if ($1.current.includes(n)) continue;
            $1.current.push(n), n.recompute();
            const r = GS.get(n);
            if (r) for (const i of r){
                const s = xy.get(i);
                s && X4(s);
            }
        }
    }
    function T7(t) {
        t.listeners.forEach((e)=>e({
                prevVal: t.prevState,
                currentVal: t.state
            }));
    }
    function C7(t) {
        t.listeners.forEach((e)=>e({
                prevVal: t.prevState,
                currentVal: t.state
            }));
    }
    function K4(t) {
        if (c0 > 0 && !M_.has(t) && M_.set(t, t.prevState), Ux.add(t), !(c0 > 0) && !tI) try {
            for(tI = !0; Ux.size > 0;){
                const e = Array.from(Ux);
                Ux.clear();
                for (const n of e){
                    const r = M_.get(n) ?? n.prevState;
                    n.prevState = r, T7(n);
                }
                for (const n of e){
                    const r = xy.get(n);
                    r && ($1.current.push(n), X4(r));
                }
                for (const n of e){
                    const r = xy.get(n);
                    if (r) for (const i of r)C7(i);
                }
            }
        } finally{
            tI = !1, $1.current = [], M_.clear();
        }
    }
    function nI(t) {
        c0++;
        try {
            t();
        } finally{
            if (c0--, c0 === 0) {
                const e = Array.from(Ux)[0];
                e && K4(e);
            }
        }
    }
    class ZN {
        constructor(e, n){
            this.listeners = new Set, this.subscribe = (r)=>{
                var i, s;
                this.listeners.add(r);
                const o = (s = (i = this.options) == null ? void 0 : i.onSubscribe) == null ? void 0 : s.call(i, r, this);
                return ()=>{
                    this.listeners.delete(r), o?.();
                };
            }, this.setState = (r)=>{
                var i, s, o;
                this.prevState = this.state, this.state = (i = this.options) != null && i.updateFn ? this.options.updateFn(this.prevState)(r) : r(this.prevState), (o = (s = this.options) == null ? void 0 : s.onUpdate) == null || o.call(s), K4(this);
            }, this.prevState = e, this.state = e, this.options = n;
        }
    }
    class by {
        constructor(e){
            this.listeners = new Set, this._subscriptions = [], this.lastSeenDepValues = [], this.getDepVals = ()=>{
                const n = [], r = [];
                for (const i of this.options.deps)n.push(i.prevState), r.push(i.state);
                return this.lastSeenDepValues = r, {
                    prevDepVals: n,
                    currDepVals: r,
                    prevVal: this.prevState ?? void 0
                };
            }, this.recompute = ()=>{
                var n, r;
                this.prevState = this.state;
                const { prevDepVals: i, currDepVals: s, prevVal: o } = this.getDepVals();
                this.state = this.options.fn({
                    prevDepVals: i,
                    currDepVals: s,
                    prevVal: o
                }), (r = (n = this.options).onUpdate) == null || r.call(n);
            }, this.checkIfRecalculationNeededDeeply = ()=>{
                for (const s of this.options.deps)s instanceof by && s.checkIfRecalculationNeededDeeply();
                let n = !1;
                const r = this.lastSeenDepValues, { currDepVals: i } = this.getDepVals();
                for(let s = 0; s < i.length; s++)if (i[s] !== r[s]) {
                    n = !0;
                    break;
                }
                n && this.recompute();
            }, this.mount = ()=>(this.registerOnGraph(), this.checkIfRecalculationNeededDeeply(), ()=>{
                    this.unregisterFromGraph();
                    for (const n of this._subscriptions)n();
                }), this.subscribe = (n)=>{
                var r, i;
                this.listeners.add(n);
                const s = (i = (r = this.options).onSubscribe) == null ? void 0 : i.call(r, n, this);
                return ()=>{
                    this.listeners.delete(n), s?.();
                };
            }, this.options = e, this.state = e.fn({
                prevDepVals: void 0,
                prevVal: void 0,
                currDepVals: this.getDepVals().currDepVals
            });
        }
        registerOnGraph(e = this.options.deps) {
            for (const n of e)if (n instanceof by) n.registerOnGraph(), this.registerOnGraph(n.options.deps);
            else if (n instanceof ZN) {
                let r = xy.get(n);
                r || (r = new Set, xy.set(n, r)), r.add(this);
                let i = GS.get(this);
                i || (i = new Set, GS.set(this, i)), i.add(n);
            }
        }
        unregisterFromGraph(e = this.options.deps) {
            for (const n of e)if (n instanceof by) this.unregisterFromGraph(n.options.deps);
            else if (n instanceof ZN) {
                const r = xy.get(n);
                r && r.delete(this);
                const i = GS.get(this);
                i && i.delete(n);
            }
        }
    }
    function I7(t, e = (n)=>n) {
        return G4.useSyncExternalStoreWithSelector(t.subscribe, ()=>t.state, ()=>t.state, e, R7);
    }
    function R7(t, e) {
        if (Object.is(t, e)) return !0;
        if (typeof t != "object" || t === null || typeof e != "object" || e === null) return !1;
        if (t instanceof Map && e instanceof Map) {
            if (t.size !== e.size) return !1;
            for (const [r, i] of t)if (!e.has(r) || !Object.is(i, e.get(r))) return !1;
            return !0;
        }
        if (t instanceof Set && e instanceof Set) {
            if (t.size !== e.size) return !1;
            for (const r of t)if (!e.has(r)) return !1;
            return !0;
        }
        const n = Object.keys(t);
        if (n.length !== Object.keys(e).length) return !1;
        for(let r = 0; r < n.length; r++)if (!Object.prototype.hasOwnProperty.call(e, n[r]) || !Object.is(t[n[r]], e[n[r]])) return !1;
        return !0;
    }
    const rI = X.createContext(null);
    function Y4() {
        return typeof document > "u" ? rI : window.__TSR_ROUTER_CONTEXT__ ? window.__TSR_ROUTER_CONTEXT__ : (window.__TSR_ROUTER_CONTEXT__ = rI, rI);
    }
    function dl(t) {
        const e = X.useContext(Y4());
        return t?.warn, e;
    }
    function $s(t) {
        const e = dl({
            warn: t?.router === void 0
        }), n = t?.router || e, r = X.useRef(void 0);
        return I7(n.__store, (i)=>{
            if (t?.select) {
                if (t.structuralSharing ?? n.options.defaultStructuralSharing) {
                    const s = el(r.current, t.select(i));
                    return r.current = s, s;
                }
                return t.select(i);
            }
            return i;
        });
    }
    const VM = X.createContext(void 0), A7 = X.createContext(void 0);
    function Vf(t) {
        const e = X.useContext(t.from ? A7 : VM);
        return $s({
            select: (r)=>{
                const i = r.matches.find((s)=>t.from ? t.from === s.routeId : s.id === e);
                if (Yl(!((t.shouldThrow ?? !0) && !i), `Could not find ${t.from ? `an active match from "${t.from}"` : "a nearest match!"}`), i !== void 0) return t.select ? t.select(i) : i;
            },
            structuralSharing: t.structuralSharing
        });
    }
    function Wi(t) {
        return Vf({
            from: t.from,
            strict: t.strict,
            structuralSharing: t.structuralSharing,
            select: (e)=>t.select ? t.select(e.loaderData) : e.loaderData
        });
    }
    function N7(t) {
        const { select: e, ...n } = t;
        return Vf({
            ...n,
            select: (r)=>e ? e(r.loaderDeps) : r.loaderDeps
        });
    }
    function tn(t) {
        return Vf({
            from: t.from,
            strict: t.strict,
            shouldThrow: t.shouldThrow,
            structuralSharing: t.structuralSharing,
            select: (e)=>t.select ? t.select(e.params) : e.params
        });
    }
    function P7(t) {
        return Vf({
            from: t.from,
            strict: t.strict,
            shouldThrow: t.shouldThrow,
            structuralSharing: t.structuralSharing,
            select: (e)=>t.select ? t.select(e.search) : e.search
        });
    }
    function il(t) {
        return !!t?.isNotFound;
    }
    function k7(t) {
        const e = $s({
            select: (n)=>`not-found-${n.location.pathname}-${n.status}`
        });
        return v.jsx(Dk, {
            getResetKey: ()=>e,
            onCatch: (n, r)=>{
                var i;
                if (il(n)) (i = t.onCatch) == null || i.call(t, n, r);
                else throw n;
            },
            errorComponent: ({ error: n })=>{
                var r;
                if (il(n)) return (r = t.fallback) == null ? void 0 : r.call(t, n);
                throw n;
            },
            children: t.children
        });
    }
    function O7() {
        return v.jsx("p", {
            children: "Not Found"
        });
    }
    function dm(t) {
        const { navigate: e } = dl();
        return X.useCallback((n)=>e({
                ...n
            }), [
            e
        ]);
    }
    let Z4 = class {
        constructor(e){
            this.init = (n)=>{
                var r, i;
                this.originalIndex = n.originalIndex;
                const s = this.options, o = !s?.path && !s?.id;
                this.parentRoute = (i = (r = this.options).getParentRoute) == null ? void 0 : i.call(r), o ? this._path = Zo : Yl(this.parentRoute);
                let a = o ? Zo : s.path;
                a && a !== "/" && (a = Ok(a));
                const l = s?.id || a;
                let c = o ? Zo : td([
                    this.parentRoute.id === Zo ? "" : this.parentRoute.id,
                    l
                ]);
                a === Zo && (a = "/"), c !== Zo && (c = td([
                    "/",
                    c
                ]));
                const u = c === Zo ? "/" : td([
                    this.parentRoute.fullPath,
                    a
                ]);
                this._path = a, this._id = c, this._fullPath = u, this._to = u, this._ssr = s?.ssr ?? n.defaultSsr ?? !0;
            }, this.updateLoader = (n)=>(Object.assign(this.options, n), this), this.update = (n)=>(Object.assign(this.options, n), this), this.lazy = (n)=>(this.lazyFn = n, this), this.useMatch = (n)=>Vf({
                    select: n?.select,
                    from: this.id,
                    structuralSharing: n?.structuralSharing
                }), this.useRouteContext = (n)=>Vf({
                    ...n,
                    from: this.id,
                    select: (r)=>n?.select ? n.select(r.context) : r.context
                }), this.useSearch = (n)=>P7({
                    select: n?.select,
                    structuralSharing: n?.structuralSharing,
                    from: this.id
                }), this.useParams = (n)=>tn({
                    select: n?.select,
                    structuralSharing: n?.structuralSharing,
                    from: this.id
                }), this.useLoaderDeps = (n)=>N7({
                    ...n,
                    from: this.id
                }), this.useLoaderData = (n)=>Wi({
                    ...n,
                    from: this.id
                }), this.useNavigate = ()=>dm({
                    from: this.id
                }), this.options = e || {}, this.isRoot = !e?.getParentRoute, Yl(!(e?.id && e?.path)), this.$$typeof = Symbol.for("react.memo");
        }
        get to() {
            return this._to;
        }
        get id() {
            return this._id;
        }
        get path() {
            return this._path;
        }
        get fullPath() {
            return this._fullPath;
        }
        get ssr() {
            return this._ssr;
        }
        addChildren(e) {
            return this._addFileChildren(e);
        }
        _addFileChildren(e) {
            return Array.isArray(e) && (this.children = e), typeof e == "object" && e !== null && (this.children = Object.values(e)), this;
        }
    };
    function L7(t) {
        return new Z4(t);
    }
    function D7() {
        return (t)=>j7(t);
    }
    class F7 extends Z4 {
        constructor(e){
            super(e);
        }
        addChildren(e) {
            return super.addChildren(e), this;
        }
        _addFileChildren(e) {
            return super._addFileChildren(e), this;
        }
        _addFileTypes() {
            return this;
        }
    }
    function j7(t) {
        return new F7(t);
    }
    function jt(t) {
        return new B7(t, {
            silent: !0
        }).createRoute;
    }
    class B7 {
        constructor(e, n){
            this.path = e, this.createRoute = (r)=>{
                this.silent;
                const i = L7(r);
                return i.isRoot = !1, i;
            }, this.silent = n?.silent;
        }
    }
    function Db(t) {
        if (t.isRedirect = !0, t.statusCode = t.statusCode || t.code || 307, t.headers = t.headers || {}, !t.reloadDocument) {
            t.reloadDocument = !1;
            try {
                new URL(`${t.href}`), t.reloadDocument = !0;
            } catch  {}
        }
        if (t.throw) throw t;
        return t;
    }
    function hp(t) {
        return !!t?.isRedirect;
    }
    function iI(t) {
        return !!t?.isRedirect && t.href;
    }
    function XS(t) {
        return v.jsx(v.Fragment, {
            children: t.children
        });
    }
    function J4(t, e, n) {
        return e.options.notFoundComponent ? v.jsx(e.options.notFoundComponent, {
            data: n
        }) : t.options.defaultNotFoundComponent ? v.jsx(t.options.defaultNotFoundComponent, {
            data: n
        }) : v.jsx(O7, {});
    }
    var sI, nD;
    function U7() {
        if (nD) return sI;
        nD = 1;
        const t = {}, e = t.hasOwnProperty, n = (L, R)=>{
            for(const A in L)e.call(L, A) && R(A, L[A]);
        }, r = (L, R)=>(R && n(R, (A, P)=>{
                L[A] = P;
            }), L), i = (L, R)=>{
            const A = L.length;
            let P = -1;
            for(; ++P < A;)R(L[P]);
        }, s = (L)=>"\\u" + ("0000" + L).slice(-4), o = (L, R)=>{
            let A = L.toString(16);
            return R ? A : A.toUpperCase();
        }, a = t.toString, l = Array.isArray, c = (L)=>typeof Buffer == "function" && Buffer.isBuffer(L), u = (L)=>a.call(L) == "[object Object]", f = (L)=>typeof L == "string" || a.call(L) == "[object String]", p = (L)=>typeof L == "number" || a.call(L) == "[object Number]", g = (L)=>typeof L == "bigint", x = (L)=>typeof L == "function", S = (L)=>a.call(L) == "[object Map]", _ = (L)=>a.call(L) == "[object Set]", b = {
            "\\": "\\\\",
            "\b": "\\b",
            "\f": "\\f",
            "\n": "\\n",
            "\r": "\\r",
            "	": "\\t"
        }, M = /[\\\b\f\n\r\t]/, E = /[0-9]/, T = /[\xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/, k = /([\uD800-\uDBFF][\uDC00-\uDFFF])|([\uD800-\uDFFF])|(['"`])|[^]/g, N = /([\uD800-\uDBFF][\uDC00-\uDFFF])|([\uD800-\uDFFF])|(['"`])|[^ !#-&\(-\[\]-_a-~]/g, D = (L, R)=>{
            const A = ()=>{
                te = q, ++R.indentLevel, q = R.indent.repeat(R.indentLevel);
            }, P = {
                escapeEverything: !1,
                minimal: !1,
                isScriptContext: !1,
                quotes: "single",
                wrap: !1,
                es6: !1,
                json: !1,
                compact: !0,
                lowercaseHex: !1,
                numbers: "decimal",
                indent: "	",
                indentLevel: 0,
                __inline1__: !1,
                __inline2__: !1
            }, B = R && R.json;
            B && (P.quotes = "double", P.wrap = !0), R = r(P, R), R.quotes != "single" && R.quotes != "double" && R.quotes != "backtick" && (R.quotes = "single");
            const U = R.quotes == "double" ? '"' : R.quotes == "backtick" ? "`" : "'", j = R.compact, K = R.lowercaseHex;
            let q = R.indent.repeat(R.indentLevel), te = "";
            const W = R.__inline1__, J = R.__inline2__, Q = j ? "" : `
`;
            let Y, le = !0;
            const ue = R.numbers == "binary", ie = R.numbers == "octal", he = R.numbers == "decimal", ge = R.numbers == "hexadecimal";
            if (B && L && x(L.toJSON) && (L = L.toJSON()), !f(L)) {
                if (S(L)) return L.size == 0 ? "new Map()" : (j || (R.__inline1__ = !0, R.__inline2__ = !1), "new Map(" + D(Array.from(L), R) + ")");
                if (_(L)) return L.size == 0 ? "new Set()" : "new Set(" + D(Array.from(L), R) + ")";
                if (c(L)) return L.length == 0 ? "Buffer.from([])" : "Buffer.from(" + D(Array.from(L), R) + ")";
                if (l(L)) return Y = [], R.wrap = !0, W && (R.__inline1__ = !1, R.__inline2__ = !0), J || A(), i(L, (Ee)=>{
                    le = !1, J && (R.__inline2__ = !1), Y.push((j || J ? "" : q) + D(Ee, R));
                }), le ? "[]" : J ? "[" + Y.join(", ") + "]" : "[" + Q + Y.join("," + Q) + Q + (j ? "" : te) + "]";
                if (p(L) || g(L)) {
                    if (B) return JSON.stringify(Number(L));
                    let Ee;
                    if (he) Ee = String(L);
                    else if (ge) {
                        let Ce = L.toString(16);
                        K || (Ce = Ce.toUpperCase()), Ee = "0x" + Ce;
                    } else ue ? Ee = "0b" + L.toString(2) : ie && (Ee = "0o" + L.toString(8));
                    return g(L) ? Ee + "n" : Ee;
                } else return g(L) ? B ? JSON.stringify(Number(L)) : L + "n" : u(L) ? (Y = [], R.wrap = !0, A(), n(L, (Ee, Ce)=>{
                    le = !1, Y.push((j ? "" : q) + D(Ee, R) + ":" + (j ? "" : " ") + D(Ce, R));
                }), le ? "{}" : "{" + Q + Y.join("," + Q) + Q + (j ? "" : te) + "}") : B ? JSON.stringify(L) || "null" : String(L);
            }
            const ve = R.escapeEverything ? k : N;
            return Y = L.replace(ve, (Ee, Ce, Ne, Ve, we, Me)=>{
                if (Ce) {
                    if (R.minimal) return Ce;
                    const Ye = Ce.charCodeAt(0), Be = Ce.charCodeAt(1);
                    if (R.es6) {
                        const it = (Ye - 55296) * 1024 + Be - 56320 + 65536;
                        return "\\u{" + o(it, K) + "}";
                    }
                    return s(o(Ye, K)) + s(o(Be, K));
                }
                if (Ne) return s(o(Ne.charCodeAt(0), K));
                if (Ee == "\0" && !B && !E.test(Me.charAt(we + 1))) return "\\0";
                if (Ve) return Ve == U || R.escapeEverything ? "\\" + Ve : Ve;
                if (M.test(Ee)) return b[Ee];
                if (R.minimal && !T.test(Ee)) return Ee;
                const se = o(Ee.charCodeAt(0), K);
                return B || se.length > 2 ? s(se) : "\\x" + ("00" + se).slice(-2);
            }), U == "`" && (Y = Y.replace(/\$\{/g, "\\${")), R.isScriptContext && (Y = Y.replace(/<\/(script|style)/gi, "<\\/$1").replace(/<!--/g, B ? "\\u003C!--" : "\\x3C!--")), R.wrap && (Y = U + Y + U), Y;
        };
        return D.version = "3.0.2", sI = D, sI;
    }
    U7();
    function z7({ children: t, log: e }) {
        return typeof document < "u" ? null : v.jsx("script", {
            className: "tsr-once",
            dangerouslySetInnerHTML: {
                __html: [
                    t,
                    "",
                    'if (typeof __TSR_SSR__ !== "undefined") __TSR_SSR__.cleanScripts()'
                ].filter(Boolean).join(`
`)
            }
        });
    }
    const G1 = "tsr-scroll-restoration-v1_3", V7 = typeof window < "u" && window.sessionStorage, W7 = (t, e)=>{
        let n;
        return (...r)=>{
            n || (n = setTimeout(()=>{
                t(...r), n = null;
            }, e));
        };
    }, ty = V7 ? {
        state: JSON.parse(window.sessionStorage.getItem(G1) || "null") || {},
        set: (e)=>(ty.state = Mp(e, ty.state) || ty.state, window.sessionStorage.setItem(G1, JSON.stringify(ty.state)))
    } : void 0, JN = (t)=>t.state.key || t.href;
    function q7(t) {
        const e = [];
        let n;
        for(; n = t.parentNode;)e.unshift(`${t.tagName}:nth-child(${[].indexOf.call(n.children, t) + 1})`), t = n;
        return `${e.join(" > ")}`.toLowerCase();
    }
    let X1 = !1;
    function Q4(t, e, n, r, i) {
        var s;
        let o;
        try {
            o = JSON.parse(sessionStorage.getItem(t) || "{}");
        } catch (c) {
            console.error(c);
            return;
        }
        const a = e || ((s = window.history.state) == null ? void 0 : s.key), l = o[a];
        X1 = !0, (()=>{
            if (r && l) {
                for(const u in l){
                    const f = l[u];
                    if (u === "window") window.scrollTo({
                        top: f.scrollY,
                        left: f.scrollX,
                        behavior: n
                    });
                    else if (u) {
                        const p = document.querySelector(u);
                        p && (p.scrollLeft = f.scrollX, p.scrollTop = f.scrollY);
                    }
                }
                return;
            }
            const c = window.location.hash.split("#")[1];
            if (c) {
                const u = (window.history.state || {}).__hashScrollIntoViewOptions ?? !0;
                if (u) {
                    const f = document.getElementById(c);
                    f && f.scrollIntoView(u);
                }
                return;
            }
            [
                "window",
                ...i?.filter((u)=>u !== "window") ?? []
            ].forEach((u)=>{
                const f = u === "window" ? window : document.querySelector(u);
                f && f.scrollTo({
                    top: 0,
                    left: 0,
                    behavior: n
                });
            });
        })(), X1 = !1;
    }
    function H7(t, e) {
        if ((t.options.scrollRestoration ?? !1) && (t.isScrollRestoring = !0), typeof document > "u" || t.isScrollRestorationSetup) return;
        t.isScrollRestorationSetup = !0, X1 = !1;
        const r = t.options.getScrollRestorationKey || JN;
        window.history.scrollRestoration = "manual";
        const i = (s)=>{
            if (X1 || !t.isScrollRestoring) return;
            let o = "";
            if (s.target === document || s.target === window) o = "window";
            else {
                const l = s.target.getAttribute("data-scroll-restoration-id");
                l ? o = `[data-scroll-restoration-id="${l}"]` : o = q7(s.target);
            }
            const a = r(t.state.location);
            ty.set((l)=>{
                const c = l[a] = l[a] || {}, u = c[o] = c[o] || {};
                if (o === "window") u.scrollX = window.scrollX || 0, u.scrollY = window.scrollY || 0;
                else if (o) {
                    const f = document.querySelector(o);
                    f && (u.scrollX = f.scrollLeft || 0, u.scrollY = f.scrollTop || 0);
                }
                return l;
            });
        };
        typeof document < "u" && document.addEventListener("scroll", W7(i, 100), !0), t.subscribe("onRendered", (s)=>{
            const o = r(s.toLocation);
            if (!t.resetNextScroll) {
                t.resetNextScroll = !0;
                return;
            }
            Q4(G1, o, t.options.scrollRestorationBehavior, t.isScrollRestoring, t.options.scrollToTopSelectors), t.isScrollRestoring && ty.set((a)=>(a[o] = a[o] || {}, a));
        });
    }
    function $7() {
        const t = dl(), n = (t.options.getScrollRestorationKey || JN)(t.latestLocation), r = n !== JN(t.latestLocation) ? n : null;
        return !t.isScrollRestoring || !t.isServer ? null : v.jsx(z7, {
            children: `(${Q4.toString()})(${JSON.stringify(G1)},${JSON.stringify(r)}, undefined, true)`,
            log: !1
        });
    }
    const eV = X.memo(function({ matchId: e }) {
        var n, r;
        const i = dl(), s = $s({
            select: (b)=>{
                var M;
                return (M = b.matches.find((E)=>E.id === e)) == null ? void 0 : M.routeId;
            }
        });
        Yl(s);
        const o = i.routesById[s], a = o.options.pendingComponent ?? i.options.defaultPendingComponent, l = a ? v.jsx(a, {}) : null, c = o.options.errorComponent ?? i.options.defaultErrorComponent, u = o.options.onCatch ?? i.options.defaultOnCatch, f = o.isRoot ? o.options.notFoundComponent ?? ((n = i.options.notFoundRoute) == null ? void 0 : n.options.component) : o.options.notFoundComponent, p = (!o.isRoot || o.options.wrapInSuspense) && (o.options.wrapInSuspense ?? a ?? ((r = o.options.errorComponent) == null ? void 0 : r.preload)) ? X.Suspense : XS, g = c ? Dk : XS, x = f ? k7 : XS, S = $s({
            select: (b)=>b.loadedAt
        }), _ = $s({
            select: (b)=>{
                var M;
                const E = b.matches.findIndex((T)=>T.id === e);
                return (M = b.matches[E - 1]) == null ? void 0 : M.routeId;
            }
        });
        return v.jsxs(v.Fragment, {
            children: [
                v.jsx(VM.Provider, {
                    value: e,
                    children: v.jsx(p, {
                        fallback: l,
                        children: v.jsx(g, {
                            getResetKey: ()=>S,
                            errorComponent: c || zM,
                            onCatch: (b, M)=>{
                                if (il(b)) throw b;
                                u?.(b, M);
                            },
                            children: v.jsx(x, {
                                fallback: (b)=>{
                                    if (!f || b.routeId && b.routeId !== s || !b.routeId && !o.isRoot) throw b;
                                    return X.createElement(f, b);
                                },
                                children: v.jsx(X7, {
                                    matchId: e
                                })
                            })
                        })
                    })
                }),
                _ === Zo && i.options.scrollRestoration ? v.jsxs(v.Fragment, {
                    children: [
                        v.jsx(G7, {}),
                        v.jsx($7, {})
                    ]
                }) : null
            ]
        });
    });
    function G7() {
        var t;
        const e = dl(), n = X.useRef(void 0);
        return v.jsx("script", {
            suppressHydrationWarning: !0,
            ref: (r)=>{
                r ? e.emit({
                    type: "onRendered",
                    ...yy(e.state)
                }) : n.current = e.state.resolvedLocation;
            }
        }, (t = e.state.resolvedLocation) == null ? void 0 : t.state.key);
    }
    const X7 = X.memo(function({ matchId: e }) {
        var n, r, i;
        const s = dl(), { match: o, key: a, routeId: l } = $s({
            select: (p)=>{
                const g = p.matches.findIndex((E)=>E.id === e), x = p.matches[g], S = x.routeId, _ = s.routesById[S].options.remountDeps ?? s.options.defaultRemountDeps, b = _?.({
                    routeId: S,
                    loaderDeps: x.loaderDeps,
                    params: x._strictParams,
                    search: x._strictSearch
                });
                return {
                    key: b ? JSON.stringify(b) : void 0,
                    routeId: S,
                    match: KN(x, [
                        "id",
                        "status",
                        "error"
                    ])
                };
            },
            structuralSharing: !0
        }), c = s.routesById[l], u = X.useMemo(()=>{
            const p = c.options.component ?? s.options.defaultComponent;
            return p ? v.jsx(p, {}, a) : v.jsx(fl, {});
        }, [
            a,
            c.options.component,
            s.options.defaultComponent
        ]), f = (c.options.errorComponent ?? s.options.defaultErrorComponent) || zM;
        if (o.status === "notFound") return Yl(il(o.error)), J4(s, c, o.error);
        if (o.status === "redirected") throw Yl(hp(o.error)), (n = s.getMatch(o.id)) == null ? void 0 : n.loadPromise;
        if (o.status === "error") {
            if (s.isServer) return v.jsx(f, {
                error: o.error,
                reset: void 0,
                info: {
                    componentStack: ""
                }
            });
            throw o.error;
        }
        if (o.status === "pending") {
            const p = c.options.pendingMinMs ?? s.options.defaultPendingMinMs;
            if (p && !((r = s.getMatch(o.id)) != null && r.minPendingPromise) && !s.isServer) {
                const g = Xg();
                Promise.resolve().then(()=>{
                    s.updateMatch(o.id, (x)=>({
                            ...x,
                            minPendingPromise: g
                        }));
                }), setTimeout(()=>{
                    g.resolve(), s.updateMatch(o.id, (x)=>({
                            ...x,
                            minPendingPromise: void 0
                        }));
                }, p);
            }
            throw (i = s.getMatch(o.id)) == null ? void 0 : i.loadPromise;
        }
        return u;
    }), fl = X.memo(function() {
        const e = dl(), n = X.useContext(VM), r = $s({
            select: (c)=>{
                var u;
                return (u = c.matches.find((f)=>f.id === n)) == null ? void 0 : u.routeId;
            }
        }), i = e.routesById[r], s = $s({
            select: (c)=>{
                const f = c.matches.find((p)=>p.id === n);
                return Yl(f), f.globalNotFound;
            }
        }), o = $s({
            select: (c)=>{
                var u;
                const f = c.matches, p = f.findIndex((g)=>g.id === n);
                return (u = f[p + 1]) == null ? void 0 : u.id;
            }
        });
        if (s) return J4(e, i, void 0);
        if (!o) return null;
        const a = v.jsx(eV, {
            matchId: o
        }), l = e.options.defaultPendingComponent ? v.jsx(e.options.defaultPendingComponent, {}) : null;
        return n === Zo ? v.jsx(X.Suspense, {
            fallback: l,
            children: a
        }) : a;
    });
    var oI = {
        exports: {}
    }, qo = {}, aI = {
        exports: {}
    }, lI = {};
    var rD;
    function K7() {
        return rD || (rD = 1, function(t) {
            function e(W, J) {
                var Q = W.length;
                W.push(J);
                e: for(; 0 < Q;){
                    var Y = Q - 1 >>> 1, le = W[Y];
                    if (0 < i(le, J)) W[Y] = J, W[Q] = le, Q = Y;
                    else break e;
                }
            }
            function n(W) {
                return W.length === 0 ? null : W[0];
            }
            function r(W) {
                if (W.length === 0) return null;
                var J = W[0], Q = W.pop();
                if (Q !== J) {
                    W[0] = Q;
                    e: for(var Y = 0, le = W.length, ue = le >>> 1; Y < ue;){
                        var ie = 2 * (Y + 1) - 1, he = W[ie], ge = ie + 1, ve = W[ge];
                        if (0 > i(he, Q)) ge < le && 0 > i(ve, he) ? (W[Y] = ve, W[ge] = Q, Y = ge) : (W[Y] = he, W[ie] = Q, Y = ie);
                        else if (ge < le && 0 > i(ve, Q)) W[Y] = ve, W[ge] = Q, Y = ge;
                        else break e;
                    }
                }
                return J;
            }
            function i(W, J) {
                var Q = W.sortIndex - J.sortIndex;
                return Q !== 0 ? Q : W.id - J.id;
            }
            if (typeof performance == "object" && typeof performance.now == "function") {
                var s = performance;
                t.unstable_now = function() {
                    return s.now();
                };
            } else {
                var o = Date, a = o.now();
                t.unstable_now = function() {
                    return o.now() - a;
                };
            }
            var l = [], c = [], u = 1, f = null, p = 3, g = !1, x = !1, S = !1, _ = typeof setTimeout == "function" ? setTimeout : null, b = typeof clearTimeout == "function" ? clearTimeout : null, M = typeof setImmediate < "u" ? setImmediate : null;
            typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
            function E(W) {
                for(var J = n(c); J !== null;){
                    if (J.callback === null) r(c);
                    else if (J.startTime <= W) r(c), J.sortIndex = J.expirationTime, e(l, J);
                    else break;
                    J = n(c);
                }
            }
            function T(W) {
                if (S = !1, E(W), !x) if (n(l) !== null) x = !0, q(k);
                else {
                    var J = n(c);
                    J !== null && te(T, J.startTime - W);
                }
            }
            function k(W, J) {
                x = !1, S && (S = !1, b(L), L = -1), g = !0;
                var Q = p;
                try {
                    for(E(J), f = n(l); f !== null && (!(f.expirationTime > J) || W && !P());){
                        var Y = f.callback;
                        if (typeof Y == "function") {
                            f.callback = null, p = f.priorityLevel;
                            var le = Y(f.expirationTime <= J);
                            J = t.unstable_now(), typeof le == "function" ? f.callback = le : f === n(l) && r(l), E(J);
                        } else r(l);
                        f = n(l);
                    }
                    if (f !== null) var ue = !0;
                    else {
                        var ie = n(c);
                        ie !== null && te(T, ie.startTime - J), ue = !1;
                    }
                    return ue;
                } finally{
                    f = null, p = Q, g = !1;
                }
            }
            var N = !1, D = null, L = -1, R = 5, A = -1;
            function P() {
                return !(t.unstable_now() - A < R);
            }
            function B() {
                if (D !== null) {
                    var W = t.unstable_now();
                    A = W;
                    var J = !0;
                    try {
                        J = D(!0, W);
                    } finally{
                        J ? U() : (N = !1, D = null);
                    }
                } else N = !1;
            }
            var U;
            if (typeof M == "function") U = function() {
                M(B);
            };
            else if (typeof MessageChannel < "u") {
                var j = new MessageChannel, K = j.port2;
                j.port1.onmessage = B, U = function() {
                    K.postMessage(null);
                };
            } else U = function() {
                _(B, 0);
            };
            function q(W) {
                D = W, N || (N = !0, U());
            }
            function te(W, J) {
                L = _(function() {
                    W(t.unstable_now());
                }, J);
            }
            t.unstable_IdlePriority = 5, t.unstable_ImmediatePriority = 1, t.unstable_LowPriority = 4, t.unstable_NormalPriority = 3, t.unstable_Profiling = null, t.unstable_UserBlockingPriority = 2, t.unstable_cancelCallback = function(W) {
                W.callback = null;
            }, t.unstable_continueExecution = function() {
                x || g || (x = !0, q(k));
            }, t.unstable_forceFrameRate = function(W) {
                0 > W || 125 < W ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : R = 0 < W ? Math.floor(1e3 / W) : 5;
            }, t.unstable_getCurrentPriorityLevel = function() {
                return p;
            }, t.unstable_getFirstCallbackNode = function() {
                return n(l);
            }, t.unstable_next = function(W) {
                switch(p){
                    case 1:
                    case 2:
                    case 3:
                        var J = 3;
                        break;
                    default:
                        J = p;
                }
                var Q = p;
                p = J;
                try {
                    return W();
                } finally{
                    p = Q;
                }
            }, t.unstable_pauseExecution = function() {}, t.unstable_requestPaint = function() {}, t.unstable_runWithPriority = function(W, J) {
                switch(W){
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        W = 3;
                }
                var Q = p;
                p = W;
                try {
                    return J();
                } finally{
                    p = Q;
                }
            }, t.unstable_scheduleCallback = function(W, J, Q) {
                var Y = t.unstable_now();
                switch(typeof Q == "object" && Q !== null ? (Q = Q.delay, Q = typeof Q == "number" && 0 < Q ? Y + Q : Y) : Q = Y, W){
                    case 1:
                        var le = -1;
                        break;
                    case 2:
                        le = 250;
                        break;
                    case 5:
                        le = 1073741823;
                        break;
                    case 4:
                        le = 1e4;
                        break;
                    default:
                        le = 5e3;
                }
                return le = Q + le, W = {
                    id: u++,
                    callback: J,
                    priorityLevel: W,
                    startTime: Q,
                    expirationTime: le,
                    sortIndex: -1
                }, Q > Y ? (W.sortIndex = Q, e(c, W), n(l) === null && W === n(c) && (S ? (b(L), L = -1) : S = !0, te(T, Q - Y))) : (W.sortIndex = le, e(l, W), x || g || (x = !0, q(k))), W;
            }, t.unstable_shouldYield = P, t.unstable_wrapCallback = function(W) {
                var J = p;
                return function() {
                    var Q = p;
                    p = J;
                    try {
                        return W.apply(this, arguments);
                    } finally{
                        p = Q;
                    }
                };
            };
        }(lI)), lI;
    }
    var iD;
    function Y7() {
        return iD || (iD = 1, aI.exports = K7()), aI.exports;
    }
    var sD;
    function Z7() {
        if (sD) return qo;
        sD = 1;
        var t = rv(), e = Y7();
        function n(d) {
            for(var h = "https://reactjs.org/docs/error-decoder.html?invariant=" + d, w = 1; w < arguments.length; w++)h += "&args[]=" + encodeURIComponent(arguments[w]);
            return "Minified React error #" + d + "; visit " + h + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
        }
        var r = new Set, i = {};
        function s(d, h) {
            o(d, h), o(d + "Capture", h);
        }
        function o(d, h) {
            for(i[d] = h, d = 0; d < h.length; d++)r.add(h[d]);
        }
        var a = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), l = Object.prototype.hasOwnProperty, c = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, u = {}, f = {};
        function p(d) {
            return l.call(f, d) ? !0 : l.call(u, d) ? !1 : c.test(d) ? f[d] = !0 : (u[d] = !0, !1);
        }
        function g(d, h, w, I) {
            if (w !== null && w.type === 0) return !1;
            switch(typeof h){
                case "function":
                case "symbol":
                    return !0;
                case "boolean":
                    return I ? !1 : w !== null ? !w.acceptsBooleans : (d = d.toLowerCase().slice(0, 5), d !== "data-" && d !== "aria-");
                default:
                    return !1;
            }
        }
        function x(d, h, w, I) {
            if (h === null || typeof h > "u" || g(d, h, w, I)) return !0;
            if (I) return !1;
            if (w !== null) switch(w.type){
                case 3:
                    return !h;
                case 4:
                    return h === !1;
                case 5:
                    return isNaN(h);
                case 6:
                    return isNaN(h) || 1 > h;
            }
            return !1;
        }
        function S(d, h, w, I, F, V, re) {
            this.acceptsBooleans = h === 2 || h === 3 || h === 4, this.attributeName = I, this.attributeNamespace = F, this.mustUseProperty = w, this.propertyName = d, this.type = h, this.sanitizeURL = V, this.removeEmptyString = re;
        }
        var _ = {};
        "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(d) {
            _[d] = new S(d, 0, !1, d, null, !1, !1);
        }), [
            [
                "acceptCharset",
                "accept-charset"
            ],
            [
                "className",
                "class"
            ],
            [
                "htmlFor",
                "for"
            ],
            [
                "httpEquiv",
                "http-equiv"
            ]
        ].forEach(function(d) {
            var h = d[0];
            _[h] = new S(h, 1, !1, d[1], null, !1, !1);
        }), [
            "contentEditable",
            "draggable",
            "spellCheck",
            "value"
        ].forEach(function(d) {
            _[d] = new S(d, 2, !1, d.toLowerCase(), null, !1, !1);
        }), [
            "autoReverse",
            "externalResourcesRequired",
            "focusable",
            "preserveAlpha"
        ].forEach(function(d) {
            _[d] = new S(d, 2, !1, d, null, !1, !1);
        }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(d) {
            _[d] = new S(d, 3, !1, d.toLowerCase(), null, !1, !1);
        }), [
            "checked",
            "multiple",
            "muted",
            "selected"
        ].forEach(function(d) {
            _[d] = new S(d, 3, !0, d, null, !1, !1);
        }), [
            "capture",
            "download"
        ].forEach(function(d) {
            _[d] = new S(d, 4, !1, d, null, !1, !1);
        }), [
            "cols",
            "rows",
            "size",
            "span"
        ].forEach(function(d) {
            _[d] = new S(d, 6, !1, d, null, !1, !1);
        }), [
            "rowSpan",
            "start"
        ].forEach(function(d) {
            _[d] = new S(d, 5, !1, d.toLowerCase(), null, !1, !1);
        });
        var b = /[\-:]([a-z])/g;
        function M(d) {
            return d[1].toUpperCase();
        }
        "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(d) {
            var h = d.replace(b, M);
            _[h] = new S(h, 1, !1, d, null, !1, !1);
        }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(d) {
            var h = d.replace(b, M);
            _[h] = new S(h, 1, !1, d, "http://www.w3.org/1999/xlink", !1, !1);
        }), [
            "xml:base",
            "xml:lang",
            "xml:space"
        ].forEach(function(d) {
            var h = d.replace(b, M);
            _[h] = new S(h, 1, !1, d, "http://www.w3.org/XML/1998/namespace", !1, !1);
        }), [
            "tabIndex",
            "crossOrigin"
        ].forEach(function(d) {
            _[d] = new S(d, 1, !1, d.toLowerCase(), null, !1, !1);
        }), _.xlinkHref = new S("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), [
            "src",
            "href",
            "action",
            "formAction"
        ].forEach(function(d) {
            _[d] = new S(d, 1, !1, d.toLowerCase(), null, !0, !0);
        });
        function E(d, h, w, I) {
            var F = _.hasOwnProperty(h) ? _[h] : null;
            (F !== null ? F.type !== 0 : I || !(2 < h.length) || h[0] !== "o" && h[0] !== "O" || h[1] !== "n" && h[1] !== "N") && (x(h, w, F, I) && (w = null), I || F === null ? p(h) && (w === null ? d.removeAttribute(h) : d.setAttribute(h, "" + w)) : F.mustUseProperty ? d[F.propertyName] = w === null ? F.type === 3 ? !1 : "" : w : (h = F.attributeName, I = F.attributeNamespace, w === null ? d.removeAttribute(h) : (F = F.type, w = F === 3 || F === 4 && w === !0 ? "" : "" + w, I ? d.setAttributeNS(I, h, w) : d.setAttribute(h, w))));
        }
        var T = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, k = Symbol.for("react.element"), N = Symbol.for("react.portal"), D = Symbol.for("react.fragment"), L = Symbol.for("react.strict_mode"), R = Symbol.for("react.profiler"), A = Symbol.for("react.provider"), P = Symbol.for("react.context"), B = Symbol.for("react.forward_ref"), U = Symbol.for("react.suspense"), j = Symbol.for("react.suspense_list"), K = Symbol.for("react.memo"), q = Symbol.for("react.lazy"), te = Symbol.for("react.offscreen"), W = Symbol.iterator;
        function J(d) {
            return d === null || typeof d != "object" ? null : (d = W && d[W] || d["@@iterator"], typeof d == "function" ? d : null);
        }
        var Q = Object.assign, Y;
        function le(d) {
            if (Y === void 0) try {
                throw Error();
            } catch (w) {
                var h = w.stack.trim().match(/\n( *(at )?)/);
                Y = h && h[1] || "";
            }
            return `
` + Y + d;
        }
        var ue = !1;
        function ie(d, h) {
            if (!d || ue) return "";
            ue = !0;
            var w = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            try {
                if (h) if (h = function() {
                    throw Error();
                }, Object.defineProperty(h.prototype, "props", {
                    set: function() {
                        throw Error();
                    }
                }), typeof Reflect == "object" && Reflect.construct) {
                    try {
                        Reflect.construct(h, []);
                    } catch (Ke) {
                        var I = Ke;
                    }
                    Reflect.construct(d, [], h);
                } else {
                    try {
                        h.call();
                    } catch (Ke) {
                        I = Ke;
                    }
                    d.call(h.prototype);
                }
                else {
                    try {
                        throw Error();
                    } catch (Ke) {
                        I = Ke;
                    }
                    d();
                }
            } catch (Ke) {
                if (Ke && I && typeof Ke.stack == "string") {
                    for(var F = Ke.stack.split(`
`), V = I.stack.split(`
`), re = F.length - 1, be = V.length - 1; 1 <= re && 0 <= be && F[re] !== V[be];)be--;
                    for(; 1 <= re && 0 <= be; re--, be--)if (F[re] !== V[be]) {
                        if (re !== 1 || be !== 1) do if (re--, be--, 0 > be || F[re] !== V[be]) {
                            var Te = `
` + F[re].replace(" at new ", " at ");
                            return d.displayName && Te.includes("<anonymous>") && (Te = Te.replace("<anonymous>", d.displayName)), Te;
                        }
                        while (1 <= re && 0 <= be);
                        break;
                    }
                }
            } finally{
                ue = !1, Error.prepareStackTrace = w;
            }
            return (d = d ? d.displayName || d.name : "") ? le(d) : "";
        }
        function he(d) {
            switch(d.tag){
                case 5:
                    return le(d.type);
                case 16:
                    return le("Lazy");
                case 13:
                    return le("Suspense");
                case 19:
                    return le("SuspenseList");
                case 0:
                case 2:
                case 15:
                    return d = ie(d.type, !1), d;
                case 11:
                    return d = ie(d.type.render, !1), d;
                case 1:
                    return d = ie(d.type, !0), d;
                default:
                    return "";
            }
        }
        function ge(d) {
            if (d == null) return null;
            if (typeof d == "function") return d.displayName || d.name || null;
            if (typeof d == "string") return d;
            switch(d){
                case D:
                    return "Fragment";
                case N:
                    return "Portal";
                case R:
                    return "Profiler";
                case L:
                    return "StrictMode";
                case U:
                    return "Suspense";
                case j:
                    return "SuspenseList";
            }
            if (typeof d == "object") switch(d.$$typeof){
                case P:
                    return (d.displayName || "Context") + ".Consumer";
                case A:
                    return (d._context.displayName || "Context") + ".Provider";
                case B:
                    var h = d.render;
                    return d = d.displayName, d || (d = h.displayName || h.name || "", d = d !== "" ? "ForwardRef(" + d + ")" : "ForwardRef"), d;
                case K:
                    return h = d.displayName || null, h !== null ? h : ge(d.type) || "Memo";
                case q:
                    h = d._payload, d = d._init;
                    try {
                        return ge(d(h));
                    } catch  {}
            }
            return null;
        }
        function ve(d) {
            var h = d.type;
            switch(d.tag){
                case 24:
                    return "Cache";
                case 9:
                    return (h.displayName || "Context") + ".Consumer";
                case 10:
                    return (h._context.displayName || "Context") + ".Provider";
                case 18:
                    return "DehydratedFragment";
                case 11:
                    return d = h.render, d = d.displayName || d.name || "", h.displayName || (d !== "" ? "ForwardRef(" + d + ")" : "ForwardRef");
                case 7:
                    return "Fragment";
                case 5:
                    return h;
                case 4:
                    return "Portal";
                case 3:
                    return "Root";
                case 6:
                    return "Text";
                case 16:
                    return ge(h);
                case 8:
                    return h === L ? "StrictMode" : "Mode";
                case 22:
                    return "Offscreen";
                case 12:
                    return "Profiler";
                case 21:
                    return "Scope";
                case 13:
                    return "Suspense";
                case 19:
                    return "SuspenseList";
                case 25:
                    return "TracingMarker";
                case 1:
                case 0:
                case 17:
                case 2:
                case 14:
                case 15:
                    if (typeof h == "function") return h.displayName || h.name || null;
                    if (typeof h == "string") return h;
            }
            return null;
        }
        function Ee(d) {
            switch(typeof d){
                case "boolean":
                case "number":
                case "string":
                case "undefined":
                    return d;
                case "object":
                    return d;
                default:
                    return "";
            }
        }
        function Ce(d) {
            var h = d.type;
            return (d = d.nodeName) && d.toLowerCase() === "input" && (h === "checkbox" || h === "radio");
        }
        function Ne(d) {
            var h = Ce(d) ? "checked" : "value", w = Object.getOwnPropertyDescriptor(d.constructor.prototype, h), I = "" + d[h];
            if (!d.hasOwnProperty(h) && typeof w < "u" && typeof w.get == "function" && typeof w.set == "function") {
                var F = w.get, V = w.set;
                return Object.defineProperty(d, h, {
                    configurable: !0,
                    get: function() {
                        return F.call(this);
                    },
                    set: function(re) {
                        I = "" + re, V.call(this, re);
                    }
                }), Object.defineProperty(d, h, {
                    enumerable: w.enumerable
                }), {
                    getValue: function() {
                        return I;
                    },
                    setValue: function(re) {
                        I = "" + re;
                    },
                    stopTracking: function() {
                        d._valueTracker = null, delete d[h];
                    }
                };
            }
        }
        function Ve(d) {
            d._valueTracker || (d._valueTracker = Ne(d));
        }
        function we(d) {
            if (!d) return !1;
            var h = d._valueTracker;
            if (!h) return !0;
            var w = h.getValue(), I = "";
            return d && (I = Ce(d) ? d.checked ? "true" : "false" : d.value), d = I, d !== w ? (h.setValue(d), !0) : !1;
        }
        function Me(d) {
            if (d = d || (typeof document < "u" ? document : void 0), typeof d > "u") return null;
            try {
                return d.activeElement || d.body;
            } catch  {
                return d.body;
            }
        }
        function se(d, h) {
            var w = h.checked;
            return Q({}, h, {
                defaultChecked: void 0,
                defaultValue: void 0,
                value: void 0,
                checked: w ?? d._wrapperState.initialChecked
            });
        }
        function Ye(d, h) {
            var w = h.defaultValue == null ? "" : h.defaultValue, I = h.checked != null ? h.checked : h.defaultChecked;
            w = Ee(h.value != null ? h.value : w), d._wrapperState = {
                initialChecked: I,
                initialValue: w,
                controlled: h.type === "checkbox" || h.type === "radio" ? h.checked != null : h.value != null
            };
        }
        function Be(d, h) {
            h = h.checked, h != null && E(d, "checked", h, !1);
        }
        function it(d, h) {
            Be(d, h);
            var w = Ee(h.value), I = h.type;
            if (w != null) I === "number" ? (w === 0 && d.value === "" || d.value != w) && (d.value = "" + w) : d.value !== "" + w && (d.value = "" + w);
            else if (I === "submit" || I === "reset") {
                d.removeAttribute("value");
                return;
            }
            h.hasOwnProperty("value") ? ae(d, h.type, w) : h.hasOwnProperty("defaultValue") && ae(d, h.type, Ee(h.defaultValue)), h.checked == null && h.defaultChecked != null && (d.defaultChecked = !!h.defaultChecked);
        }
        function de(d, h, w) {
            if (h.hasOwnProperty("value") || h.hasOwnProperty("defaultValue")) {
                var I = h.type;
                if (!(I !== "submit" && I !== "reset" || h.value !== void 0 && h.value !== null)) return;
                h = "" + d._wrapperState.initialValue, w || h === d.value || (d.value = h), d.defaultValue = h;
            }
            w = d.name, w !== "" && (d.name = ""), d.defaultChecked = !!d._wrapperState.initialChecked, w !== "" && (d.name = w);
        }
        function ae(d, h, w) {
            (h !== "number" || Me(d.ownerDocument) !== d) && (w == null ? d.defaultValue = "" + d._wrapperState.initialValue : d.defaultValue !== "" + w && (d.defaultValue = "" + w));
        }
        var oe = Array.isArray;
        function $(d, h, w, I) {
            if (d = d.options, h) {
                h = {};
                for(var F = 0; F < w.length; F++)h["$" + w[F]] = !0;
                for(w = 0; w < d.length; w++)F = h.hasOwnProperty("$" + d[w].value), d[w].selected !== F && (d[w].selected = F), F && I && (d[w].defaultSelected = !0);
            } else {
                for(w = "" + Ee(w), h = null, F = 0; F < d.length; F++){
                    if (d[F].value === w) {
                        d[F].selected = !0, I && (d[F].defaultSelected = !0);
                        return;
                    }
                    h !== null || d[F].disabled || (h = d[F]);
                }
                h !== null && (h.selected = !0);
            }
        }
        function H(d, h) {
            if (h.dangerouslySetInnerHTML != null) throw Error(n(91));
            return Q({}, h, {
                value: void 0,
                defaultValue: void 0,
                children: "" + d._wrapperState.initialValue
            });
        }
        function fe(d, h) {
            var w = h.value;
            if (w == null) {
                if (w = h.children, h = h.defaultValue, w != null) {
                    if (h != null) throw Error(n(92));
                    if (oe(w)) {
                        if (1 < w.length) throw Error(n(93));
                        w = w[0];
                    }
                    h = w;
                }
                h == null && (h = ""), w = h;
            }
            d._wrapperState = {
                initialValue: Ee(w)
            };
        }
        function pe(d, h) {
            var w = Ee(h.value), I = Ee(h.defaultValue);
            w != null && (w = "" + w, w !== d.value && (d.value = w), h.defaultValue == null && d.defaultValue !== w && (d.defaultValue = w)), I != null && (d.defaultValue = "" + I);
        }
        function me(d) {
            var h = d.textContent;
            h === d._wrapperState.initialValue && h !== "" && h !== null && (d.value = h);
        }
        function Ie(d) {
            switch(d){
                case "svg":
                    return "http://www.w3.org/2000/svg";
                case "math":
                    return "http://www.w3.org/1998/Math/MathML";
                default:
                    return "http://www.w3.org/1999/xhtml";
            }
        }
        function Xe(d, h) {
            return d == null || d === "http://www.w3.org/1999/xhtml" ? Ie(h) : d === "http://www.w3.org/2000/svg" && h === "foreignObject" ? "http://www.w3.org/1999/xhtml" : d;
        }
        var Ze, at = function(d) {
            return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(h, w, I, F) {
                MSApp.execUnsafeLocalFunction(function() {
                    return d(h, w, I, F);
                });
            } : d;
        }(function(d, h) {
            if (d.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in d) d.innerHTML = h;
            else {
                for(Ze = Ze || document.createElement("div"), Ze.innerHTML = "<svg>" + h.valueOf().toString() + "</svg>", h = Ze.firstChild; d.firstChild;)d.removeChild(d.firstChild);
                for(; h.firstChild;)d.appendChild(h.firstChild);
            }
        });
        function Je(d, h) {
            if (h) {
                var w = d.firstChild;
                if (w && w === d.lastChild && w.nodeType === 3) {
                    w.nodeValue = h;
                    return;
                }
            }
            d.textContent = h;
        }
        var Pe = {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0
        }, Fe = [
            "Webkit",
            "ms",
            "Moz",
            "O"
        ];
        Object.keys(Pe).forEach(function(d) {
            Fe.forEach(function(h) {
                h = h + d.charAt(0).toUpperCase() + d.substring(1), Pe[h] = Pe[d];
            });
        });
        function nt(d, h, w) {
            return h == null || typeof h == "boolean" || h === "" ? "" : w || typeof h != "number" || h === 0 || Pe.hasOwnProperty(d) && Pe[d] ? ("" + h).trim() : h + "px";
        }
        function ct(d, h) {
            d = d.style;
            for(var w in h)if (h.hasOwnProperty(w)) {
                var I = w.indexOf("--") === 0, F = nt(w, h[w], I);
                w === "float" && (w = "cssFloat"), I ? d.setProperty(w, F) : d[w] = F;
            }
        }
        var st = Q({
            menuitem: !0
        }, {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0
        });
        function _e(d, h) {
            if (h) {
                if (st[d] && (h.children != null || h.dangerouslySetInnerHTML != null)) throw Error(n(137, d));
                if (h.dangerouslySetInnerHTML != null) {
                    if (h.children != null) throw Error(n(60));
                    if (typeof h.dangerouslySetInnerHTML != "object" || !("__html" in h.dangerouslySetInnerHTML)) throw Error(n(61));
                }
                if (h.style != null && typeof h.style != "object") throw Error(n(62));
            }
        }
        function $e(d, h) {
            if (d.indexOf("-") === -1) return typeof h.is == "string";
            switch(d){
                case "annotation-xml":
                case "color-profile":
                case "font-face":
                case "font-face-src":
                case "font-face-uri":
                case "font-face-format":
                case "font-face-name":
                case "missing-glyph":
                    return !1;
                default:
                    return !0;
            }
        }
        var ht = null;
        function Se(d) {
            return d = d.target || d.srcElement || window, d.correspondingUseElement && (d = d.correspondingUseElement), d.nodeType === 3 ? d.parentNode : d;
        }
        var lt = null, Re = null, Ue = null;
        function We(d) {
            if (d = Sl(d)) {
                if (typeof lt != "function") throw Error(n(280));
                var h = d.stateNode;
                h && (h = Qm(h), lt(d.stateNode, d.type, h));
            }
        }
        function rt(d) {
            Re ? Ue ? Ue.push(d) : Ue = [
                d
            ] : Re = d;
        }
        function pt() {
            if (Re) {
                var d = Re, h = Ue;
                if (Ue = Re = null, We(d), h) for(d = 0; d < h.length; d++)We(h[d]);
            }
        }
        function Nt(d, h) {
            return d(h);
        }
        function Zt() {}
        var wt = !1;
        function Nn(d, h, w) {
            if (wt) return d(h, w);
            wt = !0;
            try {
                return Nt(d, h, w);
            } finally{
                wt = !1, (Re !== null || Ue !== null) && (Zt(), pt());
            }
        }
        function pn(d, h) {
            var w = d.stateNode;
            if (w === null) return null;
            var I = Qm(w);
            if (I === null) return null;
            w = I[h];
            e: switch(h){
                case "onClick":
                case "onClickCapture":
                case "onDoubleClick":
                case "onDoubleClickCapture":
                case "onMouseDown":
                case "onMouseDownCapture":
                case "onMouseMove":
                case "onMouseMoveCapture":
                case "onMouseUp":
                case "onMouseUpCapture":
                case "onMouseEnter":
                    (I = !I.disabled) || (d = d.type, I = !(d === "button" || d === "input" || d === "select" || d === "textarea")), d = !I;
                    break e;
                default:
                    d = !1;
            }
            if (d) return null;
            if (w && typeof w != "function") throw Error(n(231, h, typeof w));
            return w;
        }
        var Fr = !1;
        if (a) try {
            var za = {};
            Object.defineProperty(za, "passive", {
                get: function() {
                    Fr = !0;
                }
            }), window.addEventListener("test", za, za), window.removeEventListener("test", za, za);
        } catch  {
            Fr = !1;
        }
        function Po(d, h, w, I, F, V, re, be, Te) {
            var Ke = Array.prototype.slice.call(arguments, 3);
            try {
                h.apply(w, Ke);
            } catch (ft) {
                this.onError(ft);
            }
        }
        var ro = !1, pl = null, io = !1, Va = null, wd = {
            onError: function(d) {
                ro = !0, pl = d;
            }
        };
        function fc(d, h, w, I, F, V, re, be, Te) {
            ro = !1, pl = null, Po.apply(wd, arguments);
        }
        function tu(d, h, w, I, F, V, re, be, Te) {
            if (fc.apply(this, arguments), ro) {
                if (ro) {
                    var Ke = pl;
                    ro = !1, pl = null;
                } else throw Error(n(198));
                io || (io = !0, Va = Ke);
            }
        }
        function so(d) {
            var h = d, w = d;
            if (d.alternate) for(; h.return;)h = h.return;
            else {
                d = h;
                do h = d, h.flags & 4098 && (w = h.return), d = h.return;
                while (d);
            }
            return h.tag === 3 ? w : null;
        }
        function _d(d) {
            if (d.tag === 13) {
                var h = d.memoizedState;
                if (h === null && (d = d.alternate, d !== null && (h = d.memoizedState)), h !== null) return h.dehydrated;
            }
            return null;
        }
        function Sd(d) {
            if (so(d) !== d) throw Error(n(188));
        }
        function Ed(d) {
            var h = d.alternate;
            if (!h) {
                if (h = so(d), h === null) throw Error(n(188));
                return h !== d ? null : d;
            }
            for(var w = d, I = h;;){
                var F = w.return;
                if (F === null) break;
                var V = F.alternate;
                if (V === null) {
                    if (I = F.return, I !== null) {
                        w = I;
                        continue;
                    }
                    break;
                }
                if (F.child === V.child) {
                    for(V = F.child; V;){
                        if (V === w) return Sd(F), d;
                        if (V === I) return Sd(F), h;
                        V = V.sibling;
                    }
                    throw Error(n(188));
                }
                if (w.return !== I.return) w = F, I = V;
                else {
                    for(var re = !1, be = F.child; be;){
                        if (be === w) {
                            re = !0, w = F, I = V;
                            break;
                        }
                        if (be === I) {
                            re = !0, I = F, w = V;
                            break;
                        }
                        be = be.sibling;
                    }
                    if (!re) {
                        for(be = V.child; be;){
                            if (be === w) {
                                re = !0, w = V, I = F;
                                break;
                            }
                            if (be === I) {
                                re = !0, I = V, w = F;
                                break;
                            }
                            be = be.sibling;
                        }
                        if (!re) throw Error(n(189));
                    }
                }
                if (w.alternate !== I) throw Error(n(190));
            }
            if (w.tag !== 3) throw Error(n(188));
            return w.stateNode.current === w ? d : h;
        }
        function Md(d) {
            return d = Ed(d), d !== null ? Td(d) : null;
        }
        function Td(d) {
            if (d.tag === 5 || d.tag === 6) return d;
            for(d = d.child; d !== null;){
                var h = Td(d);
                if (h !== null) return h;
                d = d.sibling;
            }
            return null;
        }
        var Cd = e.unstable_scheduleCallback, ce = e.unstable_cancelCallback, Oe = e.unstable_shouldYield, Ge = e.unstable_requestPaint, je = e.unstable_now, Le = e.unstable_getCurrentPriorityLevel, dt = e.unstable_ImmediatePriority, _t = e.unstable_UserBlockingPriority, Ct = e.unstable_NormalPriority, Pt = e.unstable_LowPriority, Jt = e.unstable_IdlePriority, Xt = null, yt = null;
        function Wt(d) {
            if (yt && typeof yt.onCommitFiberRoot == "function") try {
                yt.onCommitFiberRoot(Xt, d, void 0, (d.current.flags & 128) === 128);
            } catch  {}
        }
        var nn = Math.clz32 ? Math.clz32 : bn, Pn = Math.log, kn = Math.LN2;
        function bn(d) {
            return d >>>= 0, d === 0 ? 32 : 31 - (Pn(d) / kn | 0) | 0;
        }
        var zt = 64, Un = 4194304;
        function Sn(d) {
            switch(d & -d){
                case 1:
                    return 1;
                case 2:
                    return 2;
                case 4:
                    return 4;
                case 8:
                    return 8;
                case 16:
                    return 16;
                case 32:
                    return 32;
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                    return d & 4194240;
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    return d & 130023424;
                case 134217728:
                    return 134217728;
                case 268435456:
                    return 268435456;
                case 536870912:
                    return 536870912;
                case 1073741824:
                    return 1073741824;
                default:
                    return d;
            }
        }
        function Zr(d, h) {
            var w = d.pendingLanes;
            if (w === 0) return 0;
            var I = 0, F = d.suspendedLanes, V = d.pingedLanes, re = w & 268435455;
            if (re !== 0) {
                var be = re & ~F;
                be !== 0 ? I = Sn(be) : (V &= re, V !== 0 && (I = Sn(V)));
            } else re = w & ~F, re !== 0 ? I = Sn(re) : V !== 0 && (I = Sn(V));
            if (I === 0) return 0;
            if (h !== 0 && h !== I && !(h & F) && (F = I & -I, V = h & -h, F >= V || F === 16 && (V & 4194240) !== 0)) return h;
            if (I & 4 && (I |= w & 16), h = d.entangledLanes, h !== 0) for(d = d.entanglements, h &= I; 0 < h;)w = 31 - nn(h), F = 1 << w, I |= d[w], h &= ~F;
            return I;
        }
        function da(d, h) {
            switch(d){
                case 1:
                case 2:
                case 4:
                    return h + 250;
                case 8:
                case 16:
                case 32:
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                    return h + 5e3;
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    return -1;
                case 134217728:
                case 268435456:
                case 536870912:
                case 1073741824:
                    return -1;
                default:
                    return -1;
            }
        }
        function ii(d, h) {
            for(var w = d.suspendedLanes, I = d.pingedLanes, F = d.expirationTimes, V = d.pendingLanes; 0 < V;){
                var re = 31 - nn(V), be = 1 << re, Te = F[re];
                Te === -1 ? (!(be & w) || be & I) && (F[re] = da(be, h)) : Te <= h && (d.expiredLanes |= be), V &= ~be;
            }
        }
        function oo(d) {
            return d = d.pendingLanes & -1073741825, d !== 0 ? d : d & 1073741824 ? 1073741824 : 0;
        }
        function zn() {
            var d = zt;
            return zt <<= 1, !(zt & 4194240) && (zt = 64), d;
        }
        function is(d) {
            for(var h = [], w = 0; 31 > w; w++)h.push(d);
            return h;
        }
        function Ai(d, h, w) {
            d.pendingLanes |= h, h !== 536870912 && (d.suspendedLanes = 0, d.pingedLanes = 0), d = d.eventTimes, h = 31 - nn(h), d[h] = w;
        }
        function Hi(d, h) {
            var w = d.pendingLanes & ~h;
            d.pendingLanes = h, d.suspendedLanes = 0, d.pingedLanes = 0, d.expiredLanes &= h, d.mutableReadLanes &= h, d.entangledLanes &= h, h = d.entanglements;
            var I = d.eventTimes;
            for(d = d.expirationTimes; 0 < w;){
                var F = 31 - nn(w), V = 1 << F;
                h[F] = 0, I[F] = -1, d[F] = -1, w &= ~V;
            }
        }
        function Jr(d, h) {
            var w = d.entangledLanes |= h;
            for(d = d.entanglements; w;){
                var I = 31 - nn(w), F = 1 << I;
                F & h | d[I] & h && (d[I] |= h), w &= ~F;
            }
        }
        var qn = 0;
        function Ns(d) {
            return d &= -d, 1 < d ? 4 < d ? d & 268435455 ? 16 : 536870912 : 4 : 1;
        }
        var fh, Sv, Aw, wm, _m, nu = !1, Sm = [], Wa = null, On = null, ml = null, ru = new Map, Id = new Map, hc = [], xC = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
        function xi(d, h) {
            switch(d){
                case "focusin":
                case "focusout":
                    Wa = null;
                    break;
                case "dragenter":
                case "dragleave":
                    On = null;
                    break;
                case "mouseover":
                case "mouseout":
                    ml = null;
                    break;
                case "pointerover":
                case "pointerout":
                    ru.delete(h.pointerId);
                    break;
                case "gotpointercapture":
                case "lostpointercapture":
                    Id.delete(h.pointerId);
            }
        }
        function iu(d, h, w, I, F, V) {
            return d === null || d.nativeEvent !== V ? (d = {
                blockedOn: h,
                domEventName: w,
                eventSystemFlags: I,
                nativeEvent: V,
                targetContainers: [
                    F
                ]
            }, h !== null && (h = Sl(h), h !== null && Sv(h)), d) : (d.eventSystemFlags |= I, h = d.targetContainers, F !== null && h.indexOf(F) === -1 && h.push(F), d);
        }
        function bC(d, h, w, I, F) {
            switch(h){
                case "focusin":
                    return Wa = iu(Wa, d, h, w, I, F), !0;
                case "dragenter":
                    return On = iu(On, d, h, w, I, F), !0;
                case "mouseover":
                    return ml = iu(ml, d, h, w, I, F), !0;
                case "pointerover":
                    var V = F.pointerId;
                    return ru.set(V, iu(ru.get(V) || null, d, h, w, I, F)), !0;
                case "gotpointercapture":
                    return V = F.pointerId, Id.set(V, iu(Id.get(V) || null, d, h, w, I, F)), !0;
            }
            return !1;
        }
        function Em(d) {
            var h = bc(d.target);
            if (h !== null) {
                var w = so(h);
                if (w !== null) {
                    if (h = w.tag, h === 13) {
                        if (h = _d(w), h !== null) {
                            d.blockedOn = h, _m(d.priority, function() {
                                Aw(w);
                            });
                            return;
                        }
                    } else if (h === 3 && w.stateNode.current.memoizedState.isDehydrated) {
                        d.blockedOn = w.tag === 3 ? w.stateNode.containerInfo : null;
                        return;
                    }
                }
            }
            d.blockedOn = null;
        }
        function Mm(d) {
            if (d.blockedOn !== null) return !1;
            for(var h = d.targetContainers; 0 < h.length;){
                var w = Oo(d.domEventName, d.eventSystemFlags, h[0], d.nativeEvent);
                if (w === null) {
                    w = d.nativeEvent;
                    var I = new w.constructor(w.type, w);
                    ht = I, w.target.dispatchEvent(I), ht = null;
                } else return h = Sl(w), h !== null && Sv(h), d.blockedOn = w, !1;
                h.shift();
            }
            return !0;
        }
        function hh(d, h, w) {
            Mm(d) && w.delete(h);
        }
        function qa() {
            nu = !1, Wa !== null && Mm(Wa) && (Wa = null), On !== null && Mm(On) && (On = null), ml !== null && Mm(ml) && (ml = null), ru.forEach(hh), Id.forEach(hh);
        }
        function ph(d, h) {
            d.blockedOn === h && (d.blockedOn = null, nu || (nu = !0, e.unstable_scheduleCallback(e.unstable_NormalPriority, qa)));
        }
        function mh(d) {
            function h(F) {
                return ph(F, d);
            }
            if (0 < Sm.length) {
                ph(Sm[0], d);
                for(var w = 1; w < Sm.length; w++){
                    var I = Sm[w];
                    I.blockedOn === d && (I.blockedOn = null);
                }
            }
            for(Wa !== null && ph(Wa, d), On !== null && ph(On, d), ml !== null && ph(ml, d), ru.forEach(h), Id.forEach(h), w = 0; w < hc.length; w++)I = hc[w], I.blockedOn === d && (I.blockedOn = null);
            for(; 0 < hc.length && (w = hc[0], w.blockedOn === null);)Em(w), w.blockedOn === null && hc.shift();
        }
        var ms = T.ReactCurrentBatchConfig, ko = !0;
        function Tm(d, h, w, I) {
            var F = qn, V = ms.transition;
            ms.transition = null;
            try {
                qn = 1, Cm(d, h, w, I);
            } finally{
                qn = F, ms.transition = V;
            }
        }
        function Ev(d, h, w, I) {
            var F = qn, V = ms.transition;
            ms.transition = null;
            try {
                qn = 4, Cm(d, h, w, I);
            } finally{
                qn = F, ms.transition = V;
            }
        }
        function Cm(d, h, w, I) {
            if (ko) {
                var F = Oo(d, h, w, I);
                if (F === null) Gm(d, h, I, Im, w), xi(d, I);
                else if (bC(F, d, h, w, I)) I.stopPropagation();
                else if (xi(d, I), h & 4 && -1 < xC.indexOf(d)) {
                    for(; F !== null;){
                        var V = Sl(F);
                        if (V !== null && fh(V), V = Oo(d, h, w, I), V === null && Gm(d, h, I, Im, w), V === F) break;
                        F = V;
                    }
                    F !== null && I.stopPropagation();
                } else Gm(d, h, I, null, w);
            }
        }
        var Im = null;
        function Oo(d, h, w, I) {
            if (Im = null, d = Se(I), d = bc(d), d !== null) if (h = so(d), h === null) d = null;
            else if (w = h.tag, w === 13) {
                if (d = _d(h), d !== null) return d;
                d = null;
            } else if (w === 3) {
                if (h.stateNode.current.memoizedState.isDehydrated) return h.tag === 3 ? h.stateNode.containerInfo : null;
                d = null;
            } else h !== d && (d = null);
            return Im = d, null;
        }
        function Nw(d) {
            switch(d){
                case "cancel":
                case "click":
                case "close":
                case "contextmenu":
                case "copy":
                case "cut":
                case "auxclick":
                case "dblclick":
                case "dragend":
                case "dragstart":
                case "drop":
                case "focusin":
                case "focusout":
                case "input":
                case "invalid":
                case "keydown":
                case "keypress":
                case "keyup":
                case "mousedown":
                case "mouseup":
                case "paste":
                case "pause":
                case "play":
                case "pointercancel":
                case "pointerdown":
                case "pointerup":
                case "ratechange":
                case "reset":
                case "resize":
                case "seeked":
                case "submit":
                case "touchcancel":
                case "touchend":
                case "touchstart":
                case "volumechange":
                case "change":
                case "selectionchange":
                case "textInput":
                case "compositionstart":
                case "compositionend":
                case "compositionupdate":
                case "beforeblur":
                case "afterblur":
                case "beforeinput":
                case "blur":
                case "fullscreenchange":
                case "focus":
                case "hashchange":
                case "popstate":
                case "select":
                case "selectstart":
                    return 1;
                case "drag":
                case "dragenter":
                case "dragexit":
                case "dragleave":
                case "dragover":
                case "mousemove":
                case "mouseout":
                case "mouseover":
                case "pointermove":
                case "pointerout":
                case "pointerover":
                case "scroll":
                case "toggle":
                case "touchmove":
                case "wheel":
                case "mouseenter":
                case "mouseleave":
                case "pointerenter":
                case "pointerleave":
                    return 4;
                case "message":
                    switch(Le()){
                        case dt:
                            return 1;
                        case _t:
                            return 4;
                        case Ct:
                        case Pt:
                            return 16;
                        case Jt:
                            return 536870912;
                        default:
                            return 16;
                    }
                default:
                    return 16;
            }
        }
        var fa = null, Mv = null, Ps = null;
        function gh() {
            if (Ps) return Ps;
            var d, h = Mv, w = h.length, I, F = "value" in fa ? fa.value : fa.textContent, V = F.length;
            for(d = 0; d < w && h[d] === F[d]; d++);
            var re = w - d;
            for(I = 1; I <= re && h[w - I] === F[V - I]; I++);
            return Ps = F.slice(d, 1 < I ? 1 - I : void 0);
        }
        function su(d) {
            var h = d.keyCode;
            return "charCode" in d ? (d = d.charCode, d === 0 && h === 13 && (d = 13)) : d = h, d === 10 && (d = 13), 32 <= d || d === 13 ? d : 0;
        }
        function gl() {
            return !0;
        }
        function Rm() {
            return !1;
        }
        function gs(d) {
            function h(w, I, F, V, re) {
                this._reactName = w, this._targetInst = F, this.type = I, this.nativeEvent = V, this.target = re, this.currentTarget = null;
                for(var be in d)d.hasOwnProperty(be) && (w = d[be], this[be] = w ? w(V) : V[be]);
                return this.isDefaultPrevented = (V.defaultPrevented != null ? V.defaultPrevented : V.returnValue === !1) ? gl : Rm, this.isPropagationStopped = Rm, this;
            }
            return Q(h.prototype, {
                preventDefault: function() {
                    this.defaultPrevented = !0;
                    var w = this.nativeEvent;
                    w && (w.preventDefault ? w.preventDefault() : typeof w.returnValue != "unknown" && (w.returnValue = !1), this.isDefaultPrevented = gl);
                },
                stopPropagation: function() {
                    var w = this.nativeEvent;
                    w && (w.stopPropagation ? w.stopPropagation() : typeof w.cancelBubble != "unknown" && (w.cancelBubble = !0), this.isPropagationStopped = gl);
                },
                persist: function() {},
                isPersistent: gl
            }), h;
        }
        var ou = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function(d) {
                return d.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0
        }, yh = gs(ou), au = Q({}, ou, {
            view: 0,
            detail: 0
        }), Rd = gs(au), ks, Lo, Do, Ad = Q({}, au, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: mc,
            button: 0,
            buttons: 0,
            relatedTarget: function(d) {
                return d.relatedTarget === void 0 ? d.fromElement === d.srcElement ? d.toElement : d.fromElement : d.relatedTarget;
            },
            movementX: function(d) {
                return "movementX" in d ? d.movementX : (d !== Do && (Do && d.type === "mousemove" ? (ks = d.screenX - Do.screenX, Lo = d.screenY - Do.screenY) : Lo = ks = 0, Do = d), ks);
            },
            movementY: function(d) {
                return "movementY" in d ? d.movementY : Lo;
            }
        }), Tv = gs(Ad), yl = Q({}, Ad, {
            dataTransfer: 0
        }), pc = gs(yl), Am = Q({}, au, {
            relatedTarget: 0
        }), Nm = gs(Am), Pm = Q({}, ou, {
            animationName: 0,
            elapsedTime: 0,
            pseudoElement: 0
        }), Pw = gs(Pm), kw = Q({}, ou, {
            clipboardData: function(d) {
                return "clipboardData" in d ? d.clipboardData : window.clipboardData;
            }
        }), Cv = gs(kw), km = Q({}, ou, {
            data: 0
        }), Iv = gs(km), Ow = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified"
        }, Lw = {
            8: "Backspace",
            9: "Tab",
            12: "Clear",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            19: "Pause",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            45: "Insert",
            46: "Delete",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "NumLock",
            145: "ScrollLock",
            224: "Meta"
        }, Rv = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey"
        };
        function Nd(d) {
            var h = this.nativeEvent;
            return h.getModifierState ? h.getModifierState(d) : (d = Rv[d]) ? !!h[d] : !1;
        }
        function mc() {
            return Nd;
        }
        var Om = Q({}, au, {
            key: function(d) {
                if (d.key) {
                    var h = Ow[d.key] || d.key;
                    if (h !== "Unidentified") return h;
                }
                return d.type === "keypress" ? (d = su(d), d === 13 ? "Enter" : String.fromCharCode(d)) : d.type === "keydown" || d.type === "keyup" ? Lw[d.keyCode] || "Unidentified" : "";
            },
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: mc,
            charCode: function(d) {
                return d.type === "keypress" ? su(d) : 0;
            },
            keyCode: function(d) {
                return d.type === "keydown" || d.type === "keyup" ? d.keyCode : 0;
            },
            which: function(d) {
                return d.type === "keypress" ? su(d) : d.type === "keydown" || d.type === "keyup" ? d.keyCode : 0;
            }
        }), Lm = gs(Om), Fo = Q({}, Ad, {
            pointerId: 0,
            width: 0,
            height: 0,
            pressure: 0,
            tangentialPressure: 0,
            tiltX: 0,
            tiltY: 0,
            twist: 0,
            pointerType: 0,
            isPrimary: 0
        }), ao = gs(Fo), lu = Q({}, au, {
            touches: 0,
            targetTouches: 0,
            changedTouches: 0,
            altKey: 0,
            metaKey: 0,
            ctrlKey: 0,
            shiftKey: 0,
            getModifierState: mc
        }), vl = gs(lu), xl = Q({}, ou, {
            propertyName: 0,
            elapsedTime: 0,
            pseudoElement: 0
        }), cu = gs(xl), Dw = Q({}, Ad, {
            deltaX: function(d) {
                return "deltaX" in d ? d.deltaX : "wheelDeltaX" in d ? -d.wheelDeltaX : 0;
            },
            deltaY: function(d) {
                return "deltaY" in d ? d.deltaY : "wheelDeltaY" in d ? -d.wheelDeltaY : "wheelDelta" in d ? -d.wheelDelta : 0;
            },
            deltaZ: 0,
            deltaMode: 0
        }), Av = gs(Dw), Nv = [
            9,
            13,
            27,
            32
        ], ys = a && "CompositionEvent" in window, $i = null;
        a && "documentMode" in document && ($i = document.documentMode);
        var Ir = a && "TextEvent" in window && !$i, Pd = a && (!ys || $i && 8 < $i && 11 >= $i), jo = " ", Pv = !1;
        function kv(d, h) {
            switch(d){
                case "keyup":
                    return Nv.indexOf(h.keyCode) !== -1;
                case "keydown":
                    return h.keyCode !== 229;
                case "keypress":
                case "mousedown":
                case "focusout":
                    return !0;
                default:
                    return !1;
            }
        }
        function Dm(d) {
            return d = d.detail, typeof d == "object" && "data" in d ? d.data : null;
        }
        var gc = !1;
        function Fw(d, h) {
            switch(d){
                case "compositionend":
                    return Dm(h);
                case "keypress":
                    return h.which !== 32 ? null : (Pv = !0, jo);
                case "textInput":
                    return d = h.data, d === jo && Pv ? null : d;
                default:
                    return null;
            }
        }
        function vh(d, h) {
            if (gc) return d === "compositionend" || !ys && kv(d, h) ? (d = gh(), Ps = Mv = fa = null, gc = !1, d) : null;
            switch(d){
                case "paste":
                    return null;
                case "keypress":
                    if (!(h.ctrlKey || h.altKey || h.metaKey) || h.ctrlKey && h.altKey) {
                        if (h.char && 1 < h.char.length) return h.char;
                        if (h.which) return String.fromCharCode(h.which);
                    }
                    return null;
                case "compositionend":
                    return Pd && h.locale !== "ko" ? null : h.data;
                default:
                    return null;
            }
        }
        var kd = {
            color: !0,
            date: !0,
            datetime: !0,
            "datetime-local": !0,
            email: !0,
            month: !0,
            number: !0,
            password: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0
        };
        function Fm(d) {
            var h = d && d.nodeName && d.nodeName.toLowerCase();
            return h === "input" ? !!kd[d.type] : h === "textarea";
        }
        function Od(d, h, w, I) {
            rt(I), h = Xm(h, "onChange"), 0 < h.length && (w = new yh("onChange", "change", null, w, I), d.push({
                event: w,
                listeners: h
            }));
        }
        var yc = null, Ld = null;
        function jw(d) {
            Bd(d, 0);
        }
        function bl(d) {
            var h = Qr(d);
            if (we(h)) return d;
        }
        function Bw(d, h) {
            if (d === "change") return h;
        }
        var Dd = !1;
        if (a) {
            var Os;
            if (a) {
                var uu = "oninput" in document;
                if (!uu) {
                    var du = document.createElement("div");
                    du.setAttribute("oninput", "return;"), uu = typeof du.oninput == "function";
                }
                Os = uu;
            } else Os = !1;
            Dd = Os && (!document.documentMode || 9 < document.documentMode);
        }
        function ha() {
            yc && (yc.detachEvent("onpropertychange", jm), Ld = yc = null);
        }
        function jm(d) {
            if (d.propertyName === "value" && bl(Ld)) {
                var h = [];
                Od(h, Ld, d, Se(d)), Nn(jw, h);
            }
        }
        function Fd(d, h, w) {
            d === "focusin" ? (ha(), yc = h, Ld = w, yc.attachEvent("onpropertychange", jm)) : d === "focusout" && ha();
        }
        function Uw(d) {
            if (d === "selectionchange" || d === "keyup" || d === "keydown") return bl(Ld);
        }
        function Ov(d, h) {
            if (d === "click") return bl(h);
        }
        function jr(d, h) {
            if (d === "input" || d === "change") return bl(h);
        }
        function Bm(d, h) {
            return d === h && (d !== 0 || 1 / d === 1 / h) || d !== d && h !== h;
        }
        var lo = typeof Object.is == "function" ? Object.is : Bm;
        function fu(d, h) {
            if (lo(d, h)) return !0;
            if (typeof d != "object" || d === null || typeof h != "object" || h === null) return !1;
            var w = Object.keys(d), I = Object.keys(h);
            if (w.length !== I.length) return !1;
            for(I = 0; I < w.length; I++){
                var F = w[I];
                if (!l.call(h, F) || !lo(d[F], h[F])) return !1;
            }
            return !0;
        }
        function xh(d) {
            for(; d && d.firstChild;)d = d.firstChild;
            return d;
        }
        function co(d, h) {
            var w = xh(d);
            d = 0;
            for(var I; w;){
                if (w.nodeType === 3) {
                    if (I = d + w.textContent.length, d <= h && I >= h) return {
                        node: w,
                        offset: h - d
                    };
                    d = I;
                }
                e: {
                    for(; w;){
                        if (w.nextSibling) {
                            w = w.nextSibling;
                            break e;
                        }
                        w = w.parentNode;
                    }
                    w = void 0;
                }
                w = xh(w);
            }
        }
        function hu(d, h) {
            return d && h ? d === h ? !0 : d && d.nodeType === 3 ? !1 : h && h.nodeType === 3 ? hu(d, h.parentNode) : "contains" in d ? d.contains(h) : d.compareDocumentPosition ? !!(d.compareDocumentPosition(h) & 16) : !1 : !1;
        }
        function Br() {
            for(var d = window, h = Me(); h instanceof d.HTMLIFrameElement;){
                try {
                    var w = typeof h.contentWindow.location.href == "string";
                } catch  {
                    w = !1;
                }
                if (w) d = h.contentWindow;
                else break;
                h = Me(d.document);
            }
            return h;
        }
        function Ni(d) {
            var h = d && d.nodeName && d.nodeName.toLowerCase();
            return h && (h === "input" && (d.type === "text" || d.type === "search" || d.type === "tel" || d.type === "url" || d.type === "password") || h === "textarea" || d.contentEditable === "true");
        }
        function Pi(d) {
            var h = Br(), w = d.focusedElem, I = d.selectionRange;
            if (h !== w && w && w.ownerDocument && hu(w.ownerDocument.documentElement, w)) {
                if (I !== null && Ni(w)) {
                    if (h = I.start, d = I.end, d === void 0 && (d = h), "selectionStart" in w) w.selectionStart = h, w.selectionEnd = Math.min(d, w.value.length);
                    else if (d = (h = w.ownerDocument || document) && h.defaultView || window, d.getSelection) {
                        d = d.getSelection();
                        var F = w.textContent.length, V = Math.min(I.start, F);
                        I = I.end === void 0 ? V : Math.min(I.end, F), !d.extend && V > I && (F = I, I = V, V = F), F = co(w, V);
                        var re = co(w, I);
                        F && re && (d.rangeCount !== 1 || d.anchorNode !== F.node || d.anchorOffset !== F.offset || d.focusNode !== re.node || d.focusOffset !== re.offset) && (h = h.createRange(), h.setStart(F.node, F.offset), d.removeAllRanges(), V > I ? (d.addRange(h), d.extend(re.node, re.offset)) : (h.setEnd(re.node, re.offset), d.addRange(h)));
                    }
                }
                for(h = [], d = w; d = d.parentNode;)d.nodeType === 1 && h.push({
                    element: d,
                    left: d.scrollLeft,
                    top: d.scrollTop
                });
                for(typeof w.focus == "function" && w.focus(), w = 0; w < h.length; w++)d = h[w], d.element.scrollLeft = d.left, d.element.scrollTop = d.top;
            }
        }
        var Um = a && "documentMode" in document && 11 >= document.documentMode, Ha = null, pu = null, bh = null, ki = !1;
        function zm(d, h, w) {
            var I = w.window === w ? w.document : w.nodeType === 9 ? w : w.ownerDocument;
            ki || Ha == null || Ha !== Me(I) || (I = Ha, "selectionStart" in I && Ni(I) ? I = {
                start: I.selectionStart,
                end: I.selectionEnd
            } : (I = (I.ownerDocument && I.ownerDocument.defaultView || window).getSelection(), I = {
                anchorNode: I.anchorNode,
                anchorOffset: I.anchorOffset,
                focusNode: I.focusNode,
                focusOffset: I.focusOffset
            }), bh && fu(bh, I) || (bh = I, I = Xm(pu, "onSelect"), 0 < I.length && (h = new yh("onSelect", "select", null, h, w), d.push({
                event: h,
                listeners: I
            }), h.target = Ha)));
        }
        function jd(d, h) {
            var w = {};
            return w[d.toLowerCase()] = h.toLowerCase(), w["Webkit" + d] = "webkit" + h, w["Moz" + d] = "moz" + h, w;
        }
        var vc = {
            animationend: jd("Animation", "AnimationEnd"),
            animationiteration: jd("Animation", "AnimationIteration"),
            animationstart: jd("Animation", "AnimationStart"),
            transitionend: jd("Transition", "TransitionEnd")
        }, pa = {}, ma = {};
        a && (ma = document.createElement("div").style, "AnimationEvent" in window || (delete vc.animationend.animation, delete vc.animationiteration.animation, delete vc.animationstart.animation), "TransitionEvent" in window || delete vc.transitionend.transition);
        function $a(d) {
            if (pa[d]) return pa[d];
            if (!vc[d]) return d;
            var h = vc[d], w;
            for(w in h)if (h.hasOwnProperty(w) && w in ma) return pa[d] = h[w];
            return d;
        }
        var wh = $a("animationend"), _h = $a("animationiteration"), Lv = $a("animationstart"), Dv = $a("transitionend"), Fv = new Map, jv = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
        function wl(d, h) {
            Fv.set(d, h), s(h, [
                d
            ]);
        }
        for(var Vm = 0; Vm < jv.length; Vm++){
            var Sh = jv[Vm], Eh = Sh.toLowerCase(), zw = Sh[0].toUpperCase() + Sh.slice(1);
            wl(Eh, "on" + zw);
        }
        wl(wh, "onAnimationEnd"), wl(_h, "onAnimationIteration"), wl(Lv, "onAnimationStart"), wl("dblclick", "onDoubleClick"), wl("focusin", "onFocus"), wl("focusout", "onBlur"), wl(Dv, "onTransitionEnd"), o("onMouseEnter", [
            "mouseout",
            "mouseover"
        ]), o("onMouseLeave", [
            "mouseout",
            "mouseover"
        ]), o("onPointerEnter", [
            "pointerout",
            "pointerover"
        ]), o("onPointerLeave", [
            "pointerout",
            "pointerover"
        ]), s("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), s("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), s("onBeforeInput", [
            "compositionend",
            "keypress",
            "textInput",
            "paste"
        ]), s("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), s("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), s("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
        var xc = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), Wm = new Set("cancel close invalid load scroll toggle".split(" ").concat(xc));
        function qm(d, h, w) {
            var I = d.type || "unknown-event";
            d.currentTarget = w, tu(I, h, void 0, d), d.currentTarget = null;
        }
        function Bd(d, h) {
            h = (h & 4) !== 0;
            for(var w = 0; w < d.length; w++){
                var I = d[w], F = I.event;
                I = I.listeners;
                e: {
                    var V = void 0;
                    if (h) for(var re = I.length - 1; 0 <= re; re--){
                        var be = I[re], Te = be.instance, Ke = be.currentTarget;
                        if (be = be.listener, Te !== V && F.isPropagationStopped()) break e;
                        qm(F, be, Ke), V = Te;
                    }
                    else for(re = 0; re < I.length; re++){
                        if (be = I[re], Te = be.instance, Ke = be.currentTarget, be = be.listener, Te !== V && F.isPropagationStopped()) break e;
                        qm(F, be, Ke), V = Te;
                    }
                }
            }
            if (io) throw d = Va, io = !1, Va = null, d;
        }
        function pr(d, h) {
            var w = h[yu];
            w === void 0 && (w = h[yu] = new Set);
            var I = d + "__bubble";
            w.has(I) || ($m(h, d, 2, !1), w.add(I));
        }
        function Hm(d, h, w) {
            var I = 0;
            h && (I |= 4), $m(w, d, I, h);
        }
        var Mh = "_reactListening" + Math.random().toString(36).slice(2);
        function Ud(d) {
            if (!d[Mh]) {
                d[Mh] = !0, r.forEach(function(w) {
                    w !== "selectionchange" && (Wm.has(w) || Hm(w, !1, d), Hm(w, !0, d));
                });
                var h = d.nodeType === 9 ? d : d.ownerDocument;
                h === null || h[Mh] || (h[Mh] = !0, Hm("selectionchange", !1, h));
            }
        }
        function $m(d, h, w, I) {
            switch(Nw(h)){
                case 1:
                    var F = Tm;
                    break;
                case 4:
                    F = Ev;
                    break;
                default:
                    F = Cm;
            }
            w = F.bind(null, h, w, d), F = void 0, !Fr || h !== "touchstart" && h !== "touchmove" && h !== "wheel" || (F = !0), I ? F !== void 0 ? d.addEventListener(h, w, {
                capture: !0,
                passive: F
            }) : d.addEventListener(h, w, !0) : F !== void 0 ? d.addEventListener(h, w, {
                passive: F
            }) : d.addEventListener(h, w, !1);
        }
        function Gm(d, h, w, I, F) {
            var V = I;
            if (!(h & 1) && !(h & 2) && I !== null) e: for(;;){
                if (I === null) return;
                var re = I.tag;
                if (re === 3 || re === 4) {
                    var be = I.stateNode.containerInfo;
                    if (be === F || be.nodeType === 8 && be.parentNode === F) break;
                    if (re === 4) for(re = I.return; re !== null;){
                        var Te = re.tag;
                        if ((Te === 3 || Te === 4) && (Te = re.stateNode.containerInfo, Te === F || Te.nodeType === 8 && Te.parentNode === F)) return;
                        re = re.return;
                    }
                    for(; be !== null;){
                        if (re = bc(be), re === null) return;
                        if (Te = re.tag, Te === 5 || Te === 6) {
                            I = V = re;
                            continue e;
                        }
                        be = be.parentNode;
                    }
                }
                I = I.return;
            }
            Nn(function() {
                var Ke = V, ft = Se(w), mt = [];
                e: {
                    var ut = Fv.get(d);
                    if (ut !== void 0) {
                        var kt = yh, qt = d;
                        switch(d){
                            case "keypress":
                                if (su(w) === 0) break e;
                            case "keydown":
                            case "keyup":
                                kt = Lm;
                                break;
                            case "focusin":
                                qt = "focus", kt = Nm;
                                break;
                            case "focusout":
                                qt = "blur", kt = Nm;
                                break;
                            case "beforeblur":
                            case "afterblur":
                                kt = Nm;
                                break;
                            case "click":
                                if (w.button === 2) break e;
                            case "auxclick":
                            case "dblclick":
                            case "mousedown":
                            case "mousemove":
                            case "mouseup":
                            case "mouseout":
                            case "mouseover":
                            case "contextmenu":
                                kt = Tv;
                                break;
                            case "drag":
                            case "dragend":
                            case "dragenter":
                            case "dragexit":
                            case "dragleave":
                            case "dragover":
                            case "dragstart":
                            case "drop":
                                kt = pc;
                                break;
                            case "touchcancel":
                            case "touchend":
                            case "touchmove":
                            case "touchstart":
                                kt = vl;
                                break;
                            case wh:
                            case _h:
                            case Lv:
                                kt = Pw;
                                break;
                            case Dv:
                                kt = cu;
                                break;
                            case "scroll":
                                kt = Rd;
                                break;
                            case "wheel":
                                kt = Av;
                                break;
                            case "copy":
                            case "cut":
                            case "paste":
                                kt = Cv;
                                break;
                            case "gotpointercapture":
                            case "lostpointercapture":
                            case "pointercancel":
                            case "pointerdown":
                            case "pointermove":
                            case "pointerout":
                            case "pointerover":
                            case "pointerup":
                                kt = ao;
                        }
                        var Ht = (h & 4) !== 0, wi = !Ht && d === "scroll", ze = Ht ? ut !== null ? ut + "Capture" : null : ut;
                        Ht = [];
                        for(var Ae = Ke, qe; Ae !== null;){
                            qe = Ae;
                            var xt = qe.stateNode;
                            if (qe.tag === 5 && xt !== null && (qe = xt, ze !== null && (xt = pn(Ae, ze), xt != null && Ht.push(zd(Ae, xt, qe)))), wi) break;
                            Ae = Ae.return;
                        }
                        0 < Ht.length && (ut = new kt(ut, qt, null, w, ft), mt.push({
                            event: ut,
                            listeners: Ht
                        }));
                    }
                }
                if (!(h & 7)) {
                    e: {
                        if (ut = d === "mouseover" || d === "pointerover", kt = d === "mouseout" || d === "pointerout", ut && w !== ht && (qt = w.relatedTarget || w.fromElement) && (bc(qt) || qt[uo])) break e;
                        if ((kt || ut) && (ut = ft.window === ft ? ft : (ut = ft.ownerDocument) ? ut.defaultView || ut.parentWindow : window, kt ? (qt = w.relatedTarget || w.toElement, kt = Ke, qt = qt ? bc(qt) : null, qt !== null && (wi = so(qt), qt !== wi || qt.tag !== 5 && qt.tag !== 6) && (qt = null)) : (kt = null, qt = Ke), kt !== qt)) {
                            if (Ht = Tv, xt = "onMouseLeave", ze = "onMouseEnter", Ae = "mouse", (d === "pointerout" || d === "pointerover") && (Ht = ao, xt = "onPointerLeave", ze = "onPointerEnter", Ae = "pointer"), wi = kt == null ? ut : Qr(kt), qe = qt == null ? ut : Qr(qt), ut = new Ht(xt, Ae + "leave", kt, w, ft), ut.target = wi, ut.relatedTarget = qe, xt = null, bc(ft) === Ke && (Ht = new Ht(ze, Ae + "enter", qt, w, ft), Ht.target = qe, Ht.relatedTarget = wi, xt = Ht), wi = xt, kt && qt) t: {
                                for(Ht = kt, ze = qt, Ae = 0, qe = Ht; qe; qe = mu(qe))Ae++;
                                for(qe = 0, xt = ze; xt; xt = mu(xt))qe++;
                                for(; 0 < Ae - qe;)Ht = mu(Ht), Ae--;
                                for(; 0 < qe - Ae;)ze = mu(ze), qe--;
                                for(; Ae--;){
                                    if (Ht === ze || ze !== null && Ht === ze.alternate) break t;
                                    Ht = mu(Ht), ze = mu(ze);
                                }
                                Ht = null;
                            }
                            else Ht = null;
                            kt !== null && Vw(mt, ut, kt, Ht, !1), qt !== null && wi !== null && Vw(mt, wi, qt, Ht, !0);
                        }
                    }
                    e: {
                        if (ut = Ke ? Qr(Ke) : window, kt = ut.nodeName && ut.nodeName.toLowerCase(), kt === "select" || kt === "input" && ut.type === "file") var Kt = Bw;
                        else if (Fm(ut)) if (Dd) Kt = jr;
                        else {
                            Kt = Uw;
                            var rn = Fd;
                        }
                        else (kt = ut.nodeName) && kt.toLowerCase() === "input" && (ut.type === "checkbox" || ut.type === "radio") && (Kt = Ov);
                        if (Kt && (Kt = Kt(d, Ke))) {
                            Od(mt, Kt, w, ft);
                            break e;
                        }
                        rn && rn(d, ut, Ke), d === "focusout" && (rn = ut._wrapperState) && rn.controlled && ut.type === "number" && ae(ut, "number", ut.value);
                    }
                    switch(rn = Ke ? Qr(Ke) : window, d){
                        case "focusin":
                            (Fm(rn) || rn.contentEditable === "true") && (Ha = rn, pu = Ke, bh = null);
                            break;
                        case "focusout":
                            bh = pu = Ha = null;
                            break;
                        case "mousedown":
                            ki = !0;
                            break;
                        case "contextmenu":
                        case "mouseup":
                        case "dragend":
                            ki = !1, zm(mt, w, ft);
                            break;
                        case "selectionchange":
                            if (Um) break;
                        case "keydown":
                        case "keyup":
                            zm(mt, w, ft);
                    }
                    var sn;
                    if (ys) e: {
                        switch(d){
                            case "compositionstart":
                                var hn = "onCompositionStart";
                                break e;
                            case "compositionend":
                                hn = "onCompositionEnd";
                                break e;
                            case "compositionupdate":
                                hn = "onCompositionUpdate";
                                break e;
                        }
                        hn = void 0;
                    }
                    else gc ? kv(d, w) && (hn = "onCompositionEnd") : d === "keydown" && w.keyCode === 229 && (hn = "onCompositionStart");
                    hn && (Pd && w.locale !== "ko" && (gc || hn !== "onCompositionStart" ? hn === "onCompositionEnd" && gc && (sn = gh()) : (fa = ft, Mv = "value" in fa ? fa.value : fa.textContent, gc = !0)), rn = Xm(Ke, hn), 0 < rn.length && (hn = new Iv(hn, d, null, w, ft), mt.push({
                        event: hn,
                        listeners: rn
                    }), sn ? hn.data = sn : (sn = Dm(w), sn !== null && (hn.data = sn)))), (sn = Ir ? Fw(d, w) : vh(d, w)) && (Ke = Xm(Ke, "onBeforeInput"), 0 < Ke.length && (ft = new Iv("onBeforeInput", "beforeinput", null, w, ft), mt.push({
                        event: ft,
                        listeners: Ke
                    }), ft.data = sn));
                }
                Bd(mt, h);
            });
        }
        function zd(d, h, w) {
            return {
                instance: d,
                listener: h,
                currentTarget: w
            };
        }
        function Xm(d, h) {
            for(var w = h + "Capture", I = []; d !== null;){
                var F = d, V = F.stateNode;
                F.tag === 5 && V !== null && (F = V, V = pn(d, w), V != null && I.unshift(zd(d, V, F)), V = pn(d, h), V != null && I.push(zd(d, V, F))), d = d.return;
            }
            return I;
        }
        function mu(d) {
            if (d === null) return null;
            do d = d.return;
            while (d && d.tag !== 5);
            return d || null;
        }
        function Vw(d, h, w, I, F) {
            for(var V = h._reactName, re = []; w !== null && w !== I;){
                var be = w, Te = be.alternate, Ke = be.stateNode;
                if (Te !== null && Te === I) break;
                be.tag === 5 && Ke !== null && (be = Ke, F ? (Te = pn(w, V), Te != null && re.unshift(zd(w, Te, be))) : F || (Te = pn(w, V), Te != null && re.push(zd(w, Te, be)))), w = w.return;
            }
            re.length !== 0 && d.push({
                event: h,
                listeners: re
            });
        }
        var wC = /\r\n?/g, Ww = /\u0000|\uFFFD/g;
        function Bv(d) {
            return (typeof d == "string" ? d : "" + d).replace(wC, `
`).replace(Ww, "");
        }
        function Th(d, h, w) {
            if (h = Bv(h), Bv(d) !== h && w) throw Error(n(425));
        }
        function Ch() {}
        var Vd = null, Uv = null;
        function zv(d, h) {
            return d === "textarea" || d === "noscript" || typeof h.children == "string" || typeof h.children == "number" || typeof h.dangerouslySetInnerHTML == "object" && h.dangerouslySetInnerHTML !== null && h.dangerouslySetInnerHTML.__html != null;
        }
        var Vv = typeof setTimeout == "function" ? setTimeout : void 0, Wv = typeof clearTimeout == "function" ? clearTimeout : void 0, Km = typeof Promise == "function" ? Promise : void 0, _C = typeof queueMicrotask == "function" ? queueMicrotask : typeof Km < "u" ? function(d) {
            return Km.resolve(null).then(d).catch(qw);
        } : Vv;
        function qw(d) {
            setTimeout(function() {
                throw d;
            });
        }
        function Ym(d, h) {
            var w = h, I = 0;
            do {
                var F = w.nextSibling;
                if (d.removeChild(w), F && F.nodeType === 8) if (w = F.data, w === "/$") {
                    if (I === 0) {
                        d.removeChild(F), mh(h);
                        return;
                    }
                    I--;
                } else w !== "$" && w !== "$?" && w !== "$!" || I++;
                w = F;
            }while (w);
            mh(h);
        }
        function _l(d) {
            for(; d != null; d = d.nextSibling){
                var h = d.nodeType;
                if (h === 1 || h === 3) break;
                if (h === 8) {
                    if (h = d.data, h === "$" || h === "$!" || h === "$?") break;
                    if (h === "/$") return null;
                }
            }
            return d;
        }
        function qv(d) {
            d = d.previousSibling;
            for(var h = 0; d;){
                if (d.nodeType === 8) {
                    var w = d.data;
                    if (w === "$" || w === "$!" || w === "$?") {
                        if (h === 0) return d;
                        h--;
                    } else w === "/$" && h++;
                }
                d = d.previousSibling;
            }
            return null;
        }
        var gu = Math.random().toString(36).slice(2), bi = "__reactFiber$" + gu, Wd = "__reactProps$" + gu, uo = "__reactContainer$" + gu, yu = "__reactEvents$" + gu, Zm = "__reactListeners$" + gu, Jm = "__reactHandles$" + gu;
        function bc(d) {
            var h = d[bi];
            if (h) return h;
            for(var w = d.parentNode; w;){
                if (h = w[uo] || w[bi]) {
                    if (w = h.alternate, h.child !== null || w !== null && w.child !== null) for(d = qv(d); d !== null;){
                        if (w = d[bi]) return w;
                        d = qv(d);
                    }
                    return h;
                }
                d = w, w = d.parentNode;
            }
            return null;
        }
        function Sl(d) {
            return d = d[bi] || d[uo], !d || d.tag !== 5 && d.tag !== 6 && d.tag !== 13 && d.tag !== 3 ? null : d;
        }
        function Qr(d) {
            if (d.tag === 5 || d.tag === 6) return d.stateNode;
            throw Error(n(33));
        }
        function Qm(d) {
            return d[Wd] || null;
        }
        var Hv = [], Oi = -1;
        function Wr(d) {
            return {
                current: d
            };
        }
        function mr(d) {
            0 > Oi || (d.current = Hv[Oi], Hv[Oi] = null, Oi--);
        }
        function fr(d, h) {
            Oi++, Hv[Oi] = d.current, d.current = h;
        }
        var El = {}, Gi = Wr(El), vs = Wr(!1), Ml = El;
        function vu(d, h) {
            var w = d.type.contextTypes;
            if (!w) return El;
            var I = d.stateNode;
            if (I && I.__reactInternalMemoizedUnmaskedChildContext === h) return I.__reactInternalMemoizedMaskedChildContext;
            var F = {}, V;
            for(V in w)F[V] = h[V];
            return I && (d = d.stateNode, d.__reactInternalMemoizedUnmaskedChildContext = h, d.__reactInternalMemoizedMaskedChildContext = F), F;
        }
        function ss(d) {
            return d = d.childContextTypes, d != null;
        }
        function Ih() {
            mr(vs), mr(Gi);
        }
        function $v(d, h, w) {
            if (Gi.current !== El) throw Error(n(168));
            fr(Gi, h), fr(vs, w);
        }
        function Rh(d, h, w) {
            var I = d.stateNode;
            if (h = h.childContextTypes, typeof I.getChildContext != "function") return w;
            I = I.getChildContext();
            for(var F in I)if (!(F in h)) throw Error(n(108, ve(d) || "Unknown", F));
            return Q({}, w, I);
        }
        function xu(d) {
            return d = (d = d.stateNode) && d.__reactInternalMemoizedMergedChildContext || El, Ml = Gi.current, fr(Gi, d), fr(vs, vs.current), !0;
        }
        function Gv(d, h, w) {
            var I = d.stateNode;
            if (!I) throw Error(n(169));
            w ? (d = Rh(d, h, Ml), I.__reactInternalMemoizedMergedChildContext = d, mr(vs), mr(Gi), fr(Gi, d)) : mr(vs), fr(vs, w);
        }
        var ga = null, Ah = !1, eg = !1;
        function Nh(d) {
            ga === null ? ga = [
                d
            ] : ga.push(d);
        }
        function Hw(d) {
            Ah = !0, Nh(d);
        }
        function Ga() {
            if (!eg && ga !== null) {
                eg = !0;
                var d = 0, h = qn;
                try {
                    var w = ga;
                    for(qn = 1; d < w.length; d++){
                        var I = w[d];
                        do I = I(!0);
                        while (I !== null);
                    }
                    ga = null, Ah = !1;
                } catch (F) {
                    throw ga !== null && (ga = ga.slice(d + 1)), Cd(dt, Ga), F;
                } finally{
                    qn = h, eg = !1;
                }
            }
            return null;
        }
        var bu = [], Ls = 0, tg = null, ng = 0, xs = [], Li = 0, wu = null, bt = 1, Bo = "";
        function Tl(d, h) {
            bu[Ls++] = ng, bu[Ls++] = tg, tg = d, ng = h;
        }
        function Xv(d, h, w) {
            xs[Li++] = bt, xs[Li++] = Bo, xs[Li++] = wu, wu = d;
            var I = bt;
            d = Bo;
            var F = 32 - nn(I) - 1;
            I &= ~(1 << F), w += 1;
            var V = 32 - nn(h) + F;
            if (30 < V) {
                var re = F - F % 5;
                V = (I & (1 << re) - 1).toString(32), I >>= re, F -= re, bt = 1 << 32 - nn(h) + F | w << F | I, Bo = V + d;
            } else bt = 1 << V | w << F | I, Bo = d;
        }
        function Kv(d) {
            d.return !== null && (Tl(d, 1), Xv(d, 1, 0));
        }
        function Cl(d) {
            for(; d === tg;)tg = bu[--Ls], bu[Ls] = null, ng = bu[--Ls], bu[Ls] = null;
            for(; d === wu;)wu = xs[--Li], xs[Li] = null, Bo = xs[--Li], xs[Li] = null, bt = xs[--Li], xs[Li] = null;
        }
        var Xi = null, bs = null, _r = !1, Uo = null;
        function Yv(d, h) {
            var w = Ja(5, null, null, 0);
            w.elementType = "DELETED", w.stateNode = h, w.return = d, h = d.deletions, h === null ? (d.deletions = [
                w
            ], d.flags |= 16) : h.push(w);
        }
        function Zv(d, h) {
            switch(d.tag){
                case 5:
                    var w = d.type;
                    return h = h.nodeType !== 1 || w.toLowerCase() !== h.nodeName.toLowerCase() ? null : h, h !== null ? (d.stateNode = h, Xi = d, bs = _l(h.firstChild), !0) : !1;
                case 6:
                    return h = d.pendingProps === "" || h.nodeType !== 3 ? null : h, h !== null ? (d.stateNode = h, Xi = d, bs = null, !0) : !1;
                case 13:
                    return h = h.nodeType !== 8 ? null : h, h !== null ? (w = wu !== null ? {
                        id: bt,
                        overflow: Bo
                    } : null, d.memoizedState = {
                        dehydrated: h,
                        treeContext: w,
                        retryLane: 1073741824
                    }, w = Ja(18, null, null, 0), w.stateNode = h, w.return = d, d.child = w, Xi = d, bs = null, !0) : !1;
                default:
                    return !1;
            }
        }
        function rg(d) {
            return (d.mode & 1) !== 0 && (d.flags & 128) === 0;
        }
        function ig(d) {
            if (_r) {
                var h = bs;
                if (h) {
                    var w = h;
                    if (!Zv(d, h)) {
                        if (rg(d)) throw Error(n(418));
                        h = _l(w.nextSibling);
                        var I = Xi;
                        h && Zv(d, h) ? Yv(I, w) : (d.flags = d.flags & -4097 | 2, _r = !1, Xi = d);
                    }
                } else {
                    if (rg(d)) throw Error(n(418));
                    d.flags = d.flags & -4097 | 2, _r = !1, Xi = d;
                }
            }
        }
        function sg(d) {
            for(d = d.return; d !== null && d.tag !== 5 && d.tag !== 3 && d.tag !== 13;)d = d.return;
            Xi = d;
        }
        function qd(d) {
            if (d !== Xi) return !1;
            if (!_r) return sg(d), _r = !0, !1;
            var h;
            if ((h = d.tag !== 3) && !(h = d.tag !== 5) && (h = d.type, h = h !== "head" && h !== "body" && !zv(d.type, d.memoizedProps)), h && (h = bs)) {
                if (rg(d)) throw Jv(), Error(n(418));
                for(; h;)Yv(d, h), h = _l(h.nextSibling);
            }
            if (sg(d), d.tag === 13) {
                if (d = d.memoizedState, d = d !== null ? d.dehydrated : null, !d) throw Error(n(317));
                e: {
                    for(d = d.nextSibling, h = 0; d;){
                        if (d.nodeType === 8) {
                            var w = d.data;
                            if (w === "/$") {
                                if (h === 0) {
                                    bs = _l(d.nextSibling);
                                    break e;
                                }
                                h--;
                            } else w !== "$" && w !== "$!" && w !== "$?" || h++;
                        }
                        d = d.nextSibling;
                    }
                    bs = null;
                }
            } else bs = Xi ? _l(d.stateNode.nextSibling) : null;
            return !0;
        }
        function Jv() {
            for(var d = bs; d;)d = _l(d.nextSibling);
        }
        function wc() {
            bs = Xi = null, _r = !1;
        }
        function Hd(d) {
            Uo === null ? Uo = [
                d
            ] : Uo.push(d);
        }
        var SC = T.ReactCurrentBatchConfig;
        function Ph(d, h, w) {
            if (d = w.ref, d !== null && typeof d != "function" && typeof d != "object") {
                if (w._owner) {
                    if (w = w._owner, w) {
                        if (w.tag !== 1) throw Error(n(309));
                        var I = w.stateNode;
                    }
                    if (!I) throw Error(n(147, d));
                    var F = I, V = "" + d;
                    return h !== null && h.ref !== null && typeof h.ref == "function" && h.ref._stringRef === V ? h.ref : (h = function(re) {
                        var be = F.refs;
                        re === null ? delete be[V] : be[V] = re;
                    }, h._stringRef = V, h);
                }
                if (typeof d != "string") throw Error(n(284));
                if (!w._owner) throw Error(n(290, d));
            }
            return d;
        }
        function kh(d, h) {
            throw d = Object.prototype.toString.call(h), Error(n(31, d === "[object Object]" ? "object with keys {" + Object.keys(h).join(", ") + "}" : d));
        }
        function Qv(d) {
            var h = d._init;
            return h(d._payload);
        }
        function ex(d) {
            function h(ze, Ae) {
                if (d) {
                    var qe = ze.deletions;
                    qe === null ? (ze.deletions = [
                        Ae
                    ], ze.flags |= 16) : qe.push(Ae);
                }
            }
            function w(ze, Ae) {
                if (!d) return null;
                for(; Ae !== null;)h(ze, Ae), Ae = Ae.sibling;
                return null;
            }
            function I(ze, Ae) {
                for(ze = new Map; Ae !== null;)Ae.key !== null ? ze.set(Ae.key, Ae) : ze.set(Ae.index, Ae), Ae = Ae.sibling;
                return ze;
            }
            function F(ze, Ae) {
                return ze = nf(ze, Ae), ze.index = 0, ze.sibling = null, ze;
            }
            function V(ze, Ae, qe) {
                return ze.index = qe, d ? (qe = ze.alternate, qe !== null ? (qe = qe.index, qe < Ae ? (ze.flags |= 2, Ae) : qe) : (ze.flags |= 2, Ae)) : (ze.flags |= 1048576, Ae);
            }
            function re(ze) {
                return d && ze.alternate === null && (ze.flags |= 2), ze;
            }
            function be(ze, Ae, qe, xt) {
                return Ae === null || Ae.tag !== 6 ? (Ae = VC(qe, ze.mode, xt), Ae.return = ze, Ae) : (Ae = F(Ae, qe), Ae.return = ze, Ae);
            }
            function Te(ze, Ae, qe, xt) {
                var Kt = qe.type;
                return Kt === D ? ft(ze, Ae, qe.props.children, xt, qe.key) : Ae !== null && (Ae.elementType === Kt || typeof Kt == "object" && Kt !== null && Kt.$$typeof === q && Qv(Kt) === Ae.type) ? (xt = F(Ae, qe.props), xt.ref = Ph(ze, Ae, qe), xt.return = ze, xt) : (xt = p_(qe.type, qe.key, qe.props, null, ze.mode, xt), xt.ref = Ph(ze, Ae, qe), xt.return = ze, xt);
            }
            function Ke(ze, Ae, qe, xt) {
                return Ae === null || Ae.tag !== 4 || Ae.stateNode.containerInfo !== qe.containerInfo || Ae.stateNode.implementation !== qe.implementation ? (Ae = WC(qe, ze.mode, xt), Ae.return = ze, Ae) : (Ae = F(Ae, qe.children || []), Ae.return = ze, Ae);
            }
            function ft(ze, Ae, qe, xt, Kt) {
                return Ae === null || Ae.tag !== 7 ? (Ae = Yh(qe, ze.mode, xt, Kt), Ae.return = ze, Ae) : (Ae = F(Ae, qe), Ae.return = ze, Ae);
            }
            function mt(ze, Ae, qe) {
                if (typeof Ae == "string" && Ae !== "" || typeof Ae == "number") return Ae = VC("" + Ae, ze.mode, qe), Ae.return = ze, Ae;
                if (typeof Ae == "object" && Ae !== null) {
                    switch(Ae.$$typeof){
                        case k:
                            return qe = p_(Ae.type, Ae.key, Ae.props, null, ze.mode, qe), qe.ref = Ph(ze, null, Ae), qe.return = ze, qe;
                        case N:
                            return Ae = WC(Ae, ze.mode, qe), Ae.return = ze, Ae;
                        case q:
                            var xt = Ae._init;
                            return mt(ze, xt(Ae._payload), qe);
                    }
                    if (oe(Ae) || J(Ae)) return Ae = Yh(Ae, ze.mode, qe, null), Ae.return = ze, Ae;
                    kh(ze, Ae);
                }
                return null;
            }
            function ut(ze, Ae, qe, xt) {
                var Kt = Ae !== null ? Ae.key : null;
                if (typeof qe == "string" && qe !== "" || typeof qe == "number") return Kt !== null ? null : be(ze, Ae, "" + qe, xt);
                if (typeof qe == "object" && qe !== null) {
                    switch(qe.$$typeof){
                        case k:
                            return qe.key === Kt ? Te(ze, Ae, qe, xt) : null;
                        case N:
                            return qe.key === Kt ? Ke(ze, Ae, qe, xt) : null;
                        case q:
                            return Kt = qe._init, ut(ze, Ae, Kt(qe._payload), xt);
                    }
                    if (oe(qe) || J(qe)) return Kt !== null ? null : ft(ze, Ae, qe, xt, null);
                    kh(ze, qe);
                }
                return null;
            }
            function kt(ze, Ae, qe, xt, Kt) {
                if (typeof xt == "string" && xt !== "" || typeof xt == "number") return ze = ze.get(qe) || null, be(Ae, ze, "" + xt, Kt);
                if (typeof xt == "object" && xt !== null) {
                    switch(xt.$$typeof){
                        case k:
                            return ze = ze.get(xt.key === null ? qe : xt.key) || null, Te(Ae, ze, xt, Kt);
                        case N:
                            return ze = ze.get(xt.key === null ? qe : xt.key) || null, Ke(Ae, ze, xt, Kt);
                        case q:
                            var rn = xt._init;
                            return kt(ze, Ae, qe, rn(xt._payload), Kt);
                    }
                    if (oe(xt) || J(xt)) return ze = ze.get(qe) || null, ft(Ae, ze, xt, Kt, null);
                    kh(Ae, xt);
                }
                return null;
            }
            function qt(ze, Ae, qe, xt) {
                for(var Kt = null, rn = null, sn = Ae, hn = Ae = 0, cs = null; sn !== null && hn < qe.length; hn++){
                    sn.index > hn ? (cs = sn, sn = null) : cs = sn.sibling;
                    var sr = ut(ze, sn, qe[hn], xt);
                    if (sr === null) {
                        sn === null && (sn = cs);
                        break;
                    }
                    d && sn && sr.alternate === null && h(ze, sn), Ae = V(sr, Ae, hn), rn === null ? Kt = sr : rn.sibling = sr, rn = sr, sn = cs;
                }
                if (hn === qe.length) return w(ze, sn), _r && Tl(ze, hn), Kt;
                if (sn === null) {
                    for(; hn < qe.length; hn++)sn = mt(ze, qe[hn], xt), sn !== null && (Ae = V(sn, Ae, hn), rn === null ? Kt = sn : rn.sibling = sn, rn = sn);
                    return _r && Tl(ze, hn), Kt;
                }
                for(sn = I(ze, sn); hn < qe.length; hn++)cs = kt(sn, ze, hn, qe[hn], xt), cs !== null && (d && cs.alternate !== null && sn.delete(cs.key === null ? hn : cs.key), Ae = V(cs, Ae, hn), rn === null ? Kt = cs : rn.sibling = cs, rn = cs);
                return d && sn.forEach(function(rf) {
                    return h(ze, rf);
                }), _r && Tl(ze, hn), Kt;
            }
            function Ht(ze, Ae, qe, xt) {
                var Kt = J(qe);
                if (typeof Kt != "function") throw Error(n(150));
                if (qe = Kt.call(qe), qe == null) throw Error(n(151));
                for(var rn = Kt = null, sn = Ae, hn = Ae = 0, cs = null, sr = qe.next(); sn !== null && !sr.done; hn++, sr = qe.next()){
                    sn.index > hn ? (cs = sn, sn = null) : cs = sn.sibling;
                    var rf = ut(ze, sn, sr.value, xt);
                    if (rf === null) {
                        sn === null && (sn = cs);
                        break;
                    }
                    d && sn && rf.alternate === null && h(ze, sn), Ae = V(rf, Ae, hn), rn === null ? Kt = rf : rn.sibling = rf, rn = rf, sn = cs;
                }
                if (sr.done) return w(ze, sn), _r && Tl(ze, hn), Kt;
                if (sn === null) {
                    for(; !sr.done; hn++, sr = qe.next())sr = mt(ze, sr.value, xt), sr !== null && (Ae = V(sr, Ae, hn), rn === null ? Kt = sr : rn.sibling = sr, rn = sr);
                    return _r && Tl(ze, hn), Kt;
                }
                for(sn = I(ze, sn); !sr.done; hn++, sr = qe.next())sr = kt(sn, ze, hn, sr.value, xt), sr !== null && (d && sr.alternate !== null && sn.delete(sr.key === null ? hn : sr.key), Ae = V(sr, Ae, hn), rn === null ? Kt = sr : rn.sibling = sr, rn = sr);
                return d && sn.forEach(function(y9) {
                    return h(ze, y9);
                }), _r && Tl(ze, hn), Kt;
            }
            function wi(ze, Ae, qe, xt) {
                if (typeof qe == "object" && qe !== null && qe.type === D && qe.key === null && (qe = qe.props.children), typeof qe == "object" && qe !== null) {
                    switch(qe.$$typeof){
                        case k:
                            e: {
                                for(var Kt = qe.key, rn = Ae; rn !== null;){
                                    if (rn.key === Kt) {
                                        if (Kt = qe.type, Kt === D) {
                                            if (rn.tag === 7) {
                                                w(ze, rn.sibling), Ae = F(rn, qe.props.children), Ae.return = ze, ze = Ae;
                                                break e;
                                            }
                                        } else if (rn.elementType === Kt || typeof Kt == "object" && Kt !== null && Kt.$$typeof === q && Qv(Kt) === rn.type) {
                                            w(ze, rn.sibling), Ae = F(rn, qe.props), Ae.ref = Ph(ze, rn, qe), Ae.return = ze, ze = Ae;
                                            break e;
                                        }
                                        w(ze, rn);
                                        break;
                                    } else h(ze, rn);
                                    rn = rn.sibling;
                                }
                                qe.type === D ? (Ae = Yh(qe.props.children, ze.mode, xt, qe.key), Ae.return = ze, ze = Ae) : (xt = p_(qe.type, qe.key, qe.props, null, ze.mode, xt), xt.ref = Ph(ze, Ae, qe), xt.return = ze, ze = xt);
                            }
                            return re(ze);
                        case N:
                            e: {
                                for(rn = qe.key; Ae !== null;){
                                    if (Ae.key === rn) if (Ae.tag === 4 && Ae.stateNode.containerInfo === qe.containerInfo && Ae.stateNode.implementation === qe.implementation) {
                                        w(ze, Ae.sibling), Ae = F(Ae, qe.children || []), Ae.return = ze, ze = Ae;
                                        break e;
                                    } else {
                                        w(ze, Ae);
                                        break;
                                    }
                                    else h(ze, Ae);
                                    Ae = Ae.sibling;
                                }
                                Ae = WC(qe, ze.mode, xt), Ae.return = ze, ze = Ae;
                            }
                            return re(ze);
                        case q:
                            return rn = qe._init, wi(ze, Ae, rn(qe._payload), xt);
                    }
                    if (oe(qe)) return qt(ze, Ae, qe, xt);
                    if (J(qe)) return Ht(ze, Ae, qe, xt);
                    kh(ze, qe);
                }
                return typeof qe == "string" && qe !== "" || typeof qe == "number" ? (qe = "" + qe, Ae !== null && Ae.tag === 6 ? (w(ze, Ae.sibling), Ae = F(Ae, qe), Ae.return = ze, ze = Ae) : (w(ze, Ae), Ae = VC(qe, ze.mode, xt), Ae.return = ze, ze = Ae), re(ze)) : w(ze, Ae);
            }
            return wi;
        }
        var _u = ex(!0), Oh = ex(!1), Su = Wr(null), Eu = null, Il = null, $d = null;
        function Mu() {
            $d = Il = Eu = null;
        }
        function Lh(d) {
            var h = Su.current;
            mr(Su), d._currentValue = h;
        }
        function Dh(d, h, w) {
            for(; d !== null;){
                var I = d.alternate;
                if ((d.childLanes & h) !== h ? (d.childLanes |= h, I !== null && (I.childLanes |= h)) : I !== null && (I.childLanes & h) !== h && (I.childLanes |= h), d === w) break;
                d = d.return;
            }
        }
        function _c(d, h) {
            Eu = d, $d = Il = null, d = d.dependencies, d !== null && d.firstContext !== null && (d.lanes & h && (Cn = !0), d.firstContext = null);
        }
        function fo(d) {
            var h = d._currentValue;
            if ($d !== d) if (d = {
                context: d,
                memoizedValue: h,
                next: null
            }, Il === null) {
                if (Eu === null) throw Error(n(308));
                Il = d, Eu.dependencies = {
                    lanes: 0,
                    firstContext: d
                };
            } else Il = Il.next = d;
            return h;
        }
        var Rl = null;
        function tx(d) {
            Rl === null ? Rl = [
                d
            ] : Rl.push(d);
        }
        function Fh(d, h, w, I) {
            var F = h.interleaved;
            return F === null ? (w.next = w, tx(h)) : (w.next = F.next, F.next = w), h.interleaved = w, ya(d, I);
        }
        function ya(d, h) {
            d.lanes |= h;
            var w = d.alternate;
            for(w !== null && (w.lanes |= h), w = d, d = d.return; d !== null;)d.childLanes |= h, w = d.alternate, w !== null && (w.childLanes |= h), w = d, d = d.return;
            return w.tag === 3 ? w.stateNode : null;
        }
        var lr = !1;
        function En(d) {
            d.updateQueue = {
                baseState: d.memoizedState,
                firstBaseUpdate: null,
                lastBaseUpdate: null,
                shared: {
                    pending: null,
                    interleaved: null,
                    lanes: 0
                },
                effects: null
            };
        }
        function ei(d, h) {
            d = d.updateQueue, h.updateQueue === d && (h.updateQueue = {
                baseState: d.baseState,
                firstBaseUpdate: d.firstBaseUpdate,
                lastBaseUpdate: d.lastBaseUpdate,
                shared: d.shared,
                effects: d.effects
            });
        }
        function cr(d, h) {
            return {
                eventTime: d,
                lane: h,
                tag: 0,
                payload: null,
                callback: null,
                next: null
            };
        }
        function Rr(d, h, w) {
            var I = d.updateQueue;
            if (I === null) return null;
            if (I = I.shared, er & 2) {
                var F = I.pending;
                return F === null ? h.next = h : (h.next = F.next, F.next = h), I.pending = h, ya(d, w);
            }
            return F = I.interleaved, F === null ? (h.next = h, tx(I)) : (h.next = F.next, F.next = h), I.interleaved = h, ya(d, w);
        }
        function os(d, h, w) {
            if (h = h.updateQueue, h !== null && (h = h.shared, (w & 4194240) !== 0)) {
                var I = h.lanes;
                I &= d.pendingLanes, w |= I, h.lanes = w, Jr(d, w);
            }
        }
        function Tu(d, h) {
            var w = d.updateQueue, I = d.alternate;
            if (I !== null && (I = I.updateQueue, w === I)) {
                var F = null, V = null;
                if (w = w.firstBaseUpdate, w !== null) {
                    do {
                        var re = {
                            eventTime: w.eventTime,
                            lane: w.lane,
                            tag: w.tag,
                            payload: w.payload,
                            callback: w.callback,
                            next: null
                        };
                        V === null ? F = V = re : V = V.next = re, w = w.next;
                    }while (w !== null);
                    V === null ? F = V = h : V = V.next = h;
                } else F = V = h;
                w = {
                    baseState: I.baseState,
                    firstBaseUpdate: F,
                    lastBaseUpdate: V,
                    shared: I.shared,
                    effects: I.effects
                }, d.updateQueue = w;
                return;
            }
            d = w.lastBaseUpdate, d === null ? w.firstBaseUpdate = h : d.next = h, w.lastBaseUpdate = h;
        }
        function qr(d, h, w, I) {
            var F = d.updateQueue;
            lr = !1;
            var V = F.firstBaseUpdate, re = F.lastBaseUpdate, be = F.shared.pending;
            if (be !== null) {
                F.shared.pending = null;
                var Te = be, Ke = Te.next;
                Te.next = null, re === null ? V = Ke : re.next = Ke, re = Te;
                var ft = d.alternate;
                ft !== null && (ft = ft.updateQueue, be = ft.lastBaseUpdate, be !== re && (be === null ? ft.firstBaseUpdate = Ke : be.next = Ke, ft.lastBaseUpdate = Te));
            }
            if (V !== null) {
                var mt = F.baseState;
                re = 0, ft = Ke = Te = null, be = V;
                do {
                    var ut = be.lane, kt = be.eventTime;
                    if ((I & ut) === ut) {
                        ft !== null && (ft = ft.next = {
                            eventTime: kt,
                            lane: 0,
                            tag: be.tag,
                            payload: be.payload,
                            callback: be.callback,
                            next: null
                        });
                        e: {
                            var qt = d, Ht = be;
                            switch(ut = h, kt = w, Ht.tag){
                                case 1:
                                    if (qt = Ht.payload, typeof qt == "function") {
                                        mt = qt.call(kt, mt, ut);
                                        break e;
                                    }
                                    mt = qt;
                                    break e;
                                case 3:
                                    qt.flags = qt.flags & -65537 | 128;
                                case 0:
                                    if (qt = Ht.payload, ut = typeof qt == "function" ? qt.call(kt, mt, ut) : qt, ut == null) break e;
                                    mt = Q({}, mt, ut);
                                    break e;
                                case 2:
                                    lr = !0;
                            }
                        }
                        be.callback !== null && be.lane !== 0 && (d.flags |= 64, ut = F.effects, ut === null ? F.effects = [
                            be
                        ] : ut.push(be));
                    } else kt = {
                        eventTime: kt,
                        lane: ut,
                        tag: be.tag,
                        payload: be.payload,
                        callback: be.callback,
                        next: null
                    }, ft === null ? (Ke = ft = kt, Te = mt) : ft = ft.next = kt, re |= ut;
                    if (be = be.next, be === null) {
                        if (be = F.shared.pending, be === null) break;
                        ut = be, be = ut.next, ut.next = null, F.lastBaseUpdate = ut, F.shared.pending = null;
                    }
                }while (!0);
                if (ft === null && (Te = mt), F.baseState = Te, F.firstBaseUpdate = Ke, F.lastBaseUpdate = ft, h = F.shared.interleaved, h !== null) {
                    F = h;
                    do re |= F.lane, F = F.next;
                    while (F !== h);
                } else V === null && (F.shared.lanes = 0);
                $h |= re, d.lanes = re, d.memoizedState = mt;
            }
        }
        function Gd(d, h, w) {
            if (d = h.effects, h.effects = null, d !== null) for(h = 0; h < d.length; h++){
                var I = d[h], F = I.callback;
                if (F !== null) {
                    if (I.callback = null, I = w, typeof F != "function") throw Error(n(191, F));
                    F.call(I);
                }
            }
        }
        var Xa = {}, ho = Wr(Xa), Cu = Wr(Xa), Al = Wr(Xa);
        function si(d) {
            if (d === Xa) throw Error(n(174));
            return d;
        }
        function jh(d, h) {
            switch(fr(Al, h), fr(Cu, d), fr(ho, Xa), d = h.nodeType, d){
                case 9:
                case 11:
                    h = (h = h.documentElement) ? h.namespaceURI : Xe(null, "");
                    break;
                default:
                    d = d === 8 ? h.parentNode : h, h = d.namespaceURI || null, d = d.tagName, h = Xe(h, d);
            }
            mr(ho), fr(ho, h);
        }
        function Sc() {
            mr(ho), mr(Cu), mr(Al);
        }
        function Iu(d) {
            si(Al.current);
            var h = si(ho.current), w = Xe(h, d.type);
            h !== w && (fr(Cu, d), fr(ho, w));
        }
        function Xd(d) {
            Cu.current === d && (mr(ho), mr(Cu));
        }
        var Sr = Wr(0);
        function va(d) {
            for(var h = d; h !== null;){
                if (h.tag === 13) {
                    var w = h.memoizedState;
                    if (w !== null && (w = w.dehydrated, w === null || w.data === "$?" || w.data === "$!")) return h;
                } else if (h.tag === 19 && h.memoizedProps.revealOrder !== void 0) {
                    if (h.flags & 128) return h;
                } else if (h.child !== null) {
                    h.child.return = h, h = h.child;
                    continue;
                }
                if (h === d) break;
                for(; h.sibling === null;){
                    if (h.return === null || h.return === d) return null;
                    h = h.return;
                }
                h.sibling.return = h.return, h = h.sibling;
            }
            return null;
        }
        var Kd = [];
        function Ka() {
            for(var d = 0; d < Kd.length; d++)Kd[d]._workInProgressVersionPrimary = null;
            Kd.length = 0;
        }
        var Ru = T.ReactCurrentDispatcher, Au = T.ReactCurrentBatchConfig, Nl = 0, gr = null, Hr = null, Yn = null, xa = !1, as = !1, Ec = 0, Ds = 0;
        function Ki() {
            throw Error(n(321));
        }
        function Bh(d, h) {
            if (h === null) return !1;
            for(var w = 0; w < h.length && w < d.length; w++)if (!lo(d[w], h[w])) return !1;
            return !0;
        }
        function Uh(d, h, w, I, F, V) {
            if (Nl = V, gr = h, h.memoizedState = null, h.updateQueue = null, h.lanes = 0, Ru.current = d === null || d.memoizedState === null ? Jw : Qw, d = w(I, F), as) {
                V = 0;
                do {
                    if (as = !1, Ec = 0, 25 <= V) throw Error(n(301));
                    V += 1, Yn = Hr = null, h.updateQueue = null, Ru.current = e_, d = w(I, F);
                }while (as);
            }
            if (Ru.current = fg, h = Hr !== null && Hr.next !== null, Nl = 0, Yn = Hr = gr = null, xa = !1, h) throw Error(n(300));
            return d;
        }
        function nx() {
            var d = Ec !== 0;
            return Ec = 0, d;
        }
        function Yi() {
            var d = {
                memoizedState: null,
                baseState: null,
                baseQueue: null,
                queue: null,
                next: null
            };
            return Yn === null ? gr.memoizedState = Yn = d : Yn = Yn.next = d, Yn;
        }
        function po() {
            if (Hr === null) {
                var d = gr.alternate;
                d = d !== null ? d.memoizedState : null;
            } else d = Hr.next;
            var h = Yn === null ? gr.memoizedState : Yn.next;
            if (h !== null) Yn = h, Hr = d;
            else {
                if (d === null) throw Error(n(310));
                Hr = d, d = {
                    memoizedState: Hr.memoizedState,
                    baseState: Hr.baseState,
                    baseQueue: Hr.baseQueue,
                    queue: Hr.queue,
                    next: null
                }, Yn === null ? gr.memoizedState = Yn = d : Yn = Yn.next = d;
            }
            return Yn;
        }
        function Yd(d, h) {
            return typeof h == "function" ? h(d) : h;
        }
        function zh(d) {
            var h = po(), w = h.queue;
            if (w === null) throw Error(n(311));
            w.lastRenderedReducer = d;
            var I = Hr, F = I.baseQueue, V = w.pending;
            if (V !== null) {
                if (F !== null) {
                    var re = F.next;
                    F.next = V.next, V.next = re;
                }
                I.baseQueue = F = V, w.pending = null;
            }
            if (F !== null) {
                V = F.next, I = I.baseState;
                var be = re = null, Te = null, Ke = V;
                do {
                    var ft = Ke.lane;
                    if ((Nl & ft) === ft) Te !== null && (Te = Te.next = {
                        lane: 0,
                        action: Ke.action,
                        hasEagerState: Ke.hasEagerState,
                        eagerState: Ke.eagerState,
                        next: null
                    }), I = Ke.hasEagerState ? Ke.eagerState : d(I, Ke.action);
                    else {
                        var mt = {
                            lane: ft,
                            action: Ke.action,
                            hasEagerState: Ke.hasEagerState,
                            eagerState: Ke.eagerState,
                            next: null
                        };
                        Te === null ? (be = Te = mt, re = I) : Te = Te.next = mt, gr.lanes |= ft, $h |= ft;
                    }
                    Ke = Ke.next;
                }while (Ke !== null && Ke !== V);
                Te === null ? re = I : Te.next = be, lo(I, h.memoizedState) || (Cn = !0), h.memoizedState = I, h.baseState = re, h.baseQueue = Te, w.lastRenderedState = I;
            }
            if (d = w.interleaved, d !== null) {
                F = d;
                do V = F.lane, gr.lanes |= V, $h |= V, F = F.next;
                while (F !== d);
            } else F === null && (w.lanes = 0);
            return [
                h.memoizedState,
                w.dispatch
            ];
        }
        function Pl(d) {
            var h = po(), w = h.queue;
            if (w === null) throw Error(n(311));
            w.lastRenderedReducer = d;
            var I = w.dispatch, F = w.pending, V = h.memoizedState;
            if (F !== null) {
                w.pending = null;
                var re = F = F.next;
                do V = d(V, re.action), re = re.next;
                while (re !== F);
                lo(V, h.memoizedState) || (Cn = !0), h.memoizedState = V, h.baseQueue === null && (h.baseState = V), w.lastRenderedState = V;
            }
            return [
                V,
                I
            ];
        }
        function rx() {}
        function ix(d, h) {
            var w = gr, I = po(), F = h(), V = !lo(I.memoizedState, F);
            if (V && (I.memoizedState = F, Cn = !0), I = I.queue, ax($w.bind(null, w, I, d), [
                d
            ]), I.getSnapshot !== h || V || Yn !== null && Yn.memoizedState.tag & 1) {
                if (w.flags |= 2048, ba(9, Vh.bind(null, w, I, F, h), void 0, null), ls === null) throw Error(n(349));
                Nl & 30 || og(w, h, F);
            }
            return F;
        }
        function og(d, h, w) {
            d.flags |= 16384, d = {
                getSnapshot: h,
                value: w
            }, h = gr.updateQueue, h === null ? (h = {
                lastEffect: null,
                stores: null
            }, gr.updateQueue = h, h.stores = [
                d
            ]) : (w = h.stores, w === null ? h.stores = [
                d
            ] : w.push(d));
        }
        function Vh(d, h, w, I) {
            h.value = w, h.getSnapshot = I, Gw(h) && sx(d);
        }
        function $w(d, h, w) {
            return w(function() {
                Gw(h) && sx(d);
            });
        }
        function Gw(d) {
            var h = d.getSnapshot;
            d = d.value;
            try {
                var w = h();
                return !lo(d, w);
            } catch  {
                return !0;
            }
        }
        function sx(d) {
            var h = ya(d, 1);
            h !== null && Fl(h, d, 1, -1);
        }
        function ox(d) {
            var h = Yi();
            return typeof d == "function" && (d = d()), h.memoizedState = h.baseState = d, d = {
                pending: null,
                interleaved: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: Yd,
                lastRenderedState: d
            }, h.queue = d, d = d.dispatch = Nu.bind(null, gr, d), [
                h.memoizedState,
                d
            ];
        }
        function ba(d, h, w, I) {
            return d = {
                tag: d,
                create: h,
                destroy: w,
                deps: I,
                next: null
            }, h = gr.updateQueue, h === null ? (h = {
                lastEffect: null,
                stores: null
            }, gr.updateQueue = h, h.lastEffect = d.next = d) : (w = h.lastEffect, w === null ? h.lastEffect = d.next = d : (I = w.next, w.next = d, d.next = I, h.lastEffect = d)), d;
        }
        function Xw() {
            return po().memoizedState;
        }
        function Ya(d, h, w, I) {
            var F = Yi();
            gr.flags |= d, F.memoizedState = ba(1 | h, w, void 0, I === void 0 ? null : I);
        }
        function Wh(d, h, w, I) {
            var F = po();
            I = I === void 0 ? null : I;
            var V = void 0;
            if (Hr !== null) {
                var re = Hr.memoizedState;
                if (V = re.destroy, I !== null && Bh(I, re.deps)) {
                    F.memoizedState = ba(h, w, V, I);
                    return;
                }
            }
            gr.flags |= d, F.memoizedState = ba(1 | h, w, V, I);
        }
        function ws(d, h) {
            return Ya(8390656, 8, d, h);
        }
        function ax(d, h) {
            return Wh(2048, 8, d, h);
        }
        function lx(d, h) {
            return Wh(4, 2, d, h);
        }
        function Kw(d, h) {
            return Wh(4, 4, d, h);
        }
        function Yw(d, h) {
            if (typeof h == "function") return d = d(), h(d), function() {
                h(null);
            };
            if (h != null) return d = d(), h.current = d, function() {
                h.current = null;
            };
        }
        function cx(d, h, w) {
            return w = w != null ? w.concat([
                d
            ]) : null, Wh(4, 4, Yw.bind(null, h, d), w);
        }
        function ag() {}
        function Zw(d, h) {
            var w = po();
            h = h === void 0 ? null : h;
            var I = w.memoizedState;
            return I !== null && h !== null && Bh(h, I[1]) ? I[0] : (w.memoizedState = [
                d,
                h
            ], d);
        }
        function mo(d, h) {
            var w = po();
            h = h === void 0 ? null : h;
            var I = w.memoizedState;
            return I !== null && h !== null && Bh(h, I[1]) ? I[0] : (d = d(), w.memoizedState = [
                d,
                h
            ], d);
        }
        function lg(d, h, w) {
            return Nl & 21 ? (lo(w, h) || (w = zn(), gr.lanes |= w, $h |= w, d.baseState = !0), h) : (d.baseState && (d.baseState = !1, Cn = !0), d.memoizedState = w);
        }
        function EC(d, h) {
            var w = qn;
            qn = w !== 0 && 4 > w ? w : 4, d(!0);
            var I = Au.transition;
            Au.transition = {};
            try {
                d(!1), h();
            } finally{
                qn = w, Au.transition = I;
            }
        }
        function kl() {
            return po().memoizedState;
        }
        function cg(d, h, w) {
            var I = ef(d);
            if (w = {
                lane: I,
                action: w,
                hasEagerState: !1,
                eagerState: null,
                next: null
            }, qh(d)) ug(h, w);
            else if (w = Fh(d, h, w, I), w !== null) {
                var F = yo();
                Fl(w, d, I, F), dg(w, h, I);
            }
        }
        function Nu(d, h, w) {
            var I = ef(d), F = {
                lane: I,
                action: w,
                hasEagerState: !1,
                eagerState: null,
                next: null
            };
            if (qh(d)) ug(h, F);
            else {
                var V = d.alternate;
                if (d.lanes === 0 && (V === null || V.lanes === 0) && (V = h.lastRenderedReducer, V !== null)) try {
                    var re = h.lastRenderedState, be = V(re, w);
                    if (F.hasEagerState = !0, F.eagerState = be, lo(be, re)) {
                        var Te = h.interleaved;
                        Te === null ? (F.next = F, tx(h)) : (F.next = Te.next, Te.next = F), h.interleaved = F;
                        return;
                    }
                } catch  {} finally{}
                w = Fh(d, h, F, I), w !== null && (F = yo(), Fl(w, d, I, F), dg(w, h, I));
            }
        }
        function qh(d) {
            var h = d.alternate;
            return d === gr || h !== null && h === gr;
        }
        function ug(d, h) {
            as = xa = !0;
            var w = d.pending;
            w === null ? h.next = h : (h.next = w.next, w.next = h), d.pending = h;
        }
        function dg(d, h, w) {
            if (w & 4194240) {
                var I = h.lanes;
                I &= d.pendingLanes, w |= I, h.lanes = w, Jr(d, w);
            }
        }
        var fg = {
            readContext: fo,
            useCallback: Ki,
            useContext: Ki,
            useEffect: Ki,
            useImperativeHandle: Ki,
            useInsertionEffect: Ki,
            useLayoutEffect: Ki,
            useMemo: Ki,
            useReducer: Ki,
            useRef: Ki,
            useState: Ki,
            useDebugValue: Ki,
            useDeferredValue: Ki,
            useTransition: Ki,
            useMutableSource: Ki,
            useSyncExternalStore: Ki,
            useId: Ki,
            unstable_isNewReconciler: !1
        }, Jw = {
            readContext: fo,
            useCallback: function(d, h) {
                return Yi().memoizedState = [
                    d,
                    h === void 0 ? null : h
                ], d;
            },
            useContext: fo,
            useEffect: ws,
            useImperativeHandle: function(d, h, w) {
                return w = w != null ? w.concat([
                    d
                ]) : null, Ya(4194308, 4, Yw.bind(null, h, d), w);
            },
            useLayoutEffect: function(d, h) {
                return Ya(4194308, 4, d, h);
            },
            useInsertionEffect: function(d, h) {
                return Ya(4, 2, d, h);
            },
            useMemo: function(d, h) {
                var w = Yi();
                return h = h === void 0 ? null : h, d = d(), w.memoizedState = [
                    d,
                    h
                ], d;
            },
            useReducer: function(d, h, w) {
                var I = Yi();
                return h = w !== void 0 ? w(h) : h, I.memoizedState = I.baseState = h, d = {
                    pending: null,
                    interleaved: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: d,
                    lastRenderedState: h
                }, I.queue = d, d = d.dispatch = cg.bind(null, gr, d), [
                    I.memoizedState,
                    d
                ];
            },
            useRef: function(d) {
                var h = Yi();
                return d = {
                    current: d
                }, h.memoizedState = d;
            },
            useState: ox,
            useDebugValue: ag,
            useDeferredValue: function(d) {
                return Yi().memoizedState = d;
            },
            useTransition: function() {
                var d = ox(!1), h = d[0];
                return d = EC.bind(null, d[1]), Yi().memoizedState = d, [
                    h,
                    d
                ];
            },
            useMutableSource: function() {},
            useSyncExternalStore: function(d, h, w) {
                var I = gr, F = Yi();
                if (_r) {
                    if (w === void 0) throw Error(n(407));
                    w = w();
                } else {
                    if (w = h(), ls === null) throw Error(n(349));
                    Nl & 30 || og(I, h, w);
                }
                F.memoizedState = w;
                var V = {
                    value: w,
                    getSnapshot: h
                };
                return F.queue = V, ws($w.bind(null, I, V, d), [
                    d
                ]), I.flags |= 2048, ba(9, Vh.bind(null, I, V, w, h), void 0, null), w;
            },
            useId: function() {
                var d = Yi(), h = ls.identifierPrefix;
                if (_r) {
                    var w = Bo, I = bt;
                    w = (I & ~(1 << 32 - nn(I) - 1)).toString(32) + w, h = ":" + h + "R" + w, w = Ec++, 0 < w && (h += "H" + w.toString(32)), h += ":";
                } else w = Ds++, h = ":" + h + "r" + w.toString(32) + ":";
                return d.memoizedState = h;
            },
            unstable_isNewReconciler: !1
        }, Qw = {
            readContext: fo,
            useCallback: Zw,
            useContext: fo,
            useEffect: ax,
            useImperativeHandle: cx,
            useInsertionEffect: lx,
            useLayoutEffect: Kw,
            useMemo: mo,
            useReducer: zh,
            useRef: Xw,
            useState: function() {
                return zh(Yd);
            },
            useDebugValue: ag,
            useDeferredValue: function(d) {
                var h = po();
                return lg(h, Hr.memoizedState, d);
            },
            useTransition: function() {
                var d = zh(Yd)[0], h = po().memoizedState;
                return [
                    d,
                    h
                ];
            },
            useMutableSource: rx,
            useSyncExternalStore: ix,
            useId: kl,
            unstable_isNewReconciler: !1
        }, e_ = {
            readContext: fo,
            useCallback: Zw,
            useContext: fo,
            useEffect: ax,
            useImperativeHandle: cx,
            useInsertionEffect: lx,
            useLayoutEffect: Kw,
            useMemo: mo,
            useReducer: Pl,
            useRef: Xw,
            useState: function() {
                return Pl(Yd);
            },
            useDebugValue: ag,
            useDeferredValue: function(d) {
                var h = po();
                return Hr === null ? h.memoizedState = d : lg(h, Hr.memoizedState, d);
            },
            useTransition: function() {
                var d = Pl(Yd)[0], h = po().memoizedState;
                return [
                    d,
                    h
                ];
            },
            useMutableSource: rx,
            useSyncExternalStore: ix,
            useId: kl,
            unstable_isNewReconciler: !1
        };
        function zo(d, h) {
            if (d && d.defaultProps) {
                h = Q({}, h), d = d.defaultProps;
                for(var w in d)h[w] === void 0 && (h[w] = d[w]);
                return h;
            }
            return h;
        }
        function Hh(d, h, w, I) {
            h = d.memoizedState, w = w(I, h), w = w == null ? h : Q({}, h, w), d.memoizedState = w, d.lanes === 0 && (d.updateQueue.baseState = w);
        }
        var hg = {
            isMounted: function(d) {
                return (d = d._reactInternals) ? so(d) === d : !1;
            },
            enqueueSetState: function(d, h, w) {
                d = d._reactInternals;
                var I = yo(), F = ef(d), V = cr(I, F);
                V.payload = h, w != null && (V.callback = w), h = Rr(d, V, F), h !== null && (Fl(h, d, F, I), os(h, d, F));
            },
            enqueueReplaceState: function(d, h, w) {
                d = d._reactInternals;
                var I = yo(), F = ef(d), V = cr(I, F);
                V.tag = 1, V.payload = h, w != null && (V.callback = w), h = Rr(d, V, F), h !== null && (Fl(h, d, F, I), os(h, d, F));
            },
            enqueueForceUpdate: function(d, h) {
                d = d._reactInternals;
                var w = yo(), I = ef(d), F = cr(w, I);
                F.tag = 2, h != null && (F.callback = h), h = Rr(d, F, I), h !== null && (Fl(h, d, I, w), os(h, d, I));
            }
        };
        function t_(d, h, w, I, F, V, re) {
            return d = d.stateNode, typeof d.shouldComponentUpdate == "function" ? d.shouldComponentUpdate(I, V, re) : h.prototype && h.prototype.isPureReactComponent ? !fu(w, I) || !fu(F, V) : !0;
        }
        function m(d, h, w) {
            var I = !1, F = El, V = h.contextType;
            return typeof V == "object" && V !== null ? V = fo(V) : (F = ss(h) ? Ml : Gi.current, I = h.contextTypes, V = (I = I != null) ? vu(d, F) : El), h = new h(w, V), d.memoizedState = h.state !== null && h.state !== void 0 ? h.state : null, h.updater = hg, d.stateNode = h, h._reactInternals = d, I && (d = d.stateNode, d.__reactInternalMemoizedUnmaskedChildContext = F, d.__reactInternalMemoizedMaskedChildContext = V), h;
        }
        function y(d, h, w, I) {
            d = h.state, typeof h.componentWillReceiveProps == "function" && h.componentWillReceiveProps(w, I), typeof h.UNSAFE_componentWillReceiveProps == "function" && h.UNSAFE_componentWillReceiveProps(w, I), h.state !== d && hg.enqueueReplaceState(h, h.state, null);
        }
        function C(d, h, w, I) {
            var F = d.stateNode;
            F.props = w, F.state = d.memoizedState, F.refs = {}, En(d);
            var V = h.contextType;
            typeof V == "object" && V !== null ? F.context = fo(V) : (V = ss(h) ? Ml : Gi.current, F.context = vu(d, V)), F.state = d.memoizedState, V = h.getDerivedStateFromProps, typeof V == "function" && (Hh(d, h, V, w), F.state = d.memoizedState), typeof h.getDerivedStateFromProps == "function" || typeof F.getSnapshotBeforeUpdate == "function" || typeof F.UNSAFE_componentWillMount != "function" && typeof F.componentWillMount != "function" || (h = F.state, typeof F.componentWillMount == "function" && F.componentWillMount(), typeof F.UNSAFE_componentWillMount == "function" && F.UNSAFE_componentWillMount(), h !== F.state && hg.enqueueReplaceState(F, F.state, null), qr(d, w, F, I), F.state = d.memoizedState), typeof F.componentDidMount == "function" && (d.flags |= 4194308);
        }
        function O(d, h) {
            try {
                var w = "", I = h;
                do w += he(I), I = I.return;
                while (I);
                var F = w;
            } catch (V) {
                F = `
Error generating stack: ` + V.message + `
` + V.stack;
            }
            return {
                value: d,
                source: h,
                stack: F,
                digest: null
            };
        }
        function z(d, h, w) {
            return {
                value: d,
                source: null,
                stack: w ?? null,
                digest: h ?? null
            };
        }
        function Z(d, h) {
            try {
                console.error(h.value);
            } catch (w) {
                setTimeout(function() {
                    throw w;
                });
            }
        }
        var xe = typeof WeakMap == "function" ? WeakMap : Map;
        function ke(d, h, w) {
            w = cr(-1, w), w.tag = 3, w.payload = {
                element: null
            };
            var I = h.value;
            return w.callback = function() {
                l_ || (l_ = !0, OC = I), Z(d, h);
            }, w;
        }
        function tt(d, h, w) {
            w = cr(-1, w), w.tag = 3;
            var I = d.type.getDerivedStateFromError;
            if (typeof I == "function") {
                var F = h.value;
                w.payload = function() {
                    return I(F);
                }, w.callback = function() {
                    Z(d, h);
                };
            }
            var V = d.stateNode;
            return V !== null && typeof V.componentDidCatch == "function" && (w.callback = function() {
                Z(d, h), typeof I != "function" && (Jd === null ? Jd = new Set([
                    this
                ]) : Jd.add(this));
                var re = h.stack;
                this.componentDidCatch(h.value, {
                    componentStack: re !== null ? re : ""
                });
            }), w;
        }
        function vt(d, h, w) {
            var I = d.pingCache;
            if (I === null) {
                I = d.pingCache = new xe;
                var F = new Set;
                I.set(h, F);
            } else F = I.get(h), F === void 0 && (F = new Set, I.set(h, F));
            F.has(w) || (F.add(w), d = o9.bind(null, d, h, w), h.then(d, d));
        }
        function Bt(d) {
            do {
                var h;
                if ((h = d.tag === 13) && (h = d.memoizedState, h = h !== null ? h.dehydrated !== null : !0), h) return d;
                d = d.return;
            }while (d !== null);
            return null;
        }
        function mn(d, h, w, I, F) {
            return d.mode & 1 ? (d.flags |= 65536, d.lanes = F, d) : (d === h ? d.flags |= 65536 : (d.flags |= 128, w.flags |= 131072, w.flags &= -52805, w.tag === 1 && (w.alternate === null ? w.tag = 17 : (h = cr(-1, 1), h.tag = 2, Rr(w, h, 1))), w.lanes |= 1), d);
        }
        var en = T.ReactCurrentOwner, Cn = !1;
        function It(d, h, w, I) {
            h.child = d === null ? Oh(h, null, w, I) : _u(h, d.child, w, I);
        }
        function Zi(d, h, w, I, F) {
            w = w.render;
            var V = h.ref;
            return _c(h, F), I = Uh(d, h, w, I, V, F), w = nx(), d !== null && !Cn ? (h.updateQueue = d.updateQueue, h.flags &= -2053, d.lanes &= ~F, Pu(d, h, F)) : (_r && w && Kv(h), h.flags |= 1, It(d, h, I, F), h.child);
        }
        function go(d, h, w, I, F) {
            if (d === null) {
                var V = w.type;
                return typeof V == "function" && !zC(V) && V.defaultProps === void 0 && w.compare === null && w.defaultProps === void 0 ? (h.tag = 15, h.type = V, He(d, h, V, I, F)) : (d = p_(w.type, null, I, h, h.mode, F), d.ref = h.ref, d.return = h, h.child = d);
            }
            if (V = d.child, !(d.lanes & F)) {
                var re = V.memoizedProps;
                if (w = w.compare, w = w !== null ? w : fu, w(re, I) && d.ref === h.ref) return Pu(d, h, F);
            }
            return h.flags |= 1, d = nf(V, I), d.ref = h.ref, d.return = h, h.child = d;
        }
        function He(d, h, w, I, F) {
            if (d !== null) {
                var V = d.memoizedProps;
                if (fu(V, I) && d.ref === h.ref) if (Cn = !1, h.pendingProps = I = V, (d.lanes & F) !== 0) d.flags & 131072 && (Cn = !0);
                else return h.lanes = d.lanes, Pu(d, h, F);
            }
            return Et(d, h, w, I, F);
        }
        function De(d, h, w) {
            var I = h.pendingProps, F = I.children, V = d !== null ? d.memoizedState : null;
            if (I.mode === "hidden") if (!(h.mode & 1)) h.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null
            }, fr(mg, wa), wa |= w;
            else {
                if (!(w & 1073741824)) return d = V !== null ? V.baseLanes | w : w, h.lanes = h.childLanes = 1073741824, h.memoizedState = {
                    baseLanes: d,
                    cachePool: null,
                    transitions: null
                }, h.updateQueue = null, fr(mg, wa), wa |= d, null;
                h.memoizedState = {
                    baseLanes: 0,
                    cachePool: null,
                    transitions: null
                }, I = V !== null ? V.baseLanes : w, fr(mg, wa), wa |= I;
            }
            else V !== null ? (I = V.baseLanes | w, h.memoizedState = null) : I = w, fr(mg, wa), wa |= I;
            return It(d, h, F, w), h.child;
        }
        function Qe(d, h) {
            var w = h.ref;
            (d === null && w !== null || d !== null && d.ref !== w) && (h.flags |= 512, h.flags |= 2097152);
        }
        function Et(d, h, w, I, F) {
            var V = ss(w) ? Ml : Gi.current;
            return V = vu(h, V), _c(h, F), w = Uh(d, h, w, I, V, F), I = nx(), d !== null && !Cn ? (h.updateQueue = d.updateQueue, h.flags &= -2053, d.lanes &= ~F, Pu(d, h, F)) : (_r && I && Kv(h), h.flags |= 1, It(d, h, w, F), h.child);
        }
        function $t(d, h, w, I, F) {
            if (ss(w)) {
                var V = !0;
                xu(h);
            } else V = !1;
            if (_c(h, F), h.stateNode === null) r_(d, h), m(h, w, I), C(h, w, I, F), I = !0;
            else if (d === null) {
                var re = h.stateNode, be = h.memoizedProps;
                re.props = be;
                var Te = re.context, Ke = w.contextType;
                typeof Ke == "object" && Ke !== null ? Ke = fo(Ke) : (Ke = ss(w) ? Ml : Gi.current, Ke = vu(h, Ke));
                var ft = w.getDerivedStateFromProps, mt = typeof ft == "function" || typeof re.getSnapshotBeforeUpdate == "function";
                mt || typeof re.UNSAFE_componentWillReceiveProps != "function" && typeof re.componentWillReceiveProps != "function" || (be !== I || Te !== Ke) && y(h, re, I, Ke), lr = !1;
                var ut = h.memoizedState;
                re.state = ut, qr(h, I, re, F), Te = h.memoizedState, be !== I || ut !== Te || vs.current || lr ? (typeof ft == "function" && (Hh(h, w, ft, I), Te = h.memoizedState), (be = lr || t_(h, w, be, I, ut, Te, Ke)) ? (mt || typeof re.UNSAFE_componentWillMount != "function" && typeof re.componentWillMount != "function" || (typeof re.componentWillMount == "function" && re.componentWillMount(), typeof re.UNSAFE_componentWillMount == "function" && re.UNSAFE_componentWillMount()), typeof re.componentDidMount == "function" && (h.flags |= 4194308)) : (typeof re.componentDidMount == "function" && (h.flags |= 4194308), h.memoizedProps = I, h.memoizedState = Te), re.props = I, re.state = Te, re.context = Ke, I = be) : (typeof re.componentDidMount == "function" && (h.flags |= 4194308), I = !1);
            } else {
                re = h.stateNode, ei(d, h), be = h.memoizedProps, Ke = h.type === h.elementType ? be : zo(h.type, be), re.props = Ke, mt = h.pendingProps, ut = re.context, Te = w.contextType, typeof Te == "object" && Te !== null ? Te = fo(Te) : (Te = ss(w) ? Ml : Gi.current, Te = vu(h, Te));
                var kt = w.getDerivedStateFromProps;
                (ft = typeof kt == "function" || typeof re.getSnapshotBeforeUpdate == "function") || typeof re.UNSAFE_componentWillReceiveProps != "function" && typeof re.componentWillReceiveProps != "function" || (be !== mt || ut !== Te) && y(h, re, I, Te), lr = !1, ut = h.memoizedState, re.state = ut, qr(h, I, re, F);
                var qt = h.memoizedState;
                be !== mt || ut !== qt || vs.current || lr ? (typeof kt == "function" && (Hh(h, w, kt, I), qt = h.memoizedState), (Ke = lr || t_(h, w, Ke, I, ut, qt, Te) || !1) ? (ft || typeof re.UNSAFE_componentWillUpdate != "function" && typeof re.componentWillUpdate != "function" || (typeof re.componentWillUpdate == "function" && re.componentWillUpdate(I, qt, Te), typeof re.UNSAFE_componentWillUpdate == "function" && re.UNSAFE_componentWillUpdate(I, qt, Te)), typeof re.componentDidUpdate == "function" && (h.flags |= 4), typeof re.getSnapshotBeforeUpdate == "function" && (h.flags |= 1024)) : (typeof re.componentDidUpdate != "function" || be === d.memoizedProps && ut === d.memoizedState || (h.flags |= 4), typeof re.getSnapshotBeforeUpdate != "function" || be === d.memoizedProps && ut === d.memoizedState || (h.flags |= 1024), h.memoizedProps = I, h.memoizedState = qt), re.props = I, re.state = qt, re.context = Te, I = Ke) : (typeof re.componentDidUpdate != "function" || be === d.memoizedProps && ut === d.memoizedState || (h.flags |= 4), typeof re.getSnapshotBeforeUpdate != "function" || be === d.memoizedProps && ut === d.memoizedState || (h.flags |= 1024), I = !1);
            }
            return wn(d, h, w, I, V, F);
        }
        function wn(d, h, w, I, F, V) {
            Qe(d, h);
            var re = (h.flags & 128) !== 0;
            if (!I && !re) return F && Gv(h, w, !1), Pu(d, h, V);
            I = h.stateNode, en.current = h;
            var be = re && typeof w.getDerivedStateFromError != "function" ? null : I.render();
            return h.flags |= 1, d !== null && re ? (h.child = _u(h, d.child, null, V), h.child = _u(h, null, be, V)) : It(d, h, be, V), h.memoizedState = I.state, F && Gv(h, w, !0), h.child;
        }
        function gn(d) {
            var h = d.stateNode;
            h.pendingContext ? $v(d, h.pendingContext, h.pendingContext !== h.context) : h.context && $v(d, h.context, !1), jh(d, h.containerInfo);
        }
        function Xn(d, h, w, I, F) {
            return wc(), Hd(F), h.flags |= 256, It(d, h, w, I), h.child;
        }
        var oi = {
            dehydrated: null,
            treeContext: null,
            retryLane: 0
        };
        function $n(d) {
            return {
                baseLanes: d,
                cachePool: null,
                transitions: null
            };
        }
        function Ol(d, h, w) {
            var I = h.pendingProps, F = Sr.current, V = !1, re = (h.flags & 128) !== 0, be;
            if ((be = re) || (be = d !== null && d.memoizedState === null ? !1 : (F & 2) !== 0), be ? (V = !0, h.flags &= -129) : (d === null || d.memoizedState !== null) && (F |= 1), fr(Sr, F & 1), d === null) return ig(h), d = h.memoizedState, d !== null && (d = d.dehydrated, d !== null) ? (h.mode & 1 ? d.data === "$!" ? h.lanes = 8 : h.lanes = 1073741824 : h.lanes = 1, null) : (re = I.children, d = I.fallback, V ? (I = h.mode, V = h.child, re = {
                mode: "hidden",
                children: re
            }, !(I & 1) && V !== null ? (V.childLanes = 0, V.pendingProps = re) : V = m_(re, I, 0, null), d = Yh(d, I, w, null), V.return = h, d.return = h, V.sibling = d, h.child = V, h.child.memoizedState = $n(w), h.memoizedState = oi, d) : ux(h, re));
            if (F = d.memoizedState, F !== null && (be = F.dehydrated, be !== null)) return X8(d, h, re, I, be, F, w);
            if (V) {
                V = I.fallback, re = h.mode, F = d.child, be = F.sibling;
                var Te = {
                    mode: "hidden",
                    children: I.children
                };
                return !(re & 1) && h.child !== F ? (I = h.child, I.childLanes = 0, I.pendingProps = Te, h.deletions = null) : (I = nf(F, Te), I.subtreeFlags = F.subtreeFlags & 14680064), be !== null ? V = nf(be, V) : (V = Yh(V, re, w, null), V.flags |= 2), V.return = h, I.return = h, I.sibling = V, h.child = I, I = V, V = h.child, re = d.child.memoizedState, re = re === null ? $n(w) : {
                    baseLanes: re.baseLanes | w,
                    cachePool: null,
                    transitions: re.transitions
                }, V.memoizedState = re, V.childLanes = d.childLanes & ~w, h.memoizedState = oi, I;
            }
            return V = d.child, d = V.sibling, I = nf(V, {
                mode: "visible",
                children: I.children
            }), !(h.mode & 1) && (I.lanes = w), I.return = h, I.sibling = null, d !== null && (w = h.deletions, w === null ? (h.deletions = [
                d
            ], h.flags |= 16) : w.push(d)), h.child = I, h.memoizedState = null, I;
        }
        function ux(d, h) {
            return h = m_({
                mode: "visible",
                children: h
            }, d.mode, 0, null), h.return = d, d.child = h;
        }
        function n_(d, h, w, I) {
            return I !== null && Hd(I), _u(h, d.child, null, w), d = ux(h, h.pendingProps.children), d.flags |= 2, h.memoizedState = null, d;
        }
        function X8(d, h, w, I, F, V, re) {
            if (w) return h.flags & 256 ? (h.flags &= -257, I = z(Error(n(422))), n_(d, h, re, I)) : h.memoizedState !== null ? (h.child = d.child, h.flags |= 128, null) : (V = I.fallback, F = h.mode, I = m_({
                mode: "visible",
                children: I.children
            }, F, 0, null), V = Yh(V, F, re, null), V.flags |= 2, I.return = h, V.return = h, I.sibling = V, h.child = I, h.mode & 1 && _u(h, d.child, null, re), h.child.memoizedState = $n(re), h.memoizedState = oi, V);
            if (!(h.mode & 1)) return n_(d, h, re, null);
            if (F.data === "$!") {
                if (I = F.nextSibling && F.nextSibling.dataset, I) var be = I.dgst;
                return I = be, V = Error(n(419)), I = z(V, I, void 0), n_(d, h, re, I);
            }
            if (be = (re & d.childLanes) !== 0, Cn || be) {
                if (I = ls, I !== null) {
                    switch(re & -re){
                        case 4:
                            F = 2;
                            break;
                        case 16:
                            F = 8;
                            break;
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                        case 67108864:
                            F = 32;
                            break;
                        case 536870912:
                            F = 268435456;
                            break;
                        default:
                            F = 0;
                    }
                    F = F & (I.suspendedLanes | re) ? 0 : F, F !== 0 && F !== V.retryLane && (V.retryLane = F, ya(d, F), Fl(I, d, F, -1));
                }
                return UC(), I = z(Error(n(421))), n_(d, h, re, I);
            }
            return F.data === "$?" ? (h.flags |= 128, h.child = d.child, h = a9.bind(null, d), F._reactRetry = h, null) : (d = V.treeContext, bs = _l(F.nextSibling), Xi = h, _r = !0, Uo = null, d !== null && (xs[Li++] = bt, xs[Li++] = Bo, xs[Li++] = wu, bt = d.id, Bo = d.overflow, wu = h), h = ux(h, I.children), h.flags |= 4096, h);
        }
        function tL(d, h, w) {
            d.lanes |= h;
            var I = d.alternate;
            I !== null && (I.lanes |= h), Dh(d.return, h, w);
        }
        function MC(d, h, w, I, F) {
            var V = d.memoizedState;
            V === null ? d.memoizedState = {
                isBackwards: h,
                rendering: null,
                renderingStartTime: 0,
                last: I,
                tail: w,
                tailMode: F
            } : (V.isBackwards = h, V.rendering = null, V.renderingStartTime = 0, V.last = I, V.tail = w, V.tailMode = F);
        }
        function nL(d, h, w) {
            var I = h.pendingProps, F = I.revealOrder, V = I.tail;
            if (It(d, h, I.children, w), I = Sr.current, I & 2) I = I & 1 | 2, h.flags |= 128;
            else {
                if (d !== null && d.flags & 128) e: for(d = h.child; d !== null;){
                    if (d.tag === 13) d.memoizedState !== null && tL(d, w, h);
                    else if (d.tag === 19) tL(d, w, h);
                    else if (d.child !== null) {
                        d.child.return = d, d = d.child;
                        continue;
                    }
                    if (d === h) break e;
                    for(; d.sibling === null;){
                        if (d.return === null || d.return === h) break e;
                        d = d.return;
                    }
                    d.sibling.return = d.return, d = d.sibling;
                }
                I &= 1;
            }
            if (fr(Sr, I), !(h.mode & 1)) h.memoizedState = null;
            else switch(F){
                case "forwards":
                    for(w = h.child, F = null; w !== null;)d = w.alternate, d !== null && va(d) === null && (F = w), w = w.sibling;
                    w = F, w === null ? (F = h.child, h.child = null) : (F = w.sibling, w.sibling = null), MC(h, !1, F, w, V);
                    break;
                case "backwards":
                    for(w = null, F = h.child, h.child = null; F !== null;){
                        if (d = F.alternate, d !== null && va(d) === null) {
                            h.child = F;
                            break;
                        }
                        d = F.sibling, F.sibling = w, w = F, F = d;
                    }
                    MC(h, !0, w, null, V);
                    break;
                case "together":
                    MC(h, !1, null, null, void 0);
                    break;
                default:
                    h.memoizedState = null;
            }
            return h.child;
        }
        function r_(d, h) {
            !(h.mode & 1) && d !== null && (d.alternate = null, h.alternate = null, h.flags |= 2);
        }
        function Pu(d, h, w) {
            if (d !== null && (h.dependencies = d.dependencies), $h |= h.lanes, !(w & h.childLanes)) return null;
            if (d !== null && h.child !== d.child) throw Error(n(153));
            if (h.child !== null) {
                for(d = h.child, w = nf(d, d.pendingProps), h.child = w, w.return = h; d.sibling !== null;)d = d.sibling, w = w.sibling = nf(d, d.pendingProps), w.return = h;
                w.sibling = null;
            }
            return h.child;
        }
        function K8(d, h, w) {
            switch(h.tag){
                case 3:
                    gn(h), wc();
                    break;
                case 5:
                    Iu(h);
                    break;
                case 1:
                    ss(h.type) && xu(h);
                    break;
                case 4:
                    jh(h, h.stateNode.containerInfo);
                    break;
                case 10:
                    var I = h.type._context, F = h.memoizedProps.value;
                    fr(Su, I._currentValue), I._currentValue = F;
                    break;
                case 13:
                    if (I = h.memoizedState, I !== null) return I.dehydrated !== null ? (fr(Sr, Sr.current & 1), h.flags |= 128, null) : w & h.child.childLanes ? Ol(d, h, w) : (fr(Sr, Sr.current & 1), d = Pu(d, h, w), d !== null ? d.sibling : null);
                    fr(Sr, Sr.current & 1);
                    break;
                case 19:
                    if (I = (w & h.childLanes) !== 0, d.flags & 128) {
                        if (I) return nL(d, h, w);
                        h.flags |= 128;
                    }
                    if (F = h.memoizedState, F !== null && (F.rendering = null, F.tail = null, F.lastEffect = null), fr(Sr, Sr.current), I) break;
                    return null;
                case 22:
                case 23:
                    return h.lanes = 0, De(d, h, w);
            }
            return Pu(d, h, w);
        }
        var rL, TC, iL, sL;
        rL = function(d, h) {
            for(var w = h.child; w !== null;){
                if (w.tag === 5 || w.tag === 6) d.appendChild(w.stateNode);
                else if (w.tag !== 4 && w.child !== null) {
                    w.child.return = w, w = w.child;
                    continue;
                }
                if (w === h) break;
                for(; w.sibling === null;){
                    if (w.return === null || w.return === h) return;
                    w = w.return;
                }
                w.sibling.return = w.return, w = w.sibling;
            }
        }, TC = function() {}, iL = function(d, h, w, I) {
            var F = d.memoizedProps;
            if (F !== I) {
                d = h.stateNode, si(ho.current);
                var V = null;
                switch(w){
                    case "input":
                        F = se(d, F), I = se(d, I), V = [];
                        break;
                    case "select":
                        F = Q({}, F, {
                            value: void 0
                        }), I = Q({}, I, {
                            value: void 0
                        }), V = [];
                        break;
                    case "textarea":
                        F = H(d, F), I = H(d, I), V = [];
                        break;
                    default:
                        typeof F.onClick != "function" && typeof I.onClick == "function" && (d.onclick = Ch);
                }
                _e(w, I);
                var re;
                w = null;
                for(Ke in F)if (!I.hasOwnProperty(Ke) && F.hasOwnProperty(Ke) && F[Ke] != null) if (Ke === "style") {
                    var be = F[Ke];
                    for(re in be)be.hasOwnProperty(re) && (w || (w = {}), w[re] = "");
                } else Ke !== "dangerouslySetInnerHTML" && Ke !== "children" && Ke !== "suppressContentEditableWarning" && Ke !== "suppressHydrationWarning" && Ke !== "autoFocus" && (i.hasOwnProperty(Ke) ? V || (V = []) : (V = V || []).push(Ke, null));
                for(Ke in I){
                    var Te = I[Ke];
                    if (be = F?.[Ke], I.hasOwnProperty(Ke) && Te !== be && (Te != null || be != null)) if (Ke === "style") if (be) {
                        for(re in be)!be.hasOwnProperty(re) || Te && Te.hasOwnProperty(re) || (w || (w = {}), w[re] = "");
                        for(re in Te)Te.hasOwnProperty(re) && be[re] !== Te[re] && (w || (w = {}), w[re] = Te[re]);
                    } else w || (V || (V = []), V.push(Ke, w)), w = Te;
                    else Ke === "dangerouslySetInnerHTML" ? (Te = Te ? Te.__html : void 0, be = be ? be.__html : void 0, Te != null && be !== Te && (V = V || []).push(Ke, Te)) : Ke === "children" ? typeof Te != "string" && typeof Te != "number" || (V = V || []).push(Ke, "" + Te) : Ke !== "suppressContentEditableWarning" && Ke !== "suppressHydrationWarning" && (i.hasOwnProperty(Ke) ? (Te != null && Ke === "onScroll" && pr("scroll", d), V || be === Te || (V = [])) : (V = V || []).push(Ke, Te));
                }
                w && (V = V || []).push("style", w);
                var Ke = V;
                (h.updateQueue = Ke) && (h.flags |= 4);
            }
        }, sL = function(d, h, w, I) {
            w !== I && (h.flags |= 4);
        };
        function dx(d, h) {
            if (!_r) switch(d.tailMode){
                case "hidden":
                    h = d.tail;
                    for(var w = null; h !== null;)h.alternate !== null && (w = h), h = h.sibling;
                    w === null ? d.tail = null : w.sibling = null;
                    break;
                case "collapsed":
                    w = d.tail;
                    for(var I = null; w !== null;)w.alternate !== null && (I = w), w = w.sibling;
                    I === null ? h || d.tail === null ? d.tail = null : d.tail.sibling = null : I.sibling = null;
            }
        }
        function Fs(d) {
            var h = d.alternate !== null && d.alternate.child === d.child, w = 0, I = 0;
            if (h) for(var F = d.child; F !== null;)w |= F.lanes | F.childLanes, I |= F.subtreeFlags & 14680064, I |= F.flags & 14680064, F.return = d, F = F.sibling;
            else for(F = d.child; F !== null;)w |= F.lanes | F.childLanes, I |= F.subtreeFlags, I |= F.flags, F.return = d, F = F.sibling;
            return d.subtreeFlags |= I, d.childLanes = w, h;
        }
        function Y8(d, h, w) {
            var I = h.pendingProps;
            switch(Cl(h), h.tag){
                case 2:
                case 16:
                case 15:
                case 0:
                case 11:
                case 7:
                case 8:
                case 12:
                case 9:
                case 14:
                    return Fs(h), null;
                case 1:
                    return ss(h.type) && Ih(), Fs(h), null;
                case 3:
                    return I = h.stateNode, Sc(), mr(vs), mr(Gi), Ka(), I.pendingContext && (I.context = I.pendingContext, I.pendingContext = null), (d === null || d.child === null) && (qd(h) ? h.flags |= 4 : d === null || d.memoizedState.isDehydrated && !(h.flags & 256) || (h.flags |= 1024, Uo !== null && (FC(Uo), Uo = null))), TC(d, h), Fs(h), null;
                case 5:
                    Xd(h);
                    var F = si(Al.current);
                    if (w = h.type, d !== null && h.stateNode != null) iL(d, h, w, I, F), d.ref !== h.ref && (h.flags |= 512, h.flags |= 2097152);
                    else {
                        if (!I) {
                            if (h.stateNode === null) throw Error(n(166));
                            return Fs(h), null;
                        }
                        if (d = si(ho.current), qd(h)) {
                            I = h.stateNode, w = h.type;
                            var V = h.memoizedProps;
                            switch(I[bi] = h, I[Wd] = V, d = (h.mode & 1) !== 0, w){
                                case "dialog":
                                    pr("cancel", I), pr("close", I);
                                    break;
                                case "iframe":
                                case "object":
                                case "embed":
                                    pr("load", I);
                                    break;
                                case "video":
                                case "audio":
                                    for(F = 0; F < xc.length; F++)pr(xc[F], I);
                                    break;
                                case "source":
                                    pr("error", I);
                                    break;
                                case "img":
                                case "image":
                                case "link":
                                    pr("error", I), pr("load", I);
                                    break;
                                case "details":
                                    pr("toggle", I);
                                    break;
                                case "input":
                                    Ye(I, V), pr("invalid", I);
                                    break;
                                case "select":
                                    I._wrapperState = {
                                        wasMultiple: !!V.multiple
                                    }, pr("invalid", I);
                                    break;
                                case "textarea":
                                    fe(I, V), pr("invalid", I);
                            }
                            _e(w, V), F = null;
                            for(var re in V)if (V.hasOwnProperty(re)) {
                                var be = V[re];
                                re === "children" ? typeof be == "string" ? I.textContent !== be && (V.suppressHydrationWarning !== !0 && Th(I.textContent, be, d), F = [
                                    "children",
                                    be
                                ]) : typeof be == "number" && I.textContent !== "" + be && (V.suppressHydrationWarning !== !0 && Th(I.textContent, be, d), F = [
                                    "children",
                                    "" + be
                                ]) : i.hasOwnProperty(re) && be != null && re === "onScroll" && pr("scroll", I);
                            }
                            switch(w){
                                case "input":
                                    Ve(I), de(I, V, !0);
                                    break;
                                case "textarea":
                                    Ve(I), me(I);
                                    break;
                                case "select":
                                case "option":
                                    break;
                                default:
                                    typeof V.onClick == "function" && (I.onclick = Ch);
                            }
                            I = F, h.updateQueue = I, I !== null && (h.flags |= 4);
                        } else {
                            re = F.nodeType === 9 ? F : F.ownerDocument, d === "http://www.w3.org/1999/xhtml" && (d = Ie(w)), d === "http://www.w3.org/1999/xhtml" ? w === "script" ? (d = re.createElement("div"), d.innerHTML = "<script><\/script>", d = d.removeChild(d.firstChild)) : typeof I.is == "string" ? d = re.createElement(w, {
                                is: I.is
                            }) : (d = re.createElement(w), w === "select" && (re = d, I.multiple ? re.multiple = !0 : I.size && (re.size = I.size))) : d = re.createElementNS(d, w), d[bi] = h, d[Wd] = I, rL(d, h, !1, !1), h.stateNode = d;
                            e: {
                                switch(re = $e(w, I), w){
                                    case "dialog":
                                        pr("cancel", d), pr("close", d), F = I;
                                        break;
                                    case "iframe":
                                    case "object":
                                    case "embed":
                                        pr("load", d), F = I;
                                        break;
                                    case "video":
                                    case "audio":
                                        for(F = 0; F < xc.length; F++)pr(xc[F], d);
                                        F = I;
                                        break;
                                    case "source":
                                        pr("error", d), F = I;
                                        break;
                                    case "img":
                                    case "image":
                                    case "link":
                                        pr("error", d), pr("load", d), F = I;
                                        break;
                                    case "details":
                                        pr("toggle", d), F = I;
                                        break;
                                    case "input":
                                        Ye(d, I), F = se(d, I), pr("invalid", d);
                                        break;
                                    case "option":
                                        F = I;
                                        break;
                                    case "select":
                                        d._wrapperState = {
                                            wasMultiple: !!I.multiple
                                        }, F = Q({}, I, {
                                            value: void 0
                                        }), pr("invalid", d);
                                        break;
                                    case "textarea":
                                        fe(d, I), F = H(d, I), pr("invalid", d);
                                        break;
                                    default:
                                        F = I;
                                }
                                _e(w, F), be = F;
                                for(V in be)if (be.hasOwnProperty(V)) {
                                    var Te = be[V];
                                    V === "style" ? ct(d, Te) : V === "dangerouslySetInnerHTML" ? (Te = Te ? Te.__html : void 0, Te != null && at(d, Te)) : V === "children" ? typeof Te == "string" ? (w !== "textarea" || Te !== "") && Je(d, Te) : typeof Te == "number" && Je(d, "" + Te) : V !== "suppressContentEditableWarning" && V !== "suppressHydrationWarning" && V !== "autoFocus" && (i.hasOwnProperty(V) ? Te != null && V === "onScroll" && pr("scroll", d) : Te != null && E(d, V, Te, re));
                                }
                                switch(w){
                                    case "input":
                                        Ve(d), de(d, I, !1);
                                        break;
                                    case "textarea":
                                        Ve(d), me(d);
                                        break;
                                    case "option":
                                        I.value != null && d.setAttribute("value", "" + Ee(I.value));
                                        break;
                                    case "select":
                                        d.multiple = !!I.multiple, V = I.value, V != null ? $(d, !!I.multiple, V, !1) : I.defaultValue != null && $(d, !!I.multiple, I.defaultValue, !0);
                                        break;
                                    default:
                                        typeof F.onClick == "function" && (d.onclick = Ch);
                                }
                                switch(w){
                                    case "button":
                                    case "input":
                                    case "select":
                                    case "textarea":
                                        I = !!I.autoFocus;
                                        break e;
                                    case "img":
                                        I = !0;
                                        break e;
                                    default:
                                        I = !1;
                                }
                            }
                            I && (h.flags |= 4);
                        }
                        h.ref !== null && (h.flags |= 512, h.flags |= 2097152);
                    }
                    return Fs(h), null;
                case 6:
                    if (d && h.stateNode != null) sL(d, h, d.memoizedProps, I);
                    else {
                        if (typeof I != "string" && h.stateNode === null) throw Error(n(166));
                        if (w = si(Al.current), si(ho.current), qd(h)) {
                            if (I = h.stateNode, w = h.memoizedProps, I[bi] = h, (V = I.nodeValue !== w) && (d = Xi, d !== null)) switch(d.tag){
                                case 3:
                                    Th(I.nodeValue, w, (d.mode & 1) !== 0);
                                    break;
                                case 5:
                                    d.memoizedProps.suppressHydrationWarning !== !0 && Th(I.nodeValue, w, (d.mode & 1) !== 0);
                            }
                            V && (h.flags |= 4);
                        } else I = (w.nodeType === 9 ? w : w.ownerDocument).createTextNode(I), I[bi] = h, h.stateNode = I;
                    }
                    return Fs(h), null;
                case 13:
                    if (mr(Sr), I = h.memoizedState, d === null || d.memoizedState !== null && d.memoizedState.dehydrated !== null) {
                        if (_r && bs !== null && h.mode & 1 && !(h.flags & 128)) Jv(), wc(), h.flags |= 98560, V = !1;
                        else if (V = qd(h), I !== null && I.dehydrated !== null) {
                            if (d === null) {
                                if (!V) throw Error(n(318));
                                if (V = h.memoizedState, V = V !== null ? V.dehydrated : null, !V) throw Error(n(317));
                                V[bi] = h;
                            } else wc(), !(h.flags & 128) && (h.memoizedState = null), h.flags |= 4;
                            Fs(h), V = !1;
                        } else Uo !== null && (FC(Uo), Uo = null), V = !0;
                        if (!V) return h.flags & 65536 ? h : null;
                    }
                    return h.flags & 128 ? (h.lanes = w, h) : (I = I !== null, I !== (d !== null && d.memoizedState !== null) && I && (h.child.flags |= 8192, h.mode & 1 && (d === null || Sr.current & 1 ? Ji === 0 && (Ji = 3) : UC())), h.updateQueue !== null && (h.flags |= 4), Fs(h), null);
                case 4:
                    return Sc(), TC(d, h), d === null && Ud(h.stateNode.containerInfo), Fs(h), null;
                case 10:
                    return Lh(h.type._context), Fs(h), null;
                case 17:
                    return ss(h.type) && Ih(), Fs(h), null;
                case 19:
                    if (mr(Sr), V = h.memoizedState, V === null) return Fs(h), null;
                    if (I = (h.flags & 128) !== 0, re = V.rendering, re === null) if (I) dx(V, !1);
                    else {
                        if (Ji !== 0 || d !== null && d.flags & 128) for(d = h.child; d !== null;){
                            if (re = va(d), re !== null) {
                                for(h.flags |= 128, dx(V, !1), I = re.updateQueue, I !== null && (h.updateQueue = I, h.flags |= 4), h.subtreeFlags = 0, I = w, w = h.child; w !== null;)V = w, d = I, V.flags &= 14680066, re = V.alternate, re === null ? (V.childLanes = 0, V.lanes = d, V.child = null, V.subtreeFlags = 0, V.memoizedProps = null, V.memoizedState = null, V.updateQueue = null, V.dependencies = null, V.stateNode = null) : (V.childLanes = re.childLanes, V.lanes = re.lanes, V.child = re.child, V.subtreeFlags = 0, V.deletions = null, V.memoizedProps = re.memoizedProps, V.memoizedState = re.memoizedState, V.updateQueue = re.updateQueue, V.type = re.type, d = re.dependencies, V.dependencies = d === null ? null : {
                                    lanes: d.lanes,
                                    firstContext: d.firstContext
                                }), w = w.sibling;
                                return fr(Sr, Sr.current & 1 | 2), h.child;
                            }
                            d = d.sibling;
                        }
                        V.tail !== null && je() > gg && (h.flags |= 128, I = !0, dx(V, !1), h.lanes = 4194304);
                    }
                    else {
                        if (!I) if (d = va(re), d !== null) {
                            if (h.flags |= 128, I = !0, w = d.updateQueue, w !== null && (h.updateQueue = w, h.flags |= 4), dx(V, !0), V.tail === null && V.tailMode === "hidden" && !re.alternate && !_r) return Fs(h), null;
                        } else 2 * je() - V.renderingStartTime > gg && w !== 1073741824 && (h.flags |= 128, I = !0, dx(V, !1), h.lanes = 4194304);
                        V.isBackwards ? (re.sibling = h.child, h.child = re) : (w = V.last, w !== null ? w.sibling = re : h.child = re, V.last = re);
                    }
                    return V.tail !== null ? (h = V.tail, V.rendering = h, V.tail = h.sibling, V.renderingStartTime = je(), h.sibling = null, w = Sr.current, fr(Sr, I ? w & 1 | 2 : w & 1), h) : (Fs(h), null);
                case 22:
                case 23:
                    return BC(), I = h.memoizedState !== null, d !== null && d.memoizedState !== null !== I && (h.flags |= 8192), I && h.mode & 1 ? wa & 1073741824 && (Fs(h), h.subtreeFlags & 6 && (h.flags |= 8192)) : Fs(h), null;
                case 24:
                    return null;
                case 25:
                    return null;
            }
            throw Error(n(156, h.tag));
        }
        function Z8(d, h) {
            switch(Cl(h), h.tag){
                case 1:
                    return ss(h.type) && Ih(), d = h.flags, d & 65536 ? (h.flags = d & -65537 | 128, h) : null;
                case 3:
                    return Sc(), mr(vs), mr(Gi), Ka(), d = h.flags, d & 65536 && !(d & 128) ? (h.flags = d & -65537 | 128, h) : null;
                case 5:
                    return Xd(h), null;
                case 13:
                    if (mr(Sr), d = h.memoizedState, d !== null && d.dehydrated !== null) {
                        if (h.alternate === null) throw Error(n(340));
                        wc();
                    }
                    return d = h.flags, d & 65536 ? (h.flags = d & -65537 | 128, h) : null;
                case 19:
                    return mr(Sr), null;
                case 4:
                    return Sc(), null;
                case 10:
                    return Lh(h.type._context), null;
                case 22:
                case 23:
                    return BC(), null;
                case 24:
                    return null;
                default:
                    return null;
            }
        }
        var i_ = !1, js = !1, J8 = typeof WeakSet == "function" ? WeakSet : Set, Vt = null;
        function pg(d, h) {
            var w = d.ref;
            if (w !== null) if (typeof w == "function") try {
                w(null);
            } catch (I) {
                ai(d, h, I);
            }
            else w.current = null;
        }
        function CC(d, h, w) {
            try {
                w();
            } catch (I) {
                ai(d, h, I);
            }
        }
        var oL = !1;
        function Q8(d, h) {
            if (Vd = ko, d = Br(), Ni(d)) {
                if ("selectionStart" in d) var w = {
                    start: d.selectionStart,
                    end: d.selectionEnd
                };
                else e: {
                    w = (w = d.ownerDocument) && w.defaultView || window;
                    var I = w.getSelection && w.getSelection();
                    if (I && I.rangeCount !== 0) {
                        w = I.anchorNode;
                        var F = I.anchorOffset, V = I.focusNode;
                        I = I.focusOffset;
                        try {
                            w.nodeType, V.nodeType;
                        } catch  {
                            w = null;
                            break e;
                        }
                        var re = 0, be = -1, Te = -1, Ke = 0, ft = 0, mt = d, ut = null;
                        t: for(;;){
                            for(var kt; mt !== w || F !== 0 && mt.nodeType !== 3 || (be = re + F), mt !== V || I !== 0 && mt.nodeType !== 3 || (Te = re + I), mt.nodeType === 3 && (re += mt.nodeValue.length), (kt = mt.firstChild) !== null;)ut = mt, mt = kt;
                            for(;;){
                                if (mt === d) break t;
                                if (ut === w && ++Ke === F && (be = re), ut === V && ++ft === I && (Te = re), (kt = mt.nextSibling) !== null) break;
                                mt = ut, ut = mt.parentNode;
                            }
                            mt = kt;
                        }
                        w = be === -1 || Te === -1 ? null : {
                            start: be,
                            end: Te
                        };
                    } else w = null;
                }
                w = w || {
                    start: 0,
                    end: 0
                };
            } else w = null;
            for(Uv = {
                focusedElem: d,
                selectionRange: w
            }, ko = !1, Vt = h; Vt !== null;)if (h = Vt, d = h.child, (h.subtreeFlags & 1028) !== 0 && d !== null) d.return = h, Vt = d;
            else for(; Vt !== null;){
                h = Vt;
                try {
                    var qt = h.alternate;
                    if (h.flags & 1024) switch(h.tag){
                        case 0:
                        case 11:
                        case 15:
                            break;
                        case 1:
                            if (qt !== null) {
                                var Ht = qt.memoizedProps, wi = qt.memoizedState, ze = h.stateNode, Ae = ze.getSnapshotBeforeUpdate(h.elementType === h.type ? Ht : zo(h.type, Ht), wi);
                                ze.__reactInternalSnapshotBeforeUpdate = Ae;
                            }
                            break;
                        case 3:
                            var qe = h.stateNode.containerInfo;
                            qe.nodeType === 1 ? qe.textContent = "" : qe.nodeType === 9 && qe.documentElement && qe.removeChild(qe.documentElement);
                            break;
                        case 5:
                        case 6:
                        case 4:
                        case 17:
                            break;
                        default:
                            throw Error(n(163));
                    }
                } catch (xt) {
                    ai(h, h.return, xt);
                }
                if (d = h.sibling, d !== null) {
                    d.return = h.return, Vt = d;
                    break;
                }
                Vt = h.return;
            }
            return qt = oL, oL = !1, qt;
        }
        function fx(d, h, w) {
            var I = h.updateQueue;
            if (I = I !== null ? I.lastEffect : null, I !== null) {
                var F = I = I.next;
                do {
                    if ((F.tag & d) === d) {
                        var V = F.destroy;
                        F.destroy = void 0, V !== void 0 && CC(h, w, V);
                    }
                    F = F.next;
                }while (F !== I);
            }
        }
        function s_(d, h) {
            if (h = h.updateQueue, h = h !== null ? h.lastEffect : null, h !== null) {
                var w = h = h.next;
                do {
                    if ((w.tag & d) === d) {
                        var I = w.create;
                        w.destroy = I();
                    }
                    w = w.next;
                }while (w !== h);
            }
        }
        function IC(d) {
            var h = d.ref;
            if (h !== null) {
                var w = d.stateNode;
                switch(d.tag){
                    case 5:
                        d = w;
                        break;
                    default:
                        d = w;
                }
                typeof h == "function" ? h(d) : h.current = d;
            }
        }
        function aL(d) {
            var h = d.alternate;
            h !== null && (d.alternate = null, aL(h)), d.child = null, d.deletions = null, d.sibling = null, d.tag === 5 && (h = d.stateNode, h !== null && (delete h[bi], delete h[Wd], delete h[yu], delete h[Zm], delete h[Jm])), d.stateNode = null, d.return = null, d.dependencies = null, d.memoizedProps = null, d.memoizedState = null, d.pendingProps = null, d.stateNode = null, d.updateQueue = null;
        }
        function lL(d) {
            return d.tag === 5 || d.tag === 3 || d.tag === 4;
        }
        function cL(d) {
            e: for(;;){
                for(; d.sibling === null;){
                    if (d.return === null || lL(d.return)) return null;
                    d = d.return;
                }
                for(d.sibling.return = d.return, d = d.sibling; d.tag !== 5 && d.tag !== 6 && d.tag !== 18;){
                    if (d.flags & 2 || d.child === null || d.tag === 4) continue e;
                    d.child.return = d, d = d.child;
                }
                if (!(d.flags & 2)) return d.stateNode;
            }
        }
        function RC(d, h, w) {
            var I = d.tag;
            if (I === 5 || I === 6) d = d.stateNode, h ? w.nodeType === 8 ? w.parentNode.insertBefore(d, h) : w.insertBefore(d, h) : (w.nodeType === 8 ? (h = w.parentNode, h.insertBefore(d, w)) : (h = w, h.appendChild(d)), w = w._reactRootContainer, w != null || h.onclick !== null || (h.onclick = Ch));
            else if (I !== 4 && (d = d.child, d !== null)) for(RC(d, h, w), d = d.sibling; d !== null;)RC(d, h, w), d = d.sibling;
        }
        function AC(d, h, w) {
            var I = d.tag;
            if (I === 5 || I === 6) d = d.stateNode, h ? w.insertBefore(d, h) : w.appendChild(d);
            else if (I !== 4 && (d = d.child, d !== null)) for(AC(d, h, w), d = d.sibling; d !== null;)AC(d, h, w), d = d.sibling;
        }
        var _s = null, Ll = !1;
        function Zd(d, h, w) {
            for(w = w.child; w !== null;)uL(d, h, w), w = w.sibling;
        }
        function uL(d, h, w) {
            if (yt && typeof yt.onCommitFiberUnmount == "function") try {
                yt.onCommitFiberUnmount(Xt, w);
            } catch  {}
            switch(w.tag){
                case 5:
                    js || pg(w, h);
                case 6:
                    var I = _s, F = Ll;
                    _s = null, Zd(d, h, w), _s = I, Ll = F, _s !== null && (Ll ? (d = _s, w = w.stateNode, d.nodeType === 8 ? d.parentNode.removeChild(w) : d.removeChild(w)) : _s.removeChild(w.stateNode));
                    break;
                case 18:
                    _s !== null && (Ll ? (d = _s, w = w.stateNode, d.nodeType === 8 ? Ym(d.parentNode, w) : d.nodeType === 1 && Ym(d, w), mh(d)) : Ym(_s, w.stateNode));
                    break;
                case 4:
                    I = _s, F = Ll, _s = w.stateNode.containerInfo, Ll = !0, Zd(d, h, w), _s = I, Ll = F;
                    break;
                case 0:
                case 11:
                case 14:
                case 15:
                    if (!js && (I = w.updateQueue, I !== null && (I = I.lastEffect, I !== null))) {
                        F = I = I.next;
                        do {
                            var V = F, re = V.destroy;
                            V = V.tag, re !== void 0 && (V & 2 || V & 4) && CC(w, h, re), F = F.next;
                        }while (F !== I);
                    }
                    Zd(d, h, w);
                    break;
                case 1:
                    if (!js && (pg(w, h), I = w.stateNode, typeof I.componentWillUnmount == "function")) try {
                        I.props = w.memoizedProps, I.state = w.memoizedState, I.componentWillUnmount();
                    } catch (be) {
                        ai(w, h, be);
                    }
                    Zd(d, h, w);
                    break;
                case 21:
                    Zd(d, h, w);
                    break;
                case 22:
                    w.mode & 1 ? (js = (I = js) || w.memoizedState !== null, Zd(d, h, w), js = I) : Zd(d, h, w);
                    break;
                default:
                    Zd(d, h, w);
            }
        }
        function dL(d) {
            var h = d.updateQueue;
            if (h !== null) {
                d.updateQueue = null;
                var w = d.stateNode;
                w === null && (w = d.stateNode = new J8), h.forEach(function(I) {
                    var F = l9.bind(null, d, I);
                    w.has(I) || (w.add(I), I.then(F, F));
                });
            }
        }
        function Dl(d, h) {
            var w = h.deletions;
            if (w !== null) for(var I = 0; I < w.length; I++){
                var F = w[I];
                try {
                    var V = d, re = h, be = re;
                    e: for(; be !== null;){
                        switch(be.tag){
                            case 5:
                                _s = be.stateNode, Ll = !1;
                                break e;
                            case 3:
                                _s = be.stateNode.containerInfo, Ll = !0;
                                break e;
                            case 4:
                                _s = be.stateNode.containerInfo, Ll = !0;
                                break e;
                        }
                        be = be.return;
                    }
                    if (_s === null) throw Error(n(160));
                    uL(V, re, F), _s = null, Ll = !1;
                    var Te = F.alternate;
                    Te !== null && (Te.return = null), F.return = null;
                } catch (Ke) {
                    ai(F, h, Ke);
                }
            }
            if (h.subtreeFlags & 12854) for(h = h.child; h !== null;)fL(h, d), h = h.sibling;
        }
        function fL(d, h) {
            var w = d.alternate, I = d.flags;
            switch(d.tag){
                case 0:
                case 11:
                case 14:
                case 15:
                    if (Dl(h, d), Mc(d), I & 4) {
                        try {
                            fx(3, d, d.return), s_(3, d);
                        } catch (Ht) {
                            ai(d, d.return, Ht);
                        }
                        try {
                            fx(5, d, d.return);
                        } catch (Ht) {
                            ai(d, d.return, Ht);
                        }
                    }
                    break;
                case 1:
                    Dl(h, d), Mc(d), I & 512 && w !== null && pg(w, w.return);
                    break;
                case 5:
                    if (Dl(h, d), Mc(d), I & 512 && w !== null && pg(w, w.return), d.flags & 32) {
                        var F = d.stateNode;
                        try {
                            Je(F, "");
                        } catch (Ht) {
                            ai(d, d.return, Ht);
                        }
                    }
                    if (I & 4 && (F = d.stateNode, F != null)) {
                        var V = d.memoizedProps, re = w !== null ? w.memoizedProps : V, be = d.type, Te = d.updateQueue;
                        if (d.updateQueue = null, Te !== null) try {
                            be === "input" && V.type === "radio" && V.name != null && Be(F, V), $e(be, re);
                            var Ke = $e(be, V);
                            for(re = 0; re < Te.length; re += 2){
                                var ft = Te[re], mt = Te[re + 1];
                                ft === "style" ? ct(F, mt) : ft === "dangerouslySetInnerHTML" ? at(F, mt) : ft === "children" ? Je(F, mt) : E(F, ft, mt, Ke);
                            }
                            switch(be){
                                case "input":
                                    it(F, V);
                                    break;
                                case "textarea":
                                    pe(F, V);
                                    break;
                                case "select":
                                    var ut = F._wrapperState.wasMultiple;
                                    F._wrapperState.wasMultiple = !!V.multiple;
                                    var kt = V.value;
                                    kt != null ? $(F, !!V.multiple, kt, !1) : ut !== !!V.multiple && (V.defaultValue != null ? $(F, !!V.multiple, V.defaultValue, !0) : $(F, !!V.multiple, V.multiple ? [] : "", !1));
                            }
                            F[Wd] = V;
                        } catch (Ht) {
                            ai(d, d.return, Ht);
                        }
                    }
                    break;
                case 6:
                    if (Dl(h, d), Mc(d), I & 4) {
                        if (d.stateNode === null) throw Error(n(162));
                        F = d.stateNode, V = d.memoizedProps;
                        try {
                            F.nodeValue = V;
                        } catch (Ht) {
                            ai(d, d.return, Ht);
                        }
                    }
                    break;
                case 3:
                    if (Dl(h, d), Mc(d), I & 4 && w !== null && w.memoizedState.isDehydrated) try {
                        mh(h.containerInfo);
                    } catch (Ht) {
                        ai(d, d.return, Ht);
                    }
                    break;
                case 4:
                    Dl(h, d), Mc(d);
                    break;
                case 13:
                    Dl(h, d), Mc(d), F = d.child, F.flags & 8192 && (V = F.memoizedState !== null, F.stateNode.isHidden = V, !V || F.alternate !== null && F.alternate.memoizedState !== null || (kC = je())), I & 4 && dL(d);
                    break;
                case 22:
                    if (ft = w !== null && w.memoizedState !== null, d.mode & 1 ? (js = (Ke = js) || ft, Dl(h, d), js = Ke) : Dl(h, d), Mc(d), I & 8192) {
                        if (Ke = d.memoizedState !== null, (d.stateNode.isHidden = Ke) && !ft && d.mode & 1) for(Vt = d, ft = d.child; ft !== null;){
                            for(mt = Vt = ft; Vt !== null;){
                                switch(ut = Vt, kt = ut.child, ut.tag){
                                    case 0:
                                    case 11:
                                    case 14:
                                    case 15:
                                        fx(4, ut, ut.return);
                                        break;
                                    case 1:
                                        pg(ut, ut.return);
                                        var qt = ut.stateNode;
                                        if (typeof qt.componentWillUnmount == "function") {
                                            I = ut, w = ut.return;
                                            try {
                                                h = I, qt.props = h.memoizedProps, qt.state = h.memoizedState, qt.componentWillUnmount();
                                            } catch (Ht) {
                                                ai(I, w, Ht);
                                            }
                                        }
                                        break;
                                    case 5:
                                        pg(ut, ut.return);
                                        break;
                                    case 22:
                                        if (ut.memoizedState !== null) {
                                            mL(mt);
                                            continue;
                                        }
                                }
                                kt !== null ? (kt.return = ut, Vt = kt) : mL(mt);
                            }
                            ft = ft.sibling;
                        }
                        e: for(ft = null, mt = d;;){
                            if (mt.tag === 5) {
                                if (ft === null) {
                                    ft = mt;
                                    try {
                                        F = mt.stateNode, Ke ? (V = F.style, typeof V.setProperty == "function" ? V.setProperty("display", "none", "important") : V.display = "none") : (be = mt.stateNode, Te = mt.memoizedProps.style, re = Te != null && Te.hasOwnProperty("display") ? Te.display : null, be.style.display = nt("display", re));
                                    } catch (Ht) {
                                        ai(d, d.return, Ht);
                                    }
                                }
                            } else if (mt.tag === 6) {
                                if (ft === null) try {
                                    mt.stateNode.nodeValue = Ke ? "" : mt.memoizedProps;
                                } catch (Ht) {
                                    ai(d, d.return, Ht);
                                }
                            } else if ((mt.tag !== 22 && mt.tag !== 23 || mt.memoizedState === null || mt === d) && mt.child !== null) {
                                mt.child.return = mt, mt = mt.child;
                                continue;
                            }
                            if (mt === d) break e;
                            for(; mt.sibling === null;){
                                if (mt.return === null || mt.return === d) break e;
                                ft === mt && (ft = null), mt = mt.return;
                            }
                            ft === mt && (ft = null), mt.sibling.return = mt.return, mt = mt.sibling;
                        }
                    }
                    break;
                case 19:
                    Dl(h, d), Mc(d), I & 4 && dL(d);
                    break;
                case 21:
                    break;
                default:
                    Dl(h, d), Mc(d);
            }
        }
        function Mc(d) {
            var h = d.flags;
            if (h & 2) {
                try {
                    e: {
                        for(var w = d.return; w !== null;){
                            if (lL(w)) {
                                var I = w;
                                break e;
                            }
                            w = w.return;
                        }
                        throw Error(n(160));
                    }
                    switch(I.tag){
                        case 5:
                            var F = I.stateNode;
                            I.flags & 32 && (Je(F, ""), I.flags &= -33);
                            var V = cL(d);
                            AC(d, V, F);
                            break;
                        case 3:
                        case 4:
                            var re = I.stateNode.containerInfo, be = cL(d);
                            RC(d, be, re);
                            break;
                        default:
                            throw Error(n(161));
                    }
                } catch (Te) {
                    ai(d, d.return, Te);
                }
                d.flags &= -3;
            }
            h & 4096 && (d.flags &= -4097);
        }
        function e9(d, h, w) {
            Vt = d, hL(d);
        }
        function hL(d, h, w) {
            for(var I = (d.mode & 1) !== 0; Vt !== null;){
                var F = Vt, V = F.child;
                if (F.tag === 22 && I) {
                    var re = F.memoizedState !== null || i_;
                    if (!re) {
                        var be = F.alternate, Te = be !== null && be.memoizedState !== null || js;
                        be = i_;
                        var Ke = js;
                        if (i_ = re, (js = Te) && !Ke) for(Vt = F; Vt !== null;)re = Vt, Te = re.child, re.tag === 22 && re.memoizedState !== null ? gL(F) : Te !== null ? (Te.return = re, Vt = Te) : gL(F);
                        for(; V !== null;)Vt = V, hL(V), V = V.sibling;
                        Vt = F, i_ = be, js = Ke;
                    }
                    pL(d);
                } else F.subtreeFlags & 8772 && V !== null ? (V.return = F, Vt = V) : pL(d);
            }
        }
        function pL(d) {
            for(; Vt !== null;){
                var h = Vt;
                if (h.flags & 8772) {
                    var w = h.alternate;
                    try {
                        if (h.flags & 8772) switch(h.tag){
                            case 0:
                            case 11:
                            case 15:
                                js || s_(5, h);
                                break;
                            case 1:
                                var I = h.stateNode;
                                if (h.flags & 4 && !js) if (w === null) I.componentDidMount();
                                else {
                                    var F = h.elementType === h.type ? w.memoizedProps : zo(h.type, w.memoizedProps);
                                    I.componentDidUpdate(F, w.memoizedState, I.__reactInternalSnapshotBeforeUpdate);
                                }
                                var V = h.updateQueue;
                                V !== null && Gd(h, V, I);
                                break;
                            case 3:
                                var re = h.updateQueue;
                                if (re !== null) {
                                    if (w = null, h.child !== null) switch(h.child.tag){
                                        case 5:
                                            w = h.child.stateNode;
                                            break;
                                        case 1:
                                            w = h.child.stateNode;
                                    }
                                    Gd(h, re, w);
                                }
                                break;
                            case 5:
                                var be = h.stateNode;
                                if (w === null && h.flags & 4) {
                                    w = be;
                                    var Te = h.memoizedProps;
                                    switch(h.type){
                                        case "button":
                                        case "input":
                                        case "select":
                                        case "textarea":
                                            Te.autoFocus && w.focus();
                                            break;
                                        case "img":
                                            Te.src && (w.src = Te.src);
                                    }
                                }
                                break;
                            case 6:
                                break;
                            case 4:
                                break;
                            case 12:
                                break;
                            case 13:
                                if (h.memoizedState === null) {
                                    var Ke = h.alternate;
                                    if (Ke !== null) {
                                        var ft = Ke.memoizedState;
                                        if (ft !== null) {
                                            var mt = ft.dehydrated;
                                            mt !== null && mh(mt);
                                        }
                                    }
                                }
                                break;
                            case 19:
                            case 17:
                            case 21:
                            case 22:
                            case 23:
                            case 25:
                                break;
                            default:
                                throw Error(n(163));
                        }
                        js || h.flags & 512 && IC(h);
                    } catch (ut) {
                        ai(h, h.return, ut);
                    }
                }
                if (h === d) {
                    Vt = null;
                    break;
                }
                if (w = h.sibling, w !== null) {
                    w.return = h.return, Vt = w;
                    break;
                }
                Vt = h.return;
            }
        }
        function mL(d) {
            for(; Vt !== null;){
                var h = Vt;
                if (h === d) {
                    Vt = null;
                    break;
                }
                var w = h.sibling;
                if (w !== null) {
                    w.return = h.return, Vt = w;
                    break;
                }
                Vt = h.return;
            }
        }
        function gL(d) {
            for(; Vt !== null;){
                var h = Vt;
                try {
                    switch(h.tag){
                        case 0:
                        case 11:
                        case 15:
                            var w = h.return;
                            try {
                                s_(4, h);
                            } catch (Te) {
                                ai(h, w, Te);
                            }
                            break;
                        case 1:
                            var I = h.stateNode;
                            if (typeof I.componentDidMount == "function") {
                                var F = h.return;
                                try {
                                    I.componentDidMount();
                                } catch (Te) {
                                    ai(h, F, Te);
                                }
                            }
                            var V = h.return;
                            try {
                                IC(h);
                            } catch (Te) {
                                ai(h, V, Te);
                            }
                            break;
                        case 5:
                            var re = h.return;
                            try {
                                IC(h);
                            } catch (Te) {
                                ai(h, re, Te);
                            }
                    }
                } catch (Te) {
                    ai(h, h.return, Te);
                }
                if (h === d) {
                    Vt = null;
                    break;
                }
                var be = h.sibling;
                if (be !== null) {
                    be.return = h.return, Vt = be;
                    break;
                }
                Vt = h.return;
            }
        }
        var t9 = Math.ceil, o_ = T.ReactCurrentDispatcher, NC = T.ReactCurrentOwner, Za = T.ReactCurrentBatchConfig, er = 0, ls = null, Di = null, Ss = 0, wa = 0, mg = Wr(0), Ji = 0, hx = null, $h = 0, a_ = 0, PC = 0, px = null, Vo = null, kC = 0, gg = 1 / 0, ku = null, l_ = !1, OC = null, Jd = null, c_ = !1, Qd = null, u_ = 0, mx = 0, LC = null, d_ = -1, f_ = 0;
        function yo() {
            return er & 6 ? je() : d_ !== -1 ? d_ : d_ = je();
        }
        function ef(d) {
            return d.mode & 1 ? er & 2 && Ss !== 0 ? Ss & -Ss : SC.transition !== null ? (f_ === 0 && (f_ = zn()), f_) : (d = qn, d !== 0 || (d = window.event, d = d === void 0 ? 16 : Nw(d.type)), d) : 1;
        }
        function Fl(d, h, w, I) {
            if (50 < mx) throw mx = 0, LC = null, Error(n(185));
            Ai(d, w, I), (!(er & 2) || d !== ls) && (d === ls && (!(er & 2) && (a_ |= w), Ji === 4 && tf(d, Ss)), Wo(d, I), w === 1 && er === 0 && !(h.mode & 1) && (gg = je() + 500, Ah && Ga()));
        }
        function Wo(d, h) {
            var w = d.callbackNode;
            ii(d, h);
            var I = Zr(d, d === ls ? Ss : 0);
            if (I === 0) w !== null && ce(w), d.callbackNode = null, d.callbackPriority = 0;
            else if (h = I & -I, d.callbackPriority !== h) {
                if (w != null && ce(w), h === 1) d.tag === 0 ? Hw(vL.bind(null, d)) : Nh(vL.bind(null, d)), _C(function() {
                    !(er & 6) && Ga();
                }), w = null;
                else {
                    switch(Ns(I)){
                        case 1:
                            w = dt;
                            break;
                        case 4:
                            w = _t;
                            break;
                        case 16:
                            w = Ct;
                            break;
                        case 536870912:
                            w = Jt;
                            break;
                        default:
                            w = Ct;
                    }
                    w = TL(w, yL.bind(null, d));
                }
                d.callbackPriority = h, d.callbackNode = w;
            }
        }
        function yL(d, h) {
            if (d_ = -1, f_ = 0, er & 6) throw Error(n(327));
            var w = d.callbackNode;
            if (yg() && d.callbackNode !== w) return null;
            var I = Zr(d, d === ls ? Ss : 0);
            if (I === 0) return null;
            if (I & 30 || I & d.expiredLanes || h) h = h_(d, I);
            else {
                h = I;
                var F = er;
                er |= 2;
                var V = bL();
                (ls !== d || Ss !== h) && (ku = null, gg = je() + 500, Xh(d, h));
                do try {
                    i9();
                    break;
                } catch (be) {
                    xL(d, be);
                }
                while (!0);
                Mu(), o_.current = V, er = F, Di !== null ? h = 0 : (ls = null, Ss = 0, h = Ji);
            }
            if (h !== 0) {
                if (h === 2 && (F = oo(d), F !== 0 && (I = F, h = DC(d, F))), h === 1) throw w = hx, Xh(d, 0), tf(d, I), Wo(d, je()), w;
                if (h === 6) tf(d, I);
                else {
                    if (F = d.current.alternate, !(I & 30) && !n9(F) && (h = h_(d, I), h === 2 && (V = oo(d), V !== 0 && (I = V, h = DC(d, V))), h === 1)) throw w = hx, Xh(d, 0), tf(d, I), Wo(d, je()), w;
                    switch(d.finishedWork = F, d.finishedLanes = I, h){
                        case 0:
                        case 1:
                            throw Error(n(345));
                        case 2:
                            Kh(d, Vo, ku);
                            break;
                        case 3:
                            if (tf(d, I), (I & 130023424) === I && (h = kC + 500 - je(), 10 < h)) {
                                if (Zr(d, 0) !== 0) break;
                                if (F = d.suspendedLanes, (F & I) !== I) {
                                    yo(), d.pingedLanes |= d.suspendedLanes & F;
                                    break;
                                }
                                d.timeoutHandle = Vv(Kh.bind(null, d, Vo, ku), h);
                                break;
                            }
                            Kh(d, Vo, ku);
                            break;
                        case 4:
                            if (tf(d, I), (I & 4194240) === I) break;
                            for(h = d.eventTimes, F = -1; 0 < I;){
                                var re = 31 - nn(I);
                                V = 1 << re, re = h[re], re > F && (F = re), I &= ~V;
                            }
                            if (I = F, I = je() - I, I = (120 > I ? 120 : 480 > I ? 480 : 1080 > I ? 1080 : 1920 > I ? 1920 : 3e3 > I ? 3e3 : 4320 > I ? 4320 : 1960 * t9(I / 1960)) - I, 10 < I) {
                                d.timeoutHandle = Vv(Kh.bind(null, d, Vo, ku), I);
                                break;
                            }
                            Kh(d, Vo, ku);
                            break;
                        case 5:
                            Kh(d, Vo, ku);
                            break;
                        default:
                            throw Error(n(329));
                    }
                }
            }
            return Wo(d, je()), d.callbackNode === w ? yL.bind(null, d) : null;
        }
        function DC(d, h) {
            var w = px;
            return d.current.memoizedState.isDehydrated && (Xh(d, h).flags |= 256), d = h_(d, h), d !== 2 && (h = Vo, Vo = w, h !== null && FC(h)), d;
        }
        function FC(d) {
            Vo === null ? Vo = d : Vo.push.apply(Vo, d);
        }
        function n9(d) {
            for(var h = d;;){
                if (h.flags & 16384) {
                    var w = h.updateQueue;
                    if (w !== null && (w = w.stores, w !== null)) for(var I = 0; I < w.length; I++){
                        var F = w[I], V = F.getSnapshot;
                        F = F.value;
                        try {
                            if (!lo(V(), F)) return !1;
                        } catch  {
                            return !1;
                        }
                    }
                }
                if (w = h.child, h.subtreeFlags & 16384 && w !== null) w.return = h, h = w;
                else {
                    if (h === d) break;
                    for(; h.sibling === null;){
                        if (h.return === null || h.return === d) return !0;
                        h = h.return;
                    }
                    h.sibling.return = h.return, h = h.sibling;
                }
            }
            return !0;
        }
        function tf(d, h) {
            for(h &= ~PC, h &= ~a_, d.suspendedLanes |= h, d.pingedLanes &= ~h, d = d.expirationTimes; 0 < h;){
                var w = 31 - nn(h), I = 1 << w;
                d[w] = -1, h &= ~I;
            }
        }
        function vL(d) {
            if (er & 6) throw Error(n(327));
            yg();
            var h = Zr(d, 0);
            if (!(h & 1)) return Wo(d, je()), null;
            var w = h_(d, h);
            if (d.tag !== 0 && w === 2) {
                var I = oo(d);
                I !== 0 && (h = I, w = DC(d, I));
            }
            if (w === 1) throw w = hx, Xh(d, 0), tf(d, h), Wo(d, je()), w;
            if (w === 6) throw Error(n(345));
            return d.finishedWork = d.current.alternate, d.finishedLanes = h, Kh(d, Vo, ku), Wo(d, je()), null;
        }
        function jC(d, h) {
            var w = er;
            er |= 1;
            try {
                return d(h);
            } finally{
                er = w, er === 0 && (gg = je() + 500, Ah && Ga());
            }
        }
        function Gh(d) {
            Qd !== null && Qd.tag === 0 && !(er & 6) && yg();
            var h = er;
            er |= 1;
            var w = Za.transition, I = qn;
            try {
                if (Za.transition = null, qn = 1, d) return d();
            } finally{
                qn = I, Za.transition = w, er = h, !(er & 6) && Ga();
            }
        }
        function BC() {
            wa = mg.current, mr(mg);
        }
        function Xh(d, h) {
            d.finishedWork = null, d.finishedLanes = 0;
            var w = d.timeoutHandle;
            if (w !== -1 && (d.timeoutHandle = -1, Wv(w)), Di !== null) for(w = Di.return; w !== null;){
                var I = w;
                switch(Cl(I), I.tag){
                    case 1:
                        I = I.type.childContextTypes, I != null && Ih();
                        break;
                    case 3:
                        Sc(), mr(vs), mr(Gi), Ka();
                        break;
                    case 5:
                        Xd(I);
                        break;
                    case 4:
                        Sc();
                        break;
                    case 13:
                        mr(Sr);
                        break;
                    case 19:
                        mr(Sr);
                        break;
                    case 10:
                        Lh(I.type._context);
                        break;
                    case 22:
                    case 23:
                        BC();
                }
                w = w.return;
            }
            if (ls = d, Di = d = nf(d.current, null), Ss = wa = h, Ji = 0, hx = null, PC = a_ = $h = 0, Vo = px = null, Rl !== null) {
                for(h = 0; h < Rl.length; h++)if (w = Rl[h], I = w.interleaved, I !== null) {
                    w.interleaved = null;
                    var F = I.next, V = w.pending;
                    if (V !== null) {
                        var re = V.next;
                        V.next = F, I.next = re;
                    }
                    w.pending = I;
                }
                Rl = null;
            }
            return d;
        }
        function xL(d, h) {
            do {
                var w = Di;
                try {
                    if (Mu(), Ru.current = fg, xa) {
                        for(var I = gr.memoizedState; I !== null;){
                            var F = I.queue;
                            F !== null && (F.pending = null), I = I.next;
                        }
                        xa = !1;
                    }
                    if (Nl = 0, Yn = Hr = gr = null, as = !1, Ec = 0, NC.current = null, w === null || w.return === null) {
                        Ji = 1, hx = h, Di = null;
                        break;
                    }
                    e: {
                        var V = d, re = w.return, be = w, Te = h;
                        if (h = Ss, be.flags |= 32768, Te !== null && typeof Te == "object" && typeof Te.then == "function") {
                            var Ke = Te, ft = be, mt = ft.tag;
                            if (!(ft.mode & 1) && (mt === 0 || mt === 11 || mt === 15)) {
                                var ut = ft.alternate;
                                ut ? (ft.updateQueue = ut.updateQueue, ft.memoizedState = ut.memoizedState, ft.lanes = ut.lanes) : (ft.updateQueue = null, ft.memoizedState = null);
                            }
                            var kt = Bt(re);
                            if (kt !== null) {
                                kt.flags &= -257, mn(kt, re, be, V, h), kt.mode & 1 && vt(V, Ke, h), h = kt, Te = Ke;
                                var qt = h.updateQueue;
                                if (qt === null) {
                                    var Ht = new Set;
                                    Ht.add(Te), h.updateQueue = Ht;
                                } else qt.add(Te);
                                break e;
                            } else {
                                if (!(h & 1)) {
                                    vt(V, Ke, h), UC();
                                    break e;
                                }
                                Te = Error(n(426));
                            }
                        } else if (_r && be.mode & 1) {
                            var wi = Bt(re);
                            if (wi !== null) {
                                !(wi.flags & 65536) && (wi.flags |= 256), mn(wi, re, be, V, h), Hd(O(Te, be));
                                break e;
                            }
                        }
                        V = Te = O(Te, be), Ji !== 4 && (Ji = 2), px === null ? px = [
                            V
                        ] : px.push(V), V = re;
                        do {
                            switch(V.tag){
                                case 3:
                                    V.flags |= 65536, h &= -h, V.lanes |= h;
                                    var ze = ke(V, Te, h);
                                    Tu(V, ze);
                                    break e;
                                case 1:
                                    be = Te;
                                    var Ae = V.type, qe = V.stateNode;
                                    if (!(V.flags & 128) && (typeof Ae.getDerivedStateFromError == "function" || qe !== null && typeof qe.componentDidCatch == "function" && (Jd === null || !Jd.has(qe)))) {
                                        V.flags |= 65536, h &= -h, V.lanes |= h;
                                        var xt = tt(V, be, h);
                                        Tu(V, xt);
                                        break e;
                                    }
                            }
                            V = V.return;
                        }while (V !== null);
                    }
                    _L(w);
                } catch (Kt) {
                    h = Kt, Di === w && w !== null && (Di = w = w.return);
                    continue;
                }
                break;
            }while (!0);
        }
        function bL() {
            var d = o_.current;
            return o_.current = fg, d === null ? fg : d;
        }
        function UC() {
            (Ji === 0 || Ji === 3 || Ji === 2) && (Ji = 4), ls === null || !($h & 268435455) && !(a_ & 268435455) || tf(ls, Ss);
        }
        function h_(d, h) {
            var w = er;
            er |= 2;
            var I = bL();
            (ls !== d || Ss !== h) && (ku = null, Xh(d, h));
            do try {
                r9();
                break;
            } catch (F) {
                xL(d, F);
            }
            while (!0);
            if (Mu(), er = w, o_.current = I, Di !== null) throw Error(n(261));
            return ls = null, Ss = 0, Ji;
        }
        function r9() {
            for(; Di !== null;)wL(Di);
        }
        function i9() {
            for(; Di !== null && !Oe();)wL(Di);
        }
        function wL(d) {
            var h = ML(d.alternate, d, wa);
            d.memoizedProps = d.pendingProps, h === null ? _L(d) : Di = h, NC.current = null;
        }
        function _L(d) {
            var h = d;
            do {
                var w = h.alternate;
                if (d = h.return, h.flags & 32768) {
                    if (w = Z8(w, h), w !== null) {
                        w.flags &= 32767, Di = w;
                        return;
                    }
                    if (d !== null) d.flags |= 32768, d.subtreeFlags = 0, d.deletions = null;
                    else {
                        Ji = 6, Di = null;
                        return;
                    }
                } else if (w = Y8(w, h, wa), w !== null) {
                    Di = w;
                    return;
                }
                if (h = h.sibling, h !== null) {
                    Di = h;
                    return;
                }
                Di = h = d;
            }while (h !== null);
            Ji === 0 && (Ji = 5);
        }
        function Kh(d, h, w) {
            var I = qn, F = Za.transition;
            try {
                Za.transition = null, qn = 1, s9(d, h, w, I);
            } finally{
                Za.transition = F, qn = I;
            }
            return null;
        }
        function s9(d, h, w, I) {
            do yg();
            while (Qd !== null);
            if (er & 6) throw Error(n(327));
            w = d.finishedWork;
            var F = d.finishedLanes;
            if (w === null) return null;
            if (d.finishedWork = null, d.finishedLanes = 0, w === d.current) throw Error(n(177));
            d.callbackNode = null, d.callbackPriority = 0;
            var V = w.lanes | w.childLanes;
            if (Hi(d, V), d === ls && (Di = ls = null, Ss = 0), !(w.subtreeFlags & 2064) && !(w.flags & 2064) || c_ || (c_ = !0, TL(Ct, function() {
                return yg(), null;
            })), V = (w.flags & 15990) !== 0, w.subtreeFlags & 15990 || V) {
                V = Za.transition, Za.transition = null;
                var re = qn;
                qn = 1;
                var be = er;
                er |= 4, NC.current = null, Q8(d, w), fL(w, d), Pi(Uv), ko = !!Vd, Uv = Vd = null, d.current = w, e9(w), Ge(), er = be, qn = re, Za.transition = V;
            } else d.current = w;
            if (c_ && (c_ = !1, Qd = d, u_ = F), V = d.pendingLanes, V === 0 && (Jd = null), Wt(w.stateNode), Wo(d, je()), h !== null) for(I = d.onRecoverableError, w = 0; w < h.length; w++)F = h[w], I(F.value, {
                componentStack: F.stack,
                digest: F.digest
            });
            if (l_) throw l_ = !1, d = OC, OC = null, d;
            return u_ & 1 && d.tag !== 0 && yg(), V = d.pendingLanes, V & 1 ? d === LC ? mx++ : (mx = 0, LC = d) : mx = 0, Ga(), null;
        }
        function yg() {
            if (Qd !== null) {
                var d = Ns(u_), h = Za.transition, w = qn;
                try {
                    if (Za.transition = null, qn = 16 > d ? 16 : d, Qd === null) var I = !1;
                    else {
                        if (d = Qd, Qd = null, u_ = 0, er & 6) throw Error(n(331));
                        var F = er;
                        for(er |= 4, Vt = d.current; Vt !== null;){
                            var V = Vt, re = V.child;
                            if (Vt.flags & 16) {
                                var be = V.deletions;
                                if (be !== null) {
                                    for(var Te = 0; Te < be.length; Te++){
                                        var Ke = be[Te];
                                        for(Vt = Ke; Vt !== null;){
                                            var ft = Vt;
                                            switch(ft.tag){
                                                case 0:
                                                case 11:
                                                case 15:
                                                    fx(8, ft, V);
                                            }
                                            var mt = ft.child;
                                            if (mt !== null) mt.return = ft, Vt = mt;
                                            else for(; Vt !== null;){
                                                ft = Vt;
                                                var ut = ft.sibling, kt = ft.return;
                                                if (aL(ft), ft === Ke) {
                                                    Vt = null;
                                                    break;
                                                }
                                                if (ut !== null) {
                                                    ut.return = kt, Vt = ut;
                                                    break;
                                                }
                                                Vt = kt;
                                            }
                                        }
                                    }
                                    var qt = V.alternate;
                                    if (qt !== null) {
                                        var Ht = qt.child;
                                        if (Ht !== null) {
                                            qt.child = null;
                                            do {
                                                var wi = Ht.sibling;
                                                Ht.sibling = null, Ht = wi;
                                            }while (Ht !== null);
                                        }
                                    }
                                    Vt = V;
                                }
                            }
                            if (V.subtreeFlags & 2064 && re !== null) re.return = V, Vt = re;
                            else e: for(; Vt !== null;){
                                if (V = Vt, V.flags & 2048) switch(V.tag){
                                    case 0:
                                    case 11:
                                    case 15:
                                        fx(9, V, V.return);
                                }
                                var ze = V.sibling;
                                if (ze !== null) {
                                    ze.return = V.return, Vt = ze;
                                    break e;
                                }
                                Vt = V.return;
                            }
                        }
                        var Ae = d.current;
                        for(Vt = Ae; Vt !== null;){
                            re = Vt;
                            var qe = re.child;
                            if (re.subtreeFlags & 2064 && qe !== null) qe.return = re, Vt = qe;
                            else e: for(re = Ae; Vt !== null;){
                                if (be = Vt, be.flags & 2048) try {
                                    switch(be.tag){
                                        case 0:
                                        case 11:
                                        case 15:
                                            s_(9, be);
                                    }
                                } catch (Kt) {
                                    ai(be, be.return, Kt);
                                }
                                if (be === re) {
                                    Vt = null;
                                    break e;
                                }
                                var xt = be.sibling;
                                if (xt !== null) {
                                    xt.return = be.return, Vt = xt;
                                    break e;
                                }
                                Vt = be.return;
                            }
                        }
                        if (er = F, Ga(), yt && typeof yt.onPostCommitFiberRoot == "function") try {
                            yt.onPostCommitFiberRoot(Xt, d);
                        } catch  {}
                        I = !0;
                    }
                    return I;
                } finally{
                    qn = w, Za.transition = h;
                }
            }
            return !1;
        }
        function SL(d, h, w) {
            h = O(w, h), h = ke(d, h, 1), d = Rr(d, h, 1), h = yo(), d !== null && (Ai(d, 1, h), Wo(d, h));
        }
        function ai(d, h, w) {
            if (d.tag === 3) SL(d, d, w);
            else for(; h !== null;){
                if (h.tag === 3) {
                    SL(h, d, w);
                    break;
                } else if (h.tag === 1) {
                    var I = h.stateNode;
                    if (typeof h.type.getDerivedStateFromError == "function" || typeof I.componentDidCatch == "function" && (Jd === null || !Jd.has(I))) {
                        d = O(w, d), d = tt(h, d, 1), h = Rr(h, d, 1), d = yo(), h !== null && (Ai(h, 1, d), Wo(h, d));
                        break;
                    }
                }
                h = h.return;
            }
        }
        function o9(d, h, w) {
            var I = d.pingCache;
            I !== null && I.delete(h), h = yo(), d.pingedLanes |= d.suspendedLanes & w, ls === d && (Ss & w) === w && (Ji === 4 || Ji === 3 && (Ss & 130023424) === Ss && 500 > je() - kC ? Xh(d, 0) : PC |= w), Wo(d, h);
        }
        function EL(d, h) {
            h === 0 && (d.mode & 1 ? (h = Un, Un <<= 1, !(Un & 130023424) && (Un = 4194304)) : h = 1);
            var w = yo();
            d = ya(d, h), d !== null && (Ai(d, h, w), Wo(d, w));
        }
        function a9(d) {
            var h = d.memoizedState, w = 0;
            h !== null && (w = h.retryLane), EL(d, w);
        }
        function l9(d, h) {
            var w = 0;
            switch(d.tag){
                case 13:
                    var I = d.stateNode, F = d.memoizedState;
                    F !== null && (w = F.retryLane);
                    break;
                case 19:
                    I = d.stateNode;
                    break;
                default:
                    throw Error(n(314));
            }
            I !== null && I.delete(h), EL(d, w);
        }
        var ML;
        ML = function(d, h, w) {
            if (d !== null) if (d.memoizedProps !== h.pendingProps || vs.current) Cn = !0;
            else {
                if (!(d.lanes & w) && !(h.flags & 128)) return Cn = !1, K8(d, h, w);
                Cn = !!(d.flags & 131072);
            }
            else Cn = !1, _r && h.flags & 1048576 && Xv(h, ng, h.index);
            switch(h.lanes = 0, h.tag){
                case 2:
                    var I = h.type;
                    r_(d, h), d = h.pendingProps;
                    var F = vu(h, Gi.current);
                    _c(h, w), F = Uh(null, h, I, d, F, w);
                    var V = nx();
                    return h.flags |= 1, typeof F == "object" && F !== null && typeof F.render == "function" && F.$$typeof === void 0 ? (h.tag = 1, h.memoizedState = null, h.updateQueue = null, ss(I) ? (V = !0, xu(h)) : V = !1, h.memoizedState = F.state !== null && F.state !== void 0 ? F.state : null, En(h), F.updater = hg, h.stateNode = F, F._reactInternals = h, C(h, I, d, w), h = wn(null, h, I, !0, V, w)) : (h.tag = 0, _r && V && Kv(h), It(null, h, F, w), h = h.child), h;
                case 16:
                    I = h.elementType;
                    e: {
                        switch(r_(d, h), d = h.pendingProps, F = I._init, I = F(I._payload), h.type = I, F = h.tag = u9(I), d = zo(I, d), F){
                            case 0:
                                h = Et(null, h, I, d, w);
                                break e;
                            case 1:
                                h = $t(null, h, I, d, w);
                                break e;
                            case 11:
                                h = Zi(null, h, I, d, w);
                                break e;
                            case 14:
                                h = go(null, h, I, zo(I.type, d), w);
                                break e;
                        }
                        throw Error(n(306, I, ""));
                    }
                    return h;
                case 0:
                    return I = h.type, F = h.pendingProps, F = h.elementType === I ? F : zo(I, F), Et(d, h, I, F, w);
                case 1:
                    return I = h.type, F = h.pendingProps, F = h.elementType === I ? F : zo(I, F), $t(d, h, I, F, w);
                case 3:
                    e: {
                        if (gn(h), d === null) throw Error(n(387));
                        I = h.pendingProps, V = h.memoizedState, F = V.element, ei(d, h), qr(h, I, null, w);
                        var re = h.memoizedState;
                        if (I = re.element, V.isDehydrated) if (V = {
                            element: I,
                            isDehydrated: !1,
                            cache: re.cache,
                            pendingSuspenseBoundaries: re.pendingSuspenseBoundaries,
                            transitions: re.transitions
                        }, h.updateQueue.baseState = V, h.memoizedState = V, h.flags & 256) {
                            F = O(Error(n(423)), h), h = Xn(d, h, I, w, F);
                            break e;
                        } else if (I !== F) {
                            F = O(Error(n(424)), h), h = Xn(d, h, I, w, F);
                            break e;
                        } else for(bs = _l(h.stateNode.containerInfo.firstChild), Xi = h, _r = !0, Uo = null, w = Oh(h, null, I, w), h.child = w; w;)w.flags = w.flags & -3 | 4096, w = w.sibling;
                        else {
                            if (wc(), I === F) {
                                h = Pu(d, h, w);
                                break e;
                            }
                            It(d, h, I, w);
                        }
                        h = h.child;
                    }
                    return h;
                case 5:
                    return Iu(h), d === null && ig(h), I = h.type, F = h.pendingProps, V = d !== null ? d.memoizedProps : null, re = F.children, zv(I, F) ? re = null : V !== null && zv(I, V) && (h.flags |= 32), Qe(d, h), It(d, h, re, w), h.child;
                case 6:
                    return d === null && ig(h), null;
                case 13:
                    return Ol(d, h, w);
                case 4:
                    return jh(h, h.stateNode.containerInfo), I = h.pendingProps, d === null ? h.child = _u(h, null, I, w) : It(d, h, I, w), h.child;
                case 11:
                    return I = h.type, F = h.pendingProps, F = h.elementType === I ? F : zo(I, F), Zi(d, h, I, F, w);
                case 7:
                    return It(d, h, h.pendingProps, w), h.child;
                case 8:
                    return It(d, h, h.pendingProps.children, w), h.child;
                case 12:
                    return It(d, h, h.pendingProps.children, w), h.child;
                case 10:
                    e: {
                        if (I = h.type._context, F = h.pendingProps, V = h.memoizedProps, re = F.value, fr(Su, I._currentValue), I._currentValue = re, V !== null) if (lo(V.value, re)) {
                            if (V.children === F.children && !vs.current) {
                                h = Pu(d, h, w);
                                break e;
                            }
                        } else for(V = h.child, V !== null && (V.return = h); V !== null;){
                            var be = V.dependencies;
                            if (be !== null) {
                                re = V.child;
                                for(var Te = be.firstContext; Te !== null;){
                                    if (Te.context === I) {
                                        if (V.tag === 1) {
                                            Te = cr(-1, w & -w), Te.tag = 2;
                                            var Ke = V.updateQueue;
                                            if (Ke !== null) {
                                                Ke = Ke.shared;
                                                var ft = Ke.pending;
                                                ft === null ? Te.next = Te : (Te.next = ft.next, ft.next = Te), Ke.pending = Te;
                                            }
                                        }
                                        V.lanes |= w, Te = V.alternate, Te !== null && (Te.lanes |= w), Dh(V.return, w, h), be.lanes |= w;
                                        break;
                                    }
                                    Te = Te.next;
                                }
                            } else if (V.tag === 10) re = V.type === h.type ? null : V.child;
                            else if (V.tag === 18) {
                                if (re = V.return, re === null) throw Error(n(341));
                                re.lanes |= w, be = re.alternate, be !== null && (be.lanes |= w), Dh(re, w, h), re = V.sibling;
                            } else re = V.child;
                            if (re !== null) re.return = V;
                            else for(re = V; re !== null;){
                                if (re === h) {
                                    re = null;
                                    break;
                                }
                                if (V = re.sibling, V !== null) {
                                    V.return = re.return, re = V;
                                    break;
                                }
                                re = re.return;
                            }
                            V = re;
                        }
                        It(d, h, F.children, w), h = h.child;
                    }
                    return h;
                case 9:
                    return F = h.type, I = h.pendingProps.children, _c(h, w), F = fo(F), I = I(F), h.flags |= 1, It(d, h, I, w), h.child;
                case 14:
                    return I = h.type, F = zo(I, h.pendingProps), F = zo(I.type, F), go(d, h, I, F, w);
                case 15:
                    return He(d, h, h.type, h.pendingProps, w);
                case 17:
                    return I = h.type, F = h.pendingProps, F = h.elementType === I ? F : zo(I, F), r_(d, h), h.tag = 1, ss(I) ? (d = !0, xu(h)) : d = !1, _c(h, w), m(h, I, F), C(h, I, F, w), wn(null, h, I, !0, d, w);
                case 19:
                    return nL(d, h, w);
                case 22:
                    return De(d, h, w);
            }
            throw Error(n(156, h.tag));
        };
        function TL(d, h) {
            return Cd(d, h);
        }
        function c9(d, h, w, I) {
            this.tag = d, this.key = w, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = h, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = I, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
        }
        function Ja(d, h, w, I) {
            return new c9(d, h, w, I);
        }
        function zC(d) {
            return d = d.prototype, !(!d || !d.isReactComponent);
        }
        function u9(d) {
            if (typeof d == "function") return zC(d) ? 1 : 0;
            if (d != null) {
                if (d = d.$$typeof, d === B) return 11;
                if (d === K) return 14;
            }
            return 2;
        }
        function nf(d, h) {
            var w = d.alternate;
            return w === null ? (w = Ja(d.tag, h, d.key, d.mode), w.elementType = d.elementType, w.type = d.type, w.stateNode = d.stateNode, w.alternate = d, d.alternate = w) : (w.pendingProps = h, w.type = d.type, w.flags = 0, w.subtreeFlags = 0, w.deletions = null), w.flags = d.flags & 14680064, w.childLanes = d.childLanes, w.lanes = d.lanes, w.child = d.child, w.memoizedProps = d.memoizedProps, w.memoizedState = d.memoizedState, w.updateQueue = d.updateQueue, h = d.dependencies, w.dependencies = h === null ? null : {
                lanes: h.lanes,
                firstContext: h.firstContext
            }, w.sibling = d.sibling, w.index = d.index, w.ref = d.ref, w;
        }
        function p_(d, h, w, I, F, V) {
            var re = 2;
            if (I = d, typeof d == "function") zC(d) && (re = 1);
            else if (typeof d == "string") re = 5;
            else e: switch(d){
                case D:
                    return Yh(w.children, F, V, h);
                case L:
                    re = 8, F |= 8;
                    break;
                case R:
                    return d = Ja(12, w, h, F | 2), d.elementType = R, d.lanes = V, d;
                case U:
                    return d = Ja(13, w, h, F), d.elementType = U, d.lanes = V, d;
                case j:
                    return d = Ja(19, w, h, F), d.elementType = j, d.lanes = V, d;
                case te:
                    return m_(w, F, V, h);
                default:
                    if (typeof d == "object" && d !== null) switch(d.$$typeof){
                        case A:
                            re = 10;
                            break e;
                        case P:
                            re = 9;
                            break e;
                        case B:
                            re = 11;
                            break e;
                        case K:
                            re = 14;
                            break e;
                        case q:
                            re = 16, I = null;
                            break e;
                    }
                    throw Error(n(130, d == null ? d : typeof d, ""));
            }
            return h = Ja(re, w, h, F), h.elementType = d, h.type = I, h.lanes = V, h;
        }
        function Yh(d, h, w, I) {
            return d = Ja(7, d, I, h), d.lanes = w, d;
        }
        function m_(d, h, w, I) {
            return d = Ja(22, d, I, h), d.elementType = te, d.lanes = w, d.stateNode = {
                isHidden: !1
            }, d;
        }
        function VC(d, h, w) {
            return d = Ja(6, d, null, h), d.lanes = w, d;
        }
        function WC(d, h, w) {
            return h = Ja(4, d.children !== null ? d.children : [], d.key, h), h.lanes = w, h.stateNode = {
                containerInfo: d.containerInfo,
                pendingChildren: null,
                implementation: d.implementation
            }, h;
        }
        function d9(d, h, w, I, F) {
            this.tag = h, this.containerInfo = d, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = is(0), this.expirationTimes = is(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = is(0), this.identifierPrefix = I, this.onRecoverableError = F, this.mutableSourceEagerHydrationData = null;
        }
        function qC(d, h, w, I, F, V, re, be, Te) {
            return d = new d9(d, h, w, be, Te), h === 1 ? (h = 1, V === !0 && (h |= 8)) : h = 0, V = Ja(3, null, null, h), d.current = V, V.stateNode = d, V.memoizedState = {
                element: I,
                isDehydrated: w,
                cache: null,
                transitions: null,
                pendingSuspenseBoundaries: null
            }, En(V), d;
        }
        function f9(d, h, w) {
            var I = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
            return {
                $$typeof: N,
                key: I == null ? null : "" + I,
                children: d,
                containerInfo: h,
                implementation: w
            };
        }
        function CL(d) {
            if (!d) return El;
            d = d._reactInternals;
            e: {
                if (so(d) !== d || d.tag !== 1) throw Error(n(170));
                var h = d;
                do {
                    switch(h.tag){
                        case 3:
                            h = h.stateNode.context;
                            break e;
                        case 1:
                            if (ss(h.type)) {
                                h = h.stateNode.__reactInternalMemoizedMergedChildContext;
                                break e;
                            }
                    }
                    h = h.return;
                }while (h !== null);
                throw Error(n(171));
            }
            if (d.tag === 1) {
                var w = d.type;
                if (ss(w)) return Rh(d, w, h);
            }
            return h;
        }
        function IL(d, h, w, I, F, V, re, be, Te) {
            return d = qC(w, I, !0, d, F, V, re, be, Te), d.context = CL(null), w = d.current, I = yo(), F = ef(w), V = cr(I, F), V.callback = h ?? null, Rr(w, V, F), d.current.lanes = F, Ai(d, F, I), Wo(d, I), d;
        }
        function g_(d, h, w, I) {
            var F = h.current, V = yo(), re = ef(F);
            return w = CL(w), h.context === null ? h.context = w : h.pendingContext = w, h = cr(V, re), h.payload = {
                element: d
            }, I = I === void 0 ? null : I, I !== null && (h.callback = I), d = Rr(F, h, re), d !== null && (Fl(d, F, re, V), os(d, F, re)), re;
        }
        function y_(d) {
            if (d = d.current, !d.child) return null;
            switch(d.child.tag){
                case 5:
                    return d.child.stateNode;
                default:
                    return d.child.stateNode;
            }
        }
        function RL(d, h) {
            if (d = d.memoizedState, d !== null && d.dehydrated !== null) {
                var w = d.retryLane;
                d.retryLane = w !== 0 && w < h ? w : h;
            }
        }
        function HC(d, h) {
            RL(d, h), (d = d.alternate) && RL(d, h);
        }
        function h9() {
            return null;
        }
        var AL = typeof reportError == "function" ? reportError : function(d) {
            console.error(d);
        };
        function $C(d) {
            this._internalRoot = d;
        }
        v_.prototype.render = $C.prototype.render = function(d) {
            var h = this._internalRoot;
            if (h === null) throw Error(n(409));
            g_(d, h, null, null);
        }, v_.prototype.unmount = $C.prototype.unmount = function() {
            var d = this._internalRoot;
            if (d !== null) {
                this._internalRoot = null;
                var h = d.containerInfo;
                Gh(function() {
                    g_(null, d, null, null);
                }), h[uo] = null;
            }
        };
        function v_(d) {
            this._internalRoot = d;
        }
        v_.prototype.unstable_scheduleHydration = function(d) {
            if (d) {
                var h = wm();
                d = {
                    blockedOn: null,
                    target: d,
                    priority: h
                };
                for(var w = 0; w < hc.length && h !== 0 && h < hc[w].priority; w++);
                hc.splice(w, 0, d), w === 0 && Em(d);
            }
        };
        function GC(d) {
            return !(!d || d.nodeType !== 1 && d.nodeType !== 9 && d.nodeType !== 11);
        }
        function x_(d) {
            return !(!d || d.nodeType !== 1 && d.nodeType !== 9 && d.nodeType !== 11 && (d.nodeType !== 8 || d.nodeValue !== " react-mount-point-unstable "));
        }
        function NL() {}
        function p9(d, h, w, I, F) {
            if (F) {
                if (typeof I == "function") {
                    var V = I;
                    I = function() {
                        var Ke = y_(re);
                        V.call(Ke);
                    };
                }
                var re = IL(h, I, d, 0, null, !1, !1, "", NL);
                return d._reactRootContainer = re, d[uo] = re.current, Ud(d.nodeType === 8 ? d.parentNode : d), Gh(), re;
            }
            for(; F = d.lastChild;)d.removeChild(F);
            if (typeof I == "function") {
                var be = I;
                I = function() {
                    var Ke = y_(Te);
                    be.call(Ke);
                };
            }
            var Te = qC(d, 0, !1, null, null, !1, !1, "", NL);
            return d._reactRootContainer = Te, d[uo] = Te.current, Ud(d.nodeType === 8 ? d.parentNode : d), Gh(function() {
                g_(h, Te, w, I);
            }), Te;
        }
        function b_(d, h, w, I, F) {
            var V = w._reactRootContainer;
            if (V) {
                var re = V;
                if (typeof F == "function") {
                    var be = F;
                    F = function() {
                        var Te = y_(re);
                        be.call(Te);
                    };
                }
                g_(h, re, d, F);
            } else re = p9(w, h, d, F, I);
            return y_(re);
        }
        fh = function(d) {
            switch(d.tag){
                case 3:
                    var h = d.stateNode;
                    if (h.current.memoizedState.isDehydrated) {
                        var w = Sn(h.pendingLanes);
                        w !== 0 && (Jr(h, w | 1), Wo(h, je()), !(er & 6) && (gg = je() + 500, Ga()));
                    }
                    break;
                case 13:
                    Gh(function() {
                        var I = ya(d, 1);
                        if (I !== null) {
                            var F = yo();
                            Fl(I, d, 1, F);
                        }
                    }), HC(d, 1);
            }
        }, Sv = function(d) {
            if (d.tag === 13) {
                var h = ya(d, 134217728);
                if (h !== null) {
                    var w = yo();
                    Fl(h, d, 134217728, w);
                }
                HC(d, 134217728);
            }
        }, Aw = function(d) {
            if (d.tag === 13) {
                var h = ef(d), w = ya(d, h);
                if (w !== null) {
                    var I = yo();
                    Fl(w, d, h, I);
                }
                HC(d, h);
            }
        }, wm = function() {
            return qn;
        }, _m = function(d, h) {
            var w = qn;
            try {
                return qn = d, h();
            } finally{
                qn = w;
            }
        }, lt = function(d, h, w) {
            switch(h){
                case "input":
                    if (it(d, w), h = w.name, w.type === "radio" && h != null) {
                        for(w = d; w.parentNode;)w = w.parentNode;
                        for(w = w.querySelectorAll("input[name=" + JSON.stringify("" + h) + '][type="radio"]'), h = 0; h < w.length; h++){
                            var I = w[h];
                            if (I !== d && I.form === d.form) {
                                var F = Qm(I);
                                if (!F) throw Error(n(90));
                                we(I), it(I, F);
                            }
                        }
                    }
                    break;
                case "textarea":
                    pe(d, w);
                    break;
                case "select":
                    h = w.value, h != null && $(d, !!w.multiple, h, !1);
            }
        }, Nt = jC, Zt = Gh;
        var m9 = {
            usingClientEntryPoint: !1,
            Events: [
                Sl,
                Qr,
                Qm,
                rt,
                pt,
                jC
            ]
        }, gx = {
            findFiberByHostInstance: bc,
            bundleType: 0,
            version: "18.3.1",
            rendererPackageName: "react-dom"
        }, g9 = {
            bundleType: gx.bundleType,
            version: gx.version,
            rendererPackageName: gx.rendererPackageName,
            rendererConfig: gx.rendererConfig,
            overrideHookState: null,
            overrideHookStateDeletePath: null,
            overrideHookStateRenamePath: null,
            overrideProps: null,
            overridePropsDeletePath: null,
            overridePropsRenamePath: null,
            setErrorHandler: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: T.ReactCurrentDispatcher,
            findHostInstanceByFiber: function(d) {
                return d = Md(d), d === null ? null : d.stateNode;
            },
            findFiberByHostInstance: gx.findFiberByHostInstance || h9,
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null,
            reconcilerVersion: "18.3.1-next-f1338f8080-20240426"
        };
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
            var w_ = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (!w_.isDisabled && w_.supportsFiber) try {
                Xt = w_.inject(g9), yt = w_;
            } catch  {}
        }
        return qo.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = m9, qo.createPortal = function(d, h) {
            var w = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
            if (!GC(h)) throw Error(n(200));
            return f9(d, h, null, w);
        }, qo.createRoot = function(d, h) {
            if (!GC(d)) throw Error(n(299));
            var w = !1, I = "", F = AL;
            return h != null && (h.unstable_strictMode === !0 && (w = !0), h.identifierPrefix !== void 0 && (I = h.identifierPrefix), h.onRecoverableError !== void 0 && (F = h.onRecoverableError)), h = qC(d, 1, !1, null, null, w, !1, I, F), d[uo] = h.current, Ud(d.nodeType === 8 ? d.parentNode : d), new $C(h);
        }, qo.findDOMNode = function(d) {
            if (d == null) return null;
            if (d.nodeType === 1) return d;
            var h = d._reactInternals;
            if (h === void 0) throw typeof d.render == "function" ? Error(n(188)) : (d = Object.keys(d).join(","), Error(n(268, d)));
            return d = Md(h), d = d === null ? null : d.stateNode, d;
        }, qo.flushSync = function(d) {
            return Gh(d);
        }, qo.hydrate = function(d, h, w) {
            if (!x_(h)) throw Error(n(200));
            return b_(null, d, h, !0, w);
        }, qo.hydrateRoot = function(d, h, w) {
            if (!GC(d)) throw Error(n(405));
            var I = w != null && w.hydratedSources || null, F = !1, V = "", re = AL;
            if (w != null && (w.unstable_strictMode === !0 && (F = !0), w.identifierPrefix !== void 0 && (V = w.identifierPrefix), w.onRecoverableError !== void 0 && (re = w.onRecoverableError)), h = IL(h, null, d, 1, w ?? null, F, !1, V, re), d[uo] = h.current, Ud(d), I) for(d = 0; d < I.length; d++)w = I[d], F = w._getVersion, F = F(w._source), h.mutableSourceEagerHydrationData == null ? h.mutableSourceEagerHydrationData = [
                w,
                F
            ] : h.mutableSourceEagerHydrationData.push(w, F);
            return new v_(h);
        }, qo.render = function(d, h, w) {
            if (!x_(h)) throw Error(n(200));
            return b_(null, d, h, !1, w);
        }, qo.unmountComponentAtNode = function(d) {
            if (!x_(d)) throw Error(n(40));
            return d._reactRootContainer ? (Gh(function() {
                b_(null, null, d, !1, function() {
                    d._reactRootContainer = null, d[uo] = null;
                });
            }), !0) : !1;
        }, qo.unstable_batchedUpdates = jC, qo.unstable_renderSubtreeIntoContainer = function(d, h, w, I) {
            if (!x_(w)) throw Error(n(200));
            if (d == null || d._reactInternals === void 0) throw Error(n(38));
            return b_(d, h, w, !1, I);
        }, qo.version = "18.3.1-next-f1338f8080-20240426", qo;
    }
    var oD;
    function tV() {
        if (oD) return oI.exports;
        oD = 1;
        function t() {
            if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) try {
                __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t);
            } catch (e) {
                console.error(e);
            }
        }
        return t(), oI.exports = Z7(), oI.exports;
    }
    var WM = tV();
    const zx = typeof window < "u" ? X.useLayoutEffect : X.useEffect;
    function cI(t) {
        const e = X.useRef({
            value: t,
            prev: null
        }), n = e.current.value;
        return t !== n && (e.current = {
            value: t,
            prev: n
        }), e.current.prev;
    }
    function J7(t, e, n = {}, r = {}) {
        const i = X.useRef(typeof IntersectionObserver == "function"), s = X.useRef(null);
        return X.useEffect(()=>{
            if (!(!t.current || !i.current || r.disabled)) return s.current = new IntersectionObserver(([o])=>{
                e(o);
            }, n), s.current.observe(t.current), ()=>{
                var o;
                (o = s.current) == null || o.disconnect();
            };
        }, [
            e,
            n,
            r.disabled,
            t
        ]), s.current;
    }
    function Q7(t) {
        const e = X.useRef(null);
        return X.useImperativeHandle(t, ()=>e.current, []), e;
    }
    function eX(t, e) {
        const n = dl(), [r, i] = X.useState(!1), s = X.useRef(!1), o = Q7(e), { activeProps: a = ()=>({
                className: "active"
            }), inactiveProps: l = ()=>({}), activeOptions: c, to: u, preload: f, preloadDelay: p, hashScrollIntoView: g, replace: x, startTransition: S, resetScroll: _, viewTransition: b, children: M, target: E, disabled: T, style: k, className: N, onClick: D, onFocus: L, onMouseEnter: R, onMouseLeave: A, onTouchStart: P, ignoreBlocker: B, ...U } = t, { params: j, search: K, hash: q, state: te, mask: W, reloadDocument: J, ...Q } = U, Y = X.useMemo(()=>{
            try {
                return new URL(`${u}`), "external";
            } catch  {}
            return "internal";
        }, [
            u
        ]), le = $s({
            select: (oe)=>oe.location.search,
            structuralSharing: !0
        });
        t = {
            from: Vf({
                strict: !1,
                select: (oe)=>oe.pathname
            }),
            ...t
        };
        const ie = X.useMemo(()=>n.buildLocation(t), [
            n,
            t,
            le
        ]), he = X.useMemo(()=>t.reloadDocument ? !1 : f ?? n.options.defaultPreload, [
            n.options.defaultPreload,
            f,
            t.reloadDocument
        ]), ge = p ?? n.options.defaultPreloadDelay ?? 0, ve = $s({
            select: (oe)=>{
                if (c?.exact) {
                    if (!l7(oe.location.pathname, ie.pathname, n.basepath)) return !1;
                } else {
                    const $ = q1(oe.location.pathname, n.basepath).split("/");
                    if (!q1(ie.pathname, n.basepath).split("/").every((pe, me)=>pe === $[me])) return !1;
                }
                return (c?.includeSearch ?? !0) && !vy(oe.location.search, ie.search, {
                    partial: !c?.exact,
                    ignoreUndefined: !c?.explicitUndefined
                }) ? !1 : c?.includeHash ? oe.location.hash === ie.hash : !0;
            }
        }), Ee = X.useCallback(()=>{
            n.preloadRoute(t).catch((oe)=>{
                console.warn(oe), console.warn(i7);
            });
        }, [
            t,
            n
        ]), Ce = X.useCallback((oe)=>{
            oe?.isIntersecting && Ee();
        }, [
            Ee
        ]);
        if (J7(o, Ce, {
            rootMargin: "100px"
        }, {
            disabled: !!T || he !== "viewport"
        }), zx(()=>{
            s.current || !T && he === "render" && (Ee(), s.current = !0);
        }, [
            T,
            Ee,
            he
        ]), Y === "external") return {
            ...Q,
            ref: o,
            type: Y,
            href: u,
            ...M && {
                children: M
            },
            ...E && {
                target: E
            },
            ...T && {
                disabled: T
            },
            ...k && {
                style: k
            },
            ...N && {
                className: N
            },
            ...D && {
                onClick: D
            },
            ...L && {
                onFocus: L
            },
            ...R && {
                onMouseEnter: R
            },
            ...A && {
                onMouseLeave: A
            },
            ...P && {
                onTouchStart: P
            }
        };
        const Ne = (oe)=>{
            if (!T && !nX(oe) && !oe.defaultPrevented && (!E || E === "_self") && oe.button === 0) {
                oe.preventDefault(), WM.flushSync(()=>{
                    i(!0);
                });
                const $ = n.subscribe("onResolved", ()=>{
                    $(), i(!1);
                });
                return n.navigate({
                    ...t,
                    replace: x,
                    resetScroll: _,
                    hashScrollIntoView: g,
                    startTransition: S,
                    viewTransition: b,
                    ignoreBlocker: B
                });
            }
        }, Ve = (oe)=>{
            T || he && Ee();
        }, we = Ve, Me = (oe)=>{
            if (T) return;
            const $ = oe.target || {};
            if (he) {
                if ($.preloadTimeout) return;
                $.preloadTimeout = setTimeout(()=>{
                    $.preloadTimeout = null, Ee();
                }, ge);
            }
        }, se = (oe)=>{
            if (T) return;
            const $ = oe.target || {};
            $.preloadTimeout && (clearTimeout($.preloadTimeout), $.preloadTimeout = null);
        }, Ye = (oe)=>($)=>{
                var H;
                (H = $.persist) == null || H.call($), oe.filter(Boolean).forEach((fe)=>{
                    $.defaultPrevented || fe($);
                });
            }, Be = ve ? Mp(a, {}) ?? {} : {}, it = ve ? {} : Mp(l, {}), de = [
            N,
            Be.className,
            it.className
        ].filter(Boolean).join(" "), ae = {
            ...k,
            ...Be.style,
            ...it.style
        };
        return {
            ...Q,
            ...Be,
            ...it,
            href: T ? void 0 : ie.maskedLocation ? n.history.createHref(ie.maskedLocation.href) : n.history.createHref(ie.href),
            ref: o,
            onClick: Ye([
                D,
                Ne
            ]),
            onFocus: Ye([
                L,
                Ve
            ]),
            onMouseEnter: Ye([
                R,
                Me
            ]),
            onMouseLeave: Ye([
                A,
                se
            ]),
            onTouchStart: Ye([
                P,
                we
            ]),
            disabled: !!T,
            target: E,
            ...Object.keys(ae).length && {
                style: ae
            },
            ...de && {
                className: de
            },
            ...T && {
                role: "link",
                "aria-disabled": !0
            },
            ...ve && {
                "data-status": "active",
                "aria-current": "page"
            },
            ...r && {
                "data-transitioning": "transitioning"
            }
        };
    }
    function nV(t) {
        return X.forwardRef(function(n, r) {
            return v.jsx(tX, {
                ...n,
                _asChild: t,
                ref: r
            });
        });
    }
    const tX = X.forwardRef((t, e)=>{
        const { _asChild: n, ...r } = t, { type: i, ref: s, ...o } = eX(r, e), a = typeof r.children == "function" ? r.children({
            isActive: o["data-status"] === "active"
        }) : r.children;
        return typeof n > "u" && delete o.disabled, X.createElement(n || "a", {
            ...o,
            ref: s
        }, a);
    });
    function nX(t) {
        return !!(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey);
    }
    function rX() {
        const t = dl(), e = X.useRef({
            router: t,
            mounted: !1
        }), n = $s({
            select: ({ isLoading: f })=>f
        }), [r, i] = X.useState(!1), s = $s({
            select: (f)=>f.matches.some((p)=>p.status === "pending"),
            structuralSharing: !0
        }), o = cI(n), a = n || r || s, l = cI(a), c = n || s, u = cI(c);
        return t.isServer || (t.startReactTransition = (f)=>{
            i(!0), X.startTransition(()=>{
                f(), i(!1);
            });
        }), X.useEffect(()=>{
            const f = t.history.subscribe(t.load), p = t.buildLocation({
                to: t.latestLocation.pathname,
                search: !0,
                params: !0,
                hash: !0,
                state: !0,
                _includeValidateSearch: !0
            });
            return Tp(t.latestLocation.href) !== Tp(p.href) && t.commitLocation({
                ...p,
                replace: !0
            }), ()=>{
                f();
            };
        }, [
            t,
            t.history
        ]), zx(()=>{
            if (typeof window < "u" && t.clientSsr || e.current.router === t && e.current.mounted) return;
            e.current = {
                router: t,
                mounted: !0
            }, (async ()=>{
                try {
                    await t.load();
                } catch (p) {
                    console.error(p);
                }
            })();
        }, [
            t
        ]), zx(()=>{
            o && !n && t.emit({
                type: "onLoad",
                ...yy(t.state)
            });
        }, [
            o,
            t,
            n
        ]), zx(()=>{
            u && !c && t.emit({
                type: "onBeforeRouteMount",
                ...yy(t.state)
            });
        }, [
            c,
            u,
            t
        ]), zx(()=>{
            l && !a && (t.emit({
                type: "onResolved",
                ...yy(t.state)
            }), t.__store.setState((f)=>({
                    ...f,
                    status: "idle",
                    resolvedLocation: f.location
                })));
        }, [
            a,
            l,
            t
        ]), null;
    }
    function iX() {
        const t = dl(), e = t.options.defaultPendingComponent ? v.jsx(t.options.defaultPendingComponent, {}) : null, n = t.isServer || typeof document < "u" && t.clientSsr ? XS : X.Suspense, r = v.jsxs(n, {
            fallback: e,
            children: [
                v.jsx(rX, {}),
                v.jsx(sX, {})
            ]
        });
        return t.options.InnerWrap ? v.jsx(t.options.InnerWrap, {
            children: r
        }) : r;
    }
    function sX() {
        const t = $s({
            select: (n)=>{
                var r;
                return (r = n.matches[0]) == null ? void 0 : r.id;
            }
        }), e = $s({
            select: (n)=>n.loadedAt
        });
        return v.jsx(VM.Provider, {
            value: t,
            children: v.jsx(Dk, {
                getResetKey: ()=>e,
                errorComponent: zM,
                onCatch: (n)=>{
                    n.message || n.toString();
                },
                children: t ? v.jsx(eV, {
                    matchId: t
                }) : null
            })
        });
    }
    function oX() {
        const t = dl();
        return $s({
            select: (e)=>{
                var n;
                return [
                    e.location.href,
                    (n = e.resolvedLocation) == null ? void 0 : n.href,
                    e.status
                ];
            },
            structuralSharing: !0
        }), X.useCallback((e)=>{
            const { pending: n, caseSensitive: r, fuzzy: i, includeSearch: s, ...o } = e;
            return t.matchRoute(o, {
                pending: n,
                caseSensitive: r,
                fuzzy: i,
                includeSearch: s
            });
        }, [
            t
        ]);
    }
    const rV = [
        "component",
        "errorComponent",
        "pendingComponent",
        "notFoundComponent"
    ];
    function aX(t) {
        var e;
        for (const n of rV)if ((e = t.options[n]) != null && e.preload) return !0;
        return !1;
    }
    function uI(t, e) {
        if (t == null) return {};
        if ("~standard" in t) {
            const n = t["~standard"].validate(e);
            if (n instanceof Promise) throw new K1("Async validation not supported");
            if (n.issues) throw new K1(JSON.stringify(n.issues, void 0, 2), {
                cause: n
            });
            return n.value;
        }
        return "parse" in t ? t.parse(e) : typeof t == "function" ? t(e) : {};
    }
    function lX(t) {
        return new cX(t);
    }
    class cX {
        constructor(e){
            this.tempLocationKey = `${Math.round(Math.random() * 1e7)}`, this.resetNextScroll = !0, this.shouldViewTransition = void 0, this.isViewTransitionTypesSupported = void 0, this.subscribers = new Set, this.isScrollRestoring = !1, this.isScrollRestorationSetup = !1, this.startReactTransition = (n)=>n(), this.update = (n)=>{
                var r;
                n.notFoundRoute && console.warn("The notFoundRoute API is deprecated and will be removed in the next major version. See https://tanstack.com/router/v1/docs/framework/react/guide/not-found-errors#migrating-from-notfoundroute for more info.");
                const i = this.options;
                this.options = {
                    ...this.options,
                    ...n
                }, this.isServer = this.options.isServer ?? typeof document > "u", this.pathParamsDecodeCharMap = this.options.pathParamsAllowedCharacters ? new Map(this.options.pathParamsAllowedCharacters.map((s)=>[
                        encodeURIComponent(s),
                        s
                    ])) : void 0, (!this.basepath || n.basepath && n.basepath !== i.basepath) && (n.basepath === void 0 || n.basepath === "" || n.basepath === "/" ? this.basepath = "/" : this.basepath = `/${a7(n.basepath)}`), (!this.history || this.options.history && this.options.history !== this.history) && (this.history = this.options.history ?? (this.isServer ? x7({
                    initialEntries: [
                        this.basepath || "/"
                    ]
                }) : v7()), this.latestLocation = this.parseLocation()), this.options.routeTree !== this.routeTree && (this.routeTree = this.options.routeTree, this.buildRouteTree()), this.__store || (this.__store = new ZN(dX(this.latestLocation), {
                    onUpdate: ()=>{
                        this.__store.state = {
                            ...this.state,
                            cachedMatches: this.state.cachedMatches.filter((s)=>![
                                    "redirected"
                                ].includes(s.status))
                        };
                    }
                }), H7(this)), typeof window < "u" && "CSS" in window && typeof ((r = window.CSS) == null ? void 0 : r.supports) == "function" && (this.isViewTransitionTypesSupported = window.CSS.supports("selector(:active-view-transition-type(a)"));
            }, this.buildRouteTree = ()=>{
                this.routesById = {}, this.routesByPath = {};
                const n = this.options.notFoundRoute;
                n && (n.init({
                    originalIndex: 99999999999,
                    defaultSsr: this.options.defaultSsr
                }), this.routesById[n.id] = n);
                const r = (o)=>{
                    o.forEach((a, l)=>{
                        a.init({
                            originalIndex: l,
                            defaultSsr: this.options.defaultSsr
                        });
                        const c = this.routesById[a.id];
                        if (Yl(!c, `Duplicate routes found with id: ${String(a.id)}`), this.routesById[a.id] = a, !a.isRoot && a.path) {
                            const f = Tp(a.fullPath);
                            (!this.routesByPath[f] || a.fullPath.endsWith("/")) && (this.routesByPath[f] = a);
                        }
                        const u = a.children;
                        u?.length && r(u);
                    });
                };
                r([
                    this.routeTree
                ]);
                const i = [];
                Object.values(this.routesById).forEach((o, a)=>{
                    var l;
                    if (o.isRoot || !o.path) return;
                    const c = Ok(o.fullPath), u = Oy(c);
                    for(; u.length > 1 && ((l = u[0]) == null ? void 0 : l.value) === "/";)u.shift();
                    const f = u.map((p)=>p.value === "/" ? .75 : p.type === "param" ? .5 : p.type === "wildcard" ? .25 : 1);
                    i.push({
                        child: o,
                        trimmed: c,
                        parsed: u,
                        index: a,
                        scores: f
                    });
                }), this.flatRoutes = i.sort((o, a)=>{
                    const l = Math.min(o.scores.length, a.scores.length);
                    for(let c = 0; c < l; c++)if (o.scores[c] !== a.scores[c]) return a.scores[c] - o.scores[c];
                    if (o.scores.length !== a.scores.length) return a.scores.length - o.scores.length;
                    for(let c = 0; c < l; c++)if (o.parsed[c].value !== a.parsed[c].value) return o.parsed[c].value > a.parsed[c].value ? 1 : -1;
                    return o.index - a.index;
                }).map((o, a)=>(o.child.rank = a, o.child));
            }, this.subscribe = (n, r)=>{
                const i = {
                    eventType: n,
                    fn: r
                };
                return this.subscribers.add(i), ()=>{
                    this.subscribers.delete(i);
                };
            }, this.emit = (n)=>{
                this.subscribers.forEach((r)=>{
                    r.eventType === n.type && r.fn(n);
                });
            }, this.parseLocation = (n, r)=>{
                const i = ({ pathname: l, search: c, hash: u, state: f })=>{
                    const p = this.options.parseSearch(c), g = this.options.stringifySearch(p);
                    return {
                        pathname: l,
                        searchStr: g,
                        search: el(n?.search, p),
                        hash: u.split("#").reverse()[0] ?? "",
                        href: `${l}${g}${u}`,
                        state: el(n?.state, f)
                    };
                }, s = i(r ?? this.history.location), { __tempLocation: o, __tempKey: a } = s.state;
                if (o && (!a || a === this.tempLocationKey)) {
                    const l = i(o);
                    return l.state.key = s.state.key, delete l.state.__tempLocation, {
                        ...l,
                        maskedLocation: s
                    };
                }
                return s;
            }, this.resolvePathWithBase = (n, r)=>c7({
                    basepath: this.basepath,
                    base: n,
                    to: UM(r),
                    trailingSlash: this.options.trailingSlash,
                    caseSensitive: this.options.caseSensitive
                }), this.getMatchedRoutes = (n, r)=>{
                let i = {};
                const s = Tp(n.pathname), o = (u)=>E_(this.basepath, s, {
                        to: u.fullPath,
                        caseSensitive: u.options.caseSensitive ?? this.options.caseSensitive,
                        fuzzy: !0
                    });
                let a = r?.to !== void 0 ? this.routesByPath[r.to] : void 0;
                a ? i = o(a) : a = this.flatRoutes.find((u)=>{
                    const f = o(u);
                    return f ? (i = f, !0) : !1;
                });
                let l = a || this.routesById[Zo];
                const c = [
                    l
                ];
                for(; l.parentRoute;)l = l.parentRoute, c.unshift(l);
                return {
                    matchedRoutes: c,
                    routeParams: i,
                    foundRoute: a
                };
            }, this.cancelMatch = (n)=>{
                const r = this.getMatch(n);
                r && (r.abortController.abort(), clearTimeout(r.pendingTimeout));
            }, this.cancelMatches = ()=>{
                var n;
                (n = this.state.pendingMatches) == null || n.forEach((r)=>{
                    this.cancelMatch(r.id);
                });
            }, this.buildLocation = (n)=>{
                const r = (s = {}, o)=>{
                    var a, l, c, u, f, p;
                    const g = s._fromLocation ? this.matchRoutes(s._fromLocation, {
                        _buildLocation: !0
                    }) : this.state.matches, x = s.from != null ? g.find((P)=>E_(this.basepath, Tp(P.pathname), {
                            to: s.from,
                            caseSensitive: !1,
                            fuzzy: !1
                        })) : void 0, S = x?.pathname || this.latestLocation.pathname;
                    Yl(s.from == null || x != null, "Could not find match for from: " + s.from);
                    const _ = (a = this.state.pendingMatches) != null && a.length ? (l = l0(this.state.pendingMatches)) == null ? void 0 : l.search : ((c = l0(g)) == null ? void 0 : c.search) || this.latestLocation.search, b = o?.matchedRoutes.filter((P)=>g.find((B)=>B.routeId === P.id));
                    let M;
                    if (s.to) {
                        const P = x?.fullPath || this.latestLocation.pathname;
                        M = this.resolvePathWithBase(P, `${s.to}`);
                    } else {
                        const P = this.routesById[(u = b?.find((B)=>{
                            const U = S_({
                                path: B.fullPath,
                                params: o?.routeParams ?? {},
                                decodeCharMap: this.pathParamsDecodeCharMap
                            }).interpolatedPath;
                            return td([
                                this.basepath,
                                U
                            ]) === S;
                        })) == null ? void 0 : u.id];
                        M = this.resolvePathWithBase(S, P?.to ?? S);
                    }
                    const E = {
                        ...(f = l0(g)) == null ? void 0 : f.params
                    };
                    let T = (s.params ?? !0) === !0 ? E : {
                        ...E,
                        ...Mp(s.params, E)
                    };
                    Object.keys(T).length > 0 && o?.matchedRoutes.map((P)=>{
                        var B;
                        return ((B = P.options.params) == null ? void 0 : B.stringify) ?? P.options.stringifyParams;
                    }).filter(Boolean).forEach((P)=>{
                        T = {
                            ...T,
                            ...P(T)
                        };
                    }), M = S_({
                        path: M,
                        params: T ?? {},
                        leaveWildcards: !1,
                        leaveParams: n.leaveParams,
                        decodeCharMap: this.pathParamsDecodeCharMap
                    }).interpolatedPath;
                    let k = _;
                    if (n._includeValidateSearch && ((p = this.options.search) != null && p.strict)) {
                        let P = {};
                        o?.matchedRoutes.forEach((B)=>{
                            try {
                                B.options.validateSearch && (P = {
                                    ...P,
                                    ...uI(B.options.validateSearch, {
                                        ...P,
                                        ...k
                                    }) ?? {}
                                });
                            } catch  {}
                        }), k = P;
                    }
                    k = ((P)=>{
                        const B = o?.matchedRoutes.reduce((K, q)=>{
                            var te;
                            const W = [];
                            if ("search" in q.options) (te = q.options.search) != null && te.middlewares && W.push(...q.options.search.middlewares);
                            else if (q.options.preSearchFilters || q.options.postSearchFilters) {
                                const J = ({ search: Q, next: Y })=>{
                                    let le = Q;
                                    "preSearchFilters" in q.options && q.options.preSearchFilters && (le = q.options.preSearchFilters.reduce((ie, he)=>he(ie), Q));
                                    const ue = Y(le);
                                    return "postSearchFilters" in q.options && q.options.postSearchFilters ? q.options.postSearchFilters.reduce((ie, he)=>he(ie), ue) : ue;
                                };
                                W.push(J);
                            }
                            if (n._includeValidateSearch && q.options.validateSearch) {
                                const J = ({ search: Q, next: Y })=>{
                                    try {
                                        const le = Y(Q);
                                        return {
                                            ...le,
                                            ...uI(q.options.validateSearch, le) ?? {}
                                        };
                                    } catch  {}
                                };
                                W.push(J);
                            }
                            return K.concat(W);
                        }, []) ?? [], U = ({ search: K })=>s.search ? s.search === !0 ? K : Mp(s.search, K) : {};
                        B.push(U);
                        const j = (K, q)=>{
                            if (K >= B.length) return q;
                            const te = B[K];
                            return te({
                                search: q,
                                next: (J)=>j(K + 1, J)
                            });
                        };
                        return j(0, P);
                    })(k), k = el(_, k);
                    const D = this.options.stringifySearch(k), L = s.hash === !0 ? this.latestLocation.hash : s.hash ? Mp(s.hash, this.latestLocation.hash) : void 0, R = L ? `#${L}` : "";
                    let A = s.state === !0 ? this.latestLocation.state : s.state ? Mp(s.state, this.latestLocation.state) : {};
                    return A = el(this.latestLocation.state, A), {
                        pathname: M,
                        search: k,
                        searchStr: D,
                        state: A,
                        hash: L ?? "",
                        href: `${M}${D}${R}`,
                        unmaskOnReload: s.unmaskOnReload
                    };
                }, i = (s = {}, o)=>{
                    var a;
                    const l = r(s);
                    let c = o ? r(o) : void 0;
                    if (!c) {
                        let p = {};
                        const g = (a = this.options.routeMasks) == null ? void 0 : a.find((x)=>{
                            const S = E_(this.basepath, l.pathname, {
                                to: x.from,
                                caseSensitive: !1,
                                fuzzy: !1
                            });
                            return S ? (p = S, !0) : !1;
                        });
                        if (g) {
                            const { from: x, ...S } = g;
                            o = {
                                ...KN(n, [
                                    "from"
                                ]),
                                ...S,
                                params: p
                            }, c = r(o);
                        }
                    }
                    const u = this.getMatchedRoutes(l, s), f = r(s, u);
                    if (c) {
                        const p = this.getMatchedRoutes(c, o), g = r(o, p);
                        f.maskedLocation = g;
                    }
                    return f;
                };
                return n.mask ? i(n, {
                    ...KN(n, [
                        "from"
                    ]),
                    ...n.mask
                }) : i(n);
            }, this.commitLocation = ({ viewTransition: n, ignoreBlocker: r, ...i })=>{
                const s = ()=>{
                    const l = [
                        "key",
                        "__TSR_index",
                        "__hashScrollIntoViewOptions"
                    ];
                    l.forEach((u)=>{
                        i.state[u] = this.latestLocation.state[u];
                    });
                    const c = vy(i.state, this.latestLocation.state);
                    return l.forEach((u)=>{
                        delete i.state[u];
                    }), c;
                }, o = this.latestLocation.href === i.href, a = this.commitLocationPromise;
                if (this.commitLocationPromise = Xg(()=>{
                    a?.resolve();
                }), o && s()) this.load();
                else {
                    let { maskedLocation: l, hashScrollIntoView: c, ...u } = i;
                    l && (u = {
                        ...l,
                        state: {
                            ...l.state,
                            __tempKey: void 0,
                            __tempLocation: {
                                ...u,
                                search: u.searchStr,
                                state: {
                                    ...u.state,
                                    __tempKey: void 0,
                                    __tempLocation: void 0,
                                    key: void 0
                                }
                            }
                        }
                    }, (u.unmaskOnReload ?? this.options.unmaskOnReload ?? !1) && (u.state.__tempKey = this.tempLocationKey)), u.state.__hashScrollIntoViewOptions = c ?? this.options.defaultHashScrollIntoView ?? !0, this.shouldViewTransition = n, this.history[i.replace ? "replace" : "push"](u.href, u.state, {
                        ignoreBlocker: r
                    });
                }
                return this.resetNextScroll = i.resetScroll ?? !0, this.history.subscribers.size || this.load(), this.commitLocationPromise;
            }, this.buildAndCommitLocation = ({ replace: n, resetScroll: r, hashScrollIntoView: i, viewTransition: s, ignoreBlocker: o, href: a, ...l } = {})=>{
                if (a) {
                    const u = this.history.location.state.__TSR_index, f = O0(a, {
                        __TSR_index: n ? u : u + 1
                    });
                    l.to = f.pathname, l.search = this.options.parseSearch(f.search), l.hash = f.hash.slice(1);
                }
                const c = this.buildLocation({
                    ...l,
                    _includeValidateSearch: !0
                });
                return this.commitLocation({
                    ...c,
                    viewTransition: s,
                    replace: n,
                    resetScroll: r,
                    hashScrollIntoView: i,
                    ignoreBlocker: o
                });
            }, this.navigate = ({ to: n, reloadDocument: r, href: i, ...s })=>{
                if (r) {
                    if (!i) {
                        const o = this.buildLocation({
                            to: n,
                            ...s
                        });
                        i = this.history.createHref(o.href);
                    }
                    s.replace ? window.location.replace(i) : window.location.href = i;
                    return;
                }
                return this.buildAndCommitLocation({
                    ...s,
                    href: i,
                    to: n
                });
            }, this.load = async (n)=>{
                this.latestLocation = this.parseLocation(this.latestLocation);
                let r, i, s;
                for(s = new Promise((o)=>{
                    this.startReactTransition(async ()=>{
                        var a;
                        try {
                            const l = this.latestLocation, c = this.state.resolvedLocation;
                            this.cancelMatches();
                            let u;
                            nI(()=>{
                                u = this.matchRoutes(l), this.__store.setState((f)=>({
                                        ...f,
                                        status: "pending",
                                        isLoading: !0,
                                        location: l,
                                        pendingMatches: u,
                                        cachedMatches: f.cachedMatches.filter((p)=>!u.find((g)=>g.id === p.id))
                                    }));
                            }), this.state.redirect || this.emit({
                                type: "onBeforeNavigate",
                                ...yy({
                                    resolvedLocation: c,
                                    location: l
                                })
                            }), this.emit({
                                type: "onBeforeLoad",
                                ...yy({
                                    resolvedLocation: c,
                                    location: l
                                })
                            }), await this.loadMatches({
                                sync: n?.sync,
                                matches: u,
                                location: l,
                                onReady: async ()=>{
                                    this.startViewTransition(async ()=>{
                                        let f, p, g;
                                        nI(()=>{
                                            this.__store.setState((x)=>{
                                                const S = x.matches, _ = x.pendingMatches || x.matches;
                                                return f = S.filter((b)=>!_.find((M)=>M.id === b.id)), p = _.filter((b)=>!S.find((M)=>M.id === b.id)), g = S.filter((b)=>_.find((M)=>M.id === b.id)), {
                                                    ...x,
                                                    isLoading: !1,
                                                    loadedAt: Date.now(),
                                                    matches: _,
                                                    pendingMatches: void 0,
                                                    cachedMatches: [
                                                        ...x.cachedMatches,
                                                        ...f.filter((b)=>b.status !== "error")
                                                    ]
                                                };
                                            }), this.clearExpiredCache();
                                        }), [
                                            [
                                                f,
                                                "onLeave"
                                            ],
                                            [
                                                p,
                                                "onEnter"
                                            ],
                                            [
                                                g,
                                                "onStay"
                                            ]
                                        ].forEach(([x, S])=>{
                                            x.forEach((_)=>{
                                                var b, M;
                                                (M = (b = this.looseRoutesById[_.routeId].options)[S]) == null || M.call(b, _);
                                            });
                                        });
                                    });
                                }
                            });
                        } catch (l) {
                            iI(l) ? (r = l, this.isServer || this.navigate({
                                ...r,
                                replace: !0,
                                ignoreBlocker: !0
                            })) : il(l) && (i = l), this.__store.setState((c)=>({
                                    ...c,
                                    statusCode: r ? r.statusCode : i ? 404 : c.matches.some((u)=>u.status === "error") ? 500 : 200,
                                    redirect: r
                                }));
                        }
                        this.latestLoadPromise === s && ((a = this.commitLocationPromise) == null || a.resolve(), this.latestLoadPromise = void 0, this.commitLocationPromise = void 0), o();
                    });
                }), this.latestLoadPromise = s, await s; this.latestLoadPromise && s !== this.latestLoadPromise;)await this.latestLoadPromise;
                this.hasNotFoundMatch() && this.__store.setState((o)=>({
                        ...o,
                        statusCode: 404
                    }));
            }, this.startViewTransition = (n)=>{
                const r = this.shouldViewTransition ?? this.options.defaultViewTransition;
                if (delete this.shouldViewTransition, r && typeof document < "u" && "startViewTransition" in document && typeof document.startViewTransition == "function") {
                    let i;
                    typeof r == "object" && this.isViewTransitionTypesSupported ? i = {
                        update: n,
                        types: r.types
                    } : i = n, document.startViewTransition(i);
                } else n();
            }, this.updateMatch = (n, r)=>{
                var i;
                let s;
                const o = (i = this.state.pendingMatches) == null ? void 0 : i.find((u)=>u.id === n), a = this.state.matches.find((u)=>u.id === n), l = this.state.cachedMatches.find((u)=>u.id === n), c = o ? "pendingMatches" : a ? "matches" : l ? "cachedMatches" : "";
                return c && this.__store.setState((u)=>{
                    var f;
                    return {
                        ...u,
                        [c]: (f = u[c]) == null ? void 0 : f.map((p)=>p.id === n ? s = r(p) : p)
                    };
                }), s;
            }, this.getMatch = (n)=>[
                    ...this.state.cachedMatches,
                    ...this.state.pendingMatches ?? [],
                    ...this.state.matches
                ].find((r)=>r.id === n), this.loadMatches = async ({ location: n, matches: r, preload: i, onReady: s, updateMatch: o = this.updateMatch, sync: a })=>{
                let l, c = !1;
                const u = async ()=>{
                    c || (c = !0, await s?.());
                }, f = (g)=>!!(i && !this.state.matches.find((x)=>x.id === g));
                !this.isServer && !this.state.matches.length && u();
                const p = (g, x)=>{
                    var S, _, b, M;
                    if (iI(x) && !x.reloadDocument) throw x;
                    if (hp(x) || il(x)) {
                        if (o(g.id, (E)=>({
                                ...E,
                                status: hp(x) ? "redirected" : il(x) ? "notFound" : "error",
                                isFetching: !1,
                                error: x,
                                beforeLoadPromise: void 0,
                                loaderPromise: void 0
                            })), x.routeId || (x.routeId = g.routeId), (S = g.beforeLoadPromise) == null || S.resolve(), (_ = g.loaderPromise) == null || _.resolve(), (b = g.loadPromise) == null || b.resolve(), hp(x)) throw c = !0, x = this.resolveRedirect({
                            ...x,
                            _fromLocation: n
                        }), x;
                        if (il(x)) throw this._handleNotFound(r, x, {
                            updateMatch: o
                        }), (M = this.serverSsr) == null || M.onMatchSettled({
                            router: this,
                            match: this.getMatch(g.id)
                        }), x;
                    }
                };
                try {
                    await new Promise((g, x)=>{
                        (async ()=>{
                            var S, _, b;
                            try {
                                const M = (k, N, D)=>{
                                    var L, R;
                                    const { id: A, routeId: P } = r[k], B = this.looseRoutesById[P];
                                    if (N instanceof Promise) throw N;
                                    N.routerCode = D, l = l ?? k, p(this.getMatch(A), N);
                                    try {
                                        (R = (L = B.options).onError) == null || R.call(L, N);
                                    } catch (U) {
                                        N = U, p(this.getMatch(A), N);
                                    }
                                    o(A, (U)=>{
                                        var j, K;
                                        return (j = U.beforeLoadPromise) == null || j.resolve(), (K = U.loadPromise) == null || K.resolve(), {
                                            ...U,
                                            error: N,
                                            status: "error",
                                            isFetching: !1,
                                            updatedAt: Date.now(),
                                            abortController: new AbortController,
                                            beforeLoadPromise: void 0
                                        };
                                    });
                                };
                                for (const [k, { id: N, routeId: D }] of r.entries()){
                                    const L = this.getMatch(N), R = (S = r[k - 1]) == null ? void 0 : S.id, A = this.looseRoutesById[D], P = A.options.pendingMs ?? this.options.defaultPendingMs, B = !!(s && !this.isServer && !f(N) && (A.options.loader || A.options.beforeLoad) && typeof P == "number" && P !== 1 / 0 && (A.options.pendingComponent ?? this.options.defaultPendingComponent));
                                    let U = !0;
                                    if ((L.beforeLoadPromise || L.loaderPromise) && (B && setTimeout(()=>{
                                        try {
                                            u();
                                        } catch  {}
                                    }, P), await L.beforeLoadPromise, U = this.getMatch(N).status !== "success"), U) {
                                        try {
                                            o(N, (ge)=>({
                                                    ...ge,
                                                    loadPromise: Xg(()=>{
                                                        var ve;
                                                        (ve = ge.loadPromise) == null || ve.resolve();
                                                    }),
                                                    beforeLoadPromise: Xg()
                                                }));
                                            const j = new AbortController;
                                            let K;
                                            B && (K = setTimeout(()=>{
                                                try {
                                                    u();
                                                } catch  {}
                                            }, P));
                                            const { paramsError: q, searchError: te } = this.getMatch(N);
                                            q && M(k, q, "PARSE_PARAMS"), te && M(k, te, "VALIDATE_SEARCH");
                                            const W = ()=>R ? this.getMatch(R).context : this.options.context ?? {};
                                            o(N, (ge)=>({
                                                    ...ge,
                                                    isFetching: "beforeLoad",
                                                    fetchCount: ge.fetchCount + 1,
                                                    abortController: j,
                                                    pendingTimeout: K,
                                                    context: {
                                                        ...W(),
                                                        ...ge.__routeContext
                                                    }
                                                }));
                                            const { search: J, params: Q, context: Y, cause: le } = this.getMatch(N), ue = f(N), ie = {
                                                search: J,
                                                abortController: j,
                                                params: Q,
                                                preload: ue,
                                                context: Y,
                                                location: n,
                                                navigate: (ge)=>this.navigate({
                                                        ...ge,
                                                        _fromLocation: n
                                                    }),
                                                buildLocation: this.buildLocation,
                                                cause: ue ? "preload" : le,
                                                matches: r
                                            }, he = await ((b = (_ = A.options).beforeLoad) == null ? void 0 : b.call(_, ie)) ?? {};
                                            (hp(he) || il(he)) && M(k, he, "BEFORE_LOAD"), o(N, (ge)=>({
                                                    ...ge,
                                                    __beforeLoadContext: he,
                                                    context: {
                                                        ...W(),
                                                        ...ge.__routeContext,
                                                        ...he
                                                    },
                                                    abortController: j
                                                }));
                                        } catch (j) {
                                            M(k, j, "BEFORE_LOAD");
                                        }
                                        o(N, (j)=>{
                                            var K;
                                            return (K = j.beforeLoadPromise) == null || K.resolve(), {
                                                ...j,
                                                beforeLoadPromise: void 0,
                                                isFetching: !1
                                            };
                                        });
                                    }
                                }
                                const E = r.slice(0, l), T = [];
                                E.forEach(({ id: k, routeId: N }, D)=>{
                                    T.push((async ()=>{
                                        const { loaderPromise: L } = this.getMatch(k);
                                        let R = !1, A = !1;
                                        if (L) {
                                            await L;
                                            const P = this.getMatch(k);
                                            P.error && p(P, P.error);
                                        } else {
                                            const P = T[D - 1], B = this.looseRoutesById[N], U = ()=>{
                                                const { params: le, loaderDeps: ue, abortController: ie, context: he, cause: ge } = this.getMatch(k), ve = f(k);
                                                return {
                                                    params: le,
                                                    deps: ue,
                                                    preload: !!ve,
                                                    parentMatchPromise: P,
                                                    abortController: ie,
                                                    context: he,
                                                    location: n,
                                                    navigate: (Ee)=>this.navigate({
                                                            ...Ee,
                                                            _fromLocation: n
                                                        }),
                                                    cause: ve ? "preload" : ge,
                                                    route: B
                                                };
                                            }, j = Date.now() - this.getMatch(k).updatedAt, K = f(k), q = K ? B.options.preloadStaleTime ?? this.options.defaultPreloadStaleTime ?? 3e4 : B.options.staleTime ?? this.options.defaultStaleTime ?? 0, te = B.options.shouldReload, W = typeof te == "function" ? te(U()) : te;
                                            o(k, (le)=>({
                                                    ...le,
                                                    loaderPromise: Xg(),
                                                    preload: !!K && !this.state.matches.find((ue)=>ue.id === k)
                                                }));
                                            const J = async ()=>{
                                                var le, ue, ie, he, ge, ve, Ee, Ce, Ne, Ve, we;
                                                try {
                                                    const Me = async ()=>{
                                                        const se = this.getMatch(k);
                                                        se.minPendingPromise && await se.minPendingPromise;
                                                    };
                                                    try {
                                                        this.loadRouteChunk(B), o(k, (H)=>({
                                                                ...H,
                                                                isFetching: "loader"
                                                            }));
                                                        const se = await ((ue = (le = B.options).loader) == null ? void 0 : ue.call(le, U()));
                                                        p(this.getMatch(k), se), await B._lazyPromise, await Me();
                                                        const Ye = {
                                                            matches: r,
                                                            match: this.getMatch(k),
                                                            params: this.getMatch(k).params,
                                                            loaderData: se
                                                        }, Be = (he = (ie = B.options).head) == null ? void 0 : he.call(ie, Ye), it = Be?.meta, de = Be?.links, ae = Be?.scripts, oe = (ve = (ge = B.options).scripts) == null ? void 0 : ve.call(ge, Ye), $ = (Ce = (Ee = B.options).headers) == null ? void 0 : Ce.call(Ee, {
                                                            loaderData: se
                                                        });
                                                        o(k, (H)=>({
                                                                ...H,
                                                                error: void 0,
                                                                status: "success",
                                                                isFetching: !1,
                                                                updatedAt: Date.now(),
                                                                loaderData: se,
                                                                meta: it,
                                                                links: de,
                                                                headScripts: ae,
                                                                headers: $,
                                                                scripts: oe
                                                            }));
                                                    } catch (se) {
                                                        let Ye = se;
                                                        await Me(), p(this.getMatch(k), se);
                                                        try {
                                                            (Ve = (Ne = B.options).onError) == null || Ve.call(Ne, se);
                                                        } catch (Be) {
                                                            Ye = Be, p(this.getMatch(k), Be);
                                                        }
                                                        o(k, (Be)=>({
                                                                ...Be,
                                                                error: Ye,
                                                                status: "error",
                                                                isFetching: !1
                                                            }));
                                                    }
                                                    (we = this.serverSsr) == null || we.onMatchSettled({
                                                        router: this,
                                                        match: this.getMatch(k)
                                                    }), await B._componentsPromise;
                                                } catch (Me) {
                                                    o(k, (se)=>({
                                                            ...se,
                                                            loaderPromise: void 0
                                                        })), p(this.getMatch(k), Me);
                                                }
                                            }, { status: Q, invalid: Y } = this.getMatch(k);
                                            R = Q === "success" && (Y || (W ?? j > q)), K && B.options.preload === !1 || (R && !a ? (A = !0, (async ()=>{
                                                try {
                                                    await J();
                                                    const { loaderPromise: le, loadPromise: ue } = this.getMatch(k);
                                                    le?.resolve(), ue?.resolve(), o(k, (ie)=>({
                                                            ...ie,
                                                            loaderPromise: void 0
                                                        }));
                                                } catch (le) {
                                                    iI(le) && await this.navigate(le);
                                                }
                                            })()) : (Q !== "success" || R && a) && await J());
                                        }
                                        if (!A) {
                                            const { loaderPromise: P, loadPromise: B } = this.getMatch(k);
                                            P?.resolve(), B?.resolve();
                                        }
                                        return o(k, (P)=>({
                                                ...P,
                                                isFetching: A ? P.isFetching : !1,
                                                loaderPromise: A ? P.loaderPromise : void 0,
                                                invalid: !1
                                            })), this.getMatch(k);
                                    })());
                                }), await Promise.all(T), g();
                            } catch (M) {
                                x(M);
                            }
                        })();
                    }), await u();
                } catch (g) {
                    if (hp(g) || il(g)) throw il(g) && !i && await u(), g;
                }
                return r;
            }, this.invalidate = (n)=>{
                const r = (i)=>{
                    var s;
                    return ((s = n?.filter) == null ? void 0 : s.call(n, i)) ?? !0 ? {
                        ...i,
                        invalid: !0,
                        ...i.status === "error" ? {
                            status: "pending",
                            error: void 0
                        } : {}
                    } : i;
                };
                return this.__store.setState((i)=>{
                    var s;
                    return {
                        ...i,
                        matches: i.matches.map(r),
                        cachedMatches: i.cachedMatches.map(r),
                        pendingMatches: (s = i.pendingMatches) == null ? void 0 : s.map(r)
                    };
                }), this.load({
                    sync: n?.sync
                });
            }, this.resolveRedirect = (n)=>{
                const r = n;
                return r.href || (r.href = this.buildLocation(r).href), r;
            }, this.clearCache = (n)=>{
                const r = n?.filter;
                r !== void 0 ? this.__store.setState((i)=>({
                        ...i,
                        cachedMatches: i.cachedMatches.filter((s)=>!r(s))
                    })) : this.__store.setState((i)=>({
                        ...i,
                        cachedMatches: []
                    }));
            }, this.clearExpiredCache = ()=>{
                const n = (r)=>{
                    const i = this.looseRoutesById[r.routeId];
                    if (!i.options.loader) return !0;
                    const s = (r.preload ? i.options.preloadGcTime ?? this.options.defaultPreloadGcTime : i.options.gcTime ?? this.options.defaultGcTime) ?? 5 * 60 * 1e3;
                    return !(r.status !== "error" && Date.now() - r.updatedAt < s);
                };
                this.clearCache({
                    filter: n
                });
            }, this.loadRouteChunk = (n)=>(n._lazyPromise === void 0 && (n.lazyFn ? n._lazyPromise = n.lazyFn().then((r)=>{
                    const { id: i, ...s } = r.options;
                    Object.assign(n.options, s);
                }) : n._lazyPromise = Promise.resolve()), n._componentsPromise === void 0 && (n._componentsPromise = n._lazyPromise.then(()=>Promise.all(rV.map(async (r)=>{
                        const i = n.options[r];
                        i?.preload && await i.preload();
                    })))), n._componentsPromise), this.preloadRoute = async (n)=>{
                const r = this.buildLocation(n);
                let i = this.matchRoutes(r, {
                    throwOnError: !0,
                    preload: !0,
                    dest: n
                });
                const s = new Set([
                    ...this.state.matches,
                    ...this.state.pendingMatches ?? []
                ].map((a)=>a.id)), o = new Set([
                    ...s,
                    ...this.state.cachedMatches.map((a)=>a.id)
                ]);
                nI(()=>{
                    i.forEach((a)=>{
                        o.has(a.id) || this.__store.setState((l)=>({
                                ...l,
                                cachedMatches: [
                                    ...l.cachedMatches,
                                    a
                                ]
                            }));
                    });
                });
                try {
                    return i = await this.loadMatches({
                        matches: i,
                        location: r,
                        preload: !0,
                        updateMatch: (a, l)=>{
                            s.has(a) ? i = i.map((c)=>c.id === a ? l(c) : c) : this.updateMatch(a, l);
                        }
                    }), i;
                } catch (a) {
                    if (hp(a)) return a.reloadDocument ? void 0 : await this.preloadRoute({
                        ...a,
                        _fromLocation: r
                    });
                    il(a) || console.error(a);
                    return;
                }
            }, this.matchRoute = (n, r)=>{
                const i = {
                    ...n,
                    to: n.to ? this.resolvePathWithBase(n.from || "", n.to) : void 0,
                    params: n.params || {},
                    leaveParams: !0
                }, s = this.buildLocation(i);
                if (r?.pending && this.state.status !== "pending") return !1;
                const a = (r?.pending === void 0 ? !this.state.isLoading : r.pending) ? this.latestLocation : this.state.resolvedLocation || this.state.location, l = E_(this.basepath, a.pathname, {
                    ...r,
                    to: s.pathname
                });
                return !l || n.params && !vy(l, n.params, {
                    partial: !0
                }) ? !1 : l && (r?.includeSearch ?? !0) ? vy(a.search, s.search, {
                    partial: !0
                }) ? l : !1 : l;
            }, this._handleNotFound = (n, r, { updateMatch: i = this.updateMatch } = {})=>{
                const s = Object.fromEntries(n.map((l)=>[
                        l.routeId,
                        l
                    ]));
                let o = (r.global ? this.looseRoutesById[Zo] : this.looseRoutesById[r.routeId]) || this.looseRoutesById[Zo];
                for(; !o.options.notFoundComponent && !this.options.defaultNotFoundComponent && o.id !== Zo;)o = o.parentRoute, Yl(o);
                const a = s[o.id];
                Yl(a, "Could not find match for route: " + o.id), i(a.id, (l)=>({
                        ...l,
                        status: "notFound",
                        error: r,
                        isFetching: !1
                    })), r.routerCode === "BEFORE_LOAD" && o.parentRoute && (r.routeId = o.parentRoute.id, this._handleNotFound(n, r, {
                    updateMatch: i
                }));
            }, this.hasNotFoundMatch = ()=>this.__store.state.matches.some((n)=>n.status === "notFound" || n.globalNotFound), this.update({
                defaultPreloadDelay: 50,
                defaultPendingMs: 1e3,
                defaultPendingMinMs: 500,
                context: void 0,
                ...e,
                caseSensitive: e.caseSensitive ?? !1,
                notFoundMode: e.notFoundMode ?? "fuzzy",
                stringifySearch: e.stringifySearch ?? m7,
                parseSearch: e.parseSearch ?? p7
            }), typeof document < "u" && (window.__TSR_ROUTER__ = this);
        }
        get state() {
            return this.__store.state;
        }
        get looseRoutesById() {
            return this.routesById;
        }
        matchRoutes(e, n, r) {
            return typeof e == "string" ? this.matchRoutesInternal({
                pathname: e,
                search: n
            }, r) : this.matchRoutesInternal(e, n);
        }
        matchRoutesInternal(e, n) {
            const { foundRoute: r, matchedRoutes: i, routeParams: s } = this.getMatchedRoutes(e, n?.dest);
            let o = !1;
            (r ? r.path !== "/" && s["**"] : Tp(e.pathname)) && (this.options.notFoundRoute ? i.push(this.options.notFoundRoute) : o = !0);
            const a = (()=>{
                if (o) {
                    if (this.options.notFoundMode !== "root") for(let f = i.length - 1; f >= 0; f--){
                        const p = i[f];
                        if (p.children) return p.id;
                    }
                    return Zo;
                }
            })(), l = i.map((f)=>{
                var p;
                let g;
                const x = ((p = f.options.params) == null ? void 0 : p.parse) ?? f.options.parseParams;
                if (x) try {
                    const S = x(s);
                    Object.assign(s, S);
                } catch (S) {
                    if (g = new uX(S.message, {
                        cause: S
                    }), n?.throwOnError) throw g;
                    return g;
                }
            }), c = [], u = (f)=>f?.id ? f.context ?? this.options.context ?? {} : this.options.context ?? {};
            return i.forEach((f, p)=>{
                var g, x;
                const S = c[p - 1], [_, b, M] = (()=>{
                    const U = S?.search ?? e.search, j = S?._strictSearch ?? {};
                    try {
                        const K = uI(f.options.validateSearch, {
                            ...U
                        }) ?? {};
                        return [
                            {
                                ...U,
                                ...K
                            },
                            {
                                ...j,
                                ...K
                            },
                            void 0
                        ];
                    } catch (K) {
                        let q = K;
                        if (K instanceof K1 || (q = new K1(K.message, {
                            cause: K
                        })), n?.throwOnError) throw q;
                        return [
                            U,
                            {},
                            q
                        ];
                    }
                })(), E = ((x = (g = f.options).loaderDeps) == null ? void 0 : x.call(g, {
                    search: _
                })) ?? "", T = E ? JSON.stringify(E) : "", { usedParams: k, interpolatedPath: N } = S_({
                    path: f.fullPath,
                    params: s,
                    decodeCharMap: this.pathParamsDecodeCharMap
                }), D = S_({
                    path: f.id,
                    params: s,
                    leaveWildcards: !0,
                    decodeCharMap: this.pathParamsDecodeCharMap
                }).interpolatedPath + T, L = this.getMatch(D), R = this.state.matches.find((U)=>U.routeId === f.id), A = R ? "stay" : "enter";
                let P;
                if (L) P = {
                    ...L,
                    cause: A,
                    params: R ? el(R.params, s) : s,
                    _strictParams: k,
                    search: el(R ? R.search : L.search, _),
                    _strictSearch: b
                };
                else {
                    const U = f.options.loader || f.options.beforeLoad || f.lazyFn || aX(f) ? "pending" : "success";
                    P = {
                        id: D,
                        index: p,
                        routeId: f.id,
                        params: R ? el(R.params, s) : s,
                        _strictParams: k,
                        pathname: td([
                            this.basepath,
                            N
                        ]),
                        updatedAt: Date.now(),
                        search: R ? el(R.search, _) : _,
                        _strictSearch: b,
                        searchError: void 0,
                        status: U,
                        isFetching: !1,
                        error: void 0,
                        paramsError: l[p],
                        __routeContext: {},
                        __beforeLoadContext: {},
                        context: {},
                        abortController: new AbortController,
                        fetchCount: 0,
                        cause: A,
                        loaderDeps: R ? el(R.loaderDeps, E) : E,
                        invalid: !1,
                        preload: !1,
                        links: void 0,
                        scripts: void 0,
                        headScripts: void 0,
                        meta: void 0,
                        staticData: f.options.staticData || {},
                        loadPromise: Xg(),
                        fullPath: f.fullPath
                    };
                }
                n?.preload || (P.globalNotFound = a === f.id), P.searchError = M;
                const B = u(S);
                P.context = {
                    ...B,
                    ...P.__routeContext,
                    ...P.__beforeLoadContext
                }, c.push(P);
            }), c.forEach((f, p)=>{
                var g, x, S, _, b, M, E, T;
                const k = this.looseRoutesById[f.routeId];
                if (!this.getMatch(f.id) && n?._buildLocation !== !0) {
                    const D = c[p - 1], L = u(D), R = {
                        deps: f.loaderDeps,
                        params: f.params,
                        context: L,
                        location: e,
                        navigate: (A)=>this.navigate({
                                ...A,
                                _fromLocation: e
                            }),
                        buildLocation: this.buildLocation,
                        cause: f.cause,
                        abortController: f.abortController,
                        preload: !!f.preload,
                        matches: c
                    };
                    f.__routeContext = ((x = (g = k.options).context) == null ? void 0 : x.call(g, R)) ?? {}, f.context = {
                        ...L,
                        ...f.__routeContext,
                        ...f.__beforeLoadContext
                    };
                }
                if (f.status === "success") {
                    f.headers = (_ = (S = k.options).headers) == null ? void 0 : _.call(S, {
                        loaderData: f.loaderData
                    });
                    const D = {
                        matches: c,
                        match: f,
                        params: f.params,
                        loaderData: f.loaderData
                    }, L = (M = (b = k.options).head) == null ? void 0 : M.call(b, D);
                    f.links = L?.links, f.headScripts = L?.scripts, f.meta = L?.meta, f.scripts = (T = (E = k.options).scripts) == null ? void 0 : T.call(E, D);
                }
            }), c;
        }
    }
    class K1 extends Error {
    }
    class uX extends Error {
    }
    function dX(t) {
        return {
            loadedAt: 0,
            isLoading: !1,
            isTransitioning: !1,
            status: "idle",
            resolvedLocation: void 0,
            location: t,
            matches: [],
            pendingMatches: [],
            cachedMatches: [],
            statusCode: 200
        };
    }
    function fX({ router: t, children: e, ...n }) {
        t.update({
            ...t.options,
            ...n,
            context: {
                ...t.options.context,
                ...n.context
            }
        });
        const r = Y4(), i = v.jsx(r.Provider, {
            value: t,
            children: e
        });
        return t.options.Wrap ? v.jsx(t.options.Wrap, {
            children: i
        }) : i;
    }
    function hX({ router: t, ...e }) {
        return v.jsx(fX, {
            router: t,
            ...e,
            children: v.jsx(iX, {})
        });
    }
    function Lr(t) {
        return Vf({
            ...t,
            select: (e)=>t.select ? t.select(e.context) : e.context
        });
    }
    let pX = {
        data: ""
    }, mX = (t)=>typeof window == "object" ? ((t ? t.querySelector("#_goober") : window._goober) || Object.assign((t || document.head).appendChild(document.createElement("style")), {
            innerHTML: " ",
            id: "_goober"
        })).firstChild : t || pX, gX = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g, yX = /\/\*[^]*?\*\/|  +/g, aD = /\n+/g, Ef = (t, e)=>{
        let n = "", r = "", i = "";
        for(let s in t){
            let o = t[s];
            s[0] == "@" ? s[1] == "i" ? n = s + " " + o + ";" : r += s[1] == "f" ? Ef(o, s) : s + "{" + Ef(o, s[1] == "k" ? "" : e) + "}" : typeof o == "object" ? r += Ef(o, e ? e.replace(/([^,])+/g, (a)=>s.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g, (l)=>/&/.test(l) ? l.replace(/&/g, a) : a ? a + " " + l : l)) : s) : o != null && (s = /^--/.test(s) ? s : s.replace(/[A-Z]/g, "-$&").toLowerCase(), i += Ef.p ? Ef.p(s, o) : s + ":" + o + ";");
        }
        return n + (e && i ? e + "{" + i + "}" : i) + r;
    }, Ou = {}, iV = (t)=>{
        if (typeof t == "object") {
            let e = "";
            for(let n in t)e += n + iV(t[n]);
            return e;
        }
        return t;
    }, vX = (t, e, n, r, i)=>{
        let s = iV(t), o = Ou[s] || (Ou[s] = ((l)=>{
            let c = 0, u = 11;
            for(; c < l.length;)u = 101 * u + l.charCodeAt(c++) >>> 0;
            return "go" + u;
        })(s));
        if (!Ou[o]) {
            let l = s !== t ? t : ((c)=>{
                let u, f, p = [
                    {}
                ];
                for(; u = gX.exec(c.replace(yX, ""));)u[4] ? p.shift() : u[3] ? (f = u[3].replace(aD, " ").trim(), p.unshift(p[0][f] = p[0][f] || {})) : p[0][u[1]] = u[2].replace(aD, " ").trim();
                return p[0];
            })(t);
            Ou[o] = Ef(i ? {
                ["@keyframes " + o]: l
            } : l, n ? "" : "." + o);
        }
        let a = n && Ou.g ? Ou.g : null;
        return n && (Ou.g = Ou[o]), ((l, c, u, f)=>{
            f ? c.data = c.data.replace(f, l) : c.data.indexOf(l) === -1 && (c.data = u ? l + c.data : c.data + l);
        })(Ou[o], e, r, a), o;
    }, xX = (t, e, n)=>t.reduce((r, i, s)=>{
            let o = e[s];
            if (o && o.call) {
                let a = o(n), l = a && a.props && a.props.className || /^go/.test(a) && a;
                o = l ? "." + l : a && typeof a == "object" ? a.props ? "" : Ef(a, "") : a === !1 ? "" : a;
            }
            return r + i + (o ?? "");
        }, "");
    function qM(t) {
        let e = this || {}, n = t.call ? t(e.p) : t;
        return vX(n.unshift ? n.raw ? xX(n, [].slice.call(arguments, 1), e.p) : n.reduce((r, i)=>Object.assign(r, i && i.call ? i(e.p) : i), {}) : n, mX(e.target), e.g, e.o, e.k);
    }
    let sV, QN, eP;
    qM.bind({
        g: 1
    });
    let ld = qM.bind({
        k: 1
    });
    function bX(t, e, n, r) {
        Ef.p = e, sV = t, QN = n, eP = r;
    }
    function th(t, e) {
        let n = this || {};
        return function() {
            let r = arguments;
            function i(s, o) {
                let a = Object.assign({}, s), l = a.className || i.className;
                n.p = Object.assign({
                    theme: QN && QN()
                }, a), n.o = / *go\d+/.test(l), a.className = qM.apply(n, r) + (l ? " " + l : "");
                let c = t;
                return t[0] && (c = a.as || t, delete a.as), eP && c[0] && eP(a), sV(c, a);
            }
            return e ? e(i) : i;
        };
    }
    var wX = (t)=>typeof t == "function", Y1 = (t, e)=>wX(t) ? t(e) : t, _X = (()=>{
        let t = 0;
        return ()=>(++t).toString();
    })(), oV = (()=>{
        let t;
        return ()=>{
            if (t === void 0 && typeof window < "u") {
                let e = matchMedia("(prefers-reduced-motion: reduce)");
                t = !e || e.matches;
            }
            return t;
        };
    })(), SX = 20, aV = (t, e)=>{
        switch(e.type){
            case 0:
                return {
                    ...t,
                    toasts: [
                        e.toast,
                        ...t.toasts
                    ].slice(0, SX)
                };
            case 1:
                return {
                    ...t,
                    toasts: t.toasts.map((s)=>s.id === e.toast.id ? {
                            ...s,
                            ...e.toast
                        } : s)
                };
            case 2:
                let { toast: n } = e;
                return aV(t, {
                    type: t.toasts.find((s)=>s.id === n.id) ? 1 : 0,
                    toast: n
                });
            case 3:
                let { toastId: r } = e;
                return {
                    ...t,
                    toasts: t.toasts.map((s)=>s.id === r || r === void 0 ? {
                            ...s,
                            dismissed: !0,
                            visible: !1
                        } : s)
                };
            case 4:
                return e.toastId === void 0 ? {
                    ...t,
                    toasts: []
                } : {
                    ...t,
                    toasts: t.toasts.filter((s)=>s.id !== e.toastId)
                };
            case 5:
                return {
                    ...t,
                    pausedAt: e.time
                };
            case 6:
                let i = e.time - (t.pausedAt || 0);
                return {
                    ...t,
                    pausedAt: void 0,
                    toasts: t.toasts.map((s)=>({
                            ...s,
                            pauseDuration: s.pauseDuration + i
                        }))
                };
        }
    }, KS = [], Cp = {
        toasts: [],
        pausedAt: void 0
    }, fm = (t)=>{
        Cp = aV(Cp, t), KS.forEach((e)=>{
            e(Cp);
        });
    }, EX = {
        blank: 4e3,
        error: 4e3,
        success: 2e3,
        loading: 1 / 0,
        custom: 4e3
    }, MX = (t = {})=>{
        let [e, n] = X.useState(Cp), r = X.useRef(Cp);
        X.useEffect(()=>(r.current !== Cp && n(Cp), KS.push(n), ()=>{
                let s = KS.indexOf(n);
                s > -1 && KS.splice(s, 1);
            }), []);
        let i = e.toasts.map((s)=>{
            var o, a, l;
            return {
                ...t,
                ...t[s.type],
                ...s,
                removeDelay: s.removeDelay || ((o = t[s.type]) == null ? void 0 : o.removeDelay) || t?.removeDelay,
                duration: s.duration || ((a = t[s.type]) == null ? void 0 : a.duration) || t?.duration || EX[s.type],
                style: {
                    ...t.style,
                    ...(l = t[s.type]) == null ? void 0 : l.style,
                    ...s.style
                }
            };
        });
        return {
            ...e,
            toasts: i
        };
    }, TX = (t, e = "blank", n)=>({
            createdAt: Date.now(),
            visible: !0,
            dismissed: !1,
            type: e,
            ariaProps: {
                role: "status",
                "aria-live": "polite"
            },
            message: t,
            pauseDuration: 0,
            ...n,
            id: n?.id || _X()
        }), Fb = (t)=>(e, n)=>{
            let r = TX(e, t, n);
            return fm({
                type: 2,
                toast: r
            }), r.id;
        }, or = (t, e)=>Fb("blank")(t, e);
    or.error = Fb("error");
    or.success = Fb("success");
    or.loading = Fb("loading");
    or.custom = Fb("custom");
    or.dismiss = (t)=>{
        fm({
            type: 3,
            toastId: t
        });
    };
    or.remove = (t)=>fm({
            type: 4,
            toastId: t
        });
    or.promise = (t, e, n)=>{
        let r = or.loading(e.loading, {
            ...n,
            ...n?.loading
        });
        return typeof t == "function" && (t = t()), t.then((i)=>{
            let s = e.success ? Y1(e.success, i) : void 0;
            return s ? or.success(s, {
                id: r,
                ...n,
                ...n?.success
            }) : or.dismiss(r), i;
        }).catch((i)=>{
            let s = e.error ? Y1(e.error, i) : void 0;
            s ? or.error(s, {
                id: r,
                ...n,
                ...n?.error
            }) : or.dismiss(r);
        }), t;
    };
    var CX = (t, e)=>{
        fm({
            type: 1,
            toast: {
                id: t,
                height: e
            }
        });
    }, IX = ()=>{
        fm({
            type: 5,
            time: Date.now()
        });
    }, u0 = new Map, RX = 1e3, AX = (t, e = RX)=>{
        if (u0.has(t)) return;
        let n = setTimeout(()=>{
            u0.delete(t), fm({
                type: 4,
                toastId: t
            });
        }, e);
        u0.set(t, n);
    }, NX = (t)=>{
        let { toasts: e, pausedAt: n } = MX(t);
        X.useEffect(()=>{
            if (n) return;
            let s = Date.now(), o = e.map((a)=>{
                if (a.duration === 1 / 0) return;
                let l = (a.duration || 0) + a.pauseDuration - (s - a.createdAt);
                if (l < 0) {
                    a.visible && or.dismiss(a.id);
                    return;
                }
                return setTimeout(()=>or.dismiss(a.id), l);
            });
            return ()=>{
                o.forEach((a)=>a && clearTimeout(a));
            };
        }, [
            e,
            n
        ]);
        let r = X.useCallback(()=>{
            n && fm({
                type: 6,
                time: Date.now()
            });
        }, [
            n
        ]), i = X.useCallback((s, o)=>{
            let { reverseOrder: a = !1, gutter: l = 8, defaultPosition: c } = o || {}, u = e.filter((g)=>(g.position || c) === (s.position || c) && g.height), f = u.findIndex((g)=>g.id === s.id), p = u.filter((g, x)=>x < f && g.visible).length;
            return u.filter((g)=>g.visible).slice(...a ? [
                p + 1
            ] : [
                0,
                p
            ]).reduce((g, x)=>g + (x.height || 0) + l, 0);
        }, [
            e
        ]);
        return X.useEffect(()=>{
            e.forEach((s)=>{
                if (s.dismissed) AX(s.id, s.removeDelay);
                else {
                    let o = u0.get(s.id);
                    o && (clearTimeout(o), u0.delete(s.id));
                }
            });
        }, [
            e
        ]), {
            toasts: e,
            handlers: {
                updateHeight: CX,
                startPause: IX,
                endPause: r,
                calculateOffset: i
            }
        };
    }, PX = ld`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
 transform: scale(1) rotate(45deg);
  opacity: 1;
}`, kX = ld`
from {
  transform: scale(0);
  opacity: 0;
}
to {
  transform: scale(1);
  opacity: 1;
}`, OX = ld`
from {
  transform: scale(0) rotate(90deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(90deg);
	opacity: 1;
}`, LX = th("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${(t)=>t.primary || "#ff4b4b"};
  position: relative;
  transform: rotate(45deg);

  animation: ${PX} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;

  &:after,
  &:before {
    content: '';
    animation: ${kX} 0.15s ease-out forwards;
    animation-delay: 150ms;
    position: absolute;
    border-radius: 3px;
    opacity: 0;
    background: ${(t)=>t.secondary || "#fff"};
    bottom: 9px;
    left: 4px;
    height: 2px;
    width: 12px;
  }

  &:before {
    animation: ${OX} 0.15s ease-out forwards;
    animation-delay: 180ms;
    transform: rotate(90deg);
  }
`, DX = ld`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
`, FX = th("div")`
  width: 12px;
  height: 12px;
  box-sizing: border-box;
  border: 2px solid;
  border-radius: 100%;
  border-color: ${(t)=>t.secondary || "#e0e0e0"};
  border-right-color: ${(t)=>t.primary || "#616161"};
  animation: ${DX} 1s linear infinite;
`, jX = ld`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(45deg);
	opacity: 1;
}`, BX = ld`
0% {
	height: 0;
	width: 0;
	opacity: 0;
}
40% {
  height: 0;
	width: 6px;
	opacity: 1;
}
100% {
  opacity: 1;
  height: 10px;
}`, UX = th("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${(t)=>t.primary || "#61d345"};
  position: relative;
  transform: rotate(45deg);

  animation: ${jX} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;
  &:after {
    content: '';
    box-sizing: border-box;
    animation: ${BX} 0.2s ease-out forwards;
    opacity: 0;
    animation-delay: 200ms;
    position: absolute;
    border-right: 2px solid;
    border-bottom: 2px solid;
    border-color: ${(t)=>t.secondary || "#fff"};
    bottom: 6px;
    left: 6px;
    height: 10px;
    width: 6px;
  }
`, zX = th("div")`
  position: absolute;
`, VX = th("div")`
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 20px;
  min-height: 20px;
`, WX = ld`
from {
  transform: scale(0.6);
  opacity: 0.4;
}
to {
  transform: scale(1);
  opacity: 1;
}`, qX = th("div")`
  position: relative;
  transform: scale(0.6);
  opacity: 0.4;
  min-width: 20px;
  animation: ${WX} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
`, HX = ({ toast: t })=>{
        let { icon: e, type: n, iconTheme: r } = t;
        return e !== void 0 ? typeof e == "string" ? X.createElement(qX, null, e) : e : n === "blank" ? null : X.createElement(VX, null, X.createElement(FX, {
            ...r
        }), n !== "loading" && X.createElement(zX, null, n === "error" ? X.createElement(LX, {
            ...r
        }) : X.createElement(UX, {
            ...r
        })));
    }, $X = (t)=>`
0% {transform: translate3d(0,${t * -200}%,0) scale(.6); opacity:.5;}
100% {transform: translate3d(0,0,0) scale(1); opacity:1;}
`, GX = (t)=>`
0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}
100% {transform: translate3d(0,${t * -150}%,-1px) scale(.6); opacity:0;}
`, XX = "0%{opacity:0;} 100%{opacity:1;}", KX = "0%{opacity:1;} 100%{opacity:0;}", YX = th("div")`
  display: flex;
  align-items: center;
  background: #fff;
  color: #363636;
  line-height: 1.3;
  will-change: transform;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);
  max-width: 350px;
  pointer-events: auto;
  padding: 8px 10px;
  border-radius: 8px;
`, ZX = th("div")`
  display: flex;
  justify-content: center;
  margin: 4px 10px;
  color: inherit;
  flex: 1 1 auto;
  white-space: pre-line;
`, JX = (t, e)=>{
        let n = t.includes("top") ? 1 : -1, [r, i] = oV() ? [
            XX,
            KX
        ] : [
            $X(n),
            GX(n)
        ];
        return {
            animation: e ? `${ld(r)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards` : `${ld(i)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`
        };
    }, QX = X.memo(({ toast: t, position: e, style: n, children: r })=>{
        let i = t.height ? JX(t.position || e || "top-center", t.visible) : {
            opacity: 0
        }, s = X.createElement(HX, {
            toast: t
        }), o = X.createElement(ZX, {
            ...t.ariaProps
        }, Y1(t.message, t));
        return X.createElement(YX, {
            className: t.className,
            style: {
                ...i,
                ...n,
                ...t.style
            }
        }, typeof r == "function" ? r({
            icon: s,
            message: o
        }) : X.createElement(X.Fragment, null, s, o));
    });
    bX(X.createElement);
    var eK = ({ id: t, className: e, style: n, onHeightUpdate: r, children: i })=>{
        let s = X.useCallback((o)=>{
            if (o) {
                let a = ()=>{
                    let l = o.getBoundingClientRect().height;
                    r(t, l);
                };
                a(), new MutationObserver(a).observe(o, {
                    subtree: !0,
                    childList: !0,
                    characterData: !0
                });
            }
        }, [
            t,
            r
        ]);
        return X.createElement("div", {
            ref: s,
            className: e,
            style: n
        }, i);
    }, tK = (t, e)=>{
        let n = t.includes("top"), r = n ? {
            top: 0
        } : {
            bottom: 0
        }, i = t.includes("center") ? {
            justifyContent: "center"
        } : t.includes("right") ? {
            justifyContent: "flex-end"
        } : {};
        return {
            left: 0,
            right: 0,
            display: "flex",
            position: "absolute",
            transition: oV() ? void 0 : "all 230ms cubic-bezier(.21,1.02,.73,1)",
            transform: `translateY(${e * (n ? 1 : -1)}px)`,
            ...r,
            ...i
        };
    }, nK = qM`
  z-index: 9999;
  > * {
    pointer-events: auto;
  }
`, T_ = 16, lV = ({ reverseOrder: t, position: e = "top-center", toastOptions: n, gutter: r, children: i, containerStyle: s, containerClassName: o })=>{
        let { toasts: a, handlers: l } = NX(n);
        return X.createElement("div", {
            id: "_rht_toaster",
            style: {
                position: "fixed",
                zIndex: 9999,
                top: T_,
                left: T_,
                right: T_,
                bottom: T_,
                pointerEvents: "none",
                ...s
            },
            className: o,
            onMouseEnter: l.startPause,
            onMouseLeave: l.endPause
        }, a.map((c)=>{
            let u = c.position || e, f = l.calculateOffset(c, {
                reverseOrder: t,
                gutter: r,
                defaultPosition: e
            }), p = tK(u, f);
            return X.createElement(eK, {
                id: c.id,
                key: c.id,
                onHeightUpdate: l.updateHeight,
                className: c.visible ? nK : "",
                style: p
            }, c.type === "custom" ? Y1(c.message, c) : i ? i(c) : X.createElement(QX, {
                toast: c,
                position: u
            }));
        }));
    }, rK = or;
    function cV(t, e) {
        return function() {
            return t.apply(e, arguments);
        };
    }
    const { toString: iK } = Object.prototype, { getPrototypeOf: Fk } = Object, HM = ((t)=>(e)=>{
            const n = iK.call(e);
            return t[n] || (t[n] = n.slice(8, -1).toLowerCase());
        })(Object.create(null)), ac = (t)=>(t = t.toLowerCase(), (e)=>HM(e) === t), $M = (t)=>(e)=>typeof e === t, { isArray: sv } = Array, L0 = $M("undefined");
    function sK(t) {
        return t !== null && !L0(t) && t.constructor !== null && !L0(t.constructor) && Na(t.constructor.isBuffer) && t.constructor.isBuffer(t);
    }
    const uV = ac("ArrayBuffer");
    function oK(t) {
        let e;
        return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? e = ArrayBuffer.isView(t) : e = t && t.buffer && uV(t.buffer), e;
    }
    const aK = $M("string"), Na = $M("function"), dV = $M("number"), GM = (t)=>t !== null && typeof t == "object", lK = (t)=>t === !0 || t === !1, YS = (t)=>{
        if (HM(t) !== "object") return !1;
        const e = Fk(t);
        return (e === null || e === Object.prototype || Object.getPrototypeOf(e) === null) && !(Symbol.toStringTag in t) && !(Symbol.iterator in t);
    }, cK = ac("Date"), uK = ac("File"), dK = ac("Blob"), fK = ac("FileList"), hK = (t)=>GM(t) && Na(t.pipe), pK = (t)=>{
        let e;
        return t && (typeof FormData == "function" && t instanceof FormData || Na(t.append) && ((e = HM(t)) === "formdata" || e === "object" && Na(t.toString) && t.toString() === "[object FormData]"));
    }, mK = ac("URLSearchParams"), [gK, yK, vK, xK] = [
        "ReadableStream",
        "Request",
        "Response",
        "Headers"
    ].map(ac), bK = (t)=>t.trim ? t.trim() : t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
    function jb(t, e, { allOwnKeys: n = !1 } = {}) {
        if (t === null || typeof t > "u") return;
        let r, i;
        if (typeof t != "object" && (t = [
            t
        ]), sv(t)) for(r = 0, i = t.length; r < i; r++)e.call(null, t[r], r, t);
        else {
            const s = n ? Object.getOwnPropertyNames(t) : Object.keys(t), o = s.length;
            let a;
            for(r = 0; r < o; r++)a = s[r], e.call(null, t[a], a, t);
        }
    }
    function fV(t, e) {
        e = e.toLowerCase();
        const n = Object.keys(t);
        let r = n.length, i;
        for(; r-- > 0;)if (i = n[r], e === i.toLowerCase()) return i;
        return null;
    }
    const Ip = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global, hV = (t)=>!L0(t) && t !== Ip;
    function tP() {
        const { caseless: t } = hV(this) && this || {}, e = {}, n = (r, i)=>{
            const s = t && fV(e, i) || i;
            YS(e[s]) && YS(r) ? e[s] = tP(e[s], r) : YS(r) ? e[s] = tP({}, r) : sv(r) ? e[s] = r.slice() : e[s] = r;
        };
        for(let r = 0, i = arguments.length; r < i; r++)arguments[r] && jb(arguments[r], n);
        return e;
    }
    const wK = (t, e, n, { allOwnKeys: r } = {})=>(jb(e, (i, s)=>{
            n && Na(i) ? t[s] = cV(i, n) : t[s] = i;
        }, {
            allOwnKeys: r
        }), t), _K = (t)=>(t.charCodeAt(0) === 65279 && (t = t.slice(1)), t), SK = (t, e, n, r)=>{
        t.prototype = Object.create(e.prototype, r), t.prototype.constructor = t, Object.defineProperty(t, "super", {
            value: e.prototype
        }), n && Object.assign(t.prototype, n);
    }, EK = (t, e, n, r)=>{
        let i, s, o;
        const a = {};
        if (e = e || {}, t == null) return e;
        do {
            for(i = Object.getOwnPropertyNames(t), s = i.length; s-- > 0;)o = i[s], (!r || r(o, t, e)) && !a[o] && (e[o] = t[o], a[o] = !0);
            t = n !== !1 && Fk(t);
        }while (t && (!n || n(t, e)) && t !== Object.prototype);
        return e;
    }, MK = (t, e, n)=>{
        t = String(t), (n === void 0 || n > t.length) && (n = t.length), n -= e.length;
        const r = t.indexOf(e, n);
        return r !== -1 && r === n;
    }, TK = (t)=>{
        if (!t) return null;
        if (sv(t)) return t;
        let e = t.length;
        if (!dV(e)) return null;
        const n = new Array(e);
        for(; e-- > 0;)n[e] = t[e];
        return n;
    }, CK = ((t)=>(e)=>t && e instanceof t)(typeof Uint8Array < "u" && Fk(Uint8Array)), IK = (t, e)=>{
        const r = (t && t[Symbol.iterator]).call(t);
        let i;
        for(; (i = r.next()) && !i.done;){
            const s = i.value;
            e.call(t, s[0], s[1]);
        }
    }, RK = (t, e)=>{
        let n;
        const r = [];
        for(; (n = t.exec(e)) !== null;)r.push(n);
        return r;
    }, AK = ac("HTMLFormElement"), NK = (t)=>t.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function(n, r, i) {
            return r.toUpperCase() + i;
        }), lD = (({ hasOwnProperty: t })=>(e, n)=>t.call(e, n))(Object.prototype), PK = ac("RegExp"), pV = (t, e)=>{
        const n = Object.getOwnPropertyDescriptors(t), r = {};
        jb(n, (i, s)=>{
            let o;
            (o = e(i, s, t)) !== !1 && (r[s] = o || i);
        }), Object.defineProperties(t, r);
    }, kK = (t)=>{
        pV(t, (e, n)=>{
            if (Na(t) && [
                "arguments",
                "caller",
                "callee"
            ].indexOf(n) !== -1) return !1;
            const r = t[n];
            if (Na(r)) {
                if (e.enumerable = !1, "writable" in e) {
                    e.writable = !1;
                    return;
                }
                e.set || (e.set = ()=>{
                    throw Error("Can not rewrite read-only method '" + n + "'");
                });
            }
        });
    }, OK = (t, e)=>{
        const n = {}, r = (i)=>{
            i.forEach((s)=>{
                n[s] = !0;
            });
        };
        return sv(t) ? r(t) : r(String(t).split(e)), n;
    }, LK = ()=>{}, DK = (t, e)=>t != null && Number.isFinite(t = +t) ? t : e, dI = "abcdefghijklmnopqrstuvwxyz", cD = "0123456789", mV = {
        DIGIT: cD,
        ALPHA: dI,
        ALPHA_DIGIT: dI + dI.toUpperCase() + cD
    }, FK = (t = 16, e = mV.ALPHA_DIGIT)=>{
        let n = "";
        const { length: r } = e;
        for(; t--;)n += e[Math.random() * r | 0];
        return n;
    };
    function jK(t) {
        return !!(t && Na(t.append) && t[Symbol.toStringTag] === "FormData" && t[Symbol.iterator]);
    }
    const BK = (t)=>{
        const e = new Array(10), n = (r, i)=>{
            if (GM(r)) {
                if (e.indexOf(r) >= 0) return;
                if (!("toJSON" in r)) {
                    e[i] = r;
                    const s = sv(r) ? [] : {};
                    return jb(r, (o, a)=>{
                        const l = n(o, i + 1);
                        !L0(l) && (s[a] = l);
                    }), e[i] = void 0, s;
                }
            }
            return r;
        };
        return n(t, 0);
    }, UK = ac("AsyncFunction"), zK = (t)=>t && (GM(t) || Na(t)) && Na(t.then) && Na(t.catch), gV = ((t, e)=>t ? setImmediate : e ? ((n, r)=>(Ip.addEventListener("message", ({ source: i, data: s })=>{
                i === Ip && s === n && r.length && r.shift()();
            }, !1), (i)=>{
                r.push(i), Ip.postMessage(n, "*");
            }))(`axios@${Math.random()}`, []) : (n)=>setTimeout(n))(typeof setImmediate == "function", Na(Ip.postMessage)), VK = typeof queueMicrotask < "u" ? queueMicrotask.bind(Ip) : typeof process < "u" && process.nextTick || gV, et = {
        isArray: sv,
        isArrayBuffer: uV,
        isBuffer: sK,
        isFormData: pK,
        isArrayBufferView: oK,
        isString: aK,
        isNumber: dV,
        isBoolean: lK,
        isObject: GM,
        isPlainObject: YS,
        isReadableStream: gK,
        isRequest: yK,
        isResponse: vK,
        isHeaders: xK,
        isUndefined: L0,
        isDate: cK,
        isFile: uK,
        isBlob: dK,
        isRegExp: PK,
        isFunction: Na,
        isStream: hK,
        isURLSearchParams: mK,
        isTypedArray: CK,
        isFileList: fK,
        forEach: jb,
        merge: tP,
        extend: wK,
        trim: bK,
        stripBOM: _K,
        inherits: SK,
        toFlatObject: EK,
        kindOf: HM,
        kindOfTest: ac,
        endsWith: MK,
        toArray: TK,
        forEachEntry: IK,
        matchAll: RK,
        isHTMLForm: AK,
        hasOwnProperty: lD,
        hasOwnProp: lD,
        reduceDescriptors: pV,
        freezeMethods: kK,
        toObjectSet: OK,
        toCamelCase: NK,
        noop: LK,
        toFiniteNumber: DK,
        findKey: fV,
        global: Ip,
        isContextDefined: hV,
        ALPHABET: mV,
        generateString: FK,
        isSpecCompliantForm: jK,
        toJSONObject: BK,
        isAsyncFn: UK,
        isThenable: zK,
        setImmediate: gV,
        asap: VK
    };
    function Rn(t, e, n, r, i) {
        Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = t, this.name = "AxiosError", e && (this.code = e), n && (this.config = n), r && (this.request = r), i && (this.response = i, this.status = i.status ? i.status : null);
    }
    et.inherits(Rn, Error, {
        toJSON: function() {
            return {
                message: this.message,
                name: this.name,
                description: this.description,
                number: this.number,
                fileName: this.fileName,
                lineNumber: this.lineNumber,
                columnNumber: this.columnNumber,
                stack: this.stack,
                config: et.toJSONObject(this.config),
                code: this.code,
                status: this.status
            };
        }
    });
    const yV = Rn.prototype, vV = {};
    [
        "ERR_BAD_OPTION_VALUE",
        "ERR_BAD_OPTION",
        "ECONNABORTED",
        "ETIMEDOUT",
        "ERR_NETWORK",
        "ERR_FR_TOO_MANY_REDIRECTS",
        "ERR_DEPRECATED",
        "ERR_BAD_RESPONSE",
        "ERR_BAD_REQUEST",
        "ERR_CANCELED",
        "ERR_NOT_SUPPORT",
        "ERR_INVALID_URL"
    ].forEach((t)=>{
        vV[t] = {
            value: t
        };
    });
    Object.defineProperties(Rn, vV);
    Object.defineProperty(yV, "isAxiosError", {
        value: !0
    });
    Rn.from = (t, e, n, r, i, s)=>{
        const o = Object.create(yV);
        return et.toFlatObject(t, o, function(l) {
            return l !== Error.prototype;
        }, (a)=>a !== "isAxiosError"), Rn.call(o, t.message, e, n, r, i), o.cause = t, o.name = t.name, s && Object.assign(o, s), o;
    };
    const WK = null;
    function nP(t) {
        return et.isPlainObject(t) || et.isArray(t);
    }
    function xV(t) {
        return et.endsWith(t, "[]") ? t.slice(0, -2) : t;
    }
    function uD(t, e, n) {
        return t ? t.concat(e).map(function(i, s) {
            return i = xV(i), !n && s ? "[" + i + "]" : i;
        }).join(n ? "." : "") : e;
    }
    function qK(t) {
        return et.isArray(t) && !t.some(nP);
    }
    const HK = et.toFlatObject(et, {}, null, function(e) {
        return /^is[A-Z]/.test(e);
    });
    function XM(t, e, n) {
        if (!et.isObject(t)) throw new TypeError("target must be an object");
        e = e || new FormData, n = et.toFlatObject(n, {
            metaTokens: !0,
            dots: !1,
            indexes: !1
        }, !1, function(S, _) {
            return !et.isUndefined(_[S]);
        });
        const r = n.metaTokens, i = n.visitor || u, s = n.dots, o = n.indexes, l = (n.Blob || typeof Blob < "u" && Blob) && et.isSpecCompliantForm(e);
        if (!et.isFunction(i)) throw new TypeError("visitor must be a function");
        function c(x) {
            if (x === null) return "";
            if (et.isDate(x)) return x.toISOString();
            if (!l && et.isBlob(x)) throw new Rn("Blob is not supported. Use a Buffer instead.");
            return et.isArrayBuffer(x) || et.isTypedArray(x) ? l && typeof Blob == "function" ? new Blob([
                x
            ]) : Buffer.from(x) : x;
        }
        function u(x, S, _) {
            let b = x;
            if (x && !_ && typeof x == "object") {
                if (et.endsWith(S, "{}")) S = r ? S : S.slice(0, -2), x = JSON.stringify(x);
                else if (et.isArray(x) && qK(x) || (et.isFileList(x) || et.endsWith(S, "[]")) && (b = et.toArray(x))) return S = xV(S), b.forEach(function(E, T) {
                    !(et.isUndefined(E) || E === null) && e.append(o === !0 ? uD([
                        S
                    ], T, s) : o === null ? S : S + "[]", c(E));
                }), !1;
            }
            return nP(x) ? !0 : (e.append(uD(_, S, s), c(x)), !1);
        }
        const f = [], p = Object.assign(HK, {
            defaultVisitor: u,
            convertValue: c,
            isVisitable: nP
        });
        function g(x, S) {
            if (!et.isUndefined(x)) {
                if (f.indexOf(x) !== -1) throw Error("Circular reference detected in " + S.join("."));
                f.push(x), et.forEach(x, function(b, M) {
                    (!(et.isUndefined(b) || b === null) && i.call(e, b, et.isString(M) ? M.trim() : M, S, p)) === !0 && g(b, S ? S.concat(M) : [
                        M
                    ]);
                }), f.pop();
            }
        }
        if (!et.isObject(t)) throw new TypeError("data must be an object");
        return g(t), e;
    }
    function dD(t) {
        const e = {
            "!": "%21",
            "'": "%27",
            "(": "%28",
            ")": "%29",
            "~": "%7E",
            "%20": "+",
            "%00": "\0"
        };
        return encodeURIComponent(t).replace(/[!'()~]|%20|%00/g, function(r) {
            return e[r];
        });
    }
    function jk(t, e) {
        this._pairs = [], t && XM(t, this, e);
    }
    const bV = jk.prototype;
    bV.append = function(e, n) {
        this._pairs.push([
            e,
            n
        ]);
    };
    bV.toString = function(e) {
        const n = e ? function(r) {
            return e.call(this, r, dD);
        } : dD;
        return this._pairs.map(function(i) {
            return n(i[0]) + "=" + n(i[1]);
        }, "").join("&");
    };
    function $K(t) {
        return encodeURIComponent(t).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
    }
    function wV(t, e, n) {
        if (!e) return t;
        const r = n && n.encode || $K;
        et.isFunction(n) && (n = {
            serialize: n
        });
        const i = n && n.serialize;
        let s;
        if (i ? s = i(e, n) : s = et.isURLSearchParams(e) ? e.toString() : new jk(e, n).toString(r), s) {
            const o = t.indexOf("#");
            o !== -1 && (t = t.slice(0, o)), t += (t.indexOf("?") === -1 ? "?" : "&") + s;
        }
        return t;
    }
    class fD {
        constructor(){
            this.handlers = [];
        }
        use(e, n, r) {
            return this.handlers.push({
                fulfilled: e,
                rejected: n,
                synchronous: r ? r.synchronous : !1,
                runWhen: r ? r.runWhen : null
            }), this.handlers.length - 1;
        }
        eject(e) {
            this.handlers[e] && (this.handlers[e] = null);
        }
        clear() {
            this.handlers && (this.handlers = []);
        }
        forEach(e) {
            et.forEach(this.handlers, function(r) {
                r !== null && e(r);
            });
        }
    }
    const _V = {
        silentJSONParsing: !0,
        forcedJSONParsing: !0,
        clarifyTimeoutError: !1
    }, GK = typeof URLSearchParams < "u" ? URLSearchParams : jk, XK = typeof FormData < "u" ? FormData : null, KK = typeof Blob < "u" ? Blob : null, YK = {
        isBrowser: !0,
        classes: {
            URLSearchParams: GK,
            FormData: XK,
            Blob: KK
        },
        protocols: [
            "http",
            "https",
            "file",
            "blob",
            "url",
            "data"
        ]
    }, Bk = typeof window < "u" && typeof document < "u", rP = typeof navigator == "object" && navigator || void 0, ZK = Bk && (!rP || [
        "ReactNative",
        "NativeScript",
        "NS"
    ].indexOf(rP.product) < 0), JK = typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && typeof self.importScripts == "function", QK = Bk && window.location.href || "http://localhost", eY = Object.freeze(Object.defineProperty({
        __proto__: null,
        hasBrowserEnv: Bk,
        hasStandardBrowserEnv: ZK,
        hasStandardBrowserWebWorkerEnv: JK,
        navigator: rP,
        origin: QK
    }, Symbol.toStringTag, {
        value: "Module"
    })), qs = {
        ...eY,
        ...YK
    };
    function tY(t, e) {
        return XM(t, new qs.classes.URLSearchParams, Object.assign({
            visitor: function(n, r, i, s) {
                return qs.isNode && et.isBuffer(n) ? (this.append(r, n.toString("base64")), !1) : s.defaultVisitor.apply(this, arguments);
            }
        }, e));
    }
    function nY(t) {
        return et.matchAll(/\w+|\[(\w*)]/g, t).map((e)=>e[0] === "[]" ? "" : e[1] || e[0]);
    }
    function rY(t) {
        const e = {}, n = Object.keys(t);
        let r;
        const i = n.length;
        let s;
        for(r = 0; r < i; r++)s = n[r], e[s] = t[s];
        return e;
    }
    function SV(t) {
        function e(n, r, i, s) {
            let o = n[s++];
            if (o === "__proto__") return !0;
            const a = Number.isFinite(+o), l = s >= n.length;
            return o = !o && et.isArray(i) ? i.length : o, l ? (et.hasOwnProp(i, o) ? i[o] = [
                i[o],
                r
            ] : i[o] = r, !a) : ((!i[o] || !et.isObject(i[o])) && (i[o] = []), e(n, r, i[o], s) && et.isArray(i[o]) && (i[o] = rY(i[o])), !a);
        }
        if (et.isFormData(t) && et.isFunction(t.entries)) {
            const n = {};
            return et.forEachEntry(t, (r, i)=>{
                e(nY(r), i, n, 0);
            }), n;
        }
        return null;
    }
    function iY(t, e, n) {
        if (et.isString(t)) try {
            return (e || JSON.parse)(t), et.trim(t);
        } catch (r) {
            if (r.name !== "SyntaxError") throw r;
        }
        return (n || JSON.stringify)(t);
    }
    const Bb = {
        transitional: _V,
        adapter: [
            "xhr",
            "http",
            "fetch"
        ],
        transformRequest: [
            function(e, n) {
                const r = n.getContentType() || "", i = r.indexOf("application/json") > -1, s = et.isObject(e);
                if (s && et.isHTMLForm(e) && (e = new FormData(e)), et.isFormData(e)) return i ? JSON.stringify(SV(e)) : e;
                if (et.isArrayBuffer(e) || et.isBuffer(e) || et.isStream(e) || et.isFile(e) || et.isBlob(e) || et.isReadableStream(e)) return e;
                if (et.isArrayBufferView(e)) return e.buffer;
                if (et.isURLSearchParams(e)) return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), e.toString();
                let a;
                if (s) {
                    if (r.indexOf("application/x-www-form-urlencoded") > -1) return tY(e, this.formSerializer).toString();
                    if ((a = et.isFileList(e)) || r.indexOf("multipart/form-data") > -1) {
                        const l = this.env && this.env.FormData;
                        return XM(a ? {
                            "files[]": e
                        } : e, l && new l, this.formSerializer);
                    }
                }
                return s || i ? (n.setContentType("application/json", !1), iY(e)) : e;
            }
        ],
        transformResponse: [
            function(e) {
                const n = this.transitional || Bb.transitional, r = n && n.forcedJSONParsing, i = this.responseType === "json";
                if (et.isResponse(e) || et.isReadableStream(e)) return e;
                if (e && et.isString(e) && (r && !this.responseType || i)) {
                    const o = !(n && n.silentJSONParsing) && i;
                    try {
                        return JSON.parse(e);
                    } catch (a) {
                        if (o) throw a.name === "SyntaxError" ? Rn.from(a, Rn.ERR_BAD_RESPONSE, this, null, this.response) : a;
                    }
                }
                return e;
            }
        ],
        timeout: 0,
        xsrfCookieName: "XSRF-TOKEN",
        xsrfHeaderName: "X-XSRF-TOKEN",
        maxContentLength: -1,
        maxBodyLength: -1,
        env: {
            FormData: qs.classes.FormData,
            Blob: qs.classes.Blob
        },
        validateStatus: function(e) {
            return e >= 200 && e < 300;
        },
        headers: {
            common: {
                Accept: "application/json, text/plain, */*",
                "Content-Type": void 0
            }
        }
    };
    et.forEach([
        "delete",
        "get",
        "head",
        "post",
        "put",
        "patch"
    ], (t)=>{
        Bb.headers[t] = {};
    });
    const sY = et.toObjectSet([
        "age",
        "authorization",
        "content-length",
        "content-type",
        "etag",
        "expires",
        "from",
        "host",
        "if-modified-since",
        "if-unmodified-since",
        "last-modified",
        "location",
        "max-forwards",
        "proxy-authorization",
        "referer",
        "retry-after",
        "user-agent"
    ]), oY = (t)=>{
        const e = {};
        let n, r, i;
        return t && t.split(`
`).forEach(function(o) {
            i = o.indexOf(":"), n = o.substring(0, i).trim().toLowerCase(), r = o.substring(i + 1).trim(), !(!n || e[n] && sY[n]) && (n === "set-cookie" ? e[n] ? e[n].push(r) : e[n] = [
                r
            ] : e[n] = e[n] ? e[n] + ", " + r : r);
        }), e;
    }, hD = Symbol("internals");
    function vx(t) {
        return t && String(t).trim().toLowerCase();
    }
    function ZS(t) {
        return t === !1 || t == null ? t : et.isArray(t) ? t.map(ZS) : String(t);
    }
    function aY(t) {
        const e = Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
        let r;
        for(; r = n.exec(t);)e[r[1]] = r[2];
        return e;
    }
    const lY = (t)=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(t.trim());
    function fI(t, e, n, r, i) {
        if (et.isFunction(r)) return r.call(this, e, n);
        if (i && (e = n), !!et.isString(e)) {
            if (et.isString(r)) return e.indexOf(r) !== -1;
            if (et.isRegExp(r)) return r.test(e);
        }
    }
    function cY(t) {
        return t.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (e, n, r)=>n.toUpperCase() + r);
    }
    function uY(t, e) {
        const n = et.toCamelCase(" " + e);
        [
            "get",
            "set",
            "has"
        ].forEach((r)=>{
            Object.defineProperty(t, r + n, {
                value: function(i, s, o) {
                    return this[r].call(this, e, i, s, o);
                },
                configurable: !0
            });
        });
    }
    let ra = class {
        constructor(e){
            e && this.set(e);
        }
        set(e, n, r) {
            const i = this;
            function s(a, l, c) {
                const u = vx(l);
                if (!u) throw new Error("header name must be a non-empty string");
                const f = et.findKey(i, u);
                (!f || i[f] === void 0 || c === !0 || c === void 0 && i[f] !== !1) && (i[f || l] = ZS(a));
            }
            const o = (a, l)=>et.forEach(a, (c, u)=>s(c, u, l));
            if (et.isPlainObject(e) || e instanceof this.constructor) o(e, n);
            else if (et.isString(e) && (e = e.trim()) && !lY(e)) o(oY(e), n);
            else if (et.isHeaders(e)) for (const [a, l] of e.entries())s(l, a, r);
            else e != null && s(n, e, r);
            return this;
        }
        get(e, n) {
            if (e = vx(e), e) {
                const r = et.findKey(this, e);
                if (r) {
                    const i = this[r];
                    if (!n) return i;
                    if (n === !0) return aY(i);
                    if (et.isFunction(n)) return n.call(this, i, r);
                    if (et.isRegExp(n)) return n.exec(i);
                    throw new TypeError("parser must be boolean|regexp|function");
                }
            }
        }
        has(e, n) {
            if (e = vx(e), e) {
                const r = et.findKey(this, e);
                return !!(r && this[r] !== void 0 && (!n || fI(this, this[r], r, n)));
            }
            return !1;
        }
        delete(e, n) {
            const r = this;
            let i = !1;
            function s(o) {
                if (o = vx(o), o) {
                    const a = et.findKey(r, o);
                    a && (!n || fI(r, r[a], a, n)) && (delete r[a], i = !0);
                }
            }
            return et.isArray(e) ? e.forEach(s) : s(e), i;
        }
        clear(e) {
            const n = Object.keys(this);
            let r = n.length, i = !1;
            for(; r--;){
                const s = n[r];
                (!e || fI(this, this[s], s, e, !0)) && (delete this[s], i = !0);
            }
            return i;
        }
        normalize(e) {
            const n = this, r = {};
            return et.forEach(this, (i, s)=>{
                const o = et.findKey(r, s);
                if (o) {
                    n[o] = ZS(i), delete n[s];
                    return;
                }
                const a = e ? cY(s) : String(s).trim();
                a !== s && delete n[s], n[a] = ZS(i), r[a] = !0;
            }), this;
        }
        concat(...e) {
            return this.constructor.concat(this, ...e);
        }
        toJSON(e) {
            const n = Object.create(null);
            return et.forEach(this, (r, i)=>{
                r != null && r !== !1 && (n[i] = e && et.isArray(r) ? r.join(", ") : r);
            }), n;
        }
        [Symbol.iterator]() {
            return Object.entries(this.toJSON())[Symbol.iterator]();
        }
        toString() {
            return Object.entries(this.toJSON()).map(([e, n])=>e + ": " + n).join(`
`);
        }
        get [Symbol.toStringTag]() {
            return "AxiosHeaders";
        }
        static from(e) {
            return e instanceof this ? e : new this(e);
        }
        static concat(e, ...n) {
            const r = new this(e);
            return n.forEach((i)=>r.set(i)), r;
        }
        static accessor(e) {
            const r = (this[hD] = this[hD] = {
                accessors: {}
            }).accessors, i = this.prototype;
            function s(o) {
                const a = vx(o);
                r[a] || (uY(i, o), r[a] = !0);
            }
            return et.isArray(e) ? e.forEach(s) : s(e), this;
        }
    };
    ra.accessor([
        "Content-Type",
        "Content-Length",
        "Accept",
        "Accept-Encoding",
        "User-Agent",
        "Authorization"
    ]);
    et.reduceDescriptors(ra.prototype, ({ value: t }, e)=>{
        let n = e[0].toUpperCase() + e.slice(1);
        return {
            get: ()=>t,
            set (r) {
                this[n] = r;
            }
        };
    });
    et.freezeMethods(ra);
    function hI(t, e) {
        const n = this || Bb, r = e || n, i = ra.from(r.headers);
        let s = r.data;
        return et.forEach(t, function(a) {
            s = a.call(n, s, i.normalize(), e ? e.status : void 0);
        }), i.normalize(), s;
    }
    function EV(t) {
        return !!(t && t.__CANCEL__);
    }
    function ov(t, e, n) {
        Rn.call(this, t ?? "canceled", Rn.ERR_CANCELED, e, n), this.name = "CanceledError";
    }
    et.inherits(ov, Rn, {
        __CANCEL__: !0
    });
    function MV(t, e, n) {
        const r = n.config.validateStatus;
        !n.status || !r || r(n.status) ? t(n) : e(new Rn("Request failed with status code " + n.status, [
            Rn.ERR_BAD_REQUEST,
            Rn.ERR_BAD_RESPONSE
        ][Math.floor(n.status / 100) - 4], n.config, n.request, n));
    }
    function dY(t) {
        const e = /^([-+\w]{1,25})(:?\/\/|:)/.exec(t);
        return e && e[1] || "";
    }
    function fY(t, e) {
        t = t || 10;
        const n = new Array(t), r = new Array(t);
        let i = 0, s = 0, o;
        return e = e !== void 0 ? e : 1e3, function(l) {
            const c = Date.now(), u = r[s];
            o || (o = c), n[i] = l, r[i] = c;
            let f = s, p = 0;
            for(; f !== i;)p += n[f++], f = f % t;
            if (i = (i + 1) % t, i === s && (s = (s + 1) % t), c - o < e) return;
            const g = u && c - u;
            return g ? Math.round(p * 1e3 / g) : void 0;
        };
    }
    function hY(t, e) {
        let n = 0, r = 1e3 / e, i, s;
        const o = (c, u = Date.now())=>{
            n = u, i = null, s && (clearTimeout(s), s = null), t.apply(null, c);
        };
        return [
            (...c)=>{
                const u = Date.now(), f = u - n;
                f >= r ? o(c, u) : (i = c, s || (s = setTimeout(()=>{
                    s = null, o(i);
                }, r - f)));
            },
            ()=>i && o(i)
        ];
    }
    const Z1 = (t, e, n = 3)=>{
        let r = 0;
        const i = fY(50, 250);
        return hY((s)=>{
            const o = s.loaded, a = s.lengthComputable ? s.total : void 0, l = o - r, c = i(l), u = o <= a;
            r = o;
            const f = {
                loaded: o,
                total: a,
                progress: a ? o / a : void 0,
                bytes: l,
                rate: c || void 0,
                estimated: c && a && u ? (a - o) / c : void 0,
                event: s,
                lengthComputable: a != null,
                [e ? "download" : "upload"]: !0
            };
            t(f);
        }, n);
    }, pD = (t, e)=>{
        const n = t != null;
        return [
            (r)=>e[0]({
                    lengthComputable: n,
                    total: t,
                    loaded: r
                }),
            e[1]
        ];
    }, mD = (t)=>(...e)=>et.asap(()=>t(...e)), pY = qs.hasStandardBrowserEnv ? ((t, e)=>(n)=>(n = new URL(n, qs.origin), t.protocol === n.protocol && t.host === n.host && (e || t.port === n.port)))(new URL(qs.origin), qs.navigator && /(msie|trident)/i.test(qs.navigator.userAgent)) : ()=>!0, mY = qs.hasStandardBrowserEnv ? {
        write (t, e, n, r, i, s) {
            const o = [
                t + "=" + encodeURIComponent(e)
            ];
            et.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()), et.isString(r) && o.push("path=" + r), et.isString(i) && o.push("domain=" + i), s === !0 && o.push("secure"), document.cookie = o.join("; ");
        },
        read (t) {
            const e = document.cookie.match(new RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
            return e ? decodeURIComponent(e[3]) : null;
        },
        remove (t) {
            this.write(t, "", Date.now() - 864e5);
        }
    } : {
        write () {},
        read () {
            return null;
        },
        remove () {}
    };
    function gY(t) {
        return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(t);
    }
    function yY(t, e) {
        return e ? t.replace(/\/?\/$/, "") + "/" + e.replace(/^\/+/, "") : t;
    }
    function TV(t, e) {
        return t && !gY(e) ? yY(t, e) : e;
    }
    const gD = (t)=>t instanceof ra ? {
            ...t
        } : t;
    function Kp(t, e) {
        e = e || {};
        const n = {};
        function r(c, u, f, p) {
            return et.isPlainObject(c) && et.isPlainObject(u) ? et.merge.call({
                caseless: p
            }, c, u) : et.isPlainObject(u) ? et.merge({}, u) : et.isArray(u) ? u.slice() : u;
        }
        function i(c, u, f, p) {
            if (et.isUndefined(u)) {
                if (!et.isUndefined(c)) return r(void 0, c, f, p);
            } else return r(c, u, f, p);
        }
        function s(c, u) {
            if (!et.isUndefined(u)) return r(void 0, u);
        }
        function o(c, u) {
            if (et.isUndefined(u)) {
                if (!et.isUndefined(c)) return r(void 0, c);
            } else return r(void 0, u);
        }
        function a(c, u, f) {
            if (f in e) return r(c, u);
            if (f in t) return r(void 0, c);
        }
        const l = {
            url: s,
            method: s,
            data: s,
            baseURL: o,
            transformRequest: o,
            transformResponse: o,
            paramsSerializer: o,
            timeout: o,
            timeoutMessage: o,
            withCredentials: o,
            withXSRFToken: o,
            adapter: o,
            responseType: o,
            xsrfCookieName: o,
            xsrfHeaderName: o,
            onUploadProgress: o,
            onDownloadProgress: o,
            decompress: o,
            maxContentLength: o,
            maxBodyLength: o,
            beforeRedirect: o,
            transport: o,
            httpAgent: o,
            httpsAgent: o,
            cancelToken: o,
            socketPath: o,
            responseEncoding: o,
            validateStatus: a,
            headers: (c, u, f)=>i(gD(c), gD(u), f, !0)
        };
        return et.forEach(Object.keys(Object.assign({}, t, e)), function(u) {
            const f = l[u] || i, p = f(t[u], e[u], u);
            et.isUndefined(p) && f !== a || (n[u] = p);
        }), n;
    }
    const CV = (t)=>{
        const e = Kp({}, t);
        let { data: n, withXSRFToken: r, xsrfHeaderName: i, xsrfCookieName: s, headers: o, auth: a } = e;
        e.headers = o = ra.from(o), e.url = wV(TV(e.baseURL, e.url), t.params, t.paramsSerializer), a && o.set("Authorization", "Basic " + btoa((a.username || "") + ":" + (a.password ? unescape(encodeURIComponent(a.password)) : "")));
        let l;
        if (et.isFormData(n)) {
            if (qs.hasStandardBrowserEnv || qs.hasStandardBrowserWebWorkerEnv) o.setContentType(void 0);
            else if ((l = o.getContentType()) !== !1) {
                const [c, ...u] = l ? l.split(";").map((f)=>f.trim()).filter(Boolean) : [];
                o.setContentType([
                    c || "multipart/form-data",
                    ...u
                ].join("; "));
            }
        }
        if (qs.hasStandardBrowserEnv && (r && et.isFunction(r) && (r = r(e)), r || r !== !1 && pY(e.url))) {
            const c = i && s && mY.read(s);
            c && o.set(i, c);
        }
        return e;
    }, vY = typeof XMLHttpRequest < "u", xY = vY && function(t) {
        return new Promise(function(n, r) {
            const i = CV(t);
            let s = i.data;
            const o = ra.from(i.headers).normalize();
            let { responseType: a, onUploadProgress: l, onDownloadProgress: c } = i, u, f, p, g, x;
            function S() {
                g && g(), x && x(), i.cancelToken && i.cancelToken.unsubscribe(u), i.signal && i.signal.removeEventListener("abort", u);
            }
            let _ = new XMLHttpRequest;
            _.open(i.method.toUpperCase(), i.url, !0), _.timeout = i.timeout;
            function b() {
                if (!_) return;
                const E = ra.from("getAllResponseHeaders" in _ && _.getAllResponseHeaders()), k = {
                    data: !a || a === "text" || a === "json" ? _.responseText : _.response,
                    status: _.status,
                    statusText: _.statusText,
                    headers: E,
                    config: t,
                    request: _
                };
                MV(function(D) {
                    n(D), S();
                }, function(D) {
                    r(D), S();
                }, k), _ = null;
            }
            "onloadend" in _ ? _.onloadend = b : _.onreadystatechange = function() {
                !_ || _.readyState !== 4 || _.status === 0 && !(_.responseURL && _.responseURL.indexOf("file:") === 0) || setTimeout(b);
            }, _.onabort = function() {
                _ && (r(new Rn("Request aborted", Rn.ECONNABORTED, t, _)), _ = null);
            }, _.onerror = function() {
                r(new Rn("Network Error", Rn.ERR_NETWORK, t, _)), _ = null;
            }, _.ontimeout = function() {
                let T = i.timeout ? "timeout of " + i.timeout + "ms exceeded" : "timeout exceeded";
                const k = i.transitional || _V;
                i.timeoutErrorMessage && (T = i.timeoutErrorMessage), r(new Rn(T, k.clarifyTimeoutError ? Rn.ETIMEDOUT : Rn.ECONNABORTED, t, _)), _ = null;
            }, s === void 0 && o.setContentType(null), "setRequestHeader" in _ && et.forEach(o.toJSON(), function(T, k) {
                _.setRequestHeader(k, T);
            }), et.isUndefined(i.withCredentials) || (_.withCredentials = !!i.withCredentials), a && a !== "json" && (_.responseType = i.responseType), c && ([p, x] = Z1(c, !0), _.addEventListener("progress", p)), l && _.upload && ([f, g] = Z1(l), _.upload.addEventListener("progress", f), _.upload.addEventListener("loadend", g)), (i.cancelToken || i.signal) && (u = (E)=>{
                _ && (r(!E || E.type ? new ov(null, t, _) : E), _.abort(), _ = null);
            }, i.cancelToken && i.cancelToken.subscribe(u), i.signal && (i.signal.aborted ? u() : i.signal.addEventListener("abort", u)));
            const M = dY(i.url);
            if (M && qs.protocols.indexOf(M) === -1) {
                r(new Rn("Unsupported protocol " + M + ":", Rn.ERR_BAD_REQUEST, t));
                return;
            }
            _.send(s || null);
        });
    }, bY = (t, e)=>{
        const { length: n } = t = t ? t.filter(Boolean) : [];
        if (e || n) {
            let r = new AbortController, i;
            const s = function(c) {
                if (!i) {
                    i = !0, a();
                    const u = c instanceof Error ? c : this.reason;
                    r.abort(u instanceof Rn ? u : new ov(u instanceof Error ? u.message : u));
                }
            };
            let o = e && setTimeout(()=>{
                o = null, s(new Rn(`timeout ${e} of ms exceeded`, Rn.ETIMEDOUT));
            }, e);
            const a = ()=>{
                t && (o && clearTimeout(o), o = null, t.forEach((c)=>{
                    c.unsubscribe ? c.unsubscribe(s) : c.removeEventListener("abort", s);
                }), t = null);
            };
            t.forEach((c)=>c.addEventListener("abort", s));
            const { signal: l } = r;
            return l.unsubscribe = ()=>et.asap(a), l;
        }
    }, wY = function*(t, e) {
        let n = t.byteLength;
        if (n < e) {
            yield t;
            return;
        }
        let r = 0, i;
        for(; r < n;)i = r + e, yield t.slice(r, i), r = i;
    }, _Y = async function*(t, e) {
        for await (const n of SY(t))yield* wY(n, e);
    }, SY = async function*(t) {
        if (t[Symbol.asyncIterator]) {
            yield* t;
            return;
        }
        const e = t.getReader();
        try {
            for(;;){
                const { done: n, value: r } = await e.read();
                if (n) break;
                yield r;
            }
        } finally{
            await e.cancel();
        }
    }, yD = (t, e, n, r)=>{
        const i = _Y(t, e);
        let s = 0, o, a = (l)=>{
            o || (o = !0, r && r(l));
        };
        return new ReadableStream({
            async pull (l) {
                try {
                    const { done: c, value: u } = await i.next();
                    if (c) {
                        a(), l.close();
                        return;
                    }
                    let f = u.byteLength;
                    if (n) {
                        let p = s += f;
                        n(p);
                    }
                    l.enqueue(new Uint8Array(u));
                } catch (c) {
                    throw a(c), c;
                }
            },
            cancel (l) {
                return a(l), i.return();
            }
        }, {
            highWaterMark: 2
        });
    }, KM = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", IV = KM && typeof ReadableStream == "function", EY = KM && (typeof TextEncoder == "function" ? ((t)=>(e)=>t.encode(e))(new TextEncoder) : async (t)=>new Uint8Array(await new Response(t).arrayBuffer())), RV = (t, ...e)=>{
        try {
            return !!t(...e);
        } catch  {
            return !1;
        }
    }, MY = IV && RV(()=>{
        let t = !1;
        const e = new Request(qs.origin, {
            body: new ReadableStream,
            method: "POST",
            get duplex () {
                return t = !0, "half";
            }
        }).headers.has("Content-Type");
        return t && !e;
    }), vD = 64 * 1024, iP = IV && RV(()=>et.isReadableStream(new Response("").body)), J1 = {
        stream: iP && ((t)=>t.body)
    };
    KM && ((t)=>{
        [
            "text",
            "arrayBuffer",
            "blob",
            "formData",
            "stream"
        ].forEach((e)=>{
            !J1[e] && (J1[e] = et.isFunction(t[e]) ? (n)=>n[e]() : (n, r)=>{
                throw new Rn(`Response type '${e}' is not supported`, Rn.ERR_NOT_SUPPORT, r);
            });
        });
    })(new Response);
    const TY = async (t)=>{
        if (t == null) return 0;
        if (et.isBlob(t)) return t.size;
        if (et.isSpecCompliantForm(t)) return (await new Request(qs.origin, {
            method: "POST",
            body: t
        }).arrayBuffer()).byteLength;
        if (et.isArrayBufferView(t) || et.isArrayBuffer(t)) return t.byteLength;
        if (et.isURLSearchParams(t) && (t = t + ""), et.isString(t)) return (await EY(t)).byteLength;
    }, CY = async (t, e)=>{
        const n = et.toFiniteNumber(t.getContentLength());
        return n ?? TY(e);
    }, IY = KM && (async (t)=>{
        let { url: e, method: n, data: r, signal: i, cancelToken: s, timeout: o, onDownloadProgress: a, onUploadProgress: l, responseType: c, headers: u, withCredentials: f = "same-origin", fetchOptions: p } = CV(t);
        c = c ? (c + "").toLowerCase() : "text";
        let g = bY([
            i,
            s && s.toAbortSignal()
        ], o), x;
        const S = g && g.unsubscribe && (()=>{
            g.unsubscribe();
        });
        let _;
        try {
            if (l && MY && n !== "get" && n !== "head" && (_ = await CY(u, r)) !== 0) {
                let k = new Request(e, {
                    method: "POST",
                    body: r,
                    duplex: "half"
                }), N;
                if (et.isFormData(r) && (N = k.headers.get("content-type")) && u.setContentType(N), k.body) {
                    const [D, L] = pD(_, Z1(mD(l)));
                    r = yD(k.body, vD, D, L);
                }
            }
            et.isString(f) || (f = f ? "include" : "omit");
            const b = "credentials" in Request.prototype;
            x = new Request(e, {
                ...p,
                signal: g,
                method: n.toUpperCase(),
                headers: u.normalize().toJSON(),
                body: r,
                duplex: "half",
                credentials: b ? f : void 0
            });
            let M = await fetch(x);
            const E = iP && (c === "stream" || c === "response");
            if (iP && (a || E && S)) {
                const k = {};
                [
                    "status",
                    "statusText",
                    "headers"
                ].forEach((R)=>{
                    k[R] = M[R];
                });
                const N = et.toFiniteNumber(M.headers.get("content-length")), [D, L] = a && pD(N, Z1(mD(a), !0)) || [];
                M = new Response(yD(M.body, vD, D, ()=>{
                    L && L(), S && S();
                }), k);
            }
            c = c || "text";
            let T = await J1[et.findKey(J1, c) || "text"](M, t);
            return !E && S && S(), await new Promise((k, N)=>{
                MV(k, N, {
                    data: T,
                    headers: ra.from(M.headers),
                    status: M.status,
                    statusText: M.statusText,
                    config: t,
                    request: x
                });
            });
        } catch (b) {
            throw S && S(), b && b.name === "TypeError" && /fetch/i.test(b.message) ? Object.assign(new Rn("Network Error", Rn.ERR_NETWORK, t, x), {
                cause: b.cause || b
            }) : Rn.from(b, b && b.code, t, x);
        }
    }), sP = {
        http: WK,
        xhr: xY,
        fetch: IY
    };
    et.forEach(sP, (t, e)=>{
        if (t) {
            try {
                Object.defineProperty(t, "name", {
                    value: e
                });
            } catch  {}
            Object.defineProperty(t, "adapterName", {
                value: e
            });
        }
    });
    const xD = (t)=>`- ${t}`, RY = (t)=>et.isFunction(t) || t === null || t === !1, AV = {
        getAdapter: (t)=>{
            t = et.isArray(t) ? t : [
                t
            ];
            const { length: e } = t;
            let n, r;
            const i = {};
            for(let s = 0; s < e; s++){
                n = t[s];
                let o;
                if (r = n, !RY(n) && (r = sP[(o = String(n)).toLowerCase()], r === void 0)) throw new Rn(`Unknown adapter '${o}'`);
                if (r) break;
                i[o || "#" + s] = r;
            }
            if (!r) {
                const s = Object.entries(i).map(([a, l])=>`adapter ${a} ` + (l === !1 ? "is not supported by the environment" : "is not available in the build"));
                let o = e ? s.length > 1 ? `since :
` + s.map(xD).join(`
`) : " " + xD(s[0]) : "as no adapter specified";
                throw new Rn("There is no suitable adapter to dispatch the request " + o, "ERR_NOT_SUPPORT");
            }
            return r;
        },
        adapters: sP
    };
    function pI(t) {
        if (t.cancelToken && t.cancelToken.throwIfRequested(), t.signal && t.signal.aborted) throw new ov(null, t);
    }
    function bD(t) {
        return pI(t), t.headers = ra.from(t.headers), t.data = hI.call(t, t.transformRequest), [
            "post",
            "put",
            "patch"
        ].indexOf(t.method) !== -1 && t.headers.setContentType("application/x-www-form-urlencoded", !1), AV.getAdapter(t.adapter || Bb.adapter)(t).then(function(r) {
            return pI(t), r.data = hI.call(t, t.transformResponse, r), r.headers = ra.from(r.headers), r;
        }, function(r) {
            return EV(r) || (pI(t), r && r.response && (r.response.data = hI.call(t, t.transformResponse, r.response), r.response.headers = ra.from(r.response.headers))), Promise.reject(r);
        });
    }
    const NV = "1.7.9", YM = {};
    [
        "object",
        "boolean",
        "number",
        "function",
        "string",
        "symbol"
    ].forEach((t, e)=>{
        YM[t] = function(r) {
            return typeof r === t || "a" + (e < 1 ? "n " : " ") + t;
        };
    });
    const wD = {};
    YM.transitional = function(e, n, r) {
        function i(s, o) {
            return "[Axios v" + NV + "] Transitional option '" + s + "'" + o + (r ? ". " + r : "");
        }
        return (s, o, a)=>{
            if (e === !1) throw new Rn(i(o, " has been removed" + (n ? " in " + n : "")), Rn.ERR_DEPRECATED);
            return n && !wD[o] && (wD[o] = !0, console.warn(i(o, " has been deprecated since v" + n + " and will be removed in the near future"))), e ? e(s, o, a) : !0;
        };
    };
    YM.spelling = function(e) {
        return (n, r)=>(console.warn(`${r} is likely a misspelling of ${e}`), !0);
    };
    function AY(t, e, n) {
        if (typeof t != "object") throw new Rn("options must be an object", Rn.ERR_BAD_OPTION_VALUE);
        const r = Object.keys(t);
        let i = r.length;
        for(; i-- > 0;){
            const s = r[i], o = e[s];
            if (o) {
                const a = t[s], l = a === void 0 || o(a, s, t);
                if (l !== !0) throw new Rn("option " + s + " must be " + l, Rn.ERR_BAD_OPTION_VALUE);
                continue;
            }
            if (n !== !0) throw new Rn("Unknown option " + s, Rn.ERR_BAD_OPTION);
        }
    }
    const JS = {
        assertOptions: AY,
        validators: YM
    }, Tc = JS.validators;
    let Fp = class {
        constructor(e){
            this.defaults = e, this.interceptors = {
                request: new fD,
                response: new fD
            };
        }
        async request(e, n) {
            try {
                return await this._request(e, n);
            } catch (r) {
                if (r instanceof Error) {
                    let i = {};
                    Error.captureStackTrace ? Error.captureStackTrace(i) : i = new Error;
                    const s = i.stack ? i.stack.replace(/^.+\n/, "") : "";
                    try {
                        r.stack ? s && !String(r.stack).endsWith(s.replace(/^.+\n.+\n/, "")) && (r.stack += `
` + s) : r.stack = s;
                    } catch  {}
                }
                throw r;
            }
        }
        _request(e, n) {
            typeof e == "string" ? (n = n || {}, n.url = e) : n = e || {}, n = Kp(this.defaults, n);
            const { transitional: r, paramsSerializer: i, headers: s } = n;
            r !== void 0 && JS.assertOptions(r, {
                silentJSONParsing: Tc.transitional(Tc.boolean),
                forcedJSONParsing: Tc.transitional(Tc.boolean),
                clarifyTimeoutError: Tc.transitional(Tc.boolean)
            }, !1), i != null && (et.isFunction(i) ? n.paramsSerializer = {
                serialize: i
            } : JS.assertOptions(i, {
                encode: Tc.function,
                serialize: Tc.function
            }, !0)), JS.assertOptions(n, {
                baseUrl: Tc.spelling("baseURL"),
                withXsrfToken: Tc.spelling("withXSRFToken")
            }, !0), n.method = (n.method || this.defaults.method || "get").toLowerCase();
            let o = s && et.merge(s.common, s[n.method]);
            s && et.forEach([
                "delete",
                "get",
                "head",
                "post",
                "put",
                "patch",
                "common"
            ], (x)=>{
                delete s[x];
            }), n.headers = ra.concat(o, s);
            const a = [];
            let l = !0;
            this.interceptors.request.forEach(function(S) {
                typeof S.runWhen == "function" && S.runWhen(n) === !1 || (l = l && S.synchronous, a.unshift(S.fulfilled, S.rejected));
            });
            const c = [];
            this.interceptors.response.forEach(function(S) {
                c.push(S.fulfilled, S.rejected);
            });
            let u, f = 0, p;
            if (!l) {
                const x = [
                    bD.bind(this),
                    void 0
                ];
                for(x.unshift.apply(x, a), x.push.apply(x, c), p = x.length, u = Promise.resolve(n); f < p;)u = u.then(x[f++], x[f++]);
                return u;
            }
            p = a.length;
            let g = n;
            for(f = 0; f < p;){
                const x = a[f++], S = a[f++];
                try {
                    g = x(g);
                } catch (_) {
                    S.call(this, _);
                    break;
                }
            }
            try {
                u = bD.call(this, g);
            } catch (x) {
                return Promise.reject(x);
            }
            for(f = 0, p = c.length; f < p;)u = u.then(c[f++], c[f++]);
            return u;
        }
        getUri(e) {
            e = Kp(this.defaults, e);
            const n = TV(e.baseURL, e.url);
            return wV(n, e.params, e.paramsSerializer);
        }
    };
    et.forEach([
        "delete",
        "get",
        "head",
        "options"
    ], function(e) {
        Fp.prototype[e] = function(n, r) {
            return this.request(Kp(r || {}, {
                method: e,
                url: n,
                data: (r || {}).data
            }));
        };
    });
    et.forEach([
        "post",
        "put",
        "patch"
    ], function(e) {
        function n(r) {
            return function(s, o, a) {
                return this.request(Kp(a || {}, {
                    method: e,
                    headers: r ? {
                        "Content-Type": "multipart/form-data"
                    } : {},
                    url: s,
                    data: o
                }));
            };
        }
        Fp.prototype[e] = n(), Fp.prototype[e + "Form"] = n(!0);
    });
    let NY = class PV {
        constructor(e){
            if (typeof e != "function") throw new TypeError("executor must be a function.");
            let n;
            this.promise = new Promise(function(s) {
                n = s;
            });
            const r = this;
            this.promise.then((i)=>{
                if (!r._listeners) return;
                let s = r._listeners.length;
                for(; s-- > 0;)r._listeners[s](i);
                r._listeners = null;
            }), this.promise.then = (i)=>{
                let s;
                const o = new Promise((a)=>{
                    r.subscribe(a), s = a;
                }).then(i);
                return o.cancel = function() {
                    r.unsubscribe(s);
                }, o;
            }, e(function(s, o, a) {
                r.reason || (r.reason = new ov(s, o, a), n(r.reason));
            });
        }
        throwIfRequested() {
            if (this.reason) throw this.reason;
        }
        subscribe(e) {
            if (this.reason) {
                e(this.reason);
                return;
            }
            this._listeners ? this._listeners.push(e) : this._listeners = [
                e
            ];
        }
        unsubscribe(e) {
            if (!this._listeners) return;
            const n = this._listeners.indexOf(e);
            n !== -1 && this._listeners.splice(n, 1);
        }
        toAbortSignal() {
            const e = new AbortController, n = (r)=>{
                e.abort(r);
            };
            return this.subscribe(n), e.signal.unsubscribe = ()=>this.unsubscribe(n), e.signal;
        }
        static source() {
            let e;
            return {
                token: new PV(function(i) {
                    e = i;
                }),
                cancel: e
            };
        }
    };
    function PY(t) {
        return function(n) {
            return t.apply(null, n);
        };
    }
    function kY(t) {
        return et.isObject(t) && t.isAxiosError === !0;
    }
    const oP = {
        Continue: 100,
        SwitchingProtocols: 101,
        Processing: 102,
        EarlyHints: 103,
        Ok: 200,
        Created: 201,
        Accepted: 202,
        NonAuthoritativeInformation: 203,
        NoContent: 204,
        ResetContent: 205,
        PartialContent: 206,
        MultiStatus: 207,
        AlreadyReported: 208,
        ImUsed: 226,
        MultipleChoices: 300,
        MovedPermanently: 301,
        Found: 302,
        SeeOther: 303,
        NotModified: 304,
        UseProxy: 305,
        Unused: 306,
        TemporaryRedirect: 307,
        PermanentRedirect: 308,
        BadRequest: 400,
        Unauthorized: 401,
        PaymentRequired: 402,
        Forbidden: 403,
        NotFound: 404,
        MethodNotAllowed: 405,
        NotAcceptable: 406,
        ProxyAuthenticationRequired: 407,
        RequestTimeout: 408,
        Conflict: 409,
        Gone: 410,
        LengthRequired: 411,
        PreconditionFailed: 412,
        PayloadTooLarge: 413,
        UriTooLong: 414,
        UnsupportedMediaType: 415,
        RangeNotSatisfiable: 416,
        ExpectationFailed: 417,
        ImATeapot: 418,
        MisdirectedRequest: 421,
        UnprocessableEntity: 422,
        Locked: 423,
        FailedDependency: 424,
        TooEarly: 425,
        UpgradeRequired: 426,
        PreconditionRequired: 428,
        TooManyRequests: 429,
        RequestHeaderFieldsTooLarge: 431,
        UnavailableForLegalReasons: 451,
        InternalServerError: 500,
        NotImplemented: 501,
        BadGateway: 502,
        ServiceUnavailable: 503,
        GatewayTimeout: 504,
        HttpVersionNotSupported: 505,
        VariantAlsoNegotiates: 506,
        InsufficientStorage: 507,
        LoopDetected: 508,
        NotExtended: 510,
        NetworkAuthenticationRequired: 511
    };
    Object.entries(oP).forEach(([t, e])=>{
        oP[e] = t;
    });
    function kV(t) {
        const e = new Fp(t), n = cV(Fp.prototype.request, e);
        return et.extend(n, Fp.prototype, e, {
            allOwnKeys: !0
        }), et.extend(n, e, null, {
            allOwnKeys: !0
        }), n.create = function(i) {
            return kV(Kp(t, i));
        }, n;
    }
    const Ci = kV(Bb);
    Ci.Axios = Fp;
    Ci.CanceledError = ov;
    Ci.CancelToken = NY;
    Ci.isCancel = EV;
    Ci.VERSION = NV;
    Ci.toFormData = XM;
    Ci.AxiosError = Rn;
    Ci.Cancel = Ci.CanceledError;
    Ci.all = function(e) {
        return Promise.all(e);
    };
    Ci.spread = PY;
    Ci.isAxiosError = kY;
    Ci.mergeConfig = Kp;
    Ci.AxiosHeaders = ra;
    Ci.formToJSON = (t)=>SV(et.isHTMLForm(t) ? new FormData(t) : t);
    Ci.getAdapter = AV.getAdapter;
    Ci.HttpStatusCode = oP;
    Ci.default = Ci;
    const { Axios: ETe, AxiosError: OY, CanceledError: MTe, isCancel: TTe, CancelToken: CTe, VERSION: ITe, all: RTe, Cancel: ATe, isAxiosError: NTe, spread: PTe, toFormData: kTe, AxiosHeaders: OTe, HttpStatusCode: LTe, formToJSON: DTe, getAdapter: FTe, mergeConfig: jTe } = Ci, Uk = ({ error: t, schema: e, onError: n })=>{
        if (t instanceof OY) {
            const i = e.safeParse(t.response?.data);
            return i.success && n({
                error: t,
                data: i.data
            }), i.success;
        }
        return !1;
    };
    var mI, _D;
    function LY() {
        if (_D) return mI;
        _D = 1;
        function t(r) {
            this.queue = [], this.timeslotRequests = 0, this.interceptors = {
                request: null,
                response: null
            }, this.handleRequest = this.handleRequest.bind(this), this.handleResponse = this.handleResponse.bind(this), this.enable(r);
        }
        t.prototype.getMaxRPS = function() {
            var r = this.perMilliseconds / 1e3;
            return this.maxRequests / r;
        }, t.prototype.getQueue = function() {
            return this.queue;
        }, t.prototype.setMaxRPS = function(r) {
            this.setRateLimitOptions({
                maxRequests: r,
                perMilliseconds: 1e3
            });
        }, t.prototype.setRateLimitOptions = function(r) {
            r.maxRPS ? this.setMaxRPS(r.maxRPS) : (this.perMilliseconds = r.perMilliseconds, this.maxRequests = r.maxRequests);
        }, t.prototype.enable = function(r) {
            function i(s) {
                return Promise.reject(s);
            }
            this.interceptors.request = r.interceptors.request.use(this.handleRequest, i), this.interceptors.response = r.interceptors.response.use(this.handleResponse, i);
        };
        function e(r) {
            r.cancelToken && r.cancelToken.throwIfRequested();
        }
        t.prototype.handleRequest = function(r) {
            return new Promise(function(i, s) {
                this.push({
                    resolve: function() {
                        try {
                            e(r);
                        } catch (o) {
                            return s(o), !1;
                        }
                        return i(r), !0;
                    }
                });
            }.bind(this));
        }, t.prototype.handleResponse = function(r) {
            return this.shift(), r;
        }, t.prototype.push = function(r) {
            this.queue.push(r), this.shiftInitial();
        }, t.prototype.shiftInitial = function() {
            setTimeout(function() {
                return this.shift();
            }.bind(this), 0);
        }, t.prototype.shift = function() {
            if (this.queue.length) {
                if (this.timeslotRequests === this.maxRequests) {
                    this.timeoutId && typeof this.timeoutId.ref == "function" && this.timeoutId.ref();
                    return;
                }
                var r = this.queue.shift(), i = r.resolve();
                if (this.timeslotRequests === 0 && (this.timeoutId = setTimeout(function() {
                    this.timeslotRequests = 0, this.shift();
                }.bind(this), this.perMilliseconds), typeof this.timeoutId.unref == "function" && this.queue.length === 0 && this.timeoutId.unref()), !i) {
                    this.shift();
                    return;
                }
                this.timeslotRequests += 1;
            }
        };
        function n(r, i) {
            var s = new t(r);
            return s.setRateLimitOptions(i), r.getQueue = t.prototype.getQueue.bind(s), r.getMaxRPS = t.prototype.getMaxRPS.bind(s), r.setMaxRPS = t.prototype.setMaxRPS.bind(s), r.setRateLimitOptions = t.prototype.setRateLimitOptions.bind(s), r;
        }
        return mI = n, mI;
    }
    var DY = LY();
    const FY = Ao(DY), jY = ({ instance: t, limit: e } = {})=>FY(t || Ci, e || {
            maxRequests: 5,
            perMilliseconds: 100
        }), zk = "-", BY = (t)=>{
        const e = zY(t), { conflictingClassGroups: n, conflictingClassGroupModifiers: r } = t;
        return {
            getClassGroupId: (o)=>{
                const a = o.split(zk);
                return a[0] === "" && a.length !== 1 && a.shift(), OV(a, e) || UY(o);
            },
            getConflictingClassGroupIds: (o, a)=>{
                const l = n[o] || [];
                return a && r[o] ? [
                    ...l,
                    ...r[o]
                ] : l;
            }
        };
    }, OV = (t, e)=>{
        if (t.length === 0) return e.classGroupId;
        const n = t[0], r = e.nextPart.get(n), i = r ? OV(t.slice(1), r) : void 0;
        if (i) return i;
        if (e.validators.length === 0) return;
        const s = t.join(zk);
        return e.validators.find(({ validator: o })=>o(s))?.classGroupId;
    }, SD = /^\[(.+)\]$/, UY = (t)=>{
        if (SD.test(t)) {
            const e = SD.exec(t)[1], n = e?.substring(0, e.indexOf(":"));
            if (n) return "arbitrary.." + n;
        }
    }, zY = (t)=>{
        const { theme: e, classGroups: n } = t, r = {
            nextPart: new Map,
            validators: []
        };
        for(const i in n)aP(n[i], r, i, e);
        return r;
    }, aP = (t, e, n, r)=>{
        t.forEach((i)=>{
            if (typeof i == "string") {
                const s = i === "" ? e : ED(e, i);
                s.classGroupId = n;
                return;
            }
            if (typeof i == "function") {
                if (VY(i)) {
                    aP(i(r), e, n, r);
                    return;
                }
                e.validators.push({
                    validator: i,
                    classGroupId: n
                });
                return;
            }
            Object.entries(i).forEach(([s, o])=>{
                aP(o, ED(e, s), n, r);
            });
        });
    }, ED = (t, e)=>{
        let n = t;
        return e.split(zk).forEach((r)=>{
            n.nextPart.has(r) || n.nextPart.set(r, {
                nextPart: new Map,
                validators: []
            }), n = n.nextPart.get(r);
        }), n;
    }, VY = (t)=>t.isThemeGetter, WY = (t)=>{
        if (t < 1) return {
            get: ()=>{},
            set: ()=>{}
        };
        let e = 0, n = new Map, r = new Map;
        const i = (s, o)=>{
            n.set(s, o), e++, e > t && (e = 0, r = n, n = new Map);
        };
        return {
            get (s) {
                let o = n.get(s);
                if (o !== void 0) return o;
                if ((o = r.get(s)) !== void 0) return i(s, o), o;
            },
            set (s, o) {
                n.has(s) ? n.set(s, o) : i(s, o);
            }
        };
    }, lP = "!", cP = ":", qY = cP.length, HY = (t)=>{
        const { prefix: e, experimentalParseClassName: n } = t;
        let r = (i)=>{
            const s = [];
            let o = 0, a = 0, l = 0, c;
            for(let x = 0; x < i.length; x++){
                let S = i[x];
                if (o === 0 && a === 0) {
                    if (S === cP) {
                        s.push(i.slice(l, x)), l = x + qY;
                        continue;
                    }
                    if (S === "/") {
                        c = x;
                        continue;
                    }
                }
                S === "[" ? o++ : S === "]" ? o-- : S === "(" ? a++ : S === ")" && a--;
            }
            const u = s.length === 0 ? i : i.substring(l), f = $Y(u), p = f !== u, g = c && c > l ? c - l : void 0;
            return {
                modifiers: s,
                hasImportantModifier: p,
                baseClassName: f,
                maybePostfixModifierPosition: g
            };
        };
        if (e) {
            const i = e + cP, s = r;
            r = (o)=>o.startsWith(i) ? s(o.substring(i.length)) : {
                    isExternal: !0,
                    modifiers: [],
                    hasImportantModifier: !1,
                    baseClassName: o,
                    maybePostfixModifierPosition: void 0
                };
        }
        if (n) {
            const i = r;
            r = (s)=>n({
                    className: s,
                    parseClassName: i
                });
        }
        return r;
    }, $Y = (t)=>t.endsWith(lP) ? t.substring(0, t.length - 1) : t.startsWith(lP) ? t.substring(1) : t, GY = (t)=>{
        const e = Object.fromEntries(t.orderSensitiveModifiers.map((r)=>[
                r,
                !0
            ]));
        return (r)=>{
            if (r.length <= 1) return r;
            const i = [];
            let s = [];
            return r.forEach((o)=>{
                o[0] === "[" || e[o] ? (i.push(...s.sort(), o), s = []) : s.push(o);
            }), i.push(...s.sort()), i;
        };
    }, XY = (t)=>({
            cache: WY(t.cacheSize),
            parseClassName: HY(t),
            sortModifiers: GY(t),
            ...BY(t)
        }), KY = /\s+/, YY = (t, e)=>{
        const { parseClassName: n, getClassGroupId: r, getConflictingClassGroupIds: i, sortModifiers: s } = e, o = [], a = t.trim().split(KY);
        let l = "";
        for(let c = a.length - 1; c >= 0; c -= 1){
            const u = a[c], { isExternal: f, modifiers: p, hasImportantModifier: g, baseClassName: x, maybePostfixModifierPosition: S } = n(u);
            if (f) {
                l = u + (l.length > 0 ? " " + l : l);
                continue;
            }
            let _ = !!S, b = r(_ ? x.substring(0, S) : x);
            if (!b) {
                if (!_) {
                    l = u + (l.length > 0 ? " " + l : l);
                    continue;
                }
                if (b = r(x), !b) {
                    l = u + (l.length > 0 ? " " + l : l);
                    continue;
                }
                _ = !1;
            }
            const M = s(p).join(":"), E = g ? M + lP : M, T = E + b;
            if (o.includes(T)) continue;
            o.push(T);
            const k = i(b, _);
            for(let N = 0; N < k.length; ++N){
                const D = k[N];
                o.push(E + D);
            }
            l = u + (l.length > 0 ? " " + l : l);
        }
        return l;
    };
    function ZY() {
        let t = 0, e, n, r = "";
        for(; t < arguments.length;)(e = arguments[t++]) && (n = LV(e)) && (r && (r += " "), r += n);
        return r;
    }
    const LV = (t)=>{
        if (typeof t == "string") return t;
        let e, n = "";
        for(let r = 0; r < t.length; r++)t[r] && (e = LV(t[r])) && (n && (n += " "), n += e);
        return n;
    };
    function JY(t, ...e) {
        let n, r, i, s = o;
        function o(l) {
            const c = e.reduce((u, f)=>f(u), t());
            return n = XY(c), r = n.cache.get, i = n.cache.set, s = a, a(l);
        }
        function a(l) {
            const c = r(l);
            if (c) return c;
            const u = YY(l, n);
            return i(l, u), u;
        }
        return function() {
            return s(ZY.apply(null, arguments));
        };
    }
    const us = (t)=>{
        const e = (n)=>n[t] || [];
        return e.isThemeGetter = !0, e;
    }, DV = /^\[(?:(\w[\w-]*):)?(.+)\]$/i, FV = /^\((?:(\w[\w-]*):)?(.+)\)$/i, QY = /^\d+\/\d+$/, eZ = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, tZ = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, nZ = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, rZ = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, iZ = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, vg = (t)=>QY.test(t), Gn = (t)=>!!t && !Number.isNaN(Number(t)), Zh = (t)=>!!t && Number.isInteger(Number(t)), MD = (t)=>t.endsWith("%") && Gn(t.slice(0, -1)), sf = (t)=>eZ.test(t), sZ = ()=>!0, oZ = (t)=>tZ.test(t) && !nZ.test(t), Vk = ()=>!1, aZ = (t)=>rZ.test(t), lZ = (t)=>iZ.test(t), cZ = (t)=>!Ot(t) && !Lt(t), uZ = (t)=>av(t, UV, Vk), Ot = (t)=>DV.test(t), Jh = (t)=>av(t, zV, oZ), gI = (t)=>av(t, wZ, Gn), dZ = (t)=>av(t, jV, Vk), fZ = (t)=>av(t, BV, lZ), hZ = (t)=>av(t, Vk, aZ), Lt = (t)=>FV.test(t), C_ = (t)=>lv(t, zV), pZ = (t)=>lv(t, _Z), mZ = (t)=>lv(t, jV), gZ = (t)=>lv(t, UV), yZ = (t)=>lv(t, BV), vZ = (t)=>lv(t, SZ, !0), av = (t, e, n)=>{
        const r = DV.exec(t);
        return r ? r[1] ? e(r[1]) : n(r[2]) : !1;
    }, lv = (t, e, n = !1)=>{
        const r = FV.exec(t);
        return r ? r[1] ? e(r[1]) : n : !1;
    }, jV = (t)=>t === "position", xZ = new Set([
        "image",
        "url"
    ]), BV = (t)=>xZ.has(t), bZ = new Set([
        "length",
        "size",
        "percentage"
    ]), UV = (t)=>bZ.has(t), zV = (t)=>t === "length", wZ = (t)=>t === "number", _Z = (t)=>t === "family-name", SZ = (t)=>t === "shadow", EZ = ()=>{
        const t = us("color"), e = us("font"), n = us("text"), r = us("font-weight"), i = us("tracking"), s = us("leading"), o = us("breakpoint"), a = us("container"), l = us("spacing"), c = us("radius"), u = us("shadow"), f = us("inset-shadow"), p = us("drop-shadow"), g = us("blur"), x = us("perspective"), S = us("aspect"), _ = us("ease"), b = us("animate"), M = ()=>[
                "auto",
                "avoid",
                "all",
                "avoid-page",
                "page",
                "left",
                "right",
                "column"
            ], E = ()=>[
                "bottom",
                "center",
                "left",
                "left-bottom",
                "left-top",
                "right",
                "right-bottom",
                "right-top",
                "top"
            ], T = ()=>[
                "auto",
                "hidden",
                "clip",
                "visible",
                "scroll"
            ], k = ()=>[
                "auto",
                "contain",
                "none"
            ], N = ()=>[
                vg,
                "px",
                "full",
                "auto",
                Lt,
                Ot,
                l
            ], D = ()=>[
                Zh,
                "none",
                "subgrid",
                Lt,
                Ot
            ], L = ()=>[
                "auto",
                {
                    span: [
                        "full",
                        Zh,
                        Lt,
                        Ot
                    ]
                },
                Lt,
                Ot
            ], R = ()=>[
                Zh,
                "auto",
                Lt,
                Ot
            ], A = ()=>[
                "auto",
                "min",
                "max",
                "fr",
                Lt,
                Ot
            ], P = ()=>[
                Lt,
                Ot,
                l
            ], B = ()=>[
                "start",
                "end",
                "center",
                "between",
                "around",
                "evenly",
                "stretch",
                "baseline"
            ], U = ()=>[
                "start",
                "end",
                "center",
                "stretch"
            ], j = ()=>[
                Lt,
                Ot,
                l
            ], K = ()=>[
                "px",
                ...j()
            ], q = ()=>[
                "px",
                "auto",
                ...j()
            ], te = ()=>[
                vg,
                "auto",
                "px",
                "full",
                "dvw",
                "dvh",
                "lvw",
                "lvh",
                "svw",
                "svh",
                "min",
                "max",
                "fit",
                Lt,
                Ot,
                l
            ], W = ()=>[
                t,
                Lt,
                Ot
            ], J = ()=>[
                MD,
                Jh
            ], Q = ()=>[
                "",
                "none",
                "full",
                c,
                Lt,
                Ot
            ], Y = ()=>[
                "",
                Gn,
                C_,
                Jh
            ], le = ()=>[
                "solid",
                "dashed",
                "dotted",
                "double"
            ], ue = ()=>[
                "normal",
                "multiply",
                "screen",
                "overlay",
                "darken",
                "lighten",
                "color-dodge",
                "color-burn",
                "hard-light",
                "soft-light",
                "difference",
                "exclusion",
                "hue",
                "saturation",
                "color",
                "luminosity"
            ], ie = ()=>[
                "",
                "none",
                g,
                Lt,
                Ot
            ], he = ()=>[
                "center",
                "top",
                "top-right",
                "right",
                "bottom-right",
                "bottom",
                "bottom-left",
                "left",
                "top-left",
                Lt,
                Ot
            ], ge = ()=>[
                "none",
                Gn,
                Lt,
                Ot
            ], ve = ()=>[
                "none",
                Gn,
                Lt,
                Ot
            ], Ee = ()=>[
                Gn,
                Lt,
                Ot
            ], Ce = ()=>[
                vg,
                "full",
                "px",
                Lt,
                Ot,
                l
            ];
        return {
            cacheSize: 500,
            theme: {
                animate: [
                    "spin",
                    "ping",
                    "pulse",
                    "bounce"
                ],
                aspect: [
                    "video"
                ],
                blur: [
                    sf
                ],
                breakpoint: [
                    sf
                ],
                color: [
                    sZ
                ],
                container: [
                    sf
                ],
                "drop-shadow": [
                    sf
                ],
                ease: [
                    "in",
                    "out",
                    "in-out"
                ],
                font: [
                    cZ
                ],
                "font-weight": [
                    "thin",
                    "extralight",
                    "light",
                    "normal",
                    "medium",
                    "semibold",
                    "bold",
                    "extrabold",
                    "black"
                ],
                "inset-shadow": [
                    sf
                ],
                leading: [
                    "none",
                    "tight",
                    "snug",
                    "normal",
                    "relaxed",
                    "loose"
                ],
                perspective: [
                    "dramatic",
                    "near",
                    "normal",
                    "midrange",
                    "distant",
                    "none"
                ],
                radius: [
                    sf
                ],
                shadow: [
                    sf
                ],
                spacing: [
                    Gn
                ],
                text: [
                    sf
                ],
                tracking: [
                    "tighter",
                    "tight",
                    "normal",
                    "wide",
                    "wider",
                    "widest"
                ]
            },
            classGroups: {
                aspect: [
                    {
                        aspect: [
                            "auto",
                            "square",
                            vg,
                            Ot,
                            Lt,
                            S
                        ]
                    }
                ],
                container: [
                    "container"
                ],
                columns: [
                    {
                        columns: [
                            Gn,
                            Ot,
                            Lt,
                            a
                        ]
                    }
                ],
                "break-after": [
                    {
                        "break-after": M()
                    }
                ],
                "break-before": [
                    {
                        "break-before": M()
                    }
                ],
                "break-inside": [
                    {
                        "break-inside": [
                            "auto",
                            "avoid",
                            "avoid-page",
                            "avoid-column"
                        ]
                    }
                ],
                "box-decoration": [
                    {
                        "box-decoration": [
                            "slice",
                            "clone"
                        ]
                    }
                ],
                box: [
                    {
                        box: [
                            "border",
                            "content"
                        ]
                    }
                ],
                display: [
                    "block",
                    "inline-block",
                    "inline",
                    "flex",
                    "inline-flex",
                    "table",
                    "inline-table",
                    "table-caption",
                    "table-cell",
                    "table-column",
                    "table-column-group",
                    "table-footer-group",
                    "table-header-group",
                    "table-row-group",
                    "table-row",
                    "flow-root",
                    "grid",
                    "inline-grid",
                    "contents",
                    "list-item",
                    "hidden"
                ],
                sr: [
                    "sr-only",
                    "not-sr-only"
                ],
                float: [
                    {
                        float: [
                            "right",
                            "left",
                            "none",
                            "start",
                            "end"
                        ]
                    }
                ],
                clear: [
                    {
                        clear: [
                            "left",
                            "right",
                            "both",
                            "none",
                            "start",
                            "end"
                        ]
                    }
                ],
                isolation: [
                    "isolate",
                    "isolation-auto"
                ],
                "object-fit": [
                    {
                        object: [
                            "contain",
                            "cover",
                            "fill",
                            "none",
                            "scale-down"
                        ]
                    }
                ],
                "object-position": [
                    {
                        object: [
                            ...E(),
                            Ot,
                            Lt
                        ]
                    }
                ],
                overflow: [
                    {
                        overflow: T()
                    }
                ],
                "overflow-x": [
                    {
                        "overflow-x": T()
                    }
                ],
                "overflow-y": [
                    {
                        "overflow-y": T()
                    }
                ],
                overscroll: [
                    {
                        overscroll: k()
                    }
                ],
                "overscroll-x": [
                    {
                        "overscroll-x": k()
                    }
                ],
                "overscroll-y": [
                    {
                        "overscroll-y": k()
                    }
                ],
                position: [
                    "static",
                    "fixed",
                    "absolute",
                    "relative",
                    "sticky"
                ],
                inset: [
                    {
                        inset: N()
                    }
                ],
                "inset-x": [
                    {
                        "inset-x": N()
                    }
                ],
                "inset-y": [
                    {
                        "inset-y": N()
                    }
                ],
                start: [
                    {
                        start: N()
                    }
                ],
                end: [
                    {
                        end: N()
                    }
                ],
                top: [
                    {
                        top: N()
                    }
                ],
                right: [
                    {
                        right: N()
                    }
                ],
                bottom: [
                    {
                        bottom: N()
                    }
                ],
                left: [
                    {
                        left: N()
                    }
                ],
                visibility: [
                    "visible",
                    "invisible",
                    "collapse"
                ],
                z: [
                    {
                        z: [
                            Zh,
                            "auto",
                            Lt,
                            Ot
                        ]
                    }
                ],
                basis: [
                    {
                        basis: [
                            vg,
                            "full",
                            "auto",
                            Lt,
                            Ot,
                            a,
                            l
                        ]
                    }
                ],
                "flex-direction": [
                    {
                        flex: [
                            "row",
                            "row-reverse",
                            "col",
                            "col-reverse"
                        ]
                    }
                ],
                "flex-wrap": [
                    {
                        flex: [
                            "nowrap",
                            "wrap",
                            "wrap-reverse"
                        ]
                    }
                ],
                flex: [
                    {
                        flex: [
                            Gn,
                            vg,
                            "auto",
                            "initial",
                            "none",
                            Ot
                        ]
                    }
                ],
                grow: [
                    {
                        grow: [
                            "",
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                shrink: [
                    {
                        shrink: [
                            "",
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                order: [
                    {
                        order: [
                            Zh,
                            "first",
                            "last",
                            "none",
                            Lt,
                            Ot
                        ]
                    }
                ],
                "grid-cols": [
                    {
                        "grid-cols": D()
                    }
                ],
                "col-start-end": [
                    {
                        col: L()
                    }
                ],
                "col-start": [
                    {
                        "col-start": R()
                    }
                ],
                "col-end": [
                    {
                        "col-end": R()
                    }
                ],
                "grid-rows": [
                    {
                        "grid-rows": D()
                    }
                ],
                "row-start-end": [
                    {
                        row: L()
                    }
                ],
                "row-start": [
                    {
                        "row-start": R()
                    }
                ],
                "row-end": [
                    {
                        "row-end": R()
                    }
                ],
                "grid-flow": [
                    {
                        "grid-flow": [
                            "row",
                            "col",
                            "dense",
                            "row-dense",
                            "col-dense"
                        ]
                    }
                ],
                "auto-cols": [
                    {
                        "auto-cols": A()
                    }
                ],
                "auto-rows": [
                    {
                        "auto-rows": A()
                    }
                ],
                gap: [
                    {
                        gap: P()
                    }
                ],
                "gap-x": [
                    {
                        "gap-x": P()
                    }
                ],
                "gap-y": [
                    {
                        "gap-y": P()
                    }
                ],
                "justify-content": [
                    {
                        justify: [
                            ...B(),
                            "normal"
                        ]
                    }
                ],
                "justify-items": [
                    {
                        "justify-items": [
                            ...U(),
                            "normal"
                        ]
                    }
                ],
                "justify-self": [
                    {
                        "justify-self": [
                            "auto",
                            ...U()
                        ]
                    }
                ],
                "align-content": [
                    {
                        content: [
                            "normal",
                            ...B()
                        ]
                    }
                ],
                "align-items": [
                    {
                        items: [
                            ...U(),
                            "baseline"
                        ]
                    }
                ],
                "align-self": [
                    {
                        self: [
                            "auto",
                            ...U(),
                            "baseline"
                        ]
                    }
                ],
                "place-content": [
                    {
                        "place-content": B()
                    }
                ],
                "place-items": [
                    {
                        "place-items": [
                            ...U(),
                            "baseline"
                        ]
                    }
                ],
                "place-self": [
                    {
                        "place-self": [
                            "auto",
                            ...U()
                        ]
                    }
                ],
                p: [
                    {
                        p: K()
                    }
                ],
                px: [
                    {
                        px: K()
                    }
                ],
                py: [
                    {
                        py: K()
                    }
                ],
                ps: [
                    {
                        ps: K()
                    }
                ],
                pe: [
                    {
                        pe: K()
                    }
                ],
                pt: [
                    {
                        pt: K()
                    }
                ],
                pr: [
                    {
                        pr: K()
                    }
                ],
                pb: [
                    {
                        pb: K()
                    }
                ],
                pl: [
                    {
                        pl: K()
                    }
                ],
                m: [
                    {
                        m: q()
                    }
                ],
                mx: [
                    {
                        mx: q()
                    }
                ],
                my: [
                    {
                        my: q()
                    }
                ],
                ms: [
                    {
                        ms: q()
                    }
                ],
                me: [
                    {
                        me: q()
                    }
                ],
                mt: [
                    {
                        mt: q()
                    }
                ],
                mr: [
                    {
                        mr: q()
                    }
                ],
                mb: [
                    {
                        mb: q()
                    }
                ],
                ml: [
                    {
                        ml: q()
                    }
                ],
                "space-x": [
                    {
                        "space-x": j()
                    }
                ],
                "space-x-reverse": [
                    "space-x-reverse"
                ],
                "space-y": [
                    {
                        "space-y": j()
                    }
                ],
                "space-y-reverse": [
                    "space-y-reverse"
                ],
                size: [
                    {
                        size: te()
                    }
                ],
                w: [
                    {
                        w: [
                            a,
                            "screen",
                            ...te()
                        ]
                    }
                ],
                "min-w": [
                    {
                        "min-w": [
                            a,
                            "screen",
                            "none",
                            ...te()
                        ]
                    }
                ],
                "max-w": [
                    {
                        "max-w": [
                            a,
                            "screen",
                            "none",
                            "prose",
                            {
                                screen: [
                                    o
                                ]
                            },
                            ...te()
                        ]
                    }
                ],
                h: [
                    {
                        h: [
                            "screen",
                            ...te()
                        ]
                    }
                ],
                "min-h": [
                    {
                        "min-h": [
                            "screen",
                            "none",
                            ...te()
                        ]
                    }
                ],
                "max-h": [
                    {
                        "max-h": [
                            "screen",
                            ...te()
                        ]
                    }
                ],
                "font-size": [
                    {
                        text: [
                            "base",
                            n,
                            C_,
                            Jh
                        ]
                    }
                ],
                "font-smoothing": [
                    "antialiased",
                    "subpixel-antialiased"
                ],
                "font-style": [
                    "italic",
                    "not-italic"
                ],
                "font-weight": [
                    {
                        font: [
                            r,
                            Lt,
                            gI
                        ]
                    }
                ],
                "font-stretch": [
                    {
                        "font-stretch": [
                            "ultra-condensed",
                            "extra-condensed",
                            "condensed",
                            "semi-condensed",
                            "normal",
                            "semi-expanded",
                            "expanded",
                            "extra-expanded",
                            "ultra-expanded",
                            MD,
                            Ot
                        ]
                    }
                ],
                "font-family": [
                    {
                        font: [
                            pZ,
                            Ot,
                            e
                        ]
                    }
                ],
                "fvn-normal": [
                    "normal-nums"
                ],
                "fvn-ordinal": [
                    "ordinal"
                ],
                "fvn-slashed-zero": [
                    "slashed-zero"
                ],
                "fvn-figure": [
                    "lining-nums",
                    "oldstyle-nums"
                ],
                "fvn-spacing": [
                    "proportional-nums",
                    "tabular-nums"
                ],
                "fvn-fraction": [
                    "diagonal-fractions",
                    "stacked-fractions"
                ],
                tracking: [
                    {
                        tracking: [
                            i,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "line-clamp": [
                    {
                        "line-clamp": [
                            Gn,
                            "none",
                            Lt,
                            gI
                        ]
                    }
                ],
                leading: [
                    {
                        leading: [
                            Lt,
                            Ot,
                            s,
                            l
                        ]
                    }
                ],
                "list-image": [
                    {
                        "list-image": [
                            "none",
                            Lt,
                            Ot
                        ]
                    }
                ],
                "list-style-position": [
                    {
                        list: [
                            "inside",
                            "outside"
                        ]
                    }
                ],
                "list-style-type": [
                    {
                        list: [
                            "disc",
                            "decimal",
                            "none",
                            Lt,
                            Ot
                        ]
                    }
                ],
                "text-alignment": [
                    {
                        text: [
                            "left",
                            "center",
                            "right",
                            "justify",
                            "start",
                            "end"
                        ]
                    }
                ],
                "placeholder-color": [
                    {
                        placeholder: W()
                    }
                ],
                "text-color": [
                    {
                        text: W()
                    }
                ],
                "text-decoration": [
                    "underline",
                    "overline",
                    "line-through",
                    "no-underline"
                ],
                "text-decoration-style": [
                    {
                        decoration: [
                            ...le(),
                            "wavy"
                        ]
                    }
                ],
                "text-decoration-thickness": [
                    {
                        decoration: [
                            Gn,
                            "from-font",
                            "auto",
                            Lt,
                            Jh
                        ]
                    }
                ],
                "text-decoration-color": [
                    {
                        decoration: W()
                    }
                ],
                "underline-offset": [
                    {
                        "underline-offset": [
                            Gn,
                            "auto",
                            Lt,
                            Ot
                        ]
                    }
                ],
                "text-transform": [
                    "uppercase",
                    "lowercase",
                    "capitalize",
                    "normal-case"
                ],
                "text-overflow": [
                    "truncate",
                    "text-ellipsis",
                    "text-clip"
                ],
                "text-wrap": [
                    {
                        text: [
                            "wrap",
                            "nowrap",
                            "balance",
                            "pretty"
                        ]
                    }
                ],
                indent: [
                    {
                        indent: [
                            "px",
                            ...j()
                        ]
                    }
                ],
                "vertical-align": [
                    {
                        align: [
                            "baseline",
                            "top",
                            "middle",
                            "bottom",
                            "text-top",
                            "text-bottom",
                            "sub",
                            "super",
                            Lt,
                            Ot
                        ]
                    }
                ],
                whitespace: [
                    {
                        whitespace: [
                            "normal",
                            "nowrap",
                            "pre",
                            "pre-line",
                            "pre-wrap",
                            "break-spaces"
                        ]
                    }
                ],
                break: [
                    {
                        break: [
                            "normal",
                            "words",
                            "all",
                            "keep"
                        ]
                    }
                ],
                hyphens: [
                    {
                        hyphens: [
                            "none",
                            "manual",
                            "auto"
                        ]
                    }
                ],
                content: [
                    {
                        content: [
                            "none",
                            Lt,
                            Ot
                        ]
                    }
                ],
                "bg-attachment": [
                    {
                        bg: [
                            "fixed",
                            "local",
                            "scroll"
                        ]
                    }
                ],
                "bg-clip": [
                    {
                        "bg-clip": [
                            "border",
                            "padding",
                            "content",
                            "text"
                        ]
                    }
                ],
                "bg-origin": [
                    {
                        "bg-origin": [
                            "border",
                            "padding",
                            "content"
                        ]
                    }
                ],
                "bg-position": [
                    {
                        bg: [
                            ...E(),
                            mZ,
                            dZ
                        ]
                    }
                ],
                "bg-repeat": [
                    {
                        bg: [
                            "no-repeat",
                            {
                                repeat: [
                                    "",
                                    "x",
                                    "y",
                                    "space",
                                    "round"
                                ]
                            }
                        ]
                    }
                ],
                "bg-size": [
                    {
                        bg: [
                            "auto",
                            "cover",
                            "contain",
                            gZ,
                            uZ
                        ]
                    }
                ],
                "bg-image": [
                    {
                        bg: [
                            "none",
                            {
                                linear: [
                                    {
                                        to: [
                                            "t",
                                            "tr",
                                            "r",
                                            "br",
                                            "b",
                                            "bl",
                                            "l",
                                            "tl"
                                        ]
                                    },
                                    Zh,
                                    Lt,
                                    Ot
                                ],
                                radial: [
                                    "",
                                    Lt,
                                    Ot
                                ],
                                conic: [
                                    Zh,
                                    Lt,
                                    Ot
                                ]
                            },
                            yZ,
                            fZ
                        ]
                    }
                ],
                "bg-color": [
                    {
                        bg: W()
                    }
                ],
                "gradient-from-pos": [
                    {
                        from: J()
                    }
                ],
                "gradient-via-pos": [
                    {
                        via: J()
                    }
                ],
                "gradient-to-pos": [
                    {
                        to: J()
                    }
                ],
                "gradient-from": [
                    {
                        from: W()
                    }
                ],
                "gradient-via": [
                    {
                        via: W()
                    }
                ],
                "gradient-to": [
                    {
                        to: W()
                    }
                ],
                rounded: [
                    {
                        rounded: Q()
                    }
                ],
                "rounded-s": [
                    {
                        "rounded-s": Q()
                    }
                ],
                "rounded-e": [
                    {
                        "rounded-e": Q()
                    }
                ],
                "rounded-t": [
                    {
                        "rounded-t": Q()
                    }
                ],
                "rounded-r": [
                    {
                        "rounded-r": Q()
                    }
                ],
                "rounded-b": [
                    {
                        "rounded-b": Q()
                    }
                ],
                "rounded-l": [
                    {
                        "rounded-l": Q()
                    }
                ],
                "rounded-ss": [
                    {
                        "rounded-ss": Q()
                    }
                ],
                "rounded-se": [
                    {
                        "rounded-se": Q()
                    }
                ],
                "rounded-ee": [
                    {
                        "rounded-ee": Q()
                    }
                ],
                "rounded-es": [
                    {
                        "rounded-es": Q()
                    }
                ],
                "rounded-tl": [
                    {
                        "rounded-tl": Q()
                    }
                ],
                "rounded-tr": [
                    {
                        "rounded-tr": Q()
                    }
                ],
                "rounded-br": [
                    {
                        "rounded-br": Q()
                    }
                ],
                "rounded-bl": [
                    {
                        "rounded-bl": Q()
                    }
                ],
                "border-w": [
                    {
                        border: Y()
                    }
                ],
                "border-w-x": [
                    {
                        "border-x": Y()
                    }
                ],
                "border-w-y": [
                    {
                        "border-y": Y()
                    }
                ],
                "border-w-s": [
                    {
                        "border-s": Y()
                    }
                ],
                "border-w-e": [
                    {
                        "border-e": Y()
                    }
                ],
                "border-w-t": [
                    {
                        "border-t": Y()
                    }
                ],
                "border-w-r": [
                    {
                        "border-r": Y()
                    }
                ],
                "border-w-b": [
                    {
                        "border-b": Y()
                    }
                ],
                "border-w-l": [
                    {
                        "border-l": Y()
                    }
                ],
                "divide-x": [
                    {
                        "divide-x": Y()
                    }
                ],
                "divide-x-reverse": [
                    "divide-x-reverse"
                ],
                "divide-y": [
                    {
                        "divide-y": Y()
                    }
                ],
                "divide-y-reverse": [
                    "divide-y-reverse"
                ],
                "border-style": [
                    {
                        border: [
                            ...le(),
                            "hidden",
                            "none"
                        ]
                    }
                ],
                "divide-style": [
                    {
                        divide: [
                            ...le(),
                            "hidden",
                            "none"
                        ]
                    }
                ],
                "border-color": [
                    {
                        border: W()
                    }
                ],
                "border-color-x": [
                    {
                        "border-x": W()
                    }
                ],
                "border-color-y": [
                    {
                        "border-y": W()
                    }
                ],
                "border-color-s": [
                    {
                        "border-s": W()
                    }
                ],
                "border-color-e": [
                    {
                        "border-e": W()
                    }
                ],
                "border-color-t": [
                    {
                        "border-t": W()
                    }
                ],
                "border-color-r": [
                    {
                        "border-r": W()
                    }
                ],
                "border-color-b": [
                    {
                        "border-b": W()
                    }
                ],
                "border-color-l": [
                    {
                        "border-l": W()
                    }
                ],
                "divide-color": [
                    {
                        divide: W()
                    }
                ],
                "outline-style": [
                    {
                        outline: [
                            ...le(),
                            "none",
                            "hidden"
                        ]
                    }
                ],
                "outline-offset": [
                    {
                        "outline-offset": [
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "outline-w": [
                    {
                        outline: [
                            "",
                            Gn,
                            C_,
                            Jh
                        ]
                    }
                ],
                "outline-color": [
                    {
                        outline: [
                            t
                        ]
                    }
                ],
                shadow: [
                    {
                        shadow: [
                            "",
                            "none",
                            u,
                            vZ,
                            hZ
                        ]
                    }
                ],
                "shadow-color": [
                    {
                        shadow: W()
                    }
                ],
                "inset-shadow": [
                    {
                        "inset-shadow": [
                            "none",
                            Lt,
                            Ot,
                            f
                        ]
                    }
                ],
                "inset-shadow-color": [
                    {
                        "inset-shadow": W()
                    }
                ],
                "ring-w": [
                    {
                        ring: Y()
                    }
                ],
                "ring-w-inset": [
                    "ring-inset"
                ],
                "ring-color": [
                    {
                        ring: W()
                    }
                ],
                "ring-offset-w": [
                    {
                        "ring-offset": [
                            Gn,
                            Jh
                        ]
                    }
                ],
                "ring-offset-color": [
                    {
                        "ring-offset": W()
                    }
                ],
                "inset-ring-w": [
                    {
                        "inset-ring": Y()
                    }
                ],
                "inset-ring-color": [
                    {
                        "inset-ring": W()
                    }
                ],
                opacity: [
                    {
                        opacity: [
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "mix-blend": [
                    {
                        "mix-blend": [
                            ...ue(),
                            "plus-darker",
                            "plus-lighter"
                        ]
                    }
                ],
                "bg-blend": [
                    {
                        "bg-blend": ue()
                    }
                ],
                filter: [
                    {
                        filter: [
                            "",
                            "none",
                            Lt,
                            Ot
                        ]
                    }
                ],
                blur: [
                    {
                        blur: ie()
                    }
                ],
                brightness: [
                    {
                        brightness: [
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                contrast: [
                    {
                        contrast: [
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "drop-shadow": [
                    {
                        "drop-shadow": [
                            "",
                            "none",
                            p,
                            Lt,
                            Ot
                        ]
                    }
                ],
                grayscale: [
                    {
                        grayscale: [
                            "",
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "hue-rotate": [
                    {
                        "hue-rotate": [
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                invert: [
                    {
                        invert: [
                            "",
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                saturate: [
                    {
                        saturate: [
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                sepia: [
                    {
                        sepia: [
                            "",
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "backdrop-filter": [
                    {
                        "backdrop-filter": [
                            "",
                            "none",
                            Lt,
                            Ot
                        ]
                    }
                ],
                "backdrop-blur": [
                    {
                        "backdrop-blur": ie()
                    }
                ],
                "backdrop-brightness": [
                    {
                        "backdrop-brightness": [
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "backdrop-contrast": [
                    {
                        "backdrop-contrast": [
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "backdrop-grayscale": [
                    {
                        "backdrop-grayscale": [
                            "",
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "backdrop-hue-rotate": [
                    {
                        "backdrop-hue-rotate": [
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "backdrop-invert": [
                    {
                        "backdrop-invert": [
                            "",
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "backdrop-opacity": [
                    {
                        "backdrop-opacity": [
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "backdrop-saturate": [
                    {
                        "backdrop-saturate": [
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "backdrop-sepia": [
                    {
                        "backdrop-sepia": [
                            "",
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "border-collapse": [
                    {
                        border: [
                            "collapse",
                            "separate"
                        ]
                    }
                ],
                "border-spacing": [
                    {
                        "border-spacing": j()
                    }
                ],
                "border-spacing-x": [
                    {
                        "border-spacing-x": j()
                    }
                ],
                "border-spacing-y": [
                    {
                        "border-spacing-y": j()
                    }
                ],
                "table-layout": [
                    {
                        table: [
                            "auto",
                            "fixed"
                        ]
                    }
                ],
                caption: [
                    {
                        caption: [
                            "top",
                            "bottom"
                        ]
                    }
                ],
                transition: [
                    {
                        transition: [
                            "",
                            "all",
                            "colors",
                            "opacity",
                            "shadow",
                            "transform",
                            "none",
                            Lt,
                            Ot
                        ]
                    }
                ],
                "transition-behavior": [
                    {
                        transition: [
                            "normal",
                            "discrete"
                        ]
                    }
                ],
                duration: [
                    {
                        duration: [
                            Gn,
                            "initial",
                            Lt,
                            Ot
                        ]
                    }
                ],
                ease: [
                    {
                        ease: [
                            "linear",
                            "initial",
                            _,
                            Lt,
                            Ot
                        ]
                    }
                ],
                delay: [
                    {
                        delay: [
                            Gn,
                            Lt,
                            Ot
                        ]
                    }
                ],
                animate: [
                    {
                        animate: [
                            "none",
                            b,
                            Lt,
                            Ot
                        ]
                    }
                ],
                backface: [
                    {
                        backface: [
                            "hidden",
                            "visible"
                        ]
                    }
                ],
                perspective: [
                    {
                        perspective: [
                            x,
                            Lt,
                            Ot
                        ]
                    }
                ],
                "perspective-origin": [
                    {
                        "perspective-origin": he()
                    }
                ],
                rotate: [
                    {
                        rotate: ge()
                    }
                ],
                "rotate-x": [
                    {
                        "rotate-x": ge()
                    }
                ],
                "rotate-y": [
                    {
                        "rotate-y": ge()
                    }
                ],
                "rotate-z": [
                    {
                        "rotate-z": ge()
                    }
                ],
                scale: [
                    {
                        scale: ve()
                    }
                ],
                "scale-x": [
                    {
                        "scale-x": ve()
                    }
                ],
                "scale-y": [
                    {
                        "scale-y": ve()
                    }
                ],
                "scale-z": [
                    {
                        "scale-z": ve()
                    }
                ],
                "scale-3d": [
                    "scale-3d"
                ],
                skew: [
                    {
                        skew: Ee()
                    }
                ],
                "skew-x": [
                    {
                        "skew-x": Ee()
                    }
                ],
                "skew-y": [
                    {
                        "skew-y": Ee()
                    }
                ],
                transform: [
                    {
                        transform: [
                            Lt,
                            Ot,
                            "",
                            "none",
                            "gpu",
                            "cpu"
                        ]
                    }
                ],
                "transform-origin": [
                    {
                        origin: he()
                    }
                ],
                "transform-style": [
                    {
                        transform: [
                            "3d",
                            "flat"
                        ]
                    }
                ],
                translate: [
                    {
                        translate: Ce()
                    }
                ],
                "translate-x": [
                    {
                        "translate-x": Ce()
                    }
                ],
                "translate-y": [
                    {
                        "translate-y": Ce()
                    }
                ],
                "translate-z": [
                    {
                        "translate-z": Ce()
                    }
                ],
                "translate-none": [
                    "translate-none"
                ],
                accent: [
                    {
                        accent: W()
                    }
                ],
                appearance: [
                    {
                        appearance: [
                            "none",
                            "auto"
                        ]
                    }
                ],
                "caret-color": [
                    {
                        caret: W()
                    }
                ],
                "color-scheme": [
                    {
                        scheme: [
                            "normal",
                            "dark",
                            "light",
                            "light-dark",
                            "only-dark",
                            "only-light"
                        ]
                    }
                ],
                cursor: [
                    {
                        cursor: [
                            "auto",
                            "default",
                            "pointer",
                            "wait",
                            "text",
                            "move",
                            "help",
                            "not-allowed",
                            "none",
                            "context-menu",
                            "progress",
                            "cell",
                            "crosshair",
                            "vertical-text",
                            "alias",
                            "copy",
                            "no-drop",
                            "grab",
                            "grabbing",
                            "all-scroll",
                            "col-resize",
                            "row-resize",
                            "n-resize",
                            "e-resize",
                            "s-resize",
                            "w-resize",
                            "ne-resize",
                            "nw-resize",
                            "se-resize",
                            "sw-resize",
                            "ew-resize",
                            "ns-resize",
                            "nesw-resize",
                            "nwse-resize",
                            "zoom-in",
                            "zoom-out",
                            Lt,
                            Ot
                        ]
                    }
                ],
                "field-sizing": [
                    {
                        "field-sizing": [
                            "fixed",
                            "content"
                        ]
                    }
                ],
                "pointer-events": [
                    {
                        "pointer-events": [
                            "auto",
                            "none"
                        ]
                    }
                ],
                resize: [
                    {
                        resize: [
                            "none",
                            "",
                            "y",
                            "x"
                        ]
                    }
                ],
                "scroll-behavior": [
                    {
                        scroll: [
                            "auto",
                            "smooth"
                        ]
                    }
                ],
                "scroll-m": [
                    {
                        "scroll-m": j()
                    }
                ],
                "scroll-mx": [
                    {
                        "scroll-mx": j()
                    }
                ],
                "scroll-my": [
                    {
                        "scroll-my": j()
                    }
                ],
                "scroll-ms": [
                    {
                        "scroll-ms": j()
                    }
                ],
                "scroll-me": [
                    {
                        "scroll-me": j()
                    }
                ],
                "scroll-mt": [
                    {
                        "scroll-mt": j()
                    }
                ],
                "scroll-mr": [
                    {
                        "scroll-mr": j()
                    }
                ],
                "scroll-mb": [
                    {
                        "scroll-mb": j()
                    }
                ],
                "scroll-ml": [
                    {
                        "scroll-ml": j()
                    }
                ],
                "scroll-p": [
                    {
                        "scroll-p": j()
                    }
                ],
                "scroll-px": [
                    {
                        "scroll-px": j()
                    }
                ],
                "scroll-py": [
                    {
                        "scroll-py": j()
                    }
                ],
                "scroll-ps": [
                    {
                        "scroll-ps": j()
                    }
                ],
                "scroll-pe": [
                    {
                        "scroll-pe": j()
                    }
                ],
                "scroll-pt": [
                    {
                        "scroll-pt": j()
                    }
                ],
                "scroll-pr": [
                    {
                        "scroll-pr": j()
                    }
                ],
                "scroll-pb": [
                    {
                        "scroll-pb": j()
                    }
                ],
                "scroll-pl": [
                    {
                        "scroll-pl": j()
                    }
                ],
                "snap-align": [
                    {
                        snap: [
                            "start",
                            "end",
                            "center",
                            "align-none"
                        ]
                    }
                ],
                "snap-stop": [
                    {
                        snap: [
                            "normal",
                            "always"
                        ]
                    }
                ],
                "snap-type": [
                    {
                        snap: [
                            "none",
                            "x",
                            "y",
                            "both"
                        ]
                    }
                ],
                "snap-strictness": [
                    {
                        snap: [
                            "mandatory",
                            "proximity"
                        ]
                    }
                ],
                touch: [
                    {
                        touch: [
                            "auto",
                            "none",
                            "manipulation"
                        ]
                    }
                ],
                "touch-x": [
                    {
                        "touch-pan": [
                            "x",
                            "left",
                            "right"
                        ]
                    }
                ],
                "touch-y": [
                    {
                        "touch-pan": [
                            "y",
                            "up",
                            "down"
                        ]
                    }
                ],
                "touch-pz": [
                    "touch-pinch-zoom"
                ],
                select: [
                    {
                        select: [
                            "none",
                            "text",
                            "all",
                            "auto"
                        ]
                    }
                ],
                "will-change": [
                    {
                        "will-change": [
                            "auto",
                            "scroll",
                            "contents",
                            "transform",
                            Lt,
                            Ot
                        ]
                    }
                ],
                fill: [
                    {
                        fill: [
                            "none",
                            ...W()
                        ]
                    }
                ],
                "stroke-w": [
                    {
                        stroke: [
                            Gn,
                            C_,
                            Jh,
                            gI
                        ]
                    }
                ],
                stroke: [
                    {
                        stroke: [
                            "none",
                            ...W()
                        ]
                    }
                ],
                "forced-color-adjust": [
                    {
                        "forced-color-adjust": [
                            "auto",
                            "none"
                        ]
                    }
                ]
            },
            conflictingClassGroups: {
                overflow: [
                    "overflow-x",
                    "overflow-y"
                ],
                overscroll: [
                    "overscroll-x",
                    "overscroll-y"
                ],
                inset: [
                    "inset-x",
                    "inset-y",
                    "start",
                    "end",
                    "top",
                    "right",
                    "bottom",
                    "left"
                ],
                "inset-x": [
                    "right",
                    "left"
                ],
                "inset-y": [
                    "top",
                    "bottom"
                ],
                flex: [
                    "basis",
                    "grow",
                    "shrink"
                ],
                gap: [
                    "gap-x",
                    "gap-y"
                ],
                p: [
                    "px",
                    "py",
                    "ps",
                    "pe",
                    "pt",
                    "pr",
                    "pb",
                    "pl"
                ],
                px: [
                    "pr",
                    "pl"
                ],
                py: [
                    "pt",
                    "pb"
                ],
                m: [
                    "mx",
                    "my",
                    "ms",
                    "me",
                    "mt",
                    "mr",
                    "mb",
                    "ml"
                ],
                mx: [
                    "mr",
                    "ml"
                ],
                my: [
                    "mt",
                    "mb"
                ],
                size: [
                    "w",
                    "h"
                ],
                "font-size": [
                    "leading"
                ],
                "fvn-normal": [
                    "fvn-ordinal",
                    "fvn-slashed-zero",
                    "fvn-figure",
                    "fvn-spacing",
                    "fvn-fraction"
                ],
                "fvn-ordinal": [
                    "fvn-normal"
                ],
                "fvn-slashed-zero": [
                    "fvn-normal"
                ],
                "fvn-figure": [
                    "fvn-normal"
                ],
                "fvn-spacing": [
                    "fvn-normal"
                ],
                "fvn-fraction": [
                    "fvn-normal"
                ],
                "line-clamp": [
                    "display",
                    "overflow"
                ],
                rounded: [
                    "rounded-s",
                    "rounded-e",
                    "rounded-t",
                    "rounded-r",
                    "rounded-b",
                    "rounded-l",
                    "rounded-ss",
                    "rounded-se",
                    "rounded-ee",
                    "rounded-es",
                    "rounded-tl",
                    "rounded-tr",
                    "rounded-br",
                    "rounded-bl"
                ],
                "rounded-s": [
                    "rounded-ss",
                    "rounded-es"
                ],
                "rounded-e": [
                    "rounded-se",
                    "rounded-ee"
                ],
                "rounded-t": [
                    "rounded-tl",
                    "rounded-tr"
                ],
                "rounded-r": [
                    "rounded-tr",
                    "rounded-br"
                ],
                "rounded-b": [
                    "rounded-br",
                    "rounded-bl"
                ],
                "rounded-l": [
                    "rounded-tl",
                    "rounded-bl"
                ],
                "border-spacing": [
                    "border-spacing-x",
                    "border-spacing-y"
                ],
                "border-w": [
                    "border-w-s",
                    "border-w-e",
                    "border-w-t",
                    "border-w-r",
                    "border-w-b",
                    "border-w-l"
                ],
                "border-w-x": [
                    "border-w-r",
                    "border-w-l"
                ],
                "border-w-y": [
                    "border-w-t",
                    "border-w-b"
                ],
                "border-color": [
                    "border-color-s",
                    "border-color-e",
                    "border-color-t",
                    "border-color-r",
                    "border-color-b",
                    "border-color-l"
                ],
                "border-color-x": [
                    "border-color-r",
                    "border-color-l"
                ],
                "border-color-y": [
                    "border-color-t",
                    "border-color-b"
                ],
                translate: [
                    "translate-x",
                    "translate-y",
                    "translate-none"
                ],
                "translate-none": [
                    "translate",
                    "translate-x",
                    "translate-y",
                    "translate-z"
                ],
                "scroll-m": [
                    "scroll-mx",
                    "scroll-my",
                    "scroll-ms",
                    "scroll-me",
                    "scroll-mt",
                    "scroll-mr",
                    "scroll-mb",
                    "scroll-ml"
                ],
                "scroll-mx": [
                    "scroll-mr",
                    "scroll-ml"
                ],
                "scroll-my": [
                    "scroll-mt",
                    "scroll-mb"
                ],
                "scroll-p": [
                    "scroll-px",
                    "scroll-py",
                    "scroll-ps",
                    "scroll-pe",
                    "scroll-pt",
                    "scroll-pr",
                    "scroll-pb",
                    "scroll-pl"
                ],
                "scroll-px": [
                    "scroll-pr",
                    "scroll-pl"
                ],
                "scroll-py": [
                    "scroll-pt",
                    "scroll-pb"
                ],
                touch: [
                    "touch-x",
                    "touch-y",
                    "touch-pz"
                ],
                "touch-x": [
                    "touch"
                ],
                "touch-y": [
                    "touch"
                ],
                "touch-pz": [
                    "touch"
                ]
            },
            conflictingClassGroupModifiers: {
                "font-size": [
                    "leading"
                ]
            },
            orderSensitiveModifiers: [
                "before",
                "after",
                "placeholder",
                "file",
                "marker",
                "selection",
                "first-line",
                "first-letter",
                "backdrop",
                "*",
                "**"
            ]
        };
    }, VV = JY(EZ), uP = new Proxy(()=>uP, {
        get: ()=>uP
    });
    function Tn({ use: t, slot: e, variant: n, match: r = [], defaults: i }) {
        return ({ css: s, ...o } = {})=>({
                slots: new Proxy({}, {
                    get: (a, l)=>({ css: c, ...u } = {})=>{
                            const f = [], p = t, g = {
                                ...p?.()?.config.defaults,
                                ...i,
                                ...o,
                                ...u
                            };
                            f.push(p?.(g)?.slots[l]?.(g)), f.push(Array.isArray(e[l]) ? e[l] : [
                                e[l]
                            ]);
                            for (const [x, S] of Object.entries(g)){
                                const _ = n[x]?.[S];
                                _ && f.push(_);
                            }
                            for (const x of r)Object.entries(x.if).every(([S, _])=>_ === g[S]) && f.push(x.then?.[l]);
                            return f.push(s?.[l]), f.push(c), VV(f);
                        }
                }),
                config: {
                    defaults: {
                        ...t?.()?.config.defaults,
                        ...i
                    },
                    values: {
                        ...t?.()?.config.defaults,
                        ...i,
                        ...o
                    }
                },
                type: uP()
            });
    }
    const dn = VV;
    var yI, TD;
    function WV() {
        return TD || (TD = 1, yI = Object), yI;
    }
    var vI, CD;
    function MZ() {
        return CD || (CD = 1, vI = Error), vI;
    }
    var xI, ID;
    function TZ() {
        return ID || (ID = 1, xI = EvalError), xI;
    }
    var bI, RD;
    function CZ() {
        return RD || (RD = 1, bI = RangeError), bI;
    }
    var wI, AD;
    function IZ() {
        return AD || (AD = 1, wI = ReferenceError), wI;
    }
    var _I, ND;
    function RZ() {
        return ND || (ND = 1, _I = SyntaxError), _I;
    }
    var SI, PD;
    function qV() {
        return PD || (PD = 1, SI = TypeError), SI;
    }
    var EI, kD;
    function AZ() {
        return kD || (kD = 1, EI = URIError), EI;
    }
    var MI, OD;
    function NZ() {
        return OD || (OD = 1, MI = Math.abs), MI;
    }
    var TI, LD;
    function PZ() {
        return LD || (LD = 1, TI = Math.floor), TI;
    }
    var CI, DD;
    function kZ() {
        return DD || (DD = 1, CI = Math.max), CI;
    }
    var II, FD;
    function OZ() {
        return FD || (FD = 1, II = Math.min), II;
    }
    var RI, jD;
    function LZ() {
        return jD || (jD = 1, RI = Math.pow), RI;
    }
    var AI, BD;
    function DZ() {
        return BD || (BD = 1, AI = Math.round), AI;
    }
    var NI, UD;
    function FZ() {
        return UD || (UD = 1, NI = Number.isNaN || function(e) {
            return e !== e;
        }), NI;
    }
    var PI, zD;
    function jZ() {
        if (zD) return PI;
        zD = 1;
        var t = FZ();
        return PI = function(n) {
            return t(n) || n === 0 ? n : n < 0 ? -1 : 1;
        }, PI;
    }
    var kI, VD;
    function BZ() {
        return VD || (VD = 1, kI = Object.getOwnPropertyDescriptor), kI;
    }
    var OI, WD;
    function HV() {
        if (WD) return OI;
        WD = 1;
        var t = BZ();
        if (t) try {
            t([], "length");
        } catch  {
            t = null;
        }
        return OI = t, OI;
    }
    var LI, qD;
    function UZ() {
        if (qD) return LI;
        qD = 1;
        var t = Object.defineProperty || !1;
        if (t) try {
            t({}, "a", {
                value: 1
            });
        } catch  {
            t = !1;
        }
        return LI = t, LI;
    }
    var DI, HD;
    function $V() {
        return HD || (HD = 1, DI = function() {
            if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") return !1;
            if (typeof Symbol.iterator == "symbol") return !0;
            var e = {}, n = Symbol("test"), r = Object(n);
            if (typeof n == "string" || Object.prototype.toString.call(n) !== "[object Symbol]" || Object.prototype.toString.call(r) !== "[object Symbol]") return !1;
            var i = 42;
            e[n] = i;
            for(var s in e)return !1;
            if (typeof Object.keys == "function" && Object.keys(e).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(e).length !== 0) return !1;
            var o = Object.getOwnPropertySymbols(e);
            if (o.length !== 1 || o[0] !== n || !Object.prototype.propertyIsEnumerable.call(e, n)) return !1;
            if (typeof Object.getOwnPropertyDescriptor == "function") {
                var a = Object.getOwnPropertyDescriptor(e, n);
                if (a.value !== i || a.enumerable !== !0) return !1;
            }
            return !0;
        }), DI;
    }
    var FI, $D;
    function zZ() {
        if ($D) return FI;
        $D = 1;
        var t = typeof Symbol < "u" && Symbol, e = $V();
        return FI = function() {
            return typeof t != "function" || typeof Symbol != "function" || typeof t("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : e();
        }, FI;
    }
    var jI, GD;
    function GV() {
        return GD || (GD = 1, jI = typeof Reflect < "u" && Reflect.getPrototypeOf || null), jI;
    }
    var BI, XD;
    function XV() {
        if (XD) return BI;
        XD = 1;
        var t = WV();
        return BI = t.getPrototypeOf || null, BI;
    }
    var UI, KD;
    function VZ() {
        if (KD) return UI;
        KD = 1;
        var t = "Function.prototype.bind called on incompatible ", e = Object.prototype.toString, n = Math.max, r = "[object Function]", i = function(l, c) {
            for(var u = [], f = 0; f < l.length; f += 1)u[f] = l[f];
            for(var p = 0; p < c.length; p += 1)u[p + l.length] = c[p];
            return u;
        }, s = function(l, c) {
            for(var u = [], f = c, p = 0; f < l.length; f += 1, p += 1)u[p] = l[f];
            return u;
        }, o = function(a, l) {
            for(var c = "", u = 0; u < a.length; u += 1)c += a[u], u + 1 < a.length && (c += l);
            return c;
        };
        return UI = function(l) {
            var c = this;
            if (typeof c != "function" || e.apply(c) !== r) throw new TypeError(t + c);
            for(var u = s(arguments, 1), f, p = function() {
                if (this instanceof f) {
                    var b = c.apply(this, i(u, arguments));
                    return Object(b) === b ? b : this;
                }
                return c.apply(l, i(u, arguments));
            }, g = n(0, c.length - u.length), x = [], S = 0; S < g; S++)x[S] = "$" + S;
            if (f = Function("binder", "return function (" + o(x, ",") + "){ return binder.apply(this,arguments); }")(p), c.prototype) {
                var _ = function() {};
                _.prototype = c.prototype, f.prototype = new _, _.prototype = null;
            }
            return f;
        }, UI;
    }
    var zI, YD;
    function ZM() {
        if (YD) return zI;
        YD = 1;
        var t = VZ();
        return zI = Function.prototype.bind || t, zI;
    }
    var VI, ZD;
    function Wk() {
        return ZD || (ZD = 1, VI = Function.prototype.call), VI;
    }
    var WI, JD;
    function KV() {
        return JD || (JD = 1, WI = Function.prototype.apply), WI;
    }
    var qI, QD;
    function WZ() {
        return QD || (QD = 1, qI = typeof Reflect < "u" && Reflect && Reflect.apply), qI;
    }
    var HI, eF;
    function qZ() {
        if (eF) return HI;
        eF = 1;
        var t = ZM(), e = KV(), n = Wk(), r = WZ();
        return HI = r || t.call(n, e), HI;
    }
    var $I, tF;
    function YV() {
        if (tF) return $I;
        tF = 1;
        var t = ZM(), e = qV(), n = Wk(), r = qZ();
        return $I = function(s) {
            if (s.length < 1 || typeof s[0] != "function") throw new e("a function is required");
            return r(t, n, s);
        }, $I;
    }
    var GI, nF;
    function HZ() {
        if (nF) return GI;
        nF = 1;
        var t = YV(), e = HV(), n;
        try {
            n = [].__proto__ === Array.prototype;
        } catch (o) {
            if (!o || typeof o != "object" || !("code" in o) || o.code !== "ERR_PROTO_ACCESS") throw o;
        }
        var r = !!n && e && e(Object.prototype, "__proto__"), i = Object, s = i.getPrototypeOf;
        return GI = r && typeof r.get == "function" ? t([
            r.get
        ]) : typeof s == "function" ? function(a) {
            return s(a == null ? a : i(a));
        } : !1, GI;
    }
    var XI, rF;
    function $Z() {
        if (rF) return XI;
        rF = 1;
        var t = GV(), e = XV(), n = HZ();
        return XI = t ? function(i) {
            return t(i);
        } : e ? function(i) {
            if (!i || typeof i != "object" && typeof i != "function") throw new TypeError("getProto: not an object");
            return e(i);
        } : n ? function(i) {
            return n(i);
        } : null, XI;
    }
    var KI, iF;
    function GZ() {
        if (iF) return KI;
        iF = 1;
        var t = Function.prototype.call, e = Object.prototype.hasOwnProperty, n = ZM();
        return KI = n.call(t, e), KI;
    }
    var YI, sF;
    function XZ() {
        if (sF) return YI;
        sF = 1;
        var t, e = WV(), n = MZ(), r = TZ(), i = CZ(), s = IZ(), o = RZ(), a = qV(), l = AZ(), c = NZ(), u = PZ(), f = kZ(), p = OZ(), g = LZ(), x = DZ(), S = jZ(), _ = Function, b = function(Ce) {
            try {
                return _('"use strict"; return (' + Ce + ").constructor;")();
            } catch  {}
        }, M = HV(), E = UZ(), T = function() {
            throw new a;
        }, k = M ? function() {
            try {
                return arguments.callee, T;
            } catch  {
                try {
                    return M(arguments, "callee").get;
                } catch  {
                    return T;
                }
            }
        }() : T, N = zZ()(), D = $Z(), L = XV(), R = GV(), A = KV(), P = Wk(), B = {}, U = typeof Uint8Array > "u" || !D ? t : D(Uint8Array), j = {
            __proto__: null,
            "%AggregateError%": typeof AggregateError > "u" ? t : AggregateError,
            "%Array%": Array,
            "%ArrayBuffer%": typeof ArrayBuffer > "u" ? t : ArrayBuffer,
            "%ArrayIteratorPrototype%": N && D ? D([][Symbol.iterator]()) : t,
            "%AsyncFromSyncIteratorPrototype%": t,
            "%AsyncFunction%": B,
            "%AsyncGenerator%": B,
            "%AsyncGeneratorFunction%": B,
            "%AsyncIteratorPrototype%": B,
            "%Atomics%": typeof Atomics > "u" ? t : Atomics,
            "%BigInt%": typeof BigInt > "u" ? t : BigInt,
            "%BigInt64Array%": typeof BigInt64Array > "u" ? t : BigInt64Array,
            "%BigUint64Array%": typeof BigUint64Array > "u" ? t : BigUint64Array,
            "%Boolean%": Boolean,
            "%DataView%": typeof DataView > "u" ? t : DataView,
            "%Date%": Date,
            "%decodeURI%": decodeURI,
            "%decodeURIComponent%": decodeURIComponent,
            "%encodeURI%": encodeURI,
            "%encodeURIComponent%": encodeURIComponent,
            "%Error%": n,
            "%eval%": eval,
            "%EvalError%": r,
            "%Float32Array%": typeof Float32Array > "u" ? t : Float32Array,
            "%Float64Array%": typeof Float64Array > "u" ? t : Float64Array,
            "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? t : FinalizationRegistry,
            "%Function%": _,
            "%GeneratorFunction%": B,
            "%Int8Array%": typeof Int8Array > "u" ? t : Int8Array,
            "%Int16Array%": typeof Int16Array > "u" ? t : Int16Array,
            "%Int32Array%": typeof Int32Array > "u" ? t : Int32Array,
            "%isFinite%": isFinite,
            "%isNaN%": isNaN,
            "%IteratorPrototype%": N && D ? D(D([][Symbol.iterator]())) : t,
            "%JSON%": typeof JSON == "object" ? JSON : t,
            "%Map%": typeof Map > "u" ? t : Map,
            "%MapIteratorPrototype%": typeof Map > "u" || !N || !D ? t : D(new Map()[Symbol.iterator]()),
            "%Math%": Math,
            "%Number%": Number,
            "%Object%": e,
            "%Object.getOwnPropertyDescriptor%": M,
            "%parseFloat%": parseFloat,
            "%parseInt%": parseInt,
            "%Promise%": typeof Promise > "u" ? t : Promise,
            "%Proxy%": typeof Proxy > "u" ? t : Proxy,
            "%RangeError%": i,
            "%ReferenceError%": s,
            "%Reflect%": typeof Reflect > "u" ? t : Reflect,
            "%RegExp%": RegExp,
            "%Set%": typeof Set > "u" ? t : Set,
            "%SetIteratorPrototype%": typeof Set > "u" || !N || !D ? t : D(new Set()[Symbol.iterator]()),
            "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? t : SharedArrayBuffer,
            "%String%": String,
            "%StringIteratorPrototype%": N && D ? D(""[Symbol.iterator]()) : t,
            "%Symbol%": N ? Symbol : t,
            "%SyntaxError%": o,
            "%ThrowTypeError%": k,
            "%TypedArray%": U,
            "%TypeError%": a,
            "%Uint8Array%": typeof Uint8Array > "u" ? t : Uint8Array,
            "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? t : Uint8ClampedArray,
            "%Uint16Array%": typeof Uint16Array > "u" ? t : Uint16Array,
            "%Uint32Array%": typeof Uint32Array > "u" ? t : Uint32Array,
            "%URIError%": l,
            "%WeakMap%": typeof WeakMap > "u" ? t : WeakMap,
            "%WeakRef%": typeof WeakRef > "u" ? t : WeakRef,
            "%WeakSet%": typeof WeakSet > "u" ? t : WeakSet,
            "%Function.prototype.call%": P,
            "%Function.prototype.apply%": A,
            "%Object.defineProperty%": E,
            "%Object.getPrototypeOf%": L,
            "%Math.abs%": c,
            "%Math.floor%": u,
            "%Math.max%": f,
            "%Math.min%": p,
            "%Math.pow%": g,
            "%Math.round%": x,
            "%Math.sign%": S,
            "%Reflect.getPrototypeOf%": R
        };
        if (D) try {
            null.error;
        } catch (Ce) {
            var K = D(D(Ce));
            j["%Error.prototype%"] = K;
        }
        var q = function Ce(Ne) {
            var Ve;
            if (Ne === "%AsyncFunction%") Ve = b("async function () {}");
            else if (Ne === "%GeneratorFunction%") Ve = b("function* () {}");
            else if (Ne === "%AsyncGeneratorFunction%") Ve = b("async function* () {}");
            else if (Ne === "%AsyncGenerator%") {
                var we = Ce("%AsyncGeneratorFunction%");
                we && (Ve = we.prototype);
            } else if (Ne === "%AsyncIteratorPrototype%") {
                var Me = Ce("%AsyncGenerator%");
                Me && D && (Ve = D(Me.prototype));
            }
            return j[Ne] = Ve, Ve;
        }, te = {
            __proto__: null,
            "%ArrayBufferPrototype%": [
                "ArrayBuffer",
                "prototype"
            ],
            "%ArrayPrototype%": [
                "Array",
                "prototype"
            ],
            "%ArrayProto_entries%": [
                "Array",
                "prototype",
                "entries"
            ],
            "%ArrayProto_forEach%": [
                "Array",
                "prototype",
                "forEach"
            ],
            "%ArrayProto_keys%": [
                "Array",
                "prototype",
                "keys"
            ],
            "%ArrayProto_values%": [
                "Array",
                "prototype",
                "values"
            ],
            "%AsyncFunctionPrototype%": [
                "AsyncFunction",
                "prototype"
            ],
            "%AsyncGenerator%": [
                "AsyncGeneratorFunction",
                "prototype"
            ],
            "%AsyncGeneratorPrototype%": [
                "AsyncGeneratorFunction",
                "prototype",
                "prototype"
            ],
            "%BooleanPrototype%": [
                "Boolean",
                "prototype"
            ],
            "%DataViewPrototype%": [
                "DataView",
                "prototype"
            ],
            "%DatePrototype%": [
                "Date",
                "prototype"
            ],
            "%ErrorPrototype%": [
                "Error",
                "prototype"
            ],
            "%EvalErrorPrototype%": [
                "EvalError",
                "prototype"
            ],
            "%Float32ArrayPrototype%": [
                "Float32Array",
                "prototype"
            ],
            "%Float64ArrayPrototype%": [
                "Float64Array",
                "prototype"
            ],
            "%FunctionPrototype%": [
                "Function",
                "prototype"
            ],
            "%Generator%": [
                "GeneratorFunction",
                "prototype"
            ],
            "%GeneratorPrototype%": [
                "GeneratorFunction",
                "prototype",
                "prototype"
            ],
            "%Int8ArrayPrototype%": [
                "Int8Array",
                "prototype"
            ],
            "%Int16ArrayPrototype%": [
                "Int16Array",
                "prototype"
            ],
            "%Int32ArrayPrototype%": [
                "Int32Array",
                "prototype"
            ],
            "%JSONParse%": [
                "JSON",
                "parse"
            ],
            "%JSONStringify%": [
                "JSON",
                "stringify"
            ],
            "%MapPrototype%": [
                "Map",
                "prototype"
            ],
            "%NumberPrototype%": [
                "Number",
                "prototype"
            ],
            "%ObjectPrototype%": [
                "Object",
                "prototype"
            ],
            "%ObjProto_toString%": [
                "Object",
                "prototype",
                "toString"
            ],
            "%ObjProto_valueOf%": [
                "Object",
                "prototype",
                "valueOf"
            ],
            "%PromisePrototype%": [
                "Promise",
                "prototype"
            ],
            "%PromiseProto_then%": [
                "Promise",
                "prototype",
                "then"
            ],
            "%Promise_all%": [
                "Promise",
                "all"
            ],
            "%Promise_reject%": [
                "Promise",
                "reject"
            ],
            "%Promise_resolve%": [
                "Promise",
                "resolve"
            ],
            "%RangeErrorPrototype%": [
                "RangeError",
                "prototype"
            ],
            "%ReferenceErrorPrototype%": [
                "ReferenceError",
                "prototype"
            ],
            "%RegExpPrototype%": [
                "RegExp",
                "prototype"
            ],
            "%SetPrototype%": [
                "Set",
                "prototype"
            ],
            "%SharedArrayBufferPrototype%": [
                "SharedArrayBuffer",
                "prototype"
            ],
            "%StringPrototype%": [
                "String",
                "prototype"
            ],
            "%SymbolPrototype%": [
                "Symbol",
                "prototype"
            ],
            "%SyntaxErrorPrototype%": [
                "SyntaxError",
                "prototype"
            ],
            "%TypedArrayPrototype%": [
                "TypedArray",
                "prototype"
            ],
            "%TypeErrorPrototype%": [
                "TypeError",
                "prototype"
            ],
            "%Uint8ArrayPrototype%": [
                "Uint8Array",
                "prototype"
            ],
            "%Uint8ClampedArrayPrototype%": [
                "Uint8ClampedArray",
                "prototype"
            ],
            "%Uint16ArrayPrototype%": [
                "Uint16Array",
                "prototype"
            ],
            "%Uint32ArrayPrototype%": [
                "Uint32Array",
                "prototype"
            ],
            "%URIErrorPrototype%": [
                "URIError",
                "prototype"
            ],
            "%WeakMapPrototype%": [
                "WeakMap",
                "prototype"
            ],
            "%WeakSetPrototype%": [
                "WeakSet",
                "prototype"
            ]
        }, W = ZM(), J = GZ(), Q = W.call(P, Array.prototype.concat), Y = W.call(A, Array.prototype.splice), le = W.call(P, String.prototype.replace), ue = W.call(P, String.prototype.slice), ie = W.call(P, RegExp.prototype.exec), he = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, ge = /\\(\\)?/g, ve = function(Ne) {
            var Ve = ue(Ne, 0, 1), we = ue(Ne, -1);
            if (Ve === "%" && we !== "%") throw new o("invalid intrinsic syntax, expected closing `%`");
            if (we === "%" && Ve !== "%") throw new o("invalid intrinsic syntax, expected opening `%`");
            var Me = [];
            return le(Ne, he, function(se, Ye, Be, it) {
                Me[Me.length] = Be ? le(it, ge, "$1") : Ye || se;
            }), Me;
        }, Ee = function(Ne, Ve) {
            var we = Ne, Me;
            if (J(te, we) && (Me = te[we], we = "%" + Me[0] + "%"), J(j, we)) {
                var se = j[we];
                if (se === B && (se = q(we)), typeof se > "u" && !Ve) throw new a("intrinsic " + Ne + " exists, but is not available. Please file an issue!");
                return {
                    alias: Me,
                    name: we,
                    value: se
                };
            }
            throw new o("intrinsic " + Ne + " does not exist!");
        };
        return YI = function(Ne, Ve) {
            if (typeof Ne != "string" || Ne.length === 0) throw new a("intrinsic name must be a non-empty string");
            if (arguments.length > 1 && typeof Ve != "boolean") throw new a('"allowMissing" argument must be a boolean');
            if (ie(/^%?[^%]*%?$/, Ne) === null) throw new o("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
            var we = ve(Ne), Me = we.length > 0 ? we[0] : "", se = Ee("%" + Me + "%", Ve), Ye = se.name, Be = se.value, it = !1, de = se.alias;
            de && (Me = de[0], Y(we, Q([
                0,
                1
            ], de)));
            for(var ae = 1, oe = !0; ae < we.length; ae += 1){
                var $ = we[ae], H = ue($, 0, 1), fe = ue($, -1);
                if ((H === '"' || H === "'" || H === "`" || fe === '"' || fe === "'" || fe === "`") && H !== fe) throw new o("property names with quotes must have matching quotes");
                if (($ === "constructor" || !oe) && (it = !0), Me += "." + $, Ye = "%" + Me + "%", J(j, Ye)) Be = j[Ye];
                else if (Be != null) {
                    if (!($ in Be)) {
                        if (!Ve) throw new a("base intrinsic for " + Ne + " exists, but the property is not available.");
                        return;
                    }
                    if (M && ae + 1 >= we.length) {
                        var pe = M(Be, $);
                        oe = !!pe, oe && "get" in pe && !("originalValue" in pe.get) ? Be = pe.get : Be = Be[$];
                    } else oe = J(Be, $), Be = Be[$];
                    oe && !it && (j[Ye] = Be);
                }
            }
            return Be;
        }, YI;
    }
    var ZI, oF;
    function KZ() {
        if (oF) return ZI;
        oF = 1;
        var t = XZ(), e = YV(), n = e([
            t("%String.prototype.indexOf%")
        ]);
        return ZI = function(i, s) {
            var o = t(i, !!s);
            return typeof o == "function" && n(i, ".prototype.") > -1 ? e([
                o
            ]) : o;
        }, ZI;
    }
    var JI, aF;
    function YZ() {
        if (aF) return JI;
        aF = 1;
        var t = $V();
        return JI = function() {
            return t() && !!Symbol.toStringTag;
        }, JI;
    }
    var QI, lF;
    function ZZ() {
        if (lF) return QI;
        lF = 1;
        var t = KZ(), e = t("String.prototype.valueOf"), n = function(a) {
            try {
                return e(a), !0;
            } catch  {
                return !1;
            }
        }, r = t("Object.prototype.toString"), i = "[object String]", s = YZ()();
        return QI = function(a) {
            return typeof a == "string" ? !0 : !a || typeof a != "object" ? !1 : s ? n(a) : r(a) === i;
        }, QI;
    }
    var JZ = ZZ();
    const QZ = Ao(JZ), Ub = (t)=>QZ(t), eJ = (t, e, n = {})=>{
        const r = [];
        return t.filter((s, o)=>{
            const a = n.regionLowerCase ? s.toLowerCase() : s;
            if (e.includes(a)) return r.push({
                index: o,
                appLocale: a
            }), !0;
            const { isAvailable: l, appLocale: c } = tJ(a, e, n);
            return l && r.push({
                index: o,
                appLocale: n.regionLowerCase ? c.toLowerCase() : c
            }), l;
        }).map((s, o)=>!r || r.length === 0 ? s : r[o]?.appLocale);
    }, tJ = (t, e, n = {})=>{
        n?.languageOnly || (n.languageOnly = !1);
        let r = t;
        return {
            isAvailable: e.some((s)=>{
                if (!QS() && !n.languageOnly && t.split("-")[1] === void 0) return !1;
                const o = QS() ? new Intl.Locale(t).minimize().language : t.split("-")[0], a = QS() ? new Intl.Locale(s).minimize().language : s.split("-")[0], l = o === a;
                return l && (r = s), l;
            }),
            appLocale: r
        };
    }, nJ = (t = {})=>{
        t?.regionLowerCase || (t.regionLowerCase = !1);
        let e = [];
        return Intl && "DateTimeFormat" in Intl ? e = [
            Intl.DateTimeFormat().resolvedOptions().locale
        ] : typeof window == "object" && window?.navigator?.languages && (e = [
            ...window.navigator.languages
        ]), e.map((n)=>t.regionLowerCase ? n.toLowerCase() : n);
    }, QS = ()=>Intl && "Locale" in Intl, rJ = (t, e = {})=>{
        e?.regionLowerCase || (e.regionLowerCase = !1), e?.languageOnly || (e.languageOnly = !1);
        const n = t.map((r)=>{
            const i = r.split("-");
            if (e.languageOnly) return i[0];
            const s = QS() ? new Intl.Locale(r).maximize() : {
                language: i[0],
                script: i.length === 3 ? i[1] : void 0,
                region: i.length === 3 ? i[2] : i[1]
            }, { language: o, script: a } = s;
            let { region: l } = s;
            return e.regionLowerCase && l && (l = l.toLowerCase()), i.length > 2 ? `${o}-${a}-${l}` : l ? `${o}-${l}` : o;
        });
        return [
            ...new Set(n)
        ];
    }, iJ = (t, e, n = {})=>{
        n.regionLowerCase || (n.regionLowerCase = !1), n.languageOnly || (n.languageOnly = !1);
        const r = nJ(n), i = rJ([
            ...r,
            t
        ], n);
        return eJ(i, e, n)[0] || t;
    }, sJ = ({ available: t, fallback: e })=>iJ(e, t, {
            languageOnly: !0
        });
    var eR = {
        exports: {}
    };
    const oJ = {}, aJ = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: oJ
    }, Symbol.toStringTag, {
        value: "Module"
    })), wf = x9(aJ);
    var cF;
    function lJ() {
        return cF || (cF = 1, function(t) {
            (function() {
                var e = "input is invalid type", n = typeof window == "object", r = n ? window : {};
                r.JS_SHA256_NO_WINDOW && (n = !1);
                var i = !n && typeof self == "object", s = !r.JS_SHA256_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node;
                s ? r = Ep : i && (r = self);
                var o = !r.JS_SHA256_NO_COMMON_JS && !0 && t.exports, a = !r.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", l = "0123456789abcdef".split(""), c = [
                    -2147483648,
                    8388608,
                    32768,
                    128
                ], u = [
                    24,
                    16,
                    8,
                    0
                ], f = [
                    1116352408,
                    1899447441,
                    3049323471,
                    3921009573,
                    961987163,
                    1508970993,
                    2453635748,
                    2870763221,
                    3624381080,
                    310598401,
                    607225278,
                    1426881987,
                    1925078388,
                    2162078206,
                    2614888103,
                    3248222580,
                    3835390401,
                    4022224774,
                    264347078,
                    604807628,
                    770255983,
                    1249150122,
                    1555081692,
                    1996064986,
                    2554220882,
                    2821834349,
                    2952996808,
                    3210313671,
                    3336571891,
                    3584528711,
                    113926993,
                    338241895,
                    666307205,
                    773529912,
                    1294757372,
                    1396182291,
                    1695183700,
                    1986661051,
                    2177026350,
                    2456956037,
                    2730485921,
                    2820302411,
                    3259730800,
                    3345764771,
                    3516065817,
                    3600352804,
                    4094571909,
                    275423344,
                    430227734,
                    506948616,
                    659060556,
                    883997877,
                    958139571,
                    1322822218,
                    1537002063,
                    1747873779,
                    1955562222,
                    2024104815,
                    2227730452,
                    2361852424,
                    2428436474,
                    2756734187,
                    3204031479,
                    3329325298
                ], p = [
                    "hex",
                    "array",
                    "digest",
                    "arrayBuffer"
                ], g = [];
                (r.JS_SHA256_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(N) {
                    return Object.prototype.toString.call(N) === "[object Array]";
                }), a && (r.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(N) {
                    return typeof N == "object" && N.buffer && N.buffer.constructor === ArrayBuffer;
                });
                var x = function(N, D) {
                    return function(L) {
                        return new E(D, !0).update(L)[N]();
                    };
                }, S = function(N) {
                    var D = x("hex", N);
                    s && (D = _(D, N)), D.create = function() {
                        return new E(N);
                    }, D.update = function(A) {
                        return D.create().update(A);
                    };
                    for(var L = 0; L < p.length; ++L){
                        var R = p[L];
                        D[R] = x(R, N);
                    }
                    return D;
                }, _ = function(N, D) {
                    var L = wf, R = wf.Buffer, A = D ? "sha224" : "sha256", P;
                    R.from && !r.JS_SHA256_NO_BUFFER_FROM ? P = R.from : P = function(U) {
                        return new R(U);
                    };
                    var B = function(U) {
                        if (typeof U == "string") return L.createHash(A).update(U, "utf8").digest("hex");
                        if (U == null) throw new Error(e);
                        return U.constructor === ArrayBuffer && (U = new Uint8Array(U)), Array.isArray(U) || ArrayBuffer.isView(U) || U.constructor === R ? L.createHash(A).update(P(U)).digest("hex") : N(U);
                    };
                    return B;
                }, b = function(N, D) {
                    return function(L, R) {
                        return new T(L, D, !0).update(R)[N]();
                    };
                }, M = function(N) {
                    var D = b("hex", N);
                    D.create = function(A) {
                        return new T(A, N);
                    }, D.update = function(A, P) {
                        return D.create(A).update(P);
                    };
                    for(var L = 0; L < p.length; ++L){
                        var R = p[L];
                        D[R] = b(R, N);
                    }
                    return D;
                };
                function E(N, D) {
                    D ? (g[0] = g[16] = g[1] = g[2] = g[3] = g[4] = g[5] = g[6] = g[7] = g[8] = g[9] = g[10] = g[11] = g[12] = g[13] = g[14] = g[15] = 0, this.blocks = g) : this.blocks = [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ], N ? (this.h0 = 3238371032, this.h1 = 914150663, this.h2 = 812702999, this.h3 = 4144912697, this.h4 = 4290775857, this.h5 = 1750603025, this.h6 = 1694076839, this.h7 = 3204075428) : (this.h0 = 1779033703, this.h1 = 3144134277, this.h2 = 1013904242, this.h3 = 2773480762, this.h4 = 1359893119, this.h5 = 2600822924, this.h6 = 528734635, this.h7 = 1541459225), this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = !1, this.first = !0, this.is224 = N;
                }
                E.prototype.update = function(N) {
                    if (!this.finalized) {
                        var D, L = typeof N;
                        if (L !== "string") {
                            if (L === "object") {
                                if (N === null) throw new Error(e);
                                if (a && N.constructor === ArrayBuffer) N = new Uint8Array(N);
                                else if (!Array.isArray(N) && (!a || !ArrayBuffer.isView(N))) throw new Error(e);
                            } else throw new Error(e);
                            D = !0;
                        }
                        for(var R, A = 0, P, B = N.length, U = this.blocks; A < B;){
                            if (this.hashed && (this.hashed = !1, U[0] = this.block, this.block = U[16] = U[1] = U[2] = U[3] = U[4] = U[5] = U[6] = U[7] = U[8] = U[9] = U[10] = U[11] = U[12] = U[13] = U[14] = U[15] = 0), D) for(P = this.start; A < B && P < 64; ++A)U[P >>> 2] |= N[A] << u[P++ & 3];
                            else for(P = this.start; A < B && P < 64; ++A)R = N.charCodeAt(A), R < 128 ? U[P >>> 2] |= R << u[P++ & 3] : R < 2048 ? (U[P >>> 2] |= (192 | R >>> 6) << u[P++ & 3], U[P >>> 2] |= (128 | R & 63) << u[P++ & 3]) : R < 55296 || R >= 57344 ? (U[P >>> 2] |= (224 | R >>> 12) << u[P++ & 3], U[P >>> 2] |= (128 | R >>> 6 & 63) << u[P++ & 3], U[P >>> 2] |= (128 | R & 63) << u[P++ & 3]) : (R = 65536 + ((R & 1023) << 10 | N.charCodeAt(++A) & 1023), U[P >>> 2] |= (240 | R >>> 18) << u[P++ & 3], U[P >>> 2] |= (128 | R >>> 12 & 63) << u[P++ & 3], U[P >>> 2] |= (128 | R >>> 6 & 63) << u[P++ & 3], U[P >>> 2] |= (128 | R & 63) << u[P++ & 3]);
                            this.lastByteIndex = P, this.bytes += P - this.start, P >= 64 ? (this.block = U[16], this.start = P - 64, this.hash(), this.hashed = !0) : this.start = P;
                        }
                        return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this;
                    }
                }, E.prototype.finalize = function() {
                    if (!this.finalized) {
                        this.finalized = !0;
                        var N = this.blocks, D = this.lastByteIndex;
                        N[16] = this.block, N[D >>> 2] |= c[D & 3], this.block = N[16], D >= 56 && (this.hashed || this.hash(), N[0] = this.block, N[16] = N[1] = N[2] = N[3] = N[4] = N[5] = N[6] = N[7] = N[8] = N[9] = N[10] = N[11] = N[12] = N[13] = N[14] = N[15] = 0), N[14] = this.hBytes << 3 | this.bytes >>> 29, N[15] = this.bytes << 3, this.hash();
                    }
                }, E.prototype.hash = function() {
                    var N = this.h0, D = this.h1, L = this.h2, R = this.h3, A = this.h4, P = this.h5, B = this.h6, U = this.h7, j = this.blocks, K, q, te, W, J, Q, Y, le, ue, ie, he;
                    for(K = 16; K < 64; ++K)J = j[K - 15], q = (J >>> 7 | J << 25) ^ (J >>> 18 | J << 14) ^ J >>> 3, J = j[K - 2], te = (J >>> 17 | J << 15) ^ (J >>> 19 | J << 13) ^ J >>> 10, j[K] = j[K - 16] + q + j[K - 7] + te << 0;
                    for(he = D & L, K = 0; K < 64; K += 4)this.first ? (this.is224 ? (le = 300032, J = j[0] - 1413257819, U = J - 150054599 << 0, R = J + 24177077 << 0) : (le = 704751109, J = j[0] - 210244248, U = J - 1521486534 << 0, R = J + 143694565 << 0), this.first = !1) : (q = (N >>> 2 | N << 30) ^ (N >>> 13 | N << 19) ^ (N >>> 22 | N << 10), te = (A >>> 6 | A << 26) ^ (A >>> 11 | A << 21) ^ (A >>> 25 | A << 7), le = N & D, W = le ^ N & L ^ he, Y = A & P ^ ~A & B, J = U + te + Y + f[K] + j[K], Q = q + W, U = R + J << 0, R = J + Q << 0), q = (R >>> 2 | R << 30) ^ (R >>> 13 | R << 19) ^ (R >>> 22 | R << 10), te = (U >>> 6 | U << 26) ^ (U >>> 11 | U << 21) ^ (U >>> 25 | U << 7), ue = R & N, W = ue ^ R & D ^ le, Y = U & A ^ ~U & P, J = B + te + Y + f[K + 1] + j[K + 1], Q = q + W, B = L + J << 0, L = J + Q << 0, q = (L >>> 2 | L << 30) ^ (L >>> 13 | L << 19) ^ (L >>> 22 | L << 10), te = (B >>> 6 | B << 26) ^ (B >>> 11 | B << 21) ^ (B >>> 25 | B << 7), ie = L & R, W = ie ^ L & N ^ ue, Y = B & U ^ ~B & A, J = P + te + Y + f[K + 2] + j[K + 2], Q = q + W, P = D + J << 0, D = J + Q << 0, q = (D >>> 2 | D << 30) ^ (D >>> 13 | D << 19) ^ (D >>> 22 | D << 10), te = (P >>> 6 | P << 26) ^ (P >>> 11 | P << 21) ^ (P >>> 25 | P << 7), he = D & L, W = he ^ D & R ^ ie, Y = P & B ^ ~P & U, J = A + te + Y + f[K + 3] + j[K + 3], Q = q + W, A = N + J << 0, N = J + Q << 0, this.chromeBugWorkAround = !0;
                    this.h0 = this.h0 + N << 0, this.h1 = this.h1 + D << 0, this.h2 = this.h2 + L << 0, this.h3 = this.h3 + R << 0, this.h4 = this.h4 + A << 0, this.h5 = this.h5 + P << 0, this.h6 = this.h6 + B << 0, this.h7 = this.h7 + U << 0;
                }, E.prototype.hex = function() {
                    this.finalize();
                    var N = this.h0, D = this.h1, L = this.h2, R = this.h3, A = this.h4, P = this.h5, B = this.h6, U = this.h7, j = l[N >>> 28 & 15] + l[N >>> 24 & 15] + l[N >>> 20 & 15] + l[N >>> 16 & 15] + l[N >>> 12 & 15] + l[N >>> 8 & 15] + l[N >>> 4 & 15] + l[N & 15] + l[D >>> 28 & 15] + l[D >>> 24 & 15] + l[D >>> 20 & 15] + l[D >>> 16 & 15] + l[D >>> 12 & 15] + l[D >>> 8 & 15] + l[D >>> 4 & 15] + l[D & 15] + l[L >>> 28 & 15] + l[L >>> 24 & 15] + l[L >>> 20 & 15] + l[L >>> 16 & 15] + l[L >>> 12 & 15] + l[L >>> 8 & 15] + l[L >>> 4 & 15] + l[L & 15] + l[R >>> 28 & 15] + l[R >>> 24 & 15] + l[R >>> 20 & 15] + l[R >>> 16 & 15] + l[R >>> 12 & 15] + l[R >>> 8 & 15] + l[R >>> 4 & 15] + l[R & 15] + l[A >>> 28 & 15] + l[A >>> 24 & 15] + l[A >>> 20 & 15] + l[A >>> 16 & 15] + l[A >>> 12 & 15] + l[A >>> 8 & 15] + l[A >>> 4 & 15] + l[A & 15] + l[P >>> 28 & 15] + l[P >>> 24 & 15] + l[P >>> 20 & 15] + l[P >>> 16 & 15] + l[P >>> 12 & 15] + l[P >>> 8 & 15] + l[P >>> 4 & 15] + l[P & 15] + l[B >>> 28 & 15] + l[B >>> 24 & 15] + l[B >>> 20 & 15] + l[B >>> 16 & 15] + l[B >>> 12 & 15] + l[B >>> 8 & 15] + l[B >>> 4 & 15] + l[B & 15];
                    return this.is224 || (j += l[U >>> 28 & 15] + l[U >>> 24 & 15] + l[U >>> 20 & 15] + l[U >>> 16 & 15] + l[U >>> 12 & 15] + l[U >>> 8 & 15] + l[U >>> 4 & 15] + l[U & 15]), j;
                }, E.prototype.toString = E.prototype.hex, E.prototype.digest = function() {
                    this.finalize();
                    var N = this.h0, D = this.h1, L = this.h2, R = this.h3, A = this.h4, P = this.h5, B = this.h6, U = this.h7, j = [
                        N >>> 24 & 255,
                        N >>> 16 & 255,
                        N >>> 8 & 255,
                        N & 255,
                        D >>> 24 & 255,
                        D >>> 16 & 255,
                        D >>> 8 & 255,
                        D & 255,
                        L >>> 24 & 255,
                        L >>> 16 & 255,
                        L >>> 8 & 255,
                        L & 255,
                        R >>> 24 & 255,
                        R >>> 16 & 255,
                        R >>> 8 & 255,
                        R & 255,
                        A >>> 24 & 255,
                        A >>> 16 & 255,
                        A >>> 8 & 255,
                        A & 255,
                        P >>> 24 & 255,
                        P >>> 16 & 255,
                        P >>> 8 & 255,
                        P & 255,
                        B >>> 24 & 255,
                        B >>> 16 & 255,
                        B >>> 8 & 255,
                        B & 255
                    ];
                    return this.is224 || j.push(U >>> 24 & 255, U >>> 16 & 255, U >>> 8 & 255, U & 255), j;
                }, E.prototype.array = E.prototype.digest, E.prototype.arrayBuffer = function() {
                    this.finalize();
                    var N = new ArrayBuffer(this.is224 ? 28 : 32), D = new DataView(N);
                    return D.setUint32(0, this.h0), D.setUint32(4, this.h1), D.setUint32(8, this.h2), D.setUint32(12, this.h3), D.setUint32(16, this.h4), D.setUint32(20, this.h5), D.setUint32(24, this.h6), this.is224 || D.setUint32(28, this.h7), N;
                };
                function T(N, D, L) {
                    var R, A = typeof N;
                    if (A === "string") {
                        var P = [], B = N.length, U = 0, j;
                        for(R = 0; R < B; ++R)j = N.charCodeAt(R), j < 128 ? P[U++] = j : j < 2048 ? (P[U++] = 192 | j >>> 6, P[U++] = 128 | j & 63) : j < 55296 || j >= 57344 ? (P[U++] = 224 | j >>> 12, P[U++] = 128 | j >>> 6 & 63, P[U++] = 128 | j & 63) : (j = 65536 + ((j & 1023) << 10 | N.charCodeAt(++R) & 1023), P[U++] = 240 | j >>> 18, P[U++] = 128 | j >>> 12 & 63, P[U++] = 128 | j >>> 6 & 63, P[U++] = 128 | j & 63);
                        N = P;
                    } else if (A === "object") {
                        if (N === null) throw new Error(e);
                        if (a && N.constructor === ArrayBuffer) N = new Uint8Array(N);
                        else if (!Array.isArray(N) && (!a || !ArrayBuffer.isView(N))) throw new Error(e);
                    } else throw new Error(e);
                    N.length > 64 && (N = new E(D, !0).update(N).array());
                    var K = [], q = [];
                    for(R = 0; R < 64; ++R){
                        var te = N[R] || 0;
                        K[R] = 92 ^ te, q[R] = 54 ^ te;
                    }
                    E.call(this, D, L), this.update(q), this.oKeyPad = K, this.inner = !0, this.sharedMemory = L;
                }
                T.prototype = new E, T.prototype.finalize = function() {
                    if (E.prototype.finalize.call(this), this.inner) {
                        this.inner = !1;
                        var N = this.array();
                        E.call(this, this.is224, this.sharedMemory), this.update(this.oKeyPad), this.update(N), E.prototype.finalize.call(this);
                    }
                };
                var k = S();
                k.sha256 = k, k.sha224 = S(!0), k.sha256.hmac = M(), k.sha224.hmac = M(!0), o ? t.exports = k : (r.sha256 = k.sha256, r.sha224 = k.sha224);
            })();
        }(eR)), eR.exports;
    }
    var dP = lJ();
    const cJ = dP.sha224, ZV = ({ index: t, key: e, fallback: n })=>t[cJ(e)]?.value ?? t[e]?.value ?? n ?? e, uJ = ({ index: t, key: e, fallback: n })=>ZV({
            index: t,
            key: e,
            fallback: n
        }), dJ = ({ index: t, key: e, fallback: n })=>ZV({
            index: t,
            key: e,
            fallback: n
        }), sa = {
        index: {},
        push (t) {
            this.index = {
                ...this.index,
                ...t
            };
        },
        text: (t, e)=>uJ({
                index: sa.index,
                key: t,
                fallback: e
            }),
        rich: (t, e)=>dJ({
                index: sa.index,
                key: t,
                fallback: e
            })
    };
    function Of(t) {
        return typeof t > "u" || t === void 0;
    }
    function Oa(t) {
        return typeof t == "string";
    }
    function JM(t) {
        return typeof t == "number";
    }
    function Q1(t) {
        return typeof t == "boolean";
    }
    function qk(t) {
        return t === null;
    }
    function fJ(t) {
        return t instanceof Date;
    }
    function Hk(t) {
        return typeof t == "bigint";
    }
    function Ba(t) {
        return typeof t == "function";
    }
    function Pc(t) {
        return typeof t == "object" && t !== null;
    }
    function ee(t) {
        return Object.freeze(t);
    }
    function I_(t) {
        return cd(t) ? t : [
            t
        ];
    }
    function cd(t) {
        return Array.isArray(t);
    }
    function Lf(t) {
        return t;
    }
    const xr = ee({
        is (t) {
            return t.kind === "AlterTableNode";
        },
        create (t) {
            return ee({
                kind: "AlterTableNode",
                table: t
            });
        },
        cloneWithTableProps (t, e) {
            return ee({
                ...t,
                ...e
            });
        },
        cloneWithColumnAlteration (t, e) {
            return ee({
                ...t,
                columnAlterations: t.columnAlterations ? [
                    ...t.columnAlterations,
                    e
                ] : [
                    e
                ]
            });
        }
    }), Xr = ee({
        is (t) {
            return t.kind === "IdentifierNode";
        },
        create (t) {
            return ee({
                kind: "IdentifierNode",
                name: t
            });
        }
    }), Hu = ee({
        is (t) {
            return t.kind === "CreateIndexNode";
        },
        create (t) {
            return ee({
                kind: "CreateIndexNode",
                name: Xr.create(t)
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        },
        cloneWithColumns (t, e) {
            return ee({
                ...t,
                columns: [
                    ...t.columns || [],
                    ...e
                ]
            });
        }
    }), JV = ee({
        is (t) {
            return t.kind === "CreateSchemaNode";
        },
        create (t, e) {
            return ee({
                kind: "CreateSchemaNode",
                schema: Xr.create(t),
                ...e
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    }), hJ = [
        "preserve rows",
        "delete rows",
        "drop"
    ], Ea = ee({
        is (t) {
            return t.kind === "CreateTableNode";
        },
        create (t) {
            return ee({
                kind: "CreateTableNode",
                table: t,
                columns: ee([])
            });
        },
        cloneWithColumn (t, e) {
            return ee({
                ...t,
                columns: ee([
                    ...t.columns,
                    e
                ])
            });
        },
        cloneWithConstraint (t, e) {
            return ee({
                ...t,
                constraints: t.constraints ? ee([
                    ...t.constraints,
                    e
                ]) : ee([
                    e
                ])
            });
        },
        cloneWithFrontModifier (t, e) {
            return ee({
                ...t,
                frontModifiers: t.frontModifiers ? ee([
                    ...t.frontModifiers,
                    e
                ]) : ee([
                    e
                ])
            });
        },
        cloneWithEndModifier (t, e) {
            return ee({
                ...t,
                endModifiers: t.endModifiers ? ee([
                    ...t.endModifiers,
                    e
                ]) : ee([
                    e
                ])
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    }), Wf = ee({
        is (t) {
            return t.kind === "SchemableIdentifierNode";
        },
        create (t) {
            return ee({
                kind: "SchemableIdentifierNode",
                identifier: Xr.create(t)
            });
        },
        createWithSchema (t, e) {
            return ee({
                kind: "SchemableIdentifierNode",
                schema: Xr.create(t),
                identifier: Xr.create(e)
            });
        }
    }), d0 = ee({
        is (t) {
            return t.kind === "DropIndexNode";
        },
        create (t, e) {
            return ee({
                kind: "DropIndexNode",
                name: Wf.create(t),
                ...e
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    }), fP = ee({
        is (t) {
            return t.kind === "DropSchemaNode";
        },
        create (t, e) {
            return ee({
                kind: "DropSchemaNode",
                schema: Xr.create(t),
                ...e
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    }), hP = ee({
        is (t) {
            return t.kind === "DropTableNode";
        },
        create (t, e) {
            return ee({
                kind: "DropTableNode",
                table: t,
                ...e
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    }), nh = ee({
        is (t) {
            return t.kind === "AliasNode";
        },
        create (t, e) {
            return ee({
                kind: "AliasNode",
                node: t,
                alias: e
            });
        }
    }), Df = ee({
        is (t) {
            return t.kind === "TableNode";
        },
        create (t) {
            return ee({
                kind: "TableNode",
                table: Wf.create(t)
            });
        },
        createWithSchema (t, e) {
            return ee({
                kind: "TableNode",
                table: Wf.createWithSchema(t, e)
            });
        }
    });
    function oa(t) {
        return Pc(t) && Ba(t.toOperationNode);
    }
    function pJ(t) {
        return Pc(t) && "expressionType" in t && oa(t);
    }
    function mJ(t) {
        return Pc(t) && "expression" in t && Oa(t.alias) && oa(t);
    }
    const Lu = ee({
        is (t) {
            return t.kind === "SelectModifierNode";
        },
        create (t, e) {
            return ee({
                kind: "SelectModifierNode",
                modifier: t,
                of: e
            });
        },
        createWithExpression (t) {
            return ee({
                kind: "SelectModifierNode",
                rawModifier: t
            });
        }
    }), qf = ee({
        is (t) {
            return t.kind === "AndNode";
        },
        create (t, e) {
            return ee({
                kind: "AndNode",
                left: t,
                right: e
            });
        }
    }), cv = ee({
        is (t) {
            return t.kind === "OrNode";
        },
        create (t, e) {
            return ee({
                kind: "OrNode",
                left: t,
                right: e
            });
        }
    }), tR = ee({
        is (t) {
            return t.kind === "OnNode";
        },
        create (t) {
            return ee({
                kind: "OnNode",
                on: t
            });
        },
        cloneWithOperation (t, e, n) {
            return ee({
                ...t,
                on: e === "And" ? qf.create(t.on, n) : cv.create(t.on, n)
            });
        }
    }), f0 = ee({
        is (t) {
            return t.kind === "JoinNode";
        },
        create (t, e) {
            return ee({
                kind: "JoinNode",
                joinType: t,
                table: e,
                on: void 0
            });
        },
        createWithOn (t, e, n) {
            return ee({
                kind: "JoinNode",
                joinType: t,
                table: e,
                on: tR.create(n)
            });
        },
        cloneWithOn (t, e) {
            return ee({
                ...t,
                on: t.on ? tR.cloneWithOperation(t.on, "And", e) : tR.create(e)
            });
        }
    }), Ly = ee({
        is (t) {
            return t.kind === "BinaryOperationNode";
        },
        create (t, e, n) {
            return ee({
                kind: "BinaryOperationNode",
                leftOperand: t,
                operator: e,
                rightOperand: n
            });
        }
    }), gJ = [
        "=",
        "==",
        "!=",
        "<>",
        ">",
        ">=",
        "<",
        "<=",
        "in",
        "not in",
        "is",
        "is not",
        "like",
        "not like",
        "match",
        "ilike",
        "not ilike",
        "@>",
        "<@",
        "^@",
        "&&",
        "?",
        "?&",
        "?|",
        "!<",
        "!>",
        "<=>",
        "!~",
        "~",
        "~*",
        "!~*",
        "@@",
        "@@@",
        "!!",
        "<->",
        "regexp",
        "is distinct from",
        "is not distinct from"
    ], yJ = [
        "+",
        "-",
        "*",
        "/",
        "%",
        "^",
        "&",
        "|",
        "#",
        "<<",
        ">>"
    ], QV = [
        "->",
        "->>"
    ], vJ = [
        ...gJ,
        ...yJ,
        "&&",
        "||"
    ], xJ = [
        "exists",
        "not exists"
    ], bJ = [
        "not",
        "-",
        ...xJ
    ], wJ = [
        ...vJ,
        ...QV,
        ...bJ,
        "between",
        "between symmetric"
    ], Hf = ee({
        is (t) {
            return t.kind === "OperatorNode";
        },
        create (t) {
            return ee({
                kind: "OperatorNode",
                operator: t
            });
        }
    });
    function uF(t) {
        return Oa(t) && QV.includes(t);
    }
    const Ii = ee({
        is (t) {
            return t.kind === "ColumnNode";
        },
        create (t) {
            return ee({
                kind: "ColumnNode",
                column: Xr.create(t)
            });
        }
    }), $k = ee({
        is (t) {
            return t.kind === "SelectAllNode";
        },
        create () {
            return ee({
                kind: "SelectAllNode"
            });
        }
    }), QM = ee({
        is (t) {
            return t.kind === "ReferenceNode";
        },
        create (t, e) {
            return ee({
                kind: "ReferenceNode",
                table: e,
                column: t
            });
        },
        createSelectAll (t) {
            return ee({
                kind: "ReferenceNode",
                table: t,
                column: $k.create()
            });
        }
    });
    class _J {
        #e;
        get dynamicReference() {
            return this.#e;
        }
        get refType() {}
        constructor(e){
            this.#e = e;
        }
        toOperationNode() {
            return iW(this.#e);
        }
    }
    function eW(t) {
        return Pc(t) && oa(t) && Oa(t.dynamicReference);
    }
    const pP = ee({
        is (t) {
            return t.kind === "OrderByItemNode";
        },
        create (t, e) {
            return ee({
                kind: "OrderByItemNode",
                orderBy: t,
                direction: e
            });
        }
    }), Ws = ee({
        is (t) {
            return t.kind === "RawNode";
        },
        create (t, e) {
            return ee({
                kind: "RawNode",
                sqlFragments: ee(t),
                parameters: ee(e)
            });
        },
        createWithSql (t) {
            return Ws.create([
                t
            ], []);
        },
        createWithChild (t) {
            return Ws.create([
                "",
                ""
            ], [
                t
            ]);
        },
        createWithChildren (t) {
            return Ws.create(new Array(t.length + 1).fill(""), t);
        }
    });
    function tW(t) {
        return t === "asc" || t === "desc";
    }
    function zb(t) {
        if (t.length === 2) return [
            nR(t[0], t[1])
        ];
        if (t.length === 1) {
            const [e] = t;
            return Array.isArray(e) ? e.map((n)=>nR(n)) : [
                nR(e)
            ];
        }
        throw new Error(`Invalid number of arguments at order by! expected 1-2, received ${t.length}`);
    }
    function nR(t, e) {
        const n = SJ(t);
        if (pP.is(n)) {
            if (e) throw new Error("Cannot specify direction twice!");
            return n;
        }
        return pP.create(n, nW(e));
    }
    function SJ(t) {
        if ($b(t)) return hm(t);
        if (eW(t)) return t.toOperationNode();
        const [e, n] = t.split(" ");
        if (n) {
            if (!tW(n)) throw new Error(`Invalid order by direction: ${n}`);
            return pP.create(ud(e), nW(n));
        }
        return ud(t);
    }
    function nW(t) {
        if (t) return t === "asc" || t === "desc" ? Ws.createWithSql(t) : t.toOperationNode();
    }
    const eE = ee({
        is (t) {
            return t.kind === "JSONReferenceNode";
        },
        create (t, e) {
            return ee({
                kind: "JSONReferenceNode",
                reference: t,
                traversal: e
            });
        },
        cloneWithTraversal (t, e) {
            return ee({
                ...t,
                traversal: e
            });
        }
    }), rW = ee({
        is (t) {
            return t.kind === "JSONOperatorChainNode";
        },
        create (t) {
            return ee({
                kind: "JSONOperatorChainNode",
                operator: t,
                values: ee([])
            });
        },
        cloneWithValue (t, e) {
            return ee({
                ...t,
                values: ee([
                    ...t.values,
                    e
                ])
            });
        }
    }), h0 = ee({
        is (t) {
            return t.kind === "JSONPathNode";
        },
        create (t) {
            return ee({
                kind: "JSONPathNode",
                inOperator: t,
                pathLegs: ee([])
            });
        },
        cloneWithLeg (t, e) {
            return ee({
                ...t,
                pathLegs: ee([
                    ...t.pathLegs,
                    e
                ])
            });
        }
    });
    function iW(t) {
        return Oa(t) ? ud(t) : t.toOperationNode();
    }
    function D0(t) {
        return cd(t) ? t.map((e)=>Ia(e)) : [
            Ia(t)
        ];
    }
    function Ia(t) {
        return $b(t) ? hm(t) : iW(t);
    }
    function EJ(t, e) {
        const n = ud(t);
        if (uF(e)) return eE.create(n, rW.create(Hf.create(e)));
        const r = e.slice(0, -1);
        if (uF(r)) return eE.create(n, h0.create(Hf.create(r)));
        throw new Error(`Invalid JSON operator: ${e}`);
    }
    function ud(t) {
        const e = ".";
        if (!t.includes(e)) return QM.create(Ii.create(t));
        const n = t.split(e).map(Gk);
        if (n.length === 3) return TJ(n);
        if (n.length === 2) return CJ(n);
        throw new Error(`invalid column reference ${t}`);
    }
    function MJ(t) {
        const e = " as ";
        if (t.includes(e)) {
            const [n, r] = t.split(e).map(Gk);
            return nh.create(ud(n), Xr.create(r));
        } else return ud(t);
    }
    function sW(t) {
        return Ii.create(t);
    }
    function tE(t) {
        const e = " ";
        if (t.includes(e)) {
            const [n, r] = t.split(e).map(Gk);
            if (!tW(r)) throw new Error(`invalid order direction "${r}" next to "${n}"`);
            return zb([
                n,
                r
            ])[0];
        } else return sW(t);
    }
    function TJ(t) {
        const [e, n, r] = t;
        return QM.create(Ii.create(r), Df.createWithSchema(e, n));
    }
    function CJ(t) {
        const [e, n] = t;
        return QM.create(Ii.create(n), Df.create(e));
    }
    function Gk(t) {
        return t.trim();
    }
    const oW = ee({
        is (t) {
            return t.kind === "PrimitiveValueListNode";
        },
        create (t) {
            return ee({
                kind: "PrimitiveValueListNode",
                values: ee([
                    ...t
                ])
            });
        }
    }), Xk = ee({
        is (t) {
            return t.kind === "ValueListNode";
        },
        create (t) {
            return ee({
                kind: "ValueListNode",
                values: ee(t)
            });
        }
    }), qc = ee({
        is (t) {
            return t.kind === "ValueNode";
        },
        create (t) {
            return ee({
                kind: "ValueNode",
                value: t
            });
        },
        createImmediate (t) {
            return ee({
                kind: "ValueNode",
                value: t,
                immediate: !0
            });
        }
    });
    function IJ(t) {
        return cd(t) ? RJ(t) : Bi(t);
    }
    function Bi(t) {
        return $b(t) ? hm(t) : qc.create(t);
    }
    function Kk(t) {
        return JM(t) || Q1(t) || qk(t);
    }
    function Yk(t) {
        if (!Kk(t)) throw new Error(`unsafe immediate value ${JSON.stringify(t)}`);
        return qc.createImmediate(t);
    }
    function RJ(t) {
        return t.some($b) ? Xk.create(t.map((e)=>Bi(e))) : oW.create(t);
    }
    const Dy = ee({
        is (t) {
            return t.kind === "ParensNode";
        },
        create (t) {
            return ee({
                kind: "ParensNode",
                node: t
            });
        }
    });
    function Rs(t) {
        if (t.length === 3) return Zk(t[0], t[1], t[2]);
        if (t.length === 1) return Bi(t[0]);
        throw new Error(`invalid arguments: ${JSON.stringify(t)}`);
    }
    function Zk(t, e, n) {
        return AJ(e) && aW(n) ? Ly.create(Ia(t), mP(e), qc.createImmediate(n)) : Ly.create(Ia(t), mP(e), IJ(n));
    }
    function Hc(t, e, n) {
        return Ly.create(Ia(t), mP(e), Ia(n));
    }
    function dF(t, e) {
        return nE(Object.entries(t).filter(([, n])=>!Of(n)).map(([n, r])=>Zk(n, aW(r) ? "is" : "=", r)), e);
    }
    function nE(t, e, n = !0) {
        const r = e === "and" ? qf.create : cv.create;
        if (t.length === 0) return Ly.create(qc.createImmediate(1), Hf.create("="), qc.createImmediate(e === "and" ? 1 : 0));
        let i = fF(t[0]);
        for(let s = 1; s < t.length; ++s)i = r(i, fF(t[s]));
        return t.length > 1 && n ? Dy.create(i) : i;
    }
    function AJ(t) {
        return t === "is" || t === "is not";
    }
    function aW(t) {
        return qk(t) || Q1(t);
    }
    function mP(t) {
        if (Oa(t) && wJ.includes(t)) return Hf.create(t);
        if (oa(t)) return t.toOperationNode();
        throw new Error(`invalid operator ${JSON.stringify(t)}`);
    }
    function fF(t) {
        return oa(t) ? t.toOperationNode() : t;
    }
    const $f = ee({
        is (t) {
            return t.kind === "OrderByNode";
        },
        create (t) {
            return ee({
                kind: "OrderByNode",
                items: ee([
                    ...t
                ])
            });
        },
        cloneWithItems (t, e) {
            return ee({
                ...t,
                items: ee([
                    ...t.items,
                    ...e
                ])
            });
        }
    }), hF = ee({
        is (t) {
            return t.kind === "PartitionByNode";
        },
        create (t) {
            return ee({
                kind: "PartitionByNode",
                items: ee(t)
            });
        },
        cloneWithItems (t, e) {
            return ee({
                ...t,
                items: ee([
                    ...t.items,
                    ...e
                ])
            });
        }
    }), gP = ee({
        is (t) {
            return t.kind === "OverNode";
        },
        create () {
            return ee({
                kind: "OverNode"
            });
        },
        cloneWithOrderByItems (t, e) {
            return ee({
                ...t,
                orderBy: t.orderBy ? $f.cloneWithItems(t.orderBy, e) : $f.create(e)
            });
        },
        cloneWithPartitionByItems (t, e) {
            return ee({
                ...t,
                partitionBy: t.partitionBy ? hF.cloneWithItems(t.partitionBy, e) : hF.create(e)
            });
        }
    }), rE = ee({
        is (t) {
            return t.kind === "FromNode";
        },
        create (t) {
            return ee({
                kind: "FromNode",
                froms: ee(t)
            });
        },
        cloneWithFroms (t, e) {
            return ee({
                ...t,
                froms: ee([
                    ...t.froms,
                    ...e
                ])
            });
        }
    }), pF = ee({
        is (t) {
            return t.kind === "GroupByNode";
        },
        create (t) {
            return ee({
                kind: "GroupByNode",
                items: ee(t)
            });
        },
        cloneWithItems (t, e) {
            return ee({
                ...t,
                items: ee([
                    ...t.items,
                    ...e
                ])
            });
        }
    }), mF = ee({
        is (t) {
            return t.kind === "HavingNode";
        },
        create (t) {
            return ee({
                kind: "HavingNode",
                having: t
            });
        },
        cloneWithOperation (t, e, n) {
            return ee({
                ...t,
                having: e === "And" ? qf.create(t.having, n) : cv.create(t.having, n)
            });
        }
    }), vr = ee({
        is (t) {
            return t.kind === "SelectQueryNode";
        },
        create (t) {
            return ee({
                kind: "SelectQueryNode",
                ...t && {
                    with: t
                }
            });
        },
        createFrom (t, e) {
            return ee({
                kind: "SelectQueryNode",
                from: rE.create(t),
                ...e && {
                    with: e
                }
            });
        },
        cloneWithSelections (t, e) {
            return ee({
                ...t,
                selections: t.selections ? ee([
                    ...t.selections,
                    ...e
                ]) : ee(e)
            });
        },
        cloneWithDistinctOn (t, e) {
            return ee({
                ...t,
                distinctOn: t.distinctOn ? ee([
                    ...t.distinctOn,
                    ...e
                ]) : ee(e)
            });
        },
        cloneWithFrontModifier (t, e) {
            return ee({
                ...t,
                frontModifiers: t.frontModifiers ? ee([
                    ...t.frontModifiers,
                    e
                ]) : ee([
                    e
                ])
            });
        },
        cloneWithOrderByItems (t, e) {
            return ee({
                ...t,
                orderBy: t.orderBy ? $f.cloneWithItems(t.orderBy, e) : $f.create(e)
            });
        },
        cloneWithGroupByItems (t, e) {
            return ee({
                ...t,
                groupBy: t.groupBy ? pF.cloneWithItems(t.groupBy, e) : pF.create(e)
            });
        },
        cloneWithLimit (t, e) {
            return ee({
                ...t,
                limit: e
            });
        },
        cloneWithOffset (t, e) {
            return ee({
                ...t,
                offset: e
            });
        },
        cloneWithFetch (t, e) {
            return ee({
                ...t,
                fetch: e
            });
        },
        cloneWithHaving (t, e) {
            return ee({
                ...t,
                having: t.having ? mF.cloneWithOperation(t.having, "And", e) : mF.create(e)
            });
        },
        cloneWithSetOperations (t, e) {
            return ee({
                ...t,
                setOperations: t.setOperations ? ee([
                    ...t.setOperations,
                    ...e
                ]) : ee([
                    ...e
                ])
            });
        },
        cloneWithoutSelections (t) {
            return ee({
                ...t,
                selections: []
            });
        },
        cloneWithoutLimit (t) {
            return ee({
                ...t,
                limit: void 0
            });
        },
        cloneWithoutOffset (t) {
            return ee({
                ...t,
                offset: void 0
            });
        },
        cloneWithoutOrderBy (t) {
            return ee({
                ...t,
                orderBy: void 0
            });
        },
        cloneWithoutGroupBy (t) {
            return ee({
                ...t,
                groupBy: void 0
            });
        }
    });
    function jn(t, e) {
        Object.defineProperties(t.prototype, {
            then: {
                enumerable: !1,
                value: ()=>{
                    throw new Error(e);
                }
            }
        });
    }
    class wy {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        on(...e) {
            return new wy({
                ...this.#e,
                joinNode: f0.cloneWithOn(this.#e.joinNode, Rs(e))
            });
        }
        onRef(e, n, r) {
            return new wy({
                ...this.#e,
                joinNode: f0.cloneWithOn(this.#e.joinNode, Hc(e, n, r))
            });
        }
        onTrue() {
            return new wy({
                ...this.#e,
                joinNode: f0.cloneWithOn(this.#e.joinNode, Ws.createWithSql("true"))
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.joinNode;
        }
    }
    jn(wy, "don't await JoinBuilder instances. They are never executed directly and are always just a part of a query.");
    const NJ = ee({
        is (t) {
            return t.kind === "PartitionByItemNode";
        },
        create (t) {
            return ee({
                kind: "PartitionByItemNode",
                partitionBy: t
            });
        }
    });
    function PJ(t) {
        return D0(t).map(NJ.create);
    }
    class F0 {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        orderBy(e, n) {
            return new F0({
                overNode: gP.cloneWithOrderByItems(this.#e.overNode, zb([
                    e,
                    n
                ]))
            });
        }
        partitionBy(e) {
            return new F0({
                overNode: gP.cloneWithPartitionByItems(this.#e.overNode, PJ(e))
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.overNode;
        }
    }
    jn(F0, "don't await OverBuilder instances. They are never executed directly and are always just a part of a query.");
    const p0 = ee({
        is (t) {
            return t.kind === "SelectionNode";
        },
        create (t) {
            return ee({
                kind: "SelectionNode",
                selection: t
            });
        },
        createSelectAll () {
            return ee({
                kind: "SelectionNode",
                selection: $k.create()
            });
        },
        createSelectAllFromTable (t) {
            return ee({
                kind: "SelectionNode",
                selection: QM.createSelectAll(t)
            });
        }
    });
    function nc(t) {
        return Ba(t) ? nc(t(dv())) : cd(t) ? t.map((e)=>gF(e)) : [
            gF(t)
        ];
    }
    function gF(t) {
        return Oa(t) ? p0.create(MJ(t)) : eW(t) ? p0.create(t.toOperationNode()) : p0.create(bW(t));
    }
    function $c(t) {
        return t ? Array.isArray(t) ? t.map(yF) : [
            yF(t)
        ] : [
            p0.createSelectAll()
        ];
    }
    function yF(t) {
        if (Oa(t)) return p0.createSelectAllFromTable(Mi(t));
        throw new Error(`invalid value selectAll expression: ${JSON.stringify(t)}`);
    }
    const kJ = ee({
        is (t) {
            return t.kind === "ValuesNode";
        },
        create (t) {
            return ee({
                kind: "ValuesNode",
                values: ee(t)
            });
        }
    }), OJ = ee({
        is (t) {
            return t.kind === "DefaultInsertValueNode";
        },
        create () {
            return ee({
                kind: "DefaultInsertValueNode"
            });
        }
    });
    function lW(t) {
        const e = Ba(t) ? t(dv()) : t, n = cd(e) ? e : ee([
            e
        ]);
        return LJ(n);
    }
    function LJ(t) {
        const e = DJ(t);
        return [
            ee([
                ...e.keys()
            ].map(Ii.create)),
            kJ.create(t.map((n)=>FJ(n, e)))
        ];
    }
    function DJ(t) {
        const e = new Map;
        for (const n of t){
            const r = Object.keys(n);
            for (const i of r)!e.has(i) && n[i] !== void 0 && e.set(i, e.size);
        }
        return e;
    }
    function FJ(t, e) {
        const n = Object.keys(t), r = Array.from({
            length: e.size
        });
        let i = !1;
        for (const o of n){
            const a = e.get(o);
            if (Of(a)) continue;
            const l = t[o];
            (Of(l) || $b(l)) && (i = !0), r[a] = l;
        }
        if (n.length < e.size || i) {
            const o = OJ.create();
            return Xk.create(r.map((a)=>Of(a) ? o : Bi(a)));
        }
        return oW.create(r);
    }
    const Ta = ee({
        is (t) {
            return t.kind === "InsertQueryNode";
        },
        create (t, e, n) {
            return ee({
                kind: "InsertQueryNode",
                into: t,
                ...e && {
                    with: e
                },
                replace: n
            });
        },
        createWithoutInto () {
            return ee({
                kind: "InsertQueryNode"
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    }), _y = ee({
        is (t) {
            return t.kind === "UpdateQueryNode";
        },
        create (t, e) {
            return ee({
                kind: "UpdateQueryNode",
                table: t,
                ...e && {
                    with: e
                }
            });
        },
        createWithoutTable () {
            return ee({
                kind: "UpdateQueryNode"
            });
        },
        cloneWithFromItems (t, e) {
            return ee({
                ...t,
                from: t.from ? rE.cloneWithFroms(t.from, e) : rE.create(e)
            });
        },
        cloneWithUpdates (t, e) {
            return ee({
                ...t,
                updates: t.updates ? ee([
                    ...t.updates,
                    ...e
                ]) : e
            });
        },
        cloneWithLimit (t, e) {
            return ee({
                ...t,
                limit: e
            });
        }
    }), vF = ee({
        is (t) {
            return t.kind === "UsingNode";
        },
        create (t) {
            return ee({
                kind: "UsingNode",
                tables: ee(t)
            });
        },
        cloneWithTables (t, e) {
            return ee({
                ...t,
                tables: ee([
                    ...t.tables,
                    ...e
                ])
            });
        }
    }), bp = ee({
        is (t) {
            return t.kind === "DeleteQueryNode";
        },
        create (t, e) {
            return ee({
                kind: "DeleteQueryNode",
                from: rE.create(t),
                ...e && {
                    with: e
                }
            });
        },
        cloneWithOrderByItems (t, e) {
            return ee({
                ...t,
                orderBy: t.orderBy ? $f.cloneWithItems(t.orderBy, e) : $f.create(e)
            });
        },
        cloneWithoutOrderBy (t) {
            return ee({
                ...t,
                orderBy: void 0
            });
        },
        cloneWithLimit (t, e) {
            return ee({
                ...t,
                limit: e
            });
        },
        cloneWithoutLimit (t) {
            return ee({
                ...t,
                limit: void 0
            });
        },
        cloneWithUsing (t, e) {
            return ee({
                ...t,
                using: t.using !== void 0 ? vF.cloneWithTables(t.using, e) : vF.create(e)
            });
        }
    }), Yo = ee({
        is (t) {
            return t.kind === "WhereNode";
        },
        create (t) {
            return ee({
                kind: "WhereNode",
                where: t
            });
        },
        cloneWithOperation (t, e, n) {
            return ee({
                ...t,
                where: e === "And" ? qf.create(t.where, n) : cv.create(t.where, n)
            });
        }
    }), xF = ee({
        is (t) {
            return t.kind === "ReturningNode";
        },
        create (t) {
            return ee({
                kind: "ReturningNode",
                selections: ee(t)
            });
        },
        cloneWithSelections (t, e) {
            return ee({
                ...t,
                selections: t.selections ? ee([
                    ...t.selections,
                    ...e
                ]) : ee(e)
            });
        }
    }), jJ = ee({
        is (t) {
            return t.kind === "ExplainNode";
        },
        create (t, e) {
            return ee({
                kind: "ExplainNode",
                format: t,
                options: e
            });
        }
    }), Vb = ee({
        is (t) {
            return t.kind === "WhenNode";
        },
        create (t) {
            return ee({
                kind: "WhenNode",
                condition: t
            });
        },
        cloneWithResult (t, e) {
            return ee({
                ...t,
                result: e
            });
        }
    }), ea = ee({
        is (t) {
            return t.kind === "MergeQueryNode";
        },
        create (t, e) {
            return ee({
                kind: "MergeQueryNode",
                into: t,
                ...e && {
                    with: e
                }
            });
        },
        cloneWithUsing (t, e) {
            return ee({
                ...t,
                using: e
            });
        },
        cloneWithWhen (t, e) {
            return ee({
                ...t,
                whens: t.whens ? ee([
                    ...t.whens,
                    e
                ]) : ee([
                    e
                ])
            });
        },
        cloneWithThen (t, e) {
            return ee({
                ...t,
                whens: t.whens ? ee([
                    ...t.whens.slice(0, -1),
                    Vb.cloneWithResult(t.whens[t.whens.length - 1], e)
                ]) : void 0
            });
        }
    }), bF = ee({
        is (t) {
            return t.kind === "OutputNode";
        },
        create (t) {
            return ee({
                kind: "OutputNode",
                selections: ee(t)
            });
        },
        cloneWithSelections (t, e) {
            return ee({
                ...t,
                selections: t.selections ? ee([
                    ...t.selections,
                    ...e
                ]) : ee(e)
            });
        }
    }), Ut = ee({
        is (t) {
            return vr.is(t) || Ta.is(t) || _y.is(t) || bp.is(t) || ea.is(t);
        },
        cloneWithEndModifier (t, e) {
            return ee({
                ...t,
                endModifiers: t.endModifiers ? ee([
                    ...t.endModifiers,
                    e
                ]) : ee([
                    e
                ])
            });
        },
        cloneWithWhere (t, e) {
            return ee({
                ...t,
                where: t.where ? Yo.cloneWithOperation(t.where, "And", e) : Yo.create(e)
            });
        },
        cloneWithJoin (t, e) {
            return ee({
                ...t,
                joins: t.joins ? ee([
                    ...t.joins,
                    e
                ]) : ee([
                    e
                ])
            });
        },
        cloneWithReturning (t, e) {
            return ee({
                ...t,
                returning: t.returning ? xF.cloneWithSelections(t.returning, e) : xF.create(e)
            });
        },
        cloneWithoutReturning (t) {
            return ee({
                ...t,
                returning: void 0
            });
        },
        cloneWithoutWhere (t) {
            return ee({
                ...t,
                where: void 0
            });
        },
        cloneWithExplain (t, e, n) {
            return ee({
                ...t,
                explain: jJ.create(e, n?.toOperationNode())
            });
        },
        cloneWithTop (t, e) {
            return ee({
                ...t,
                top: e
            });
        },
        cloneWithOutput (t, e) {
            return ee({
                ...t,
                output: t.output ? bF.cloneWithSelections(t.output, e) : bF.create(e)
            });
        }
    }), cW = ee({
        is (t) {
            return t.kind === "ColumnUpdateNode";
        },
        create (t, e) {
            return ee({
                kind: "ColumnUpdateNode",
                column: t,
                value: e
            });
        }
    });
    function BJ(...t) {
        return t.length === 2 ? [
            cW.create(Ia(t[0]), Bi(t[1]))
        ] : Jk(t[0]);
    }
    function Jk(t) {
        const e = Ba(t) ? t(dv()) : t;
        return Object.entries(e).filter(([n, r])=>r !== void 0).map(([n, r])=>cW.create(Ii.create(n), Bi(r)));
    }
    const UJ = ee({
        is (t) {
            return t.kind === "OnDuplicateKeyNode";
        },
        create (t) {
            return ee({
                kind: "OnDuplicateKeyNode",
                updates: t
            });
        }
    });
    class zJ {
        insertId;
        numInsertedOrUpdatedRows;
        constructor(e, n){
            this.insertId = e, this.numInsertedOrUpdatedRows = n;
        }
    }
    class Wb extends Error {
        node;
        constructor(e){
            super("no result"), this.node = e;
        }
    }
    function qb(t) {
        return Object.prototype.hasOwnProperty.call(t, "prototype");
    }
    const Ma = ee({
        is (t) {
            return t.kind === "OnConflictNode";
        },
        create () {
            return ee({
                kind: "OnConflictNode"
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        },
        cloneWithIndexWhere (t, e) {
            return ee({
                ...t,
                indexWhere: t.indexWhere ? Yo.cloneWithOperation(t.indexWhere, "And", e) : Yo.create(e)
            });
        },
        cloneWithIndexOrWhere (t, e) {
            return ee({
                ...t,
                indexWhere: t.indexWhere ? Yo.cloneWithOperation(t.indexWhere, "Or", e) : Yo.create(e)
            });
        },
        cloneWithUpdateWhere (t, e) {
            return ee({
                ...t,
                updateWhere: t.updateWhere ? Yo.cloneWithOperation(t.updateWhere, "And", e) : Yo.create(e)
            });
        },
        cloneWithUpdateOrWhere (t, e) {
            return ee({
                ...t,
                updateWhere: t.updateWhere ? Yo.cloneWithOperation(t.updateWhere, "Or", e) : Yo.create(e)
            });
        },
        cloneWithoutIndexWhere (t) {
            return ee({
                ...t,
                indexWhere: void 0
            });
        },
        cloneWithoutUpdateWhere (t) {
            return ee({
                ...t,
                updateWhere: void 0
            });
        }
    });
    class Nc {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        column(e) {
            const n = Ii.create(e);
            return new Nc({
                ...this.#e,
                onConflictNode: Ma.cloneWith(this.#e.onConflictNode, {
                    columns: this.#e.onConflictNode.columns ? ee([
                        ...this.#e.onConflictNode.columns,
                        n
                    ]) : ee([
                        n
                    ])
                })
            });
        }
        columns(e) {
            const n = e.map(Ii.create);
            return new Nc({
                ...this.#e,
                onConflictNode: Ma.cloneWith(this.#e.onConflictNode, {
                    columns: this.#e.onConflictNode.columns ? ee([
                        ...this.#e.onConflictNode.columns,
                        ...n
                    ]) : ee(n)
                })
            });
        }
        constraint(e) {
            return new Nc({
                ...this.#e,
                onConflictNode: Ma.cloneWith(this.#e.onConflictNode, {
                    constraint: Xr.create(e)
                })
            });
        }
        expression(e) {
            return new Nc({
                ...this.#e,
                onConflictNode: Ma.cloneWith(this.#e.onConflictNode, {
                    indexExpression: e.toOperationNode()
                })
            });
        }
        where(...e) {
            return new Nc({
                ...this.#e,
                onConflictNode: Ma.cloneWithIndexWhere(this.#e.onConflictNode, Rs(e))
            });
        }
        whereRef(e, n, r) {
            return new Nc({
                ...this.#e,
                onConflictNode: Ma.cloneWithIndexWhere(this.#e.onConflictNode, Hc(e, n, r))
            });
        }
        clearWhere() {
            return new Nc({
                ...this.#e,
                onConflictNode: Ma.cloneWithoutIndexWhere(this.#e.onConflictNode)
            });
        }
        doNothing() {
            return new uW({
                ...this.#e,
                onConflictNode: Ma.cloneWith(this.#e.onConflictNode, {
                    doNothing: !0
                })
            });
        }
        doUpdateSet(e) {
            return new Sy({
                ...this.#e,
                onConflictNode: Ma.cloneWith(this.#e.onConflictNode, {
                    updates: Jk(e)
                })
            });
        }
        $call(e) {
            return e(this);
        }
    }
    jn(Nc, "don't await OnConflictBuilder instances.");
    class uW {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        toOperationNode() {
            return this.#e.onConflictNode;
        }
    }
    jn(uW, "don't await OnConflictDoNothingBuilder instances.");
    class Sy {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        where(...e) {
            return new Sy({
                ...this.#e,
                onConflictNode: Ma.cloneWithUpdateWhere(this.#e.onConflictNode, Rs(e))
            });
        }
        whereRef(e, n, r) {
            return new Sy({
                ...this.#e,
                onConflictNode: Ma.cloneWithUpdateWhere(this.#e.onConflictNode, Hc(e, n, r))
            });
        }
        clearWhere() {
            return new Sy({
                ...this.#e,
                onConflictNode: Ma.cloneWithoutUpdateWhere(this.#e.onConflictNode)
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.onConflictNode;
        }
    }
    jn(Sy, "don't await OnConflictUpdateBuilder instances.");
    const VJ = ee({
        is (t) {
            return t.kind === "TopNode";
        },
        create (t, e) {
            return ee({
                kind: "TopNode",
                expression: t,
                modifiers: e
            });
        }
    });
    function uv(t, e) {
        if (!JM(t) && !Hk(t)) throw new Error(`Invalid top expression: ${t}`);
        if (!Of(e) && !WJ(e)) throw new Error(`Invalid top modifiers: ${e}`);
        return VJ.create(t, e);
    }
    function WJ(t) {
        return t === "percent" || t === "with ties" || t === "percent with ties";
    }
    class $r {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        values(e) {
            const [n, r] = lW(e);
            return new $r({
                ...this.#e,
                queryNode: Ta.cloneWith(this.#e.queryNode, {
                    columns: n,
                    values: r
                })
            });
        }
        columns(e) {
            return new $r({
                ...this.#e,
                queryNode: Ta.cloneWith(this.#e.queryNode, {
                    columns: ee(e.map(Ii.create))
                })
            });
        }
        expression(e) {
            return new $r({
                ...this.#e,
                queryNode: Ta.cloneWith(this.#e.queryNode, {
                    values: hm(e)
                })
            });
        }
        defaultValues() {
            return new $r({
                ...this.#e,
                queryNode: Ta.cloneWith(this.#e.queryNode, {
                    defaultValues: !0
                })
            });
        }
        modifyEnd(e) {
            return new $r({
                ...this.#e,
                queryNode: Ut.cloneWithEndModifier(this.#e.queryNode, e.toOperationNode())
            });
        }
        ignore() {
            return new $r({
                ...this.#e,
                queryNode: Ta.cloneWith(this.#e.queryNode, {
                    ignore: !0
                })
            });
        }
        top(e, n) {
            return new $r({
                ...this.#e,
                queryNode: Ut.cloneWithTop(this.#e.queryNode, uv(e, n))
            });
        }
        onConflict(e) {
            return new $r({
                ...this.#e,
                queryNode: Ta.cloneWith(this.#e.queryNode, {
                    onConflict: e(new Nc({
                        onConflictNode: Ma.create()
                    })).toOperationNode()
                })
            });
        }
        onDuplicateKeyUpdate(e) {
            return new $r({
                ...this.#e,
                queryNode: Ta.cloneWith(this.#e.queryNode, {
                    onDuplicateKey: UJ.create(Jk(e))
                })
            });
        }
        returning(e) {
            return new $r({
                ...this.#e,
                queryNode: Ut.cloneWithReturning(this.#e.queryNode, nc(e))
            });
        }
        returningAll() {
            return new $r({
                ...this.#e,
                queryNode: Ut.cloneWithReturning(this.#e.queryNode, $c())
            });
        }
        output(e) {
            return new $r({
                ...this.#e,
                queryNode: Ut.cloneWithOutput(this.#e.queryNode, nc(e))
            });
        }
        outputAll(e) {
            return new $r({
                ...this.#e,
                queryNode: Ut.cloneWithOutput(this.#e.queryNode, $c(e))
            });
        }
        clearReturning() {
            return new $r({
                ...this.#e,
                queryNode: Ut.cloneWithoutReturning(this.#e.queryNode)
            });
        }
        $call(e) {
            return e(this);
        }
        $if(e, n) {
            return e ? n(this) : new $r({
                ...this.#e
            });
        }
        $castTo() {
            return new $r(this.#e);
        }
        $narrowType() {
            return new $r(this.#e);
        }
        $assertType() {
            return new $r(this.#e);
        }
        withPlugin(e) {
            return new $r({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const e = this.compile(), n = await this.#e.executor.executeQuery(e, this.#e.queryId), { adapter: r } = this.#e.executor, i = e.query;
            return i.returning && r.supportsReturning || i.output && r.supportsOutput ? n.rows : [
                new zJ(n.insertId, n.numAffectedRows ?? n.numUpdatedOrDeletedRows)
            ];
        }
        async executeTakeFirst() {
            const [e] = await this.execute();
            return e;
        }
        async executeTakeFirstOrThrow(e = Wb) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw qb(e) ? new e(this.toOperationNode()) : e(this.toOperationNode());
            return n;
        }
        async *stream(e = 100) {
            const n = this.compile(), r = this.#e.executor.stream(n, e, this.#e.queryId);
            for await (const i of r)yield* i.rows;
        }
        async explain(e, n) {
            return await new $r({
                ...this.#e,
                queryNode: Ut.cloneWithExplain(this.#e.queryNode, e, n)
            }).execute();
        }
    }
    jn($r, "don't await InsertQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
    class qJ {
        numDeletedRows;
        constructor(e){
            this.numDeletedRows = e;
        }
    }
    const Qk = ee({
        is (t) {
            return t.kind === "LimitNode";
        },
        create (t) {
            return ee({
                kind: "LimitNode",
                limit: t
            });
        }
    });
    class yr {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        where(...e) {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithWhere(this.#e.queryNode, Rs(e))
            });
        }
        whereRef(e, n, r) {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithWhere(this.#e.queryNode, Hc(e, n, r))
            });
        }
        clearWhere() {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithoutWhere(this.#e.queryNode)
            });
        }
        top(e, n) {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithTop(this.#e.queryNode, uv(e, n))
            });
        }
        using(e) {
            return new yr({
                ...this.#e,
                queryNode: bp.cloneWithUsing(this.#e.queryNode, U0(e))
            });
        }
        innerJoin(...e) {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("InnerJoin", e))
            });
        }
        leftJoin(...e) {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("LeftJoin", e))
            });
        }
        rightJoin(...e) {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("RightJoin", e))
            });
        }
        fullJoin(...e) {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("FullJoin", e))
            });
        }
        returning(e) {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithReturning(this.#e.queryNode, nc(e))
            });
        }
        returningAll(e) {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithReturning(this.#e.queryNode, $c(e))
            });
        }
        output(e) {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithOutput(this.#e.queryNode, nc(e))
            });
        }
        outputAll(e) {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithOutput(this.#e.queryNode, $c(e))
            });
        }
        clearReturning() {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithoutReturning(this.#e.queryNode)
            });
        }
        clearLimit() {
            return new yr({
                ...this.#e,
                queryNode: bp.cloneWithoutLimit(this.#e.queryNode)
            });
        }
        clearOrderBy() {
            return new yr({
                ...this.#e,
                queryNode: bp.cloneWithoutOrderBy(this.#e.queryNode)
            });
        }
        orderBy(e, n) {
            return new yr({
                ...this.#e,
                queryNode: bp.cloneWithOrderByItems(this.#e.queryNode, zb([
                    e,
                    n
                ]))
            });
        }
        limit(e) {
            return new yr({
                ...this.#e,
                queryNode: bp.cloneWithLimit(this.#e.queryNode, Qk.create(Bi(e)))
            });
        }
        modifyEnd(e) {
            return new yr({
                ...this.#e,
                queryNode: Ut.cloneWithEndModifier(this.#e.queryNode, e.toOperationNode())
            });
        }
        $call(e) {
            return e(this);
        }
        $if(e, n) {
            return e ? n(this) : new yr({
                ...this.#e
            });
        }
        $castTo() {
            return new yr(this.#e);
        }
        $narrowType() {
            return new yr(this.#e);
        }
        $assertType() {
            return new yr(this.#e);
        }
        withPlugin(e) {
            return new yr({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const e = this.compile(), n = await this.#e.executor.executeQuery(e, this.#e.queryId), { adapter: r } = this.#e.executor, i = e.query;
            return i.returning && r.supportsReturning || i.output && r.supportsOutput ? n.rows : [
                new qJ(n.numAffectedRows ?? n.numUpdatedOrDeletedRows ?? BigInt(0))
            ];
        }
        async executeTakeFirst() {
            const [e] = await this.execute();
            return e;
        }
        async executeTakeFirstOrThrow(e = Wb) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw qb(e) ? new e(this.toOperationNode()) : e(this.toOperationNode());
            return n;
        }
        async *stream(e = 100) {
            const n = this.compile(), r = this.#e.executor.stream(n, e, this.#e.queryId);
            for await (const i of r)yield* i.rows;
        }
        async explain(e, n) {
            return await new yr({
                ...this.#e,
                queryNode: Ut.cloneWithExplain(this.#e.queryNode, e, n)
            }).execute();
        }
    }
    jn(yr, "don't await DeleteQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
    class HJ {
        numUpdatedRows;
        numChangedRows;
        constructor(e, n){
            this.numUpdatedRows = e, this.numChangedRows = n;
        }
    }
    class Mr {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        where(...e) {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithWhere(this.#e.queryNode, Rs(e))
            });
        }
        whereRef(e, n, r) {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithWhere(this.#e.queryNode, Hc(e, n, r))
            });
        }
        clearWhere() {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithoutWhere(this.#e.queryNode)
            });
        }
        top(e, n) {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithTop(this.#e.queryNode, uv(e, n))
            });
        }
        from(e) {
            return new Mr({
                ...this.#e,
                queryNode: _y.cloneWithFromItems(this.#e.queryNode, U0(e))
            });
        }
        innerJoin(...e) {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("InnerJoin", e))
            });
        }
        leftJoin(...e) {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("LeftJoin", e))
            });
        }
        rightJoin(...e) {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("RightJoin", e))
            });
        }
        fullJoin(...e) {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("FullJoin", e))
            });
        }
        limit(e) {
            return new Mr({
                ...this.#e,
                queryNode: _y.cloneWithLimit(this.#e.queryNode, Qk.create(Bi(e)))
            });
        }
        set(...e) {
            return new Mr({
                ...this.#e,
                queryNode: _y.cloneWithUpdates(this.#e.queryNode, BJ(...e))
            });
        }
        returning(e) {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithReturning(this.#e.queryNode, nc(e))
            });
        }
        returningAll(e) {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithReturning(this.#e.queryNode, $c(e))
            });
        }
        output(e) {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithOutput(this.#e.queryNode, nc(e))
            });
        }
        outputAll(e) {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithOutput(this.#e.queryNode, $c(e))
            });
        }
        modifyEnd(e) {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithEndModifier(this.#e.queryNode, e.toOperationNode())
            });
        }
        clearReturning() {
            return new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithoutReturning(this.#e.queryNode)
            });
        }
        $call(e) {
            return e(this);
        }
        $if(e, n) {
            return e ? n(this) : new Mr({
                ...this.#e
            });
        }
        $castTo() {
            return new Mr(this.#e);
        }
        $narrowType() {
            return new Mr(this.#e);
        }
        $assertType() {
            return new Mr(this.#e);
        }
        withPlugin(e) {
            return new Mr({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const e = this.compile(), n = await this.#e.executor.executeQuery(e, this.#e.queryId), { adapter: r } = this.#e.executor, i = e.query;
            return i.returning && r.supportsReturning || i.output && r.supportsOutput ? n.rows : [
                new HJ(n.numAffectedRows ?? n.numUpdatedOrDeletedRows ?? BigInt(0), n.numChangedRows)
            ];
        }
        async executeTakeFirst() {
            const [e] = await this.execute();
            return e;
        }
        async executeTakeFirstOrThrow(e = Wb) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw qb(e) ? new e(this.toOperationNode()) : e(this.toOperationNode());
            return n;
        }
        async *stream(e = 100) {
            const n = this.compile(), r = this.#e.executor.stream(n, e, this.#e.queryId);
            for await (const i of r)yield* i.rows;
        }
        async explain(e, n) {
            return await new Mr({
                ...this.#e,
                queryNode: Ut.cloneWithExplain(this.#e.queryNode, e, n)
            }).execute();
        }
    }
    jn(Mr, "don't await UpdateQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
    const wF = ee({
        is (t) {
            return t.kind === "CommonTableExpressionNameNode";
        },
        create (t, e) {
            return ee({
                kind: "CommonTableExpressionNameNode",
                table: Df.create(t),
                columns: e ? ee(e.map(Ii.create)) : void 0
            });
        }
    }), iE = ee({
        is (t) {
            return t.kind === "CommonTableExpressionNode";
        },
        create (t, e) {
            return ee({
                kind: "CommonTableExpressionNode",
                name: t,
                expression: e
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    });
    class j0 {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        materialized() {
            return new j0({
                ...this.#e,
                node: iE.cloneWith(this.#e.node, {
                    materialized: !0
                })
            });
        }
        notMaterialized() {
            return new j0({
                ...this.#e,
                node: iE.cloneWith(this.#e.node, {
                    materialized: !1
                })
            });
        }
        toOperationNode() {
            return this.#e.node;
        }
    }
    jn(j0, "don't await CTEBuilder instances. They are never executed directly and are always just a part of a query.");
    function _F(t, e) {
        const n = e(rQ()).toOperationNode();
        return Ba(t) ? t($J(n)).toOperationNode() : iE.create(dW(t), n);
    }
    function $J(t) {
        return (e)=>new j0({
                node: iE.create(dW(e), t)
            });
    }
    function dW(t) {
        if (t.includes("(")) {
            const e = t.split(/[\(\)]/), n = e[0], r = e[1].split(",").map((i)=>i.trim());
            return wF.create(n, r);
        } else return wF.create(t);
    }
    const R_ = ee({
        is (t) {
            return t.kind === "WithNode";
        },
        create (t, e) {
            return ee({
                kind: "WithNode",
                expressions: ee([
                    t
                ]),
                ...e
            });
        },
        cloneWithExpression (t, e) {
            return ee({
                ...t,
                expressions: ee([
                    ...t.expressions,
                    e
                ])
            });
        }
    }), SF = [
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I",
        "J",
        "K",
        "L",
        "M",
        "N",
        "O",
        "P",
        "Q",
        "R",
        "S",
        "T",
        "U",
        "V",
        "W",
        "X",
        "Y",
        "Z",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "k",
        "l",
        "m",
        "n",
        "o",
        "p",
        "q",
        "r",
        "s",
        "t",
        "u",
        "v",
        "w",
        "x",
        "y",
        "z",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
    ];
    function GJ(t) {
        let e = "";
        for(let n = 0; n < t; ++n)e += XJ();
        return e;
    }
    function XJ() {
        return SF[~~(Math.random() * SF.length)];
    }
    function br() {
        return new KJ;
    }
    class KJ {
        #e;
        get queryId() {
            return this.#e === void 0 && (this.#e = GJ(8)), this.#e;
        }
    }
    class fW {
        nodeStack = [];
        #e = ee({
            AliasNode: this.transformAlias.bind(this),
            ColumnNode: this.transformColumn.bind(this),
            IdentifierNode: this.transformIdentifier.bind(this),
            SchemableIdentifierNode: this.transformSchemableIdentifier.bind(this),
            RawNode: this.transformRaw.bind(this),
            ReferenceNode: this.transformReference.bind(this),
            SelectQueryNode: this.transformSelectQuery.bind(this),
            SelectionNode: this.transformSelection.bind(this),
            TableNode: this.transformTable.bind(this),
            FromNode: this.transformFrom.bind(this),
            SelectAllNode: this.transformSelectAll.bind(this),
            AndNode: this.transformAnd.bind(this),
            OrNode: this.transformOr.bind(this),
            ValueNode: this.transformValue.bind(this),
            ValueListNode: this.transformValueList.bind(this),
            PrimitiveValueListNode: this.transformPrimitiveValueList.bind(this),
            ParensNode: this.transformParens.bind(this),
            JoinNode: this.transformJoin.bind(this),
            OperatorNode: this.transformOperator.bind(this),
            WhereNode: this.transformWhere.bind(this),
            InsertQueryNode: this.transformInsertQuery.bind(this),
            DeleteQueryNode: this.transformDeleteQuery.bind(this),
            ReturningNode: this.transformReturning.bind(this),
            CreateTableNode: this.transformCreateTable.bind(this),
            AddColumnNode: this.transformAddColumn.bind(this),
            ColumnDefinitionNode: this.transformColumnDefinition.bind(this),
            DropTableNode: this.transformDropTable.bind(this),
            DataTypeNode: this.transformDataType.bind(this),
            OrderByNode: this.transformOrderBy.bind(this),
            OrderByItemNode: this.transformOrderByItem.bind(this),
            GroupByNode: this.transformGroupBy.bind(this),
            GroupByItemNode: this.transformGroupByItem.bind(this),
            UpdateQueryNode: this.transformUpdateQuery.bind(this),
            ColumnUpdateNode: this.transformColumnUpdate.bind(this),
            LimitNode: this.transformLimit.bind(this),
            OffsetNode: this.transformOffset.bind(this),
            OnConflictNode: this.transformOnConflict.bind(this),
            OnDuplicateKeyNode: this.transformOnDuplicateKey.bind(this),
            CreateIndexNode: this.transformCreateIndex.bind(this),
            DropIndexNode: this.transformDropIndex.bind(this),
            ListNode: this.transformList.bind(this),
            PrimaryKeyConstraintNode: this.transformPrimaryKeyConstraint.bind(this),
            UniqueConstraintNode: this.transformUniqueConstraint.bind(this),
            ReferencesNode: this.transformReferences.bind(this),
            CheckConstraintNode: this.transformCheckConstraint.bind(this),
            WithNode: this.transformWith.bind(this),
            CommonTableExpressionNode: this.transformCommonTableExpression.bind(this),
            CommonTableExpressionNameNode: this.transformCommonTableExpressionName.bind(this),
            HavingNode: this.transformHaving.bind(this),
            CreateSchemaNode: this.transformCreateSchema.bind(this),
            DropSchemaNode: this.transformDropSchema.bind(this),
            AlterTableNode: this.transformAlterTable.bind(this),
            DropColumnNode: this.transformDropColumn.bind(this),
            RenameColumnNode: this.transformRenameColumn.bind(this),
            AlterColumnNode: this.transformAlterColumn.bind(this),
            ModifyColumnNode: this.transformModifyColumn.bind(this),
            AddConstraintNode: this.transformAddConstraint.bind(this),
            DropConstraintNode: this.transformDropConstraint.bind(this),
            ForeignKeyConstraintNode: this.transformForeignKeyConstraint.bind(this),
            CreateViewNode: this.transformCreateView.bind(this),
            DropViewNode: this.transformDropView.bind(this),
            GeneratedNode: this.transformGenerated.bind(this),
            DefaultValueNode: this.transformDefaultValue.bind(this),
            OnNode: this.transformOn.bind(this),
            ValuesNode: this.transformValues.bind(this),
            SelectModifierNode: this.transformSelectModifier.bind(this),
            CreateTypeNode: this.transformCreateType.bind(this),
            DropTypeNode: this.transformDropType.bind(this),
            ExplainNode: this.transformExplain.bind(this),
            DefaultInsertValueNode: this.transformDefaultInsertValue.bind(this),
            AggregateFunctionNode: this.transformAggregateFunction.bind(this),
            OverNode: this.transformOver.bind(this),
            PartitionByNode: this.transformPartitionBy.bind(this),
            PartitionByItemNode: this.transformPartitionByItem.bind(this),
            SetOperationNode: this.transformSetOperation.bind(this),
            BinaryOperationNode: this.transformBinaryOperation.bind(this),
            UnaryOperationNode: this.transformUnaryOperation.bind(this),
            UsingNode: this.transformUsing.bind(this),
            FunctionNode: this.transformFunction.bind(this),
            CaseNode: this.transformCase.bind(this),
            WhenNode: this.transformWhen.bind(this),
            JSONReferenceNode: this.transformJSONReference.bind(this),
            JSONPathNode: this.transformJSONPath.bind(this),
            JSONPathLegNode: this.transformJSONPathLeg.bind(this),
            JSONOperatorChainNode: this.transformJSONOperatorChain.bind(this),
            TupleNode: this.transformTuple.bind(this),
            MergeQueryNode: this.transformMergeQuery.bind(this),
            MatchedNode: this.transformMatched.bind(this),
            AddIndexNode: this.transformAddIndex.bind(this),
            CastNode: this.transformCast.bind(this),
            FetchNode: this.transformFetch.bind(this),
            TopNode: this.transformTop.bind(this),
            OutputNode: this.transformOutput.bind(this)
        });
        transformNode(e) {
            if (!e) return e;
            this.nodeStack.push(e);
            const n = this.transformNodeImpl(e);
            return this.nodeStack.pop(), ee(n);
        }
        transformNodeImpl(e) {
            return this.#e[e.kind](e);
        }
        transformNodeList(e) {
            return e && ee(e.map((n)=>this.transformNode(n)));
        }
        transformSelectQuery(e) {
            return {
                kind: "SelectQueryNode",
                from: this.transformNode(e.from),
                selections: this.transformNodeList(e.selections),
                distinctOn: this.transformNodeList(e.distinctOn),
                joins: this.transformNodeList(e.joins),
                groupBy: this.transformNode(e.groupBy),
                orderBy: this.transformNode(e.orderBy),
                where: this.transformNode(e.where),
                frontModifiers: this.transformNodeList(e.frontModifiers),
                endModifiers: this.transformNodeList(e.endModifiers),
                limit: this.transformNode(e.limit),
                offset: this.transformNode(e.offset),
                with: this.transformNode(e.with),
                having: this.transformNode(e.having),
                explain: this.transformNode(e.explain),
                setOperations: this.transformNodeList(e.setOperations),
                fetch: this.transformNode(e.fetch),
                top: this.transformNode(e.top)
            };
        }
        transformSelection(e) {
            return {
                kind: "SelectionNode",
                selection: this.transformNode(e.selection)
            };
        }
        transformColumn(e) {
            return {
                kind: "ColumnNode",
                column: this.transformNode(e.column)
            };
        }
        transformAlias(e) {
            return {
                kind: "AliasNode",
                node: this.transformNode(e.node),
                alias: this.transformNode(e.alias)
            };
        }
        transformTable(e) {
            return {
                kind: "TableNode",
                table: this.transformNode(e.table)
            };
        }
        transformFrom(e) {
            return {
                kind: "FromNode",
                froms: this.transformNodeList(e.froms)
            };
        }
        transformReference(e) {
            return {
                kind: "ReferenceNode",
                column: this.transformNode(e.column),
                table: this.transformNode(e.table)
            };
        }
        transformAnd(e) {
            return {
                kind: "AndNode",
                left: this.transformNode(e.left),
                right: this.transformNode(e.right)
            };
        }
        transformOr(e) {
            return {
                kind: "OrNode",
                left: this.transformNode(e.left),
                right: this.transformNode(e.right)
            };
        }
        transformValueList(e) {
            return {
                kind: "ValueListNode",
                values: this.transformNodeList(e.values)
            };
        }
        transformParens(e) {
            return {
                kind: "ParensNode",
                node: this.transformNode(e.node)
            };
        }
        transformJoin(e) {
            return {
                kind: "JoinNode",
                joinType: e.joinType,
                table: this.transformNode(e.table),
                on: this.transformNode(e.on)
            };
        }
        transformRaw(e) {
            return {
                kind: "RawNode",
                sqlFragments: ee([
                    ...e.sqlFragments
                ]),
                parameters: this.transformNodeList(e.parameters)
            };
        }
        transformWhere(e) {
            return {
                kind: "WhereNode",
                where: this.transformNode(e.where)
            };
        }
        transformInsertQuery(e) {
            return {
                kind: "InsertQueryNode",
                into: this.transformNode(e.into),
                columns: this.transformNodeList(e.columns),
                values: this.transformNode(e.values),
                returning: this.transformNode(e.returning),
                onConflict: this.transformNode(e.onConflict),
                onDuplicateKey: this.transformNode(e.onDuplicateKey),
                endModifiers: this.transformNodeList(e.endModifiers),
                with: this.transformNode(e.with),
                ignore: e.ignore,
                replace: e.replace,
                explain: this.transformNode(e.explain),
                defaultValues: e.defaultValues,
                top: this.transformNode(e.top),
                output: this.transformNode(e.output)
            };
        }
        transformValues(e) {
            return {
                kind: "ValuesNode",
                values: this.transformNodeList(e.values)
            };
        }
        transformDeleteQuery(e) {
            return {
                kind: "DeleteQueryNode",
                from: this.transformNode(e.from),
                using: this.transformNode(e.using),
                joins: this.transformNodeList(e.joins),
                where: this.transformNode(e.where),
                returning: this.transformNode(e.returning),
                endModifiers: this.transformNodeList(e.endModifiers),
                with: this.transformNode(e.with),
                orderBy: this.transformNode(e.orderBy),
                limit: this.transformNode(e.limit),
                explain: this.transformNode(e.explain),
                top: this.transformNode(e.top),
                output: this.transformNode(e.output)
            };
        }
        transformReturning(e) {
            return {
                kind: "ReturningNode",
                selections: this.transformNodeList(e.selections)
            };
        }
        transformCreateTable(e) {
            return {
                kind: "CreateTableNode",
                table: this.transformNode(e.table),
                columns: this.transformNodeList(e.columns),
                constraints: this.transformNodeList(e.constraints),
                temporary: e.temporary,
                ifNotExists: e.ifNotExists,
                onCommit: e.onCommit,
                frontModifiers: this.transformNodeList(e.frontModifiers),
                endModifiers: this.transformNodeList(e.endModifiers),
                selectQuery: this.transformNode(e.selectQuery)
            };
        }
        transformColumnDefinition(e) {
            return {
                kind: "ColumnDefinitionNode",
                column: this.transformNode(e.column),
                dataType: this.transformNode(e.dataType),
                references: this.transformNode(e.references),
                primaryKey: e.primaryKey,
                autoIncrement: e.autoIncrement,
                unique: e.unique,
                notNull: e.notNull,
                unsigned: e.unsigned,
                defaultTo: this.transformNode(e.defaultTo),
                check: this.transformNode(e.check),
                generated: this.transformNode(e.generated),
                frontModifiers: this.transformNodeList(e.frontModifiers),
                endModifiers: this.transformNodeList(e.endModifiers),
                nullsNotDistinct: e.nullsNotDistinct,
                identity: e.identity,
                ifNotExists: e.ifNotExists
            };
        }
        transformAddColumn(e) {
            return {
                kind: "AddColumnNode",
                column: this.transformNode(e.column)
            };
        }
        transformDropTable(e) {
            return {
                kind: "DropTableNode",
                table: this.transformNode(e.table),
                ifExists: e.ifExists,
                cascade: e.cascade
            };
        }
        transformOrderBy(e) {
            return {
                kind: "OrderByNode",
                items: this.transformNodeList(e.items)
            };
        }
        transformOrderByItem(e) {
            return {
                kind: "OrderByItemNode",
                orderBy: this.transformNode(e.orderBy),
                direction: this.transformNode(e.direction)
            };
        }
        transformGroupBy(e) {
            return {
                kind: "GroupByNode",
                items: this.transformNodeList(e.items)
            };
        }
        transformGroupByItem(e) {
            return {
                kind: "GroupByItemNode",
                groupBy: this.transformNode(e.groupBy)
            };
        }
        transformUpdateQuery(e) {
            return {
                kind: "UpdateQueryNode",
                table: this.transformNode(e.table),
                from: this.transformNode(e.from),
                joins: this.transformNodeList(e.joins),
                where: this.transformNode(e.where),
                updates: this.transformNodeList(e.updates),
                returning: this.transformNode(e.returning),
                endModifiers: this.transformNodeList(e.endModifiers),
                with: this.transformNode(e.with),
                explain: this.transformNode(e.explain),
                limit: this.transformNode(e.limit),
                top: this.transformNode(e.top),
                output: this.transformNode(e.output)
            };
        }
        transformColumnUpdate(e) {
            return {
                kind: "ColumnUpdateNode",
                column: this.transformNode(e.column),
                value: this.transformNode(e.value)
            };
        }
        transformLimit(e) {
            return {
                kind: "LimitNode",
                limit: this.transformNode(e.limit)
            };
        }
        transformOffset(e) {
            return {
                kind: "OffsetNode",
                offset: this.transformNode(e.offset)
            };
        }
        transformOnConflict(e) {
            return {
                kind: "OnConflictNode",
                columns: this.transformNodeList(e.columns),
                constraint: this.transformNode(e.constraint),
                indexExpression: this.transformNode(e.indexExpression),
                indexWhere: this.transformNode(e.indexWhere),
                updates: this.transformNodeList(e.updates),
                updateWhere: this.transformNode(e.updateWhere),
                doNothing: e.doNothing
            };
        }
        transformOnDuplicateKey(e) {
            return {
                kind: "OnDuplicateKeyNode",
                updates: this.transformNodeList(e.updates)
            };
        }
        transformCreateIndex(e) {
            return {
                kind: "CreateIndexNode",
                name: this.transformNode(e.name),
                table: this.transformNode(e.table),
                columns: this.transformNodeList(e.columns),
                unique: e.unique,
                using: this.transformNode(e.using),
                ifNotExists: e.ifNotExists,
                where: this.transformNode(e.where),
                nullsNotDistinct: e.nullsNotDistinct
            };
        }
        transformList(e) {
            return {
                kind: "ListNode",
                items: this.transformNodeList(e.items)
            };
        }
        transformDropIndex(e) {
            return {
                kind: "DropIndexNode",
                name: this.transformNode(e.name),
                table: this.transformNode(e.table),
                ifExists: e.ifExists,
                cascade: e.cascade
            };
        }
        transformPrimaryKeyConstraint(e) {
            return {
                kind: "PrimaryKeyConstraintNode",
                columns: this.transformNodeList(e.columns),
                name: this.transformNode(e.name)
            };
        }
        transformUniqueConstraint(e) {
            return {
                kind: "UniqueConstraintNode",
                columns: this.transformNodeList(e.columns),
                name: this.transformNode(e.name),
                nullsNotDistinct: e.nullsNotDistinct
            };
        }
        transformForeignKeyConstraint(e) {
            return {
                kind: "ForeignKeyConstraintNode",
                columns: this.transformNodeList(e.columns),
                references: this.transformNode(e.references),
                name: this.transformNode(e.name),
                onDelete: e.onDelete,
                onUpdate: e.onUpdate
            };
        }
        transformSetOperation(e) {
            return {
                kind: "SetOperationNode",
                operator: e.operator,
                expression: this.transformNode(e.expression),
                all: e.all
            };
        }
        transformReferences(e) {
            return {
                kind: "ReferencesNode",
                table: this.transformNode(e.table),
                columns: this.transformNodeList(e.columns),
                onDelete: e.onDelete,
                onUpdate: e.onUpdate
            };
        }
        transformCheckConstraint(e) {
            return {
                kind: "CheckConstraintNode",
                expression: this.transformNode(e.expression),
                name: this.transformNode(e.name)
            };
        }
        transformWith(e) {
            return {
                kind: "WithNode",
                expressions: this.transformNodeList(e.expressions),
                recursive: e.recursive
            };
        }
        transformCommonTableExpression(e) {
            return {
                kind: "CommonTableExpressionNode",
                name: this.transformNode(e.name),
                materialized: e.materialized,
                expression: this.transformNode(e.expression)
            };
        }
        transformCommonTableExpressionName(e) {
            return {
                kind: "CommonTableExpressionNameNode",
                table: this.transformNode(e.table),
                columns: this.transformNodeList(e.columns)
            };
        }
        transformHaving(e) {
            return {
                kind: "HavingNode",
                having: this.transformNode(e.having)
            };
        }
        transformCreateSchema(e) {
            return {
                kind: "CreateSchemaNode",
                schema: this.transformNode(e.schema),
                ifNotExists: e.ifNotExists
            };
        }
        transformDropSchema(e) {
            return {
                kind: "DropSchemaNode",
                schema: this.transformNode(e.schema),
                ifExists: e.ifExists,
                cascade: e.cascade
            };
        }
        transformAlterTable(e) {
            return {
                kind: "AlterTableNode",
                table: this.transformNode(e.table),
                renameTo: this.transformNode(e.renameTo),
                setSchema: this.transformNode(e.setSchema),
                columnAlterations: this.transformNodeList(e.columnAlterations),
                addConstraint: this.transformNode(e.addConstraint),
                dropConstraint: this.transformNode(e.dropConstraint),
                addIndex: this.transformNode(e.addIndex),
                dropIndex: this.transformNode(e.dropIndex)
            };
        }
        transformDropColumn(e) {
            return {
                kind: "DropColumnNode",
                column: this.transformNode(e.column)
            };
        }
        transformRenameColumn(e) {
            return {
                kind: "RenameColumnNode",
                column: this.transformNode(e.column),
                renameTo: this.transformNode(e.renameTo)
            };
        }
        transformAlterColumn(e) {
            return {
                kind: "AlterColumnNode",
                column: this.transformNode(e.column),
                dataType: this.transformNode(e.dataType),
                dataTypeExpression: this.transformNode(e.dataTypeExpression),
                setDefault: this.transformNode(e.setDefault),
                dropDefault: e.dropDefault,
                setNotNull: e.setNotNull,
                dropNotNull: e.dropNotNull
            };
        }
        transformModifyColumn(e) {
            return {
                kind: "ModifyColumnNode",
                column: this.transformNode(e.column)
            };
        }
        transformAddConstraint(e) {
            return {
                kind: "AddConstraintNode",
                constraint: this.transformNode(e.constraint)
            };
        }
        transformDropConstraint(e) {
            return {
                kind: "DropConstraintNode",
                constraintName: this.transformNode(e.constraintName),
                ifExists: e.ifExists,
                modifier: e.modifier
            };
        }
        transformCreateView(e) {
            return {
                kind: "CreateViewNode",
                name: this.transformNode(e.name),
                temporary: e.temporary,
                orReplace: e.orReplace,
                ifNotExists: e.ifNotExists,
                materialized: e.materialized,
                columns: this.transformNodeList(e.columns),
                as: this.transformNode(e.as)
            };
        }
        transformDropView(e) {
            return {
                kind: "DropViewNode",
                name: this.transformNode(e.name),
                ifExists: e.ifExists,
                materialized: e.materialized,
                cascade: e.cascade
            };
        }
        transformGenerated(e) {
            return {
                kind: "GeneratedNode",
                byDefault: e.byDefault,
                always: e.always,
                identity: e.identity,
                stored: e.stored,
                expression: this.transformNode(e.expression)
            };
        }
        transformDefaultValue(e) {
            return {
                kind: "DefaultValueNode",
                defaultValue: this.transformNode(e.defaultValue)
            };
        }
        transformOn(e) {
            return {
                kind: "OnNode",
                on: this.transformNode(e.on)
            };
        }
        transformSelectModifier(e) {
            return {
                kind: "SelectModifierNode",
                modifier: e.modifier,
                rawModifier: this.transformNode(e.rawModifier),
                of: this.transformNodeList(e.of)
            };
        }
        transformCreateType(e) {
            return {
                kind: "CreateTypeNode",
                name: this.transformNode(e.name),
                enum: this.transformNode(e.enum)
            };
        }
        transformDropType(e) {
            return {
                kind: "DropTypeNode",
                name: this.transformNode(e.name),
                ifExists: e.ifExists
            };
        }
        transformExplain(e) {
            return {
                kind: "ExplainNode",
                format: e.format,
                options: this.transformNode(e.options)
            };
        }
        transformSchemableIdentifier(e) {
            return {
                kind: "SchemableIdentifierNode",
                schema: this.transformNode(e.schema),
                identifier: this.transformNode(e.identifier)
            };
        }
        transformAggregateFunction(e) {
            return {
                kind: "AggregateFunctionNode",
                aggregated: this.transformNodeList(e.aggregated),
                distinct: e.distinct,
                orderBy: this.transformNode(e.orderBy),
                filter: this.transformNode(e.filter),
                func: e.func,
                over: this.transformNode(e.over)
            };
        }
        transformOver(e) {
            return {
                kind: "OverNode",
                orderBy: this.transformNode(e.orderBy),
                partitionBy: this.transformNode(e.partitionBy)
            };
        }
        transformPartitionBy(e) {
            return {
                kind: "PartitionByNode",
                items: this.transformNodeList(e.items)
            };
        }
        transformPartitionByItem(e) {
            return {
                kind: "PartitionByItemNode",
                partitionBy: this.transformNode(e.partitionBy)
            };
        }
        transformBinaryOperation(e) {
            return {
                kind: "BinaryOperationNode",
                leftOperand: this.transformNode(e.leftOperand),
                operator: this.transformNode(e.operator),
                rightOperand: this.transformNode(e.rightOperand)
            };
        }
        transformUnaryOperation(e) {
            return {
                kind: "UnaryOperationNode",
                operator: this.transformNode(e.operator),
                operand: this.transformNode(e.operand)
            };
        }
        transformUsing(e) {
            return {
                kind: "UsingNode",
                tables: this.transformNodeList(e.tables)
            };
        }
        transformFunction(e) {
            return {
                kind: "FunctionNode",
                func: e.func,
                arguments: this.transformNodeList(e.arguments)
            };
        }
        transformCase(e) {
            return {
                kind: "CaseNode",
                value: this.transformNode(e.value),
                when: this.transformNodeList(e.when),
                else: this.transformNode(e.else),
                isStatement: e.isStatement
            };
        }
        transformWhen(e) {
            return {
                kind: "WhenNode",
                condition: this.transformNode(e.condition),
                result: this.transformNode(e.result)
            };
        }
        transformJSONReference(e) {
            return {
                kind: "JSONReferenceNode",
                reference: this.transformNode(e.reference),
                traversal: this.transformNode(e.traversal)
            };
        }
        transformJSONPath(e) {
            return {
                kind: "JSONPathNode",
                inOperator: this.transformNode(e.inOperator),
                pathLegs: this.transformNodeList(e.pathLegs)
            };
        }
        transformJSONPathLeg(e) {
            return {
                kind: "JSONPathLegNode",
                type: e.type,
                value: e.value
            };
        }
        transformJSONOperatorChain(e) {
            return {
                kind: "JSONOperatorChainNode",
                operator: this.transformNode(e.operator),
                values: this.transformNodeList(e.values)
            };
        }
        transformTuple(e) {
            return {
                kind: "TupleNode",
                values: this.transformNodeList(e.values)
            };
        }
        transformMergeQuery(e) {
            return {
                kind: "MergeQueryNode",
                into: this.transformNode(e.into),
                using: this.transformNode(e.using),
                whens: this.transformNodeList(e.whens),
                with: this.transformNode(e.with),
                top: this.transformNode(e.top),
                endModifiers: this.transformNodeList(e.endModifiers),
                output: this.transformNode(e.output)
            };
        }
        transformMatched(e) {
            return {
                kind: "MatchedNode",
                not: e.not,
                bySource: e.bySource
            };
        }
        transformAddIndex(e) {
            return {
                kind: "AddIndexNode",
                name: this.transformNode(e.name),
                columns: this.transformNodeList(e.columns),
                unique: e.unique,
                using: this.transformNode(e.using),
                ifNotExists: e.ifNotExists
            };
        }
        transformCast(e) {
            return {
                kind: "CastNode",
                expression: this.transformNode(e.expression),
                dataType: this.transformNode(e.dataType)
            };
        }
        transformFetch(e) {
            return {
                kind: "FetchNode",
                rowCount: this.transformNode(e.rowCount),
                modifier: e.modifier
            };
        }
        transformTop(e) {
            return {
                kind: "TopNode",
                expression: e.expression,
                modifiers: e.modifiers
            };
        }
        transformOutput(e) {
            return {
                kind: "OutputNode",
                selections: this.transformNodeList(e.selections)
            };
        }
        transformDataType(e) {
            return e;
        }
        transformSelectAll(e) {
            return e;
        }
        transformIdentifier(e) {
            return e;
        }
        transformValue(e) {
            return e;
        }
        transformPrimitiveValueList(e) {
            return e;
        }
        transformOperator(e) {
            return e;
        }
        transformDefaultInsertValue(e) {
            return e;
        }
    }
    const YJ = ee({
        AlterTableNode: !0,
        CreateIndexNode: !0,
        CreateSchemaNode: !0,
        CreateTableNode: !0,
        CreateTypeNode: !0,
        CreateViewNode: !0,
        DeleteQueryNode: !0,
        DropIndexNode: !0,
        DropSchemaNode: !0,
        DropTableNode: !0,
        DropTypeNode: !0,
        DropViewNode: !0,
        InsertQueryNode: !0,
        RawNode: !0,
        SelectQueryNode: !0,
        UpdateQueryNode: !0,
        MergeQueryNode: !0
    });
    class ZJ extends fW {
        #e;
        #t = new Set;
        #n = new Set;
        constructor(e){
            super(), this.#e = e;
        }
        transformNodeImpl(e) {
            if (!this.#r(e)) return super.transformNodeImpl(e);
            const n = this.#c(e);
            for (const s of n)this.#n.add(s);
            const r = this.#s(e);
            for (const s of r)this.#t.add(s);
            const i = super.transformNodeImpl(e);
            for (const s of r)this.#t.delete(s);
            for (const s of n)this.#n.delete(s);
            return i;
        }
        transformSchemableIdentifier(e) {
            const n = super.transformSchemableIdentifier(e);
            return n.schema || !this.#t.has(e.identifier.name) ? n : {
                ...n,
                schema: Xr.create(this.#e)
            };
        }
        transformReferences(e) {
            const n = super.transformReferences(e);
            return n.table.table.schema ? n : {
                ...n,
                table: Df.createWithSchema(this.#e, n.table.table.identifier.name)
            };
        }
        #r(e) {
            return e.kind in YJ;
        }
        #s(e) {
            const n = new Set;
            if ("name" in e && e.name && Wf.is(e.name) && this.#a(e.name, n), "from" in e && e.from) for (const r of e.from.froms)this.#o(r, n);
            if ("into" in e && e.into && this.#o(e.into, n), "table" in e && e.table && this.#o(e.table, n), "joins" in e && e.joins) for (const r of e.joins)this.#o(r.table, n);
            return "using" in e && e.using && this.#o(e.using, n), n;
        }
        #c(e) {
            const n = new Set;
            return "with" in e && e.with && this.#u(e.with, n), n;
        }
        #o(e, n) {
            const r = Df.is(e) ? e : nh.is(e) && Df.is(e.node) ? e.node : null;
            r && this.#a(r.table, n);
        }
        #a(e, n) {
            const r = e.identifier.name;
            !this.#t.has(r) && !this.#n.has(r) && n.add(r);
        }
        #u(e, n) {
            for (const r of e.expressions){
                const i = r.name.table.table.identifier.name;
                this.#n.has(i) || n.add(i);
            }
        }
    }
    class Hb {
        #e;
        constructor(e){
            this.#e = new ZJ(e);
        }
        transformQuery(e) {
            return this.#e.transformNode(e.node);
        }
        async transformResult(e) {
            return e.result;
        }
    }
    const JJ = ee({
        is (t) {
            return t.kind === "MatchedNode";
        },
        create (t, e = !1) {
            return ee({
                kind: "MatchedNode",
                not: t,
                bySource: e
            });
        }
    });
    function EF(t, e, n) {
        return Vb.create(nE([
            JJ.create(!t.isMatched, t.bySource),
            ...e && e.length > 0 ? [
                e.length === 3 && n ? Hc(e[0], e[1], e[2]) : Rs(e)
            ] : []
        ], "and", !1));
    }
    function m0(t) {
        return Oa(t) ? Ws.create([
            t
        ], []) : oa(t) ? t.toOperationNode() : t;
    }
    class MF {
        #e;
        #t;
        #n;
        constructor(){
            this.#e = new Promise((e, n)=>{
                this.#n = n, this.#t = e;
            });
        }
        get promise() {
            return this.#e;
        }
        resolve = (e)=>{
            this.#t && this.#t(e);
        };
        reject = (e)=>{
            this.#n && this.#n(e);
        };
    }
    const TF = new Set;
    function QJ(t) {
        TF.has(t) || (TF.add(t), console.log(t));
    }
    const eQ = ee([]);
    class hW {
        #e;
        constructor(e = eQ){
            this.#e = e;
        }
        get plugins() {
            return this.#e;
        }
        transformQuery(e, n) {
            for (const r of this.#e){
                const i = r.transformQuery({
                    node: e,
                    queryId: n
                });
                if (i.kind === e.kind) e = i;
                else throw new Error([
                    "KyselyPlugin.transformQuery must return a node",
                    "of the same kind that was given to it.",
                    `The plugin was given a ${e.kind}`,
                    `but it returned a ${i.kind}`
                ].join(" "));
            }
            return e;
        }
        async executeQuery(e, n) {
            return await this.provideConnection(async (r)=>{
                const i = await r.executeQuery(e), s = await this.#t(i, n);
                return tQ(i, s), s;
            });
        }
        async *stream(e, n, r) {
            const i = new MF, s = new MF;
            this.provideConnection(async (a)=>(i.resolve(a), await s.promise)).catch((a)=>i.reject(a));
            const o = await i.promise;
            try {
                for await (const a of o.streamQuery(e, n))yield await this.#t(a, r);
            } finally{
                s.resolve();
            }
        }
        async #t(e, n) {
            for (const r of this.#e)e = await r.transformResult({
                result: e,
                queryId: n
            });
            return e;
        }
    }
    function tQ(t, e) {
        const { numAffectedRows: n } = t;
        n === void 0 && t.numUpdatedOrDeletedRows === void 0 || n !== void 0 && e.numAffectedRows !== void 0 || QJ("kysely:warning: outdated driver/plugin detected! QueryResult.numUpdatedOrDeletedRows is deprecated and will be removed in a future release.");
    }
    class ny extends hW {
        get adapter() {
            throw new Error("this query cannot be compiled to SQL");
        }
        compileQuery() {
            throw new Error("this query cannot be compiled to SQL");
        }
        provideConnection() {
            throw new Error("this query cannot be executed");
        }
        withConnectionProvider() {
            throw new Error("this query cannot have a connection provider");
        }
        withPlugin(e) {
            return new ny([
                ...this.plugins,
                e
            ]);
        }
        withPlugins(e) {
            return new ny([
                ...this.plugins,
                ...e
            ]);
        }
        withPluginAtFront(e) {
            return new ny([
                e,
                ...this.plugins
            ]);
        }
        withoutPlugins() {
            return new ny([]);
        }
    }
    const eT = new ny;
    class nQ {
        numChangedRows;
        constructor(e){
            this.numChangedRows = e;
        }
    }
    class Rp {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        modifyEnd(e) {
            return new Rp({
                ...this.#e,
                queryNode: Ut.cloneWithEndModifier(this.#e.queryNode, e.toOperationNode())
            });
        }
        top(e, n) {
            return new Rp({
                ...this.#e,
                queryNode: Ut.cloneWithTop(this.#e.queryNode, uv(e, n))
            });
        }
        using(...e) {
            return new Ra({
                ...this.#e,
                queryNode: ea.cloneWithUsing(this.#e.queryNode, _o("Using", e))
            });
        }
        output(e) {
            return new Rp({
                ...this.#e,
                queryNode: Ut.cloneWithOutput(this.#e.queryNode, nc(e))
            });
        }
        outputAll(e) {
            return new Rp({
                ...this.#e,
                queryNode: Ut.cloneWithOutput(this.#e.queryNode, $c(e))
            });
        }
    }
    jn(Rp, "don't await MergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");
    class Ra {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        modifyEnd(e) {
            return new Ra({
                ...this.#e,
                queryNode: Ut.cloneWithEndModifier(this.#e.queryNode, e.toOperationNode())
            });
        }
        top(e, n) {
            return new Ra({
                ...this.#e,
                queryNode: Ut.cloneWithTop(this.#e.queryNode, uv(e, n))
            });
        }
        whenMatched() {
            return this.#t([]);
        }
        whenMatchedAnd(...e) {
            return this.#t(e);
        }
        whenMatchedAndRef(e, n, r) {
            return this.#t([
                e,
                n,
                r
            ], !0);
        }
        #t(e, n) {
            return new yP({
                ...this.#e,
                queryNode: ea.cloneWithWhen(this.#e.queryNode, EF({
                    isMatched: !0
                }, e, n))
            });
        }
        whenNotMatched() {
            return this.#n([]);
        }
        whenNotMatchedAnd(...e) {
            return this.#n(e);
        }
        whenNotMatchedAndRef(e, n, r) {
            return this.#n([
                e,
                n,
                r
            ], !0);
        }
        whenNotMatchedBySource() {
            return this.#n([], !1, !0);
        }
        whenNotMatchedBySourceAnd(...e) {
            return this.#n(e, !1, !0);
        }
        whenNotMatchedBySourceAndRef(e, n, r) {
            return this.#n([
                e,
                n,
                r
            ], !0, !0);
        }
        output(e) {
            return new Ra({
                ...this.#e,
                queryNode: Ut.cloneWithOutput(this.#e.queryNode, nc(e))
            });
        }
        outputAll(e) {
            return new Ra({
                ...this.#e,
                queryNode: Ut.cloneWithOutput(this.#e.queryNode, $c(e))
            });
        }
        #n(e, n = !1, r = !1) {
            const i = {
                ...this.#e,
                queryNode: ea.cloneWithWhen(this.#e.queryNode, EF({
                    isMatched: !1,
                    bySource: r
                }, e, n))
            }, s = r ? yP : pW;
            return new s(i);
        }
        $call(e) {
            return e(this);
        }
        $if(e, n) {
            return e ? n(this) : new Ra({
                ...this.#e
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const e = this.compile(), n = await this.#e.executor.executeQuery(e, this.#e.queryId);
            return e.query.output && this.#e.executor.adapter.supportsOutput ? n.rows : [
                new nQ(n.numAffectedRows)
            ];
        }
        async executeTakeFirst() {
            const [e] = await this.execute();
            return e;
        }
        async executeTakeFirstOrThrow(e = Wb) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw qb(e) ? new e(this.toOperationNode()) : e(this.toOperationNode());
            return n;
        }
    }
    jn(Ra, "don't await WheneableMergeQueryBuilder instances directly. To execute the query you need to call `execute`.");
    class yP {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        thenDelete() {
            return new Ra({
                ...this.#e,
                queryNode: ea.cloneWithThen(this.#e.queryNode, m0("delete"))
            });
        }
        thenDoNothing() {
            return new Ra({
                ...this.#e,
                queryNode: ea.cloneWithThen(this.#e.queryNode, m0("do nothing"))
            });
        }
        thenUpdate(e) {
            return new Ra({
                ...this.#e,
                queryNode: ea.cloneWithThen(this.#e.queryNode, m0(e(new Mr({
                    queryId: this.#e.queryId,
                    executor: eT,
                    queryNode: _y.createWithoutTable()
                }))))
            });
        }
        thenUpdateSet(...e) {
            return this.thenUpdate((n)=>n.set(...e));
        }
    }
    jn(yP, "don't await MatchedThenableMergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");
    class pW {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        thenDoNothing() {
            return new Ra({
                ...this.#e,
                queryNode: ea.cloneWithThen(this.#e.queryNode, m0("do nothing"))
            });
        }
        thenInsertValues(e) {
            const [n, r] = lW(e);
            return new Ra({
                ...this.#e,
                queryNode: ea.cloneWithThen(this.#e.queryNode, m0(Ta.cloneWith(Ta.createWithoutInto(), {
                    columns: n,
                    values: r
                })))
            });
        }
    }
    jn(pW, "don't await NotMatchedThenableMergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");
    class Mf {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        selectFrom(e) {
            return vP({
                queryId: br(),
                executor: this.#e.executor,
                queryNode: vr.createFrom(U0(e), this.#e.withNode)
            });
        }
        selectNoFrom(e) {
            return vP({
                queryId: br(),
                executor: this.#e.executor,
                queryNode: vr.cloneWithSelections(vr.create(this.#e.withNode), nc(e))
            });
        }
        insertInto(e) {
            return new $r({
                queryId: br(),
                executor: this.#e.executor,
                queryNode: Ta.create(Mi(e), this.#e.withNode)
            });
        }
        replaceInto(e) {
            return new $r({
                queryId: br(),
                executor: this.#e.executor,
                queryNode: Ta.create(Mi(e), this.#e.withNode, !0)
            });
        }
        deleteFrom(e) {
            return new yr({
                queryId: br(),
                executor: this.#e.executor,
                queryNode: bp.create(U0(e), this.#e.withNode)
            });
        }
        updateTable(e) {
            return new Mr({
                queryId: br(),
                executor: this.#e.executor,
                queryNode: _y.create(z0(e), this.#e.withNode)
            });
        }
        mergeInto(e) {
            return new Rp({
                queryId: br(),
                executor: this.#e.executor,
                queryNode: ea.create(wW(e), this.#e.withNode)
            });
        }
        with(e, n) {
            const r = _F(e, n);
            return new Mf({
                ...this.#e,
                withNode: this.#e.withNode ? R_.cloneWithExpression(this.#e.withNode, r) : R_.create(r)
            });
        }
        withRecursive(e, n) {
            const r = _F(e, n);
            return new Mf({
                ...this.#e,
                withNode: this.#e.withNode ? R_.cloneWithExpression(this.#e.withNode, r) : R_.create(r, {
                    recursive: !0
                })
            });
        }
        withPlugin(e) {
            return new Mf({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        withoutPlugins() {
            return new Mf({
                ...this.#e,
                executor: this.#e.executor.withoutPlugins()
            });
        }
        withSchema(e) {
            return new Mf({
                ...this.#e,
                executor: this.#e.executor.withPluginAtFront(new Hb(e))
            });
        }
    }
    function rQ() {
        return new Mf({
            executor: eT
        });
    }
    function iQ(t, e) {
        return new wy({
            joinNode: f0.create(t, z0(e))
        });
    }
    function sQ() {
        return new F0({
            overNode: gP.create()
        });
    }
    function _o(t, e) {
        if (e.length === 3) return aQ(t, e[0], e[1], e[2]);
        if (e.length === 2) return oQ(t, e[0], e[1]);
        throw new Error("not implemented");
    }
    function oQ(t, e, n) {
        return n(iQ(t, e)).toOperationNode();
    }
    function aQ(t, e, n, r) {
        return f0.createWithOn(t, z0(e), Hc(n, "=", r));
    }
    const lQ = ee({
        is (t) {
            return t.kind === "OffsetNode";
        },
        create (t) {
            return ee({
                kind: "OffsetNode",
                offset: t
            });
        }
    }), cQ = ee({
        is (t) {
            return t.kind === "GroupByItemNode";
        },
        create (t) {
            return ee({
                kind: "GroupByItemNode",
                groupBy: t
            });
        }
    });
    function uQ(t) {
        return t = Ba(t) ? t(dv()) : t, D0(t).map(cQ.create);
    }
    const mW = ee({
        is (t) {
            return t.kind === "SetOperationNode";
        },
        create (t, e, n) {
            return ee({
                kind: "SetOperationNode",
                operator: t,
                expression: e,
                all: n
            });
        }
    });
    function xg(t, e, n) {
        return Ba(e) && (e = e(tO())), cd(e) || (e = [
            e
        ]), e.map((r)=>mW.create(t, hm(r), n));
    }
    class Tr {
        #e;
        constructor(e){
            this.#e = e;
        }
        get expressionType() {}
        as(e) {
            return new eO(this, e);
        }
        or(...e) {
            return new sE(cv.create(this.#e, Rs(e)));
        }
        and(...e) {
            return new oE(qf.create(this.#e, Rs(e)));
        }
        $castTo() {
            return new Tr(this.#e);
        }
        $notNull() {
            return new Tr(this.#e);
        }
        toOperationNode() {
            return this.#e;
        }
    }
    class eO {
        #e;
        #t;
        constructor(e, n){
            this.#e = e, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        toOperationNode() {
            return nh.create(this.#e.toOperationNode(), oa(this.#t) ? this.#t.toOperationNode() : Xr.create(this.#t));
        }
    }
    class sE {
        #e;
        constructor(e){
            this.#e = e;
        }
        get expressionType() {}
        as(e) {
            return new eO(this, e);
        }
        or(...e) {
            return new sE(cv.create(this.#e, Rs(e)));
        }
        $castTo() {
            return new sE(this.#e);
        }
        toOperationNode() {
            return Dy.create(this.#e);
        }
    }
    class oE {
        #e;
        constructor(e){
            this.#e = e;
        }
        get expressionType() {}
        as(e) {
            return new eO(this, e);
        }
        and(...e) {
            return new oE(qf.create(this.#e, Rs(e)));
        }
        $castTo() {
            return new oE(this.#e);
        }
        toOperationNode() {
            return Dy.create(this.#e);
        }
    }
    const dQ = {
        is (t) {
            return t.kind === "FetchNode";
        },
        create (t, e) {
            return {
                kind: "FetchNode",
                rowCount: qc.create(t),
                modifier: e
            };
        }
    };
    function fQ(t, e) {
        if (!JM(t) && !Hk(t)) throw new Error(`Invalid fetch row count: ${t}`);
        if (!hQ(e)) throw new Error(`Invalid fetch modifier: ${e}`);
        return dQ.create(t, e);
    }
    function hQ(t) {
        return t === "only" || t === "with ties";
    }
    class ln {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        get expressionType() {}
        get isSelectQueryBuilder() {
            return !0;
        }
        where(...e) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithWhere(this.#e.queryNode, Rs(e))
            });
        }
        whereRef(e, n, r) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithWhere(this.#e.queryNode, Hc(e, n, r))
            });
        }
        having(...e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithHaving(this.#e.queryNode, Rs(e))
            });
        }
        havingRef(e, n, r) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithHaving(this.#e.queryNode, Hc(e, n, r))
            });
        }
        select(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithSelections(this.#e.queryNode, nc(e))
            });
        }
        distinctOn(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithDistinctOn(this.#e.queryNode, D0(e))
            });
        }
        modifyFront(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithFrontModifier(this.#e.queryNode, Lu.createWithExpression(e.toOperationNode()))
            });
        }
        modifyEnd(e) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithEndModifier(this.#e.queryNode, Lu.createWithExpression(e.toOperationNode()))
            });
        }
        distinct() {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithFrontModifier(this.#e.queryNode, Lu.create("Distinct"))
            });
        }
        forUpdate(e) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithEndModifier(this.#e.queryNode, Lu.create("ForUpdate", e ? I_(e).map(Mi) : void 0))
            });
        }
        forShare(e) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithEndModifier(this.#e.queryNode, Lu.create("ForShare", e ? I_(e).map(Mi) : void 0))
            });
        }
        forKeyShare(e) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithEndModifier(this.#e.queryNode, Lu.create("ForKeyShare", e ? I_(e).map(Mi) : void 0))
            });
        }
        forNoKeyUpdate(e) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithEndModifier(this.#e.queryNode, Lu.create("ForNoKeyUpdate", e ? I_(e).map(Mi) : void 0))
            });
        }
        skipLocked() {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithEndModifier(this.#e.queryNode, Lu.create("SkipLocked"))
            });
        }
        noWait() {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithEndModifier(this.#e.queryNode, Lu.create("NoWait"))
            });
        }
        selectAll(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithSelections(this.#e.queryNode, $c(e))
            });
        }
        innerJoin(...e) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("InnerJoin", e))
            });
        }
        leftJoin(...e) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("LeftJoin", e))
            });
        }
        rightJoin(...e) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("RightJoin", e))
            });
        }
        fullJoin(...e) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("FullJoin", e))
            });
        }
        innerJoinLateral(...e) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("LateralInnerJoin", e))
            });
        }
        leftJoinLateral(...e) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithJoin(this.#e.queryNode, _o("LateralLeftJoin", e))
            });
        }
        orderBy(...e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithOrderByItems(this.#e.queryNode, zb(e))
            });
        }
        groupBy(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithGroupByItems(this.#e.queryNode, uQ(e))
            });
        }
        limit(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithLimit(this.#e.queryNode, Qk.create(Bi(e)))
            });
        }
        offset(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithOffset(this.#e.queryNode, lQ.create(Bi(e)))
            });
        }
        fetch(e, n = "only") {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithFetch(this.#e.queryNode, fQ(e, n))
            });
        }
        top(e, n) {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithTop(this.#e.queryNode, uv(e, n))
            });
        }
        union(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithSetOperations(this.#e.queryNode, xg("union", e, !1))
            });
        }
        unionAll(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithSetOperations(this.#e.queryNode, xg("union", e, !0))
            });
        }
        intersect(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithSetOperations(this.#e.queryNode, xg("intersect", e, !1))
            });
        }
        intersectAll(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithSetOperations(this.#e.queryNode, xg("intersect", e, !0))
            });
        }
        except(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithSetOperations(this.#e.queryNode, xg("except", e, !1))
            });
        }
        exceptAll(e) {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithSetOperations(this.#e.queryNode, xg("except", e, !0))
            });
        }
        as(e) {
            return new gW(this, e);
        }
        clearSelect() {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithoutSelections(this.#e.queryNode)
            });
        }
        clearWhere() {
            return new ln({
                ...this.#e,
                queryNode: Ut.cloneWithoutWhere(this.#e.queryNode)
            });
        }
        clearLimit() {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithoutLimit(this.#e.queryNode)
            });
        }
        clearOffset() {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithoutOffset(this.#e.queryNode)
            });
        }
        clearOrderBy() {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithoutOrderBy(this.#e.queryNode)
            });
        }
        clearGroupBy() {
            return new ln({
                ...this.#e,
                queryNode: vr.cloneWithoutGroupBy(this.#e.queryNode)
            });
        }
        $call(e) {
            return e(this);
        }
        $if(e, n) {
            return e ? n(this) : new ln({
                ...this.#e
            });
        }
        $castTo() {
            return new ln(this.#e);
        }
        $narrowType() {
            return new ln(this.#e);
        }
        $assertType() {
            return new ln(this.#e);
        }
        $asTuple() {
            return new Tr(this.toOperationNode());
        }
        withPlugin(e) {
            return new ln({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const e = this.compile();
            return (await this.#e.executor.executeQuery(e, this.#e.queryId)).rows;
        }
        async executeTakeFirst() {
            const [e] = await this.execute();
            return e;
        }
        async executeTakeFirstOrThrow(e = Wb) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw qb(e) ? new e(this.toOperationNode()) : e(this.toOperationNode());
            return n;
        }
        async *stream(e = 100) {
            const n = this.compile(), r = this.#e.executor.stream(n, e, this.#e.queryId);
            for await (const i of r)yield* i.rows;
        }
        async explain(e, n) {
            return await new ln({
                ...this.#e,
                queryNode: Ut.cloneWithExplain(this.#e.queryNode, e, n)
            }).execute();
        }
    }
    jn(ln, "don't await SelectQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
    function vP(t) {
        return new ln(t);
    }
    class gW {
        #e;
        #t;
        constructor(e, n){
            this.#e = e, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        get isAliasedSelectQueryBuilder() {
            return !0;
        }
        toOperationNode() {
            return nh.create(this.#e.toOperationNode(), Xr.create(this.#t));
        }
    }
    jn(gW, "don't await AliasedSelectQueryBuilder instances directly. AliasedSelectQueryBuilder should never be executed directly since it's always a part of another query.");
    const Tf = ee({
        is (t) {
            return t.kind === "AggregateFunctionNode";
        },
        create (t, e = []) {
            return ee({
                kind: "AggregateFunctionNode",
                func: t,
                aggregated: e
            });
        },
        cloneWithDistinct (t) {
            return ee({
                ...t,
                distinct: !0
            });
        },
        cloneWithOrderBy (t, e) {
            return ee({
                ...t,
                orderBy: t.orderBy ? $f.cloneWithItems(t.orderBy, e) : $f.create(e)
            });
        },
        cloneWithFilter (t, e) {
            return ee({
                ...t,
                filter: t.filter ? Yo.cloneWithOperation(t.filter, "And", e) : Yo.create(e)
            });
        },
        cloneWithOrFilter (t, e) {
            return ee({
                ...t,
                filter: t.filter ? Yo.cloneWithOperation(t.filter, "Or", e) : Yo.create(e)
            });
        },
        cloneWithOver (t, e) {
            return ee({
                ...t,
                over: e
            });
        }
    }), CF = ee({
        is (t) {
            return t.kind === "FunctionNode";
        },
        create (t, e) {
            return ee({
                kind: "FunctionNode",
                func: t,
                arguments: e
            });
        }
    });
    class sl {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        get expressionType() {}
        as(e) {
            return new pQ(this, e);
        }
        distinct() {
            return new sl({
                ...this.#e,
                aggregateFunctionNode: Tf.cloneWithDistinct(this.#e.aggregateFunctionNode)
            });
        }
        orderBy(e, n) {
            return new sl({
                ...this.#e,
                aggregateFunctionNode: Tf.cloneWithOrderBy(this.#e.aggregateFunctionNode, zb([
                    e,
                    n
                ]))
            });
        }
        filterWhere(...e) {
            return new sl({
                ...this.#e,
                aggregateFunctionNode: Tf.cloneWithFilter(this.#e.aggregateFunctionNode, Rs(e))
            });
        }
        filterWhereRef(e, n, r) {
            return new sl({
                ...this.#e,
                aggregateFunctionNode: Tf.cloneWithFilter(this.#e.aggregateFunctionNode, Hc(e, n, r))
            });
        }
        over(e) {
            const n = sQ();
            return new sl({
                ...this.#e,
                aggregateFunctionNode: Tf.cloneWithOver(this.#e.aggregateFunctionNode, (e ? e(n) : n).toOperationNode())
            });
        }
        $call(e) {
            return e(this);
        }
        $castTo() {
            return new sl(this.#e);
        }
        $notNull() {
            return new sl(this.#e);
        }
        toOperationNode() {
            return this.#e.aggregateFunctionNode;
        }
    }
    jn(sl, "don't await AggregateFunctionBuilder instances. They are never executed directly and are always just a part of a query.");
    class pQ {
        #e;
        #t;
        constructor(e, n){
            this.#e = e, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        toOperationNode() {
            return nh.create(this.#e.toOperationNode(), Xr.create(this.#t));
        }
    }
    function yW() {
        const t = (n, r)=>new Tr(CF.create(n, D0(r ?? []))), e = (n, r)=>new sl({
                aggregateFunctionNode: Tf.create(n, r ? D0(r) : void 0)
            });
        return Object.assign(t, {
            agg: e,
            avg (n) {
                return e("avg", [
                    n
                ]);
            },
            coalesce (...n) {
                return t("coalesce", n);
            },
            count (n) {
                return e("count", [
                    n
                ]);
            },
            countAll (n) {
                return new sl({
                    aggregateFunctionNode: Tf.create("count", $c(n))
                });
            },
            max (n) {
                return e("max", [
                    n
                ]);
            },
            min (n) {
                return e("min", [
                    n
                ]);
            },
            sum (n) {
                return e("sum", [
                    n
                ]);
            },
            any (n) {
                return t("any", [
                    n
                ]);
            },
            jsonAgg (n) {
                return new sl({
                    aggregateFunctionNode: Tf.create("json_agg", [
                        Oa(n) ? Mi(n) : n.toOperationNode()
                    ])
                });
            },
            toJson (n) {
                return new Tr(CF.create("to_json", [
                    Oa(n) ? Mi(n) : n.toOperationNode()
                ]));
            }
        });
    }
    const mQ = ee({
        is (t) {
            return t.kind === "UnaryOperationNode";
        },
        create (t, e) {
            return ee({
                kind: "UnaryOperationNode",
                operator: t,
                operand: e
            });
        }
    });
    function gQ(t, e) {
        return mQ.create(Hf.create(t), Ia(e));
    }
    const Lc = ee({
        is (t) {
            return t.kind === "CaseNode";
        },
        create (t) {
            return ee({
                kind: "CaseNode",
                value: t
            });
        },
        cloneWithWhen (t, e) {
            return ee({
                ...t,
                when: ee(t.when ? [
                    ...t.when,
                    e
                ] : [
                    e
                ])
            });
        },
        cloneWithThen (t, e) {
            return ee({
                ...t,
                when: t.when ? ee([
                    ...t.when.slice(0, -1),
                    Vb.cloneWithResult(t.when[t.when.length - 1], e)
                ]) : void 0
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    });
    class vW {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        when(...e) {
            return new xW({
                ...this.#e,
                node: Lc.cloneWithWhen(this.#e.node, Vb.create(Rs(e)))
            });
        }
    }
    class xW {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        then(e) {
            return new yQ({
                ...this.#e,
                node: Lc.cloneWithThen(this.#e.node, Kk(e) ? Yk(e) : Bi(e))
            });
        }
    }
    class yQ {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        when(...e) {
            return new xW({
                ...this.#e,
                node: Lc.cloneWithWhen(this.#e.node, Vb.create(Rs(e)))
            });
        }
        else(e) {
            return new vQ({
                ...this.#e,
                node: Lc.cloneWith(this.#e.node, {
                    else: Kk(e) ? Yk(e) : Bi(e)
                })
            });
        }
        end() {
            return new Tr(Lc.cloneWith(this.#e.node, {
                isStatement: !1
            }));
        }
        endCase() {
            return new Tr(Lc.cloneWith(this.#e.node, {
                isStatement: !0
            }));
        }
    }
    class vQ {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        end() {
            return new Tr(Lc.cloneWith(this.#e.node, {
                isStatement: !1
            }));
        }
        endCase() {
            return new Tr(Lc.cloneWith(this.#e.node, {
                isStatement: !0
            }));
        }
    }
    const IF = ee({
        is (t) {
            return t.kind === "JSONPathLegNode";
        },
        create (t, e) {
            return ee({
                kind: "JSONPathLegNode",
                type: t,
                value: e
            });
        }
    });
    class xP {
        #e;
        constructor(e){
            this.#e = e;
        }
        at(e) {
            return this.#t("ArrayLocation", e);
        }
        key(e) {
            return this.#t("Member", e);
        }
        #t(e, n) {
            return eE.is(this.#e) ? new B0(eE.cloneWithTraversal(this.#e, h0.is(this.#e.traversal) ? h0.cloneWithLeg(this.#e.traversal, IF.create(e, n)) : rW.cloneWithValue(this.#e.traversal, qc.createImmediate(n)))) : new B0(h0.cloneWithLeg(this.#e, IF.create(e, n)));
        }
    }
    class B0 extends xP {
        #e;
        constructor(e){
            super(e), this.#e = e;
        }
        get expressionType() {}
        as(e) {
            return new xQ(this, e);
        }
        $castTo() {
            return new B0(this.#e);
        }
        $notNull() {
            return new B0(this.#e);
        }
        toOperationNode() {
            return this.#e;
        }
    }
    class xQ {
        #e;
        #t;
        constructor(e, n){
            this.#e = e, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        toOperationNode() {
            return nh.create(this.#e.toOperationNode(), oa(this.#t) ? this.#t.toOperationNode() : Xr.create(this.#t));
        }
    }
    const RF = ee({
        is (t) {
            return t.kind === "TupleNode";
        },
        create (t) {
            return ee({
                kind: "TupleNode",
                values: ee(t)
            });
        }
    }), bQ = [
        "varchar",
        "char",
        "text",
        "integer",
        "int2",
        "int4",
        "int8",
        "smallint",
        "bigint",
        "boolean",
        "real",
        "double precision",
        "float4",
        "float8",
        "decimal",
        "numeric",
        "binary",
        "bytea",
        "date",
        "datetime",
        "time",
        "timetz",
        "timestamp",
        "timestamptz",
        "serial",
        "bigserial",
        "uuid",
        "json",
        "jsonb",
        "blob",
        "varbinary",
        "int4range",
        "int4multirange",
        "int8range",
        "int8multirange",
        "numrange",
        "nummultirange",
        "tsrange",
        "tsmultirange",
        "tstzrange",
        "tstzmultirange",
        "daterange",
        "datemultirange"
    ], wQ = [
        /^varchar\(\d+\)$/,
        /^char\(\d+\)$/,
        /^decimal\(\d+, \d+\)$/,
        /^numeric\(\d+, \d+\)$/,
        /^binary\(\d+\)$/,
        /^datetime\(\d+\)$/,
        /^time\(\d+\)$/,
        /^timetz\(\d+\)$/,
        /^timestamp\(\d+\)$/,
        /^timestamptz\(\d+\)$/,
        /^varbinary\(\d+\)$/
    ], _Q = ee({
        is (t) {
            return t.kind === "DataTypeNode";
        },
        create (t) {
            return ee({
                kind: "DataTypeNode",
                dataType: t
            });
        }
    });
    function SQ(t) {
        return !!(bQ.includes(t) || wQ.some((e)=>e.test(t)));
    }
    function Yp(t) {
        if (oa(t)) return t.toOperationNode();
        if (SQ(t)) return _Q.create(t);
        throw new Error(`invalid column data type ${JSON.stringify(t)}`);
    }
    const EQ = ee({
        is (t) {
            return t.kind === "CastNode";
        },
        create (t, e) {
            return ee({
                kind: "CastNode",
                expression: t,
                dataType: e
            });
        }
    });
    function tO(t = eT) {
        function e(i, s, o) {
            return new Tr(Zk(i, s, o));
        }
        function n(i, s) {
            return new Tr(gQ(i, s));
        }
        const r = Object.assign(e, {
            fn: void 0,
            eb: void 0,
            selectFrom (i) {
                return vP({
                    queryId: br(),
                    executor: t,
                    queryNode: vr.createFrom(U0(i))
                });
            },
            case (i) {
                return new vW({
                    node: Lc.create(Of(i) ? void 0 : Ia(i))
                });
            },
            ref (i, s) {
                return Of(s) ? new Tr(ud(i)) : new xP(EJ(i, s));
            },
            jsonPath () {
                return new xP(h0.create());
            },
            table (i) {
                return new Tr(Mi(i));
            },
            val (i) {
                return new Tr(Bi(i));
            },
            refTuple (...i) {
                return new Tr(RF.create(i.map(Ia)));
            },
            tuple (...i) {
                return new Tr(RF.create(i.map(Bi)));
            },
            lit (i) {
                return new Tr(Yk(i));
            },
            unary: n,
            not (i) {
                return n("not", i);
            },
            exists (i) {
                return n("exists", i);
            },
            neg (i) {
                return n("-", i);
            },
            between (i, s, o) {
                return new Tr(Ly.create(Ia(i), Hf.create("between"), qf.create(Bi(s), Bi(o))));
            },
            betweenSymmetric (i, s, o) {
                return new Tr(Ly.create(Ia(i), Hf.create("between symmetric"), qf.create(Bi(s), Bi(o))));
            },
            and (i) {
                return cd(i) ? new Tr(nE(i, "and")) : new Tr(dF(i, "and"));
            },
            or (i) {
                return cd(i) ? new Tr(nE(i, "or")) : new Tr(dF(i, "or"));
            },
            parens (...i) {
                const s = Rs(i);
                return Dy.is(s) ? new Tr(s) : new Tr(Dy.create(s));
            },
            cast (i, s) {
                return new Tr(EQ.create(Ia(i), Yp(s)));
            },
            withSchema (i) {
                return tO(t.withPluginAtFront(new Hb(i)));
            }
        });
        return r.fn = yW(), r.eb = r, r;
    }
    function dv(t) {
        return tO();
    }
    function hm(t) {
        if (oa(t)) return t.toOperationNode();
        if (Ba(t)) return t(dv()).toOperationNode();
        throw new Error(`invalid expression: ${JSON.stringify(t)}`);
    }
    function bW(t) {
        if (oa(t)) return t.toOperationNode();
        if (Ba(t)) return t(dv()).toOperationNode();
        throw new Error(`invalid aliased expression: ${JSON.stringify(t)}`);
    }
    function $b(t) {
        return pJ(t) || mJ(t) || Ba(t);
    }
    function U0(t) {
        return cd(t) ? t.map((e)=>z0(e)) : [
            z0(t)
        ];
    }
    function z0(t) {
        return Oa(t) ? wW(t) : bW(t);
    }
    function wW(t) {
        const e = " as ";
        if (t.includes(e)) {
            const [n, r] = t.split(e).map(_W);
            return nh.create(Mi(n), Xr.create(r));
        } else return Mi(t);
    }
    function Mi(t) {
        const e = ".";
        if (t.includes(e)) {
            const [n, r] = t.split(e).map(_W);
            return Df.createWithSchema(n, r);
        } else return Df.create(t);
    }
    function _W(t) {
        return t.trim();
    }
    const SW = ee({
        is (t) {
            return t.kind === "AddColumnNode";
        },
        create (t) {
            return ee({
                kind: "AddColumnNode",
                column: t
            });
        }
    }), Gr = ee({
        is (t) {
            return t.kind === "ColumnDefinitionNode";
        },
        create (t, e) {
            return ee({
                kind: "ColumnDefinitionNode",
                column: Ii.create(t),
                dataType: e
            });
        },
        cloneWithFrontModifier (t, e) {
            return ee({
                ...t,
                frontModifiers: t.frontModifiers ? ee([
                    ...t.frontModifiers,
                    e
                ]) : [
                    e
                ]
            });
        },
        cloneWithEndModifier (t, e) {
            return ee({
                ...t,
                endModifiers: t.endModifiers ? ee([
                    ...t.endModifiers,
                    e
                ]) : [
                    e
                ]
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    }), EW = ee({
        is (t) {
            return t.kind === "DropColumnNode";
        },
        create (t) {
            return ee({
                kind: "DropColumnNode",
                column: Ii.create(t)
            });
        }
    }), MW = ee({
        is (t) {
            return t.kind === "RenameColumnNode";
        },
        create (t, e) {
            return ee({
                kind: "RenameColumnNode",
                column: Ii.create(t),
                renameTo: Ii.create(e)
            });
        }
    }), nO = ee({
        is (t) {
            return t.kind === "CheckConstraintNode";
        },
        create (t, e) {
            return ee({
                kind: "CheckConstraintNode",
                expression: t,
                name: e ? Xr.create(e) : void 0
            });
        }
    }), MQ = [
        "no action",
        "restrict",
        "cascade",
        "set null",
        "set default"
    ], e1 = ee({
        is (t) {
            return t.kind === "ReferencesNode";
        },
        create (t, e) {
            return ee({
                kind: "ReferencesNode",
                table: t,
                columns: ee([
                    ...e
                ])
            });
        },
        cloneWithOnDelete (t, e) {
            return ee({
                ...t,
                onDelete: e
            });
        },
        cloneWithOnUpdate (t, e) {
            return ee({
                ...t,
                onUpdate: e
            });
        }
    });
    function TW(t) {
        return oa(t) ? t.toOperationNode() : qc.createImmediate(t);
    }
    const A_ = ee({
        is (t) {
            return t.kind === "GeneratedNode";
        },
        create (t) {
            return ee({
                kind: "GeneratedNode",
                ...t
            });
        },
        createWithExpression (t) {
            return ee({
                kind: "GeneratedNode",
                always: !0,
                expression: t
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    }), TQ = ee({
        is (t) {
            return t.kind === "DefaultValueNode";
        },
        create (t) {
            return ee({
                kind: "DefaultValueNode",
                defaultValue: t
            });
        }
    });
    function aE(t) {
        if (MQ.includes(t)) return t;
        throw new Error(`invalid OnModifyForeignAction ${t}`);
    }
    class Nr {
        #e;
        constructor(e){
            this.#e = e;
        }
        autoIncrement() {
            return new Nr(Gr.cloneWith(this.#e, {
                autoIncrement: !0
            }));
        }
        identity() {
            return new Nr(Gr.cloneWith(this.#e, {
                identity: !0
            }));
        }
        primaryKey() {
            return new Nr(Gr.cloneWith(this.#e, {
                primaryKey: !0
            }));
        }
        references(e) {
            const n = ud(e);
            if (!n.table || $k.is(n.column)) throw new Error(`invalid call references('${e}'). The reference must have format table.column or schema.table.column`);
            return new Nr(Gr.cloneWith(this.#e, {
                references: e1.create(n.table, [
                    n.column
                ])
            }));
        }
        onDelete(e) {
            if (!this.#e.references) throw new Error("on delete constraint can only be added for foreign keys");
            return new Nr(Gr.cloneWith(this.#e, {
                references: e1.cloneWithOnDelete(this.#e.references, aE(e))
            }));
        }
        onUpdate(e) {
            if (!this.#e.references) throw new Error("on update constraint can only be added for foreign keys");
            return new Nr(Gr.cloneWith(this.#e, {
                references: e1.cloneWithOnUpdate(this.#e.references, aE(e))
            }));
        }
        unique() {
            return new Nr(Gr.cloneWith(this.#e, {
                unique: !0
            }));
        }
        notNull() {
            return new Nr(Gr.cloneWith(this.#e, {
                notNull: !0
            }));
        }
        unsigned() {
            return new Nr(Gr.cloneWith(this.#e, {
                unsigned: !0
            }));
        }
        defaultTo(e) {
            return new Nr(Gr.cloneWith(this.#e, {
                defaultTo: TQ.create(TW(e))
            }));
        }
        check(e) {
            return new Nr(Gr.cloneWith(this.#e, {
                check: nO.create(e.toOperationNode())
            }));
        }
        generatedAlwaysAs(e) {
            return new Nr(Gr.cloneWith(this.#e, {
                generated: A_.createWithExpression(e.toOperationNode())
            }));
        }
        generatedAlwaysAsIdentity() {
            return new Nr(Gr.cloneWith(this.#e, {
                generated: A_.create({
                    identity: !0,
                    always: !0
                })
            }));
        }
        generatedByDefaultAsIdentity() {
            return new Nr(Gr.cloneWith(this.#e, {
                generated: A_.create({
                    identity: !0,
                    byDefault: !0
                })
            }));
        }
        stored() {
            if (!this.#e.generated) throw new Error("stored() can only be called after generatedAlwaysAs");
            return new Nr(Gr.cloneWith(this.#e, {
                generated: A_.cloneWith(this.#e.generated, {
                    stored: !0
                })
            }));
        }
        modifyFront(e) {
            return new Nr(Gr.cloneWithFrontModifier(this.#e, e.toOperationNode()));
        }
        nullsNotDistinct() {
            return new Nr(Gr.cloneWith(this.#e, {
                nullsNotDistinct: !0
            }));
        }
        ifNotExists() {
            return new Nr(Gr.cloneWith(this.#e, {
                ifNotExists: !0
            }));
        }
        modifyEnd(e) {
            return new Nr(Gr.cloneWithEndModifier(this.#e, e.toOperationNode()));
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e;
        }
    }
    jn(Nr, "don't await ColumnDefinitionBuilder instances directly.");
    const CW = ee({
        is (t) {
            return t.kind === "ModifyColumnNode";
        },
        create (t) {
            return ee({
                kind: "ModifyColumnNode",
                column: t
            });
        }
    }), lE = ee({
        is (t) {
            return t.kind === "ForeignKeyConstraintNode";
        },
        create (t, e, n, r) {
            return ee({
                kind: "ForeignKeyConstraintNode",
                columns: t,
                references: e1.create(e, n),
                name: r ? Xr.create(r) : void 0
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    });
    class Fy {
        #e;
        constructor(e){
            this.#e = e;
        }
        onDelete(e) {
            return new Fy(lE.cloneWith(this.#e, {
                onDelete: aE(e)
            }));
        }
        onUpdate(e) {
            return new Fy(lE.cloneWith(this.#e, {
                onUpdate: aE(e)
            }));
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e;
        }
    }
    jn(Fy, "don't await ForeignKeyConstraintBuilder instances directly.");
    const t1 = ee({
        is (t) {
            return t.kind === "AddConstraintNode";
        },
        create (t) {
            return ee({
                kind: "AddConstraintNode",
                constraint: t
            });
        }
    }), rO = ee({
        is (t) {
            return t.kind === "UniqueConstraintNode";
        },
        create (t, e, n) {
            return ee({
                kind: "UniqueConstraintNode",
                columns: ee(t.map(Ii.create)),
                name: e ? Xr.create(e) : void 0,
                nullsNotDistinct: n
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    }), n1 = ee({
        is (t) {
            return t.kind === "DropConstraintNode";
        },
        create (t) {
            return ee({
                kind: "DropConstraintNode",
                constraintName: Xr.create(t)
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    }), xx = ee({
        is (t) {
            return t.kind === "AlterColumnNode";
        },
        create (t, e, n) {
            return ee({
                kind: "AlterColumnNode",
                column: Ii.create(t),
                [e]: n
            });
        }
    });
    class iO {
        #e;
        constructor(e){
            this.#e = e;
        }
        setDataType(e) {
            return new Kg(xx.create(this.#e, "dataType", Yp(e)));
        }
        setDefault(e) {
            return new Kg(xx.create(this.#e, "setDefault", TW(e)));
        }
        dropDefault() {
            return new Kg(xx.create(this.#e, "dropDefault", !0));
        }
        setNotNull() {
            return new Kg(xx.create(this.#e, "setNotNull", !0));
        }
        dropNotNull() {
            return new Kg(xx.create(this.#e, "dropNotNull", !0));
        }
        $call(e) {
            return e(this);
        }
    }
    jn(iO, "don't await AlterColumnBuilder instances");
    class Kg {
        #e;
        constructor(e){
            this.#e = e;
        }
        toOperationNode() {
            return this.#e;
        }
    }
    jn(Kg, "don't await AlteredColumnBuilder instances");
    class pp {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(pp, "don't await AlterTableExecutor instances directly. To execute the query you need to call `execute`");
    class V0 {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        onDelete(e) {
            return new V0({
                ...this.#e,
                constraintBuilder: this.#e.constraintBuilder.onDelete(e)
            });
        }
        onUpdate(e) {
            return new V0({
                ...this.#e,
                constraintBuilder: this.#e.constraintBuilder.onUpdate(e)
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(xr.cloneWithTableProps(this.#e.node, {
                addConstraint: t1.create(this.#e.constraintBuilder.toOperationNode())
            }), this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(V0, "don't await AlterTableAddForeignKeyConstraintBuilder instances directly. To execute the query you need to call `execute`");
    class Ey {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        ifExists() {
            return new Ey({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    dropConstraint: n1.cloneWith(this.#e.node.dropConstraint, {
                        ifExists: !0
                    })
                })
            });
        }
        cascade() {
            return new Ey({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    dropConstraint: n1.cloneWith(this.#e.node.dropConstraint, {
                        modifier: "cascade"
                    })
                })
            });
        }
        restrict() {
            return new Ey({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    dropConstraint: n1.cloneWith(this.#e.node.dropConstraint, {
                        modifier: "restrict"
                    })
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(Ey, "don't await AlterTableDropConstraintBuilder instances directly. To execute the query you need to call `execute`");
    const IW = ee({
        is (t) {
            return t.kind === "PrimaryKeyConstraintNode";
        },
        create (t, e) {
            return ee({
                kind: "PrimaryKeyConstraintNode",
                columns: ee(t.map(Ii.create)),
                name: e ? Xr.create(e) : void 0
            });
        }
    }), Yg = ee({
        is (t) {
            return t.kind === "AddIndexNode";
        },
        create (t) {
            return ee({
                kind: "AddIndexNode",
                name: Xr.create(t)
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        },
        cloneWithColumns (t, e) {
            return ee({
                ...t,
                columns: [
                    ...t.columns || [],
                    ...e
                ]
            });
        }
    });
    class Cf {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        unique() {
            return new Cf({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    addIndex: Yg.cloneWith(this.#e.node.addIndex, {
                        unique: !0
                    })
                })
            });
        }
        column(e) {
            return new Cf({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    addIndex: Yg.cloneWithColumns(this.#e.node.addIndex, [
                        tE(e)
                    ])
                })
            });
        }
        columns(e) {
            return new Cf({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    addIndex: Yg.cloneWithColumns(this.#e.node.addIndex, e.map(tE))
                })
            });
        }
        expression(e) {
            return new Cf({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    addIndex: Yg.cloneWithColumns(this.#e.node.addIndex, [
                        e.toOperationNode()
                    ])
                })
            });
        }
        using(e) {
            return new Cf({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    addIndex: Yg.cloneWith(this.#e.node.addIndex, {
                        using: Ws.createWithSql(e)
                    })
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(Cf, "don't await AlterTableAddIndexBuilder instances directly. To execute the query you need to call `execute`");
    class Gb {
        #e;
        constructor(e){
            this.#e = e;
        }
        toOperationNode() {
            return this.#e;
        }
        nullsNotDistinct() {
            return new Gb(rO.cloneWith(this.#e, {
                nullsNotDistinct: !0
            }));
        }
    }
    jn(Gb, "don't await UniqueConstraintNodeBuilder instances directly.");
    class RW {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        renameTo(e) {
            return new pp({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    renameTo: Mi(e)
                })
            });
        }
        setSchema(e) {
            return new pp({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    setSchema: Xr.create(e)
                })
            });
        }
        alterColumn(e, n) {
            const r = n(new iO(e));
            return new al({
                ...this.#e,
                node: xr.cloneWithColumnAlteration(this.#e.node, r.toOperationNode())
            });
        }
        dropColumn(e) {
            return new al({
                ...this.#e,
                node: xr.cloneWithColumnAlteration(this.#e.node, EW.create(e))
            });
        }
        renameColumn(e, n) {
            return new al({
                ...this.#e,
                node: xr.cloneWithColumnAlteration(this.#e.node, MW.create(e, n))
            });
        }
        addColumn(e, n, r = Lf) {
            const i = r(new Nr(Gr.create(e, Yp(n))));
            return new al({
                ...this.#e,
                node: xr.cloneWithColumnAlteration(this.#e.node, SW.create(i.toOperationNode()))
            });
        }
        modifyColumn(e, n, r = Lf) {
            const i = r(new Nr(Gr.create(e, Yp(n))));
            return new al({
                ...this.#e,
                node: xr.cloneWithColumnAlteration(this.#e.node, CW.create(i.toOperationNode()))
            });
        }
        addUniqueConstraint(e, n, r = Lf) {
            const i = r(new Gb(rO.create(n, e)));
            return new pp({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    addConstraint: t1.create(i.toOperationNode())
                })
            });
        }
        addCheckConstraint(e, n) {
            return new pp({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    addConstraint: t1.create(nO.create(n.toOperationNode(), e))
                })
            });
        }
        addForeignKeyConstraint(e, n, r, i) {
            return new V0({
                ...this.#e,
                constraintBuilder: new Fy(lE.create(n.map(Ii.create), Mi(r), i.map(Ii.create), e))
            });
        }
        addPrimaryKeyConstraint(e, n) {
            return new pp({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    addConstraint: t1.create(IW.create(n, e))
                })
            });
        }
        dropConstraint(e) {
            return new Ey({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    dropConstraint: n1.create(e)
                })
            });
        }
        addIndex(e) {
            return new Cf({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    addIndex: Yg.create(e)
                })
            });
        }
        dropIndex(e) {
            return new pp({
                ...this.#e,
                node: xr.cloneWithTableProps(this.#e.node, {
                    dropIndex: d0.create(e)
                })
            });
        }
        $call(e) {
            return e(this);
        }
    }
    jn(RW, "don't await AlterTableBuilder instances");
    class al {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        alterColumn(e, n) {
            const r = n(new iO(e));
            return new al({
                ...this.#e,
                node: xr.cloneWithColumnAlteration(this.#e.node, r.toOperationNode())
            });
        }
        dropColumn(e) {
            return new al({
                ...this.#e,
                node: xr.cloneWithColumnAlteration(this.#e.node, EW.create(e))
            });
        }
        renameColumn(e, n) {
            return new al({
                ...this.#e,
                node: xr.cloneWithColumnAlteration(this.#e.node, MW.create(e, n))
            });
        }
        addColumn(e, n, r = Lf) {
            const i = r(new Nr(Gr.create(e, Yp(n))));
            return new al({
                ...this.#e,
                node: xr.cloneWithColumnAlteration(this.#e.node, SW.create(i.toOperationNode()))
            });
        }
        modifyColumn(e, n, r = Lf) {
            const i = r(new Nr(Gr.create(e, Yp(n))));
            return new al({
                ...this.#e,
                node: xr.cloneWithColumnAlteration(this.#e.node, CW.create(i.toOperationNode()))
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(al, "don't await AlterTableColumnAlteringBuilder instances directly. To execute the query you need to call `execute`");
    class AW extends fW {
        transformValue(e) {
            return {
                ...super.transformValue(e),
                immediate: !0
            };
        }
    }
    class tl {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        ifNotExists() {
            return new tl({
                ...this.#e,
                node: Hu.cloneWith(this.#e.node, {
                    ifNotExists: !0
                })
            });
        }
        unique() {
            return new tl({
                ...this.#e,
                node: Hu.cloneWith(this.#e.node, {
                    unique: !0
                })
            });
        }
        nullsNotDistinct() {
            return new tl({
                ...this.#e,
                node: Hu.cloneWith(this.#e.node, {
                    nullsNotDistinct: !0
                })
            });
        }
        on(e) {
            return new tl({
                ...this.#e,
                node: Hu.cloneWith(this.#e.node, {
                    table: Mi(e)
                })
            });
        }
        column(e) {
            return new tl({
                ...this.#e,
                node: Hu.cloneWithColumns(this.#e.node, [
                    tE(e)
                ])
            });
        }
        columns(e) {
            return new tl({
                ...this.#e,
                node: Hu.cloneWithColumns(this.#e.node, e.map(tE))
            });
        }
        expression(e) {
            return new tl({
                ...this.#e,
                node: Hu.cloneWithColumns(this.#e.node, [
                    e.toOperationNode()
                ])
            });
        }
        using(e) {
            return new tl({
                ...this.#e,
                node: Hu.cloneWith(this.#e.node, {
                    using: Ws.createWithSql(e)
                })
            });
        }
        where(...e) {
            const n = new AW;
            return new tl({
                ...this.#e,
                node: Ut.cloneWithWhere(this.#e.node, n.transformNode(Rs(e)))
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(tl, "don't await CreateIndexBuilder instances directly. To execute the query you need to call `execute`");
    class tT {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        ifNotExists() {
            return new tT({
                ...this.#e,
                node: JV.cloneWith(this.#e.node, {
                    ifNotExists: !0
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(tT, "don't await CreateSchemaBuilder instances directly. To execute the query you need to call `execute`");
    function CQ(t) {
        if (hJ.includes(t)) return t;
        throw new Error(`invalid OnCommitAction ${t}`);
    }
    class Go {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        temporary() {
            return new Go({
                ...this.#e,
                node: Ea.cloneWith(this.#e.node, {
                    temporary: !0
                })
            });
        }
        onCommit(e) {
            return new Go({
                ...this.#e,
                node: Ea.cloneWith(this.#e.node, {
                    onCommit: CQ(e)
                })
            });
        }
        ifNotExists() {
            return new Go({
                ...this.#e,
                node: Ea.cloneWith(this.#e.node, {
                    ifNotExists: !0
                })
            });
        }
        addColumn(e, n, r = Lf) {
            const i = r(new Nr(Gr.create(e, Yp(n))));
            return new Go({
                ...this.#e,
                node: Ea.cloneWithColumn(this.#e.node, i.toOperationNode())
            });
        }
        addPrimaryKeyConstraint(e, n) {
            return new Go({
                ...this.#e,
                node: Ea.cloneWithConstraint(this.#e.node, IW.create(n, e))
            });
        }
        addUniqueConstraint(e, n, r = Lf) {
            const i = r(new Gb(rO.create(n, e)));
            return new Go({
                ...this.#e,
                node: Ea.cloneWithConstraint(this.#e.node, i.toOperationNode())
            });
        }
        addCheckConstraint(e, n) {
            return new Go({
                ...this.#e,
                node: Ea.cloneWithConstraint(this.#e.node, nO.create(n.toOperationNode(), e))
            });
        }
        addForeignKeyConstraint(e, n, r, i, s = Lf) {
            const o = s(new Fy(lE.create(n.map(Ii.create), Mi(r), i.map(Ii.create), e)));
            return new Go({
                ...this.#e,
                node: Ea.cloneWithConstraint(this.#e.node, o.toOperationNode())
            });
        }
        modifyFront(e) {
            return new Go({
                ...this.#e,
                node: Ea.cloneWithFrontModifier(this.#e.node, e.toOperationNode())
            });
        }
        modifyEnd(e) {
            return new Go({
                ...this.#e,
                node: Ea.cloneWithEndModifier(this.#e.node, e.toOperationNode())
            });
        }
        as(e) {
            return new Go({
                ...this.#e,
                node: Ea.cloneWith(this.#e.node, {
                    selectQuery: hm(e)
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(Go, "don't await CreateTableBuilder instances directly. To execute the query you need to call `execute`");
    class My {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        on(e) {
            return new My({
                ...this.#e,
                node: d0.cloneWith(this.#e.node, {
                    table: Mi(e)
                })
            });
        }
        ifExists() {
            return new My({
                ...this.#e,
                node: d0.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        cascade() {
            return new My({
                ...this.#e,
                node: d0.cloneWith(this.#e.node, {
                    cascade: !0
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(My, "don't await DropIndexBuilder instances directly. To execute the query you need to call `execute`");
    class W0 {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        ifExists() {
            return new W0({
                ...this.#e,
                node: fP.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        cascade() {
            return new W0({
                ...this.#e,
                node: fP.cloneWith(this.#e.node, {
                    cascade: !0
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(W0, "don't await DropSchemaBuilder instances directly. To execute the query you need to call `execute`");
    class q0 {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        ifExists() {
            return new q0({
                ...this.#e,
                node: hP.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        cascade() {
            return new q0({
                ...this.#e,
                node: hP.cloneWith(this.#e.node, {
                    cascade: !0
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(q0, "don't await DropTableBuilder instances directly. To execute the query you need to call `execute`");
    const _f = ee({
        is (t) {
            return t.kind === "CreateViewNode";
        },
        create (t) {
            return ee({
                kind: "CreateViewNode",
                name: Wf.create(t)
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    });
    class IQ {
        #e = new AW;
        transformQuery(e) {
            return this.#e.transformNode(e.node);
        }
        transformResult(e) {
            return Promise.resolve(e.result);
        }
    }
    class Gu {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        temporary() {
            return new Gu({
                ...this.#e,
                node: _f.cloneWith(this.#e.node, {
                    temporary: !0
                })
            });
        }
        materialized() {
            return new Gu({
                ...this.#e,
                node: _f.cloneWith(this.#e.node, {
                    materialized: !0
                })
            });
        }
        ifNotExists() {
            return new Gu({
                ...this.#e,
                node: _f.cloneWith(this.#e.node, {
                    ifNotExists: !0
                })
            });
        }
        orReplace() {
            return new Gu({
                ...this.#e,
                node: _f.cloneWith(this.#e.node, {
                    orReplace: !0
                })
            });
        }
        columns(e) {
            return new Gu({
                ...this.#e,
                node: _f.cloneWith(this.#e.node, {
                    columns: e.map(sW)
                })
            });
        }
        as(e) {
            const n = e.withPlugin(new IQ).toOperationNode();
            return new Gu({
                ...this.#e,
                node: _f.cloneWith(this.#e.node, {
                    as: n
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(Gu, "don't await CreateViewBuilder instances directly. To execute the query you need to call `execute`");
    const r1 = ee({
        is (t) {
            return t.kind === "DropViewNode";
        },
        create (t) {
            return ee({
                kind: "DropViewNode",
                name: Wf.create(t)
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    });
    class Ty {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        materialized() {
            return new Ty({
                ...this.#e,
                node: r1.cloneWith(this.#e.node, {
                    materialized: !0
                })
            });
        }
        ifExists() {
            return new Ty({
                ...this.#e,
                node: r1.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        cascade() {
            return new Ty({
                ...this.#e,
                node: r1.cloneWith(this.#e.node, {
                    cascade: !0
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(Ty, "don't await DropViewBuilder instances directly. To execute the query you need to call `execute`");
    const NW = ee({
        is (t) {
            return t.kind === "CreateTypeNode";
        },
        create (t) {
            return ee({
                kind: "CreateTypeNode",
                name: t
            });
        },
        cloneWithEnum (t, e) {
            return ee({
                ...t,
                enum: Xk.create(e.map((n)=>qc.createImmediate(n)))
            });
        }
    });
    class nT {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        asEnum(e) {
            return new nT({
                ...this.#e,
                node: NW.cloneWithEnum(this.#e.node, e)
            });
        }
        $call(e) {
            return e(this);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(nT, "don't await CreateTypeBuilder instances directly. To execute the query you need to call `execute`");
    const PW = ee({
        is (t) {
            return t.kind === "DropTypeNode";
        },
        create (t) {
            return ee({
                kind: "DropTypeNode",
                name: t
            });
        },
        cloneWith (t, e) {
            return ee({
                ...t,
                ...e
            });
        }
    });
    class rT {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        ifExists() {
            return new rT({
                ...this.#e,
                node: PW.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    jn(rT, "don't await DropTypeBuilder instances directly. To execute the query you need to call `execute`");
    function AF(t) {
        const e = ".";
        if (t.includes(e)) {
            const n = t.split(e).map(RQ);
            if (n.length === 2) return Wf.createWithSchema(n[0], n[1]);
            throw new Error(`invalid schemable identifier ${t}`);
        } else return Wf.create(t);
    }
    function RQ(t) {
        return t.trim();
    }
    class g0 {
        #e;
        constructor(e){
            this.#e = e;
        }
        createTable(e) {
            return new Go({
                queryId: br(),
                executor: this.#e,
                node: Ea.create(Mi(e))
            });
        }
        dropTable(e) {
            return new q0({
                queryId: br(),
                executor: this.#e,
                node: hP.create(Mi(e))
            });
        }
        createIndex(e) {
            return new tl({
                queryId: br(),
                executor: this.#e,
                node: Hu.create(e)
            });
        }
        dropIndex(e) {
            return new My({
                queryId: br(),
                executor: this.#e,
                node: d0.create(e)
            });
        }
        createSchema(e) {
            return new tT({
                queryId: br(),
                executor: this.#e,
                node: JV.create(e)
            });
        }
        dropSchema(e) {
            return new W0({
                queryId: br(),
                executor: this.#e,
                node: fP.create(e)
            });
        }
        alterTable(e) {
            return new RW({
                queryId: br(),
                executor: this.#e,
                node: xr.create(Mi(e))
            });
        }
        createView(e) {
            return new Gu({
                queryId: br(),
                executor: this.#e,
                node: _f.create(e)
            });
        }
        dropView(e) {
            return new Ty({
                queryId: br(),
                executor: this.#e,
                node: r1.create(e)
            });
        }
        createType(e) {
            return new nT({
                queryId: br(),
                executor: this.#e,
                node: NW.create(AF(e))
            });
        }
        dropType(e) {
            return new rT({
                queryId: br(),
                executor: this.#e,
                node: PW.create(AF(e))
            });
        }
        withPlugin(e) {
            return new g0(this.#e.withPlugin(e));
        }
        withoutPlugins() {
            return new g0(this.#e.withoutPlugins());
        }
        withSchema(e) {
            return new g0(this.#e.withPluginAtFront(new Hb(e)));
        }
    }
    class AQ {
        ref(e) {
            return new _J(e);
        }
    }
    class NQ {
        #e;
        constructor(e){
            this.#e = e;
        }
        async provideConnection(e) {
            const n = await this.#e.acquireConnection();
            try {
                return await e(n);
            } finally{
                await this.#e.releaseConnection(n);
            }
        }
    }
    class wp extends hW {
        #e;
        #t;
        #n;
        constructor(e, n, r, i = []){
            super(i), this.#e = e, this.#t = n, this.#n = r;
        }
        get adapter() {
            return this.#t;
        }
        compileQuery(e) {
            return this.#e.compileQuery(e);
        }
        provideConnection(e) {
            return this.#n.provideConnection(e);
        }
        withPlugins(e) {
            return new wp(this.#e, this.#t, this.#n, [
                ...this.plugins,
                ...e
            ]);
        }
        withPlugin(e) {
            return new wp(this.#e, this.#t, this.#n, [
                ...this.plugins,
                e
            ]);
        }
        withPluginAtFront(e) {
            return new wp(this.#e, this.#t, this.#n, [
                e,
                ...this.plugins
            ]);
        }
        withConnectionProvider(e) {
            return new wp(this.#e, this.#t, e, [
                ...this.plugins
            ]);
        }
        withoutPlugins() {
            return new wp(this.#e, this.#t, this.#n, []);
        }
    }
    function NF() {
        return typeof performance < "u" && Ba(performance.now) ? performance.now() : Date.now();
    }
    class PQ {
        #e;
        #t;
        #n;
        #r;
        #s;
        #c = new WeakSet;
        constructor(e, n){
            this.#r = !1, this.#e = e, this.#t = n;
        }
        async init() {
            if (this.#s) throw new Error("driver has already been destroyed");
            this.#n || (this.#n = this.#e.init().then(()=>{
                this.#r = !0;
            }).catch((e)=>(this.#n = void 0, Promise.reject(e)))), await this.#n;
        }
        async acquireConnection() {
            if (this.#s) throw new Error("driver has already been destroyed");
            this.#r || await this.init();
            const e = await this.#e.acquireConnection();
            return this.#c.has(e) || (this.#o() && this.#a(e), this.#c.add(e)), e;
        }
        async releaseConnection(e) {
            await this.#e.releaseConnection(e);
        }
        beginTransaction(e, n) {
            return this.#e.beginTransaction(e, n);
        }
        commitTransaction(e) {
            return this.#e.commitTransaction(e);
        }
        rollbackTransaction(e) {
            return this.#e.rollbackTransaction(e);
        }
        async destroy() {
            this.#n && (await this.#n, this.#s || (this.#s = this.#e.destroy().catch((e)=>(this.#s = void 0, Promise.reject(e)))), await this.#s);
        }
        #o() {
            return this.#t.isLevelEnabled("query") || this.#t.isLevelEnabled("error");
        }
        #a(e) {
            const n = e.executeQuery;
            e.executeQuery = async (r)=>{
                let i;
                const s = NF();
                try {
                    return await n.call(e, r);
                } catch (o) {
                    throw i = o, await this.#u(o, r, s), o;
                } finally{
                    i || await this.#l(r, s);
                }
            };
        }
        async #u(e, n, r) {
            await this.#t.error(()=>({
                    level: "error",
                    error: e,
                    query: n,
                    queryDurationMillis: this.#i(r)
                }));
        }
        async #l(e, n) {
            await this.#t.query(()=>({
                    level: "query",
                    query: e,
                    queryDurationMillis: this.#i(n)
                }));
        }
        #i(e) {
            return NF() - e;
        }
    }
    const kQ = ()=>{};
    class kW {
        #e;
        #t;
        constructor(e){
            this.#e = e;
        }
        async provideConnection(e) {
            for(; this.#t;)await this.#t.catch(kQ);
            return this.#t = this.#n(e).finally(()=>{
                this.#t = void 0;
            }), this.#t;
        }
        async #n(e) {
            return await e(this.#e);
        }
    }
    const OQ = [
        "read uncommitted",
        "read committed",
        "repeatable read",
        "serializable",
        "snapshot"
    ];
    ee([
        "query",
        "error"
    ]);
    class LQ {
        #e;
        #t;
        constructor(e){
            Ba(e) ? (this.#t = e, this.#e = ee({
                query: !0,
                error: !0
            })) : (this.#t = DQ, this.#e = ee({
                query: e.includes("query"),
                error: e.includes("error")
            }));
        }
        isLevelEnabled(e) {
            return this.#e[e];
        }
        async query(e) {
            this.#e.query && await this.#t(e());
        }
        async error(e) {
            this.#e.error && await this.#t(e());
        }
    }
    function DQ(t) {
        t.level === "query" ? (console.log(`kysely:query: ${t.query.sql}`), console.log(`kysely:query: duration: ${t.queryDurationMillis.toFixed(1)}ms`)) : t.level === "error" && (t.error instanceof Error ? console.error(`kysely:error: ${t.error.stack ?? t.error.message}`) : console.error(`kysely:error: ${JSON.stringify({
            error: t.error,
            query: t.query.sql,
            queryDurationMillis: t.queryDurationMillis
        })}`));
    }
    function FQ(t) {
        return Pc(t) && Ba(t.compile);
    }
    let sO = class Vx extends Mf {
        #e;
        constructor(e){
            let n, r;
            if (jQ(e)) n = {
                executor: e.executor
            }, r = {
                ...e
            };
            else {
                const i = e.dialect, s = i.createDriver(), o = i.createQueryCompiler(), a = i.createAdapter(), l = new LQ(e.log ?? []), c = new PQ(s, l), u = new NQ(c), f = new wp(o, a, u, e.plugins ?? []);
                n = {
                    executor: f
                }, r = {
                    config: e,
                    executor: f,
                    dialect: i,
                    driver: c
                };
            }
            super(n), this.#e = ee(r);
        }
        get schema() {
            return new g0(this.#e.executor);
        }
        get dynamic() {
            return new AQ;
        }
        get introspection() {
            return this.#e.dialect.createIntrospector(this.withoutPlugins());
        }
        case(e) {
            return new vW({
                node: Lc.create(Of(e) ? void 0 : hm(e))
            });
        }
        get fn() {
            return yW();
        }
        transaction() {
            return new iT({
                ...this.#e
            });
        }
        connection() {
            return new OW({
                ...this.#e
            });
        }
        withPlugin(e) {
            return new Vx({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        withoutPlugins() {
            return new Vx({
                ...this.#e,
                executor: this.#e.executor.withoutPlugins()
            });
        }
        withSchema(e) {
            return new Vx({
                ...this.#e,
                executor: this.#e.executor.withPluginAtFront(new Hb(e))
            });
        }
        withTables() {
            return new Vx({
                ...this.#e
            });
        }
        async destroy() {
            await this.#e.driver.destroy();
        }
        get isTransaction() {
            return !1;
        }
        getExecutor() {
            return this.#e.executor;
        }
        executeQuery(e, n = br()) {
            const r = FQ(e) ? e.compile() : e;
            return this.getExecutor().executeQuery(r, n);
        }
    };
    class ry extends sO {
        #e;
        constructor(e){
            super(e), this.#e = e;
        }
        get isTransaction() {
            return !0;
        }
        transaction() {
            throw new Error("calling the transaction method for a Transaction is not supported");
        }
        connection() {
            throw new Error("calling the connection method for a Transaction is not supported");
        }
        async destroy() {
            throw new Error("calling the destroy method for a Transaction is not supported");
        }
        withPlugin(e) {
            return new ry({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        withoutPlugins() {
            return new ry({
                ...this.#e,
                executor: this.#e.executor.withoutPlugins()
            });
        }
        withSchema(e) {
            return new ry({
                ...this.#e,
                executor: this.#e.executor.withPluginAtFront(new Hb(e))
            });
        }
        withTables() {
            return new ry({
                ...this.#e
            });
        }
    }
    function jQ(t) {
        return Pc(t) && Pc(t.config) && Pc(t.driver) && Pc(t.executor) && Pc(t.dialect);
    }
    class OW {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        async execute(e) {
            return this.#e.executor.provideConnection(async (n)=>{
                const r = this.#e.executor.withConnectionProvider(new kW(n)), i = new sO({
                    ...this.#e,
                    executor: r
                });
                return await e(i);
            });
        }
    }
    jn(OW, "don't await ConnectionBuilder instances directly. To execute the query you need to call the `execute` method");
    class iT {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        setIsolationLevel(e) {
            return new iT({
                ...this.#e,
                isolationLevel: e
            });
        }
        async execute(e) {
            const { isolationLevel: n, ...r } = this.#e, i = {
                isolationLevel: n
            };
            return BQ(i), this.#e.executor.provideConnection(async (s)=>{
                const o = this.#e.executor.withConnectionProvider(new kW(s)), a = new ry({
                    ...r,
                    executor: o
                });
                try {
                    await this.#e.driver.beginTransaction(s, i);
                    const l = await e(a);
                    return await this.#e.driver.commitTransaction(s), l;
                } catch (l) {
                    throw await this.#e.driver.rollbackTransaction(s), l;
                }
            });
        }
    }
    jn(iT, "don't await TransactionBuilder instances directly. To execute the transaction you need to call the `execute` method");
    function BQ(t) {
        if (t.isolationLevel && !OQ.includes(t.isolationLevel)) throw new Error(`invalid transaction isolation level ${t.isolationLevel}`);
    }
    class Cy {
        #e;
        constructor(e){
            this.#e = ee(e);
        }
        get expressionType() {}
        get isRawBuilder() {
            return !0;
        }
        as(e) {
            return new LW(this, e);
        }
        $castTo() {
            return new Cy({
                ...this.#e
            });
        }
        $notNull() {
            return new Cy(this.#e);
        }
        withPlugin(e) {
            return new Cy({
                ...this.#e,
                plugins: this.#e.plugins !== void 0 ? ee([
                    ...this.#e.plugins,
                    e
                ]) : ee([
                    e
                ])
            });
        }
        toOperationNode() {
            return this.#n(this.#t());
        }
        compile(e) {
            return this.#r(this.#t(e));
        }
        async execute(e) {
            const n = this.#t(e);
            return n.executeQuery(this.#r(n), this.#e.queryId);
        }
        #t(e) {
            const n = e !== void 0 ? e.getExecutor() : eT;
            return this.#e.plugins !== void 0 ? n.withPlugins(this.#e.plugins) : n;
        }
        #n(e) {
            return e.transformQuery(this.#e.rawNode, this.#e.queryId);
        }
        #r(e) {
            return e.compileQuery(this.#n(e), this.#e.queryId);
        }
    }
    function of(t) {
        return new Cy(t);
    }
    jn(Cy, "don't await RawBuilder instances directly. To execute the query you need to call `execute`");
    class LW {
        #e;
        #t;
        constructor(e, n){
            this.#e = e, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        get rawBuilder() {
            return this.#e;
        }
        toOperationNode() {
            return nh.create(this.#e.toOperationNode(), oa(this.#t) ? this.#t.toOperationNode() : Xr.create(this.#t));
        }
    }
    jn(LW, "don't await AliasedRawBuilder instances directly. AliasedRawBuilder should never be executed directly since it's always a part of another query.");
    const ci = Object.assign((t, ...e)=>of({
            queryId: br(),
            rawNode: Ws.create(t, e?.map(PF) ?? [])
        }), {
        ref (t) {
            return of({
                queryId: br(),
                rawNode: Ws.createWithChild(ud(t))
            });
        },
        val (t) {
            return of({
                queryId: br(),
                rawNode: Ws.createWithChild(Bi(t))
            });
        },
        value (t) {
            return this.val(t);
        },
        table (t) {
            return of({
                queryId: br(),
                rawNode: Ws.createWithChild(Mi(t))
            });
        },
        id (...t) {
            const e = new Array(t.length + 1).fill(".");
            return e[0] = "", e[e.length - 1] = "", of({
                queryId: br(),
                rawNode: Ws.create(e, t.map(Xr.create))
            });
        },
        lit (t) {
            return of({
                queryId: br(),
                rawNode: Ws.createWithChild(qc.createImmediate(t))
            });
        },
        literal (t) {
            return this.lit(t);
        },
        raw (t) {
            return of({
                queryId: br(),
                rawNode: Ws.createWithSql(t)
            });
        },
        join (t, e = ci`, `) {
            const n = new Array(2 * t.length - 1), r = e.toOperationNode();
            for(let i = 0; i < t.length; ++i)n[2 * i] = PF(t[i]), i !== t.length - 1 && (n[2 * i + 1] = r);
            return of({
                queryId: br(),
                rawNode: Ws.createWithChildren(n)
            });
        }
    });
    function PF(t) {
        return oa(t) ? t.toOperationNode() : Bi(t);
    }
    class UQ {
        nodeStack = [];
        get parentNode() {
            return this.nodeStack[this.nodeStack.length - 2];
        }
        #e = ee({
            AliasNode: this.visitAlias.bind(this),
            ColumnNode: this.visitColumn.bind(this),
            IdentifierNode: this.visitIdentifier.bind(this),
            SchemableIdentifierNode: this.visitSchemableIdentifier.bind(this),
            RawNode: this.visitRaw.bind(this),
            ReferenceNode: this.visitReference.bind(this),
            SelectQueryNode: this.visitSelectQuery.bind(this),
            SelectionNode: this.visitSelection.bind(this),
            TableNode: this.visitTable.bind(this),
            FromNode: this.visitFrom.bind(this),
            SelectAllNode: this.visitSelectAll.bind(this),
            AndNode: this.visitAnd.bind(this),
            OrNode: this.visitOr.bind(this),
            ValueNode: this.visitValue.bind(this),
            ValueListNode: this.visitValueList.bind(this),
            PrimitiveValueListNode: this.visitPrimitiveValueList.bind(this),
            ParensNode: this.visitParens.bind(this),
            JoinNode: this.visitJoin.bind(this),
            OperatorNode: this.visitOperator.bind(this),
            WhereNode: this.visitWhere.bind(this),
            InsertQueryNode: this.visitInsertQuery.bind(this),
            DeleteQueryNode: this.visitDeleteQuery.bind(this),
            ReturningNode: this.visitReturning.bind(this),
            CreateTableNode: this.visitCreateTable.bind(this),
            AddColumnNode: this.visitAddColumn.bind(this),
            ColumnDefinitionNode: this.visitColumnDefinition.bind(this),
            DropTableNode: this.visitDropTable.bind(this),
            DataTypeNode: this.visitDataType.bind(this),
            OrderByNode: this.visitOrderBy.bind(this),
            OrderByItemNode: this.visitOrderByItem.bind(this),
            GroupByNode: this.visitGroupBy.bind(this),
            GroupByItemNode: this.visitGroupByItem.bind(this),
            UpdateQueryNode: this.visitUpdateQuery.bind(this),
            ColumnUpdateNode: this.visitColumnUpdate.bind(this),
            LimitNode: this.visitLimit.bind(this),
            OffsetNode: this.visitOffset.bind(this),
            OnConflictNode: this.visitOnConflict.bind(this),
            OnDuplicateKeyNode: this.visitOnDuplicateKey.bind(this),
            CreateIndexNode: this.visitCreateIndex.bind(this),
            DropIndexNode: this.visitDropIndex.bind(this),
            ListNode: this.visitList.bind(this),
            PrimaryKeyConstraintNode: this.visitPrimaryKeyConstraint.bind(this),
            UniqueConstraintNode: this.visitUniqueConstraint.bind(this),
            ReferencesNode: this.visitReferences.bind(this),
            CheckConstraintNode: this.visitCheckConstraint.bind(this),
            WithNode: this.visitWith.bind(this),
            CommonTableExpressionNode: this.visitCommonTableExpression.bind(this),
            CommonTableExpressionNameNode: this.visitCommonTableExpressionName.bind(this),
            HavingNode: this.visitHaving.bind(this),
            CreateSchemaNode: this.visitCreateSchema.bind(this),
            DropSchemaNode: this.visitDropSchema.bind(this),
            AlterTableNode: this.visitAlterTable.bind(this),
            DropColumnNode: this.visitDropColumn.bind(this),
            RenameColumnNode: this.visitRenameColumn.bind(this),
            AlterColumnNode: this.visitAlterColumn.bind(this),
            ModifyColumnNode: this.visitModifyColumn.bind(this),
            AddConstraintNode: this.visitAddConstraint.bind(this),
            DropConstraintNode: this.visitDropConstraint.bind(this),
            ForeignKeyConstraintNode: this.visitForeignKeyConstraint.bind(this),
            CreateViewNode: this.visitCreateView.bind(this),
            DropViewNode: this.visitDropView.bind(this),
            GeneratedNode: this.visitGenerated.bind(this),
            DefaultValueNode: this.visitDefaultValue.bind(this),
            OnNode: this.visitOn.bind(this),
            ValuesNode: this.visitValues.bind(this),
            SelectModifierNode: this.visitSelectModifier.bind(this),
            CreateTypeNode: this.visitCreateType.bind(this),
            DropTypeNode: this.visitDropType.bind(this),
            ExplainNode: this.visitExplain.bind(this),
            DefaultInsertValueNode: this.visitDefaultInsertValue.bind(this),
            AggregateFunctionNode: this.visitAggregateFunction.bind(this),
            OverNode: this.visitOver.bind(this),
            PartitionByNode: this.visitPartitionBy.bind(this),
            PartitionByItemNode: this.visitPartitionByItem.bind(this),
            SetOperationNode: this.visitSetOperation.bind(this),
            BinaryOperationNode: this.visitBinaryOperation.bind(this),
            UnaryOperationNode: this.visitUnaryOperation.bind(this),
            UsingNode: this.visitUsing.bind(this),
            FunctionNode: this.visitFunction.bind(this),
            CaseNode: this.visitCase.bind(this),
            WhenNode: this.visitWhen.bind(this),
            JSONReferenceNode: this.visitJSONReference.bind(this),
            JSONPathNode: this.visitJSONPath.bind(this),
            JSONPathLegNode: this.visitJSONPathLeg.bind(this),
            JSONOperatorChainNode: this.visitJSONOperatorChain.bind(this),
            TupleNode: this.visitTuple.bind(this),
            MergeQueryNode: this.visitMergeQuery.bind(this),
            MatchedNode: this.visitMatched.bind(this),
            AddIndexNode: this.visitAddIndex.bind(this),
            CastNode: this.visitCast.bind(this),
            FetchNode: this.visitFetch.bind(this),
            TopNode: this.visitTop.bind(this),
            OutputNode: this.visitOutput.bind(this)
        });
        visitNode = (e)=>{
            this.nodeStack.push(e), this.#e[e.kind](e), this.nodeStack.pop();
        };
    }
    class zQ extends UQ {
        #e = "";
        #t = [];
        get numParameters() {
            return this.#t.length;
        }
        compileQuery(e) {
            return this.#e = "", this.#t = [], this.nodeStack.splice(0, this.nodeStack.length), this.visitNode(e), ee({
                query: e,
                sql: this.getSql(),
                parameters: [
                    ...this.#t
                ]
            });
        }
        getSql() {
            return this.#e;
        }
        visitSelectQuery(e) {
            const n = this.parentNode !== void 0 && !Dy.is(this.parentNode) && !Ta.is(this.parentNode) && !Ea.is(this.parentNode) && !_f.is(this.parentNode) && !mW.is(this.parentNode);
            this.parentNode === void 0 && e.explain && (this.visitNode(e.explain), this.append(" ")), n && this.append("("), e.with && (this.visitNode(e.with), this.append(" ")), this.append("select"), e.distinctOn && (this.append(" "), this.compileDistinctOn(e.distinctOn)), e.frontModifiers?.length && (this.append(" "), this.compileList(e.frontModifiers, " ")), e.top && (this.append(" "), this.visitNode(e.top)), e.selections && (this.append(" "), this.compileList(e.selections)), e.from && (this.append(" "), this.visitNode(e.from)), e.joins && (this.append(" "), this.compileList(e.joins, " ")), e.where && (this.append(" "), this.visitNode(e.where)), e.groupBy && (this.append(" "), this.visitNode(e.groupBy)), e.having && (this.append(" "), this.visitNode(e.having)), e.setOperations && (this.append(" "), this.compileList(e.setOperations, " ")), e.orderBy && (this.append(" "), this.visitNode(e.orderBy)), e.limit && (this.append(" "), this.visitNode(e.limit)), e.offset && (this.append(" "), this.visitNode(e.offset)), e.fetch && (this.append(" "), this.visitNode(e.fetch)), e.endModifiers?.length && (this.append(" "), this.compileList(this.sortSelectModifiers([
                ...e.endModifiers
            ]), " ")), n && this.append(")");
        }
        visitFrom(e) {
            this.append("from "), this.compileList(e.froms);
        }
        visitSelection(e) {
            this.visitNode(e.selection);
        }
        visitColumn(e) {
            this.visitNode(e.column);
        }
        compileDistinctOn(e) {
            this.append("distinct on ("), this.compileList(e), this.append(")");
        }
        compileList(e, n = ", ") {
            const r = e.length - 1;
            for(let i = 0; i <= r; i++)this.visitNode(e[i]), i < r && this.append(n);
        }
        visitWhere(e) {
            this.append("where "), this.visitNode(e.where);
        }
        visitHaving(e) {
            this.append("having "), this.visitNode(e.having);
        }
        visitInsertQuery(e) {
            const n = this.nodeStack.find(Ut.is), r = n !== e;
            !r && e.explain && (this.visitNode(e.explain), this.append(" ")), r && !ea.is(n) && this.append("("), e.with && (this.visitNode(e.with), this.append(" ")), this.append(e.replace ? "replace" : "insert"), e.ignore && this.append(" ignore"), e.top && (this.append(" "), this.visitNode(e.top)), e.into && (this.append(" into "), this.visitNode(e.into)), e.columns && (this.append(" ("), this.compileList(e.columns), this.append(")")), e.output && (this.append(" "), this.visitNode(e.output)), e.values && (this.append(" "), this.visitNode(e.values)), e.defaultValues && (this.append(" "), this.append("default values")), e.onConflict && (this.append(" "), this.visitNode(e.onConflict)), e.onDuplicateKey && (this.append(" "), this.visitNode(e.onDuplicateKey)), e.returning && (this.append(" "), this.visitNode(e.returning)), r && !ea.is(n) && this.append(")"), e.endModifiers?.length && (this.append(" "), this.compileList(e.endModifiers, " "));
        }
        visitValues(e) {
            this.append("values "), this.compileList(e.values);
        }
        visitDeleteQuery(e) {
            const n = this.nodeStack.find(Ut.is) !== e;
            !n && e.explain && (this.visitNode(e.explain), this.append(" ")), n && this.append("("), e.with && (this.visitNode(e.with), this.append(" ")), this.append("delete "), e.top && (this.visitNode(e.top), this.append(" ")), this.visitNode(e.from), e.output && (this.append(" "), this.visitNode(e.output)), e.using && (this.append(" "), this.visitNode(e.using)), e.joins && (this.append(" "), this.compileList(e.joins, " ")), e.where && (this.append(" "), this.visitNode(e.where)), e.orderBy && (this.append(" "), this.visitNode(e.orderBy)), e.limit && (this.append(" "), this.visitNode(e.limit)), e.returning && (this.append(" "), this.visitNode(e.returning)), n && this.append(")"), e.endModifiers?.length && (this.append(" "), this.compileList(e.endModifiers, " "));
        }
        visitReturning(e) {
            this.append("returning "), this.compileList(e.selections);
        }
        visitAlias(e) {
            this.visitNode(e.node), this.append(" as "), this.visitNode(e.alias);
        }
        visitReference(e) {
            e.table && (this.visitNode(e.table), this.append(".")), this.visitNode(e.column);
        }
        visitSelectAll(e) {
            this.append("*");
        }
        visitIdentifier(e) {
            this.append(this.getLeftIdentifierWrapper()), this.compileUnwrappedIdentifier(e), this.append(this.getRightIdentifierWrapper());
        }
        compileUnwrappedIdentifier(e) {
            if (!Oa(e.name)) throw new Error("a non-string identifier was passed to compileUnwrappedIdentifier.");
            this.append(this.sanitizeIdentifier(e.name));
        }
        visitAnd(e) {
            this.visitNode(e.left), this.append(" and "), this.visitNode(e.right);
        }
        visitOr(e) {
            this.visitNode(e.left), this.append(" or "), this.visitNode(e.right);
        }
        visitValue(e) {
            e.immediate ? this.appendImmediateValue(e.value) : this.appendValue(e.value);
        }
        visitValueList(e) {
            this.append("("), this.compileList(e.values), this.append(")");
        }
        visitTuple(e) {
            this.append("("), this.compileList(e.values), this.append(")");
        }
        visitPrimitiveValueList(e) {
            this.append("(");
            const { values: n } = e;
            for(let r = 0; r < n.length; ++r)this.appendValue(n[r]), r !== n.length - 1 && this.append(", ");
            this.append(")");
        }
        visitParens(e) {
            this.append("("), this.visitNode(e.node), this.append(")");
        }
        visitJoin(e) {
            this.append(WQ[e.joinType]), this.append(" "), this.visitNode(e.table), e.on && (this.append(" "), this.visitNode(e.on));
        }
        visitOn(e) {
            this.append("on "), this.visitNode(e.on);
        }
        visitRaw(e) {
            const { sqlFragments: n, parameters: r } = e;
            for(let i = 0; i < n.length; ++i)this.append(n[i]), r.length > i && this.visitNode(r[i]);
        }
        visitOperator(e) {
            this.append(e.operator);
        }
        visitTable(e) {
            this.visitNode(e.table);
        }
        visitSchemableIdentifier(e) {
            e.schema && (this.visitNode(e.schema), this.append(".")), this.visitNode(e.identifier);
        }
        visitCreateTable(e) {
            this.append("create "), e.frontModifiers && e.frontModifiers.length > 0 && (this.compileList(e.frontModifiers, " "), this.append(" ")), e.temporary && this.append("temporary "), this.append("table "), e.ifNotExists && this.append("if not exists "), this.visitNode(e.table), e.selectQuery ? (this.append(" as "), this.visitNode(e.selectQuery)) : (this.append(" ("), this.compileList([
                ...e.columns,
                ...e.constraints ?? []
            ]), this.append(")"), e.onCommit && (this.append(" on commit "), this.append(e.onCommit)), e.endModifiers && e.endModifiers.length > 0 && (this.append(" "), this.compileList(e.endModifiers, " ")));
        }
        visitColumnDefinition(e) {
            e.ifNotExists && this.append("if not exists "), this.visitNode(e.column), this.append(" "), this.visitNode(e.dataType), e.unsigned && this.append(" unsigned"), e.frontModifiers && e.frontModifiers.length > 0 && (this.append(" "), this.compileList(e.frontModifiers, " ")), e.generated && (this.append(" "), this.visitNode(e.generated)), e.identity && this.append(" identity"), e.defaultTo && (this.append(" "), this.visitNode(e.defaultTo)), e.notNull && this.append(" not null"), e.unique && this.append(" unique"), e.nullsNotDistinct && this.append(" nulls not distinct"), e.primaryKey && this.append(" primary key"), e.autoIncrement && (this.append(" "), this.append(this.getAutoIncrement())), e.references && (this.append(" "), this.visitNode(e.references)), e.check && (this.append(" "), this.visitNode(e.check)), e.endModifiers && e.endModifiers.length > 0 && (this.append(" "), this.compileList(e.endModifiers, " "));
        }
        getAutoIncrement() {
            return "auto_increment";
        }
        visitReferences(e) {
            this.append("references "), this.visitNode(e.table), this.append(" ("), this.compileList(e.columns), this.append(")"), e.onDelete && (this.append(" on delete "), this.append(e.onDelete)), e.onUpdate && (this.append(" on update "), this.append(e.onUpdate));
        }
        visitDropTable(e) {
            this.append("drop table "), e.ifExists && this.append("if exists "), this.visitNode(e.table), e.cascade && this.append(" cascade");
        }
        visitDataType(e) {
            this.append(e.dataType);
        }
        visitOrderBy(e) {
            this.append("order by "), this.compileList(e.items);
        }
        visitOrderByItem(e) {
            this.visitNode(e.orderBy), e.direction && (this.append(" "), this.visitNode(e.direction));
        }
        visitGroupBy(e) {
            this.append("group by "), this.compileList(e.items);
        }
        visitGroupByItem(e) {
            this.visitNode(e.groupBy);
        }
        visitUpdateQuery(e) {
            const n = this.nodeStack.find(Ut.is), r = n !== e;
            !r && e.explain && (this.visitNode(e.explain), this.append(" ")), r && !ea.is(n) && this.append("("), e.with && (this.visitNode(e.with), this.append(" ")), this.append("update "), e.top && (this.visitNode(e.top), this.append(" ")), e.table && (this.visitNode(e.table), this.append(" ")), this.append("set "), e.updates && this.compileList(e.updates), e.output && (this.append(" "), this.visitNode(e.output)), e.from && (this.append(" "), this.visitNode(e.from)), e.joins && (this.append(" "), this.compileList(e.joins, " ")), e.where && (this.append(" "), this.visitNode(e.where)), e.limit && (this.append(" "), this.visitNode(e.limit)), e.returning && (this.append(" "), this.visitNode(e.returning)), r && !ea.is(n) && this.append(")"), e.endModifiers?.length && (this.append(" "), this.compileList(e.endModifiers, " "));
        }
        visitColumnUpdate(e) {
            this.visitNode(e.column), this.append(" = "), this.visitNode(e.value);
        }
        visitLimit(e) {
            this.append("limit "), this.visitNode(e.limit);
        }
        visitOffset(e) {
            this.append("offset "), this.visitNode(e.offset);
        }
        visitOnConflict(e) {
            this.append("on conflict"), e.columns ? (this.append(" ("), this.compileList(e.columns), this.append(")")) : e.constraint ? (this.append(" on constraint "), this.visitNode(e.constraint)) : e.indexExpression && (this.append(" ("), this.visitNode(e.indexExpression), this.append(")")), e.indexWhere && (this.append(" "), this.visitNode(e.indexWhere)), e.doNothing === !0 ? this.append(" do nothing") : e.updates && (this.append(" do update set "), this.compileList(e.updates), e.updateWhere && (this.append(" "), this.visitNode(e.updateWhere)));
        }
        visitOnDuplicateKey(e) {
            this.append("on duplicate key update "), this.compileList(e.updates);
        }
        visitCreateIndex(e) {
            this.append("create "), e.unique && this.append("unique "), this.append("index "), e.ifNotExists && this.append("if not exists "), this.visitNode(e.name), e.table && (this.append(" on "), this.visitNode(e.table)), e.using && (this.append(" using "), this.visitNode(e.using)), e.columns && (this.append(" ("), this.compileList(e.columns), this.append(")")), e.nullsNotDistinct && this.append(" nulls not distinct"), e.where && (this.append(" "), this.visitNode(e.where));
        }
        visitDropIndex(e) {
            this.append("drop index "), e.ifExists && this.append("if exists "), this.visitNode(e.name), e.table && (this.append(" on "), this.visitNode(e.table)), e.cascade && this.append(" cascade");
        }
        visitCreateSchema(e) {
            this.append("create schema "), e.ifNotExists && this.append("if not exists "), this.visitNode(e.schema);
        }
        visitDropSchema(e) {
            this.append("drop schema "), e.ifExists && this.append("if exists "), this.visitNode(e.schema), e.cascade && this.append(" cascade");
        }
        visitPrimaryKeyConstraint(e) {
            e.name && (this.append("constraint "), this.visitNode(e.name), this.append(" ")), this.append("primary key ("), this.compileList(e.columns), this.append(")");
        }
        visitUniqueConstraint(e) {
            e.name && (this.append("constraint "), this.visitNode(e.name), this.append(" ")), this.append("unique"), e.nullsNotDistinct && this.append(" nulls not distinct"), this.append(" ("), this.compileList(e.columns), this.append(")");
        }
        visitCheckConstraint(e) {
            e.name && (this.append("constraint "), this.visitNode(e.name), this.append(" ")), this.append("check ("), this.visitNode(e.expression), this.append(")");
        }
        visitForeignKeyConstraint(e) {
            e.name && (this.append("constraint "), this.visitNode(e.name), this.append(" ")), this.append("foreign key ("), this.compileList(e.columns), this.append(") "), this.visitNode(e.references), e.onDelete && (this.append(" on delete "), this.append(e.onDelete)), e.onUpdate && (this.append(" on update "), this.append(e.onUpdate));
        }
        visitList(e) {
            this.compileList(e.items);
        }
        visitWith(e) {
            this.append("with "), e.recursive && this.append("recursive "), this.compileList(e.expressions);
        }
        visitCommonTableExpression(e) {
            this.visitNode(e.name), this.append(" as "), Q1(e.materialized) && (e.materialized || this.append("not "), this.append("materialized ")), this.visitNode(e.expression);
        }
        visitCommonTableExpressionName(e) {
            this.visitNode(e.table), e.columns && (this.append("("), this.compileList(e.columns), this.append(")"));
        }
        visitAlterTable(e) {
            this.append("alter table "), this.visitNode(e.table), this.append(" "), e.renameTo && (this.append("rename to "), this.visitNode(e.renameTo)), e.setSchema && (this.append("set schema "), this.visitNode(e.setSchema)), e.addConstraint && this.visitNode(e.addConstraint), e.dropConstraint && this.visitNode(e.dropConstraint), e.columnAlterations && this.compileColumnAlterations(e.columnAlterations), e.addIndex && this.visitNode(e.addIndex), e.dropIndex && this.visitNode(e.dropIndex);
        }
        visitAddColumn(e) {
            this.append("add column "), this.visitNode(e.column);
        }
        visitRenameColumn(e) {
            this.append("rename column "), this.visitNode(e.column), this.append(" to "), this.visitNode(e.renameTo);
        }
        visitDropColumn(e) {
            this.append("drop column "), this.visitNode(e.column);
        }
        visitAlterColumn(e) {
            this.append("alter column "), this.visitNode(e.column), this.append(" "), e.dataType && (this.announcesNewColumnDataType() && this.append("type "), this.visitNode(e.dataType), e.dataTypeExpression && (this.append("using "), this.visitNode(e.dataTypeExpression))), e.setDefault && (this.append("set default "), this.visitNode(e.setDefault)), e.dropDefault && this.append("drop default"), e.setNotNull && this.append("set not null"), e.dropNotNull && this.append("drop not null");
        }
        visitModifyColumn(e) {
            this.append("modify column "), this.visitNode(e.column);
        }
        visitAddConstraint(e) {
            this.append("add "), this.visitNode(e.constraint);
        }
        visitDropConstraint(e) {
            this.append("drop constraint "), e.ifExists && this.append("if exists "), this.visitNode(e.constraintName), e.modifier === "cascade" ? this.append(" cascade") : e.modifier === "restrict" && this.append(" restrict");
        }
        visitSetOperation(e) {
            this.append(e.operator), this.append(" "), e.all && this.append("all "), this.visitNode(e.expression);
        }
        visitCreateView(e) {
            this.append("create "), e.orReplace && this.append("or replace "), e.materialized && this.append("materialized "), e.temporary && this.append("temporary "), this.append("view "), e.ifNotExists && this.append("if not exists "), this.visitNode(e.name), this.append(" "), e.columns && (this.append("("), this.compileList(e.columns), this.append(") ")), e.as && (this.append("as "), this.visitNode(e.as));
        }
        visitDropView(e) {
            this.append("drop "), e.materialized && this.append("materialized "), this.append("view "), e.ifExists && this.append("if exists "), this.visitNode(e.name), e.cascade && this.append(" cascade");
        }
        visitGenerated(e) {
            this.append("generated "), e.always && this.append("always "), e.byDefault && this.append("by default "), this.append("as "), e.identity && this.append("identity"), e.expression && (this.append("("), this.visitNode(e.expression), this.append(")")), e.stored && this.append(" stored");
        }
        visitDefaultValue(e) {
            this.append("default "), this.visitNode(e.defaultValue);
        }
        visitSelectModifier(e) {
            e.rawModifier ? this.visitNode(e.rawModifier) : this.append(VQ[e.modifier]), e.of && (this.append(" of "), this.compileList(e.of, ", "));
        }
        visitCreateType(e) {
            this.append("create type "), this.visitNode(e.name), e.enum && (this.append(" as enum "), this.visitNode(e.enum));
        }
        visitDropType(e) {
            this.append("drop type "), e.ifExists && this.append("if exists "), this.visitNode(e.name);
        }
        visitExplain(e) {
            this.append("explain"), (e.options || e.format) && (this.append(" "), this.append(this.getLeftExplainOptionsWrapper()), e.options && (this.visitNode(e.options), e.format && this.append(this.getExplainOptionsDelimiter())), e.format && (this.append("format"), this.append(this.getExplainOptionAssignment()), this.append(e.format)), this.append(this.getRightExplainOptionsWrapper()));
        }
        visitDefaultInsertValue(e) {
            this.append("default");
        }
        visitAggregateFunction(e) {
            this.append(e.func), this.append("("), e.distinct && this.append("distinct "), this.compileList(e.aggregated), e.orderBy && (this.append(" "), this.visitNode(e.orderBy)), this.append(")"), e.filter && (this.append(" filter("), this.visitNode(e.filter), this.append(")")), e.over && (this.append(" "), this.visitNode(e.over));
        }
        visitOver(e) {
            this.append("over("), e.partitionBy && (this.visitNode(e.partitionBy), e.orderBy && this.append(" ")), e.orderBy && this.visitNode(e.orderBy), this.append(")");
        }
        visitPartitionBy(e) {
            this.append("partition by "), this.compileList(e.items);
        }
        visitPartitionByItem(e) {
            this.visitNode(e.partitionBy);
        }
        visitBinaryOperation(e) {
            this.visitNode(e.leftOperand), this.append(" "), this.visitNode(e.operator), this.append(" "), this.visitNode(e.rightOperand);
        }
        visitUnaryOperation(e) {
            this.visitNode(e.operator), this.isMinusOperator(e.operator) || this.append(" "), this.visitNode(e.operand);
        }
        isMinusOperator(e) {
            return Hf.is(e) && e.operator === "-";
        }
        visitUsing(e) {
            this.append("using "), this.compileList(e.tables);
        }
        visitFunction(e) {
            this.append(e.func), this.append("("), this.compileList(e.arguments), this.append(")");
        }
        visitCase(e) {
            this.append("case"), e.value && (this.append(" "), this.visitNode(e.value)), e.when && (this.append(" "), this.compileList(e.when, " ")), e.else && (this.append(" else "), this.visitNode(e.else)), this.append(" end"), e.isStatement && this.append(" case");
        }
        visitWhen(e) {
            this.append("when "), this.visitNode(e.condition), e.result && (this.append(" then "), this.visitNode(e.result));
        }
        visitJSONReference(e) {
            this.visitNode(e.reference), this.visitNode(e.traversal);
        }
        visitJSONPath(e) {
            e.inOperator && this.visitNode(e.inOperator), this.append("'$");
            for (const n of e.pathLegs)this.visitNode(n);
            this.append("'");
        }
        visitJSONPathLeg(e) {
            const n = e.type === "ArrayLocation";
            this.append(n ? "[" : "."), this.append(String(e.value)), n && this.append("]");
        }
        visitJSONOperatorChain(e) {
            for(let n = 0, r = e.values.length; n < r; n++)n === r - 1 ? this.visitNode(e.operator) : this.append("->"), this.visitNode(e.values[n]);
        }
        visitMergeQuery(e) {
            e.with && (this.visitNode(e.with), this.append(" ")), this.append("merge "), e.top && (this.visitNode(e.top), this.append(" ")), this.append("into "), this.visitNode(e.into), e.using && (this.append(" "), this.visitNode(e.using)), e.whens && (this.append(" "), this.compileList(e.whens, " ")), e.output && (this.append(" "), this.visitNode(e.output)), e.endModifiers?.length && (this.append(" "), this.compileList(e.endModifiers, " "));
        }
        visitMatched(e) {
            e.not && this.append("not "), this.append("matched"), e.bySource && this.append(" by source");
        }
        visitAddIndex(e) {
            this.append("add "), e.unique && this.append("unique "), this.append("index "), this.visitNode(e.name), e.columns && (this.append(" ("), this.compileList(e.columns), this.append(")")), e.using && (this.append(" using "), this.visitNode(e.using));
        }
        visitCast(e) {
            this.append("cast("), this.visitNode(e.expression), this.append(" as "), this.visitNode(e.dataType), this.append(")");
        }
        visitFetch(e) {
            this.append("fetch next "), this.visitNode(e.rowCount), this.append(` rows ${e.modifier}`);
        }
        visitOutput(e) {
            this.append("output "), this.compileList(e.selections);
        }
        visitTop(e) {
            this.append(`top(${e.expression})`), e.modifiers && this.append(` ${e.modifiers}`);
        }
        append(e) {
            this.#e += e;
        }
        appendValue(e) {
            this.addParameter(e), this.append(this.getCurrentParameterPlaceholder());
        }
        getLeftIdentifierWrapper() {
            return '"';
        }
        getRightIdentifierWrapper() {
            return '"';
        }
        getCurrentParameterPlaceholder() {
            return "$" + this.numParameters;
        }
        getLeftExplainOptionsWrapper() {
            return "(";
        }
        getExplainOptionAssignment() {
            return " ";
        }
        getExplainOptionsDelimiter() {
            return ", ";
        }
        getRightExplainOptionsWrapper() {
            return ")";
        }
        sanitizeIdentifier(e) {
            const n = this.getLeftIdentifierWrapper(), r = this.getRightIdentifierWrapper();
            let i = "";
            for (const s of e)i += s, s === n ? i += n : s === r && (i += r);
            return i;
        }
        addParameter(e) {
            this.#t.push(e);
        }
        appendImmediateValue(e) {
            if (Oa(e)) this.append(`'${e}'`);
            else if (JM(e) || Q1(e)) this.append(e.toString());
            else if (qk(e)) this.append("null");
            else if (fJ(e)) this.appendImmediateValue(e.toISOString());
            else if (Hk(e)) this.appendImmediateValue(e.toString());
            else throw new Error(`invalid immediate value ${e}`);
        }
        sortSelectModifiers(e) {
            return e.sort((n, r)=>n.modifier && r.modifier ? kF[n.modifier] - kF[r.modifier] : 1), ee(e);
        }
        compileColumnAlterations(e) {
            this.compileList(e);
        }
        announcesNewColumnDataType() {
            return !0;
        }
    }
    const VQ = ee({
        ForKeyShare: "for key share",
        ForNoKeyUpdate: "for no key update",
        ForUpdate: "for update",
        ForShare: "for share",
        NoWait: "nowait",
        SkipLocked: "skip locked",
        Distinct: "distinct"
    }), kF = ee({
        ForKeyShare: 1,
        ForNoKeyUpdate: 1,
        ForUpdate: 1,
        ForShare: 1,
        NoWait: 2,
        SkipLocked: 2,
        Distinct: 0
    }), WQ = ee({
        InnerJoin: "inner join",
        LeftJoin: "left join",
        RightJoin: "right join",
        FullJoin: "full join",
        LateralInnerJoin: "inner join lateral",
        LateralLeftJoin: "left join lateral",
        Using: "using"
    });
    class qQ {
        get supportsCreateIfNotExists() {
            return !0;
        }
        get supportsTransactionalDdl() {
            return !1;
        }
        get supportsReturning() {
            return !1;
        }
        get supportsOutput() {
            return !1;
        }
    }
    const HQ = /"/g;
    class $Q extends zQ {
        getCurrentParameterPlaceholder() {
            return "?";
        }
        getLeftExplainOptionsWrapper() {
            return "";
        }
        getRightExplainOptionsWrapper() {
            return "";
        }
        getLeftIdentifierWrapper() {
            return '"';
        }
        getRightIdentifierWrapper() {
            return '"';
        }
        getAutoIncrement() {
            return "autoincrement";
        }
        sanitizeIdentifier(e) {
            return e.replace(HQ, '""');
        }
        visitDefaultInsertValue(e) {
            this.append("null");
        }
    }
    const GQ = "kysely_migration", XQ = "kysely_migration_lock";
    ee({
        __noMigrations__: !0
    });
    class KQ {
        #e;
        constructor(e){
            this.#e = e;
        }
        async getSchemas() {
            return [];
        }
        async getTables(e = {
            withInternalKyselyTables: !1
        }) {
            let n = this.#e.selectFrom("sqlite_master").where("type", "in", [
                "table",
                "view"
            ]).where("name", "not like", "sqlite_%").select("name").orderBy("name").$castTo();
            e.withInternalKyselyTables || (n = n.where("name", "!=", GQ).where("name", "!=", XQ));
            const r = await n.execute();
            return Promise.all(r.map(({ name: i })=>this.#t(i)));
        }
        async getMetadata(e) {
            return {
                tables: await this.getTables(e)
            };
        }
        async #t(e) {
            const n = this.#e, r = await n.selectFrom("sqlite_master").where("name", "=", e).select([
                "sql",
                "type"
            ]).$castTo().executeTakeFirstOrThrow(), i = r.sql?.split(/[\(\),]/)?.find((o)=>o.toLowerCase().includes("autoincrement"))?.trimStart()?.split(/\s+/)?.[0]?.replace(/["`]/g, ""), s = await n.selectFrom(ci`pragma_table_info(${e})`.as("table_info")).select([
                "name",
                "type",
                "notnull",
                "dflt_value"
            ]).orderBy("cid").execute();
            return {
                name: e,
                isView: r.type === "view",
                columns: s.map((o)=>({
                        name: o.name,
                        dataType: o.type,
                        isNullable: !o.notnull,
                        isAutoIncrementing: o.name === i,
                        hasDefaultValue: o.dflt_value != null,
                        comment: void 0
                    }))
            };
        }
    }
    class YQ extends qQ {
        get supportsTransactionalDdl() {
            return !1;
        }
        get supportsReturning() {
            return !0;
        }
        async acquireMigrationLock(e, n) {}
        async releaseMigrationLock(e, n) {}
    }
    const Ff = {
        jsonObject (t) {
            const e = ci.join(Object.entries(t).map(([n, r])=>ci`${n}, ${r}`));
            return ci`json_object(${e})`;
        },
        jsonGroupArray (t) {
            return ci`json_group_array(${Ff.jsonObject(t)})`;
        }
    }, DW = {
        hash (t) {
            return dP.sha224(t);
        },
        verify (t, e) {
            return dP.sha224(t) === e;
        }
    };
    var Jn;
    (function(t) {
        t.assertEqual = (i)=>i;
        function e(i) {}
        t.assertIs = e;
        function n(i) {
            throw new Error;
        }
        t.assertNever = n, t.arrayToEnum = (i)=>{
            const s = {};
            for (const o of i)s[o] = o;
            return s;
        }, t.getValidEnumValues = (i)=>{
            const s = t.objectKeys(i).filter((a)=>typeof i[i[a]] != "number"), o = {};
            for (const a of s)o[a] = i[a];
            return t.objectValues(o);
        }, t.objectValues = (i)=>t.objectKeys(i).map(function(s) {
                return i[s];
            }), t.objectKeys = typeof Object.keys == "function" ? (i)=>Object.keys(i) : (i)=>{
            const s = [];
            for(const o in i)Object.prototype.hasOwnProperty.call(i, o) && s.push(o);
            return s;
        }, t.find = (i, s)=>{
            for (const o of i)if (s(o)) return o;
        }, t.isInteger = typeof Number.isInteger == "function" ? (i)=>Number.isInteger(i) : (i)=>typeof i == "number" && isFinite(i) && Math.floor(i) === i;
        function r(i, s = " | ") {
            return i.map((o)=>typeof o == "string" ? `'${o}'` : o).join(s);
        }
        t.joinValues = r, t.jsonStringifyReplacer = (i, s)=>typeof s == "bigint" ? s.toString() : s;
    })(Jn || (Jn = {}));
    var bP;
    (function(t) {
        t.mergeShapes = (e, n)=>({
                ...e,
                ...n
            });
    })(bP || (bP = {}));
    const Dt = Jn.arrayToEnum([
        "string",
        "nan",
        "number",
        "integer",
        "float",
        "boolean",
        "date",
        "bigint",
        "symbol",
        "function",
        "undefined",
        "null",
        "array",
        "object",
        "unknown",
        "promise",
        "void",
        "never",
        "map",
        "set"
    ]), Xu = (t)=>{
        switch(typeof t){
            case "undefined":
                return Dt.undefined;
            case "string":
                return Dt.string;
            case "number":
                return isNaN(t) ? Dt.nan : Dt.number;
            case "boolean":
                return Dt.boolean;
            case "function":
                return Dt.function;
            case "bigint":
                return Dt.bigint;
            case "symbol":
                return Dt.symbol;
            case "object":
                return Array.isArray(t) ? Dt.array : t === null ? Dt.null : t.then && typeof t.then == "function" && t.catch && typeof t.catch == "function" ? Dt.promise : typeof Map < "u" && t instanceof Map ? Dt.map : typeof Set < "u" && t instanceof Set ? Dt.set : typeof Date < "u" && t instanceof Date ? Dt.date : Dt.object;
            default:
                return Dt.unknown;
        }
    }, gt = Jn.arrayToEnum([
        "invalid_type",
        "invalid_literal",
        "custom",
        "invalid_union",
        "invalid_union_discriminator",
        "invalid_enum_value",
        "unrecognized_keys",
        "invalid_arguments",
        "invalid_return_type",
        "invalid_date",
        "invalid_string",
        "too_small",
        "too_big",
        "invalid_intersection_types",
        "not_multiple_of",
        "not_finite"
    ]), ZQ = (t)=>JSON.stringify(t, null, 2).replace(/"([^"]+)":/g, "$1:");
    class Pa extends Error {
        get errors() {
            return this.issues;
        }
        constructor(e){
            super(), this.issues = [], this.addIssue = (r)=>{
                this.issues = [
                    ...this.issues,
                    r
                ];
            }, this.addIssues = (r = [])=>{
                this.issues = [
                    ...this.issues,
                    ...r
                ];
            };
            const n = new.target.prototype;
            Object.setPrototypeOf ? Object.setPrototypeOf(this, n) : this.__proto__ = n, this.name = "ZodError", this.issues = e;
        }
        format(e) {
            const n = e || function(s) {
                return s.message;
            }, r = {
                _errors: []
            }, i = (s)=>{
                for (const o of s.issues)if (o.code === "invalid_union") o.unionErrors.map(i);
                else if (o.code === "invalid_return_type") i(o.returnTypeError);
                else if (o.code === "invalid_arguments") i(o.argumentsError);
                else if (o.path.length === 0) r._errors.push(n(o));
                else {
                    let a = r, l = 0;
                    for(; l < o.path.length;){
                        const c = o.path[l];
                        l === o.path.length - 1 ? (a[c] = a[c] || {
                            _errors: []
                        }, a[c]._errors.push(n(o))) : a[c] = a[c] || {
                            _errors: []
                        }, a = a[c], l++;
                    }
                }
            };
            return i(this), r;
        }
        static assert(e) {
            if (!(e instanceof Pa)) throw new Error(`Not a ZodError: ${e}`);
        }
        toString() {
            return this.message;
        }
        get message() {
            return JSON.stringify(this.issues, Jn.jsonStringifyReplacer, 2);
        }
        get isEmpty() {
            return this.issues.length === 0;
        }
        flatten(e = (n)=>n.message) {
            const n = {}, r = [];
            for (const i of this.issues)i.path.length > 0 ? (n[i.path[0]] = n[i.path[0]] || [], n[i.path[0]].push(e(i))) : r.push(e(i));
            return {
                formErrors: r,
                fieldErrors: n
            };
        }
        get formErrors() {
            return this.flatten();
        }
    }
    Pa.create = (t)=>new Pa(t);
    const jy = (t, e)=>{
        let n;
        switch(t.code){
            case gt.invalid_type:
                t.received === Dt.undefined ? n = "Required" : n = `Expected ${t.expected}, received ${t.received}`;
                break;
            case gt.invalid_literal:
                n = `Invalid literal value, expected ${JSON.stringify(t.expected, Jn.jsonStringifyReplacer)}`;
                break;
            case gt.unrecognized_keys:
                n = `Unrecognized key(s) in object: ${Jn.joinValues(t.keys, ", ")}`;
                break;
            case gt.invalid_union:
                n = "Invalid input";
                break;
            case gt.invalid_union_discriminator:
                n = `Invalid discriminator value. Expected ${Jn.joinValues(t.options)}`;
                break;
            case gt.invalid_enum_value:
                n = `Invalid enum value. Expected ${Jn.joinValues(t.options)}, received '${t.received}'`;
                break;
            case gt.invalid_arguments:
                n = "Invalid function arguments";
                break;
            case gt.invalid_return_type:
                n = "Invalid function return type";
                break;
            case gt.invalid_date:
                n = "Invalid date";
                break;
            case gt.invalid_string:
                typeof t.validation == "object" ? "includes" in t.validation ? (n = `Invalid input: must include "${t.validation.includes}"`, typeof t.validation.position == "number" && (n = `${n} at one or more positions greater than or equal to ${t.validation.position}`)) : "startsWith" in t.validation ? n = `Invalid input: must start with "${t.validation.startsWith}"` : "endsWith" in t.validation ? n = `Invalid input: must end with "${t.validation.endsWith}"` : Jn.assertNever(t.validation) : t.validation !== "regex" ? n = `Invalid ${t.validation}` : n = "Invalid";
                break;
            case gt.too_small:
                t.type === "array" ? n = `Array must contain ${t.exact ? "exactly" : t.inclusive ? "at least" : "more than"} ${t.minimum} element(s)` : t.type === "string" ? n = `String must contain ${t.exact ? "exactly" : t.inclusive ? "at least" : "over"} ${t.minimum} character(s)` : t.type === "number" ? n = `Number must be ${t.exact ? "exactly equal to " : t.inclusive ? "greater than or equal to " : "greater than "}${t.minimum}` : t.type === "date" ? n = `Date must be ${t.exact ? "exactly equal to " : t.inclusive ? "greater than or equal to " : "greater than "}${new Date(Number(t.minimum))}` : n = "Invalid input";
                break;
            case gt.too_big:
                t.type === "array" ? n = `Array must contain ${t.exact ? "exactly" : t.inclusive ? "at most" : "less than"} ${t.maximum} element(s)` : t.type === "string" ? n = `String must contain ${t.exact ? "exactly" : t.inclusive ? "at most" : "under"} ${t.maximum} character(s)` : t.type === "number" ? n = `Number must be ${t.exact ? "exactly" : t.inclusive ? "less than or equal to" : "less than"} ${t.maximum}` : t.type === "bigint" ? n = `BigInt must be ${t.exact ? "exactly" : t.inclusive ? "less than or equal to" : "less than"} ${t.maximum}` : t.type === "date" ? n = `Date must be ${t.exact ? "exactly" : t.inclusive ? "smaller than or equal to" : "smaller than"} ${new Date(Number(t.maximum))}` : n = "Invalid input";
                break;
            case gt.custom:
                n = "Invalid input";
                break;
            case gt.invalid_intersection_types:
                n = "Intersection results could not be merged";
                break;
            case gt.not_multiple_of:
                n = `Number must be a multiple of ${t.multipleOf}`;
                break;
            case gt.not_finite:
                n = "Number must be finite";
                break;
            default:
                n = e.defaultError, Jn.assertNever(t);
        }
        return {
            message: n
        };
    };
    let FW = jy;
    function JQ(t) {
        FW = t;
    }
    function cE() {
        return FW;
    }
    const uE = (t)=>{
        const { data: e, path: n, errorMaps: r, issueData: i } = t, s = [
            ...n,
            ...i.path || []
        ], o = {
            ...i,
            path: s
        };
        if (i.message !== void 0) return {
            ...i,
            path: s,
            message: i.message
        };
        let a = "";
        const l = r.filter((c)=>!!c).slice().reverse();
        for (const c of l)a = c(o, {
            data: e,
            defaultError: a
        }).message;
        return {
            ...i,
            path: s,
            message: a
        };
    }, QQ = [];
    function Tt(t, e) {
        const n = cE(), r = uE({
            issueData: e,
            data: t.data,
            path: t.path,
            errorMaps: [
                t.common.contextualErrorMap,
                t.schemaErrorMap,
                n,
                n === jy ? void 0 : jy
            ].filter((i)=>!!i)
        });
        t.common.issues.push(r);
    }
    class Ys {
        constructor(){
            this.value = "valid";
        }
        dirty() {
            this.value === "valid" && (this.value = "dirty");
        }
        abort() {
            this.value !== "aborted" && (this.value = "aborted");
        }
        static mergeArray(e, n) {
            const r = [];
            for (const i of n){
                if (i.status === "aborted") return un;
                i.status === "dirty" && e.dirty(), r.push(i.value);
            }
            return {
                status: e.value,
                value: r
            };
        }
        static async mergeObjectAsync(e, n) {
            const r = [];
            for (const i of n){
                const s = await i.key, o = await i.value;
                r.push({
                    key: s,
                    value: o
                });
            }
            return Ys.mergeObjectSync(e, r);
        }
        static mergeObjectSync(e, n) {
            const r = {};
            for (const i of n){
                const { key: s, value: o } = i;
                if (s.status === "aborted" || o.status === "aborted") return un;
                s.status === "dirty" && e.dirty(), o.status === "dirty" && e.dirty(), s.value !== "__proto__" && (typeof o.value < "u" || i.alwaysSet) && (r[s.value] = o.value);
            }
            return {
                status: e.value,
                value: r
            };
        }
    }
    const un = Object.freeze({
        status: "aborted"
    }), iy = (t)=>({
            status: "dirty",
            value: t
        }), Io = (t)=>({
            status: "valid",
            value: t
        }), wP = (t)=>t.status === "aborted", _P = (t)=>t.status === "dirty", Zp = (t)=>t.status === "valid", H0 = (t)=>typeof Promise < "u" && t instanceof Promise;
    function dE(t, e, n, r) {
        if (typeof e == "function" ? t !== e || !0 : !e.has(t)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return e.get(t);
    }
    function jW(t, e, n, r, i) {
        if (typeof e == "function" ? t !== e || !0 : !e.has(t)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return e.set(t, n), n;
    }
    var Yt;
    (function(t) {
        t.errToObj = (e)=>typeof e == "string" ? {
                message: e
            } : e || {}, t.toString = (e)=>typeof e == "string" ? e : e?.message;
    })(Yt || (Yt = {}));
    var Wx, qx;
    class Gc {
        constructor(e, n, r, i){
            this._cachedPath = [], this.parent = e, this.data = n, this._path = r, this._key = i;
        }
        get path() {
            return this._cachedPath.length || (this._key instanceof Array ? this._cachedPath.push(...this._path, ...this._key) : this._cachedPath.push(...this._path, this._key)), this._cachedPath;
        }
    }
    const OF = (t, e)=>{
        if (Zp(e)) return {
            success: !0,
            data: e.value
        };
        if (!t.common.issues.length) throw new Error("Validation failed but no issues detected.");
        return {
            success: !1,
            get error () {
                if (this._error) return this._error;
                const n = new Pa(t.common.issues);
                return this._error = n, this._error;
            }
        };
    };
    function An(t) {
        if (!t) return {};
        const { errorMap: e, invalid_type_error: n, required_error: r, description: i } = t;
        if (e && (n || r)) throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
        return e ? {
            errorMap: e,
            description: i
        } : {
            errorMap: (o, a)=>{
                var l, c;
                const { message: u } = t;
                return o.code === "invalid_enum_value" ? {
                    message: u ?? a.defaultError
                } : typeof a.data > "u" ? {
                    message: (l = u ?? r) !== null && l !== void 0 ? l : a.defaultError
                } : o.code !== "invalid_type" ? {
                    message: a.defaultError
                } : {
                    message: (c = u ?? n) !== null && c !== void 0 ? c : a.defaultError
                };
            },
            description: i
        };
    }
    class Bn {
        get description() {
            return this._def.description;
        }
        _getType(e) {
            return Xu(e.data);
        }
        _getOrReturnCtx(e, n) {
            return n || {
                common: e.parent.common,
                data: e.data,
                parsedType: Xu(e.data),
                schemaErrorMap: this._def.errorMap,
                path: e.path,
                parent: e.parent
            };
        }
        _processInputParams(e) {
            return {
                status: new Ys,
                ctx: {
                    common: e.parent.common,
                    data: e.data,
                    parsedType: Xu(e.data),
                    schemaErrorMap: this._def.errorMap,
                    path: e.path,
                    parent: e.parent
                }
            };
        }
        _parseSync(e) {
            const n = this._parse(e);
            if (H0(n)) throw new Error("Synchronous parse encountered promise.");
            return n;
        }
        _parseAsync(e) {
            const n = this._parse(e);
            return Promise.resolve(n);
        }
        parse(e, n) {
            const r = this.safeParse(e, n);
            if (r.success) return r.data;
            throw r.error;
        }
        safeParse(e, n) {
            var r;
            const i = {
                common: {
                    issues: [],
                    async: (r = n?.async) !== null && r !== void 0 ? r : !1,
                    contextualErrorMap: n?.errorMap
                },
                path: n?.path || [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: e,
                parsedType: Xu(e)
            }, s = this._parseSync({
                data: e,
                path: i.path,
                parent: i
            });
            return OF(i, s);
        }
        "~validate"(e) {
            var n, r;
            const i = {
                common: {
                    issues: [],
                    async: !!this["~standard"].async
                },
                path: [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: e,
                parsedType: Xu(e)
            };
            if (!this["~standard"].async) try {
                const s = this._parseSync({
                    data: e,
                    path: [],
                    parent: i
                });
                return Zp(s) ? {
                    value: s.value
                } : {
                    issues: i.common.issues
                };
            } catch (s) {
                !((r = (n = s?.message) === null || n === void 0 ? void 0 : n.toLowerCase()) === null || r === void 0) && r.includes("encountered") && (this["~standard"].async = !0), i.common = {
                    issues: [],
                    async: !0
                };
            }
            return this._parseAsync({
                data: e,
                path: [],
                parent: i
            }).then((s)=>Zp(s) ? {
                    value: s.value
                } : {
                    issues: i.common.issues
                });
        }
        async parseAsync(e, n) {
            const r = await this.safeParseAsync(e, n);
            if (r.success) return r.data;
            throw r.error;
        }
        async safeParseAsync(e, n) {
            const r = {
                common: {
                    issues: [],
                    contextualErrorMap: n?.errorMap,
                    async: !0
                },
                path: n?.path || [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: e,
                parsedType: Xu(e)
            }, i = this._parse({
                data: e,
                path: r.path,
                parent: r
            }), s = await (H0(i) ? i : Promise.resolve(i));
            return OF(r, s);
        }
        refine(e, n) {
            const r = (i)=>typeof n == "string" || typeof n > "u" ? {
                    message: n
                } : typeof n == "function" ? n(i) : n;
            return this._refinement((i, s)=>{
                const o = e(i), a = ()=>s.addIssue({
                        code: gt.custom,
                        ...r(i)
                    });
                return typeof Promise < "u" && o instanceof Promise ? o.then((l)=>l ? !0 : (a(), !1)) : o ? !0 : (a(), !1);
            });
        }
        refinement(e, n) {
            return this._refinement((r, i)=>e(r) ? !0 : (i.addIssue(typeof n == "function" ? n(r, i) : n), !1));
        }
        _refinement(e) {
            return new rc({
                schema: this,
                typeName: cn.ZodEffects,
                effect: {
                    type: "refinement",
                    refinement: e
                }
            });
        }
        superRefine(e) {
            return this._refinement(e);
        }
        constructor(e){
            this.spa = this.safeParseAsync, this._def = e, this.parse = this.parse.bind(this), this.safeParse = this.safeParse.bind(this), this.parseAsync = this.parseAsync.bind(this), this.safeParseAsync = this.safeParseAsync.bind(this), this.spa = this.spa.bind(this), this.refine = this.refine.bind(this), this.refinement = this.refinement.bind(this), this.superRefine = this.superRefine.bind(this), this.optional = this.optional.bind(this), this.nullable = this.nullable.bind(this), this.nullish = this.nullish.bind(this), this.array = this.array.bind(this), this.promise = this.promise.bind(this), this.or = this.or.bind(this), this.and = this.and.bind(this), this.transform = this.transform.bind(this), this.brand = this.brand.bind(this), this.default = this.default.bind(this), this.catch = this.catch.bind(this), this.describe = this.describe.bind(this), this.pipe = this.pipe.bind(this), this.readonly = this.readonly.bind(this), this.isNullable = this.isNullable.bind(this), this.isOptional = this.isOptional.bind(this), this["~standard"] = {
                version: 1,
                vendor: "zod",
                validate: (n)=>this["~validate"](n)
            };
        }
        optional() {
            return jc.create(this, this._def);
        }
        nullable() {
            return Yf.create(this, this._def);
        }
        nullish() {
            return this.nullable().optional();
        }
        array() {
            return ec.create(this);
        }
        promise() {
            return Uy.create(this, this._def);
        }
        or(e) {
            return K0.create([
                this,
                e
            ], this._def);
        }
        and(e) {
            return Y0.create(this, e, this._def);
        }
        transform(e) {
            return new rc({
                ...An(this._def),
                schema: this,
                typeName: cn.ZodEffects,
                effect: {
                    type: "transform",
                    transform: e
                }
            });
        }
        default(e) {
            const n = typeof e == "function" ? e : ()=>e;
            return new tb({
                ...An(this._def),
                innerType: this,
                defaultValue: n,
                typeName: cn.ZodDefault
            });
        }
        brand() {
            return new oO({
                typeName: cn.ZodBranded,
                type: this,
                ...An(this._def)
            });
        }
        catch(e) {
            const n = typeof e == "function" ? e : ()=>e;
            return new nb({
                ...An(this._def),
                innerType: this,
                catchValue: n,
                typeName: cn.ZodCatch
            });
        }
        describe(e) {
            const n = this.constructor;
            return new n({
                ...this._def,
                description: e
            });
        }
        pipe(e) {
            return Xb.create(this, e);
        }
        readonly() {
            return rb.create(this);
        }
        isOptional() {
            return this.safeParse(void 0).success;
        }
        isNullable() {
            return this.safeParse(null).success;
        }
    }
    const eee = /^c[^\s-]{8,}$/i, tee = /^[0-9a-z]+$/, nee = /^[0-9A-HJKMNP-TV-Z]{26}$/i, ree = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i, iee = /^[a-z0-9_-]{21}$/i, see = /^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/, oee = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/, aee = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i, lee = "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";
    let rR;
    const cee = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/, uee = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/, dee = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/, fee = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/, hee = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/, pee = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/, BW = "((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))", mee = new RegExp(`^${BW}$`);
    function UW(t) {
        let e = "([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";
        return t.precision ? e = `${e}\\.\\d{${t.precision}}` : t.precision == null && (e = `${e}(\\.\\d+)?`), e;
    }
    function gee(t) {
        return new RegExp(`^${UW(t)}$`);
    }
    function zW(t) {
        let e = `${BW}T${UW(t)}`;
        const n = [];
        return n.push(t.local ? "Z?" : "Z"), t.offset && n.push("([+-]\\d{2}:?\\d{2})"), e = `${e}(${n.join("|")})`, new RegExp(`^${e}$`);
    }
    function yee(t, e) {
        return !!((e === "v4" || !e) && cee.test(t) || (e === "v6" || !e) && dee.test(t));
    }
    function vee(t, e) {
        if (!see.test(t)) return !1;
        try {
            const [n] = t.split("."), r = n.replace(/-/g, "+").replace(/_/g, "/").padEnd(n.length + (4 - n.length % 4) % 4, "="), i = JSON.parse(atob(r));
            return !(typeof i != "object" || i === null || !i.typ || !i.alg || e && i.alg !== e);
        } catch  {
            return !1;
        }
    }
    function xee(t, e) {
        return !!((e === "v4" || !e) && uee.test(t) || (e === "v6" || !e) && fee.test(t));
    }
    class Zl extends Bn {
        _parse(e) {
            if (this._def.coerce && (e.data = String(e.data)), this._getType(e) !== Dt.string) {
                const s = this._getOrReturnCtx(e);
                return Tt(s, {
                    code: gt.invalid_type,
                    expected: Dt.string,
                    received: s.parsedType
                }), un;
            }
            const r = new Ys;
            let i;
            for (const s of this._def.checks)if (s.kind === "min") e.data.length < s.value && (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.too_small,
                minimum: s.value,
                type: "string",
                inclusive: !0,
                exact: !1,
                message: s.message
            }), r.dirty());
            else if (s.kind === "max") e.data.length > s.value && (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.too_big,
                maximum: s.value,
                type: "string",
                inclusive: !0,
                exact: !1,
                message: s.message
            }), r.dirty());
            else if (s.kind === "length") {
                const o = e.data.length > s.value, a = e.data.length < s.value;
                (o || a) && (i = this._getOrReturnCtx(e, i), o ? Tt(i, {
                    code: gt.too_big,
                    maximum: s.value,
                    type: "string",
                    inclusive: !0,
                    exact: !0,
                    message: s.message
                }) : a && Tt(i, {
                    code: gt.too_small,
                    minimum: s.value,
                    type: "string",
                    inclusive: !0,
                    exact: !0,
                    message: s.message
                }), r.dirty());
            } else if (s.kind === "email") aee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "email",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "emoji") rR || (rR = new RegExp(lee, "u")), rR.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "emoji",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "uuid") ree.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "uuid",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "nanoid") iee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "nanoid",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "cuid") eee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "cuid",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "cuid2") tee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "cuid2",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "ulid") nee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "ulid",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "url") try {
                new URL(e.data);
            } catch  {
                i = this._getOrReturnCtx(e, i), Tt(i, {
                    validation: "url",
                    code: gt.invalid_string,
                    message: s.message
                }), r.dirty();
            }
            else s.kind === "regex" ? (s.regex.lastIndex = 0, s.regex.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "regex",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty())) : s.kind === "trim" ? e.data = e.data.trim() : s.kind === "includes" ? e.data.includes(s.value, s.position) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.invalid_string,
                validation: {
                    includes: s.value,
                    position: s.position
                },
                message: s.message
            }), r.dirty()) : s.kind === "toLowerCase" ? e.data = e.data.toLowerCase() : s.kind === "toUpperCase" ? e.data = e.data.toUpperCase() : s.kind === "startsWith" ? e.data.startsWith(s.value) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.invalid_string,
                validation: {
                    startsWith: s.value
                },
                message: s.message
            }), r.dirty()) : s.kind === "endsWith" ? e.data.endsWith(s.value) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.invalid_string,
                validation: {
                    endsWith: s.value
                },
                message: s.message
            }), r.dirty()) : s.kind === "datetime" ? zW(s).test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.invalid_string,
                validation: "datetime",
                message: s.message
            }), r.dirty()) : s.kind === "date" ? mee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.invalid_string,
                validation: "date",
                message: s.message
            }), r.dirty()) : s.kind === "time" ? gee(s).test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.invalid_string,
                validation: "time",
                message: s.message
            }), r.dirty()) : s.kind === "duration" ? oee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "duration",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty()) : s.kind === "ip" ? yee(e.data, s.version) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "ip",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty()) : s.kind === "jwt" ? vee(e.data, s.alg) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "jwt",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty()) : s.kind === "cidr" ? xee(e.data, s.version) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "cidr",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty()) : s.kind === "base64" ? hee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "base64",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty()) : s.kind === "base64url" ? pee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "base64url",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty()) : Jn.assertNever(s);
            return {
                status: r.value,
                value: e.data
            };
        }
        _regex(e, n, r) {
            return this.refinement((i)=>e.test(i), {
                validation: n,
                code: gt.invalid_string,
                ...Yt.errToObj(r)
            });
        }
        _addCheck(e) {
            return new Zl({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    e
                ]
            });
        }
        email(e) {
            return this._addCheck({
                kind: "email",
                ...Yt.errToObj(e)
            });
        }
        url(e) {
            return this._addCheck({
                kind: "url",
                ...Yt.errToObj(e)
            });
        }
        emoji(e) {
            return this._addCheck({
                kind: "emoji",
                ...Yt.errToObj(e)
            });
        }
        uuid(e) {
            return this._addCheck({
                kind: "uuid",
                ...Yt.errToObj(e)
            });
        }
        nanoid(e) {
            return this._addCheck({
                kind: "nanoid",
                ...Yt.errToObj(e)
            });
        }
        cuid(e) {
            return this._addCheck({
                kind: "cuid",
                ...Yt.errToObj(e)
            });
        }
        cuid2(e) {
            return this._addCheck({
                kind: "cuid2",
                ...Yt.errToObj(e)
            });
        }
        ulid(e) {
            return this._addCheck({
                kind: "ulid",
                ...Yt.errToObj(e)
            });
        }
        base64(e) {
            return this._addCheck({
                kind: "base64",
                ...Yt.errToObj(e)
            });
        }
        base64url(e) {
            return this._addCheck({
                kind: "base64url",
                ...Yt.errToObj(e)
            });
        }
        jwt(e) {
            return this._addCheck({
                kind: "jwt",
                ...Yt.errToObj(e)
            });
        }
        ip(e) {
            return this._addCheck({
                kind: "ip",
                ...Yt.errToObj(e)
            });
        }
        cidr(e) {
            return this._addCheck({
                kind: "cidr",
                ...Yt.errToObj(e)
            });
        }
        datetime(e) {
            var n, r;
            return typeof e == "string" ? this._addCheck({
                kind: "datetime",
                precision: null,
                offset: !1,
                local: !1,
                message: e
            }) : this._addCheck({
                kind: "datetime",
                precision: typeof e?.precision > "u" ? null : e?.precision,
                offset: (n = e?.offset) !== null && n !== void 0 ? n : !1,
                local: (r = e?.local) !== null && r !== void 0 ? r : !1,
                ...Yt.errToObj(e?.message)
            });
        }
        date(e) {
            return this._addCheck({
                kind: "date",
                message: e
            });
        }
        time(e) {
            return typeof e == "string" ? this._addCheck({
                kind: "time",
                precision: null,
                message: e
            }) : this._addCheck({
                kind: "time",
                precision: typeof e?.precision > "u" ? null : e?.precision,
                ...Yt.errToObj(e?.message)
            });
        }
        duration(e) {
            return this._addCheck({
                kind: "duration",
                ...Yt.errToObj(e)
            });
        }
        regex(e, n) {
            return this._addCheck({
                kind: "regex",
                regex: e,
                ...Yt.errToObj(n)
            });
        }
        includes(e, n) {
            return this._addCheck({
                kind: "includes",
                value: e,
                position: n?.position,
                ...Yt.errToObj(n?.message)
            });
        }
        startsWith(e, n) {
            return this._addCheck({
                kind: "startsWith",
                value: e,
                ...Yt.errToObj(n)
            });
        }
        endsWith(e, n) {
            return this._addCheck({
                kind: "endsWith",
                value: e,
                ...Yt.errToObj(n)
            });
        }
        min(e, n) {
            return this._addCheck({
                kind: "min",
                value: e,
                ...Yt.errToObj(n)
            });
        }
        max(e, n) {
            return this._addCheck({
                kind: "max",
                value: e,
                ...Yt.errToObj(n)
            });
        }
        length(e, n) {
            return this._addCheck({
                kind: "length",
                value: e,
                ...Yt.errToObj(n)
            });
        }
        nonempty(e) {
            return this.min(1, Yt.errToObj(e));
        }
        trim() {
            return new Zl({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: "trim"
                    }
                ]
            });
        }
        toLowerCase() {
            return new Zl({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: "toLowerCase"
                    }
                ]
            });
        }
        toUpperCase() {
            return new Zl({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: "toUpperCase"
                    }
                ]
            });
        }
        get isDatetime() {
            return !!this._def.checks.find((e)=>e.kind === "datetime");
        }
        get isDate() {
            return !!this._def.checks.find((e)=>e.kind === "date");
        }
        get isTime() {
            return !!this._def.checks.find((e)=>e.kind === "time");
        }
        get isDuration() {
            return !!this._def.checks.find((e)=>e.kind === "duration");
        }
        get isEmail() {
            return !!this._def.checks.find((e)=>e.kind === "email");
        }
        get isURL() {
            return !!this._def.checks.find((e)=>e.kind === "url");
        }
        get isEmoji() {
            return !!this._def.checks.find((e)=>e.kind === "emoji");
        }
        get isUUID() {
            return !!this._def.checks.find((e)=>e.kind === "uuid");
        }
        get isNANOID() {
            return !!this._def.checks.find((e)=>e.kind === "nanoid");
        }
        get isCUID() {
            return !!this._def.checks.find((e)=>e.kind === "cuid");
        }
        get isCUID2() {
            return !!this._def.checks.find((e)=>e.kind === "cuid2");
        }
        get isULID() {
            return !!this._def.checks.find((e)=>e.kind === "ulid");
        }
        get isIP() {
            return !!this._def.checks.find((e)=>e.kind === "ip");
        }
        get isCIDR() {
            return !!this._def.checks.find((e)=>e.kind === "cidr");
        }
        get isBase64() {
            return !!this._def.checks.find((e)=>e.kind === "base64");
        }
        get isBase64url() {
            return !!this._def.checks.find((e)=>e.kind === "base64url");
        }
        get minLength() {
            let e = null;
            for (const n of this._def.checks)n.kind === "min" && (e === null || n.value > e) && (e = n.value);
            return e;
        }
        get maxLength() {
            let e = null;
            for (const n of this._def.checks)n.kind === "max" && (e === null || n.value < e) && (e = n.value);
            return e;
        }
    }
    Zl.create = (t)=>{
        var e;
        return new Zl({
            checks: [],
            typeName: cn.ZodString,
            coerce: (e = t?.coerce) !== null && e !== void 0 ? e : !1,
            ...An(t)
        });
    };
    function bee(t, e) {
        const n = (t.toString().split(".")[1] || "").length, r = (e.toString().split(".")[1] || "").length, i = n > r ? n : r, s = parseInt(t.toFixed(i).replace(".", "")), o = parseInt(e.toFixed(i).replace(".", ""));
        return s % o / Math.pow(10, i);
    }
    class Gf extends Bn {
        constructor(){
            super(...arguments), this.min = this.gte, this.max = this.lte, this.step = this.multipleOf;
        }
        _parse(e) {
            if (this._def.coerce && (e.data = Number(e.data)), this._getType(e) !== Dt.number) {
                const s = this._getOrReturnCtx(e);
                return Tt(s, {
                    code: gt.invalid_type,
                    expected: Dt.number,
                    received: s.parsedType
                }), un;
            }
            let r;
            const i = new Ys;
            for (const s of this._def.checks)s.kind === "int" ? Jn.isInteger(e.data) || (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.invalid_type,
                expected: "integer",
                received: "float",
                message: s.message
            }), i.dirty()) : s.kind === "min" ? (s.inclusive ? e.data < s.value : e.data <= s.value) && (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.too_small,
                minimum: s.value,
                type: "number",
                inclusive: s.inclusive,
                exact: !1,
                message: s.message
            }), i.dirty()) : s.kind === "max" ? (s.inclusive ? e.data > s.value : e.data >= s.value) && (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.too_big,
                maximum: s.value,
                type: "number",
                inclusive: s.inclusive,
                exact: !1,
                message: s.message
            }), i.dirty()) : s.kind === "multipleOf" ? bee(e.data, s.value) !== 0 && (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.not_multiple_of,
                multipleOf: s.value,
                message: s.message
            }), i.dirty()) : s.kind === "finite" ? Number.isFinite(e.data) || (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.not_finite,
                message: s.message
            }), i.dirty()) : Jn.assertNever(s);
            return {
                status: i.value,
                value: e.data
            };
        }
        gte(e, n) {
            return this.setLimit("min", e, !0, Yt.toString(n));
        }
        gt(e, n) {
            return this.setLimit("min", e, !1, Yt.toString(n));
        }
        lte(e, n) {
            return this.setLimit("max", e, !0, Yt.toString(n));
        }
        lt(e, n) {
            return this.setLimit("max", e, !1, Yt.toString(n));
        }
        setLimit(e, n, r, i) {
            return new Gf({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: e,
                        value: n,
                        inclusive: r,
                        message: Yt.toString(i)
                    }
                ]
            });
        }
        _addCheck(e) {
            return new Gf({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    e
                ]
            });
        }
        int(e) {
            return this._addCheck({
                kind: "int",
                message: Yt.toString(e)
            });
        }
        positive(e) {
            return this._addCheck({
                kind: "min",
                value: 0,
                inclusive: !1,
                message: Yt.toString(e)
            });
        }
        negative(e) {
            return this._addCheck({
                kind: "max",
                value: 0,
                inclusive: !1,
                message: Yt.toString(e)
            });
        }
        nonpositive(e) {
            return this._addCheck({
                kind: "max",
                value: 0,
                inclusive: !0,
                message: Yt.toString(e)
            });
        }
        nonnegative(e) {
            return this._addCheck({
                kind: "min",
                value: 0,
                inclusive: !0,
                message: Yt.toString(e)
            });
        }
        multipleOf(e, n) {
            return this._addCheck({
                kind: "multipleOf",
                value: e,
                message: Yt.toString(n)
            });
        }
        finite(e) {
            return this._addCheck({
                kind: "finite",
                message: Yt.toString(e)
            });
        }
        safe(e) {
            return this._addCheck({
                kind: "min",
                inclusive: !0,
                value: Number.MIN_SAFE_INTEGER,
                message: Yt.toString(e)
            })._addCheck({
                kind: "max",
                inclusive: !0,
                value: Number.MAX_SAFE_INTEGER,
                message: Yt.toString(e)
            });
        }
        get minValue() {
            let e = null;
            for (const n of this._def.checks)n.kind === "min" && (e === null || n.value > e) && (e = n.value);
            return e;
        }
        get maxValue() {
            let e = null;
            for (const n of this._def.checks)n.kind === "max" && (e === null || n.value < e) && (e = n.value);
            return e;
        }
        get isInt() {
            return !!this._def.checks.find((e)=>e.kind === "int" || e.kind === "multipleOf" && Jn.isInteger(e.value));
        }
        get isFinite() {
            let e = null, n = null;
            for (const r of this._def.checks){
                if (r.kind === "finite" || r.kind === "int" || r.kind === "multipleOf") return !0;
                r.kind === "min" ? (n === null || r.value > n) && (n = r.value) : r.kind === "max" && (e === null || r.value < e) && (e = r.value);
            }
            return Number.isFinite(n) && Number.isFinite(e);
        }
    }
    Gf.create = (t)=>new Gf({
            checks: [],
            typeName: cn.ZodNumber,
            coerce: t?.coerce || !1,
            ...An(t)
        });
    class Xf extends Bn {
        constructor(){
            super(...arguments), this.min = this.gte, this.max = this.lte;
        }
        _parse(e) {
            if (this._def.coerce) try {
                e.data = BigInt(e.data);
            } catch  {
                return this._getInvalidInput(e);
            }
            if (this._getType(e) !== Dt.bigint) return this._getInvalidInput(e);
            let r;
            const i = new Ys;
            for (const s of this._def.checks)s.kind === "min" ? (s.inclusive ? e.data < s.value : e.data <= s.value) && (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.too_small,
                type: "bigint",
                minimum: s.value,
                inclusive: s.inclusive,
                message: s.message
            }), i.dirty()) : s.kind === "max" ? (s.inclusive ? e.data > s.value : e.data >= s.value) && (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.too_big,
                type: "bigint",
                maximum: s.value,
                inclusive: s.inclusive,
                message: s.message
            }), i.dirty()) : s.kind === "multipleOf" ? e.data % s.value !== BigInt(0) && (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.not_multiple_of,
                multipleOf: s.value,
                message: s.message
            }), i.dirty()) : Jn.assertNever(s);
            return {
                status: i.value,
                value: e.data
            };
        }
        _getInvalidInput(e) {
            const n = this._getOrReturnCtx(e);
            return Tt(n, {
                code: gt.invalid_type,
                expected: Dt.bigint,
                received: n.parsedType
            }), un;
        }
        gte(e, n) {
            return this.setLimit("min", e, !0, Yt.toString(n));
        }
        gt(e, n) {
            return this.setLimit("min", e, !1, Yt.toString(n));
        }
        lte(e, n) {
            return this.setLimit("max", e, !0, Yt.toString(n));
        }
        lt(e, n) {
            return this.setLimit("max", e, !1, Yt.toString(n));
        }
        setLimit(e, n, r, i) {
            return new Xf({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: e,
                        value: n,
                        inclusive: r,
                        message: Yt.toString(i)
                    }
                ]
            });
        }
        _addCheck(e) {
            return new Xf({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    e
                ]
            });
        }
        positive(e) {
            return this._addCheck({
                kind: "min",
                value: BigInt(0),
                inclusive: !1,
                message: Yt.toString(e)
            });
        }
        negative(e) {
            return this._addCheck({
                kind: "max",
                value: BigInt(0),
                inclusive: !1,
                message: Yt.toString(e)
            });
        }
        nonpositive(e) {
            return this._addCheck({
                kind: "max",
                value: BigInt(0),
                inclusive: !0,
                message: Yt.toString(e)
            });
        }
        nonnegative(e) {
            return this._addCheck({
                kind: "min",
                value: BigInt(0),
                inclusive: !0,
                message: Yt.toString(e)
            });
        }
        multipleOf(e, n) {
            return this._addCheck({
                kind: "multipleOf",
                value: e,
                message: Yt.toString(n)
            });
        }
        get minValue() {
            let e = null;
            for (const n of this._def.checks)n.kind === "min" && (e === null || n.value > e) && (e = n.value);
            return e;
        }
        get maxValue() {
            let e = null;
            for (const n of this._def.checks)n.kind === "max" && (e === null || n.value < e) && (e = n.value);
            return e;
        }
    }
    Xf.create = (t)=>{
        var e;
        return new Xf({
            checks: [],
            typeName: cn.ZodBigInt,
            coerce: (e = t?.coerce) !== null && e !== void 0 ? e : !1,
            ...An(t)
        });
    };
    class $0 extends Bn {
        _parse(e) {
            if (this._def.coerce && (e.data = !!e.data), this._getType(e) !== Dt.boolean) {
                const r = this._getOrReturnCtx(e);
                return Tt(r, {
                    code: gt.invalid_type,
                    expected: Dt.boolean,
                    received: r.parsedType
                }), un;
            }
            return Io(e.data);
        }
    }
    $0.create = (t)=>new $0({
            typeName: cn.ZodBoolean,
            coerce: t?.coerce || !1,
            ...An(t)
        });
    class Jp extends Bn {
        _parse(e) {
            if (this._def.coerce && (e.data = new Date(e.data)), this._getType(e) !== Dt.date) {
                const s = this._getOrReturnCtx(e);
                return Tt(s, {
                    code: gt.invalid_type,
                    expected: Dt.date,
                    received: s.parsedType
                }), un;
            }
            if (isNaN(e.data.getTime())) {
                const s = this._getOrReturnCtx(e);
                return Tt(s, {
                    code: gt.invalid_date
                }), un;
            }
            const r = new Ys;
            let i;
            for (const s of this._def.checks)s.kind === "min" ? e.data.getTime() < s.value && (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.too_small,
                message: s.message,
                inclusive: !0,
                exact: !1,
                minimum: s.value,
                type: "date"
            }), r.dirty()) : s.kind === "max" ? e.data.getTime() > s.value && (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.too_big,
                message: s.message,
                inclusive: !0,
                exact: !1,
                maximum: s.value,
                type: "date"
            }), r.dirty()) : Jn.assertNever(s);
            return {
                status: r.value,
                value: new Date(e.data.getTime())
            };
        }
        _addCheck(e) {
            return new Jp({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    e
                ]
            });
        }
        min(e, n) {
            return this._addCheck({
                kind: "min",
                value: e.getTime(),
                message: Yt.toString(n)
            });
        }
        max(e, n) {
            return this._addCheck({
                kind: "max",
                value: e.getTime(),
                message: Yt.toString(n)
            });
        }
        get minDate() {
            let e = null;
            for (const n of this._def.checks)n.kind === "min" && (e === null || n.value > e) && (e = n.value);
            return e != null ? new Date(e) : null;
        }
        get maxDate() {
            let e = null;
            for (const n of this._def.checks)n.kind === "max" && (e === null || n.value < e) && (e = n.value);
            return e != null ? new Date(e) : null;
        }
    }
    Jp.create = (t)=>new Jp({
            checks: [],
            coerce: t?.coerce || !1,
            typeName: cn.ZodDate,
            ...An(t)
        });
    class fE extends Bn {
        _parse(e) {
            if (this._getType(e) !== Dt.symbol) {
                const r = this._getOrReturnCtx(e);
                return Tt(r, {
                    code: gt.invalid_type,
                    expected: Dt.symbol,
                    received: r.parsedType
                }), un;
            }
            return Io(e.data);
        }
    }
    fE.create = (t)=>new fE({
            typeName: cn.ZodSymbol,
            ...An(t)
        });
    class G0 extends Bn {
        _parse(e) {
            if (this._getType(e) !== Dt.undefined) {
                const r = this._getOrReturnCtx(e);
                return Tt(r, {
                    code: gt.invalid_type,
                    expected: Dt.undefined,
                    received: r.parsedType
                }), un;
            }
            return Io(e.data);
        }
    }
    G0.create = (t)=>new G0({
            typeName: cn.ZodUndefined,
            ...An(t)
        });
    class X0 extends Bn {
        _parse(e) {
            if (this._getType(e) !== Dt.null) {
                const r = this._getOrReturnCtx(e);
                return Tt(r, {
                    code: gt.invalid_type,
                    expected: Dt.null,
                    received: r.parsedType
                }), un;
            }
            return Io(e.data);
        }
    }
    X0.create = (t)=>new X0({
            typeName: cn.ZodNull,
            ...An(t)
        });
    class By extends Bn {
        constructor(){
            super(...arguments), this._any = !0;
        }
        _parse(e) {
            return Io(e.data);
        }
    }
    By.create = (t)=>new By({
            typeName: cn.ZodAny,
            ...An(t)
        });
    class jp extends Bn {
        constructor(){
            super(...arguments), this._unknown = !0;
        }
        _parse(e) {
            return Io(e.data);
        }
    }
    jp.create = (t)=>new jp({
            typeName: cn.ZodUnknown,
            ...An(t)
        });
    class dd extends Bn {
        _parse(e) {
            const n = this._getOrReturnCtx(e);
            return Tt(n, {
                code: gt.invalid_type,
                expected: Dt.never,
                received: n.parsedType
            }), un;
        }
    }
    dd.create = (t)=>new dd({
            typeName: cn.ZodNever,
            ...An(t)
        });
    class hE extends Bn {
        _parse(e) {
            if (this._getType(e) !== Dt.undefined) {
                const r = this._getOrReturnCtx(e);
                return Tt(r, {
                    code: gt.invalid_type,
                    expected: Dt.void,
                    received: r.parsedType
                }), un;
            }
            return Io(e.data);
        }
    }
    hE.create = (t)=>new hE({
            typeName: cn.ZodVoid,
            ...An(t)
        });
    class ec extends Bn {
        _parse(e) {
            const { ctx: n, status: r } = this._processInputParams(e), i = this._def;
            if (n.parsedType !== Dt.array) return Tt(n, {
                code: gt.invalid_type,
                expected: Dt.array,
                received: n.parsedType
            }), un;
            if (i.exactLength !== null) {
                const o = n.data.length > i.exactLength.value, a = n.data.length < i.exactLength.value;
                (o || a) && (Tt(n, {
                    code: o ? gt.too_big : gt.too_small,
                    minimum: a ? i.exactLength.value : void 0,
                    maximum: o ? i.exactLength.value : void 0,
                    type: "array",
                    inclusive: !0,
                    exact: !0,
                    message: i.exactLength.message
                }), r.dirty());
            }
            if (i.minLength !== null && n.data.length < i.minLength.value && (Tt(n, {
                code: gt.too_small,
                minimum: i.minLength.value,
                type: "array",
                inclusive: !0,
                exact: !1,
                message: i.minLength.message
            }), r.dirty()), i.maxLength !== null && n.data.length > i.maxLength.value && (Tt(n, {
                code: gt.too_big,
                maximum: i.maxLength.value,
                type: "array",
                inclusive: !0,
                exact: !1,
                message: i.maxLength.message
            }), r.dirty()), n.common.async) return Promise.all([
                ...n.data
            ].map((o, a)=>i.type._parseAsync(new Gc(n, o, n.path, a)))).then((o)=>Ys.mergeArray(r, o));
            const s = [
                ...n.data
            ].map((o, a)=>i.type._parseSync(new Gc(n, o, n.path, a)));
            return Ys.mergeArray(r, s);
        }
        get element() {
            return this._def.type;
        }
        min(e, n) {
            return new ec({
                ...this._def,
                minLength: {
                    value: e,
                    message: Yt.toString(n)
                }
            });
        }
        max(e, n) {
            return new ec({
                ...this._def,
                maxLength: {
                    value: e,
                    message: Yt.toString(n)
                }
            });
        }
        length(e, n) {
            return new ec({
                ...this._def,
                exactLength: {
                    value: e,
                    message: Yt.toString(n)
                }
            });
        }
        nonempty(e) {
            return this.min(1, e);
        }
    }
    ec.create = (t, e)=>new ec({
            type: t,
            minLength: null,
            maxLength: null,
            exactLength: null,
            typeName: cn.ZodArray,
            ...An(e)
        });
    function Zg(t) {
        if (t instanceof ni) {
            const e = {};
            for(const n in t.shape){
                const r = t.shape[n];
                e[n] = jc.create(Zg(r));
            }
            return new ni({
                ...t._def,
                shape: ()=>e
            });
        } else return t instanceof ec ? new ec({
            ...t._def,
            type: Zg(t.element)
        }) : t instanceof jc ? jc.create(Zg(t.unwrap())) : t instanceof Yf ? Yf.create(Zg(t.unwrap())) : t instanceof Xc ? Xc.create(t.items.map((e)=>Zg(e))) : t;
    }
    class ni extends Bn {
        constructor(){
            super(...arguments), this._cached = null, this.nonstrict = this.passthrough, this.augment = this.extend;
        }
        _getCached() {
            if (this._cached !== null) return this._cached;
            const e = this._def.shape(), n = Jn.objectKeys(e);
            return this._cached = {
                shape: e,
                keys: n
            };
        }
        _parse(e) {
            if (this._getType(e) !== Dt.object) {
                const c = this._getOrReturnCtx(e);
                return Tt(c, {
                    code: gt.invalid_type,
                    expected: Dt.object,
                    received: c.parsedType
                }), un;
            }
            const { status: r, ctx: i } = this._processInputParams(e), { shape: s, keys: o } = this._getCached(), a = [];
            if (!(this._def.catchall instanceof dd && this._def.unknownKeys === "strip")) for(const c in i.data)o.includes(c) || a.push(c);
            const l = [];
            for (const c of o){
                const u = s[c], f = i.data[c];
                l.push({
                    key: {
                        status: "valid",
                        value: c
                    },
                    value: u._parse(new Gc(i, f, i.path, c)),
                    alwaysSet: c in i.data
                });
            }
            if (this._def.catchall instanceof dd) {
                const c = this._def.unknownKeys;
                if (c === "passthrough") for (const u of a)l.push({
                    key: {
                        status: "valid",
                        value: u
                    },
                    value: {
                        status: "valid",
                        value: i.data[u]
                    }
                });
                else if (c === "strict") a.length > 0 && (Tt(i, {
                    code: gt.unrecognized_keys,
                    keys: a
                }), r.dirty());
                else if (c !== "strip") throw new Error("Internal ZodObject error: invalid unknownKeys value.");
            } else {
                const c = this._def.catchall;
                for (const u of a){
                    const f = i.data[u];
                    l.push({
                        key: {
                            status: "valid",
                            value: u
                        },
                        value: c._parse(new Gc(i, f, i.path, u)),
                        alwaysSet: u in i.data
                    });
                }
            }
            return i.common.async ? Promise.resolve().then(async ()=>{
                const c = [];
                for (const u of l){
                    const f = await u.key, p = await u.value;
                    c.push({
                        key: f,
                        value: p,
                        alwaysSet: u.alwaysSet
                    });
                }
                return c;
            }).then((c)=>Ys.mergeObjectSync(r, c)) : Ys.mergeObjectSync(r, l);
        }
        get shape() {
            return this._def.shape();
        }
        strict(e) {
            return Yt.errToObj, new ni({
                ...this._def,
                unknownKeys: "strict",
                ...e !== void 0 ? {
                    errorMap: (n, r)=>{
                        var i, s, o, a;
                        const l = (o = (s = (i = this._def).errorMap) === null || s === void 0 ? void 0 : s.call(i, n, r).message) !== null && o !== void 0 ? o : r.defaultError;
                        return n.code === "unrecognized_keys" ? {
                            message: (a = Yt.errToObj(e).message) !== null && a !== void 0 ? a : l
                        } : {
                            message: l
                        };
                    }
                } : {}
            });
        }
        strip() {
            return new ni({
                ...this._def,
                unknownKeys: "strip"
            });
        }
        passthrough() {
            return new ni({
                ...this._def,
                unknownKeys: "passthrough"
            });
        }
        extend(e) {
            return new ni({
                ...this._def,
                shape: ()=>({
                        ...this._def.shape(),
                        ...e
                    })
            });
        }
        merge(e) {
            return new ni({
                unknownKeys: e._def.unknownKeys,
                catchall: e._def.catchall,
                shape: ()=>({
                        ...this._def.shape(),
                        ...e._def.shape()
                    }),
                typeName: cn.ZodObject
            });
        }
        setKey(e, n) {
            return this.augment({
                [e]: n
            });
        }
        catchall(e) {
            return new ni({
                ...this._def,
                catchall: e
            });
        }
        pick(e) {
            const n = {};
            return Jn.objectKeys(e).forEach((r)=>{
                e[r] && this.shape[r] && (n[r] = this.shape[r]);
            }), new ni({
                ...this._def,
                shape: ()=>n
            });
        }
        omit(e) {
            const n = {};
            return Jn.objectKeys(this.shape).forEach((r)=>{
                e[r] || (n[r] = this.shape[r]);
            }), new ni({
                ...this._def,
                shape: ()=>n
            });
        }
        deepPartial() {
            return Zg(this);
        }
        partial(e) {
            const n = {};
            return Jn.objectKeys(this.shape).forEach((r)=>{
                const i = this.shape[r];
                e && !e[r] ? n[r] = i : n[r] = i.optional();
            }), new ni({
                ...this._def,
                shape: ()=>n
            });
        }
        required(e) {
            const n = {};
            return Jn.objectKeys(this.shape).forEach((r)=>{
                if (e && !e[r]) n[r] = this.shape[r];
                else {
                    let s = this.shape[r];
                    for(; s instanceof jc;)s = s._def.innerType;
                    n[r] = s;
                }
            }), new ni({
                ...this._def,
                shape: ()=>n
            });
        }
        keyof() {
            return VW(Jn.objectKeys(this.shape));
        }
    }
    ni.create = (t, e)=>new ni({
            shape: ()=>t,
            unknownKeys: "strip",
            catchall: dd.create(),
            typeName: cn.ZodObject,
            ...An(e)
        });
    ni.strictCreate = (t, e)=>new ni({
            shape: ()=>t,
            unknownKeys: "strict",
            catchall: dd.create(),
            typeName: cn.ZodObject,
            ...An(e)
        });
    ni.lazycreate = (t, e)=>new ni({
            shape: t,
            unknownKeys: "strip",
            catchall: dd.create(),
            typeName: cn.ZodObject,
            ...An(e)
        });
    class K0 extends Bn {
        _parse(e) {
            const { ctx: n } = this._processInputParams(e), r = this._def.options;
            function i(s) {
                for (const a of s)if (a.result.status === "valid") return a.result;
                for (const a of s)if (a.result.status === "dirty") return n.common.issues.push(...a.ctx.common.issues), a.result;
                const o = s.map((a)=>new Pa(a.ctx.common.issues));
                return Tt(n, {
                    code: gt.invalid_union,
                    unionErrors: o
                }), un;
            }
            if (n.common.async) return Promise.all(r.map(async (s)=>{
                const o = {
                    ...n,
                    common: {
                        ...n.common,
                        issues: []
                    },
                    parent: null
                };
                return {
                    result: await s._parseAsync({
                        data: n.data,
                        path: n.path,
                        parent: o
                    }),
                    ctx: o
                };
            })).then(i);
            {
                let s;
                const o = [];
                for (const l of r){
                    const c = {
                        ...n,
                        common: {
                            ...n.common,
                            issues: []
                        },
                        parent: null
                    }, u = l._parseSync({
                        data: n.data,
                        path: n.path,
                        parent: c
                    });
                    if (u.status === "valid") return u;
                    u.status === "dirty" && !s && (s = {
                        result: u,
                        ctx: c
                    }), c.common.issues.length && o.push(c.common.issues);
                }
                if (s) return n.common.issues.push(...s.ctx.common.issues), s.result;
                const a = o.map((l)=>new Pa(l));
                return Tt(n, {
                    code: gt.invalid_union,
                    unionErrors: a
                }), un;
            }
        }
        get options() {
            return this._def.options;
        }
    }
    K0.create = (t, e)=>new K0({
            options: t,
            typeName: cn.ZodUnion,
            ...An(e)
        });
    const $u = (t)=>t instanceof J0 ? $u(t.schema) : t instanceof rc ? $u(t.innerType()) : t instanceof Q0 ? [
            t.value
        ] : t instanceof Kf ? t.options : t instanceof eb ? Jn.objectValues(t.enum) : t instanceof tb ? $u(t._def.innerType) : t instanceof G0 ? [
            void 0
        ] : t instanceof X0 ? [
            null
        ] : t instanceof jc ? [
            void 0,
            ...$u(t.unwrap())
        ] : t instanceof Yf ? [
            null,
            ...$u(t.unwrap())
        ] : t instanceof oO || t instanceof rb ? $u(t.unwrap()) : t instanceof nb ? $u(t._def.innerType) : [];
    class sT extends Bn {
        _parse(e) {
            const { ctx: n } = this._processInputParams(e);
            if (n.parsedType !== Dt.object) return Tt(n, {
                code: gt.invalid_type,
                expected: Dt.object,
                received: n.parsedType
            }), un;
            const r = this.discriminator, i = n.data[r], s = this.optionsMap.get(i);
            return s ? n.common.async ? s._parseAsync({
                data: n.data,
                path: n.path,
                parent: n
            }) : s._parseSync({
                data: n.data,
                path: n.path,
                parent: n
            }) : (Tt(n, {
                code: gt.invalid_union_discriminator,
                options: Array.from(this.optionsMap.keys()),
                path: [
                    r
                ]
            }), un);
        }
        get discriminator() {
            return this._def.discriminator;
        }
        get options() {
            return this._def.options;
        }
        get optionsMap() {
            return this._def.optionsMap;
        }
        static create(e, n, r) {
            const i = new Map;
            for (const s of n){
                const o = $u(s.shape[e]);
                if (!o.length) throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);
                for (const a of o){
                    if (i.has(a)) throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(a)}`);
                    i.set(a, s);
                }
            }
            return new sT({
                typeName: cn.ZodDiscriminatedUnion,
                discriminator: e,
                options: n,
                optionsMap: i,
                ...An(r)
            });
        }
    }
    function SP(t, e) {
        const n = Xu(t), r = Xu(e);
        if (t === e) return {
            valid: !0,
            data: t
        };
        if (n === Dt.object && r === Dt.object) {
            const i = Jn.objectKeys(e), s = Jn.objectKeys(t).filter((a)=>i.indexOf(a) !== -1), o = {
                ...t,
                ...e
            };
            for (const a of s){
                const l = SP(t[a], e[a]);
                if (!l.valid) return {
                    valid: !1
                };
                o[a] = l.data;
            }
            return {
                valid: !0,
                data: o
            };
        } else if (n === Dt.array && r === Dt.array) {
            if (t.length !== e.length) return {
                valid: !1
            };
            const i = [];
            for(let s = 0; s < t.length; s++){
                const o = t[s], a = e[s], l = SP(o, a);
                if (!l.valid) return {
                    valid: !1
                };
                i.push(l.data);
            }
            return {
                valid: !0,
                data: i
            };
        } else return n === Dt.date && r === Dt.date && +t == +e ? {
            valid: !0,
            data: t
        } : {
            valid: !1
        };
    }
    class Y0 extends Bn {
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e), i = (s, o)=>{
                if (wP(s) || wP(o)) return un;
                const a = SP(s.value, o.value);
                return a.valid ? ((_P(s) || _P(o)) && n.dirty(), {
                    status: n.value,
                    value: a.data
                }) : (Tt(r, {
                    code: gt.invalid_intersection_types
                }), un);
            };
            return r.common.async ? Promise.all([
                this._def.left._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                }),
                this._def.right._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                })
            ]).then(([s, o])=>i(s, o)) : i(this._def.left._parseSync({
                data: r.data,
                path: r.path,
                parent: r
            }), this._def.right._parseSync({
                data: r.data,
                path: r.path,
                parent: r
            }));
        }
    }
    Y0.create = (t, e, n)=>new Y0({
            left: t,
            right: e,
            typeName: cn.ZodIntersection,
            ...An(n)
        });
    class Xc extends Bn {
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e);
            if (r.parsedType !== Dt.array) return Tt(r, {
                code: gt.invalid_type,
                expected: Dt.array,
                received: r.parsedType
            }), un;
            if (r.data.length < this._def.items.length) return Tt(r, {
                code: gt.too_small,
                minimum: this._def.items.length,
                inclusive: !0,
                exact: !1,
                type: "array"
            }), un;
            !this._def.rest && r.data.length > this._def.items.length && (Tt(r, {
                code: gt.too_big,
                maximum: this._def.items.length,
                inclusive: !0,
                exact: !1,
                type: "array"
            }), n.dirty());
            const s = [
                ...r.data
            ].map((o, a)=>{
                const l = this._def.items[a] || this._def.rest;
                return l ? l._parse(new Gc(r, o, r.path, a)) : null;
            }).filter((o)=>!!o);
            return r.common.async ? Promise.all(s).then((o)=>Ys.mergeArray(n, o)) : Ys.mergeArray(n, s);
        }
        get items() {
            return this._def.items;
        }
        rest(e) {
            return new Xc({
                ...this._def,
                rest: e
            });
        }
    }
    Xc.create = (t, e)=>{
        if (!Array.isArray(t)) throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
        return new Xc({
            items: t,
            typeName: cn.ZodTuple,
            rest: null,
            ...An(e)
        });
    };
    class Z0 extends Bn {
        get keySchema() {
            return this._def.keyType;
        }
        get valueSchema() {
            return this._def.valueType;
        }
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e);
            if (r.parsedType !== Dt.object) return Tt(r, {
                code: gt.invalid_type,
                expected: Dt.object,
                received: r.parsedType
            }), un;
            const i = [], s = this._def.keyType, o = this._def.valueType;
            for(const a in r.data)i.push({
                key: s._parse(new Gc(r, a, r.path, a)),
                value: o._parse(new Gc(r, r.data[a], r.path, a)),
                alwaysSet: a in r.data
            });
            return r.common.async ? Ys.mergeObjectAsync(n, i) : Ys.mergeObjectSync(n, i);
        }
        get element() {
            return this._def.valueType;
        }
        static create(e, n, r) {
            return n instanceof Bn ? new Z0({
                keyType: e,
                valueType: n,
                typeName: cn.ZodRecord,
                ...An(r)
            }) : new Z0({
                keyType: Zl.create(),
                valueType: e,
                typeName: cn.ZodRecord,
                ...An(n)
            });
        }
    }
    class pE extends Bn {
        get keySchema() {
            return this._def.keyType;
        }
        get valueSchema() {
            return this._def.valueType;
        }
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e);
            if (r.parsedType !== Dt.map) return Tt(r, {
                code: gt.invalid_type,
                expected: Dt.map,
                received: r.parsedType
            }), un;
            const i = this._def.keyType, s = this._def.valueType, o = [
                ...r.data.entries()
            ].map(([a, l], c)=>({
                    key: i._parse(new Gc(r, a, r.path, [
                        c,
                        "key"
                    ])),
                    value: s._parse(new Gc(r, l, r.path, [
                        c,
                        "value"
                    ]))
                }));
            if (r.common.async) {
                const a = new Map;
                return Promise.resolve().then(async ()=>{
                    for (const l of o){
                        const c = await l.key, u = await l.value;
                        if (c.status === "aborted" || u.status === "aborted") return un;
                        (c.status === "dirty" || u.status === "dirty") && n.dirty(), a.set(c.value, u.value);
                    }
                    return {
                        status: n.value,
                        value: a
                    };
                });
            } else {
                const a = new Map;
                for (const l of o){
                    const c = l.key, u = l.value;
                    if (c.status === "aborted" || u.status === "aborted") return un;
                    (c.status === "dirty" || u.status === "dirty") && n.dirty(), a.set(c.value, u.value);
                }
                return {
                    status: n.value,
                    value: a
                };
            }
        }
    }
    pE.create = (t, e, n)=>new pE({
            valueType: e,
            keyType: t,
            typeName: cn.ZodMap,
            ...An(n)
        });
    class Qp extends Bn {
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e);
            if (r.parsedType !== Dt.set) return Tt(r, {
                code: gt.invalid_type,
                expected: Dt.set,
                received: r.parsedType
            }), un;
            const i = this._def;
            i.minSize !== null && r.data.size < i.minSize.value && (Tt(r, {
                code: gt.too_small,
                minimum: i.minSize.value,
                type: "set",
                inclusive: !0,
                exact: !1,
                message: i.minSize.message
            }), n.dirty()), i.maxSize !== null && r.data.size > i.maxSize.value && (Tt(r, {
                code: gt.too_big,
                maximum: i.maxSize.value,
                type: "set",
                inclusive: !0,
                exact: !1,
                message: i.maxSize.message
            }), n.dirty());
            const s = this._def.valueType;
            function o(l) {
                const c = new Set;
                for (const u of l){
                    if (u.status === "aborted") return un;
                    u.status === "dirty" && n.dirty(), c.add(u.value);
                }
                return {
                    status: n.value,
                    value: c
                };
            }
            const a = [
                ...r.data.values()
            ].map((l, c)=>s._parse(new Gc(r, l, r.path, c)));
            return r.common.async ? Promise.all(a).then((l)=>o(l)) : o(a);
        }
        min(e, n) {
            return new Qp({
                ...this._def,
                minSize: {
                    value: e,
                    message: Yt.toString(n)
                }
            });
        }
        max(e, n) {
            return new Qp({
                ...this._def,
                maxSize: {
                    value: e,
                    message: Yt.toString(n)
                }
            });
        }
        size(e, n) {
            return this.min(e, n).max(e, n);
        }
        nonempty(e) {
            return this.min(1, e);
        }
    }
    Qp.create = (t, e)=>new Qp({
            valueType: t,
            minSize: null,
            maxSize: null,
            typeName: cn.ZodSet,
            ...An(e)
        });
    class Iy extends Bn {
        constructor(){
            super(...arguments), this.validate = this.implement;
        }
        _parse(e) {
            const { ctx: n } = this._processInputParams(e);
            if (n.parsedType !== Dt.function) return Tt(n, {
                code: gt.invalid_type,
                expected: Dt.function,
                received: n.parsedType
            }), un;
            function r(a, l) {
                return uE({
                    data: a,
                    path: n.path,
                    errorMaps: [
                        n.common.contextualErrorMap,
                        n.schemaErrorMap,
                        cE(),
                        jy
                    ].filter((c)=>!!c),
                    issueData: {
                        code: gt.invalid_arguments,
                        argumentsError: l
                    }
                });
            }
            function i(a, l) {
                return uE({
                    data: a,
                    path: n.path,
                    errorMaps: [
                        n.common.contextualErrorMap,
                        n.schemaErrorMap,
                        cE(),
                        jy
                    ].filter((c)=>!!c),
                    issueData: {
                        code: gt.invalid_return_type,
                        returnTypeError: l
                    }
                });
            }
            const s = {
                errorMap: n.common.contextualErrorMap
            }, o = n.data;
            if (this._def.returns instanceof Uy) {
                const a = this;
                return Io(async function(...l) {
                    const c = new Pa([]), u = await a._def.args.parseAsync(l, s).catch((g)=>{
                        throw c.addIssue(r(l, g)), c;
                    }), f = await Reflect.apply(o, this, u);
                    return await a._def.returns._def.type.parseAsync(f, s).catch((g)=>{
                        throw c.addIssue(i(f, g)), c;
                    });
                });
            } else {
                const a = this;
                return Io(function(...l) {
                    const c = a._def.args.safeParse(l, s);
                    if (!c.success) throw new Pa([
                        r(l, c.error)
                    ]);
                    const u = Reflect.apply(o, this, c.data), f = a._def.returns.safeParse(u, s);
                    if (!f.success) throw new Pa([
                        i(u, f.error)
                    ]);
                    return f.data;
                });
            }
        }
        parameters() {
            return this._def.args;
        }
        returnType() {
            return this._def.returns;
        }
        args(...e) {
            return new Iy({
                ...this._def,
                args: Xc.create(e).rest(jp.create())
            });
        }
        returns(e) {
            return new Iy({
                ...this._def,
                returns: e
            });
        }
        implement(e) {
            return this.parse(e);
        }
        strictImplement(e) {
            return this.parse(e);
        }
        static create(e, n, r) {
            return new Iy({
                args: e || Xc.create([]).rest(jp.create()),
                returns: n || jp.create(),
                typeName: cn.ZodFunction,
                ...An(r)
            });
        }
    }
    class J0 extends Bn {
        get schema() {
            return this._def.getter();
        }
        _parse(e) {
            const { ctx: n } = this._processInputParams(e);
            return this._def.getter()._parse({
                data: n.data,
                path: n.path,
                parent: n
            });
        }
    }
    J0.create = (t, e)=>new J0({
            getter: t,
            typeName: cn.ZodLazy,
            ...An(e)
        });
    class Q0 extends Bn {
        _parse(e) {
            if (e.data !== this._def.value) {
                const n = this._getOrReturnCtx(e);
                return Tt(n, {
                    received: n.data,
                    code: gt.invalid_literal,
                    expected: this._def.value
                }), un;
            }
            return {
                status: "valid",
                value: e.data
            };
        }
        get value() {
            return this._def.value;
        }
    }
    Q0.create = (t, e)=>new Q0({
            value: t,
            typeName: cn.ZodLiteral,
            ...An(e)
        });
    function VW(t, e) {
        return new Kf({
            values: t,
            typeName: cn.ZodEnum,
            ...An(e)
        });
    }
    class Kf extends Bn {
        constructor(){
            super(...arguments), Wx.set(this, void 0);
        }
        _parse(e) {
            if (typeof e.data != "string") {
                const n = this._getOrReturnCtx(e), r = this._def.values;
                return Tt(n, {
                    expected: Jn.joinValues(r),
                    received: n.parsedType,
                    code: gt.invalid_type
                }), un;
            }
            if (dE(this, Wx) || jW(this, Wx, new Set(this._def.values)), !dE(this, Wx).has(e.data)) {
                const n = this._getOrReturnCtx(e), r = this._def.values;
                return Tt(n, {
                    received: n.data,
                    code: gt.invalid_enum_value,
                    options: r
                }), un;
            }
            return Io(e.data);
        }
        get options() {
            return this._def.values;
        }
        get enum() {
            const e = {};
            for (const n of this._def.values)e[n] = n;
            return e;
        }
        get Values() {
            const e = {};
            for (const n of this._def.values)e[n] = n;
            return e;
        }
        get Enum() {
            const e = {};
            for (const n of this._def.values)e[n] = n;
            return e;
        }
        extract(e, n = this._def) {
            return Kf.create(e, {
                ...this._def,
                ...n
            });
        }
        exclude(e, n = this._def) {
            return Kf.create(this.options.filter((r)=>!e.includes(r)), {
                ...this._def,
                ...n
            });
        }
    }
    Wx = new WeakMap;
    Kf.create = VW;
    class eb extends Bn {
        constructor(){
            super(...arguments), qx.set(this, void 0);
        }
        _parse(e) {
            const n = Jn.getValidEnumValues(this._def.values), r = this._getOrReturnCtx(e);
            if (r.parsedType !== Dt.string && r.parsedType !== Dt.number) {
                const i = Jn.objectValues(n);
                return Tt(r, {
                    expected: Jn.joinValues(i),
                    received: r.parsedType,
                    code: gt.invalid_type
                }), un;
            }
            if (dE(this, qx) || jW(this, qx, new Set(Jn.getValidEnumValues(this._def.values))), !dE(this, qx).has(e.data)) {
                const i = Jn.objectValues(n);
                return Tt(r, {
                    received: r.data,
                    code: gt.invalid_enum_value,
                    options: i
                }), un;
            }
            return Io(e.data);
        }
        get enum() {
            return this._def.values;
        }
    }
    qx = new WeakMap;
    eb.create = (t, e)=>new eb({
            values: t,
            typeName: cn.ZodNativeEnum,
            ...An(e)
        });
    class Uy extends Bn {
        unwrap() {
            return this._def.type;
        }
        _parse(e) {
            const { ctx: n } = this._processInputParams(e);
            if (n.parsedType !== Dt.promise && n.common.async === !1) return Tt(n, {
                code: gt.invalid_type,
                expected: Dt.promise,
                received: n.parsedType
            }), un;
            const r = n.parsedType === Dt.promise ? n.data : Promise.resolve(n.data);
            return Io(r.then((i)=>this._def.type.parseAsync(i, {
                    path: n.path,
                    errorMap: n.common.contextualErrorMap
                })));
        }
    }
    Uy.create = (t, e)=>new Uy({
            type: t,
            typeName: cn.ZodPromise,
            ...An(e)
        });
    class rc extends Bn {
        innerType() {
            return this._def.schema;
        }
        sourceType() {
            return this._def.schema._def.typeName === cn.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
        }
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e), i = this._def.effect || null, s = {
                addIssue: (o)=>{
                    Tt(r, o), o.fatal ? n.abort() : n.dirty();
                },
                get path () {
                    return r.path;
                }
            };
            if (s.addIssue = s.addIssue.bind(s), i.type === "preprocess") {
                const o = i.transform(r.data, s);
                if (r.common.async) return Promise.resolve(o).then(async (a)=>{
                    if (n.value === "aborted") return un;
                    const l = await this._def.schema._parseAsync({
                        data: a,
                        path: r.path,
                        parent: r
                    });
                    return l.status === "aborted" ? un : l.status === "dirty" || n.value === "dirty" ? iy(l.value) : l;
                });
                {
                    if (n.value === "aborted") return un;
                    const a = this._def.schema._parseSync({
                        data: o,
                        path: r.path,
                        parent: r
                    });
                    return a.status === "aborted" ? un : a.status === "dirty" || n.value === "dirty" ? iy(a.value) : a;
                }
            }
            if (i.type === "refinement") {
                const o = (a)=>{
                    const l = i.refinement(a, s);
                    if (r.common.async) return Promise.resolve(l);
                    if (l instanceof Promise) throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
                    return a;
                };
                if (r.common.async === !1) {
                    const a = this._def.schema._parseSync({
                        data: r.data,
                        path: r.path,
                        parent: r
                    });
                    return a.status === "aborted" ? un : (a.status === "dirty" && n.dirty(), o(a.value), {
                        status: n.value,
                        value: a.value
                    });
                } else return this._def.schema._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                }).then((a)=>a.status === "aborted" ? un : (a.status === "dirty" && n.dirty(), o(a.value).then(()=>({
                            status: n.value,
                            value: a.value
                        }))));
            }
            if (i.type === "transform") if (r.common.async === !1) {
                const o = this._def.schema._parseSync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                if (!Zp(o)) return o;
                const a = i.transform(o.value, s);
                if (a instanceof Promise) throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
                return {
                    status: n.value,
                    value: a
                };
            } else return this._def.schema._parseAsync({
                data: r.data,
                path: r.path,
                parent: r
            }).then((o)=>Zp(o) ? Promise.resolve(i.transform(o.value, s)).then((a)=>({
                        status: n.value,
                        value: a
                    })) : o);
            Jn.assertNever(i);
        }
    }
    rc.create = (t, e, n)=>new rc({
            schema: t,
            typeName: cn.ZodEffects,
            effect: e,
            ...An(n)
        });
    rc.createWithPreprocess = (t, e, n)=>new rc({
            schema: e,
            effect: {
                type: "preprocess",
                transform: t
            },
            typeName: cn.ZodEffects,
            ...An(n)
        });
    class jc extends Bn {
        _parse(e) {
            return this._getType(e) === Dt.undefined ? Io(void 0) : this._def.innerType._parse(e);
        }
        unwrap() {
            return this._def.innerType;
        }
    }
    jc.create = (t, e)=>new jc({
            innerType: t,
            typeName: cn.ZodOptional,
            ...An(e)
        });
    class Yf extends Bn {
        _parse(e) {
            return this._getType(e) === Dt.null ? Io(null) : this._def.innerType._parse(e);
        }
        unwrap() {
            return this._def.innerType;
        }
    }
    Yf.create = (t, e)=>new Yf({
            innerType: t,
            typeName: cn.ZodNullable,
            ...An(e)
        });
    class tb extends Bn {
        _parse(e) {
            const { ctx: n } = this._processInputParams(e);
            let r = n.data;
            return n.parsedType === Dt.undefined && (r = this._def.defaultValue()), this._def.innerType._parse({
                data: r,
                path: n.path,
                parent: n
            });
        }
        removeDefault() {
            return this._def.innerType;
        }
    }
    tb.create = (t, e)=>new tb({
            innerType: t,
            typeName: cn.ZodDefault,
            defaultValue: typeof e.default == "function" ? e.default : ()=>e.default,
            ...An(e)
        });
    class nb extends Bn {
        _parse(e) {
            const { ctx: n } = this._processInputParams(e), r = {
                ...n,
                common: {
                    ...n.common,
                    issues: []
                }
            }, i = this._def.innerType._parse({
                data: r.data,
                path: r.path,
                parent: {
                    ...r
                }
            });
            return H0(i) ? i.then((s)=>({
                    status: "valid",
                    value: s.status === "valid" ? s.value : this._def.catchValue({
                        get error () {
                            return new Pa(r.common.issues);
                        },
                        input: r.data
                    })
                })) : {
                status: "valid",
                value: i.status === "valid" ? i.value : this._def.catchValue({
                    get error () {
                        return new Pa(r.common.issues);
                    },
                    input: r.data
                })
            };
        }
        removeCatch() {
            return this._def.innerType;
        }
    }
    nb.create = (t, e)=>new nb({
            innerType: t,
            typeName: cn.ZodCatch,
            catchValue: typeof e.catch == "function" ? e.catch : ()=>e.catch,
            ...An(e)
        });
    class mE extends Bn {
        _parse(e) {
            if (this._getType(e) !== Dt.nan) {
                const r = this._getOrReturnCtx(e);
                return Tt(r, {
                    code: gt.invalid_type,
                    expected: Dt.nan,
                    received: r.parsedType
                }), un;
            }
            return {
                status: "valid",
                value: e.data
            };
        }
    }
    mE.create = (t)=>new mE({
            typeName: cn.ZodNaN,
            ...An(t)
        });
    const wee = Symbol("zod_brand");
    class oO extends Bn {
        _parse(e) {
            const { ctx: n } = this._processInputParams(e), r = n.data;
            return this._def.type._parse({
                data: r,
                path: n.path,
                parent: n
            });
        }
        unwrap() {
            return this._def.type;
        }
    }
    class Xb extends Bn {
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e);
            if (r.common.async) return (async ()=>{
                const s = await this._def.in._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                return s.status === "aborted" ? un : s.status === "dirty" ? (n.dirty(), iy(s.value)) : this._def.out._parseAsync({
                    data: s.value,
                    path: r.path,
                    parent: r
                });
            })();
            {
                const i = this._def.in._parseSync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                return i.status === "aborted" ? un : i.status === "dirty" ? (n.dirty(), {
                    status: "dirty",
                    value: i.value
                }) : this._def.out._parseSync({
                    data: i.value,
                    path: r.path,
                    parent: r
                });
            }
        }
        static create(e, n) {
            return new Xb({
                in: e,
                out: n,
                typeName: cn.ZodPipeline
            });
        }
    }
    class rb extends Bn {
        _parse(e) {
            const n = this._def.innerType._parse(e), r = (i)=>(Zp(i) && (i.value = Object.freeze(i.value)), i);
            return H0(n) ? n.then((i)=>r(i)) : r(n);
        }
        unwrap() {
            return this._def.innerType;
        }
    }
    rb.create = (t, e)=>new rb({
            innerType: t,
            typeName: cn.ZodReadonly,
            ...An(e)
        });
    function LF(t, e) {
        const n = typeof t == "function" ? t(e) : typeof t == "string" ? {
            message: t
        } : t;
        return typeof n == "string" ? {
            message: n
        } : n;
    }
    function WW(t, e = {}, n) {
        return t ? By.create().superRefine((r, i)=>{
            var s, o;
            const a = t(r);
            if (a instanceof Promise) return a.then((l)=>{
                var c, u;
                if (!l) {
                    const f = LF(e, r), p = (u = (c = f.fatal) !== null && c !== void 0 ? c : n) !== null && u !== void 0 ? u : !0;
                    i.addIssue({
                        code: "custom",
                        ...f,
                        fatal: p
                    });
                }
            });
            if (!a) {
                const l = LF(e, r), c = (o = (s = l.fatal) !== null && s !== void 0 ? s : n) !== null && o !== void 0 ? o : !0;
                i.addIssue({
                    code: "custom",
                    ...l,
                    fatal: c
                });
            }
        }) : By.create();
    }
    const _ee = {
        object: ni.lazycreate
    };
    var cn;
    (function(t) {
        t.ZodString = "ZodString", t.ZodNumber = "ZodNumber", t.ZodNaN = "ZodNaN", t.ZodBigInt = "ZodBigInt", t.ZodBoolean = "ZodBoolean", t.ZodDate = "ZodDate", t.ZodSymbol = "ZodSymbol", t.ZodUndefined = "ZodUndefined", t.ZodNull = "ZodNull", t.ZodAny = "ZodAny", t.ZodUnknown = "ZodUnknown", t.ZodNever = "ZodNever", t.ZodVoid = "ZodVoid", t.ZodArray = "ZodArray", t.ZodObject = "ZodObject", t.ZodUnion = "ZodUnion", t.ZodDiscriminatedUnion = "ZodDiscriminatedUnion", t.ZodIntersection = "ZodIntersection", t.ZodTuple = "ZodTuple", t.ZodRecord = "ZodRecord", t.ZodMap = "ZodMap", t.ZodSet = "ZodSet", t.ZodFunction = "ZodFunction", t.ZodLazy = "ZodLazy", t.ZodLiteral = "ZodLiteral", t.ZodEnum = "ZodEnum", t.ZodEffects = "ZodEffects", t.ZodNativeEnum = "ZodNativeEnum", t.ZodOptional = "ZodOptional", t.ZodNullable = "ZodNullable", t.ZodDefault = "ZodDefault", t.ZodCatch = "ZodCatch", t.ZodPromise = "ZodPromise", t.ZodBranded = "ZodBranded", t.ZodPipeline = "ZodPipeline", t.ZodReadonly = "ZodReadonly";
    })(cn || (cn = {}));
    const See = (t, e = {
        message: `Input not instance of ${t.name}`
    })=>WW((n)=>n instanceof t, e), qW = Zl.create, HW = Gf.create, Eee = mE.create, Mee = Xf.create, $W = $0.create, Tee = Jp.create, Cee = fE.create, Iee = G0.create, Ree = X0.create, Aee = By.create, Nee = jp.create, Pee = dd.create, kee = hE.create, Oee = ec.create, Lee = ni.create, Dee = ni.strictCreate, Fee = K0.create, jee = sT.create, Bee = Y0.create, Uee = Xc.create, zee = Z0.create, Vee = pE.create, Wee = Qp.create, qee = Iy.create, Hee = J0.create, $ee = Q0.create, Gee = Kf.create, Xee = eb.create, Kee = Uy.create, DF = rc.create, Yee = jc.create, Zee = Yf.create, Jee = rc.createWithPreprocess, Qee = Xb.create, ete = ()=>qW().optional(), tte = ()=>HW().optional(), nte = ()=>$W().optional(), rte = {
        string: (t)=>Zl.create({
                ...t,
                coerce: !0
            }),
        number: (t)=>Gf.create({
                ...t,
                coerce: !0
            }),
        boolean: (t)=>$0.create({
                ...t,
                coerce: !0
            }),
        bigint: (t)=>Xf.create({
                ...t,
                coerce: !0
            }),
        date: (t)=>Jp.create({
                ...t,
                coerce: !0
            })
    }, ite = un;
    var G = Object.freeze({
        __proto__: null,
        defaultErrorMap: jy,
        setErrorMap: JQ,
        getErrorMap: cE,
        makeIssue: uE,
        EMPTY_PATH: QQ,
        addIssueToContext: Tt,
        ParseStatus: Ys,
        INVALID: un,
        DIRTY: iy,
        OK: Io,
        isAborted: wP,
        isDirty: _P,
        isValid: Zp,
        isAsync: H0,
        get util () {
            return Jn;
        },
        get objectUtil () {
            return bP;
        },
        ZodParsedType: Dt,
        getParsedType: Xu,
        ZodType: Bn,
        datetimeRegex: zW,
        ZodString: Zl,
        ZodNumber: Gf,
        ZodBigInt: Xf,
        ZodBoolean: $0,
        ZodDate: Jp,
        ZodSymbol: fE,
        ZodUndefined: G0,
        ZodNull: X0,
        ZodAny: By,
        ZodUnknown: jp,
        ZodNever: dd,
        ZodVoid: hE,
        ZodArray: ec,
        ZodObject: ni,
        ZodUnion: K0,
        ZodDiscriminatedUnion: sT,
        ZodIntersection: Y0,
        ZodTuple: Xc,
        ZodRecord: Z0,
        ZodMap: pE,
        ZodSet: Qp,
        ZodFunction: Iy,
        ZodLazy: J0,
        ZodLiteral: Q0,
        ZodEnum: Kf,
        ZodNativeEnum: eb,
        ZodPromise: Uy,
        ZodEffects: rc,
        ZodTransformer: rc,
        ZodOptional: jc,
        ZodNullable: Yf,
        ZodDefault: tb,
        ZodCatch: nb,
        ZodNaN: mE,
        BRAND: wee,
        ZodBranded: oO,
        ZodPipeline: Xb,
        ZodReadonly: rb,
        custom: WW,
        Schema: Bn,
        ZodSchema: Bn,
        late: _ee,
        get ZodFirstPartyTypeKind () {
            return cn;
        },
        coerce: rte,
        any: Aee,
        array: Oee,
        bigint: Mee,
        boolean: $W,
        date: Tee,
        discriminatedUnion: jee,
        effect: DF,
        enum: Gee,
        function: qee,
        instanceof: See,
        intersection: Bee,
        lazy: Hee,
        literal: $ee,
        map: Vee,
        nan: Eee,
        nativeEnum: Xee,
        never: Pee,
        null: Ree,
        nullable: Zee,
        number: HW,
        object: Lee,
        oboolean: nte,
        onumber: tte,
        optional: Yee,
        ostring: ete,
        pipeline: Qee,
        preprocess: Jee,
        promise: Kee,
        record: zee,
        set: Wee,
        strictObject: Dee,
        string: qW,
        symbol: Cee,
        transformer: DF,
        tuple: Uee,
        undefined: Iee,
        union: Fee,
        unknown: Nee,
        void: kee,
        NEVER: ite,
        ZodIssueCode: gt,
        quotelessJson: ZQ,
        ZodError: Pa
    });
    const ste = G.object({
        page: G.number().gte(0, "Page must be greater than zero"),
        size: G.number().gte(1, "Page size must be greater than one to get any data")
    }), Js = G.object({
        id: G.string().min(1)
    }), aO = G.object({
        message: G.string()
    }), Qs = G.object({
        id: G.string().optional(),
        idIn: G.array(G.string()).optional(),
        fulltext: G.string().optional()
    }), ote = G.enum([
        "asc",
        "desc"
    ]), hl = ()=>G.union([
            G.boolean(),
            G.number().int().refine((t)=>t === 0 || t === 1).transform((t)=>typeof t == "boolean" ? t : t === 1)
        ]), fd = ()=>G.union([
            G.number(),
            G.string().transform((t)=>parseFloat(t)).refine((t)=>!isNaN(t))
        ]), Bc = ()=>G.union([
            G.number().int(),
            G.string().transform((t)=>parseInt(t, 10)).refine((t)=>!isNaN(t))
        ]), Cs = (t)=>G.string().transform((e)=>JSON.parse(e)).refine((e)=>Array.isArray(e)).pipe(G.array(t)), FF = (t)=>G.string().transform((e)=>JSON.parse(e)).pipe(t), EP = new Proxy(()=>EP, {
        get: ()=>EP
    }), eo = ({ entity: t, shape: e, filter: n, sort: r })=>{
        const i = EP();
        return {
            entity: t,
            "~entity": i,
            "~entity-array": [],
            "~entity-partial-exclude-id": i,
            "~entity-input": i,
            "~entity-input-array": i,
            shape: e,
            "~shape": i,
            "~shape-partial": i,
            "~shape-input": i,
            "~shape-input-partial": i,
            filter: n,
            "~filter": i,
            sort: G.array(G.object({
                name: G.enum(r),
                sort: ote
            })),
            "~sort": i,
            "~sort-keyof": i
        };
    };
    var iR, jF;
    function ate() {
        if (jF) return iR;
        jF = 1;
        class t {
            constructor(n){
                this.options = n;
            }
            clean(n) {
                return n && (Array.isArray(n) ? this._cleanArray(n) : this._isObject(n) ? this.options.cleanInPlace ? this._cleanObjectInPlace(n) : this._cleanObject(n) : n);
            }
            _cleanArray(n) {
                return this.options.cleanInPlace ? this._getFilteredArrayInPlace(n) : this._getFilteredArray(n);
            }
            _cleanObjectInPlace(n) {
                return Object.keys(n).forEach((r)=>{
                    const i = n[r];
                    if (Array.isArray(i)) {
                        const s = this._cleanArray(i);
                        this._shouldReturnArray(s) ? n[r] = s : delete n[r];
                    } else if (this._isObject(i)) {
                        const s = this.clean(i);
                        this._shouldReturnObject(s) ? n[r] = s : delete n[r];
                    } else this._shouldRemoveValue(i) && delete n[r];
                }), n;
            }
            _cleanObject(n) {
                const r = {};
                return Object.keys(n).forEach((i)=>{
                    const s = n[i];
                    if (Array.isArray(s)) {
                        const o = this._cleanArray(s);
                        this._shouldReturnArray(o) && (r[i] = o);
                    } else if (this._isObject(s)) {
                        const o = this.clean(s);
                        this._shouldReturnObject(o) && (r[i] = o);
                    } else this._shouldRemoveValue(s) || (r[i] = s);
                }), r;
            }
            _getFilteredArrayInPlace(n) {
                for(let r = n.length - 1; r >= 0; r--){
                    const i = n[r], s = this.clean(i);
                    this._isObject(s) ? this._shouldReturnObject(s) ? n[r] = s : n.splice(r, 1) : Array.isArray(s) ? this._shouldReturnArray(s) ? n[r] = s : n.splice(r, 1) : this._shouldRemoveValue(s) && n.splice(r, 1);
                }
                return n;
            }
            _getFilteredArray(n) {
                const r = [];
                return n.forEach((i)=>{
                    const s = this.clean(i);
                    this._isObject(s) ? this._shouldReturnObject(s) && r.push(s) : Array.isArray(s) ? this._shouldReturnArray(s) && r.push(s) : this._shouldRemoveValue(s) || r.push(s);
                }), r;
            }
            _isObject(n) {
                return Object.prototype.toString.call(n) === "[object Object]";
            }
            _shouldReturnArray(n) {
                return !this.options.emptyArraysCleaner || n.length !== 0;
            }
            _shouldReturnObject(n) {
                return !this.options.emptyObjectsCleaner || Object.keys(n).length !== 0;
            }
            _shouldRemoveValue(n) {
                return n === null ? this.options.nullCleaner : n === "" ? this.options.emptyStringsCleaner : Number.isNaN(n) ? this.options.nanCleaner : n === void 0;
            }
        }
        return iR = t, iR;
    }
    var sR, BF;
    function lte() {
        if (BF) return sR;
        BF = 1;
        const t = ate(), e = (n)=>{
            const r = n || {};
            return {
                nullCleaner: r.hasOwnProperty("nullCleaner") ? r.nullCleaner : !1,
                emptyArraysCleaner: r.hasOwnProperty("emptyArraysCleaner") ? r.emptyArraysCleaner : !0,
                emptyObjectsCleaner: r.hasOwnProperty("emptyObjectsCleaner") ? r.emptyObjectsCleaner : !0,
                emptyStringsCleaner: r.hasOwnProperty("emptyStringsCleaner") ? r.emptyStringsCleaner : !0,
                nanCleaner: r.hasOwnProperty("nanCleaner") ? r.nanCleaner : !0,
                cleanInPlace: r.hasOwnProperty("cleanInPlace") ? r.cleanInPlace : !1
            };
        };
        return sR = {
            clean: function(n, r) {
                const i = e(r);
                return new t(i).clean(n);
            }
        }, sR;
    }
    var cte = lte();
    const ute = Ao(cte), dte = (t, e)=>t && ute.clean(t, {
            nullCleaner: !1,
            emptyArraysCleaner: !1,
            ...e
        }), af = (t, e)=>Array.from({
            length: e - t + 1
        }, (n, r)=>r + t), fte = ({ page: t, total: e, siblings: n = 1, boundaries: r = 1 })=>{
        const i = Math.max(Math.trunc(e), 0);
        if (n * 2 + 3 + r * 2 >= i) return {
            type: "simple",
            page: t,
            total: e,
            pages: af(1, i),
            start: [],
            end: []
        };
        const o = Math.max(t - n, r), a = Math.min(t + n, i - r), l = o > r + 2, c = a < i - (r + 1);
        return !l && c ? {
            type: "end",
            page: t,
            total: e,
            start: [],
            pages: af(1, n * 2 + r + 2),
            end: af(e - (r - 1), i)
        } : l && !c ? {
            type: "start",
            page: t,
            total: e,
            start: af(1, r),
            pages: af(e - (r + 1 + 2 * n), i),
            end: []
        } : {
            type: "both",
            page: t,
            total: e,
            start: af(1, r),
            pages: af(o, a),
            end: af(i - r + 1, i)
        };
    };
    var bg = {}, Du = {}, Ar = {}, lf = {}, UF;
    function GW() {
        if (UF) return lf;
        UF = 1, Object.defineProperty(lf, "__esModule", {
            value: !0
        }), lf.anumber = t, lf.abytes = n, lf.ahash = r, lf.aexists = i, lf.aoutput = s;
        function t(o) {
            if (!Number.isSafeInteger(o) || o < 0) throw new Error("positive integer expected, got " + o);
        }
        function e(o) {
            return o instanceof Uint8Array || ArrayBuffer.isView(o) && o.constructor.name === "Uint8Array";
        }
        function n(o, ...a) {
            if (!e(o)) throw new Error("Uint8Array expected");
            if (a.length > 0 && !a.includes(o.length)) throw new Error("Uint8Array expected of length " + a + ", got length=" + o.length);
        }
        function r(o) {
            if (typeof o != "function" || typeof o.create != "function") throw new Error("Hash should be wrapped by utils.wrapConstructor");
            t(o.outputLen), t(o.blockLen);
        }
        function i(o, a = !0) {
            if (o.destroyed) throw new Error("Hash instance has been destroyed");
            if (a && o.finished) throw new Error("Hash#digest() has already been called");
        }
        function s(o, a) {
            n(o);
            const l = a.outputLen;
            if (o.length < l) throw new Error("digestInto() expects output buffer of length at least " + l);
        }
        return lf;
    }
    var xn = {}, zF;
    function hte() {
        if (zF) return xn;
        zF = 1, Object.defineProperty(xn, "__esModule", {
            value: !0
        }), xn.add5L = xn.add5H = xn.add4H = xn.add4L = xn.add3H = xn.add3L = xn.rotlBL = xn.rotlBH = xn.rotlSL = xn.rotlSH = xn.rotr32L = xn.rotr32H = xn.rotrBL = xn.rotrBH = xn.rotrSL = xn.rotrSH = xn.shrSL = xn.shrSH = xn.toBig = void 0, xn.fromBig = n, xn.split = r, xn.add = b;
        const t = BigInt(2 ** 32 - 1), e = BigInt(32);
        function n(R, A = !1) {
            return A ? {
                h: Number(R & t),
                l: Number(R >> e & t)
            } : {
                h: Number(R >> e & t) | 0,
                l: Number(R & t) | 0
            };
        }
        function r(R, A = !1) {
            let P = new Uint32Array(R.length), B = new Uint32Array(R.length);
            for(let U = 0; U < R.length; U++){
                const { h: j, l: K } = n(R[U], A);
                [P[U], B[U]] = [
                    j,
                    K
                ];
            }
            return [
                P,
                B
            ];
        }
        const i = (R, A)=>BigInt(R >>> 0) << e | BigInt(A >>> 0);
        xn.toBig = i;
        const s = (R, A, P)=>R >>> P;
        xn.shrSH = s;
        const o = (R, A, P)=>R << 32 - P | A >>> P;
        xn.shrSL = o;
        const a = (R, A, P)=>R >>> P | A << 32 - P;
        xn.rotrSH = a;
        const l = (R, A, P)=>R << 32 - P | A >>> P;
        xn.rotrSL = l;
        const c = (R, A, P)=>R << 64 - P | A >>> P - 32;
        xn.rotrBH = c;
        const u = (R, A, P)=>R >>> P - 32 | A << 64 - P;
        xn.rotrBL = u;
        const f = (R, A)=>A;
        xn.rotr32H = f;
        const p = (R, A)=>R;
        xn.rotr32L = p;
        const g = (R, A, P)=>R << P | A >>> 32 - P;
        xn.rotlSH = g;
        const x = (R, A, P)=>A << P | R >>> 32 - P;
        xn.rotlSL = x;
        const S = (R, A, P)=>A << P - 32 | R >>> 64 - P;
        xn.rotlBH = S;
        const _ = (R, A, P)=>R << P - 32 | A >>> 64 - P;
        xn.rotlBL = _;
        function b(R, A, P, B) {
            const U = (A >>> 0) + (B >>> 0);
            return {
                h: R + P + (U / 2 ** 32 | 0) | 0,
                l: U | 0
            };
        }
        const M = (R, A, P)=>(R >>> 0) + (A >>> 0) + (P >>> 0);
        xn.add3L = M;
        const E = (R, A, P, B)=>A + P + B + (R / 2 ** 32 | 0) | 0;
        xn.add3H = E;
        const T = (R, A, P, B)=>(R >>> 0) + (A >>> 0) + (P >>> 0) + (B >>> 0);
        xn.add4L = T;
        const k = (R, A, P, B, U)=>A + P + B + U + (R / 2 ** 32 | 0) | 0;
        xn.add4H = k;
        const N = (R, A, P, B, U)=>(R >>> 0) + (A >>> 0) + (P >>> 0) + (B >>> 0) + (U >>> 0);
        xn.add5L = N;
        const D = (R, A, P, B, U, j)=>A + P + B + U + j + (R / 2 ** 32 | 0) | 0;
        xn.add5H = D;
        const L = {
            fromBig: n,
            split: r,
            toBig: i,
            shrSH: s,
            shrSL: o,
            rotrSH: a,
            rotrSL: l,
            rotrBH: c,
            rotrBL: u,
            rotr32H: f,
            rotr32L: p,
            rotlSH: g,
            rotlSL: x,
            rotlBH: S,
            rotlBL: _,
            add: b,
            add3L: M,
            add3H: E,
            add4L: T,
            add4H: k,
            add5H: D,
            add5L: N
        };
        return xn.default = L, xn;
    }
    var oR = {}, bx = {}, VF;
    function pte() {
        return VF || (VF = 1, Object.defineProperty(bx, "__esModule", {
            value: !0
        }), bx.crypto = void 0, bx.crypto = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0), bx;
    }
    var WF;
    function mte() {
        return WF || (WF = 1, function(t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Hash = t.nextTick = t.byteSwapIfBE = t.isLE = void 0, t.isBytes = r, t.u8 = i, t.u32 = s, t.createView = o, t.rotr = a, t.rotl = l, t.byteSwap = c, t.byteSwap32 = u, t.bytesToHex = p, t.hexToBytes = S, t.asyncLoop = b, t.utf8ToBytes = M, t.toBytes = E, t.concatBytes = T, t.checkOpts = N, t.wrapConstructor = D, t.wrapConstructorWithOpts = L, t.wrapXOFConstructorWithOpts = R, t.randomBytes = A;
            const e = pte(), n = GW();
            function r(P) {
                return P instanceof Uint8Array || ArrayBuffer.isView(P) && P.constructor.name === "Uint8Array";
            }
            function i(P) {
                return new Uint8Array(P.buffer, P.byteOffset, P.byteLength);
            }
            function s(P) {
                return new Uint32Array(P.buffer, P.byteOffset, Math.floor(P.byteLength / 4));
            }
            function o(P) {
                return new DataView(P.buffer, P.byteOffset, P.byteLength);
            }
            function a(P, B) {
                return P << 32 - B | P >>> B;
            }
            function l(P, B) {
                return P << B | P >>> 32 - B >>> 0;
            }
            t.isLE = new Uint8Array(new Uint32Array([
                287454020
            ]).buffer)[0] === 68;
            function c(P) {
                return P << 24 & 4278190080 | P << 8 & 16711680 | P >>> 8 & 65280 | P >>> 24 & 255;
            }
            t.byteSwapIfBE = t.isLE ? (P)=>P : (P)=>c(P);
            function u(P) {
                for(let B = 0; B < P.length; B++)P[B] = c(P[B]);
            }
            const f = Array.from({
                length: 256
            }, (P, B)=>B.toString(16).padStart(2, "0"));
            function p(P) {
                (0, n.abytes)(P);
                let B = "";
                for(let U = 0; U < P.length; U++)B += f[P[U]];
                return B;
            }
            const g = {
                _0: 48,
                _9: 57,
                A: 65,
                F: 70,
                a: 97,
                f: 102
            };
            function x(P) {
                if (P >= g._0 && P <= g._9) return P - g._0;
                if (P >= g.A && P <= g.F) return P - (g.A - 10);
                if (P >= g.a && P <= g.f) return P - (g.a - 10);
            }
            function S(P) {
                if (typeof P != "string") throw new Error("hex string expected, got " + typeof P);
                const B = P.length, U = B / 2;
                if (B % 2) throw new Error("hex string expected, got unpadded hex of length " + B);
                const j = new Uint8Array(U);
                for(let K = 0, q = 0; K < U; K++, q += 2){
                    const te = x(P.charCodeAt(q)), W = x(P.charCodeAt(q + 1));
                    if (te === void 0 || W === void 0) {
                        const J = P[q] + P[q + 1];
                        throw new Error('hex string expected, got non-hex character "' + J + '" at index ' + q);
                    }
                    j[K] = te * 16 + W;
                }
                return j;
            }
            const _ = async ()=>{};
            t.nextTick = _;
            async function b(P, B, U) {
                let j = Date.now();
                for(let K = 0; K < P; K++){
                    U(K);
                    const q = Date.now() - j;
                    q >= 0 && q < B || (await (0, t.nextTick)(), j += q);
                }
            }
            function M(P) {
                if (typeof P != "string") throw new Error("utf8ToBytes expected string, got " + typeof P);
                return new Uint8Array(new TextEncoder().encode(P));
            }
            function E(P) {
                return typeof P == "string" && (P = M(P)), (0, n.abytes)(P), P;
            }
            function T(...P) {
                let B = 0;
                for(let j = 0; j < P.length; j++){
                    const K = P[j];
                    (0, n.abytes)(K), B += K.length;
                }
                const U = new Uint8Array(B);
                for(let j = 0, K = 0; j < P.length; j++){
                    const q = P[j];
                    U.set(q, K), K += q.length;
                }
                return U;
            }
            class k {
                clone() {
                    return this._cloneInto();
                }
            }
            t.Hash = k;
            function N(P, B) {
                if (B !== void 0 && {}.toString.call(B) !== "[object Object]") throw new Error("Options should be object or undefined");
                return Object.assign(P, B);
            }
            function D(P) {
                const B = (j)=>P().update(E(j)).digest(), U = P();
                return B.outputLen = U.outputLen, B.blockLen = U.blockLen, B.create = ()=>P(), B;
            }
            function L(P) {
                const B = (j, K)=>P(K).update(E(j)).digest(), U = P({});
                return B.outputLen = U.outputLen, B.blockLen = U.blockLen, B.create = (j)=>P(j), B;
            }
            function R(P) {
                const B = (j, K)=>P(K).update(E(j)).digest(), U = P({});
                return B.outputLen = U.outputLen, B.blockLen = U.blockLen, B.create = (j)=>P(j), B;
            }
            function A(P = 32) {
                if (e.crypto && typeof e.crypto.getRandomValues == "function") return e.crypto.getRandomValues(new Uint8Array(P));
                if (e.crypto && typeof e.crypto.randomBytes == "function") return e.crypto.randomBytes(P);
                throw new Error("crypto.getRandomValues must be defined");
            }
        }(oR)), oR;
    }
    var qF;
    function gte() {
        if (qF) return Ar;
        qF = 1, Object.defineProperty(Ar, "__esModule", {
            value: !0
        }), Ar.shake256 = Ar.shake128 = Ar.keccak_512 = Ar.keccak_384 = Ar.keccak_256 = Ar.keccak_224 = Ar.sha3_512 = Ar.sha3_384 = Ar.sha3_256 = Ar.sha3_224 = Ar.Keccak = void 0, Ar.keccakP = _;
        const t = GW(), e = hte(), n = mte(), r = [], i = [], s = [], o = BigInt(0), a = BigInt(1), l = BigInt(2), c = BigInt(7), u = BigInt(256), f = BigInt(113);
        for(let T = 0, k = a, N = 1, D = 0; T < 24; T++){
            [N, D] = [
                D,
                (2 * N + 3 * D) % 5
            ], r.push(2 * (5 * D + N)), i.push((T + 1) * (T + 2) / 2 % 64);
            let L = o;
            for(let R = 0; R < 7; R++)k = (k << a ^ (k >> c) * f) % u, k & l && (L ^= a << (a << BigInt(R)) - a);
            s.push(L);
        }
        const [p, g] = (0, e.split)(s, !0), x = (T, k, N)=>N > 32 ? (0, e.rotlBH)(T, k, N) : (0, e.rotlSH)(T, k, N), S = (T, k, N)=>N > 32 ? (0, e.rotlBL)(T, k, N) : (0, e.rotlSL)(T, k, N);
        function _(T, k = 24) {
            const N = new Uint32Array(10);
            for(let D = 24 - k; D < 24; D++){
                for(let A = 0; A < 10; A++)N[A] = T[A] ^ T[A + 10] ^ T[A + 20] ^ T[A + 30] ^ T[A + 40];
                for(let A = 0; A < 10; A += 2){
                    const P = (A + 8) % 10, B = (A + 2) % 10, U = N[B], j = N[B + 1], K = x(U, j, 1) ^ N[P], q = S(U, j, 1) ^ N[P + 1];
                    for(let te = 0; te < 50; te += 10)T[A + te] ^= K, T[A + te + 1] ^= q;
                }
                let L = T[2], R = T[3];
                for(let A = 0; A < 24; A++){
                    const P = i[A], B = x(L, R, P), U = S(L, R, P), j = r[A];
                    L = T[j], R = T[j + 1], T[j] = B, T[j + 1] = U;
                }
                for(let A = 0; A < 50; A += 10){
                    for(let P = 0; P < 10; P++)N[P] = T[A + P];
                    for(let P = 0; P < 10; P++)T[A + P] ^= ~N[(P + 2) % 10] & N[(P + 4) % 10];
                }
                T[0] ^= p[D], T[1] ^= g[D];
            }
            N.fill(0);
        }
        class b extends n.Hash {
            constructor(k, N, D, L = !1, R = 24){
                if (super(), this.blockLen = k, this.suffix = N, this.outputLen = D, this.enableXOF = L, this.rounds = R, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, (0, t.anumber)(D), 0 >= this.blockLen || this.blockLen >= 200) throw new Error("Sha3 supports only keccak-f1600 function");
                this.state = new Uint8Array(200), this.state32 = (0, n.u32)(this.state);
            }
            keccak() {
                n.isLE || (0, n.byteSwap32)(this.state32), _(this.state32, this.rounds), n.isLE || (0, n.byteSwap32)(this.state32), this.posOut = 0, this.pos = 0;
            }
            update(k) {
                (0, t.aexists)(this);
                const { blockLen: N, state: D } = this;
                k = (0, n.toBytes)(k);
                const L = k.length;
                for(let R = 0; R < L;){
                    const A = Math.min(N - this.pos, L - R);
                    for(let P = 0; P < A; P++)D[this.pos++] ^= k[R++];
                    this.pos === N && this.keccak();
                }
                return this;
            }
            finish() {
                if (this.finished) return;
                this.finished = !0;
                const { state: k, suffix: N, pos: D, blockLen: L } = this;
                k[D] ^= N, N & 128 && D === L - 1 && this.keccak(), k[L - 1] ^= 128, this.keccak();
            }
            writeInto(k) {
                (0, t.aexists)(this, !1), (0, t.abytes)(k), this.finish();
                const N = this.state, { blockLen: D } = this;
                for(let L = 0, R = k.length; L < R;){
                    this.posOut >= D && this.keccak();
                    const A = Math.min(D - this.posOut, R - L);
                    k.set(N.subarray(this.posOut, this.posOut + A), L), this.posOut += A, L += A;
                }
                return k;
            }
            xofInto(k) {
                if (!this.enableXOF) throw new Error("XOF is not possible for this instance");
                return this.writeInto(k);
            }
            xof(k) {
                return (0, t.anumber)(k), this.xofInto(new Uint8Array(k));
            }
            digestInto(k) {
                if ((0, t.aoutput)(k, this), this.finished) throw new Error("digest() was already called");
                return this.writeInto(k), this.destroy(), k;
            }
            digest() {
                return this.digestInto(new Uint8Array(this.outputLen));
            }
            destroy() {
                this.destroyed = !0, this.state.fill(0);
            }
            _cloneInto(k) {
                const { blockLen: N, suffix: D, outputLen: L, rounds: R, enableXOF: A } = this;
                return k || (k = new b(N, D, L, A, R)), k.state32.set(this.state32), k.pos = this.pos, k.posOut = this.posOut, k.finished = this.finished, k.rounds = R, k.suffix = D, k.outputLen = L, k.enableXOF = A, k.destroyed = this.destroyed, k;
            }
        }
        Ar.Keccak = b;
        const M = (T, k, N)=>(0, n.wrapConstructor)(()=>new b(k, T, N));
        Ar.sha3_224 = M(6, 144, 224 / 8), Ar.sha3_256 = M(6, 136, 256 / 8), Ar.sha3_384 = M(6, 104, 384 / 8), Ar.sha3_512 = M(6, 72, 512 / 8), Ar.keccak_224 = M(1, 144, 224 / 8), Ar.keccak_256 = M(1, 136, 256 / 8), Ar.keccak_384 = M(1, 104, 384 / 8), Ar.keccak_512 = M(1, 72, 512 / 8);
        const E = (T, k, N)=>(0, n.wrapXOFConstructorWithOpts)((D = {})=>new b(k, T, D.dkLen === void 0 ? N : D.dkLen, !0));
        return Ar.shake128 = E(31, 168, 128 / 8), Ar.shake256 = E(31, 136, 256 / 8), Ar;
    }
    var HF;
    function yte() {
        if (HF) return Du;
        HF = 1;
        const { sha3_512: t } = gte(), e = 24, n = 32, r = (x = 4, S = Math.random)=>{
            let _ = "";
            for(; _.length < x;)_ = _ + Math.floor(S() * 36).toString(36);
            return _;
        };
        function i(x) {
            let S = 8n, _ = 0n;
            for (const b of x.values()){
                const M = BigInt(b);
                _ = (_ << S) + M;
            }
            return _;
        }
        const s = (x = "")=>i(t(x)).toString(36).slice(1), o = Array.from({
            length: 26
        }, (x, S)=>String.fromCharCode(S + 97)), a = (x)=>o[Math.floor(x() * o.length)], l = ({ globalObj: x = typeof Ep < "u" ? Ep : typeof window < "u" ? window : {}, random: S = Math.random } = {})=>{
            const _ = Object.keys(x).toString(), b = _.length ? _ + r(n, S) : r(n, S);
            return s(b).substring(0, n);
        }, c = (x)=>()=>x++, u = 476782367, f = ({ random: x = Math.random, counter: S = c(Math.floor(x() * u)), length: _ = e, fingerprint: b = l({
            random: x
        }) } = {})=>function() {
                const E = a(x), T = Date.now().toString(36), k = S().toString(36), N = r(_, x), D = `${T + N + k + b}`;
                return `${E + s(D).substring(1, _)}`;
            }, p = f(), g = (x, { minLength: S = 2, maxLength: _ = n } = {})=>{
            const b = x.length, M = /^[0-9a-z]+$/;
            try {
                if (typeof x == "string" && b >= S && b <= _ && M.test(x)) return !0;
            } finally{}
            return !1;
        };
        return Du.getConstants = ()=>({
                defaultLength: e,
                bigLength: n
            }), Du.init = f, Du.createId = p, Du.bufToBigInt = i, Du.createCounter = c, Du.createFingerprint = l, Du.isCuid = g, Du;
    }
    var $F;
    function vte() {
        if ($F) return bg;
        $F = 1;
        const { createId: t, init: e, getConstants: n, isCuid: r } = yte();
        return bg.createId = t, bg.init = e, bg.getConstants = n, bg.isCuid = r, bg;
    }
    var xte = vte();
    const Kn = xte.createId;
    var aR, GF;
    function bte() {
        if (GF) return aR;
        GF = 1;
        var t = Function.prototype.toString, e = typeof Reflect == "object" && Reflect !== null && Reflect.apply, n, r;
        if (typeof e == "function" && typeof Object.defineProperty == "function") try {
            n = Object.defineProperty({}, "length", {
                get: function() {
                    throw r;
                }
            }), r = {}, e(function() {
                throw 42;
            }, null, n);
        } catch (M) {
            M !== r && (e = null);
        }
        else e = null;
        var i = /^\s*class\b/, s = function(E) {
            try {
                var T = t.call(E);
                return i.test(T);
            } catch  {
                return !1;
            }
        }, o = function(E) {
            try {
                return s(E) ? !1 : (t.call(E), !0);
            } catch  {
                return !1;
            }
        }, a = Object.prototype.toString, l = "[object Object]", c = "[object Function]", u = "[object GeneratorFunction]", f = "[object HTMLAllCollection]", p = "[object HTML document.all class]", g = "[object HTMLCollection]", x = typeof Symbol == "function" && !!Symbol.toStringTag, S = !(0 in [
            , 
        ]), _ = function() {
            return !1;
        };
        if (typeof document == "object") {
            var b = document.all;
            a.call(b) === a.call(document.all) && (_ = function(E) {
                if ((S || !E) && (typeof E > "u" || typeof E == "object")) try {
                    var T = a.call(E);
                    return (T === f || T === p || T === g || T === l) && E("") == null;
                } catch  {}
                return !1;
            });
        }
        return aR = e ? function(E) {
            if (_(E)) return !0;
            if (!E || typeof E != "function" && typeof E != "object") return !1;
            try {
                e(E, null, n);
            } catch (T) {
                if (T !== r) return !1;
            }
            return !s(E) && o(E);
        } : function(E) {
            if (_(E)) return !0;
            if (!E || typeof E != "function" && typeof E != "object") return !1;
            if (x) return o(E);
            if (s(E)) return !1;
            var T = a.call(E);
            return T !== c && T !== u && !/^\[object HTML/.test(T) ? !1 : o(E);
        }, aR;
    }
    var wte = bte();
    const _te = Ao(wte), Ste = (t)=>_te(t), Ete = (t)=>typeof t == "object" && !Array.isArray(t) && t !== null, XW = (t)=>Object.keys(t).reduce((e, n)=>(e[n] = t[n] === "" ? null : Ete(t[n]) ? XW(t[n]) : t[n], e), {});
    var i1 = {
        exports: {}
    }, Mte = i1.exports, XF;
    function Tte() {
        return XF || (XF = 1, function(t) {
            (function(e, n) {
                t.exports = n();
            })(Mte, function() {
                var e = Object.prototype.toString;
                function n(f, p) {
                    return f == null ? !1 : Object.prototype.hasOwnProperty.call(f, p);
                }
                function r(f) {
                    if (!f || o(f) && f.length === 0) return !0;
                    if (typeof f != "string") {
                        for(var p in f)if (n(f, p)) return !1;
                        return !0;
                    }
                    return !1;
                }
                function i(f) {
                    return e.call(f);
                }
                function s(f) {
                    return typeof f == "object" && i(f) === "[object Object]";
                }
                var o = Array.isArray || function(f) {
                    return e.call(f) === "[object Array]";
                };
                function a(f) {
                    return typeof f == "boolean" || i(f) === "[object Boolean]";
                }
                function l(f) {
                    var p = parseInt(f);
                    return p.toString() === f ? p : f;
                }
                function c(f) {
                    f = f || {};
                    var p = function(b) {
                        return Object.keys(p).reduce(function(M, E) {
                            return E === "create" || typeof p[E] == "function" && (M[E] = p[E].bind(p, b)), M;
                        }, {});
                    }, g;
                    f.includeInheritedProps ? g = function() {
                        return !0;
                    } : g = function(b, M) {
                        return typeof M == "number" && Array.isArray(b) || n(b, M);
                    };
                    function x(b, M) {
                        if (g(b, M)) return b[M];
                    }
                    var S;
                    f.includeInheritedProps ? S = function(b, M) {
                        typeof M != "string" && typeof M != "number" && (M = String(M));
                        var E = x(b, M);
                        if (M === "__proto__" || M === "prototype" || M === "constructor" && typeof E == "function") throw new Error("For security reasons, object's magic properties cannot be set");
                        return E;
                    } : S = function(b, M) {
                        return x(b, M);
                    };
                    function _(b, M, E, T) {
                        if (typeof M == "number" && (M = [
                            M
                        ]), !M || M.length === 0) return b;
                        if (typeof M == "string") return _(b, M.split(".").map(l), E, T);
                        var k = M[0], N = S(b, k);
                        return M.length === 1 ? ((N === void 0 || !T) && (b[k] = E), N) : (N === void 0 && (typeof M[1] == "number" ? b[k] = [] : b[k] = {}), _(b[k], M.slice(1), E, T));
                    }
                    return p.has = function(b, M) {
                        if (typeof M == "number" ? M = [
                            M
                        ] : typeof M == "string" && (M = M.split(".")), !M || M.length === 0) return !!b;
                        for(var E = 0; E < M.length; E++){
                            var T = l(M[E]);
                            if (typeof T == "number" && o(b) && T < b.length || (f.includeInheritedProps ? T in Object(b) : n(b, T))) b = b[T];
                            else return !1;
                        }
                        return !0;
                    }, p.ensureExists = function(b, M, E) {
                        return _(b, M, E, !0);
                    }, p.set = function(b, M, E, T) {
                        return _(b, M, E, T);
                    }, p.insert = function(b, M, E, T) {
                        var k = p.get(b, M);
                        T = ~~T, o(k) || (k = [], p.set(b, M, k)), k.splice(T, 0, E);
                    }, p.empty = function(b, M) {
                        if (!r(M) && b != null) {
                            var E, T;
                            if (E = p.get(b, M)) {
                                if (typeof E == "string") return p.set(b, M, "");
                                if (a(E)) return p.set(b, M, !1);
                                if (typeof E == "number") return p.set(b, M, 0);
                                if (o(E)) E.length = 0;
                                else if (s(E)) for(T in E)g(E, T) && delete E[T];
                                else return p.set(b, M, null);
                            }
                        }
                    }, p.push = function(b, M) {
                        var E = p.get(b, M);
                        o(E) || (E = [], p.set(b, M, E)), E.push.apply(E, Array.prototype.slice.call(arguments, 2));
                    }, p.coalesce = function(b, M, E) {
                        for(var T, k = 0, N = M.length; k < N; k++)if ((T = p.get(b, M[k])) !== void 0) return T;
                        return E;
                    }, p.get = function(b, M, E) {
                        if (typeof M == "number" && (M = [
                            M
                        ]), !M || M.length === 0) return b;
                        if (b == null) return E;
                        if (typeof M == "string") return p.get(b, M.split("."), E);
                        var T = l(M[0]), k = S(b, T);
                        return k === void 0 ? E : M.length === 1 ? k : p.get(b[T], M.slice(1), E);
                    }, p.del = function(M, E) {
                        if (typeof E == "number" && (E = [
                            E
                        ]), M == null || r(E)) return M;
                        if (typeof E == "string") return p.del(M, E.split("."));
                        var T = l(E[0]);
                        if (S(M, T), !g(M, T)) return M;
                        if (E.length === 1) o(M) ? M.splice(T, 1) : delete M[T];
                        else return p.del(M[T], E.slice(1));
                        return M;
                    }, p;
                }
                var u = c();
                return u.create = c, u.withInheritedProps = c({
                    includeInheritedProps: !0
                }), u;
            });
        }(i1)), i1.exports;
    }
    var Cte = Tte();
    const KF = Ao(Cte);
    var lR = {}, cR = {};
    var YF;
    function Ite() {
        if (YF) return cR;
        YF = 1;
        class t {
            constructor(n = {}){
                const { label: r, startTimestamp: i, endTimestamp: s, currentStartTimestamp: o, pauseCount: a, accumulatedMs: l } = n, c = i >= 0 && i < Date.now() ? i : void 0, u = c >= 0 && s > 0 && s > c ? s : void 0, f = o >= c && (!u || o < u) ? o : c, p = i >= 0, g = o !== void 0, x = a > 0, S = p && !g && x;
                this._label = r || "", this._startTimestamp = c, this._currentStartTimestamp = S ? void 0 : f, this._endTimestamp = u, this._pauseCount = a || 0, this._accumulatedMs = l || 0;
            }
            getLabel() {
                return this._label;
            }
            isStarted() {
                return this._startTimestamp >= 0;
            }
            isPaused() {
                return this.isStarted() && this._currentStartTimestamp === void 0;
            }
            isStopped() {
                return this._endTimestamp > 0;
            }
            isRunning() {
                return this.isStarted() && !this.isPaused() && !this.isStopped();
            }
            start() {
                return this.isStarted() && !this.isStopped() ? this : (this.clear(), this._startTimestamp = Date.now(), this._currentStartTimestamp = this._startTimestamp, this);
            }
            pause() {
                return this.isPaused() || !this.isStarted() || this.isStopped() ? this : (this._pauseCount += 1, this._accumulatedMs += Date.now() - this._currentStartTimestamp, this._currentStartTimestamp = void 0, this);
            }
            resume() {
                return !this.isPaused() || this.isStopped() ? this : (this._currentStartTimestamp = Date.now(), this);
            }
            stop() {
                return this.isStarted() ? (this._endTimestamp = Date.now(), this) : this;
            }
            ms() {
                return this.isStarted() ? this.isPaused() ? this._accumulatedMs : (this._endTimestamp || Date.now()) - this._currentStartTimestamp + this._accumulatedMs : 0;
            }
            pauseMs() {
                return this.isStarted() ? (this._endTimestamp || Date.now()) - this._startTimestamp - this.ms() : 0;
            }
            _getTime(n) {
                const r = Math.floor(n / 1e3), i = Math.floor(r / 60), s = Math.floor(i / 60), o = Math.floor(s / 24);
                return {
                    ms: n % 1e3,
                    s: r % 60,
                    m: i % 60,
                    h: s % 24,
                    d: o
                };
            }
            time() {
                return this._getTime(this.ms());
            }
            pauseTime() {
                return this._getTime(this.pauseMs());
            }
            pauseCount() {
                return this._pauseCount;
            }
            startedAt() {
                return this._startTimestamp;
            }
            stoppedAt() {
                return this._endTimestamp;
            }
            format(n = "%label%d d, %h h, %m m, %s s, %ms ms") {
                const r = this.time();
                return n.replace("%label", this._label ? `${this._label}: ` : "").replace("%ms", r.ms).replace("%s", r.s).replace("%m", r.m).replace("%h", r.h).replace("%d", r.d);
            }
            clear() {
                return this._startTimestamp = void 0, this._currentStartTimestamp = void 0, this._endTimestamp = void 0, this._accumulatedMs = 0, this._pauseCount = 0, this;
            }
            serialize() {
                return JSON.stringify({
                    startTimestamp: this._startTimestamp,
                    currentStartTimestamp: this._currentStartTimestamp,
                    endTimestamp: this._endTimestamp,
                    accumulatedMs: this._accumulatedMs,
                    pauseCount: this._pauseCount,
                    label: this._label
                });
            }
            static deserialize(n) {
                return new t(JSON.parse(n));
            }
            static benchmark(n) {
                if (typeof n != "function") throw new Error("Timer.benchmark expects a function");
                const r = new t({
                    label: n.name
                }).start();
                return n(), r.stop();
            }
        }
        return cR.Timer = t, cR;
    }
    var ZF;
    function Rte() {
        if (ZF) return lR;
        ZF = 1;
        const { Timer: t } = Ite();
        return lR.Timer = t, lR;
    }
    var KW = Rte();
    function Vn({ number: t, empty: e = "-", fraction: n = 2 }) {
        if (t == null) return e;
        try {
            return t.toLocaleString(void 0, {
                maximumFractionDigits: n
            });
        } catch (r) {
            return console.error("toHumanNumber", t, r), t.toFixed(2);
        }
    }
    const YW = async (t)=>new Promise((e, n)=>{
            const r = new FileReader;
            r.readAsDataURL(t), r.onload = ()=>e(r.result), r.onerror = (i)=>n(i);
        }), lO = ({ error: t, errors: e, onError: n })=>{
        const r = e.some((s)=>s), i = t instanceof Error;
        return !r && i && n(t), r || i;
    }, ZW = Tn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "rounded-sm",
                "px-2",
                "py-0.5",
                "hover:bg-slate-100",
                "text-slate-500",
                "hover:text-blue-500",
                "cursor-pointer"
            ]
        },
        variant: {
            variant: {
                common: [],
                warning: [
                    "text-amber-500",
                    "hover:text-amber-600",
                    "hover:bg-amber-100"
                ],
                danger: [
                    "text-red-500",
                    "hover:text-red-600",
                    "hover:bg-red-100"
                ]
            },
            disabled: {
                true: [
                    "cursor-not-allowed",
                    "text-slate-300",
                    "bg-slate-100",
                    "hover:bg-slate-100"
                ]
            }
        },
        defaults: {
            variant: "common",
            disabled: !1
        }
    }), Ate = Tn({
        use: ZW,
        slot: {},
        variant: {},
        defaults: {}
    }), cO = ({ icon: t, iconProps: e, variant: n, tva: r = Ate, css: i, children: s, ...o })=>{
        const a = r({
            ...n,
            css: i
        }).slots;
        return v.jsxs("div", {
            className: a.base(),
            ...o,
            children: [
                Ub(t) ? v.jsx(vn, {
                    icon: t,
                    ...e
                }) : t,
                s
            ]
        });
    };
    function oT() {
        return typeof window < "u";
    }
    function rh(t) {
        return JW(t) ? (t.nodeName || "").toLowerCase() : "#document";
    }
    function ia(t) {
        var e;
        return (t == null || (e = t.ownerDocument) == null ? void 0 : e.defaultView) || window;
    }
    function Yc(t) {
        var e;
        return (e = (JW(t) ? t.ownerDocument : t.document) || window.document) == null ? void 0 : e.documentElement;
    }
    function JW(t) {
        return oT() ? t instanceof Node || t instanceof ia(t).Node : !1;
    }
    function Pr(t) {
        return oT() ? t instanceof Element || t instanceof ia(t).Element : !1;
    }
    function Ui(t) {
        return oT() ? t instanceof HTMLElement || t instanceof ia(t).HTMLElement : !1;
    }
    function MP(t) {
        return !oT() || typeof ShadowRoot > "u" ? !1 : t instanceof ShadowRoot || t instanceof ia(t).ShadowRoot;
    }
    function Kb(t) {
        const { overflow: e, overflowX: n, overflowY: r, display: i } = cl(t);
        return /auto|scroll|overlay|hidden|clip/.test(e + r + n) && ![
            "inline",
            "contents"
        ].includes(i);
    }
    function Nte(t) {
        return [
            "table",
            "td",
            "th"
        ].includes(rh(t));
    }
    function aT(t) {
        return [
            ":popover-open",
            ":modal"
        ].some((e)=>{
            try {
                return t.matches(e);
            } catch  {
                return !1;
            }
        });
    }
    function uO(t) {
        const e = lT(), n = Pr(t) ? cl(t) : t;
        return [
            "transform",
            "translate",
            "scale",
            "rotate",
            "perspective"
        ].some((r)=>n[r] ? n[r] !== "none" : !1) || (n.containerType ? n.containerType !== "normal" : !1) || !e && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !e && (n.filter ? n.filter !== "none" : !1) || [
            "transform",
            "translate",
            "scale",
            "rotate",
            "perspective",
            "filter"
        ].some((r)=>(n.willChange || "").includes(r)) || [
            "paint",
            "layout",
            "strict",
            "content"
        ].some((r)=>(n.contain || "").includes(r));
    }
    function Pte(t) {
        let e = hd(t);
        for(; Ui(e) && !nd(e);){
            if (uO(e)) return e;
            if (aT(e)) return null;
            e = hd(e);
        }
        return null;
    }
    function lT() {
        return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
    }
    function nd(t) {
        return [
            "html",
            "body",
            "#document"
        ].includes(rh(t));
    }
    function cl(t) {
        return ia(t).getComputedStyle(t);
    }
    function cT(t) {
        return Pr(t) ? {
            scrollLeft: t.scrollLeft,
            scrollTop: t.scrollTop
        } : {
            scrollLeft: t.scrollX,
            scrollTop: t.scrollY
        };
    }
    function hd(t) {
        if (rh(t) === "html") return t;
        const e = t.assignedSlot || t.parentNode || MP(t) && t.host || Yc(t);
        return MP(e) ? e.host : e;
    }
    function QW(t) {
        const e = hd(t);
        return nd(e) ? t.ownerDocument ? t.ownerDocument.body : t.body : Ui(e) && Kb(e) ? e : QW(e);
    }
    function jf(t, e, n) {
        var r;
        e === void 0 && (e = []), n === void 0 && (n = !0);
        const i = QW(t), s = i === ((r = t.ownerDocument) == null ? void 0 : r.body), o = ia(i);
        if (s) {
            const a = TP(o);
            return e.concat(o, o.visualViewport || [], Kb(i) ? i : [], a && n ? jf(a) : []);
        }
        return e.concat(i, jf(i, [], n));
    }
    function TP(t) {
        return t.parent && Object.getPrototypeOf(t.parent) ? t.frameElement : null;
    }
    function Hl(t) {
        let e = t.activeElement;
        for(; ((n = e) == null || (n = n.shadowRoot) == null ? void 0 : n.activeElement) != null;){
            var n;
            e = e.shadowRoot.activeElement;
        }
        return e;
    }
    function Ms(t, e) {
        if (!t || !e) return !1;
        const n = e.getRootNode == null ? void 0 : e.getRootNode();
        if (t.contains(e)) return !0;
        if (n && MP(n)) {
            let r = e;
            for(; r;){
                if (t === r) return !0;
                r = r.parentNode || r.host;
            }
        }
        return !1;
    }
    function dO() {
        const t = navigator.userAgentData;
        return t != null && t.platform ? t.platform : navigator.platform;
    }
    function e5() {
        const t = navigator.userAgentData;
        return t && Array.isArray(t.brands) ? t.brands.map((e)=>{
            let { brand: n, version: r } = e;
            return n + "/" + r;
        }).join(" ") : navigator.userAgent;
    }
    function t5(t) {
        return t.mozInputSource === 0 && t.isTrusted ? !0 : CP() && t.pointerType ? t.type === "click" && t.buttons === 1 : t.detail === 0 && !t.pointerType;
    }
    function fO(t) {
        return Ote() ? !1 : !CP() && t.width === 0 && t.height === 0 || CP() && t.width === 1 && t.height === 1 && t.pressure === 0 && t.detail === 0 && t.pointerType === "mouse" || t.width < 1 && t.height < 1 && t.pressure === 0 && t.detail === 0 && t.pointerType === "touch";
    }
    function n5() {
        return /apple/i.test(navigator.vendor);
    }
    function CP() {
        const t = /android/i;
        return t.test(dO()) || t.test(e5());
    }
    function kte() {
        return dO().toLowerCase().startsWith("mac") && !navigator.maxTouchPoints;
    }
    function Ote() {
        return e5().includes("jsdom/");
    }
    function ib(t, e) {
        const n = [
            "mouse",
            "pen"
        ];
        return e || n.push("", void 0), n.includes(t);
    }
    function Lte(t) {
        return "nativeEvent" in t;
    }
    function Dte(t) {
        return t.matches("html,body");
    }
    function Ts(t) {
        return t?.ownerDocument || document;
    }
    function uR(t, e) {
        if (e == null) return !1;
        if ("composedPath" in t) return t.composedPath().includes(e);
        const n = t;
        return n.target != null && e.contains(n.target);
    }
    function If(t) {
        return "composedPath" in t ? t.composedPath()[0] : t.target;
    }
    const Fte = "input:not([type='hidden']):not([disabled]),[contenteditable]:not([contenteditable='false']),textarea:not([disabled])";
    function hO(t) {
        return Ui(t) && t.matches(Fte);
    }
    function bo(t) {
        t.preventDefault(), t.stopPropagation();
    }
    function r5(t) {
        return t ? t.getAttribute("role") === "combobox" && hO(t) : !1;
    }
    const zy = Math.min, Ca = Math.max, gE = Math.round, sy = Math.floor, Uc = (t)=>({
            x: t,
            y: t
        }), jte = {
        left: "right",
        right: "left",
        bottom: "top",
        top: "bottom"
    }, Bte = {
        start: "end",
        end: "start"
    };
    function JF(t, e, n) {
        return Ca(t, zy(e, n));
    }
    function Yb(t, e) {
        return typeof t == "function" ? t(e) : t;
    }
    function Zf(t) {
        return t.split("-")[0];
    }
    function Zb(t) {
        return t.split("-")[1];
    }
    function i5(t) {
        return t === "x" ? "y" : "x";
    }
    function s5(t) {
        return t === "y" ? "height" : "width";
    }
    function em(t) {
        return [
            "top",
            "bottom"
        ].includes(Zf(t)) ? "y" : "x";
    }
    function o5(t) {
        return i5(em(t));
    }
    function Ute(t, e, n) {
        n === void 0 && (n = !1);
        const r = Zb(t), i = o5(t), s = s5(i);
        let o = i === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
        return e.reference[s] > e.floating[s] && (o = yE(o)), [
            o,
            yE(o)
        ];
    }
    function zte(t) {
        const e = yE(t);
        return [
            IP(t),
            e,
            IP(e)
        ];
    }
    function IP(t) {
        return t.replace(/start|end/g, (e)=>Bte[e]);
    }
    function Vte(t, e, n) {
        const r = [
            "left",
            "right"
        ], i = [
            "right",
            "left"
        ], s = [
            "top",
            "bottom"
        ], o = [
            "bottom",
            "top"
        ];
        switch(t){
            case "top":
            case "bottom":
                return n ? e ? i : r : e ? r : i;
            case "left":
            case "right":
                return e ? s : o;
            default:
                return [];
        }
    }
    function Wte(t, e, n, r) {
        const i = Zb(t);
        let s = Vte(Zf(t), n === "start", r);
        return i && (s = s.map((o)=>o + "-" + i), e && (s = s.concat(s.map(IP)))), s;
    }
    function yE(t) {
        return t.replace(/left|right|bottom|top/g, (e)=>jte[e]);
    }
    function qte(t) {
        return {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
            ...t
        };
    }
    function Hte(t) {
        return typeof t != "number" ? qte(t) : {
            top: t,
            right: t,
            bottom: t,
            left: t
        };
    }
    function vE(t) {
        const { x: e, y: n, width: r, height: i } = t;
        return {
            width: r,
            height: i,
            top: n,
            left: e,
            right: e + r,
            bottom: n + i,
            x: e,
            y: n
        };
    }
    var $te = [
        "input:not([inert])",
        "select:not([inert])",
        "textarea:not([inert])",
        "a[href]:not([inert])",
        "button:not([inert])",
        "[tabindex]:not(slot):not([inert])",
        "audio[controls]:not([inert])",
        "video[controls]:not([inert])",
        '[contenteditable]:not([contenteditable="false"]):not([inert])',
        "details>summary:first-of-type:not([inert])",
        "details:not([inert])"
    ], xE = $te.join(","), a5 = typeof Element > "u", Vy = a5 ? function() {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector, bE = !a5 && Element.prototype.getRootNode ? function(t) {
        var e;
        return t == null || (e = t.getRootNode) === null || e === void 0 ? void 0 : e.call(t);
    } : function(t) {
        return t?.ownerDocument;
    }, wE = function t(e, n) {
        var r;
        n === void 0 && (n = !0);
        var i = e == null || (r = e.getAttribute) === null || r === void 0 ? void 0 : r.call(e, "inert"), s = i === "" || i === "true", o = s || n && e && t(e.parentNode);
        return o;
    }, Gte = function(e) {
        var n, r = e == null || (n = e.getAttribute) === null || n === void 0 ? void 0 : n.call(e, "contenteditable");
        return r === "" || r === "true";
    }, Xte = function(e, n, r) {
        if (wE(e)) return [];
        var i = Array.prototype.slice.apply(e.querySelectorAll(xE));
        return n && Vy.call(e, xE) && i.unshift(e), i = i.filter(r), i;
    }, Kte = function t(e, n, r) {
        for(var i = [], s = Array.from(e); s.length;){
            var o = s.shift();
            if (!wE(o, !1)) if (o.tagName === "SLOT") {
                var a = o.assignedElements(), l = a.length ? a : o.children, c = t(l, !0, r);
                r.flatten ? i.push.apply(i, c) : i.push({
                    scopeParent: o,
                    candidates: c
                });
            } else {
                var u = Vy.call(o, xE);
                u && r.filter(o) && (n || !e.includes(o)) && i.push(o);
                var f = o.shadowRoot || typeof r.getShadowRoot == "function" && r.getShadowRoot(o), p = !wE(f, !1) && (!r.shadowRootFilter || r.shadowRootFilter(o));
                if (f && p) {
                    var g = t(f === !0 ? o.children : f.children, !0, r);
                    r.flatten ? i.push.apply(i, g) : i.push({
                        scopeParent: o,
                        candidates: g
                    });
                } else s.unshift.apply(s, o.children);
            }
        }
        return i;
    }, l5 = function(e) {
        return !isNaN(parseInt(e.getAttribute("tabindex"), 10));
    }, c5 = function(e) {
        if (!e) throw new Error("No node provided");
        return e.tabIndex < 0 && (/^(AUDIO|VIDEO|DETAILS)$/.test(e.tagName) || Gte(e)) && !l5(e) ? 0 : e.tabIndex;
    }, Yte = function(e, n) {
        var r = c5(e);
        return r < 0 && n && !l5(e) ? 0 : r;
    }, Zte = function(e, n) {
        return e.tabIndex === n.tabIndex ? e.documentOrder - n.documentOrder : e.tabIndex - n.tabIndex;
    }, u5 = function(e) {
        return e.tagName === "INPUT";
    }, Jte = function(e) {
        return u5(e) && e.type === "hidden";
    }, Qte = function(e) {
        var n = e.tagName === "DETAILS" && Array.prototype.slice.apply(e.children).some(function(r) {
            return r.tagName === "SUMMARY";
        });
        return n;
    }, ene = function(e, n) {
        for(var r = 0; r < e.length; r++)if (e[r].checked && e[r].form === n) return e[r];
    }, tne = function(e) {
        if (!e.name) return !0;
        var n = e.form || bE(e), r = function(a) {
            return n.querySelectorAll('input[type="radio"][name="' + a + '"]');
        }, i;
        if (typeof window < "u" && typeof window.CSS < "u" && typeof window.CSS.escape == "function") i = r(window.CSS.escape(e.name));
        else try {
            i = r(e.name);
        } catch (o) {
            return console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s", o.message), !1;
        }
        var s = ene(i, e.form);
        return !s || s === e;
    }, nne = function(e) {
        return u5(e) && e.type === "radio";
    }, rne = function(e) {
        return nne(e) && !tne(e);
    }, ine = function(e) {
        var n, r = e && bE(e), i = (n = r) === null || n === void 0 ? void 0 : n.host, s = !1;
        if (r && r !== e) {
            var o, a, l;
            for(s = !!((o = i) !== null && o !== void 0 && (a = o.ownerDocument) !== null && a !== void 0 && a.contains(i) || e != null && (l = e.ownerDocument) !== null && l !== void 0 && l.contains(e)); !s && i;){
                var c, u, f;
                r = bE(i), i = (c = r) === null || c === void 0 ? void 0 : c.host, s = !!((u = i) !== null && u !== void 0 && (f = u.ownerDocument) !== null && f !== void 0 && f.contains(i));
            }
        }
        return s;
    }, QF = function(e) {
        var n = e.getBoundingClientRect(), r = n.width, i = n.height;
        return r === 0 && i === 0;
    }, sne = function(e, n) {
        var r = n.displayCheck, i = n.getShadowRoot;
        if (getComputedStyle(e).visibility === "hidden") return !0;
        var s = Vy.call(e, "details>summary:first-of-type"), o = s ? e.parentElement : e;
        if (Vy.call(o, "details:not([open]) *")) return !0;
        if (!r || r === "full" || r === "legacy-full") {
            if (typeof i == "function") {
                for(var a = e; e;){
                    var l = e.parentElement, c = bE(e);
                    if (l && !l.shadowRoot && i(l) === !0) return QF(e);
                    e.assignedSlot ? e = e.assignedSlot : !l && c !== e.ownerDocument ? e = c.host : e = l;
                }
                e = a;
            }
            if (ine(e)) return !e.getClientRects().length;
            if (r !== "legacy-full") return !0;
        } else if (r === "non-zero-area") return QF(e);
        return !1;
    }, one = function(e) {
        if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(e.tagName)) for(var n = e.parentElement; n;){
            if (n.tagName === "FIELDSET" && n.disabled) {
                for(var r = 0; r < n.children.length; r++){
                    var i = n.children.item(r);
                    if (i.tagName === "LEGEND") return Vy.call(n, "fieldset[disabled] *") ? !0 : !i.contains(e);
                }
                return !0;
            }
            n = n.parentElement;
        }
        return !1;
    }, ane = function(e, n) {
        return !(n.disabled || wE(n) || Jte(n) || sne(n, e) || Qte(n) || one(n));
    }, RP = function(e, n) {
        return !(rne(n) || c5(n) < 0 || !ane(e, n));
    }, lne = function(e) {
        var n = parseInt(e.getAttribute("tabindex"), 10);
        return !!(isNaN(n) || n >= 0);
    }, cne = function t(e) {
        var n = [], r = [];
        return e.forEach(function(i, s) {
            var o = !!i.scopeParent, a = o ? i.scopeParent : i, l = Yte(a, o), c = o ? t(i.candidates) : a;
            l === 0 ? o ? n.push.apply(n, c) : n.push(a) : r.push({
                documentOrder: s,
                tabIndex: l,
                item: i,
                isScope: o,
                content: c
            });
        }), r.sort(Zte).reduce(function(i, s) {
            return s.isScope ? i.push.apply(i, s.content) : i.push(s.content), i;
        }, []).concat(n);
    }, uT = function(e, n) {
        n = n || {};
        var r;
        return n.getShadowRoot ? r = Kte([
            e
        ], n.includeContainer, {
            filter: RP.bind(null, n),
            flatten: !1,
            getShadowRoot: n.getShadowRoot,
            shadowRootFilter: lne
        }) : r = Xte(e, n.includeContainer, RP.bind(null, n)), cne(r);
    }, une = function(e, n) {
        if (n = n || {}, !e) throw new Error("No node provided");
        return Vy.call(e, xE) === !1 ? !1 : RP(n, e);
    };
    function e3(t, e, n) {
        let { reference: r, floating: i } = t;
        const s = em(e), o = o5(e), a = s5(o), l = Zf(e), c = s === "y", u = r.x + r.width / 2 - i.width / 2, f = r.y + r.height / 2 - i.height / 2, p = r[a] / 2 - i[a] / 2;
        let g;
        switch(l){
            case "top":
                g = {
                    x: u,
                    y: r.y - i.height
                };
                break;
            case "bottom":
                g = {
                    x: u,
                    y: r.y + r.height
                };
                break;
            case "right":
                g = {
                    x: r.x + r.width,
                    y: f
                };
                break;
            case "left":
                g = {
                    x: r.x - i.width,
                    y: f
                };
                break;
            default:
                g = {
                    x: r.x,
                    y: r.y
                };
        }
        switch(Zb(e)){
            case "start":
                g[o] -= p * (n && c ? -1 : 1);
                break;
            case "end":
                g[o] += p * (n && c ? -1 : 1);
                break;
        }
        return g;
    }
    const dne = async (t, e, n)=>{
        const { placement: r = "bottom", strategy: i = "absolute", middleware: s = [], platform: o } = n, a = s.filter(Boolean), l = await (o.isRTL == null ? void 0 : o.isRTL(e));
        let c = await o.getElementRects({
            reference: t,
            floating: e,
            strategy: i
        }), { x: u, y: f } = e3(c, r, l), p = r, g = {}, x = 0;
        for(let S = 0; S < a.length; S++){
            const { name: _, fn: b } = a[S], { x: M, y: E, data: T, reset: k } = await b({
                x: u,
                y: f,
                initialPlacement: r,
                placement: p,
                strategy: i,
                middlewareData: g,
                rects: c,
                platform: o,
                elements: {
                    reference: t,
                    floating: e
                }
            });
            u = M ?? u, f = E ?? f, g = {
                ...g,
                [_]: {
                    ...g[_],
                    ...T
                }
            }, k && x <= 50 && (x++, typeof k == "object" && (k.placement && (p = k.placement), k.rects && (c = k.rects === !0 ? await o.getElementRects({
                reference: t,
                floating: e,
                strategy: i
            }) : k.rects), { x: u, y: f } = e3(c, p, l)), S = -1);
        }
        return {
            x: u,
            y: f,
            placement: p,
            strategy: i,
            middlewareData: g
        };
    };
    async function pO(t, e) {
        var n;
        e === void 0 && (e = {});
        const { x: r, y: i, platform: s, rects: o, elements: a, strategy: l } = t, { boundary: c = "clippingAncestors", rootBoundary: u = "viewport", elementContext: f = "floating", altBoundary: p = !1, padding: g = 0 } = Yb(e, t), x = Hte(g), _ = a[p ? f === "floating" ? "reference" : "floating" : f], b = vE(await s.getClippingRect({
            element: (n = await (s.isElement == null ? void 0 : s.isElement(_))) == null || n ? _ : _.contextElement || await (s.getDocumentElement == null ? void 0 : s.getDocumentElement(a.floating)),
            boundary: c,
            rootBoundary: u,
            strategy: l
        })), M = f === "floating" ? {
            x: r,
            y: i,
            width: o.floating.width,
            height: o.floating.height
        } : o.reference, E = await (s.getOffsetParent == null ? void 0 : s.getOffsetParent(a.floating)), T = await (s.isElement == null ? void 0 : s.isElement(E)) ? await (s.getScale == null ? void 0 : s.getScale(E)) || {
            x: 1,
            y: 1
        } : {
            x: 1,
            y: 1
        }, k = vE(s.convertOffsetParentRelativeRectToViewportRelativeRect ? await s.convertOffsetParentRelativeRectToViewportRelativeRect({
            elements: a,
            rect: M,
            offsetParent: E,
            strategy: l
        }) : M);
        return {
            top: (b.top - k.top + x.top) / T.y,
            bottom: (k.bottom - b.bottom + x.bottom) / T.y,
            left: (b.left - k.left + x.left) / T.x,
            right: (k.right - b.right + x.right) / T.x
        };
    }
    const fne = function(t) {
        return t === void 0 && (t = {}), {
            name: "flip",
            options: t,
            async fn (e) {
                var n, r;
                const { placement: i, middlewareData: s, rects: o, initialPlacement: a, platform: l, elements: c } = e, { mainAxis: u = !0, crossAxis: f = !0, fallbackPlacements: p, fallbackStrategy: g = "bestFit", fallbackAxisSideDirection: x = "none", flipAlignment: S = !0, ..._ } = Yb(t, e);
                if ((n = s.arrow) != null && n.alignmentOffset) return {};
                const b = Zf(i), M = em(a), E = Zf(a) === a, T = await (l.isRTL == null ? void 0 : l.isRTL(c.floating)), k = p || (E || !S ? [
                    yE(a)
                ] : zte(a)), N = x !== "none";
                !p && N && k.push(...Wte(a, S, x, T));
                const D = [
                    a,
                    ...k
                ], L = await pO(e, _), R = [];
                let A = ((r = s.flip) == null ? void 0 : r.overflows) || [];
                if (u && R.push(L[b]), f) {
                    const j = Ute(i, o, T);
                    R.push(L[j[0]], L[j[1]]);
                }
                if (A = [
                    ...A,
                    {
                        placement: i,
                        overflows: R
                    }
                ], !R.every((j)=>j <= 0)) {
                    var P, B;
                    const j = (((P = s.flip) == null ? void 0 : P.index) || 0) + 1, K = D[j];
                    if (K) return {
                        data: {
                            index: j,
                            overflows: A
                        },
                        reset: {
                            placement: K
                        }
                    };
                    let q = (B = A.filter((te)=>te.overflows[0] <= 0).sort((te, W)=>te.overflows[1] - W.overflows[1])[0]) == null ? void 0 : B.placement;
                    if (!q) switch(g){
                        case "bestFit":
                            {
                                var U;
                                const te = (U = A.filter((W)=>{
                                    if (N) {
                                        const J = em(W.placement);
                                        return J === M || J === "y";
                                    }
                                    return !0;
                                }).map((W)=>[
                                        W.placement,
                                        W.overflows.filter((J)=>J > 0).reduce((J, Q)=>J + Q, 0)
                                    ]).sort((W, J)=>W[1] - J[1])[0]) == null ? void 0 : U[0];
                                te && (q = te);
                                break;
                            }
                        case "initialPlacement":
                            q = a;
                            break;
                    }
                    if (i !== q) return {
                        reset: {
                            placement: q
                        }
                    };
                }
                return {};
            }
        };
    };
    async function hne(t, e) {
        const { placement: n, platform: r, elements: i } = t, s = await (r.isRTL == null ? void 0 : r.isRTL(i.floating)), o = Zf(n), a = Zb(n), l = em(n) === "y", c = [
            "left",
            "top"
        ].includes(o) ? -1 : 1, u = s && l ? -1 : 1, f = Yb(e, t);
        let { mainAxis: p, crossAxis: g, alignmentAxis: x } = typeof f == "number" ? {
            mainAxis: f,
            crossAxis: 0,
            alignmentAxis: null
        } : {
            mainAxis: f.mainAxis || 0,
            crossAxis: f.crossAxis || 0,
            alignmentAxis: f.alignmentAxis
        };
        return a && typeof x == "number" && (g = a === "end" ? x * -1 : x), l ? {
            x: g * u,
            y: p * c
        } : {
            x: p * c,
            y: g * u
        };
    }
    const pne = function(t) {
        return t === void 0 && (t = 0), {
            name: "offset",
            options: t,
            async fn (e) {
                var n, r;
                const { x: i, y: s, placement: o, middlewareData: a } = e, l = await hne(e, t);
                return o === ((n = a.offset) == null ? void 0 : n.placement) && (r = a.arrow) != null && r.alignmentOffset ? {} : {
                    x: i + l.x,
                    y: s + l.y,
                    data: {
                        ...l,
                        placement: o
                    }
                };
            }
        };
    }, mne = function(t) {
        return t === void 0 && (t = {}), {
            name: "shift",
            options: t,
            async fn (e) {
                const { x: n, y: r, placement: i } = e, { mainAxis: s = !0, crossAxis: o = !1, limiter: a = {
                    fn: (_)=>{
                        let { x: b, y: M } = _;
                        return {
                            x: b,
                            y: M
                        };
                    }
                }, ...l } = Yb(t, e), c = {
                    x: n,
                    y: r
                }, u = await pO(e, l), f = em(Zf(i)), p = i5(f);
                let g = c[p], x = c[f];
                if (s) {
                    const _ = p === "y" ? "top" : "left", b = p === "y" ? "bottom" : "right", M = g + u[_], E = g - u[b];
                    g = JF(M, g, E);
                }
                if (o) {
                    const _ = f === "y" ? "top" : "left", b = f === "y" ? "bottom" : "right", M = x + u[_], E = x - u[b];
                    x = JF(M, x, E);
                }
                const S = a.fn({
                    ...e,
                    [p]: g,
                    [f]: x
                });
                return {
                    ...S,
                    data: {
                        x: S.x - n,
                        y: S.y - r,
                        enabled: {
                            [p]: s,
                            [f]: o
                        }
                    }
                };
            }
        };
    }, gne = function(t) {
        return t === void 0 && (t = {}), {
            name: "size",
            options: t,
            async fn (e) {
                var n, r;
                const { placement: i, rects: s, platform: o, elements: a } = e, { apply: l = ()=>{}, ...c } = Yb(t, e), u = await pO(e, c), f = Zf(i), p = Zb(i), g = em(i) === "y", { width: x, height: S } = s.floating;
                let _, b;
                f === "top" || f === "bottom" ? (_ = f, b = p === (await (o.isRTL == null ? void 0 : o.isRTL(a.floating)) ? "start" : "end") ? "left" : "right") : (b = f, _ = p === "end" ? "top" : "bottom");
                const M = S - u.top - u.bottom, E = x - u.left - u.right, T = zy(S - u[_], M), k = zy(x - u[b], E), N = !e.middlewareData.shift;
                let D = T, L = k;
                if ((n = e.middlewareData.shift) != null && n.enabled.x && (L = E), (r = e.middlewareData.shift) != null && r.enabled.y && (D = M), N && !p) {
                    const A = Ca(u.left, 0), P = Ca(u.right, 0), B = Ca(u.top, 0), U = Ca(u.bottom, 0);
                    g ? L = x - 2 * (A !== 0 || P !== 0 ? A + P : Ca(u.left, u.right)) : D = S - 2 * (B !== 0 || U !== 0 ? B + U : Ca(u.top, u.bottom));
                }
                await l({
                    ...e,
                    availableWidth: L,
                    availableHeight: D
                });
                const R = await o.getDimensions(a.floating);
                return x !== R.width || S !== R.height ? {
                    reset: {
                        rects: !0
                    }
                } : {};
            }
        };
    };
    function d5(t) {
        const e = cl(t);
        let n = parseFloat(e.width) || 0, r = parseFloat(e.height) || 0;
        const i = Ui(t), s = i ? t.offsetWidth : n, o = i ? t.offsetHeight : r, a = gE(n) !== s || gE(r) !== o;
        return a && (n = s, r = o), {
            width: n,
            height: r,
            $: a
        };
    }
    function mO(t) {
        return Pr(t) ? t : t.contextElement;
    }
    function Ry(t) {
        const e = mO(t);
        if (!Ui(e)) return Uc(1);
        const n = e.getBoundingClientRect(), { width: r, height: i, $: s } = d5(e);
        let o = (s ? gE(n.width) : n.width) / r, a = (s ? gE(n.height) : n.height) / i;
        return (!o || !Number.isFinite(o)) && (o = 1), (!a || !Number.isFinite(a)) && (a = 1), {
            x: o,
            y: a
        };
    }
    const yne = Uc(0);
    function f5(t) {
        const e = ia(t);
        return !lT() || !e.visualViewport ? yne : {
            x: e.visualViewport.offsetLeft,
            y: e.visualViewport.offsetTop
        };
    }
    function vne(t, e, n) {
        return e === void 0 && (e = !1), !n || e && n !== ia(t) ? !1 : e;
    }
    function tm(t, e, n, r) {
        e === void 0 && (e = !1), n === void 0 && (n = !1);
        const i = t.getBoundingClientRect(), s = mO(t);
        let o = Uc(1);
        e && (r ? Pr(r) && (o = Ry(r)) : o = Ry(t));
        const a = vne(s, n, r) ? f5(s) : Uc(0);
        let l = (i.left + a.x) / o.x, c = (i.top + a.y) / o.y, u = i.width / o.x, f = i.height / o.y;
        if (s) {
            const p = ia(s), g = r && Pr(r) ? ia(r) : r;
            let x = p, S = TP(x);
            for(; S && r && g !== x;){
                const _ = Ry(S), b = S.getBoundingClientRect(), M = cl(S), E = b.left + (S.clientLeft + parseFloat(M.paddingLeft)) * _.x, T = b.top + (S.clientTop + parseFloat(M.paddingTop)) * _.y;
                l *= _.x, c *= _.y, u *= _.x, f *= _.y, l += E, c += T, x = ia(S), S = TP(x);
            }
        }
        return vE({
            width: u,
            height: f,
            x: l,
            y: c
        });
    }
    function gO(t, e) {
        const n = cT(t).scrollLeft;
        return e ? e.left + n : tm(Yc(t)).left + n;
    }
    function h5(t, e, n) {
        n === void 0 && (n = !1);
        const r = t.getBoundingClientRect(), i = r.left + e.scrollLeft - (n ? 0 : gO(t, r)), s = r.top + e.scrollTop;
        return {
            x: i,
            y: s
        };
    }
    function xne(t) {
        let { elements: e, rect: n, offsetParent: r, strategy: i } = t;
        const s = i === "fixed", o = Yc(r), a = e ? aT(e.floating) : !1;
        if (r === o || a && s) return n;
        let l = {
            scrollLeft: 0,
            scrollTop: 0
        }, c = Uc(1);
        const u = Uc(0), f = Ui(r);
        if ((f || !f && !s) && ((rh(r) !== "body" || Kb(o)) && (l = cT(r)), Ui(r))) {
            const g = tm(r);
            c = Ry(r), u.x = g.x + r.clientLeft, u.y = g.y + r.clientTop;
        }
        const p = o && !f && !s ? h5(o, l, !0) : Uc(0);
        return {
            width: n.width * c.x,
            height: n.height * c.y,
            x: n.x * c.x - l.scrollLeft * c.x + u.x + p.x,
            y: n.y * c.y - l.scrollTop * c.y + u.y + p.y
        };
    }
    function bne(t) {
        return Array.from(t.getClientRects());
    }
    function wne(t) {
        const e = Yc(t), n = cT(t), r = t.ownerDocument.body, i = Ca(e.scrollWidth, e.clientWidth, r.scrollWidth, r.clientWidth), s = Ca(e.scrollHeight, e.clientHeight, r.scrollHeight, r.clientHeight);
        let o = -n.scrollLeft + gO(t);
        const a = -n.scrollTop;
        return cl(r).direction === "rtl" && (o += Ca(e.clientWidth, r.clientWidth) - i), {
            width: i,
            height: s,
            x: o,
            y: a
        };
    }
    function _ne(t, e) {
        const n = ia(t), r = Yc(t), i = n.visualViewport;
        let s = r.clientWidth, o = r.clientHeight, a = 0, l = 0;
        if (i) {
            s = i.width, o = i.height;
            const c = lT();
            (!c || c && e === "fixed") && (a = i.offsetLeft, l = i.offsetTop);
        }
        return {
            width: s,
            height: o,
            x: a,
            y: l
        };
    }
    function Sne(t, e) {
        const n = tm(t, !0, e === "fixed"), r = n.top + t.clientTop, i = n.left + t.clientLeft, s = Ui(t) ? Ry(t) : Uc(1), o = t.clientWidth * s.x, a = t.clientHeight * s.y, l = i * s.x, c = r * s.y;
        return {
            width: o,
            height: a,
            x: l,
            y: c
        };
    }
    function t3(t, e, n) {
        let r;
        if (e === "viewport") r = _ne(t, n);
        else if (e === "document") r = wne(Yc(t));
        else if (Pr(e)) r = Sne(e, n);
        else {
            const i = f5(t);
            r = {
                x: e.x - i.x,
                y: e.y - i.y,
                width: e.width,
                height: e.height
            };
        }
        return vE(r);
    }
    function p5(t, e) {
        const n = hd(t);
        return n === e || !Pr(n) || nd(n) ? !1 : cl(n).position === "fixed" || p5(n, e);
    }
    function Ene(t, e) {
        const n = e.get(t);
        if (n) return n;
        let r = jf(t, [], !1).filter((a)=>Pr(a) && rh(a) !== "body"), i = null;
        const s = cl(t).position === "fixed";
        let o = s ? hd(t) : t;
        for(; Pr(o) && !nd(o);){
            const a = cl(o), l = uO(o);
            !l && a.position === "fixed" && (i = null), (s ? !l && !i : !l && a.position === "static" && !!i && [
                "absolute",
                "fixed"
            ].includes(i.position) || Kb(o) && !l && p5(t, o)) ? r = r.filter((u)=>u !== o) : i = a, o = hd(o);
        }
        return e.set(t, r), r;
    }
    function Mne(t) {
        let { element: e, boundary: n, rootBoundary: r, strategy: i } = t;
        const o = [
            ...n === "clippingAncestors" ? aT(e) ? [] : Ene(e, this._c) : [].concat(n),
            r
        ], a = o[0], l = o.reduce((c, u)=>{
            const f = t3(e, u, i);
            return c.top = Ca(f.top, c.top), c.right = zy(f.right, c.right), c.bottom = zy(f.bottom, c.bottom), c.left = Ca(f.left, c.left), c;
        }, t3(e, a, i));
        return {
            width: l.right - l.left,
            height: l.bottom - l.top,
            x: l.left,
            y: l.top
        };
    }
    function Tne(t) {
        const { width: e, height: n } = d5(t);
        return {
            width: e,
            height: n
        };
    }
    function Cne(t, e, n) {
        const r = Ui(e), i = Yc(e), s = n === "fixed", o = tm(t, !0, s, e);
        let a = {
            scrollLeft: 0,
            scrollTop: 0
        };
        const l = Uc(0);
        if (r || !r && !s) if ((rh(e) !== "body" || Kb(i)) && (a = cT(e)), r) {
            const p = tm(e, !0, s, e);
            l.x = p.x + e.clientLeft, l.y = p.y + e.clientTop;
        } else i && (l.x = gO(i));
        const c = i && !r && !s ? h5(i, a) : Uc(0), u = o.left + a.scrollLeft - l.x - c.x, f = o.top + a.scrollTop - l.y - c.y;
        return {
            x: u,
            y: f,
            width: o.width,
            height: o.height
        };
    }
    function dR(t) {
        return cl(t).position === "static";
    }
    function n3(t, e) {
        if (!Ui(t) || cl(t).position === "fixed") return null;
        if (e) return e(t);
        let n = t.offsetParent;
        return Yc(t) === n && (n = n.ownerDocument.body), n;
    }
    function m5(t, e) {
        const n = ia(t);
        if (aT(t)) return n;
        if (!Ui(t)) {
            let i = hd(t);
            for(; i && !nd(i);){
                if (Pr(i) && !dR(i)) return i;
                i = hd(i);
            }
            return n;
        }
        let r = n3(t, e);
        for(; r && Nte(r) && dR(r);)r = n3(r, e);
        return r && nd(r) && dR(r) && !uO(r) ? n : r || Pte(t) || n;
    }
    const Ine = async function(t) {
        const e = this.getOffsetParent || m5, n = this.getDimensions, r = await n(t.floating);
        return {
            reference: Cne(t.reference, await e(t.floating), t.strategy),
            floating: {
                x: 0,
                y: 0,
                width: r.width,
                height: r.height
            }
        };
    };
    function Rne(t) {
        return cl(t).direction === "rtl";
    }
    const Ane = {
        convertOffsetParentRelativeRectToViewportRelativeRect: xne,
        getDocumentElement: Yc,
        getClippingRect: Mne,
        getOffsetParent: m5,
        getElementRects: Ine,
        getClientRects: bne,
        getDimensions: Tne,
        getScale: Ry,
        isElement: Pr,
        isRTL: Rne
    };
    function g5(t, e) {
        return t.x === e.x && t.y === e.y && t.width === e.width && t.height === e.height;
    }
    function Nne(t, e) {
        let n = null, r;
        const i = Yc(t);
        function s() {
            var a;
            clearTimeout(r), (a = n) == null || a.disconnect(), n = null;
        }
        function o(a, l) {
            a === void 0 && (a = !1), l === void 0 && (l = 1), s();
            const c = t.getBoundingClientRect(), { left: u, top: f, width: p, height: g } = c;
            if (a || e(), !p || !g) return;
            const x = sy(f), S = sy(i.clientWidth - (u + p)), _ = sy(i.clientHeight - (f + g)), b = sy(u), E = {
                rootMargin: -x + "px " + -S + "px " + -_ + "px " + -b + "px",
                threshold: Ca(0, zy(1, l)) || 1
            };
            let T = !0;
            function k(N) {
                const D = N[0].intersectionRatio;
                if (D !== l) {
                    if (!T) return o();
                    D ? o(!1, D) : r = setTimeout(()=>{
                        o(!1, 1e-7);
                    }, 1e3);
                }
                D === 1 && !g5(c, t.getBoundingClientRect()) && o(), T = !1;
            }
            try {
                n = new IntersectionObserver(k, {
                    ...E,
                    root: i.ownerDocument
                });
            } catch  {
                n = new IntersectionObserver(k, E);
            }
            n.observe(t);
        }
        return o(!0), s;
    }
    function y5(t, e, n, r) {
        r === void 0 && (r = {});
        const { ancestorScroll: i = !0, ancestorResize: s = !0, elementResize: o = typeof ResizeObserver == "function", layoutShift: a = typeof IntersectionObserver == "function", animationFrame: l = !1 } = r, c = mO(t), u = i || s ? [
            ...c ? jf(c) : [],
            ...jf(e)
        ] : [];
        u.forEach((b)=>{
            i && b.addEventListener("scroll", n, {
                passive: !0
            }), s && b.addEventListener("resize", n);
        });
        const f = c && a ? Nne(c, n) : null;
        let p = -1, g = null;
        o && (g = new ResizeObserver((b)=>{
            let [M] = b;
            M && M.target === c && g && (g.unobserve(e), cancelAnimationFrame(p), p = requestAnimationFrame(()=>{
                var E;
                (E = g) == null || E.observe(e);
            })), n();
        }), c && !l && g.observe(c), g.observe(e));
        let x, S = l ? tm(t) : null;
        l && _();
        function _() {
            const b = tm(t);
            S && !g5(S, b) && n(), S = b, x = requestAnimationFrame(_);
        }
        return n(), ()=>{
            var b;
            u.forEach((M)=>{
                i && M.removeEventListener("scroll", n), s && M.removeEventListener("resize", n);
            }), f?.(), (b = g) == null || b.disconnect(), g = null, l && cancelAnimationFrame(x);
        };
    }
    const Pne = pne, kne = mne, One = fne, Lne = gne, Dne = (t, e, n)=>{
        const r = new Map, i = {
            platform: Ane,
            ...n
        }, s = {
            ...i.platform,
            _c: r
        };
        return dne(t, e, {
            ...i,
            platform: s
        });
    };
    var s1 = typeof document < "u" ? X.useLayoutEffect : X.useEffect;
    function _E(t, e) {
        if (t === e) return !0;
        if (typeof t != typeof e) return !1;
        if (typeof t == "function" && t.toString() === e.toString()) return !0;
        let n, r, i;
        if (t && e && typeof t == "object") {
            if (Array.isArray(t)) {
                if (n = t.length, n !== e.length) return !1;
                for(r = n; r-- !== 0;)if (!_E(t[r], e[r])) return !1;
                return !0;
            }
            if (i = Object.keys(t), n = i.length, n !== Object.keys(e).length) return !1;
            for(r = n; r-- !== 0;)if (!{}.hasOwnProperty.call(e, i[r])) return !1;
            for(r = n; r-- !== 0;){
                const s = i[r];
                if (!(s === "_owner" && t.$$typeof) && !_E(t[s], e[s])) return !1;
            }
            return !0;
        }
        return t !== t && e !== e;
    }
    function v5(t) {
        return typeof window > "u" ? 1 : (t.ownerDocument.defaultView || window).devicePixelRatio || 1;
    }
    function r3(t, e) {
        const n = v5(t);
        return Math.round(e * n) / n;
    }
    function fR(t) {
        const e = X.useRef(t);
        return s1(()=>{
            e.current = t;
        }), e;
    }
    function Fne(t) {
        t === void 0 && (t = {});
        const { placement: e = "bottom", strategy: n = "absolute", middleware: r = [], platform: i, elements: { reference: s, floating: o } = {}, transform: a = !0, whileElementsMounted: l, open: c } = t, [u, f] = X.useState({
            x: 0,
            y: 0,
            strategy: n,
            placement: e,
            middlewareData: {},
            isPositioned: !1
        }), [p, g] = X.useState(r);
        _E(p, r) || g(r);
        const [x, S] = X.useState(null), [_, b] = X.useState(null), M = X.useCallback((W)=>{
            W !== N.current && (N.current = W, S(W));
        }, []), E = X.useCallback((W)=>{
            W !== D.current && (D.current = W, b(W));
        }, []), T = s || x, k = o || _, N = X.useRef(null), D = X.useRef(null), L = X.useRef(u), R = l != null, A = fR(l), P = fR(i), B = fR(c), U = X.useCallback(()=>{
            if (!N.current || !D.current) return;
            const W = {
                placement: e,
                strategy: n,
                middleware: p
            };
            P.current && (W.platform = P.current), Dne(N.current, D.current, W).then((J)=>{
                const Q = {
                    ...J,
                    isPositioned: B.current !== !1
                };
                j.current && !_E(L.current, Q) && (L.current = Q, WM.flushSync(()=>{
                    f(Q);
                }));
            });
        }, [
            p,
            e,
            n,
            P,
            B
        ]);
        s1(()=>{
            c === !1 && L.current.isPositioned && (L.current.isPositioned = !1, f((W)=>({
                    ...W,
                    isPositioned: !1
                })));
        }, [
            c
        ]);
        const j = X.useRef(!1);
        s1(()=>(j.current = !0, ()=>{
                j.current = !1;
            }), []), s1(()=>{
            if (T && (N.current = T), k && (D.current = k), T && k) {
                if (A.current) return A.current(T, k, U);
                U();
            }
        }, [
            T,
            k,
            U,
            A,
            R
        ]);
        const K = X.useMemo(()=>({
                reference: N,
                floating: D,
                setReference: M,
                setFloating: E
            }), [
            M,
            E
        ]), q = X.useMemo(()=>({
                reference: T,
                floating: k
            }), [
            T,
            k
        ]), te = X.useMemo(()=>{
            const W = {
                position: n,
                left: 0,
                top: 0
            };
            if (!q.floating) return W;
            const J = r3(q.floating, u.x), Q = r3(q.floating, u.y);
            return a ? {
                ...W,
                transform: "translate(" + J + "px, " + Q + "px)",
                ...v5(q.floating) >= 1.5 && {
                    willChange: "transform"
                }
            } : {
                position: n,
                left: J,
                top: Q
            };
        }, [
            n,
            a,
            q.floating,
            u.x,
            u.y
        ]);
        return X.useMemo(()=>({
                ...u,
                update: U,
                refs: K,
                elements: q,
                floatingStyles: te
            }), [
            u,
            U,
            K,
            q,
            te
        ]);
    }
    const x5 = (t, e)=>({
            ...Pne(t),
            options: [
                t,
                e
            ]
        }), jne = (t, e)=>({
            ...kne(t),
            options: [
                t,
                e
            ]
        }), b5 = (t, e)=>({
            ...One(t),
            options: [
                t,
                e
            ]
        }), Bne = (t, e)=>({
            ...Lne(t),
            options: [
                t,
                e
            ]
        });
    function i3(t) {
        return X.useMemo(()=>t.every((e)=>e == null) ? null : (e)=>{
                t.forEach((n)=>{
                    typeof n == "function" ? n(e) : n != null && (n.current = e);
                });
            }, t);
    }
    const w5 = {
        ...W9
    }, Une = w5.useInsertionEffect, zne = Une || ((t)=>t());
    function So(t) {
        const e = X.useRef(()=>{});
        return zne(()=>{
            e.current = t;
        }), X.useCallback(function() {
            for(var n = arguments.length, r = new Array(n), i = 0; i < n; i++)r[i] = arguments[i];
            return e.current == null ? void 0 : e.current(...r);
        }, []);
    }
    const yO = "ArrowUp", Jb = "ArrowDown", Bf = "ArrowLeft", Uf = "ArrowRight";
    function N_(t, e, n) {
        return Math.floor(t / e) !== n;
    }
    function y0(t, e) {
        return e < 0 || e >= t.current.length;
    }
    function hR(t, e) {
        return Vs(t, {
            disabledIndices: e
        });
    }
    function s3(t, e) {
        return Vs(t, {
            decrement: !0,
            startingIndex: t.current.length,
            disabledIndices: e
        });
    }
    function Vs(t, e) {
        let { startingIndex: n = -1, decrement: r = !1, disabledIndices: i, amount: s = 1 } = e === void 0 ? {} : e;
        const o = t.current;
        let a = n;
        do a += r ? -s : s;
        while (a >= 0 && a <= o.length - 1 && o1(o, a, i));
        return a;
    }
    function Vne(t, e) {
        let { event: n, orientation: r, loop: i, rtl: s, cols: o, disabledIndices: a, minIndex: l, maxIndex: c, prevIndex: u, stopEvent: f = !1 } = e, p = u;
        if (n.key === yO) {
            if (f && bo(n), u === -1) p = c;
            else if (p = Vs(t, {
                startingIndex: p,
                amount: o,
                decrement: !0,
                disabledIndices: a
            }), i && (u - o < l || p < 0)) {
                const g = u % o, x = c % o, S = c - (x - g);
                x === g ? p = c : p = x > g ? S : S - o;
            }
            y0(t, p) && (p = u);
        }
        if (n.key === Jb && (f && bo(n), u === -1 ? p = l : (p = Vs(t, {
            startingIndex: u,
            amount: o,
            disabledIndices: a
        }), i && u + o > c && (p = Vs(t, {
            startingIndex: u % o - o,
            amount: o,
            disabledIndices: a
        }))), y0(t, p) && (p = u)), r === "both") {
            const g = sy(u / o);
            n.key === (s ? Bf : Uf) && (f && bo(n), u % o !== o - 1 ? (p = Vs(t, {
                startingIndex: u,
                disabledIndices: a
            }), i && N_(p, o, g) && (p = Vs(t, {
                startingIndex: u - u % o - 1,
                disabledIndices: a
            }))) : i && (p = Vs(t, {
                startingIndex: u - u % o - 1,
                disabledIndices: a
            })), N_(p, o, g) && (p = u)), n.key === (s ? Uf : Bf) && (f && bo(n), u % o !== 0 ? (p = Vs(t, {
                startingIndex: u,
                decrement: !0,
                disabledIndices: a
            }), i && N_(p, o, g) && (p = Vs(t, {
                startingIndex: u + (o - u % o),
                decrement: !0,
                disabledIndices: a
            }))) : i && (p = Vs(t, {
                startingIndex: u + (o - u % o),
                decrement: !0,
                disabledIndices: a
            })), N_(p, o, g) && (p = u));
            const x = sy(c / o) === g;
            y0(t, p) && (i && x ? p = n.key === (s ? Uf : Bf) ? c : Vs(t, {
                startingIndex: u - u % o - 1,
                disabledIndices: a
            }) : p = u);
        }
        return p;
    }
    function Wne(t, e, n) {
        const r = [];
        let i = 0;
        return t.forEach((s, o)=>{
            let { width: a, height: l } = s, c = !1;
            for(n && (i = 0); !c;){
                const u = [];
                for(let f = 0; f < a; f++)for(let p = 0; p < l; p++)u.push(i + f + p * e);
                i % e + a <= e && u.every((f)=>r[f] == null) ? (u.forEach((f)=>{
                    r[f] = o;
                }), c = !0) : i++;
            }
        }), [
            ...r
        ];
    }
    function qne(t, e, n, r, i) {
        if (t === -1) return -1;
        const s = n.indexOf(t), o = e[t];
        switch(i){
            case "tl":
                return s;
            case "tr":
                return o ? s + o.width - 1 : s;
            case "bl":
                return o ? s + (o.height - 1) * r : s;
            case "br":
                return n.lastIndexOf(t);
        }
    }
    function Hne(t, e) {
        return e.flatMap((n, r)=>t.includes(n) ? [
                r
            ] : []);
    }
    function o1(t, e, n) {
        if (n) return n.includes(e);
        const r = t[e];
        return r == null || r.hasAttribute("disabled") || r.getAttribute("aria-disabled") === "true";
    }
    var zr = typeof document < "u" ? X.useLayoutEffect : X.useEffect;
    let o3 = !1, $ne = 0;
    const a3 = ()=>"floating-ui-" + Math.random().toString(36).slice(2, 6) + $ne++;
    function Gne() {
        const [t, e] = X.useState(()=>o3 ? a3() : void 0);
        return zr(()=>{
            t == null && e(a3());
        }, []), X.useEffect(()=>{
            o3 = !0;
        }, []), t;
    }
    const Xne = w5.useId, vO = Xne || Gne;
    function _5() {
        const t = new Map;
        return {
            emit (e, n) {
                var r;
                (r = t.get(e)) == null || r.forEach((i)=>i(n));
            },
            on (e, n) {
                t.set(e, [
                    ...t.get(e) || [],
                    n
                ]);
            },
            off (e, n) {
                var r;
                t.set(e, ((r = t.get(e)) == null ? void 0 : r.filter((i)=>i !== n)) || []);
            }
        };
    }
    const S5 = X.createContext(null), E5 = X.createContext(null), Qb = ()=>{
        var t;
        return ((t = X.useContext(S5)) == null ? void 0 : t.id) || null;
    }, fv = ()=>X.useContext(E5);
    function Kne(t) {
        const e = vO(), n = fv(), i = Qb();
        return zr(()=>{
            if (!e) return;
            const s = {
                id: e,
                parentId: i
            };
            return n?.addNode(s), ()=>{
                n?.removeNode(s);
            };
        }, [
            n,
            e,
            i
        ]), e;
    }
    function Yne(t) {
        const { children: e, id: n } = t, r = Qb();
        return v.jsx(S5.Provider, {
            value: X.useMemo(()=>({
                    id: n,
                    parentId: r
                }), [
                n,
                r
            ]),
            children: e
        });
    }
    function Zne(t) {
        const { children: e } = t, n = X.useRef([]), r = X.useCallback((o)=>{
            n.current = [
                ...n.current,
                o
            ];
        }, []), i = X.useCallback((o)=>{
            n.current = n.current.filter((a)=>a !== o);
        }, []), s = X.useState(()=>_5())[0];
        return v.jsx(E5.Provider, {
            value: X.useMemo(()=>({
                    nodesRef: n,
                    addNode: r,
                    removeNode: i,
                    events: s
                }), [
                r,
                i,
                s
            ]),
            children: e
        });
    }
    function nm(t) {
        return "data-floating-ui-" + t;
    }
    function Eo(t) {
        const e = X.useRef(t);
        return zr(()=>{
            e.current = t;
        }), e;
    }
    const l3 = nm("safe-polygon");
    function pR(t, e, n) {
        return n && !ib(n) ? 0 : typeof t == "number" ? t : t?.[e];
    }
    function Jne(t, e) {
        e === void 0 && (e = {});
        const { open: n, onOpenChange: r, dataRef: i, events: s, elements: o } = t, { enabled: a = !0, delay: l = 0, handleClose: c = null, mouseOnly: u = !1, restMs: f = 0, move: p = !0 } = e, g = fv(), x = Qb(), S = Eo(c), _ = Eo(l), b = Eo(n), M = X.useRef(), E = X.useRef(-1), T = X.useRef(), k = X.useRef(-1), N = X.useRef(!0), D = X.useRef(!1), L = X.useRef(()=>{}), R = X.useRef(!1), A = X.useCallback(()=>{
            var te;
            const W = (te = i.current.openEvent) == null ? void 0 : te.type;
            return W?.includes("mouse") && W !== "mousedown";
        }, [
            i
        ]);
        X.useEffect(()=>{
            if (!a) return;
            function te(W) {
                let { open: J } = W;
                J || (clearTimeout(E.current), clearTimeout(k.current), N.current = !0, R.current = !1);
            }
            return s.on("openchange", te), ()=>{
                s.off("openchange", te);
            };
        }, [
            a,
            s
        ]), X.useEffect(()=>{
            if (!a || !S.current || !n) return;
            function te(J) {
                A() && r(!1, J, "hover");
            }
            const W = Ts(o.floating).documentElement;
            return W.addEventListener("mouseleave", te), ()=>{
                W.removeEventListener("mouseleave", te);
            };
        }, [
            o.floating,
            n,
            r,
            a,
            S,
            A
        ]);
        const P = X.useCallback(function(te, W, J) {
            W === void 0 && (W = !0), J === void 0 && (J = "hover");
            const Q = pR(_.current, "close", M.current);
            Q && !T.current ? (clearTimeout(E.current), E.current = window.setTimeout(()=>r(!1, te, J), Q)) : W && (clearTimeout(E.current), r(!1, te, J));
        }, [
            _,
            r
        ]), B = So(()=>{
            L.current(), T.current = void 0;
        }), U = So(()=>{
            if (D.current) {
                const te = Ts(o.floating).body;
                te.style.pointerEvents = "", te.removeAttribute(l3), D.current = !1;
            }
        }), j = So(()=>i.current.openEvent ? [
                "click",
                "mousedown"
            ].includes(i.current.openEvent.type) : !1);
        X.useEffect(()=>{
            if (!a) return;
            function te(Y) {
                if (clearTimeout(E.current), N.current = !1, u && !ib(M.current) || f > 0 && !pR(_.current, "open")) return;
                const le = pR(_.current, "open", M.current);
                le ? E.current = window.setTimeout(()=>{
                    b.current || r(!0, Y, "hover");
                }, le) : n || r(!0, Y, "hover");
            }
            function W(Y) {
                if (j()) return;
                L.current();
                const le = Ts(o.floating);
                if (clearTimeout(k.current), R.current = !1, S.current && i.current.floatingContext) {
                    n || clearTimeout(E.current), T.current = S.current({
                        ...i.current.floatingContext,
                        tree: g,
                        x: Y.clientX,
                        y: Y.clientY,
                        onClose () {
                            U(), B(), j() || P(Y, !0, "safe-polygon");
                        }
                    });
                    const ie = T.current;
                    le.addEventListener("mousemove", ie), L.current = ()=>{
                        le.removeEventListener("mousemove", ie);
                    };
                    return;
                }
                (M.current === "touch" ? !Ms(o.floating, Y.relatedTarget) : !0) && P(Y);
            }
            function J(Y) {
                j() || i.current.floatingContext && (S.current == null || S.current({
                    ...i.current.floatingContext,
                    tree: g,
                    x: Y.clientX,
                    y: Y.clientY,
                    onClose () {
                        U(), B(), j() || P(Y);
                    }
                })(Y));
            }
            if (Pr(o.domReference)) {
                var Q;
                const Y = o.domReference;
                return n && Y.addEventListener("mouseleave", J), (Q = o.floating) == null || Q.addEventListener("mouseleave", J), p && Y.addEventListener("mousemove", te, {
                    once: !0
                }), Y.addEventListener("mouseenter", te), Y.addEventListener("mouseleave", W), ()=>{
                    var le;
                    n && Y.removeEventListener("mouseleave", J), (le = o.floating) == null || le.removeEventListener("mouseleave", J), p && Y.removeEventListener("mousemove", te), Y.removeEventListener("mouseenter", te), Y.removeEventListener("mouseleave", W);
                };
            }
        }, [
            o,
            a,
            t,
            u,
            f,
            p,
            P,
            B,
            U,
            r,
            n,
            b,
            g,
            _,
            S,
            i,
            j
        ]), zr(()=>{
            var te;
            if (a && n && (te = S.current) != null && te.__options.blockPointerEvents && A()) {
                D.current = !0;
                const J = o.floating;
                if (Pr(o.domReference) && J) {
                    var W;
                    const Q = Ts(o.floating).body;
                    Q.setAttribute(l3, "");
                    const Y = o.domReference, le = g == null || (W = g.nodesRef.current.find((ue)=>ue.id === x)) == null || (W = W.context) == null ? void 0 : W.elements.floating;
                    return le && (le.style.pointerEvents = ""), Q.style.pointerEvents = "none", Y.style.pointerEvents = "auto", J.style.pointerEvents = "auto", ()=>{
                        Q.style.pointerEvents = "", Y.style.pointerEvents = "", J.style.pointerEvents = "";
                    };
                }
            }
        }, [
            a,
            n,
            x,
            o,
            g,
            S,
            A
        ]), zr(()=>{
            n || (M.current = void 0, R.current = !1, B(), U());
        }, [
            n,
            B,
            U
        ]), X.useEffect(()=>()=>{
                B(), clearTimeout(E.current), clearTimeout(k.current), U();
            }, [
            a,
            o.domReference,
            B,
            U
        ]);
        const K = X.useMemo(()=>{
            function te(W) {
                M.current = W.pointerType;
            }
            return {
                onPointerDown: te,
                onPointerEnter: te,
                onMouseMove (W) {
                    const { nativeEvent: J } = W;
                    function Q() {
                        !N.current && !b.current && r(!0, J, "hover");
                    }
                    u && !ib(M.current) || n || f === 0 || R.current && W.movementX ** 2 + W.movementY ** 2 < 2 || (clearTimeout(k.current), M.current === "touch" ? Q() : (R.current = !0, k.current = window.setTimeout(Q, f)));
                }
            };
        }, [
            u,
            r,
            n,
            b,
            f
        ]), q = X.useMemo(()=>({
                onMouseEnter () {
                    clearTimeout(E.current);
                },
                onMouseLeave (te) {
                    j() || P(te.nativeEvent, !1);
                }
            }), [
            P,
            j
        ]);
        return X.useMemo(()=>a ? {
                reference: K,
                floating: q
            } : {}, [
            a,
            K,
            q
        ]);
    }
    let c3 = 0;
    function mp(t, e) {
        e === void 0 && (e = {});
        const { preventScroll: n = !1, cancelPrevious: r = !0, sync: i = !1 } = e;
        r && cancelAnimationFrame(c3);
        const s = ()=>t?.focus({
                preventScroll: n
            });
        i ? s() : c3 = requestAnimationFrame(s);
    }
    function u3(t, e) {
        var n;
        let r = [], i = (n = t.find((s)=>s.id === e)) == null ? void 0 : n.parentId;
        for(; i;){
            const s = t.find((o)=>o.id === i);
            i = s?.parentId, s && (r = r.concat(s));
        }
        return r;
    }
    function Ay(t, e) {
        let n = t.filter((i)=>{
            var s;
            return i.parentId === e && ((s = i.context) == null ? void 0 : s.open);
        }), r = n;
        for(; r.length;)r = t.filter((i)=>{
            var s;
            return (s = r) == null ? void 0 : s.some((o)=>{
                var a;
                return i.parentId === o.id && ((a = i.context) == null ? void 0 : a.open);
            });
        }), n = n.concat(r);
        return n;
    }
    function Qne(t, e) {
        let n, r = -1;
        function i(s, o) {
            o > r && (n = s, r = o), Ay(t, s).forEach((l)=>{
                i(l.id, o + 1);
            });
        }
        return i(e, 0), t.find((s)=>s.id === n);
    }
    let wg = new WeakMap, P_ = new WeakSet, k_ = {}, mR = 0;
    const ere = ()=>typeof HTMLElement < "u" && "inert" in HTMLElement.prototype, M5 = (t)=>t && (t.host || M5(t.parentNode)), tre = (t, e)=>e.map((n)=>{
            if (t.contains(n)) return n;
            const r = M5(n);
            return t.contains(r) ? r : null;
        }).filter((n)=>n != null);
    function nre(t, e, n, r) {
        const i = "data-floating-ui-inert", s = r ? "inert" : n ? "aria-hidden" : null, o = tre(e, t), a = new Set, l = new Set(o), c = [];
        k_[i] || (k_[i] = new WeakMap);
        const u = k_[i];
        o.forEach(f), p(e), a.clear();
        function f(g) {
            !g || a.has(g) || (a.add(g), g.parentNode && f(g.parentNode));
        }
        function p(g) {
            !g || l.has(g) || [].forEach.call(g.children, (x)=>{
                if (rh(x) !== "script") if (a.has(x)) p(x);
                else {
                    const S = s ? x.getAttribute(s) : null, _ = S !== null && S !== "false", b = wg.get(x) || 0, M = s ? b + 1 : b, E = (u.get(x) || 0) + 1;
                    wg.set(x, M), u.set(x, E), c.push(x), M === 1 && _ && P_.add(x), E === 1 && x.setAttribute(i, ""), !_ && s && x.setAttribute(s, "true");
                }
            });
        }
        return mR++, ()=>{
            c.forEach((g)=>{
                const x = wg.get(g) || 0, S = s ? x - 1 : x, _ = (u.get(g) || 0) - 1;
                wg.set(g, S), u.set(g, _), S || (!P_.has(g) && s && g.removeAttribute(s), P_.delete(g)), _ || g.removeAttribute(i);
            }), mR--, mR || (wg = new WeakMap, wg = new WeakMap, P_ = new WeakSet, k_ = {});
        };
    }
    function d3(t, e, n) {
        e === void 0 && (e = !1), n === void 0 && (n = !1);
        const r = Ts(t[0]).body;
        return nre(t.concat(Array.from(r.querySelectorAll("[aria-live]"))), r, e, n);
    }
    const dT = ()=>({
            getShadowRoot: !0,
            displayCheck: typeof ResizeObserver == "function" && ResizeObserver.toString().includes("[native code]") ? "full" : "none"
        });
    function T5(t, e) {
        const n = uT(t, dT());
        e === "prev" && n.reverse();
        const r = n.indexOf(Hl(Ts(t)));
        return n.slice(r + 1)[0];
    }
    function C5() {
        return T5(document.body, "next");
    }
    function I5() {
        return T5(document.body, "prev");
    }
    function v0(t, e) {
        const n = e || t.currentTarget, r = t.relatedTarget;
        return !r || !Ms(n, r);
    }
    function rre(t) {
        uT(t, dT()).forEach((n)=>{
            n.dataset.tabindex = n.getAttribute("tabindex") || "", n.setAttribute("tabindex", "-1");
        });
    }
    function f3(t) {
        t.querySelectorAll("[data-tabindex]").forEach((n)=>{
            const r = n.dataset.tabindex;
            delete n.dataset.tabindex, r ? n.setAttribute("tabindex", r) : n.removeAttribute("tabindex");
        });
    }
    const fT = {
        border: 0,
        clip: "rect(0 0 0 0)",
        height: "1px",
        margin: "-1px",
        overflow: "hidden",
        padding: 0,
        position: "fixed",
        whiteSpace: "nowrap",
        width: "1px",
        top: 0,
        left: 0
    };
    let ire;
    function h3(t) {
        t.key === "Tab" && (t.target, clearTimeout(ire));
    }
    const SE = X.forwardRef(function(e, n) {
        const [r, i] = X.useState();
        zr(()=>(n5() && i("button"), document.addEventListener("keydown", h3), ()=>{
                document.removeEventListener("keydown", h3);
            }), []);
        const s = {
            ref: n,
            tabIndex: 0,
            role: r,
            "aria-hidden": r ? void 0 : !0,
            [nm("focus-guard")]: "",
            style: fT
        };
        return v.jsx("span", {
            ...e,
            ...s
        });
    }), R5 = X.createContext(null), p3 = nm("portal");
    function sre(t) {
        t === void 0 && (t = {});
        const { id: e, root: n } = t, r = vO(), i = A5(), [s, o] = X.useState(null), a = X.useRef(null);
        return zr(()=>()=>{
                s?.remove(), queueMicrotask(()=>{
                    a.current = null;
                });
            }, [
            s
        ]), zr(()=>{
            if (!r || a.current) return;
            const l = e ? document.getElementById(e) : null;
            if (!l) return;
            const c = document.createElement("div");
            c.id = r, c.setAttribute(p3, ""), l.appendChild(c), a.current = c, o(c);
        }, [
            e,
            r
        ]), zr(()=>{
            if (n === null || !r || a.current) return;
            let l = n || i?.portalNode;
            l && !Pr(l) && (l = l.current), l = l || document.body;
            let c = null;
            e && (c = document.createElement("div"), c.id = e, l.appendChild(c));
            const u = document.createElement("div");
            u.id = r, u.setAttribute(p3, ""), l = c || l, l.appendChild(u), a.current = u, o(u);
        }, [
            e,
            n,
            r,
            i
        ]), s;
    }
    function xO(t) {
        const { children: e, id: n, root: r, preserveTabOrder: i = !0 } = t, s = sre({
            id: n,
            root: r
        }), [o, a] = X.useState(null), l = X.useRef(null), c = X.useRef(null), u = X.useRef(null), f = X.useRef(null), p = o?.modal, g = o?.open, x = !!o && !o.modal && o.open && i && !!(r || s);
        return X.useEffect(()=>{
            if (!s || !i || p) return;
            function S(_) {
                s && v0(_) && (_.type === "focusin" ? f3 : rre)(s);
            }
            return s.addEventListener("focusin", S, !0), s.addEventListener("focusout", S, !0), ()=>{
                s.removeEventListener("focusin", S, !0), s.removeEventListener("focusout", S, !0);
            };
        }, [
            s,
            i,
            p
        ]), X.useEffect(()=>{
            s && (g || f3(s));
        }, [
            g,
            s
        ]), v.jsxs(R5.Provider, {
            value: X.useMemo(()=>({
                    preserveTabOrder: i,
                    beforeOutsideRef: l,
                    afterOutsideRef: c,
                    beforeInsideRef: u,
                    afterInsideRef: f,
                    portalNode: s,
                    setFocusManagerState: a
                }), [
                i,
                s
            ]),
            children: [
                x && s && v.jsx(SE, {
                    "data-type": "outside",
                    ref: l,
                    onFocus: (S)=>{
                        if (v0(S, s)) {
                            var _;
                            (_ = u.current) == null || _.focus();
                        } else {
                            const b = I5() || o?.domReference;
                            b?.focus();
                        }
                    }
                }),
                x && s && v.jsx("span", {
                    "aria-owns": s.id,
                    style: fT
                }),
                s && WM.createPortal(e, s),
                x && s && v.jsx(SE, {
                    "data-type": "outside",
                    ref: c,
                    onFocus: (S)=>{
                        if (v0(S, s)) {
                            var _;
                            (_ = f.current) == null || _.focus();
                        } else {
                            const b = C5() || o?.domReference;
                            b?.focus(), o?.closeOnFocusOut && o?.onOpenChange(!1, S.nativeEvent, "focus-out");
                        }
                    }
                })
            ]
        });
    }
    const A5 = ()=>X.useContext(R5), AP = "data-floating-ui-focusable";
    function NP(t) {
        return t ? t.hasAttribute(AP) ? t : t.querySelector("[" + AP + "]") || t : null;
    }
    const ore = 20;
    let gp = [];
    function gR(t) {
        gp = gp.filter((e)=>e.isConnected), t && rh(t) !== "body" && (gp.push(t), gp.length > ore && (gp = gp.slice(-20)));
    }
    function m3() {
        return gp.slice().reverse().find((t)=>t.isConnected);
    }
    function are(t) {
        const e = dT();
        return une(t, e) ? t : uT(t, e)[0] || t;
    }
    const lre = X.forwardRef(function(e, n) {
        return v.jsx("button", {
            ...e,
            type: "button",
            ref: n,
            tabIndex: -1,
            style: fT
        });
    });
    function N5(t) {
        const { context: e, children: n, disabled: r = !1, order: i = [
            "content"
        ], guards: s = !0, initialFocus: o = 0, returnFocus: a = !0, restoreFocus: l = !1, modal: c = !0, visuallyHiddenDismiss: u = !1, closeOnFocusOut: f = !0, outsideElementsInert: p = !1 } = t, { open: g, onOpenChange: x, events: S, dataRef: _, elements: { domReference: b, floating: M } } = e, E = So(()=>{
            var Ce;
            return (Ce = _.current.floatingContext) == null ? void 0 : Ce.nodeId;
        }), T = typeof o == "number" && o < 0, k = r5(b) && T, N = ere(), D = N ? s : !0, L = !D || N && p, R = Eo(i), A = Eo(o), P = Eo(a), B = fv(), U = A5(), j = X.useRef(null), K = X.useRef(null), q = X.useRef(!1), te = X.useRef(!1), W = X.useRef(-1), J = U != null, Q = NP(M), Y = So(function(Ce) {
            return Ce === void 0 && (Ce = Q), Ce ? uT(Ce, dT()) : [];
        }), le = So((Ce)=>{
            const Ne = Y(Ce);
            return R.current.map((Ve)=>b && Ve === "reference" ? b : Q && Ve === "floating" ? Q : Ne).filter(Boolean).flat();
        });
        X.useEffect(()=>{
            if (r || !c) return;
            function Ce(Ve) {
                if (Ve.key === "Tab") {
                    Ms(Q, Hl(Ts(Q))) && Y().length === 0 && !k && bo(Ve);
                    const we = le(), Me = If(Ve);
                    R.current[0] === "reference" && Me === b && (bo(Ve), Ve.shiftKey ? mp(we[we.length - 1]) : mp(we[1])), R.current[1] === "floating" && Me === Q && Ve.shiftKey && (bo(Ve), mp(we[0]));
                }
            }
            const Ne = Ts(Q);
            return Ne.addEventListener("keydown", Ce), ()=>{
                Ne.removeEventListener("keydown", Ce);
            };
        }, [
            r,
            b,
            Q,
            c,
            R,
            k,
            Y,
            le
        ]), X.useEffect(()=>{
            if (r || !M) return;
            function Ce(Ne) {
                const Ve = If(Ne), Me = Y().indexOf(Ve);
                Me !== -1 && (W.current = Me);
            }
            return M.addEventListener("focusin", Ce), ()=>{
                M.removeEventListener("focusin", Ce);
            };
        }, [
            r,
            M,
            Y
        ]), X.useEffect(()=>{
            if (r || !f) return;
            function Ce() {
                te.current = !0, setTimeout(()=>{
                    te.current = !1;
                });
            }
            function Ne(Ve) {
                const we = Ve.relatedTarget;
                queueMicrotask(()=>{
                    const Me = E(), se = !(Ms(b, we) || Ms(M, we) || Ms(we, M) || Ms(U?.portalNode, we) || we != null && we.hasAttribute(nm("focus-guard")) || B && (Ay(B.nodesRef.current, Me).find((Ye)=>{
                        var Be, it;
                        return Ms((Be = Ye.context) == null ? void 0 : Be.elements.floating, we) || Ms((it = Ye.context) == null ? void 0 : it.elements.domReference, we);
                    }) || u3(B.nodesRef.current, Me).find((Ye)=>{
                        var Be, it, de;
                        return [
                            (Be = Ye.context) == null ? void 0 : Be.elements.floating,
                            NP((it = Ye.context) == null ? void 0 : it.elements.floating)
                        ].includes(we) || ((de = Ye.context) == null ? void 0 : de.elements.domReference) === we;
                    })));
                    if (l && se && Hl(Ts(Q)) === Ts(Q).body) {
                        Ui(Q) && Q.focus();
                        const Ye = W.current, Be = Y(), it = Be[Ye] || Be[Be.length - 1] || Q;
                        Ui(it) && it.focus();
                    }
                    (k || !c) && we && se && !te.current && we !== m3() && (q.current = !0, x(!1, Ve, "focus-out"));
                });
            }
            if (M && Ui(b)) return b.addEventListener("focusout", Ne), b.addEventListener("pointerdown", Ce), M.addEventListener("focusout", Ne), ()=>{
                b.removeEventListener("focusout", Ne), b.removeEventListener("pointerdown", Ce), M.removeEventListener("focusout", Ne);
            };
        }, [
            r,
            b,
            M,
            Q,
            c,
            B,
            U,
            x,
            f,
            l,
            Y,
            k,
            E
        ]);
        const ue = X.useRef(null), ie = X.useRef(null), he = i3([
            ue,
            U?.beforeInsideRef
        ]), ge = i3([
            ie,
            U?.afterInsideRef
        ]);
        X.useEffect(()=>{
            var Ce;
            if (r || !M) return;
            const Ne = Array.from((U == null || (Ce = U.portalNode) == null ? void 0 : Ce.querySelectorAll("[" + nm("portal") + "]")) || []), Ve = B && !c ? u3(B?.nodesRef.current, E()).map((se)=>{
                var Ye;
                return (Ye = se.context) == null ? void 0 : Ye.elements.floating;
            }) : [], we = [
                M,
                ...Ne,
                ...Ve,
                j.current,
                K.current,
                ue.current,
                ie.current,
                U?.beforeOutsideRef.current,
                U?.afterOutsideRef.current,
                R.current.includes("reference") || k ? b : null
            ].filter((se)=>se != null), Me = c || k ? d3(we, !L, L) : d3(we);
            return ()=>{
                Me();
            };
        }, [
            r,
            b,
            M,
            c,
            R,
            U,
            k,
            D,
            L,
            B,
            E
        ]), zr(()=>{
            if (r || !Ui(Q)) return;
            const Ce = Ts(Q), Ne = Hl(Ce);
            queueMicrotask(()=>{
                const Ve = le(Q), we = A.current, Me = (typeof we == "number" ? Ve[we] : we.current) || Q, se = Ms(Q, Ne);
                !T && !se && g && mp(Me, {
                    preventScroll: Me === Q
                });
            });
        }, [
            r,
            g,
            Q,
            T,
            le,
            A
        ]), zr(()=>{
            if (r || !Q) return;
            let Ce = !1;
            const Ne = Ts(Q), Ve = Hl(Ne);
            let Me = _.current.openEvent;
            gR(Ve);
            function se(it) {
                let { open: de, reason: ae, event: oe, nested: $ } = it;
                de && (Me = oe), ae === "escape-key" && b && gR(b), [
                    "hover",
                    "safe-polygon"
                ].includes(ae) && oe.type === "mouseleave" && (q.current = !0), ae === "outside-press" && ($ ? (q.current = !1, Ce = !0) : q.current = !(t5(oe) || fO(oe)));
            }
            S.on("openchange", se);
            const Ye = Ne.createElement("span");
            Ye.setAttribute("tabindex", "-1"), Ye.setAttribute("aria-hidden", "true"), Object.assign(Ye.style, fT), J && b && b.insertAdjacentElement("afterend", Ye);
            function Be() {
                return typeof P.current == "boolean" ? m3() || Ye : P.current.current || Ye;
            }
            return ()=>{
                S.off("openchange", se);
                const it = Hl(Ne), de = Ms(M, it) || B && Ay(B.nodesRef.current, E()).some(($)=>{
                    var H;
                    return Ms((H = $.context) == null ? void 0 : H.elements.floating, it);
                });
                (de || Me && [
                    "click",
                    "mousedown"
                ].includes(Me.type)) && b && gR(b);
                const oe = Be();
                queueMicrotask(()=>{
                    const $ = are(oe);
                    P.current && !q.current && Ui($) && (!($ !== it && it !== Ne.body) || de) && $.focus({
                        preventScroll: Ce
                    }), Ye.remove();
                });
            };
        }, [
            r,
            M,
            Q,
            P,
            _,
            S,
            B,
            J,
            b,
            E
        ]), X.useEffect(()=>{
            queueMicrotask(()=>{
                q.current = !1;
            });
        }, [
            r
        ]), zr(()=>{
            if (!r && U) return U.setFocusManagerState({
                modal: c,
                closeOnFocusOut: f,
                open: g,
                onOpenChange: x,
                domReference: b
            }), ()=>{
                U.setFocusManagerState(null);
            };
        }, [
            r,
            U,
            c,
            g,
            x,
            f,
            b
        ]), zr(()=>{
            if (r || !Q || typeof MutationObserver != "function" || T) return;
            const Ce = ()=>{
                const Ve = Q.getAttribute("tabindex"), we = Y(), Me = Hl(Ts(M)), se = we.indexOf(Me);
                se !== -1 && (W.current = se), R.current.includes("floating") || Me !== b && we.length === 0 ? Ve !== "0" && Q.setAttribute("tabindex", "0") : Ve !== "-1" && Q.setAttribute("tabindex", "-1");
            };
            Ce();
            const Ne = new MutationObserver(Ce);
            return Ne.observe(Q, {
                childList: !0,
                subtree: !0,
                attributes: !0
            }), ()=>{
                Ne.disconnect();
            };
        }, [
            r,
            M,
            Q,
            b,
            R,
            Y,
            T
        ]);
        function ve(Ce) {
            return r || !u || !c ? null : v.jsx(lre, {
                ref: Ce === "start" ? j : K,
                onClick: (Ne)=>x(!1, Ne.nativeEvent),
                children: typeof u == "string" ? u : "Dismiss"
            });
        }
        const Ee = !r && D && (c ? !k : !0) && (J || c);
        return v.jsxs(v.Fragment, {
            children: [
                Ee && v.jsx(SE, {
                    "data-type": "inside",
                    ref: he,
                    onFocus: (Ce)=>{
                        if (c) {
                            const Ve = le();
                            mp(i[0] === "reference" ? Ve[0] : Ve[Ve.length - 1]);
                        } else if (U != null && U.preserveTabOrder && U.portalNode) if (q.current = !1, v0(Ce, U.portalNode)) {
                            const Ve = C5() || b;
                            Ve?.focus();
                        } else {
                            var Ne;
                            (Ne = U.beforeOutsideRef.current) == null || Ne.focus();
                        }
                    }
                }),
                !k && ve("start"),
                n,
                ve("end"),
                Ee && v.jsx(SE, {
                    "data-type": "inside",
                    ref: ge,
                    onFocus: (Ce)=>{
                        if (c) mp(le()[0]);
                        else if (U != null && U.preserveTabOrder && U.portalNode) if (f && (q.current = !0), v0(Ce, U.portalNode)) {
                            const Ve = I5() || b;
                            Ve?.focus();
                        } else {
                            var Ne;
                            (Ne = U.afterOutsideRef.current) == null || Ne.focus();
                        }
                    }
                })
            ]
        });
    }
    let O_ = 0;
    function cre() {
        const t = /iP(hone|ad|od)|iOS/.test(dO()), e = document.body.style, r = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft ? "paddingLeft" : "paddingRight", i = window.innerWidth - document.documentElement.clientWidth, s = e.left ? parseFloat(e.left) : window.scrollX, o = e.top ? parseFloat(e.top) : window.scrollY;
        if (e.overflow = "hidden", i && (e[r] = i + "px"), t) {
            var a, l;
            const c = ((a = window.visualViewport) == null ? void 0 : a.offsetLeft) || 0, u = ((l = window.visualViewport) == null ? void 0 : l.offsetTop) || 0;
            Object.assign(e, {
                position: "fixed",
                top: -(o - Math.floor(u)) + "px",
                left: -(s - Math.floor(c)) + "px",
                right: "0"
            });
        }
        return ()=>{
            Object.assign(e, {
                overflow: "",
                [r]: ""
            }), t && (Object.assign(e, {
                position: "",
                top: "",
                left: "",
                right: ""
            }), window.scrollTo(s, o));
        };
    }
    let g3 = ()=>{};
    const ure = X.forwardRef(function(e, n) {
        const { lockScroll: r = !1, ...i } = e;
        return zr(()=>{
            if (r) return O_++, O_ === 1 && (g3 = cre()), ()=>{
                O_--, O_ === 0 && g3();
            };
        }, [
            r
        ]), v.jsx("div", {
            ref: n,
            ...i,
            style: {
                position: "fixed",
                overflow: "auto",
                top: 0,
                right: 0,
                bottom: 0,
                left: 0,
                ...i.style
            }
        });
    });
    function y3(t) {
        return Ui(t.target) && t.target.tagName === "BUTTON";
    }
    function v3(t) {
        return hO(t);
    }
    function bO(t, e) {
        e === void 0 && (e = {});
        const { open: n, onOpenChange: r, dataRef: i, elements: { domReference: s } } = t, { enabled: o = !0, event: a = "click", toggle: l = !0, ignoreMouse: c = !1, keyboardHandlers: u = !0, stickIfOpen: f = !0 } = e, p = X.useRef(), g = X.useRef(!1), x = X.useMemo(()=>({
                onPointerDown (S) {
                    p.current = S.pointerType;
                },
                onMouseDown (S) {
                    const _ = p.current;
                    S.button === 0 && a !== "click" && (ib(_, !0) && c || (n && l && (!(i.current.openEvent && f) || i.current.openEvent.type === "mousedown") ? r(!1, S.nativeEvent, "click") : (S.preventDefault(), r(!0, S.nativeEvent, "click"))));
                },
                onClick (S) {
                    const _ = p.current;
                    if (a === "mousedown" && p.current) {
                        p.current = void 0;
                        return;
                    }
                    ib(_, !0) && c || (n && l && (!(i.current.openEvent && f) || i.current.openEvent.type === "click") ? r(!1, S.nativeEvent, "click") : r(!0, S.nativeEvent, "click"));
                },
                onKeyDown (S) {
                    p.current = void 0, !(S.defaultPrevented || !u || y3(S)) && (S.key === " " && !v3(s) && (S.preventDefault(), g.current = !0), S.key === "Enter" && r(!(n && l), S.nativeEvent, "click"));
                },
                onKeyUp (S) {
                    S.defaultPrevented || !u || y3(S) || v3(s) || S.key === " " && g.current && (g.current = !1, r(!(n && l), S.nativeEvent, "click"));
                }
            }), [
            i,
            s,
            a,
            c,
            u,
            r,
            n,
            f,
            l
        ]);
        return X.useMemo(()=>o ? {
                reference: x
            } : {}, [
            o,
            x
        ]);
    }
    const dre = {
        pointerdown: "onPointerDown",
        mousedown: "onMouseDown",
        click: "onClick"
    }, fre = {
        pointerdown: "onPointerDownCapture",
        mousedown: "onMouseDownCapture",
        click: "onClickCapture"
    }, x3 = (t)=>{
        var e, n;
        return {
            escapeKey: typeof t == "boolean" ? t : (e = t?.escapeKey) != null ? e : !1,
            outsidePress: typeof t == "boolean" ? t : (n = t?.outsidePress) != null ? n : !0
        };
    };
    function wO(t, e) {
        e === void 0 && (e = {});
        const { open: n, onOpenChange: r, elements: i, dataRef: s } = t, { enabled: o = !0, escapeKey: a = !0, outsidePress: l = !0, outsidePressEvent: c = "pointerdown", referencePress: u = !1, referencePressEvent: f = "pointerdown", ancestorScroll: p = !1, bubbles: g, capture: x } = e, S = fv(), _ = So(typeof l == "function" ? l : ()=>!1), b = typeof l == "function" ? _ : l, M = X.useRef(!1), E = X.useRef(!1), { escapeKey: T, outsidePress: k } = x3(g), { escapeKey: N, outsidePress: D } = x3(x), L = X.useRef(!1), R = So((K)=>{
            var q;
            if (!n || !o || !a || K.key !== "Escape" || L.current) return;
            const te = (q = s.current.floatingContext) == null ? void 0 : q.nodeId, W = S ? Ay(S.nodesRef.current, te) : [];
            if (!T && (K.stopPropagation(), W.length > 0)) {
                let J = !0;
                if (W.forEach((Q)=>{
                    var Y;
                    if ((Y = Q.context) != null && Y.open && !Q.context.dataRef.current.__escapeKeyBubbles) {
                        J = !1;
                        return;
                    }
                }), !J) return;
            }
            r(!1, Lte(K) ? K.nativeEvent : K, "escape-key");
        }), A = So((K)=>{
            var q;
            const te = ()=>{
                var W;
                R(K), (W = If(K)) == null || W.removeEventListener("keydown", te);
            };
            (q = If(K)) == null || q.addEventListener("keydown", te);
        }), P = So((K)=>{
            var q;
            const te = M.current;
            M.current = !1;
            const W = E.current;
            if (E.current = !1, c === "click" && W || te || typeof b == "function" && !b(K)) return;
            const J = If(K), Q = "[" + nm("inert") + "]", Y = Ts(i.floating).querySelectorAll(Q);
            let le = Pr(J) ? J : null;
            for(; le && !nd(le);){
                const ge = hd(le);
                if (nd(ge) || !Pr(ge)) break;
                le = ge;
            }
            if (Y.length && Pr(J) && !Dte(J) && !Ms(J, i.floating) && Array.from(Y).every((ge)=>!Ms(le, ge))) return;
            if (Ui(J) && j) {
                const ge = nd(J), ve = cl(J), Ee = /auto|scroll/, Ce = ge || Ee.test(ve.overflowX), Ne = ge || Ee.test(ve.overflowY), Ve = Ce && J.clientWidth > 0 && J.scrollWidth > J.clientWidth, we = Ne && J.clientHeight > 0 && J.scrollHeight > J.clientHeight, Me = ve.direction === "rtl", se = we && (Me ? K.offsetX <= J.offsetWidth - J.clientWidth : K.offsetX > J.clientWidth), Ye = Ve && K.offsetY > J.clientHeight;
                if (se || Ye) return;
            }
            const ue = (q = s.current.floatingContext) == null ? void 0 : q.nodeId, ie = S && Ay(S.nodesRef.current, ue).some((ge)=>{
                var ve;
                return uR(K, (ve = ge.context) == null ? void 0 : ve.elements.floating);
            });
            if (uR(K, i.floating) || uR(K, i.domReference) || ie) return;
            const he = S ? Ay(S.nodesRef.current, ue) : [];
            if (he.length > 0) {
                let ge = !0;
                if (he.forEach((ve)=>{
                    var Ee;
                    if ((Ee = ve.context) != null && Ee.open && !ve.context.dataRef.current.__outsidePressBubbles) {
                        ge = !1;
                        return;
                    }
                }), !ge) return;
            }
            r(!1, K, "outside-press");
        }), B = So((K)=>{
            var q;
            const te = ()=>{
                var W;
                P(K), (W = If(K)) == null || W.removeEventListener(c, te);
            };
            (q = If(K)) == null || q.addEventListener(c, te);
        });
        X.useEffect(()=>{
            if (!n || !o) return;
            s.current.__escapeKeyBubbles = T, s.current.__outsidePressBubbles = k;
            let K = -1;
            function q(Y) {
                r(!1, Y, "ancestor-scroll");
            }
            function te() {
                window.clearTimeout(K), L.current = !0;
            }
            function W() {
                K = window.setTimeout(()=>{
                    L.current = !1;
                }, lT() ? 5 : 0);
            }
            const J = Ts(i.floating);
            a && (J.addEventListener("keydown", N ? A : R, N), J.addEventListener("compositionstart", te), J.addEventListener("compositionend", W)), b && J.addEventListener(c, D ? B : P, D);
            let Q = [];
            return p && (Pr(i.domReference) && (Q = jf(i.domReference)), Pr(i.floating) && (Q = Q.concat(jf(i.floating))), !Pr(i.reference) && i.reference && i.reference.contextElement && (Q = Q.concat(jf(i.reference.contextElement)))), Q = Q.filter((Y)=>{
                var le;
                return Y !== ((le = J.defaultView) == null ? void 0 : le.visualViewport);
            }), Q.forEach((Y)=>{
                Y.addEventListener("scroll", q, {
                    passive: !0
                });
            }), ()=>{
                a && (J.removeEventListener("keydown", N ? A : R, N), J.removeEventListener("compositionstart", te), J.removeEventListener("compositionend", W)), b && J.removeEventListener(c, D ? B : P, D), Q.forEach((Y)=>{
                    Y.removeEventListener("scroll", q);
                }), window.clearTimeout(K);
            };
        }, [
            s,
            i,
            a,
            b,
            c,
            n,
            r,
            p,
            o,
            T,
            k,
            R,
            N,
            A,
            P,
            D,
            B
        ]), X.useEffect(()=>{
            M.current = !1;
        }, [
            b,
            c
        ]);
        const U = X.useMemo(()=>({
                onKeyDown: R,
                ...u && {
                    [dre[f]]: (K)=>{
                        r(!1, K.nativeEvent, "reference-press");
                    },
                    ...f !== "click" && {
                        onClick (K) {
                            r(!1, K.nativeEvent, "reference-press");
                        }
                    }
                }
            }), [
            R,
            r,
            u,
            f
        ]), j = X.useMemo(()=>({
                onKeyDown: R,
                onMouseDown () {
                    E.current = !0;
                },
                onMouseUp () {
                    E.current = !0;
                },
                [fre[c]]: ()=>{
                    M.current = !0;
                }
            }), [
            R,
            c
        ]);
        return X.useMemo(()=>o ? {
                reference: U,
                floating: j
            } : {}, [
            o,
            U,
            j
        ]);
    }
    function hre(t) {
        const { open: e = !1, onOpenChange: n, elements: r } = t, i = vO(), s = X.useRef({}), [o] = X.useState(()=>_5()), a = Qb() != null, [l, c] = X.useState(r.reference), u = So((g, x, S)=>{
            s.current.openEvent = g ? x : void 0, o.emit("openchange", {
                open: g,
                event: x,
                reason: S,
                nested: a
            }), n?.(g, x, S);
        }), f = X.useMemo(()=>({
                setPositionReference: c
            }), []), p = X.useMemo(()=>({
                reference: l || r.reference || null,
                floating: r.floating || null,
                domReference: r.reference
            }), [
            l,
            r.reference,
            r.floating
        ]);
        return X.useMemo(()=>({
                dataRef: s,
                open: e,
                onOpenChange: u,
                elements: p,
                events: o,
                floatingId: i,
                refs: f
            }), [
            e,
            u,
            p,
            o,
            i,
            f
        ]);
    }
    function _O(t) {
        t === void 0 && (t = {});
        const { nodeId: e } = t, n = hre({
            ...t,
            elements: {
                reference: null,
                floating: null,
                ...t.elements
            }
        }), r = t.rootContext || n, i = r.elements, [s, o] = X.useState(null), [a, l] = X.useState(null), u = i?.domReference || s, f = X.useRef(null), p = fv();
        zr(()=>{
            u && (f.current = u);
        }, [
            u
        ]);
        const g = Fne({
            ...t,
            elements: {
                ...i,
                ...a && {
                    reference: a
                }
            }
        }), x = X.useCallback((E)=>{
            const T = Pr(E) ? {
                getBoundingClientRect: ()=>E.getBoundingClientRect(),
                contextElement: E
            } : E;
            l(T), g.refs.setReference(T);
        }, [
            g.refs
        ]), S = X.useCallback((E)=>{
            (Pr(E) || E === null) && (f.current = E, o(E)), (Pr(g.refs.reference.current) || g.refs.reference.current === null || E !== null && !Pr(E)) && g.refs.setReference(E);
        }, [
            g.refs
        ]), _ = X.useMemo(()=>({
                ...g.refs,
                setReference: S,
                setPositionReference: x,
                domReference: f
            }), [
            g.refs,
            S,
            x
        ]), b = X.useMemo(()=>({
                ...g.elements,
                domReference: u
            }), [
            g.elements,
            u
        ]), M = X.useMemo(()=>({
                ...g,
                ...r,
                refs: _,
                elements: b,
                nodeId: e
            }), [
            g,
            _,
            b,
            e,
            r
        ]);
        return zr(()=>{
            r.dataRef.current.floatingContext = M;
            const E = p?.nodesRef.current.find((T)=>T.id === e);
            E && (E.context = M);
        }), X.useMemo(()=>({
                ...g,
                context: M,
                refs: _,
                elements: b
            }), [
            g,
            _,
            b,
            M
        ]);
    }
    function pre(t, e) {
        e === void 0 && (e = {});
        const { open: n, onOpenChange: r, events: i, dataRef: s, elements: o } = t, { enabled: a = !0, visibleOnly: l = !0 } = e, c = X.useRef(!1), u = X.useRef(), f = X.useRef(!0);
        X.useEffect(()=>{
            if (!a) return;
            const g = ia(o.domReference);
            function x() {
                !n && Ui(o.domReference) && o.domReference === Hl(Ts(o.domReference)) && (c.current = !0);
            }
            function S() {
                f.current = !0;
            }
            return g.addEventListener("blur", x), g.addEventListener("keydown", S, !0), ()=>{
                g.removeEventListener("blur", x), g.removeEventListener("keydown", S, !0);
            };
        }, [
            o.domReference,
            n,
            a
        ]), X.useEffect(()=>{
            if (!a) return;
            function g(x) {
                let { reason: S } = x;
                (S === "reference-press" || S === "escape-key") && (c.current = !0);
            }
            return i.on("openchange", g), ()=>{
                i.off("openchange", g);
            };
        }, [
            i,
            a
        ]), X.useEffect(()=>()=>{
                clearTimeout(u.current);
            }, []);
        const p = X.useMemo(()=>({
                onPointerDown (g) {
                    fO(g.nativeEvent) || (f.current = !1);
                },
                onMouseLeave () {
                    c.current = !1;
                },
                onFocus (g) {
                    if (c.current) return;
                    const x = If(g.nativeEvent);
                    if (l && Pr(x)) try {
                        if (n5() && kte()) throw Error();
                        if (!x.matches(":focus-visible")) return;
                    } catch  {
                        if (!f.current && !hO(x)) return;
                    }
                    r(!0, g.nativeEvent, "focus");
                },
                onBlur (g) {
                    c.current = !1;
                    const x = g.relatedTarget, S = g.nativeEvent, _ = Pr(x) && x.hasAttribute(nm("focus-guard")) && x.getAttribute("data-type") === "outside";
                    u.current = window.setTimeout(()=>{
                        var b;
                        const M = Hl(o.domReference ? o.domReference.ownerDocument : document);
                        !x && M === o.domReference || Ms((b = s.current.floatingContext) == null ? void 0 : b.refs.floating.current, M) || Ms(o.domReference, M) || _ || r(!1, S, "focus");
                    });
                }
            }), [
            s,
            o.domReference,
            r,
            l
        ]);
        return X.useMemo(()=>a ? {
                reference: p
            } : {}, [
            a,
            p
        ]);
    }
    const b3 = "active", w3 = "selected";
    function yR(t, e, n) {
        const r = new Map, i = n === "item";
        let s = t;
        if (i && t) {
            const { [b3]: o, [w3]: a, ...l } = t;
            s = l;
        }
        return {
            ...n === "floating" && {
                tabIndex: -1,
                [AP]: ""
            },
            ...s,
            ...e.map((o)=>{
                const a = o ? o[n] : null;
                return typeof a == "function" ? t ? a(t) : null : a;
            }).concat(t).reduce((o, a)=>(a && Object.entries(a).forEach((l)=>{
                    let [c, u] = l;
                    if (!(i && [
                        b3,
                        w3
                    ].includes(c))) if (c.indexOf("on") === 0) {
                        if (r.has(c) || r.set(c, []), typeof u == "function") {
                            var f;
                            (f = r.get(c)) == null || f.push(u), o[c] = function() {
                                for(var p, g = arguments.length, x = new Array(g), S = 0; S < g; S++)x[S] = arguments[S];
                                return (p = r.get(c)) == null ? void 0 : p.map((_)=>_(...x)).find((_)=>_ !== void 0);
                            };
                        }
                    } else o[c] = u;
                }), o), {})
        };
    }
    function SO(t) {
        t === void 0 && (t = []);
        const e = t.map((a)=>a?.reference), n = t.map((a)=>a?.floating), r = t.map((a)=>a?.item), i = X.useCallback((a)=>yR(a, t, "reference"), e), s = X.useCallback((a)=>yR(a, t, "floating"), n), o = X.useCallback((a)=>yR(a, t, "item"), r);
        return X.useMemo(()=>({
                getReferenceProps: i,
                getFloatingProps: s,
                getItemProps: o
            }), [
            i,
            s,
            o
        ]);
    }
    const mre = "Escape";
    function hT(t, e, n) {
        switch(t){
            case "vertical":
                return e;
            case "horizontal":
                return n;
            default:
                return e || n;
        }
    }
    function vR(t, e) {
        return hT(e, t === yO || t === Jb, t === Bf || t === Uf);
    }
    function xR(t, e, n) {
        return hT(e, t === Jb, n ? t === Bf : t === Uf) || t === "Enter" || t === " " || t === "";
    }
    function _3(t, e, n) {
        return hT(e, n ? t === Bf : t === Uf, t === Jb);
    }
    function S3(t, e, n, r) {
        const i = n ? t === Uf : t === Bf, s = t === yO;
        return e === "both" || e === "horizontal" && r && r > 1 ? t === mre : hT(e, i, s);
    }
    function gre(t, e) {
        const { open: n, onOpenChange: r, elements: i } = t, { listRef: s, activeIndex: o, onNavigate: a = ()=>{}, enabled: l = !0, selectedIndex: c = null, allowEscape: u = !1, loop: f = !1, nested: p = !1, rtl: g = !1, virtual: x = !1, focusItemOnOpen: S = "auto", focusItemOnHover: _ = !0, openOnArrowKeyDown: b = !0, disabledIndices: M = void 0, orientation: E = "vertical", cols: T = 1, scrollItemIntoView: k = !0, virtualItemRef: N, itemSizes: D, dense: L = !1 } = e, R = NP(i.floating), A = Eo(R), P = Qb(), B = fv();
        zr(()=>{
            t.dataRef.current.orientation = E;
        }, [
            t,
            E
        ]);
        const U = So(()=>{
            a(q.current === -1 ? null : q.current);
        }), j = r5(i.domReference), K = X.useRef(S), q = X.useRef(c ?? -1), te = X.useRef(null), W = X.useRef(!0), J = X.useRef(U), Q = X.useRef(!!i.floating), Y = X.useRef(n), le = X.useRef(!1), ue = X.useRef(!1), ie = Eo(M), he = Eo(n), ge = Eo(k), ve = Eo(c), [Ee, Ce] = X.useState(), [Ne, Ve] = X.useState(), we = So(()=>{
            function ae(H) {
                x ? (Ce(H.id), B?.events.emit("virtualfocus", H), N && (N.current = H)) : mp(H, {
                    sync: le.current,
                    preventScroll: !0
                });
            }
            const oe = s.current[q.current];
            oe && ae(oe), (le.current ? (H)=>H() : requestAnimationFrame)(()=>{
                const H = s.current[q.current] || oe;
                if (!H) return;
                oe || ae(H);
                const fe = ge.current;
                fe && se && (ue.current || !W.current) && (H.scrollIntoView == null || H.scrollIntoView(typeof fe == "boolean" ? {
                    block: "nearest",
                    inline: "nearest"
                } : fe));
            });
        });
        zr(()=>{
            l && (n && i.floating ? K.current && c != null && (ue.current = !0, q.current = c, U()) : Q.current && (q.current = -1, J.current()));
        }, [
            l,
            n,
            i.floating,
            c,
            U
        ]), zr(()=>{
            if (l && n && i.floating) if (o == null) {
                if (le.current = !1, ve.current != null) return;
                if (Q.current && (q.current = -1, we()), (!Y.current || !Q.current) && K.current && (te.current != null || K.current === !0 && te.current == null)) {
                    let ae = 0;
                    const oe = ()=>{
                        s.current[0] == null ? (ae < 2 && (ae ? requestAnimationFrame : queueMicrotask)(oe), ae++) : (q.current = te.current == null || xR(te.current, E, g) || p ? hR(s, ie.current) : s3(s, ie.current), te.current = null, U());
                    };
                    oe();
                }
            } else y0(s, o) || (q.current = o, we(), ue.current = !1);
        }, [
            l,
            n,
            i.floating,
            o,
            ve,
            p,
            s,
            E,
            g,
            U,
            we,
            ie
        ]), zr(()=>{
            var ae;
            if (!l || i.floating || !B || x || !Q.current) return;
            const oe = B.nodesRef.current, $ = (ae = oe.find((pe)=>pe.id === P)) == null || (ae = ae.context) == null ? void 0 : ae.elements.floating, H = Hl(Ts(i.floating)), fe = oe.some((pe)=>pe.context && Ms(pe.context.elements.floating, H));
            $ && !fe && W.current && $.focus({
                preventScroll: !0
            });
        }, [
            l,
            i.floating,
            B,
            P,
            x
        ]), zr(()=>{
            if (!l || !B || !x || P) return;
            function ae(oe) {
                Ve(oe.id), N && (N.current = oe);
            }
            return B.events.on("virtualfocus", ae), ()=>{
                B.events.off("virtualfocus", ae);
            };
        }, [
            l,
            B,
            x,
            P,
            N
        ]), zr(()=>{
            J.current = U, Y.current = n, Q.current = !!i.floating;
        }), zr(()=>{
            n || (te.current = null);
        }, [
            n
        ]);
        const Me = o != null, se = X.useMemo(()=>{
            function ae($) {
                if (!n) return;
                const H = s.current.indexOf($);
                H !== -1 && q.current !== H && (q.current = H, U());
            }
            return {
                onFocus ($) {
                    let { currentTarget: H } = $;
                    le.current = !0, ae(H);
                },
                onClick: ($)=>{
                    let { currentTarget: H } = $;
                    return H.focus({
                        preventScroll: !0
                    });
                },
                ..._ && {
                    onMouseMove ($) {
                        let { currentTarget: H } = $;
                        le.current = !0, ue.current = !1, ae(H);
                    },
                    onPointerLeave ($) {
                        let { pointerType: H } = $;
                        if (!(!W.current || H === "touch") && (le.current = !0, q.current = -1, U(), !x)) {
                            var fe;
                            (fe = A.current) == null || fe.focus({
                                preventScroll: !0
                            });
                        }
                    }
                }
            };
        }, [
            n,
            A,
            _,
            s,
            U,
            x
        ]), Ye = So((ae)=>{
            if (W.current = !1, le.current = !0, ae.which === 229 || !he.current && ae.currentTarget === A.current) return;
            if (p && S3(ae.key, E, g, T)) {
                bo(ae), r(!1, ae.nativeEvent, "list-navigation"), Ui(i.domReference) && (x ? B?.events.emit("virtualfocus", i.domReference) : i.domReference.focus());
                return;
            }
            const oe = q.current, $ = hR(s, M), H = s3(s, M);
            if (j || (ae.key === "Home" && (bo(ae), q.current = $, U()), ae.key === "End" && (bo(ae), q.current = H, U())), T > 1) {
                const fe = D || Array.from({
                    length: s.current.length
                }, ()=>({
                        width: 1,
                        height: 1
                    })), pe = Wne(fe, T, L), me = pe.findIndex((Ze)=>Ze != null && !o1(s.current, Ze, M)), Ie = pe.reduce((Ze, at, Je)=>at != null && !o1(s.current, at, M) ? Je : Ze, -1), Xe = pe[Vne({
                    current: pe.map((Ze)=>Ze != null ? s.current[Ze] : null)
                }, {
                    event: ae,
                    orientation: E,
                    loop: f,
                    rtl: g,
                    cols: T,
                    disabledIndices: Hne([
                        ...M || s.current.map((Ze, at)=>o1(s.current, at) ? at : void 0),
                        void 0
                    ], pe),
                    minIndex: me,
                    maxIndex: Ie,
                    prevIndex: qne(q.current > H ? $ : q.current, fe, pe, T, ae.key === Jb ? "bl" : ae.key === (g ? Bf : Uf) ? "tr" : "tl"),
                    stopEvent: !0
                })];
                if (Xe != null && (q.current = Xe, U()), E === "both") return;
            }
            if (vR(ae.key, E)) {
                if (bo(ae), n && !x && Hl(ae.currentTarget.ownerDocument) === ae.currentTarget) {
                    q.current = xR(ae.key, E, g) ? $ : H, U();
                    return;
                }
                xR(ae.key, E, g) ? f ? q.current = oe >= H ? u && oe !== s.current.length ? -1 : $ : Vs(s, {
                    startingIndex: oe,
                    disabledIndices: M
                }) : q.current = Math.min(H, Vs(s, {
                    startingIndex: oe,
                    disabledIndices: M
                })) : f ? q.current = oe <= $ ? u && oe !== -1 ? s.current.length : H : Vs(s, {
                    startingIndex: oe,
                    decrement: !0,
                    disabledIndices: M
                }) : q.current = Math.max($, Vs(s, {
                    startingIndex: oe,
                    decrement: !0,
                    disabledIndices: M
                })), y0(s, q.current) && (q.current = -1), U();
            }
        }), Be = X.useMemo(()=>x && n && Me && {
                "aria-activedescendant": Ne || Ee
            }, [
            x,
            n,
            Me,
            Ne,
            Ee
        ]), it = X.useMemo(()=>({
                "aria-orientation": E === "both" ? void 0 : E,
                ...j ? {} : Be,
                onKeyDown: Ye,
                onPointerMove () {
                    W.current = !0;
                }
            }), [
            Be,
            Ye,
            E,
            j
        ]), de = X.useMemo(()=>{
            function ae($) {
                S === "auto" && t5($.nativeEvent) && (K.current = !0);
            }
            function oe($) {
                K.current = S, S === "auto" && fO($.nativeEvent) && (K.current = !0);
            }
            return {
                ...Be,
                onKeyDown ($) {
                    var H;
                    W.current = !1;
                    const fe = $.key.startsWith("Arrow"), pe = [
                        "Home",
                        "End"
                    ].includes($.key), me = fe || pe, Ie = B == null || (H = B.nodesRef.current.find((st)=>st.id === P)) == null || (H = H.context) == null || (H = H.dataRef) == null ? void 0 : H.current.orientation, Xe = _3($.key, E, g), Ze = S3($.key, E, g, T), at = _3($.key, Ie, g), Je = vR($.key, E), Pe = (p ? at : Je) || $.key === "Enter" || $.key.trim() === "";
                    if (x && n) {
                        const st = B?.nodesRef.current.find(($e)=>$e.parentId == null), _e = B && st ? Qne(B.nodesRef.current, st.id) : null;
                        if (me && _e && N) {
                            const $e = new KeyboardEvent("keydown", {
                                key: $.key,
                                bubbles: !0
                            });
                            if (Xe || Ze) {
                                var Fe, nt;
                                const ht = ((Fe = _e.context) == null ? void 0 : Fe.elements.domReference) === $.currentTarget, Se = Ze && !ht ? (nt = _e.context) == null ? void 0 : nt.elements.domReference : Xe ? s.current.find((lt)=>lt?.id === Ee) : null;
                                Se && (bo($), Se.dispatchEvent($e), Ve(void 0));
                            }
                            if ((Je || pe) && _e.context && _e.context.open && _e.parentId && $.currentTarget !== _e.context.elements.domReference) {
                                var ct;
                                bo($), (ct = _e.context.elements.domReference) == null || ct.dispatchEvent($e);
                                return;
                            }
                        }
                        return Ye($);
                    }
                    if (!(!n && !b && fe)) {
                        if (Pe) {
                            const st = vR($.key, Ie);
                            te.current = p && st ? null : $.key;
                        }
                        if (p) {
                            at && (bo($), n ? (q.current = hR(s, ie.current), U()) : r(!0, $.nativeEvent, "list-navigation"));
                            return;
                        }
                        Je && (c != null && (q.current = c), bo($), !n && b ? r(!0, $.nativeEvent, "list-navigation") : Ye($), n && U());
                    }
                },
                onFocus () {
                    n && !x && (q.current = -1, U());
                },
                onPointerDown: oe,
                onPointerEnter: oe,
                onMouseDown: ae,
                onClick: ae
            };
        }, [
            Ee,
            Be,
            T,
            Ye,
            ie,
            S,
            s,
            p,
            U,
            r,
            n,
            b,
            E,
            P,
            g,
            c,
            B,
            x,
            N
        ]);
        return X.useMemo(()=>l ? {
                reference: de,
                floating: it,
                item: se
            } : {}, [
            l,
            de,
            it,
            se
        ]);
    }
    const E3 = (t)=>t.replace(/[A-Z]+(?![a-z])|[A-Z]/g, (e, n)=>(n ? "-" : "") + e.toLowerCase());
    function _g(t, e) {
        return typeof t == "function" ? t(e) : t;
    }
    function yre(t, e) {
        const [n, r] = X.useState(t);
        return t && !n && r(!0), X.useEffect(()=>{
            if (!t && n) {
                const i = setTimeout(()=>r(!1), e);
                return ()=>clearTimeout(i);
            }
        }, [
            t,
            n,
            e
        ]), n;
    }
    function vre(t, e) {
        e === void 0 && (e = {});
        const { open: n, elements: { floating: r } } = t, { duration: i = 250 } = e, o = (typeof i == "number" ? i : i.close) || 0, [a, l] = X.useState("unmounted"), c = yre(n, o);
        return !c && a === "close" && l("unmounted"), zr(()=>{
            if (r) {
                if (n) {
                    l("initial");
                    const u = requestAnimationFrame(()=>{
                        l("open");
                    });
                    return ()=>{
                        cancelAnimationFrame(u);
                    };
                }
                l("close");
            }
        }, [
            n,
            r
        ]), {
            isMounted: c,
            status: a
        };
    }
    function EO(t, e) {
        e === void 0 && (e = {});
        const { initial: n = {
            opacity: 0
        }, open: r, close: i, common: s, duration: o = 250 } = e, a = t.placement, l = a.split("-")[0], c = X.useMemo(()=>({
                side: l,
                placement: a
            }), [
            l,
            a
        ]), u = typeof o == "number", f = (u ? o : o.open) || 0, p = (u ? o : o.close) || 0, [g, x] = X.useState(()=>({
                ..._g(s, c),
                ..._g(n, c)
            })), { isMounted: S, status: _ } = vre(t, {
            duration: o
        }), b = Eo(n), M = Eo(r), E = Eo(i), T = Eo(s);
        return zr(()=>{
            const k = _g(b.current, c), N = _g(E.current, c), D = _g(T.current, c), L = _g(M.current, c) || Object.keys(k).reduce((R, A)=>(R[A] = "", R), {});
            if (_ === "initial" && x((R)=>({
                    transitionProperty: R.transitionProperty,
                    ...D,
                    ...k
                })), _ === "open" && x({
                transitionProperty: Object.keys(L).map(E3).join(","),
                transitionDuration: f + "ms",
                ...D,
                ...L
            }), _ === "close") {
                const R = N || k;
                x({
                    transitionProperty: Object.keys(R).map(E3).join(","),
                    transitionDuration: p + "ms",
                    ...D,
                    ...R
                });
            }
        }, [
            p,
            E,
            b,
            M,
            T,
            f,
            _,
            c
        ]), {
            isMounted: S,
            styles: g
        };
    }
    const xre = X.createContext({
        close () {}
    }), bre = Tn({
        slot: {
            target: [
                "flex",
                "justify-center",
                "items-center"
            ],
            portal: []
        },
        variant: {
            mounted: {
                true: []
            }
        },
        match: [
            {
                if: {
                    mounted: !1
                },
                then: {
                    portal: [
                        "hidden"
                    ]
                }
            }
        ],
        defaults: {
            mounted: !1
        }
    }), wre = ({ target: t, action: e = "hover", disabled: n = !1, closeOnClick: r = !1, delay: i = 100, float: s, variant: o, tva: a = bre, css: l, children: c })=>{
        const [u, f] = X.useState(!1), { refs: p, floatingStyles: g, context: x } = _O({
            open: u,
            onOpenChange: f,
            placement: "top",
            whileElementsMounted: y5,
            middleware: [
                x5(10),
                b5({
                    fallbackAxisSideDirection: "start"
                }),
                jne()
            ],
            ...s
        }), { getReferenceProps: S, getFloatingProps: _ } = SO([
            Jne(x, {
                enabled: e === "hover",
                delay: i
            }),
            bO(x, {
                enabled: e === "click"
            }),
            pre(x),
            wO(x)
        ]), { isMounted: b, styles: M } = EO(x), E = a({
            mounted: b,
            ...o,
            css: l
        }).slots;
        return v.jsxs(v.Fragment, {
            children: [
                v.jsx("button", {
                    type: "button",
                    ref: p.setReference,
                    ...S(),
                    disabled: n,
                    className: E.target(),
                    children: t
                }),
                v.jsx(xO, {
                    children: v.jsx("div", {
                        ref: p.setFloating,
                        style: {
                            ...g,
                            ...M
                        },
                        className: E.portal(),
                        ..._(),
                        onClick: r ? ()=>{
                            f(!1);
                        } : void 0,
                        children: v.jsx(xre.Provider, {
                            value: {
                                close () {
                                    f(!1);
                                }
                            },
                            children: c
                        })
                    })
                })
            ]
        });
    }, P5 = "icon-[system-uicons--menu-hamburger]", k5 = Tn({
        slot: {
            base: []
        },
        variant: {
            size: {
                xs: "text-sm",
                sm: "text-sm",
                md: "text-base",
                lg: "text-lg",
                xl: "text-xl",
                "2xl": "text-2xl",
                "3xl": "text-3xl",
                "4xl": "text-4xl",
                "5xl": "text-5xl",
                "6xl": "text-6xl",
                "7xl": "text-7xl",
                "8xl": "text-8xl"
            },
            disabled: {
                true: []
            }
        },
        match: [
            {
                if: {
                    disabled: !0
                },
                then: {
                    base: [
                        "pointer-events-none",
                        "cursor-not-allowed",
                        "text-gray-400",
                        "opacity-50"
                    ]
                }
            }
        ],
        defaults: {
            size: "xl",
            disabled: !1
        }
    }), vn = X.memo(({ icon: t, variant: e, tva: n = k5, css: r, ...i })=>{
        const s = n({
            ...e,
            css: r
        }).slots;
        return t ? v.jsx("div", {
            className: s.base({
                css: [
                    t
                ]
            }),
            ...i
        }) : null;
    }), _re = Tn({
        slot: {
            base: [
                "p-1",
                "bg-slate-50",
                "border",
                "border-slate-300",
                "rounded-sm",
                "shadow-md",
                "text-slate-500",
                "flex",
                "flex-col",
                "gap-2"
            ]
        },
        variant: {},
        defaults: {}
    }), Or = ({ icon: t = P5, iconProps: e, children: n, variant: r, tva: i = _re, css: s, ...o })=>{
        const a = i({
            ...r,
            css: s
        }).slots;
        return v.jsx(Zne, {
            children: v.jsx(wre, {
                action: "click",
                target: v.jsx(vn, {
                    icon: t,
                    css: {
                        base: [
                            "cursor-pointer"
                        ]
                    },
                    ...e
                }),
                delay: 100,
                float: {
                    placement: "bottom-start"
                },
                closeOnClick: !0,
                ...o,
                children: v.jsx("div", {
                    className: a.base(),
                    children: n
                })
            })
        });
    }, O5 = "icon-[svg-spinners--90-ring-with-bg]", Sre = Tn({
        slot: {
            base: [
                "flex",
                "items-center",
                "justify-center",
                "gap-2",
                "group",
                "w-fit",
                "h-fit",
                "rounded-sm",
                "cursor-pointer",
                "hover:shadow-md",
                "hover:shadow-slate-200",
                "transition-all",
                "hover:bg-slate-200",
                "text-slate-600",
                "text-2xl",
                "p-1"
            ]
        },
        variant: {
            disabled: {
                true: [
                    "cursor-not-allowed",
                    "pointer-events-none"
                ]
            },
            loading: {
                true: [
                    "cursor-not-allowed",
                    "pointer-events-none"
                ]
            }
        },
        match: [
            {
                if: {
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "hover:bg-blue-400"
                    ]
                }
            }
        ],
        defaults: {
            disabled: !1,
            loading: !1
        }
    }), ew = ({ iconEnabled: t, iconDisabled: e, iconLoading: n = O5, disabled: r = !1, loading: i = !1, onClick: s, variant: o, tva: a = Sre, css: l, children: c, ...u })=>{
        const f = a({
            disabled: r,
            loading: i,
            ...o,
            css: l
        }).slots;
        return v.jsxs("div", {
            className: f.base(),
            onClick: r ? void 0 : s,
            ...u,
            children: [
                r ? v.jsx(vn, {
                    icon: i ? n : e ?? t
                }) : v.jsx(vn, {
                    icon: i ? n : t
                }),
                c
            ]
        });
    }, MO = "icon-[iconamoon--close-light]", M3 = (t)=>{
        let e;
        const n = new Set, r = (c, u)=>{
            const f = typeof c == "function" ? c(e) : c;
            if (!Object.is(f, e)) {
                const p = e;
                e = u ?? (typeof f != "object" || f === null) ? f : Object.assign({}, e, f), n.forEach((g)=>g(e, p));
            }
        }, i = ()=>e, a = {
            setState: r,
            getState: i,
            getInitialState: ()=>l,
            subscribe: (c)=>(n.add(c), ()=>n.delete(c))
        }, l = e = t(r, i, a);
        return a;
    }, Ere = (t)=>t ? M3(t) : M3, Mre = (t)=>t;
    function Tre(t, e = Mre) {
        const n = nr.useSyncExternalStore(t.subscribe, ()=>e(t.getState()), ()=>e(t.getInitialState()));
        return nr.useDebugValue(n), n;
    }
    const T3 = (t)=>{
        const e = Ere(t), n = (r)=>Tre(e, r);
        return Object.assign(n, e), n;
    }, Cre = (t)=>t ? T3(t) : T3, L5 = ({ defaultOpen: t = !1 })=>Cre((e)=>({
                isOpen: t,
                open () {
                    e({
                        isOpen: !0
                    });
                },
                close () {
                    e({
                        isOpen: !1
                    });
                },
                toggle (n) {
                    e({
                        isOpen: n
                    });
                }
            })), D5 = X.createContext(L5({
        defaultOpen: !1
    })), Ire = Tn({
        slot: {
            base: [
                "bg-slate-400/75",
                "backdrop-blur-xs",
                "flex",
                "justify-center",
                "py-12"
            ],
            target: [],
            modal: [
                "bg-white",
                "rounded-lg",
                "shadow-lg",
                "p-4",
                "w-fit",
                "h-fit",
                "max-h-full",
                "overflow-y-auto",
                "relative",
                "w-2/3"
            ]
        },
        variant: {
            disabled: {
                true: [
                    "pointer-events-none"
                ]
            },
            loading: {
                true: []
            }
        },
        match: [
            {
                if: {
                    loading: !0
                },
                then: {
                    base: [
                        "pointer-events-none",
                        "opacity-50"
                    ]
                }
            }
        ],
        defaults: {
            disabled: !1,
            loading: !1
        }
    }), pm = ({ target: t, icon: e, textTitle: n, disabled: r = !1, defaultOpen: i = !1, outside: s = !1, variant: o, css: a, tva: l = Ire, children: c })=>{
        const u = X.useMemo(()=>L5({
                defaultOpen: i
            }), []), f = u((N)=>N.close), p = Kne(), { refs: g, context: x } = _O({
            nodeId: p,
            open: u((N)=>N.isOpen),
            onOpenChange: u((N)=>N.toggle)
        }), S = bO(x), _ = wO(x, {
            outsidePress: s
        }), { getReferenceProps: b, getFloatingProps: M } = SO([
            S,
            _
        ]), { isMounted: E, styles: T } = EO(x), k = l({
            disabled: r,
            ...o,
            css: a
        }).slots;
        return v.jsxs(D5.Provider, {
            value: u,
            children: [
                v.jsx("div", {
                    ref: g.setReference,
                    ...b({
                        disabled: r
                    }),
                    className: k.target(),
                    children: t
                }),
                v.jsx(Yne, {
                    id: p,
                    children: E && v.jsx(v.Fragment, {
                        children: v.jsx(xO, {
                            children: v.jsx(ure, {
                                lockScroll: !0,
                                style: T,
                                className: k.base(),
                                children: v.jsx(N5, {
                                    context: x,
                                    children: v.jsxs("div", {
                                        ref: g.setFloating,
                                        ...M(),
                                        className: k.modal(),
                                        children: [
                                            v.jsxs("div", {
                                                className: "border-b border-slate-200 mb-2 py-1.5 flex flex-row items-center justify-between select-none",
                                                children: [
                                                    v.jsxs("div", {
                                                        className: "flex flex-row items-center gap-2 pr-4",
                                                        children: [
                                                            e && (Ub(e) ? v.jsx(vn, {
                                                                icon: e,
                                                                variant: {
                                                                    size: "xl"
                                                                }
                                                            }) : e),
                                                            n && v.jsx("div", {
                                                                className: "text-lg font-semibold text-slate-700",
                                                                children: n
                                                            })
                                                        ]
                                                    }),
                                                    v.jsx(ew, {
                                                        iconEnabled: MO,
                                                        onClick: ()=>f()
                                                    })
                                                ]
                                            }),
                                            Ste(c) ? v.jsx(c, {
                                                close: f
                                            }) : c
                                        ]
                                    })
                                })
                            })
                        })
                    })
                })
            ]
        });
    }, Rre = Tn({
        use: ZW,
        slot: {},
        variant: {},
        defaults: {}
    }), Wn = ({ icon: t, iconProps: e, label: n, disabled: r = !1, hidden: i = !1, variant: s, tva: o = Rre, css: a, ...l })=>{
        const c = o({
            ...s,
            disabled: r,
            css: a
        }).slots;
        return i ? null : v.jsxs("div", {
            className: c.base(),
            children: [
                Ub(t) ? v.jsx(vn, {
                    icon: t,
                    ...e
                }) : t,
                v.jsx(pm, {
                    icon: t,
                    target: n,
                    disabled: r,
                    css: {
                        modal: [
                            "w-1/2"
                        ]
                    },
                    ...l
                })
            ]
        });
    }, Are = Tn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "rounded-2xl",
                "bg-blue-50",
                "border",
                "border-blue-200",
                "text-xs",
                "px-4",
                "py-0.5",
                "font-bold"
            ]
        },
        variant: {},
        defaults: {}
    }), Gs = ({ variant: t, tva: e = Are, css: n, ...r })=>{
        const i = e({
            ...t,
            css: n
        }).slots;
        return v.jsx("div", {
            className: i.base(),
            ...r
        });
    }, Nre = "icon-[material-symbols-light--check-small]", Pre = "icon-[material-symbols-light--close-small]", kre = "icon-[material-symbols-light--check-indeterminate-small]", Ore = Tn({
        use: k5,
        slot: {},
        variant: {
            value: {
                true: "text-green-600",
                false: "text-amber-600"
            }
        },
        defaults: {
            value: !1
        }
    }), pT = ({ value: t, checkIcon: e = Nre, unCheckIcon: n = Pre, undefinedIcon: r = kre, tva: i = Ore, ...s })=>t == null ? v.jsx(vn, {
            icon: r,
            tva: i,
            ...s
        }) : v.jsx(vn, {
            icon: t ? e : n,
            tva: (o)=>i({
                    ...o,
                    value: t
                }),
            ...s
        }), Lre = Tn({
        slot: {
            base: [
                "flex",
                "items-center",
                "justify-between",
                "text-sm",
                "font-medium",
                "text-slate-900",
                "w-full"
            ],
            switch: [
                "relative",
                "w-11",
                "h-6",
                "bg-gray-200",
                "peer-focus:outline-hidden",
                "peer-focus:ring-4",
                "peer-focus:ring-blue-300",
                "dark:peer-focus:ring-blue-800",
                "rounded-full",
                "peer",
                "dark:bg-gray-700",
                "peer-checked:after:translate-x-full",
                "peer-checked:rtl:after:-translate-x-full",
                "peer-checked:after:border-white",
                "after:content-['']",
                "after:absolute",
                "after:top-[2px]",
                "after:start-[2px]",
                "after:bg-white",
                "after:border-gray-300",
                "after:border",
                "after:rounded-full",
                "after:h-5",
                "after:w-5",
                "after:transition-all",
                "dark:border-gray-600",
                "peer-checked:bg-blue-600"
            ]
        },
        variant: {},
        defaults: {}
    }), F5 = ({ value: t, onChange: e, variant: n, tva: r = Lre, css: i, ...s })=>{
        const o = r({
            ...n,
            css: i
        }).slots;
        return v.jsx("div", {
            className: o.base(),
            children: v.jsxs("label", {
                children: [
                    v.jsx("input", {
                        type: "checkbox",
                        checked: !!t,
                        className: "sr-only peer",
                        onChange: (a)=>{
                            e(a.target.checked);
                        },
                        ...s
                    }),
                    v.jsx("div", {
                        className: o.switch()
                    })
                ]
            })
        });
    }, Dre = Tn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "items-center",
                "justify-center",
                "gap-2",
                "group",
                "rounded-sm",
                "transition-all",
                "cursor-pointer"
            ]
        },
        variant: {
            variant: {
                primary: [
                    "text-white"
                ],
                secondary: [
                    "text-slate-700"
                ],
                subtle: [
                    "text-slate-600"
                ],
                danger: [
                    "text-slate-50"
                ]
            },
            disabled: {
                true: "cursor-not-allowed"
            },
            size: {
                xs: [],
                sm: [],
                md: []
            }
        },
        match: [
            {
                if: {
                    variant: "primary"
                },
                then: {
                    base: [
                        "bg-blue-400",
                        "hover:bg-blue-500"
                    ]
                }
            },
            {
                if: {
                    variant: "primary",
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "bg-blue-600",
                        "hover:bg-blue-600",
                        "cursor-not-allowed"
                    ]
                }
            },
            {
                if: {
                    variant: "secondary"
                },
                then: {
                    base: [
                        "bg-amber-400",
                        "hover:bg-amber-500"
                    ]
                }
            },
            {
                if: {
                    variant: "secondary",
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "bg-amber-600",
                        "hover:bg-amber-600",
                        "cursor-not-allowed"
                    ]
                }
            },
            {
                if: {
                    variant: "subtle"
                },
                then: {
                    base: [
                        "border",
                        "bg-slate-50",
                        "border-slate-300",
                        "hover:border-slate-400",
                        "text-slate-600",
                        "hover:text-slate-800",
                        "hover:bg-slate-100"
                    ]
                }
            },
            {
                if: {
                    variant: "subtle",
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "bg-blue-50",
                        "hover:bg-blue-50",
                        "cursor-not-allowed"
                    ]
                }
            },
            {
                if: {
                    variant: "danger"
                },
                then: {
                    base: [
                        "bg-red-400",
                        "hover:bg-red-500",
                        "hover:text-white"
                    ]
                }
            },
            {
                if: {
                    size: "xs"
                },
                then: {
                    base: [
                        "py-0.5",
                        "px-1"
                    ]
                }
            },
            {
                if: {
                    size: "sm"
                },
                then: {
                    base: [
                        "py-1",
                        "px-2"
                    ]
                }
            },
            {
                if: {
                    size: "md"
                },
                then: {
                    base: [
                        "py-2",
                        "px-4"
                    ]
                }
            }
        ],
        defaults: {
            variant: "primary",
            disabled: !1,
            size: "md"
        }
    }), Dn = X.memo(({ iconEnabled: t, iconDisabled: e, iconLoading: n = O5, iconProps: r, loading: i, variant: s, tva: o = Dre, css: a, children: l, ...c })=>{
        const u = o({
            disabled: c.disabled,
            ...s,
            css: a
        }).slots, f = X.useMemo(()=>({
                size: "xl"
            }), []);
        return v.jsxs("button", {
            type: "button",
            className: u.base({
                disabled: c.disabled
            }),
            ...c,
            children: [
                c.disabled ? v.jsx(vn, {
                    icon: i === !0 ? n : e,
                    variant: f,
                    ...r
                }) : v.jsx(vn, {
                    icon: i === !0 ? n : t,
                    variant: f,
                    ...r
                }),
                l
            ]
        });
    }), TO = X.createContext({
        inline: !1
    }), Fre = Tn({
        slot: {
            base: [
                "border",
                "border-slate-100",
                "px-2",
                "py-1",
                "rounded-md"
            ],
            label: [
                "text-sm",
                "font-semibold",
                "text-slate-600",
                "border-b",
                "mb-2"
            ],
            value: []
        },
        variant: {
            inline: {
                true: []
            },
            withBackground: {
                true: []
            }
        },
        match: [
            {
                if: {
                    inline: !0
                },
                then: {
                    base: [
                        "border-none",
                        "flex",
                        "flex-row",
                        "items-center",
                        "gap-2"
                    ],
                    label: [
                        "mb-0",
                        "font-light",
                        "text-md",
                        "text-slate-600",
                        "border-none"
                    ],
                    value: [
                        "text-md",
                        "text-slate-800"
                    ]
                }
            },
            {
                if: {
                    withBackground: !0
                },
                then: {
                    base: [
                        "bg-slate-50",
                        "hover:bg-slate-100"
                    ]
                }
            }
        ],
        defaults: {
            inline: !1,
            withBackground: !0
        }
    }), jre = ({ inline: t, label: e, value: n, variant: r, tva: i = Fre, css: s })=>{
        const o = X.useContext(TO), a = t ?? o?.inline, l = i({
            inline: a,
            ...r,
            css: s
        }).slots;
        return v.jsxs("div", {
            className: l.base(),
            children: [
                e ? v.jsx("div", {
                    className: l.label(),
                    children: e
                }) : null,
                v.jsx("div", {
                    className: l.value(),
                    children: n
                })
            ]
        });
    }, Bre = Tn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-4",
                "border",
                "border-slate-100",
                "p-4",
                "rounded-lg"
            ]
        },
        variant: {
            inline: {
                true: [
                    "flex-row",
                    "border-none",
                    "gap-1",
                    "p-0",
                    "flex-1"
                ]
            }
        },
        defaults: {
            inline: !1
        }
    }), j5 = ({ items: t, hidden: e = [], valueOfProps: n, entity: r, variant: i, tva: s = Bre, css: o, inline: a = !1 })=>{
        const l = s({
            inline: a,
            ...i,
            css: o
        }).slots;
        return v.jsx(TO.Provider, {
            value: {
                inline: a
            },
            children: v.jsx("div", {
                className: l.base(),
                children: t.filter(({ id: c })=>!e.includes(c)).map(({ id: c, render: u, ...f })=>v.jsx(jre, {
                        value: v.jsx(u, {
                            entity: r
                        }),
                        ...n,
                        ...f
                    }, c))
            })
        });
    }, Ure = Tn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-2"
            ]
        },
        variant: {},
        defaults: {}
    }), C3 = "icon-[tabler--dots]", zre = Tn({
        slot: {
            base: [
                "flex",
                "items-center",
                "justify-between",
                "gap-2"
            ],
            sums: [
                "flex",
                "items-center",
                "gap-2",
                "text-sm"
            ]
        },
        variant: {},
        defaults: {}
    }), Vre = Tn({
        slot: {
            base: [
                "select-none"
            ],
            list: [
                "flex",
                "items-center",
                "-space-x-px",
                "text-xs",
                "gap-2"
            ],
            page: [
                "flex",
                "items-center",
                "justify-center",
                "w-12",
                "px-2",
                "py-1",
                "rounded-sm",
                "border",
                "border-slate-200",
                "hover:bg-slate-200",
                "cursor-pointer",
                "transition-all",
                "duration-200"
            ]
        },
        variant: {
            current: {
                true: []
            }
        },
        match: [
            {
                if: {
                    current: !0
                },
                then: {
                    page: [
                        "bg-slate-100",
                        "hover:bg-slate-200",
                        "text-slate-800",
                        "font-bold"
                    ]
                }
            }
        ],
        defaults: {
            current: !1
        }
    }), bR = ({ pages: t, page: e, onPage: n, variant: r, tva: i = Vre, css: s })=>{
        const o = i({
            ...r,
            css: s
        }).slots;
        return v.jsx("nav", {
            className: o.base(),
            children: v.jsx("ul", {
                className: o.list(),
                children: t.map((a, l)=>v.jsx("li", {
                        className: o.page({
                            current: e === a - 1
                        }),
                        onClick: ()=>n(a - 1),
                        children: a
                    }, `page-${a}-${l}`))
            })
        });
    }, Wre = Tn({
        slot: {
            base: [
                "cursor-pointer",
                "bg-slate-50",
                "text-slate-900",
                "text-sm",
                "border",
                "border-slate-300",
                "rounded-sm",
                "focus:border-sky-400",
                "focus:outline-hidden",
                "p-2.5",
                "hover:shadow-md",
                "transition-all",
                "group"
            ],
            input: [
                "flex",
                "flex-row",
                "items-center",
                "justify-between",
                "gap-2"
            ],
            popup: [
                "z-50",
                "cursor-pointer",
                "overflow-y-auto",
                "rounded-sm",
                "border",
                "border-slate-300",
                "bg-white",
                "shadow-lg",
                "focus:outline-hidden"
            ],
            item: [
                "focus:outline-hidden",
                "py-2",
                "px-2.5",
                "flex",
                "items-center",
                "justify-between"
            ]
        },
        variant: {
            disabled: {
                true: [
                    "cursor-not-allowed",
                    "hover:shadow-none",
                    "focus:border-slate-300",
                    "opacity-50"
                ]
            },
            active: {
                true: []
            },
            selected: {
                true: []
            }
        },
        match: [
            {
                if: {
                    selected: !0
                },
                then: {
                    item: [
                        "bg-slate-100"
                    ]
                }
            },
            {
                if: {
                    active: !0
                },
                then: {
                    item: [
                        "bg-slate-200"
                    ]
                }
            }
        ],
        defaults: {
            disabled: !1,
            selected: !1,
            active: !1
        }
    }), B5 = ({ items: t, icon: e, defaultValue: n, render: r, textSelect: i, disabled: s = !1, onItem: o, onSelect: a, onChange: l, value: c, variant: u, tva: f = Wre, css: p })=>{
        const [g, x] = X.useState(!1), [S, _] = X.useState(null), [b, M] = X.useState(t.findIndex((J)=>J.id === n));
        X.useEffect(()=>{
            M(t.findIndex((J)=>J.id === c));
        }, [
            c
        ]);
        const { refs: E, floatingStyles: T, context: k } = _O({
            placement: "bottom-start",
            open: g,
            onOpenChange: x,
            whileElementsMounted: y5,
            middleware: [
                x5(5),
                b5({
                    padding: 10
                }),
                Bne({
                    apply ({ rects: J, elements: Q, availableHeight: Y }) {
                        Object.assign(Q.floating.style, {
                            maxHeight: `${Y}px`,
                            minWidth: `${J.reference.width}px`
                        });
                    },
                    padding: 10
                })
            ]
        }), N = X.useRef([]), D = X.useRef(!1), L = bO(k, {
            event: "mousedown"
        }), R = wO(k), A = gre(k, {
            listRef: N,
            activeIndex: S,
            selectedIndex: b,
            onNavigate: _,
            loop: !0
        }), { getReferenceProps: P, getFloatingProps: B, getItemProps: U } = SO([
            R,
            A,
            L
        ]), { isMounted: j, styles: K } = EO(k), q = (J)=>{
            M(J), x(!1);
            const Q = t[J];
            Q && o?.(Q), a?.(Q), l?.(Q?.id);
        }, te = b === null ? void 0 : t[b], W = f({
            disabled: s,
            ...u,
            css: p
        }).slots;
        return v.jsxs(v.Fragment, {
            children: [
                v.jsx("div", {
                    tabIndex: s ? -1 : 0,
                    ref: s ? void 0 : E.setReference,
                    "aria-labelledby": "select-label",
                    "aria-autocomplete": "none",
                    ...s ? {} : P(),
                    className: W.base(),
                    children: v.jsxs("div", {
                        className: W.input(),
                        children: [
                            e ? v.jsx(vn, {
                                icon: e,
                                variant: {
                                    size: "xl"
                                },
                                css: {
                                    base: [
                                        "text-slate-400",
                                        "group-hover:text-slate-600"
                                    ]
                                }
                            }) : null,
                            te ? v.jsx(r, {
                                entity: te
                            }) : i || sa.rich("Select item"),
                            v.jsx(vn, {
                                icon: "icon-[gg--select]",
                                variant: {
                                    size: "xl"
                                },
                                css: {
                                    base: [
                                        !g && "text-slate-400",
                                        g && "text-slate-600",
                                        "group-hover:text-slate-600"
                                    ]
                                }
                            })
                        ]
                    })
                }),
                j && v.jsx(xO, {
                    children: v.jsx(N5, {
                        context: k,
                        modal: !1,
                        children: v.jsx("div", {
                            ref: E.setFloating,
                            style: {
                                ...T,
                                ...K
                            },
                            className: W.popup(),
                            ...B(),
                            children: t.map((J, Q)=>v.jsxs("div", {
                                    ref: (Y)=>{
                                        N.current[Q] = Y;
                                    },
                                    role: "option",
                                    tabIndex: Q === S ? 0 : -1,
                                    "aria-selected": Q === b && Q === S,
                                    className: W.item({
                                        selected: Q === b,
                                        active: Q === S
                                    }),
                                    ...U({
                                        onClick () {
                                            q(Q);
                                        },
                                        onKeyDown (Y) {
                                            Y.key === "Enter" && (Y.preventDefault(), q(Q)), Y.key === " " && !D.current && (Y.preventDefault(), q(Q));
                                        }
                                    }),
                                    children: [
                                        v.jsx(r, {
                                            entity: J
                                        }),
                                        Q === b && v.jsx(vn, {
                                            icon: "icon-[basil--check-outline]",
                                            variant: {
                                                size: "xl"
                                            }
                                        })
                                    ]
                                }, J.id))
                        })
                    })
                })
            ]
        });
    }, qre = ({ sizes: t = [
        5,
        15,
        30,
        50,
        100
    ], size: e, onSize: n, ...r })=>v.jsx(B5, {
            items: t.map((i)=>({
                    id: `${i}`,
                    size: i
                })),
            defaultValue: `${e}`,
            value: `${e}`,
            onItem: ({ size: i })=>n(i),
            render: ({ entity: { size: i } })=>i,
            css: {
                base: [
                    "px-8",
                    "py-1"
                ],
                item: [
                    "px-8",
                    "py-1"
                ]
            },
            ...r
        }), I3 = ({ cursor: t, count: e, textTotal: n, onPage: r, onSize: i, variant: s, tva: o = zre, css: a })=>{
        const l = X.useMemo(()=>fte({
                page: t.page,
                total: Math.ceil(e.filter / t.size),
                siblings: 1,
                boundaries: 1
            }), [
            t.page,
            e.filter,
            t.size
        ]), c = o({
            ...s,
            css: a
        }).slots;
        return v.jsxs("div", {
            className: c.base(),
            children: [
                l.total > 1 ? v.jsxs("div", {
                    className: "flex items-center justify-center gap-2 text-sm",
                    children: [
                        [
                            "both",
                            "start"
                        ].includes(l.type) && v.jsxs(v.Fragment, {
                            children: [
                                v.jsx(bR, {
                                    page: t.page,
                                    pages: l.start,
                                    onPage: r
                                }),
                                v.jsx(vn, {
                                    icon: C3
                                })
                            ]
                        }),
                        v.jsx(bR, {
                            page: t.page,
                            pages: l.pages,
                            onPage: r
                        }),
                        [
                            "both",
                            "end"
                        ].includes(l.type) && v.jsxs(v.Fragment, {
                            children: [
                                v.jsx(vn, {
                                    icon: C3
                                }),
                                v.jsx(bR, {
                                    page: t.page,
                                    pages: l.end,
                                    onPage: r
                                })
                            ]
                        })
                    ]
                }) : null,
                v.jsxs("div", {
                    className: c.sums(),
                    children: [
                        v.jsx("div", {
                            children: n
                        }),
                        v.jsx("div", {
                            className: "font-bold",
                            children: e.filter
                        }),
                        e.filter !== e.where && v.jsxs(v.Fragment, {
                            children: [
                                v.jsx("div", {
                                    children: "/"
                                }),
                                v.jsx("div", {
                                    className: "font-semibold",
                                    children: e.where
                                })
                            ]
                        })
                    ]
                }),
                v.jsx(qre, {
                    size: t.size,
                    onSize: i
                })
            ]
        });
    }, R3 = "function", oy = "64e10b34-2bf7-4616-9668-f99de5aa046e", Hre = "get", $re = "has", Gre = "set", { isArray: a1 } = Array;
    let { SharedArrayBuffer: EE, window: Xre } = globalThis, { notify: U5, wait: z5, waitAsync: ME } = Atomics, V5 = null;
    ME || (ME = (t)=>({
            value: new Promise((e)=>{
                let n = new Worker("data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))");
                n.onmessage = e, n.postMessage(t);
            })
        }));
    try {
        new EE(4);
    } catch  {
        EE = ArrayBuffer;
        const e = new WeakMap;
        if (Xre) {
            const n = new Map, { prototype: { postMessage: r } } = Worker, i = (s)=>{
                const o = s.data?.[oy];
                if (!a1(o)) {
                    s.stopImmediatePropagation();
                    const { id: a, sb: l } = o;
                    n.get(a)(l);
                }
            };
            V5 = function(s, ...o) {
                const a = s?.[oy];
                if (a1(a)) {
                    const [l, c] = a;
                    e.set(c, l), this.addEventListener("message", i);
                }
                return r.call(this, s, ...o);
            }, ME = (s)=>({
                    value: new Promise((o)=>{
                        n.set(e.get(s), o);
                    }).then((o)=>{
                        n.delete(e.get(s)), e.delete(s);
                        for(let a = 0; a < o.length; a++)s[a] = o[a];
                        return "ok";
                    })
                });
        } else {
            const n = (r, i)=>({
                    [oy]: {
                        id: r,
                        sb: i
                    }
                });
            U5 = (r)=>{
                postMessage(n(e.get(r), r));
            }, addEventListener("message", (r)=>{
                const i = r.data?.[oy];
                if (a1(i)) {
                    const [s, o] = i;
                    e.set(o, s);
                }
            });
        }
    }
    const { Int32Array: PP, Map: A3, Uint16Array: kP } = globalThis, { BYTES_PER_ELEMENT: N3 } = PP, { BYTES_PER_ELEMENT: Kre } = kP, Yre = (t, e, n)=>{
        for(; z5(t, 0, 0, e) === "timed-out";)n();
    }, OP = new WeakSet, wR = new WeakMap, Zre = {
        value: {
            then: (t)=>t()
        }
    };
    let Jre = 0;
    const CO = (t, { parse: e = JSON.parse, stringify: n = JSON.stringify, transform: r, interrupt: i } = JSON)=>{
        if (!wR.has(t)) {
            const s = V5 || t.postMessage, o = (p, ...g)=>s.call(t, {
                    [oy]: g
                }, {
                    transfer: p
                }), a = typeof i === R3 ? i : i?.handler, l = i?.delay || 42, c = new TextDecoder("utf-16"), u = (p, g)=>p ? ME(g, 0) : (a ? Yre(g, l, a) : z5(g, 0), Zre);
            let f = !1;
            wR.set(t, new Proxy(new A3, {
                [$re]: (p, g)=>typeof g == "string" && !g.startsWith("_"),
                [Hre]: (p, g)=>g === "then" ? null : (...x)=>{
                        const S = Jre++;
                        let _ = new PP(new EE(N3 * 2)), b = [];
                        OP.has(x.at(-1) || b) && OP.delete(b = x.pop()), o(b, S, _, g, r ? x.map(r) : x);
                        const M = t !== globalThis;
                        let E = 0;
                        return f && M && (E = setTimeout(console.warn, 1e3, `💀🔒 - Possible deadlock if proxy.${g}(...args) is awaited`)), u(M, _).value.then(()=>{
                            clearTimeout(E);
                            const T = _[1];
                            if (!T) return;
                            const k = Kre * T;
                            return _ = new PP(new EE(k + k % N3)), o([], S, _), u(M, _).value.then(()=>e(c.decode(new kP(_.buffer).slice(0, T))));
                        });
                    },
                [Gre] (p, g, x) {
                    const S = typeof x;
                    if (S !== R3) throw new Error(`Unable to assign ${g} as ${S}`);
                    if (!p.size) {
                        const _ = new A3;
                        t.addEventListener("message", async (b)=>{
                            const M = b.data?.[oy];
                            if (a1(M)) {
                                b.stopImmediatePropagation();
                                const [E, T, ...k] = M;
                                let N;
                                if (k.length) {
                                    const [D, L] = k;
                                    if (p.has(D)) {
                                        f = !0;
                                        try {
                                            const R = await p.get(D)(...L);
                                            if (R !== void 0) {
                                                const A = n(r ? r(R) : R);
                                                _.set(E, A), T[1] = A.length;
                                            }
                                        } catch (R) {
                                            N = R;
                                        } finally{
                                            f = !1;
                                        }
                                    } else N = new Error(`Unsupported action: ${D}`);
                                    T[0] = 1;
                                } else {
                                    const D = _.get(E);
                                    _.delete(E);
                                    for(let L = new kP(T.buffer), R = 0; R < D.length; R++)L[R] = D.charCodeAt(R);
                                }
                                if (U5(T, 0), N) throw N;
                            }
                        });
                    }
                    return !!p.set(g, x);
                }
            }));
        }
        return wR.get(t);
    };
    CO.transfer = (...t)=>(OP.add(t), t);
    function P3() {
        let t, e;
        return {
            lock: async ()=>{
                for(; t;)await t;
                t = new Promise((i)=>{
                    e = i;
                });
            },
            unlock: async ()=>{
                const i = e;
                t = void 0, e = void 0, i?.();
            }
        };
    }
    const Qre = "modulepreload", eie = function(t) {
        return "/" + t;
    }, k3 = {}, TE = function(e, n, r) {
        let i = Promise.resolve();
        if (n && n.length > 0) {
            document.getElementsByTagName("link");
            const o = document.querySelector("meta[property=csp-nonce]"), a = o?.nonce || o?.getAttribute("nonce");
            i = Promise.allSettled(n.map((l)=>{
                if (l = eie(l), l in k3) return;
                k3[l] = !0;
                const c = l.endsWith(".css"), u = c ? '[rel="stylesheet"]' : "";
                if (document.querySelector(`link[href="${l}"]${u}`)) return;
                const f = document.createElement("link");
                if (f.rel = c ? "stylesheet" : Qre, c || (f.as = "script"), f.crossOrigin = "", f.href = l, a && f.setAttribute("nonce", a), document.head.appendChild(f), c) return new Promise((p, g)=>{
                    f.addEventListener("load", p), f.addEventListener("error", ()=>g(new Error(`Unable to preload CSS for ${l}`)));
                });
            }));
        }
        function s(o) {
            const a = new Event("vite:preloadError", {
                cancelable: !0
            });
            if (a.payload = o, window.dispatchEvent(a), !a.defaultPrevented) throw o;
        }
        return i.then((o)=>{
            for (const a of o || [])a.status === "rejected" && s(a.reason);
            return e().catch(s);
        });
    };
    async function W5(t, e) {
        let n;
        if (t instanceof Blob ? n = t.stream() : n = t, n instanceof ReadableStream && e) {
            const i = n.getReader();
            switch(e){
                case "callback":
                    return async ()=>(await i.read()).value;
                case "buffer":
                    const s = [];
                    let o = !1;
                    for(; !o;){
                        const u = await i.read();
                        u.value && s.push(u.value), o = u.done;
                    }
                    const a = s.reduce((u, f)=>u + f.length, 0), l = new Uint8Array(a);
                    let c = 0;
                    return s.forEach((u)=>{
                        l.set(u, c), c += u.length;
                    }), l;
            }
        } else return n;
    }
    class CE {
        constructor(e){
            Object.defineProperty(this, "sqlite3InitModule", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: e
            }), Object.defineProperty(this, "sqlite3", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "db", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "config", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "pointers", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: []
            }), Object.defineProperty(this, "storageType", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "memory"
            });
        }
        async init(e) {
            const { databasePath: n } = e, r = this.getFlags(e);
            if (!this.sqlite3InitModule) {
                const { default: i } = await TE(async ()=>{
                    const { default: s } = await import("./index-itAQ-X7t.js");
                    return {
                        default: s
                    };
                }, []);
                this.sqlite3InitModule = i;
            }
            this.sqlite3 || (this.sqlite3 = await this.sqlite3InitModule()), this.db && await this.destroy(), this.db = new this.sqlite3.oo1.DB(n, r), this.config = e;
        }
        async exec(e) {
            if (!this.db) throw new Error("Driver not initialized");
            return this.execOnDb(this.db, e);
        }
        async execBatch(e) {
            if (!this.db) throw new Error("Driver not initialized");
            const n = [];
            return this.db.transaction((r)=>{
                for (let i of e){
                    const s = this.execOnDb(r, i);
                    n.push(s);
                }
            }), n;
        }
        async isDatabasePersisted() {
            return !1;
        }
        async getDatabaseSizeBytes() {
            const n = (await this.exec({
                sql: `SELECT page_count * page_size AS size 
				FROM pragma_page_count(), pragma_page_size()`,
                method: "get"
            }))?.rows?.[0];
            if (typeof n != "number") throw new Error("Failed to query database size");
            return n;
        }
        async createFunction(e) {
            if (!this.db) throw new Error("Driver not initialized");
            switch(e.type){
                case "callback":
                case "scalar":
                    this.db.createFunction({
                        name: e.name,
                        xFunc: (n, ...r)=>e.func(...r),
                        arity: -1
                    });
                    break;
                case "aggregate":
                    this.db.createFunction({
                        name: e.name,
                        xStep: (n, ...r)=>e.func.step(...r),
                        xFinal: (n, ...r)=>e.func.final(...r),
                        arity: -1
                    });
                    break;
            }
        }
        async import(e) {
            if (!this.sqlite3 || !this.db || !this.config) throw new Error("Driver not initialized");
            const n = await W5(e, "buffer"), r = this.sqlite3.wasm.allocFromTypedArray(n);
            this.pointers.push(r);
            const i = this.sqlite3.capi.sqlite3_deserialize(this.db, "main", r, n.byteLength, n.byteLength, this.config.readOnly ? this.sqlite3.capi.SQLITE_DESERIALIZE_READONLY : this.sqlite3.capi.SQLITE_DESERIALIZE_RESIZEABLE);
            this.db.checkRc(i);
        }
        async export() {
            if (!this.sqlite3 || !this.db) throw new Error("Driver not initialized");
            return {
                name: "database.sqlite3",
                data: this.sqlite3.capi.sqlite3_js_db_export(this.db)
            };
        }
        async clear() {}
        async destroy() {
            this.closeDb(), this.pointers.forEach((e)=>this.sqlite3?.wasm.dealloc(e)), this.pointers = [];
        }
        getFlags(e) {
            const { readOnly: n, verbose: r } = e;
            return [
                n === !0 ? "r" : "cw",
                r === !0 ? "t" : ""
            ].join("");
        }
        execOnDb(e, n) {
            const r = {
                rows: [],
                columns: []
            }, i = e.exec({
                sql: n.sql,
                bind: n.params,
                returnValue: "resultRows",
                rowMode: "array",
                columnNames: r.columns
            });
            switch(n.method){
                case "run":
                    break;
                case "get":
                    r.rows = i[0] ?? [];
                    break;
                case "all":
                default:
                    r.rows = i;
                    break;
            }
            return r;
        }
        closeDb() {
            this.db && (this.db.close(), this.db = void 0);
        }
    }
    class L_ {
        constructor(e){
            Object.defineProperty(this, "driver", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "config", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: {}
            }), Object.defineProperty(this, "userFunctions", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: new Map
            }), Object.defineProperty(this, "initMutex", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: P3()
            }), Object.defineProperty(this, "transactionMutex", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: P3()
            }), Object.defineProperty(this, "transactionKey", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: null
            }), Object.defineProperty(this, "proxy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "reinitChannel", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "onmessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "init", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    if (this.config.databasePath) {
                        await this.initMutex.lock();
                        try {
                            try {
                                await this.driver.init(this.config);
                            } catch  {
                                console.warn(`Persistence failed, so ${this.config.databasePath} will not be saved. For origin private file system persistence, make sure your web server is configured to use the correct HTTP response headers (See https://sqlocal.dallashoffman.com/guide/setup#cross-origin-isolation).`), this.config.databasePath = ":memory:", this.driver = new CE, await this.driver.init(this.config);
                            }
                            this.driver.storageType !== "memory" && (this.reinitChannel = new BroadcastChannel(`_sqlocal_reinit_(${this.config.databasePath})`), this.reinitChannel.onmessage = (s)=>{
                                const o = s.data;
                                if (this.config.clientKey !== o.clientKey) switch(o.type){
                                    case "reinit":
                                        this.init(o.reason);
                                        break;
                                    case "close":
                                        this.driver.destroy();
                                        break;
                                }
                            }), await Promise.all(Array.from(this.userFunctions.values()).map((s)=>this.initUserFunction(s))), await this.execInitStatements(), this.emitMessage({
                                type: "event",
                                event: "connect",
                                reason: i
                            });
                        } catch (s) {
                            this.emitMessage({
                                type: "error",
                                error: s,
                                queryKey: null
                            }), await this.destroy();
                        } finally{
                            await this.initMutex.unlock();
                        }
                    }
                }
            }), Object.defineProperty(this, "postMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i, s)=>{
                    const o = i instanceof MessageEvent ? i.data : i;
                    switch(await this.initMutex.lock(), o.type){
                        case "config":
                            this.editConfig(o);
                            break;
                        case "query":
                        case "batch":
                        case "transaction":
                            this.exec(o);
                            break;
                        case "function":
                            this.createUserFunction(o);
                            break;
                        case "getinfo":
                            this.getDatabaseInfo(o);
                            break;
                        case "import":
                            this.importDb(o);
                            break;
                        case "export":
                            this.exportDb(o);
                            break;
                        case "delete":
                            this.deleteDb(o);
                            break;
                        case "destroy":
                            this.destroy(o);
                            break;
                    }
                    await this.initMutex.unlock();
                }
            }), Object.defineProperty(this, "emitMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (i, s = [])=>{
                    this.onmessage && this.onmessage(i, s);
                }
            }), Object.defineProperty(this, "editConfig", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (i)=>{
                    this.config = i.config, this.init("initial");
                }
            }), Object.defineProperty(this, "exec", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    try {
                        const s = {
                            type: "data",
                            queryKey: i.queryKey,
                            data: []
                        };
                        switch(i.type){
                            case "query":
                                const o = this.transactionKey !== null && this.transactionKey === i.transactionKey;
                                try {
                                    o || await this.transactionMutex.lock();
                                    const a = await this.driver.exec(i);
                                    s.data.push(a);
                                } finally{
                                    o || await this.transactionMutex.unlock();
                                }
                                break;
                            case "batch":
                                try {
                                    await this.transactionMutex.lock();
                                    const a = await this.driver.execBatch(i.statements);
                                    s.data.push(...a);
                                } finally{
                                    await this.transactionMutex.unlock();
                                }
                                break;
                            case "transaction":
                                if (i.action === "begin" && (await this.transactionMutex.lock(), this.transactionKey = i.transactionKey, await this.driver.exec({
                                    sql: "BEGIN"
                                })), (i.action === "commit" || i.action === "rollback") && this.transactionKey !== null && this.transactionKey === i.transactionKey) {
                                    const a = i.action === "commit" ? "COMMIT" : "ROLLBACK";
                                    await this.driver.exec({
                                        sql: a
                                    }), this.transactionKey = null, await this.transactionMutex.unlock();
                                }
                                break;
                        }
                        this.emitMessage(s);
                    } catch (s) {
                        this.emitMessage({
                            type: "error",
                            error: s,
                            queryKey: i.queryKey
                        });
                    }
                }
            }), Object.defineProperty(this, "execInitStatements", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    if (this.config.onInitStatements) for (let i of this.config.onInitStatements)await this.driver.exec(i);
                }
            }), Object.defineProperty(this, "getDatabaseInfo", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    try {
                        this.emitMessage({
                            type: "info",
                            queryKey: i.queryKey,
                            info: {
                                databasePath: this.config.databasePath,
                                storageType: this.driver.storageType,
                                databaseSizeBytes: await this.driver.getDatabaseSizeBytes(),
                                persisted: await this.driver.isDatabasePersisted()
                            }
                        });
                    } catch (s) {
                        this.emitMessage({
                            type: "error",
                            queryKey: i.queryKey,
                            error: s
                        });
                    }
                }
            }), Object.defineProperty(this, "createUserFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    const { functionName: s, functionType: o, queryKey: a } = i;
                    let l;
                    if (this.userFunctions.has(s)) {
                        this.emitMessage({
                            type: "error",
                            error: new Error(`A user-defined function with the name "${s}" has already been created for this SQLocal instance.`),
                            queryKey: a
                        });
                        return;
                    }
                    switch(o){
                        case "callback":
                            l = {
                                type: o,
                                name: s,
                                func: (...c)=>{
                                    this.emitMessage({
                                        type: "callback",
                                        name: s,
                                        args: c
                                    });
                                }
                            };
                            break;
                        case "scalar":
                            l = {
                                type: o,
                                name: s,
                                func: this.proxy[`_sqlocal_func_${s}`]
                            };
                            break;
                        case "aggregate":
                            l = {
                                type: o,
                                name: s,
                                func: {
                                    step: this.proxy[`_sqlocal_func_${s}_step`],
                                    final: this.proxy[`_sqlocal_func_${s}_final`]
                                }
                            };
                            break;
                    }
                    try {
                        await this.initUserFunction(l), this.emitMessage({
                            type: "success",
                            queryKey: a
                        });
                    } catch (c) {
                        this.emitMessage({
                            type: "error",
                            error: c,
                            queryKey: a
                        });
                    }
                }
            }), Object.defineProperty(this, "initUserFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    await this.driver.createFunction(i), this.userFunctions.set(i.name, i);
                }
            }), Object.defineProperty(this, "importDb", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    const { queryKey: s, database: o } = i;
                    let a = !1;
                    try {
                        await this.driver.import(o), this.driver.storageType === "memory" && await this.execInitStatements();
                    } catch (l) {
                        this.emitMessage({
                            type: "error",
                            error: l,
                            queryKey: s
                        }), a = !0;
                    } finally{
                        this.driver.storageType !== "memory" && await this.init("overwrite");
                    }
                    a || this.emitMessage({
                        type: "success",
                        queryKey: s
                    });
                }
            }), Object.defineProperty(this, "exportDb", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    const { queryKey: s } = i;
                    try {
                        const { name: o, data: a } = await this.driver.export();
                        this.emitMessage({
                            type: "buffer",
                            queryKey: s,
                            bufferName: o,
                            buffer: a
                        }, [
                            a
                        ]);
                    } catch (o) {
                        this.emitMessage({
                            type: "error",
                            error: o,
                            queryKey: s
                        });
                    }
                }
            }), Object.defineProperty(this, "deleteDb", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    const { queryKey: s } = i;
                    let o = !1;
                    try {
                        await this.driver.clear();
                    } catch (a) {
                        this.emitMessage({
                            type: "error",
                            error: a,
                            queryKey: s
                        }), o = !0;
                    } finally{
                        await this.init("delete");
                    }
                    o || this.emitMessage({
                        type: "success",
                        queryKey: s
                    });
                }
            }), Object.defineProperty(this, "destroy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    await this.driver.exec({
                        sql: "PRAGMA optimize"
                    }), await this.driver.destroy(), this.reinitChannel && (this.reinitChannel.close(), this.reinitChannel = void 0), i && this.emitMessage({
                        type: "success",
                        queryKey: i.queryKey
                    });
                }
            });
            const r = typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope ? CO(globalThis) : globalThis;
            this.proxy = r, this.driver = e;
        }
    }
    function IE(t, ...e) {
        return {
            sql: t.join("?"),
            params: e
        };
    }
    function tie(t) {
        return !t.some((e)=>!Array.isArray(e));
    }
    function _R(t, e) {
        let n;
        return tie(t) ? n = t : n = [
            t
        ], n.map((r)=>{
            const i = {};
            return e.forEach((s, o)=>{
                i[s] = r[o];
            }), i;
        });
    }
    function nie(t) {
        return typeof t == "object" && t !== null && "getSQL" in t && typeof t.getSQL == "function";
    }
    function rie(t) {
        return typeof t == "object" && t !== null && "sql" in t && typeof t.sql == "string" && "params" in t;
    }
    function iie(t) {
        if (typeof t == "function" && (t = t(IE)), nie(t)) try {
            if (!("toSQL" in t && typeof t.toSQL == "function")) throw 1;
            const r = t.toSQL();
            if (!rie(r)) throw 2;
            return r;
        } catch  {
            throw new Error("The passed statement could not be parsed.");
        }
        const e = t.sql;
        let n = [];
        return "params" in t ? n = t.params : "parameters" in t && (n = t.parameters), {
            sql: e,
            params: n
        };
    }
    function SR() {
        return crypto.randomUUID();
    }
    function O3(t, e) {
        let n;
        return typeof t == "string" ? n = {
            sql: t,
            params: e
        } : n = IE(t, ...e), n;
    }
    async function D_(t, e, n, r) {
        return !e && "locks" in navigator ? navigator.locks.request(`_sqlocal_mutation_(${n.databasePath})`, {
            mode: t
        }, r) : r();
    }
    class L3 extends CE {
        constructor(e, n){
            super(n), Object.defineProperty(this, "storageType", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: e
            });
        }
        async init(e) {
            const n = this.getFlags(e);
            if (e.readOnly) throw new Error(`SQLite storage type "${this.storageType}" does not support read-only mode.`);
            if (!this.sqlite3InitModule) {
                const { default: r } = await TE(async ()=>{
                    const { default: i } = await import("./index-itAQ-X7t.js");
                    return {
                        default: i
                    };
                }, []);
                this.sqlite3InitModule = r;
            }
            this.sqlite3 || (this.sqlite3 = await this.sqlite3InitModule()), this.db && await this.destroy(), this.db = new this.sqlite3.oo1.JsStorageDb({
                filename: this.storageType,
                flags: n
            }), this.config = e;
        }
        async isDatabasePersisted() {
            return navigator.storage?.persisted();
        }
        async getDatabaseSizeBytes() {
            if (!this.db) throw new Error("Driver not initialized");
            return this.db.storageSize();
        }
        async import(e) {
            const n = new CE;
            await n.init({}), await n.import(e), await this.clear(), await n.exec({
                sql: `VACUUM INTO 'file:${this.storageType}?vfs=kvvfs'`
            }), await n.destroy();
        }
        async clear() {
            if (!this.db) throw new Error("Driver not initialized");
            this.db.clearStorage();
        }
        async destroy() {
            this.closeDb();
        }
    }
    class sie {
        constructor(e){
            Object.defineProperty(this, "config", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "clientKey", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "processor", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "isDestroyed", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: !1
            }), Object.defineProperty(this, "bypassMutationLock", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: !1
            }), Object.defineProperty(this, "userCallbacks", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: new Map
            }), Object.defineProperty(this, "queriesInProgress", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: new Map
            }), Object.defineProperty(this, "proxy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "reinitChannel", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "processMessageEvent", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (l)=>{
                    const c = l instanceof MessageEvent ? l.data : l, u = this.queriesInProgress;
                    switch(c.type){
                        case "success":
                        case "data":
                        case "buffer":
                        case "info":
                        case "error":
                            if (c.queryKey && u.has(c.queryKey)) {
                                const [p, g] = u.get(c.queryKey);
                                c.type === "error" ? g(c.error) : p(c), u.delete(c.queryKey);
                            } else if (c.type === "error") throw c.error;
                            break;
                        case "callback":
                            const f = this.userCallbacks.get(c.name);
                            f && f(...c.args ?? []);
                            break;
                        case "event":
                            this.config.onConnect?.(c.reason);
                            break;
                    }
                }
            }), Object.defineProperty(this, "createQuery", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l)=>D_("shared", this.bypassMutationLock || l.type === "import" || l.type === "delete", this.config, async ()=>{
                        if (this.isDestroyed === !0) throw new Error("This SQLocal client has been destroyed. You will need to initialize a new client in order to make further queries.");
                        const c = SR();
                        switch(l.type){
                            case "import":
                                this.processor.postMessage({
                                    ...l,
                                    queryKey: c
                                }, [
                                    l.database
                                ]);
                                break;
                            default:
                                this.processor.postMessage({
                                    ...l,
                                    queryKey: c
                                });
                                break;
                        }
                        return new Promise((u, f)=>{
                            this.queriesInProgress.set(c, [
                                u,
                                f
                            ]);
                        });
                    })
            }), Object.defineProperty(this, "broadcast", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (l)=>{
                    this.reinitChannel.postMessage(l);
                }
            }), Object.defineProperty(this, "exec", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l, c, u = "all", f)=>{
                    const p = await this.createQuery({
                        type: "query",
                        transactionKey: f,
                        sql: l,
                        params: c,
                        method: u
                    }), g = {
                        rows: [],
                        columns: []
                    };
                    return p.type === "data" && (g.rows = p.data[0]?.rows ?? [], g.columns = p.data[0]?.columns ?? []), g;
                }
            }), Object.defineProperty(this, "execBatch", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l)=>{
                    const c = await this.createQuery({
                        type: "batch",
                        statements: l
                    }), u = new Array(l.length).fill({
                        rows: [],
                        columns: []
                    });
                    return c.type === "data" && c.data.forEach((f, p)=>{
                        u[p] = f;
                    }), u;
                }
            }), Object.defineProperty(this, "sql", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l, ...c)=>{
                    const u = O3(l, c), { rows: f, columns: p } = await this.exec(u.sql, u.params, "all");
                    return _R(f, p);
                }
            }), Object.defineProperty(this, "batch", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l)=>{
                    const c = l(IE);
                    return (await this.execBatch(c)).map(({ rows: f, columns: p })=>_R(f, p));
                }
            }), Object.defineProperty(this, "beginTransaction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    const l = SR();
                    await this.createQuery({
                        type: "transaction",
                        transactionKey: l,
                        action: "begin"
                    });
                    const c = async (g)=>{
                        const x = iie(g), { rows: S, columns: _ } = await this.exec(x.sql, x.params, "all", l);
                        return _R(S, _);
                    };
                    return {
                        query: c,
                        sql: async (g, ...x)=>{
                            const S = O3(g, x);
                            return await c(S);
                        },
                        commit: async ()=>{
                            await this.createQuery({
                                type: "transaction",
                                transactionKey: l,
                                action: "commit"
                            });
                        },
                        rollback: async ()=>{
                            await this.createQuery({
                                type: "transaction",
                                transactionKey: l,
                                action: "rollback"
                            });
                        }
                    };
                }
            }), Object.defineProperty(this, "transaction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l)=>D_("exclusive", !1, this.config, async ()=>{
                        let c;
                        this.bypassMutationLock = !0;
                        try {
                            c = await this.beginTransaction();
                            const u = await l({
                                sql: c.sql,
                                query: c.query
                            });
                            return await c.commit(), u;
                        } catch (u) {
                            throw await c?.rollback(), u;
                        } finally{
                            this.bypassMutationLock = !1;
                        }
                    })
            }), Object.defineProperty(this, "createCallbackFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l, c)=>{
                    await this.createQuery({
                        type: "function",
                        functionName: l,
                        functionType: "callback"
                    }), this.userCallbacks.set(l, c);
                }
            }), Object.defineProperty(this, "createScalarFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l, c)=>{
                    const u = `_sqlocal_func_${l}`, f = ()=>{
                        this.proxy[u] = c;
                    };
                    this.proxy === globalThis && f(), await this.createQuery({
                        type: "function",
                        functionName: l,
                        functionType: "scalar"
                    }), this.proxy !== globalThis && f();
                }
            }), Object.defineProperty(this, "createAggregateFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l, c)=>{
                    const u = `_sqlocal_func_${l}`, f = ()=>{
                        this.proxy[`${u}_step`] = c.step, this.proxy[`${u}_final`] = c.final;
                    };
                    this.proxy === globalThis && f(), await this.createQuery({
                        type: "function",
                        functionName: l,
                        functionType: "aggregate"
                    }), this.proxy !== globalThis && f();
                }
            }), Object.defineProperty(this, "getDatabaseInfo", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    const l = await this.createQuery({
                        type: "getinfo"
                    });
                    if (l.type === "info") return l.info;
                    throw new Error("The database failed to return valid information.");
                }
            }), Object.defineProperty(this, "getDatabaseFile", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    const l = await this.createQuery({
                        type: "export"
                    });
                    if (l.type === "buffer") return new File([
                        l.buffer
                    ], l.bufferName, {
                        type: "application/x-sqlite3"
                    });
                    throw new Error("The database failed to export.");
                }
            }), Object.defineProperty(this, "overwriteDatabaseFile", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l, c)=>{
                    await D_("exclusive", !1, this.config, async ()=>{
                        try {
                            this.broadcast({
                                type: "close",
                                clientKey: this.clientKey
                            });
                            const u = await W5(l);
                            await this.createQuery({
                                type: "import",
                                database: u
                            }), typeof c == "function" && (this.bypassMutationLock = !0, await c()), this.broadcast({
                                type: "reinit",
                                clientKey: this.clientKey,
                                reason: "overwrite"
                            });
                        } finally{
                            this.bypassMutationLock = !1;
                        }
                    });
                }
            }), Object.defineProperty(this, "deleteDatabaseFile", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l)=>{
                    await D_("exclusive", !1, this.config, async ()=>{
                        try {
                            this.broadcast({
                                type: "close",
                                clientKey: this.clientKey
                            }), await this.createQuery({
                                type: "delete"
                            }), typeof l == "function" && (this.bypassMutationLock = !0, await l()), this.broadcast({
                                type: "reinit",
                                clientKey: this.clientKey,
                                reason: "delete"
                            });
                        } finally{
                            this.bypassMutationLock = !1;
                        }
                    });
                }
            }), Object.defineProperty(this, "destroy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    await this.createQuery({
                        type: "destroy"
                    }), typeof globalThis.Worker < "u" && this.processor instanceof Worker && (this.processor.removeEventListener("message", this.processMessageEvent), this.processor.terminate()), this.queriesInProgress.clear(), this.userCallbacks.clear(), this.reinitChannel.close(), this.isDestroyed = !0;
                }
            });
            const n = typeof e == "string" ? {
                databasePath: e
            } : e, { onInit: r, onConnect: i, processor: s, ...o } = n, { databasePath: a } = o;
            if (this.config = n, this.clientKey = SR(), this.reinitChannel = new BroadcastChannel(`_sqlocal_reinit_(${a})`), typeof s < "u") this.processor = s;
            else if (a === "local" || a === ":localStorage:") {
                const l = new L3("local");
                this.processor = new L_(l);
            } else if (a === "session" || a === ":sessionStorage:") {
                const l = new L3("session");
                this.processor = new L_(l);
            } else if (typeof globalThis.Worker < "u" && a !== ":memory:") this.processor = new Worker(new URL("/assets/worker-ChjnweQB.js", import.meta.url), {
                type: "module"
            });
            else {
                const l = new CE;
                this.processor = new L_(l);
            }
            this.processor instanceof L_ ? (this.processor.onmessage = (l)=>this.processMessageEvent(l), this.proxy = globalThis) : (this.processor.addEventListener("message", this.processMessageEvent), this.proxy = CO(this.processor)), this.processor.postMessage({
                type: "config",
                config: {
                    ...o,
                    clientKey: this.clientKey,
                    onInitStatements: r?.(IE) ?? []
                }
            });
        }
    }
    class oie extends sie {
        constructor(){
            super(...arguments), Object.defineProperty(this, "dialect", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: {
                    createAdapter: ()=>new YQ,
                    createDriver: ()=>new aie(this),
                    createIntrospector: (e)=>new KQ(e),
                    createQueryCompiler: ()=>new $Q
                }
            });
        }
    }
    class aie {
        constructor(e){
            Object.defineProperty(this, "client", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: e
            });
        }
        async init() {}
        async acquireConnection() {
            return new lie(this.client);
        }
        async releaseConnection() {}
        async beginTransaction(e) {
            e.transaction = await this.client.beginTransaction();
        }
        async commitTransaction(e) {
            await e.transaction?.commit(), e.transaction = null;
        }
        async rollbackTransaction(e) {
            await e.transaction?.rollback(), e.transaction = null;
        }
        async destroy() {
            await this.client.destroy();
        }
    }
    class lie {
        constructor(e){
            Object.defineProperty(this, "client", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: e
            }), Object.defineProperty(this, "transaction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: null
            });
        }
        async executeQuery(e) {
            let n;
            return this.transaction === null ? n = await this.client.sql(e.sql, ...e.parameters) : n = await this.transaction.query(e), {
                rows: n
            };
        }
        async *streamQuery() {
            throw new Error("SQLite3 does not support streaming.");
        }
    }
    const cie = ({ database: t, bootstrap: e })=>{
        const { dialect: n } = new oie({
            databasePath: `${t}.sqlite3`,
            onInit (i) {
                return [
                    i`PRAGMA foreign_keys = ON;`,
                    i`PRAGMA journal_mode = WAL;`
                ];
            }
        }), r = new sO({
            dialect: n,
            log: [
                "error"
            ]
        });
        return {
            kysely: r,
            async bootstrap () {
                return e({
                    kysely: r
                });
            }
        };
    };
    function uie(t, e, n, r = {
        leading: !1
    }) {
        const [i, s] = X.useState(t), [o, a] = X.useState(t), l = X.useRef(null), c = X.useRef(!0), u = ()=>window.clearTimeout(l.current || void 0);
        X.useEffect(()=>u, []), X.useEffect(()=>{
            e(i);
        }, [
            i
        ]), X.useEffect(()=>{
            a(t), s(t);
        }, [
            t
        ]);
        const f = X.useCallback((p)=>{
            a(p), u(), c.current && r.leading ? s(p) : l.current = window.setTimeout(()=>{
                c.current = !0, s(p);
            }, n), c.current = !1;
        }, [
            r.leading
        ]);
        return [
            o,
            f
        ];
    }
    const fs = Tn({
        slot: {
            base: [
                "border",
                "border-gray-300",
                "rounded-md",
                "p-4",
                "flex",
                "flex-col",
                "gap-2",
                "items-center"
            ],
            fieldset: [
                "flex",
                "flex-col",
                "gap-4",
                "w-full",
                "p-4"
            ],
            legend: [
                "font-bold",
                "text-lg",
                "p-1",
                "border-b",
                "border-slate-400",
                "w-full"
            ],
            input: [
                "w-full",
                "border",
                "border-gray-300",
                "rounded-md",
                "p-2",
                "focus:outline-hidden",
                "focus:ring-2",
                "focus:ring-blue-500",
                "focus:border-transparent"
            ]
        },
        variant: {
            isLoading: {
                true: []
            },
            isSubmitting: {
                true: []
            }
        },
        match: [
            {
                if: {
                    isSubmitting: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "pointer-events-none",
                        "select-none"
                    ]
                }
            }
        ],
        defaults: {
            isLoading: !1,
            isSubmitting: !1
        }
    }), die = "icon-[material-symbols--error-outline]", fie = Tn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-1",
                "items-center",
                "text-red-600",
                "p-2"
            ]
        },
        variant: {
            highlight: {
                true: []
            },
            compact: {
                true: []
            }
        },
        match: [
            {
                if: {
                    highlight: !0
                },
                then: {
                    base: [
                        "bg-red-100",
                        "p-2",
                        "font-bold",
                        "border",
                        "border-red-200",
                        "rounded-md",
                        "w-full"
                    ]
                }
            },
            {
                if: {
                    compact: !0
                },
                then: {
                    base: [
                        "p-0"
                    ]
                }
            }
        ],
        defaults: {
            highlight: !1,
            compact: !1
        }
    }), rs = ({ error: t, variant: e, tva: n = fie, css: r })=>{
        const i = n({
            ...e,
            css: r
        }).slots;
        return t?.message ? v.jsxs("div", {
            className: i.base(),
            children: [
                v.jsx(vn, {
                    icon: die
                }),
                v.jsx("span", {
                    children: sa.rich(t.message)
                })
            ]
        }) : null;
    }, hie = Tn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-1",
                "w-full"
            ],
            input: []
        },
        variant: {
            required: {
                true: []
            },
            disabled: {
                true: []
            },
            isSubmitting: {
                true: []
            },
            isLoading: {
                true: []
            },
            isError: {
                true: []
            }
        },
        match: [
            {
                if: {
                    isError: !0
                },
                then: {
                    base: [
                        "text-red-600"
                    ]
                }
            },
            {
                if: {
                    required: !0
                },
                then: {
                    base: [
                        "text-emerald-600",
                        "font-bold"
                    ]
                }
            },
            {
                if: {
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-75",
                        "cursor-not-allowed"
                    ],
                    input: [
                        "pointer-events-none"
                    ]
                }
            }
        ],
        defaults: {
            required: !1,
            disabled: !1,
            isSubmitting: !1,
            isLoading: !1,
            isError: !1
        }
    }), yn = ({ label: t, hint: e, required: n = !1, formState: r, name: i, disabled: s, children: o, variant: a, tva: l = hie, css: c })=>{
        const u = l({
            isSubmitting: r.isSubmitting,
            isLoading: r.isLoading,
            isError: !!r.errors[i],
            required: n,
            disabled: s,
            ...a,
            css: c
        }).slots;
        return v.jsxs("div", {
            className: u.base(),
            children: [
                v.jsxs("div", {
                    className: "flex flex-row justify-between",
                    children: [
                        t ? v.jsx("label", {
                            htmlFor: i,
                            children: t
                        }) : null,
                        v.jsx(rs, {
                            variant: {
                                compact: !0
                            },
                            error: r.errors[i]
                        })
                    ]
                }),
                e ? v.jsx("div", {
                    className: "text-sm italic",
                    children: e
                }) : null,
                v.jsx("div", {
                    className: u.input(),
                    children: o
                })
            ]
        });
    }, to = ({ form: t, mutation: e, map: n = ({ cleanup: r })=>r() })=>{
        const r = t.handleSubmit(async (i)=>e.mutateAsync(await n({
                values: i,
                cleanup () {
                    return dte(XW(i));
                }
            }), {
                onError: (s)=>{
                    lO({
                        error: s,
                        errors: [
                            Uk({
                                error: s,
                                schema: aO,
                                onError: ({ data: o })=>{
                                    t.setError("root", {
                                        message: o.message
                                    });
                                }
                            })
                        ],
                        onError: (o)=>{
                            t.setError("root", {
                                message: o.message
                            });
                        }
                    });
                }
            }).catch(()=>{}));
        return (i)=>{
            i.stopPropagation(), r(i);
        };
    }, pie = Tn({
        slot: {
            base: [
                "relative",
                "w-full"
            ],
            search: [
                "absolute",
                "inset-y-0",
                "left-2",
                "flex",
                "items-center",
                "pointer-events-none",
                "text-slate-500"
            ],
            input: [
                "pl-8",
                "py-1",
                "w-full",
                "bg-slate-50",
                "text-slate-900",
                "text-sm",
                "border",
                "border-slate-300",
                "rounded-sm",
                "focus:border-sky-400",
                "focus:outline-hidden",
                "block"
            ],
            clear: [
                "absolute",
                "inset-y-0",
                "right-2",
                "flex",
                "items-center",
                "cursor-pointer",
                "text-slate-300",
                "hover:text-slate-500"
            ]
        },
        variant: {},
        defaults: {}
    }), q5 = ({ value: t = "", onFulltext: e, textPlaceholder: n, variant: r, tva: i = pie, css: s })=>{
        const o = i({
            ...r,
            css: s
        }).slots, [a, l] = uie(t, e, 500);
        return v.jsxs("div", {
            className: o.base(),
            children: [
                v.jsx("div", {
                    className: o.search(),
                    children: v.jsx(vn, {
                        icon: "icon-[material-symbols-light--search]",
                        variant: {
                            size: "xl"
                        }
                    })
                }),
                v.jsx("input", {
                    value: a || "",
                    className: o.input(),
                    type: "text",
                    placeholder: n || sa.text("Fulltext (placeholder)"),
                    onChange: (c)=>{
                        l(c.target.value);
                    }
                }),
                t && v.jsx("div", {
                    className: o.clear(),
                    onClick: ()=>{
                        e("");
                    },
                    children: v.jsx(vn, {
                        icon: "icon-[gridicons--cross]",
                        variant: {
                            size: "md"
                        }
                    })
                })
            ]
        });
    }, H5 = "icon-[fluent--arrow-down-12-regular]", $5 = "icon-[fluent--arrow-up-12-regular]", La = "icon-[pajamas--go-back]", RE = "icon-[line-md--confirm-circle]", G5 = "icon-[mage--edit]", mie = "icon-[arcticons--nothing-x]", gie = "icon-[tabler--filter-plus]", D3 = "icon-[tabler--filter-minus]", mT = "icon-[ph--list-dashes-thin]", IO = "icon-[svg-spinners--3-dots-scale]", RO = "icon-[material-symbols-light--logout-sharp]", yie = "icon-[fluent--shape-intersect-20-regular]", gT = "icon-[fluent--checkbox-unchecked-20-regular]", yT = "icon-[fluent--checkbox-checked-20-regular]", sb = "icon-[teenyicons--tag-outline]", Ri = "icon-[ph--trash]", vie = "icon-[clarity--upload-cloud-line]", AO = "icon-[ph--user]", xie = async ({ queryClient: t, keys: e })=>{
        for await (const n of e)await t.invalidateQueries({
            queryKey: n,
            refetchType: "all"
        });
    }, kr = (t)=>{
        const e = BM(), n = dl();
        return async ()=>{
            await xie({
                keys: t,
                queryClient: e
            }), await n.invalidate();
        };
    }, bie = Tn({
        slot: {
            base: []
        },
        variant: {},
        defaults: {}
    }), ne = X.memo(({ label: t, fallback: e, variant: n, tva: r = bie, css: i })=>{
        const s = r({
            ...n,
            css: i
        }).slots;
        return v.jsx("div", {
            className: s.base(),
            children: sa.rich(t, e)
        });
    }), wie = Tn({
        slot: {
            base: [
                "h-full",
                "w-full",
                "bg-slate-200",
                "rounded-sm",
                "transition-all"
            ],
            progress: [
                "h-full",
                "bg-blue-400",
                "rounded-sm",
                "leading-none",
                "transition-all"
            ]
        },
        variant: {
            size: {
                xs: "h-0.5",
                sm: "h-1",
                md: "h-2",
                lg: "h-4"
            }
        },
        defaults: {
            size: "md"
        }
    }), vT = X.memo(({ value: t, variant: e, tva: n = wie, css: r })=>{
        const i = n({
            ...e,
            css: r
        }).slots;
        return v.jsx("div", {
            className: i.base(),
            children: v.jsx("div", {
                style: {
                    width: `${Math.max(0, Math.min(100, t))}%`
                },
                className: i.progress()
            })
        });
    }), Es = [];
    for(let t = 0; t < 256; ++t)Es.push((t + 256).toString(16).slice(1));
    function _ie(t, e = 0) {
        return (Es[t[e + 0]] + Es[t[e + 1]] + Es[t[e + 2]] + Es[t[e + 3]] + "-" + Es[t[e + 4]] + Es[t[e + 5]] + "-" + Es[t[e + 6]] + Es[t[e + 7]] + "-" + Es[t[e + 8]] + Es[t[e + 9]] + "-" + Es[t[e + 10]] + Es[t[e + 11]] + Es[t[e + 12]] + Es[t[e + 13]] + Es[t[e + 14]] + Es[t[e + 15]]).toLowerCase();
    }
    let ER;
    const Sie = new Uint8Array(16);
    function Eie() {
        if (!ER) {
            if (typeof crypto > "u" || !crypto.getRandomValues) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
            ER = crypto.getRandomValues.bind(crypto);
        }
        return ER(Sie);
    }
    const Mie = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto), F3 = {
        randomUUID: Mie
    };
    function j3(t, e, n) {
        if (F3.randomUUID && !t) return F3.randomUUID();
        t = t || {};
        const r = t.random ?? t.rng?.() ?? Eie();
        if (r.length < 16) throw new Error("Random bytes length must be >= 16");
        return r[6] = r[6] & 15 | 64, r[8] = r[8] & 63 | 128, _ie(r);
    }
    var MR = {
        exports: {}
    }, TR, B3;
    function Tie() {
        if (B3) return TR;
        B3 = 1;
        var t = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
        return TR = t, TR;
    }
    var CR, U3;
    function Cie() {
        if (U3) return CR;
        U3 = 1;
        var t = Tie();
        function e() {}
        function n() {}
        return n.resetWarningCache = e, CR = function() {
            function r(o, a, l, c, u, f) {
                if (f !== t) {
                    var p = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
                    throw p.name = "Invariant Violation", p;
                }
            }
            r.isRequired = r;
            function i() {
                return r;
            }
            var s = {
                array: r,
                bigint: r,
                bool: r,
                func: r,
                number: r,
                object: r,
                string: r,
                symbol: r,
                any: r,
                arrayOf: i,
                element: r,
                elementType: r,
                instanceOf: i,
                node: r,
                objectOf: i,
                oneOf: i,
                oneOfType: i,
                shape: i,
                exact: i,
                checkPropTypes: n,
                resetWarningCache: e
            };
            return s.PropTypes = s, s;
        }, CR;
    }
    var z3;
    function Iie() {
        return z3 || (z3 = 1, MR.exports = Cie()()), MR.exports;
    }
    var Rie = Iie();
    const Er = Ao(Rie);
    function mm(t, e, n, r) {
        function i(s) {
            return s instanceof n ? s : new n(function(o) {
                o(s);
            });
        }
        return new (n || (n = Promise))(function(s, o) {
            function a(u) {
                try {
                    c(r.next(u));
                } catch (f) {
                    o(f);
                }
            }
            function l(u) {
                try {
                    c(r.throw(u));
                } catch (f) {
                    o(f);
                }
            }
            function c(u) {
                u.done ? s(u.value) : i(u.value).then(a, l);
            }
            c((r = r.apply(t, e || [])).next());
        });
    }
    const Aie = new Map([
        [
            "1km",
            "application/vnd.1000minds.decision-model+xml"
        ],
        [
            "3dml",
            "text/vnd.in3d.3dml"
        ],
        [
            "3ds",
            "image/x-3ds"
        ],
        [
            "3g2",
            "video/3gpp2"
        ],
        [
            "3gp",
            "video/3gp"
        ],
        [
            "3gpp",
            "video/3gpp"
        ],
        [
            "3mf",
            "model/3mf"
        ],
        [
            "7z",
            "application/x-7z-compressed"
        ],
        [
            "7zip",
            "application/x-7z-compressed"
        ],
        [
            "123",
            "application/vnd.lotus-1-2-3"
        ],
        [
            "aab",
            "application/x-authorware-bin"
        ],
        [
            "aac",
            "audio/x-acc"
        ],
        [
            "aam",
            "application/x-authorware-map"
        ],
        [
            "aas",
            "application/x-authorware-seg"
        ],
        [
            "abw",
            "application/x-abiword"
        ],
        [
            "ac",
            "application/vnd.nokia.n-gage.ac+xml"
        ],
        [
            "ac3",
            "audio/ac3"
        ],
        [
            "acc",
            "application/vnd.americandynamics.acc"
        ],
        [
            "ace",
            "application/x-ace-compressed"
        ],
        [
            "acu",
            "application/vnd.acucobol"
        ],
        [
            "acutc",
            "application/vnd.acucorp"
        ],
        [
            "adp",
            "audio/adpcm"
        ],
        [
            "aep",
            "application/vnd.audiograph"
        ],
        [
            "afm",
            "application/x-font-type1"
        ],
        [
            "afp",
            "application/vnd.ibm.modcap"
        ],
        [
            "ahead",
            "application/vnd.ahead.space"
        ],
        [
            "ai",
            "application/pdf"
        ],
        [
            "aif",
            "audio/x-aiff"
        ],
        [
            "aifc",
            "audio/x-aiff"
        ],
        [
            "aiff",
            "audio/x-aiff"
        ],
        [
            "air",
            "application/vnd.adobe.air-application-installer-package+zip"
        ],
        [
            "ait",
            "application/vnd.dvb.ait"
        ],
        [
            "ami",
            "application/vnd.amiga.ami"
        ],
        [
            "amr",
            "audio/amr"
        ],
        [
            "apk",
            "application/vnd.android.package-archive"
        ],
        [
            "apng",
            "image/apng"
        ],
        [
            "appcache",
            "text/cache-manifest"
        ],
        [
            "application",
            "application/x-ms-application"
        ],
        [
            "apr",
            "application/vnd.lotus-approach"
        ],
        [
            "arc",
            "application/x-freearc"
        ],
        [
            "arj",
            "application/x-arj"
        ],
        [
            "asc",
            "application/pgp-signature"
        ],
        [
            "asf",
            "video/x-ms-asf"
        ],
        [
            "asm",
            "text/x-asm"
        ],
        [
            "aso",
            "application/vnd.accpac.simply.aso"
        ],
        [
            "asx",
            "video/x-ms-asf"
        ],
        [
            "atc",
            "application/vnd.acucorp"
        ],
        [
            "atom",
            "application/atom+xml"
        ],
        [
            "atomcat",
            "application/atomcat+xml"
        ],
        [
            "atomdeleted",
            "application/atomdeleted+xml"
        ],
        [
            "atomsvc",
            "application/atomsvc+xml"
        ],
        [
            "atx",
            "application/vnd.antix.game-component"
        ],
        [
            "au",
            "audio/x-au"
        ],
        [
            "avi",
            "video/x-msvideo"
        ],
        [
            "avif",
            "image/avif"
        ],
        [
            "aw",
            "application/applixware"
        ],
        [
            "azf",
            "application/vnd.airzip.filesecure.azf"
        ],
        [
            "azs",
            "application/vnd.airzip.filesecure.azs"
        ],
        [
            "azv",
            "image/vnd.airzip.accelerator.azv"
        ],
        [
            "azw",
            "application/vnd.amazon.ebook"
        ],
        [
            "b16",
            "image/vnd.pco.b16"
        ],
        [
            "bat",
            "application/x-msdownload"
        ],
        [
            "bcpio",
            "application/x-bcpio"
        ],
        [
            "bdf",
            "application/x-font-bdf"
        ],
        [
            "bdm",
            "application/vnd.syncml.dm+wbxml"
        ],
        [
            "bdoc",
            "application/x-bdoc"
        ],
        [
            "bed",
            "application/vnd.realvnc.bed"
        ],
        [
            "bh2",
            "application/vnd.fujitsu.oasysprs"
        ],
        [
            "bin",
            "application/octet-stream"
        ],
        [
            "blb",
            "application/x-blorb"
        ],
        [
            "blorb",
            "application/x-blorb"
        ],
        [
            "bmi",
            "application/vnd.bmi"
        ],
        [
            "bmml",
            "application/vnd.balsamiq.bmml+xml"
        ],
        [
            "bmp",
            "image/bmp"
        ],
        [
            "book",
            "application/vnd.framemaker"
        ],
        [
            "box",
            "application/vnd.previewsystems.box"
        ],
        [
            "boz",
            "application/x-bzip2"
        ],
        [
            "bpk",
            "application/octet-stream"
        ],
        [
            "bpmn",
            "application/octet-stream"
        ],
        [
            "bsp",
            "model/vnd.valve.source.compiled-map"
        ],
        [
            "btif",
            "image/prs.btif"
        ],
        [
            "buffer",
            "application/octet-stream"
        ],
        [
            "bz",
            "application/x-bzip"
        ],
        [
            "bz2",
            "application/x-bzip2"
        ],
        [
            "c",
            "text/x-c"
        ],
        [
            "c4d",
            "application/vnd.clonk.c4group"
        ],
        [
            "c4f",
            "application/vnd.clonk.c4group"
        ],
        [
            "c4g",
            "application/vnd.clonk.c4group"
        ],
        [
            "c4p",
            "application/vnd.clonk.c4group"
        ],
        [
            "c4u",
            "application/vnd.clonk.c4group"
        ],
        [
            "c11amc",
            "application/vnd.cluetrust.cartomobile-config"
        ],
        [
            "c11amz",
            "application/vnd.cluetrust.cartomobile-config-pkg"
        ],
        [
            "cab",
            "application/vnd.ms-cab-compressed"
        ],
        [
            "caf",
            "audio/x-caf"
        ],
        [
            "cap",
            "application/vnd.tcpdump.pcap"
        ],
        [
            "car",
            "application/vnd.curl.car"
        ],
        [
            "cat",
            "application/vnd.ms-pki.seccat"
        ],
        [
            "cb7",
            "application/x-cbr"
        ],
        [
            "cba",
            "application/x-cbr"
        ],
        [
            "cbr",
            "application/x-cbr"
        ],
        [
            "cbt",
            "application/x-cbr"
        ],
        [
            "cbz",
            "application/x-cbr"
        ],
        [
            "cc",
            "text/x-c"
        ],
        [
            "cco",
            "application/x-cocoa"
        ],
        [
            "cct",
            "application/x-director"
        ],
        [
            "ccxml",
            "application/ccxml+xml"
        ],
        [
            "cdbcmsg",
            "application/vnd.contact.cmsg"
        ],
        [
            "cda",
            "application/x-cdf"
        ],
        [
            "cdf",
            "application/x-netcdf"
        ],
        [
            "cdfx",
            "application/cdfx+xml"
        ],
        [
            "cdkey",
            "application/vnd.mediastation.cdkey"
        ],
        [
            "cdmia",
            "application/cdmi-capability"
        ],
        [
            "cdmic",
            "application/cdmi-container"
        ],
        [
            "cdmid",
            "application/cdmi-domain"
        ],
        [
            "cdmio",
            "application/cdmi-object"
        ],
        [
            "cdmiq",
            "application/cdmi-queue"
        ],
        [
            "cdr",
            "application/cdr"
        ],
        [
            "cdx",
            "chemical/x-cdx"
        ],
        [
            "cdxml",
            "application/vnd.chemdraw+xml"
        ],
        [
            "cdy",
            "application/vnd.cinderella"
        ],
        [
            "cer",
            "application/pkix-cert"
        ],
        [
            "cfs",
            "application/x-cfs-compressed"
        ],
        [
            "cgm",
            "image/cgm"
        ],
        [
            "chat",
            "application/x-chat"
        ],
        [
            "chm",
            "application/vnd.ms-htmlhelp"
        ],
        [
            "chrt",
            "application/vnd.kde.kchart"
        ],
        [
            "cif",
            "chemical/x-cif"
        ],
        [
            "cii",
            "application/vnd.anser-web-certificate-issue-initiation"
        ],
        [
            "cil",
            "application/vnd.ms-artgalry"
        ],
        [
            "cjs",
            "application/node"
        ],
        [
            "cla",
            "application/vnd.claymore"
        ],
        [
            "class",
            "application/octet-stream"
        ],
        [
            "clkk",
            "application/vnd.crick.clicker.keyboard"
        ],
        [
            "clkp",
            "application/vnd.crick.clicker.palette"
        ],
        [
            "clkt",
            "application/vnd.crick.clicker.template"
        ],
        [
            "clkw",
            "application/vnd.crick.clicker.wordbank"
        ],
        [
            "clkx",
            "application/vnd.crick.clicker"
        ],
        [
            "clp",
            "application/x-msclip"
        ],
        [
            "cmc",
            "application/vnd.cosmocaller"
        ],
        [
            "cmdf",
            "chemical/x-cmdf"
        ],
        [
            "cml",
            "chemical/x-cml"
        ],
        [
            "cmp",
            "application/vnd.yellowriver-custom-menu"
        ],
        [
            "cmx",
            "image/x-cmx"
        ],
        [
            "cod",
            "application/vnd.rim.cod"
        ],
        [
            "coffee",
            "text/coffeescript"
        ],
        [
            "com",
            "application/x-msdownload"
        ],
        [
            "conf",
            "text/plain"
        ],
        [
            "cpio",
            "application/x-cpio"
        ],
        [
            "cpp",
            "text/x-c"
        ],
        [
            "cpt",
            "application/mac-compactpro"
        ],
        [
            "crd",
            "application/x-mscardfile"
        ],
        [
            "crl",
            "application/pkix-crl"
        ],
        [
            "crt",
            "application/x-x509-ca-cert"
        ],
        [
            "crx",
            "application/x-chrome-extension"
        ],
        [
            "cryptonote",
            "application/vnd.rig.cryptonote"
        ],
        [
            "csh",
            "application/x-csh"
        ],
        [
            "csl",
            "application/vnd.citationstyles.style+xml"
        ],
        [
            "csml",
            "chemical/x-csml"
        ],
        [
            "csp",
            "application/vnd.commonspace"
        ],
        [
            "csr",
            "application/octet-stream"
        ],
        [
            "css",
            "text/css"
        ],
        [
            "cst",
            "application/x-director"
        ],
        [
            "csv",
            "text/csv"
        ],
        [
            "cu",
            "application/cu-seeme"
        ],
        [
            "curl",
            "text/vnd.curl"
        ],
        [
            "cww",
            "application/prs.cww"
        ],
        [
            "cxt",
            "application/x-director"
        ],
        [
            "cxx",
            "text/x-c"
        ],
        [
            "dae",
            "model/vnd.collada+xml"
        ],
        [
            "daf",
            "application/vnd.mobius.daf"
        ],
        [
            "dart",
            "application/vnd.dart"
        ],
        [
            "dataless",
            "application/vnd.fdsn.seed"
        ],
        [
            "davmount",
            "application/davmount+xml"
        ],
        [
            "dbf",
            "application/vnd.dbf"
        ],
        [
            "dbk",
            "application/docbook+xml"
        ],
        [
            "dcr",
            "application/x-director"
        ],
        [
            "dcurl",
            "text/vnd.curl.dcurl"
        ],
        [
            "dd2",
            "application/vnd.oma.dd2+xml"
        ],
        [
            "ddd",
            "application/vnd.fujixerox.ddd"
        ],
        [
            "ddf",
            "application/vnd.syncml.dmddf+xml"
        ],
        [
            "dds",
            "image/vnd.ms-dds"
        ],
        [
            "deb",
            "application/x-debian-package"
        ],
        [
            "def",
            "text/plain"
        ],
        [
            "deploy",
            "application/octet-stream"
        ],
        [
            "der",
            "application/x-x509-ca-cert"
        ],
        [
            "dfac",
            "application/vnd.dreamfactory"
        ],
        [
            "dgc",
            "application/x-dgc-compressed"
        ],
        [
            "dic",
            "text/x-c"
        ],
        [
            "dir",
            "application/x-director"
        ],
        [
            "dis",
            "application/vnd.mobius.dis"
        ],
        [
            "disposition-notification",
            "message/disposition-notification"
        ],
        [
            "dist",
            "application/octet-stream"
        ],
        [
            "distz",
            "application/octet-stream"
        ],
        [
            "djv",
            "image/vnd.djvu"
        ],
        [
            "djvu",
            "image/vnd.djvu"
        ],
        [
            "dll",
            "application/octet-stream"
        ],
        [
            "dmg",
            "application/x-apple-diskimage"
        ],
        [
            "dmn",
            "application/octet-stream"
        ],
        [
            "dmp",
            "application/vnd.tcpdump.pcap"
        ],
        [
            "dms",
            "application/octet-stream"
        ],
        [
            "dna",
            "application/vnd.dna"
        ],
        [
            "doc",
            "application/msword"
        ],
        [
            "docm",
            "application/vnd.ms-word.template.macroEnabled.12"
        ],
        [
            "docx",
            "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
        ],
        [
            "dot",
            "application/msword"
        ],
        [
            "dotm",
            "application/vnd.ms-word.template.macroEnabled.12"
        ],
        [
            "dotx",
            "application/vnd.openxmlformats-officedocument.wordprocessingml.template"
        ],
        [
            "dp",
            "application/vnd.osgi.dp"
        ],
        [
            "dpg",
            "application/vnd.dpgraph"
        ],
        [
            "dra",
            "audio/vnd.dra"
        ],
        [
            "drle",
            "image/dicom-rle"
        ],
        [
            "dsc",
            "text/prs.lines.tag"
        ],
        [
            "dssc",
            "application/dssc+der"
        ],
        [
            "dtb",
            "application/x-dtbook+xml"
        ],
        [
            "dtd",
            "application/xml-dtd"
        ],
        [
            "dts",
            "audio/vnd.dts"
        ],
        [
            "dtshd",
            "audio/vnd.dts.hd"
        ],
        [
            "dump",
            "application/octet-stream"
        ],
        [
            "dvb",
            "video/vnd.dvb.file"
        ],
        [
            "dvi",
            "application/x-dvi"
        ],
        [
            "dwd",
            "application/atsc-dwd+xml"
        ],
        [
            "dwf",
            "model/vnd.dwf"
        ],
        [
            "dwg",
            "image/vnd.dwg"
        ],
        [
            "dxf",
            "image/vnd.dxf"
        ],
        [
            "dxp",
            "application/vnd.spotfire.dxp"
        ],
        [
            "dxr",
            "application/x-director"
        ],
        [
            "ear",
            "application/java-archive"
        ],
        [
            "ecelp4800",
            "audio/vnd.nuera.ecelp4800"
        ],
        [
            "ecelp7470",
            "audio/vnd.nuera.ecelp7470"
        ],
        [
            "ecelp9600",
            "audio/vnd.nuera.ecelp9600"
        ],
        [
            "ecma",
            "application/ecmascript"
        ],
        [
            "edm",
            "application/vnd.novadigm.edm"
        ],
        [
            "edx",
            "application/vnd.novadigm.edx"
        ],
        [
            "efif",
            "application/vnd.picsel"
        ],
        [
            "ei6",
            "application/vnd.pg.osasli"
        ],
        [
            "elc",
            "application/octet-stream"
        ],
        [
            "emf",
            "image/emf"
        ],
        [
            "eml",
            "message/rfc822"
        ],
        [
            "emma",
            "application/emma+xml"
        ],
        [
            "emotionml",
            "application/emotionml+xml"
        ],
        [
            "emz",
            "application/x-msmetafile"
        ],
        [
            "eol",
            "audio/vnd.digital-winds"
        ],
        [
            "eot",
            "application/vnd.ms-fontobject"
        ],
        [
            "eps",
            "application/postscript"
        ],
        [
            "epub",
            "application/epub+zip"
        ],
        [
            "es",
            "application/ecmascript"
        ],
        [
            "es3",
            "application/vnd.eszigno3+xml"
        ],
        [
            "esa",
            "application/vnd.osgi.subsystem"
        ],
        [
            "esf",
            "application/vnd.epson.esf"
        ],
        [
            "et3",
            "application/vnd.eszigno3+xml"
        ],
        [
            "etx",
            "text/x-setext"
        ],
        [
            "eva",
            "application/x-eva"
        ],
        [
            "evy",
            "application/x-envoy"
        ],
        [
            "exe",
            "application/octet-stream"
        ],
        [
            "exi",
            "application/exi"
        ],
        [
            "exp",
            "application/express"
        ],
        [
            "exr",
            "image/aces"
        ],
        [
            "ext",
            "application/vnd.novadigm.ext"
        ],
        [
            "ez",
            "application/andrew-inset"
        ],
        [
            "ez2",
            "application/vnd.ezpix-album"
        ],
        [
            "ez3",
            "application/vnd.ezpix-package"
        ],
        [
            "f",
            "text/x-fortran"
        ],
        [
            "f4v",
            "video/mp4"
        ],
        [
            "f77",
            "text/x-fortran"
        ],
        [
            "f90",
            "text/x-fortran"
        ],
        [
            "fbs",
            "image/vnd.fastbidsheet"
        ],
        [
            "fcdt",
            "application/vnd.adobe.formscentral.fcdt"
        ],
        [
            "fcs",
            "application/vnd.isac.fcs"
        ],
        [
            "fdf",
            "application/vnd.fdf"
        ],
        [
            "fdt",
            "application/fdt+xml"
        ],
        [
            "fe_launch",
            "application/vnd.denovo.fcselayout-link"
        ],
        [
            "fg5",
            "application/vnd.fujitsu.oasysgp"
        ],
        [
            "fgd",
            "application/x-director"
        ],
        [
            "fh",
            "image/x-freehand"
        ],
        [
            "fh4",
            "image/x-freehand"
        ],
        [
            "fh5",
            "image/x-freehand"
        ],
        [
            "fh7",
            "image/x-freehand"
        ],
        [
            "fhc",
            "image/x-freehand"
        ],
        [
            "fig",
            "application/x-xfig"
        ],
        [
            "fits",
            "image/fits"
        ],
        [
            "flac",
            "audio/x-flac"
        ],
        [
            "fli",
            "video/x-fli"
        ],
        [
            "flo",
            "application/vnd.micrografx.flo"
        ],
        [
            "flv",
            "video/x-flv"
        ],
        [
            "flw",
            "application/vnd.kde.kivio"
        ],
        [
            "flx",
            "text/vnd.fmi.flexstor"
        ],
        [
            "fly",
            "text/vnd.fly"
        ],
        [
            "fm",
            "application/vnd.framemaker"
        ],
        [
            "fnc",
            "application/vnd.frogans.fnc"
        ],
        [
            "fo",
            "application/vnd.software602.filler.form+xml"
        ],
        [
            "for",
            "text/x-fortran"
        ],
        [
            "fpx",
            "image/vnd.fpx"
        ],
        [
            "frame",
            "application/vnd.framemaker"
        ],
        [
            "fsc",
            "application/vnd.fsc.weblaunch"
        ],
        [
            "fst",
            "image/vnd.fst"
        ],
        [
            "ftc",
            "application/vnd.fluxtime.clip"
        ],
        [
            "fti",
            "application/vnd.anser-web-funds-transfer-initiation"
        ],
        [
            "fvt",
            "video/vnd.fvt"
        ],
        [
            "fxp",
            "application/vnd.adobe.fxp"
        ],
        [
            "fxpl",
            "application/vnd.adobe.fxp"
        ],
        [
            "fzs",
            "application/vnd.fuzzysheet"
        ],
        [
            "g2w",
            "application/vnd.geoplan"
        ],
        [
            "g3",
            "image/g3fax"
        ],
        [
            "g3w",
            "application/vnd.geospace"
        ],
        [
            "gac",
            "application/vnd.groove-account"
        ],
        [
            "gam",
            "application/x-tads"
        ],
        [
            "gbr",
            "application/rpki-ghostbusters"
        ],
        [
            "gca",
            "application/x-gca-compressed"
        ],
        [
            "gdl",
            "model/vnd.gdl"
        ],
        [
            "gdoc",
            "application/vnd.google-apps.document"
        ],
        [
            "geo",
            "application/vnd.dynageo"
        ],
        [
            "geojson",
            "application/geo+json"
        ],
        [
            "gex",
            "application/vnd.geometry-explorer"
        ],
        [
            "ggb",
            "application/vnd.geogebra.file"
        ],
        [
            "ggt",
            "application/vnd.geogebra.tool"
        ],
        [
            "ghf",
            "application/vnd.groove-help"
        ],
        [
            "gif",
            "image/gif"
        ],
        [
            "gim",
            "application/vnd.groove-identity-message"
        ],
        [
            "glb",
            "model/gltf-binary"
        ],
        [
            "gltf",
            "model/gltf+json"
        ],
        [
            "gml",
            "application/gml+xml"
        ],
        [
            "gmx",
            "application/vnd.gmx"
        ],
        [
            "gnumeric",
            "application/x-gnumeric"
        ],
        [
            "gpg",
            "application/gpg-keys"
        ],
        [
            "gph",
            "application/vnd.flographit"
        ],
        [
            "gpx",
            "application/gpx+xml"
        ],
        [
            "gqf",
            "application/vnd.grafeq"
        ],
        [
            "gqs",
            "application/vnd.grafeq"
        ],
        [
            "gram",
            "application/srgs"
        ],
        [
            "gramps",
            "application/x-gramps-xml"
        ],
        [
            "gre",
            "application/vnd.geometry-explorer"
        ],
        [
            "grv",
            "application/vnd.groove-injector"
        ],
        [
            "grxml",
            "application/srgs+xml"
        ],
        [
            "gsf",
            "application/x-font-ghostscript"
        ],
        [
            "gsheet",
            "application/vnd.google-apps.spreadsheet"
        ],
        [
            "gslides",
            "application/vnd.google-apps.presentation"
        ],
        [
            "gtar",
            "application/x-gtar"
        ],
        [
            "gtm",
            "application/vnd.groove-tool-message"
        ],
        [
            "gtw",
            "model/vnd.gtw"
        ],
        [
            "gv",
            "text/vnd.graphviz"
        ],
        [
            "gxf",
            "application/gxf"
        ],
        [
            "gxt",
            "application/vnd.geonext"
        ],
        [
            "gz",
            "application/gzip"
        ],
        [
            "gzip",
            "application/gzip"
        ],
        [
            "h",
            "text/x-c"
        ],
        [
            "h261",
            "video/h261"
        ],
        [
            "h263",
            "video/h263"
        ],
        [
            "h264",
            "video/h264"
        ],
        [
            "hal",
            "application/vnd.hal+xml"
        ],
        [
            "hbci",
            "application/vnd.hbci"
        ],
        [
            "hbs",
            "text/x-handlebars-template"
        ],
        [
            "hdd",
            "application/x-virtualbox-hdd"
        ],
        [
            "hdf",
            "application/x-hdf"
        ],
        [
            "heic",
            "image/heic"
        ],
        [
            "heics",
            "image/heic-sequence"
        ],
        [
            "heif",
            "image/heif"
        ],
        [
            "heifs",
            "image/heif-sequence"
        ],
        [
            "hej2",
            "image/hej2k"
        ],
        [
            "held",
            "application/atsc-held+xml"
        ],
        [
            "hh",
            "text/x-c"
        ],
        [
            "hjson",
            "application/hjson"
        ],
        [
            "hlp",
            "application/winhlp"
        ],
        [
            "hpgl",
            "application/vnd.hp-hpgl"
        ],
        [
            "hpid",
            "application/vnd.hp-hpid"
        ],
        [
            "hps",
            "application/vnd.hp-hps"
        ],
        [
            "hqx",
            "application/mac-binhex40"
        ],
        [
            "hsj2",
            "image/hsj2"
        ],
        [
            "htc",
            "text/x-component"
        ],
        [
            "htke",
            "application/vnd.kenameaapp"
        ],
        [
            "htm",
            "text/html"
        ],
        [
            "html",
            "text/html"
        ],
        [
            "hvd",
            "application/vnd.yamaha.hv-dic"
        ],
        [
            "hvp",
            "application/vnd.yamaha.hv-voice"
        ],
        [
            "hvs",
            "application/vnd.yamaha.hv-script"
        ],
        [
            "i2g",
            "application/vnd.intergeo"
        ],
        [
            "icc",
            "application/vnd.iccprofile"
        ],
        [
            "ice",
            "x-conference/x-cooltalk"
        ],
        [
            "icm",
            "application/vnd.iccprofile"
        ],
        [
            "ico",
            "image/x-icon"
        ],
        [
            "ics",
            "text/calendar"
        ],
        [
            "ief",
            "image/ief"
        ],
        [
            "ifb",
            "text/calendar"
        ],
        [
            "ifm",
            "application/vnd.shana.informed.formdata"
        ],
        [
            "iges",
            "model/iges"
        ],
        [
            "igl",
            "application/vnd.igloader"
        ],
        [
            "igm",
            "application/vnd.insors.igm"
        ],
        [
            "igs",
            "model/iges"
        ],
        [
            "igx",
            "application/vnd.micrografx.igx"
        ],
        [
            "iif",
            "application/vnd.shana.informed.interchange"
        ],
        [
            "img",
            "application/octet-stream"
        ],
        [
            "imp",
            "application/vnd.accpac.simply.imp"
        ],
        [
            "ims",
            "application/vnd.ms-ims"
        ],
        [
            "in",
            "text/plain"
        ],
        [
            "ini",
            "text/plain"
        ],
        [
            "ink",
            "application/inkml+xml"
        ],
        [
            "inkml",
            "application/inkml+xml"
        ],
        [
            "install",
            "application/x-install-instructions"
        ],
        [
            "iota",
            "application/vnd.astraea-software.iota"
        ],
        [
            "ipfix",
            "application/ipfix"
        ],
        [
            "ipk",
            "application/vnd.shana.informed.package"
        ],
        [
            "irm",
            "application/vnd.ibm.rights-management"
        ],
        [
            "irp",
            "application/vnd.irepository.package+xml"
        ],
        [
            "iso",
            "application/x-iso9660-image"
        ],
        [
            "itp",
            "application/vnd.shana.informed.formtemplate"
        ],
        [
            "its",
            "application/its+xml"
        ],
        [
            "ivp",
            "application/vnd.immervision-ivp"
        ],
        [
            "ivu",
            "application/vnd.immervision-ivu"
        ],
        [
            "jad",
            "text/vnd.sun.j2me.app-descriptor"
        ],
        [
            "jade",
            "text/jade"
        ],
        [
            "jam",
            "application/vnd.jam"
        ],
        [
            "jar",
            "application/java-archive"
        ],
        [
            "jardiff",
            "application/x-java-archive-diff"
        ],
        [
            "java",
            "text/x-java-source"
        ],
        [
            "jhc",
            "image/jphc"
        ],
        [
            "jisp",
            "application/vnd.jisp"
        ],
        [
            "jls",
            "image/jls"
        ],
        [
            "jlt",
            "application/vnd.hp-jlyt"
        ],
        [
            "jng",
            "image/x-jng"
        ],
        [
            "jnlp",
            "application/x-java-jnlp-file"
        ],
        [
            "joda",
            "application/vnd.joost.joda-archive"
        ],
        [
            "jp2",
            "image/jp2"
        ],
        [
            "jpe",
            "image/jpeg"
        ],
        [
            "jpeg",
            "image/jpeg"
        ],
        [
            "jpf",
            "image/jpx"
        ],
        [
            "jpg",
            "image/jpeg"
        ],
        [
            "jpg2",
            "image/jp2"
        ],
        [
            "jpgm",
            "video/jpm"
        ],
        [
            "jpgv",
            "video/jpeg"
        ],
        [
            "jph",
            "image/jph"
        ],
        [
            "jpm",
            "video/jpm"
        ],
        [
            "jpx",
            "image/jpx"
        ],
        [
            "js",
            "application/javascript"
        ],
        [
            "json",
            "application/json"
        ],
        [
            "json5",
            "application/json5"
        ],
        [
            "jsonld",
            "application/ld+json"
        ],
        [
            "jsonl",
            "application/jsonl"
        ],
        [
            "jsonml",
            "application/jsonml+json"
        ],
        [
            "jsx",
            "text/jsx"
        ],
        [
            "jxr",
            "image/jxr"
        ],
        [
            "jxra",
            "image/jxra"
        ],
        [
            "jxrs",
            "image/jxrs"
        ],
        [
            "jxs",
            "image/jxs"
        ],
        [
            "jxsc",
            "image/jxsc"
        ],
        [
            "jxsi",
            "image/jxsi"
        ],
        [
            "jxss",
            "image/jxss"
        ],
        [
            "kar",
            "audio/midi"
        ],
        [
            "karbon",
            "application/vnd.kde.karbon"
        ],
        [
            "kdb",
            "application/octet-stream"
        ],
        [
            "kdbx",
            "application/x-keepass2"
        ],
        [
            "key",
            "application/x-iwork-keynote-sffkey"
        ],
        [
            "kfo",
            "application/vnd.kde.kformula"
        ],
        [
            "kia",
            "application/vnd.kidspiration"
        ],
        [
            "kml",
            "application/vnd.google-earth.kml+xml"
        ],
        [
            "kmz",
            "application/vnd.google-earth.kmz"
        ],
        [
            "kne",
            "application/vnd.kinar"
        ],
        [
            "knp",
            "application/vnd.kinar"
        ],
        [
            "kon",
            "application/vnd.kde.kontour"
        ],
        [
            "kpr",
            "application/vnd.kde.kpresenter"
        ],
        [
            "kpt",
            "application/vnd.kde.kpresenter"
        ],
        [
            "kpxx",
            "application/vnd.ds-keypoint"
        ],
        [
            "ksp",
            "application/vnd.kde.kspread"
        ],
        [
            "ktr",
            "application/vnd.kahootz"
        ],
        [
            "ktx",
            "image/ktx"
        ],
        [
            "ktx2",
            "image/ktx2"
        ],
        [
            "ktz",
            "application/vnd.kahootz"
        ],
        [
            "kwd",
            "application/vnd.kde.kword"
        ],
        [
            "kwt",
            "application/vnd.kde.kword"
        ],
        [
            "lasxml",
            "application/vnd.las.las+xml"
        ],
        [
            "latex",
            "application/x-latex"
        ],
        [
            "lbd",
            "application/vnd.llamagraphics.life-balance.desktop"
        ],
        [
            "lbe",
            "application/vnd.llamagraphics.life-balance.exchange+xml"
        ],
        [
            "les",
            "application/vnd.hhe.lesson-player"
        ],
        [
            "less",
            "text/less"
        ],
        [
            "lgr",
            "application/lgr+xml"
        ],
        [
            "lha",
            "application/octet-stream"
        ],
        [
            "link66",
            "application/vnd.route66.link66+xml"
        ],
        [
            "list",
            "text/plain"
        ],
        [
            "list3820",
            "application/vnd.ibm.modcap"
        ],
        [
            "listafp",
            "application/vnd.ibm.modcap"
        ],
        [
            "litcoffee",
            "text/coffeescript"
        ],
        [
            "lnk",
            "application/x-ms-shortcut"
        ],
        [
            "log",
            "text/plain"
        ],
        [
            "lostxml",
            "application/lost+xml"
        ],
        [
            "lrf",
            "application/octet-stream"
        ],
        [
            "lrm",
            "application/vnd.ms-lrm"
        ],
        [
            "ltf",
            "application/vnd.frogans.ltf"
        ],
        [
            "lua",
            "text/x-lua"
        ],
        [
            "luac",
            "application/x-lua-bytecode"
        ],
        [
            "lvp",
            "audio/vnd.lucent.voice"
        ],
        [
            "lwp",
            "application/vnd.lotus-wordpro"
        ],
        [
            "lzh",
            "application/octet-stream"
        ],
        [
            "m1v",
            "video/mpeg"
        ],
        [
            "m2a",
            "audio/mpeg"
        ],
        [
            "m2v",
            "video/mpeg"
        ],
        [
            "m3a",
            "audio/mpeg"
        ],
        [
            "m3u",
            "text/plain"
        ],
        [
            "m3u8",
            "application/vnd.apple.mpegurl"
        ],
        [
            "m4a",
            "audio/x-m4a"
        ],
        [
            "m4p",
            "application/mp4"
        ],
        [
            "m4s",
            "video/iso.segment"
        ],
        [
            "m4u",
            "application/vnd.mpegurl"
        ],
        [
            "m4v",
            "video/x-m4v"
        ],
        [
            "m13",
            "application/x-msmediaview"
        ],
        [
            "m14",
            "application/x-msmediaview"
        ],
        [
            "m21",
            "application/mp21"
        ],
        [
            "ma",
            "application/mathematica"
        ],
        [
            "mads",
            "application/mads+xml"
        ],
        [
            "maei",
            "application/mmt-aei+xml"
        ],
        [
            "mag",
            "application/vnd.ecowin.chart"
        ],
        [
            "maker",
            "application/vnd.framemaker"
        ],
        [
            "man",
            "text/troff"
        ],
        [
            "manifest",
            "text/cache-manifest"
        ],
        [
            "map",
            "application/json"
        ],
        [
            "mar",
            "application/octet-stream"
        ],
        [
            "markdown",
            "text/markdown"
        ],
        [
            "mathml",
            "application/mathml+xml"
        ],
        [
            "mb",
            "application/mathematica"
        ],
        [
            "mbk",
            "application/vnd.mobius.mbk"
        ],
        [
            "mbox",
            "application/mbox"
        ],
        [
            "mc1",
            "application/vnd.medcalcdata"
        ],
        [
            "mcd",
            "application/vnd.mcd"
        ],
        [
            "mcurl",
            "text/vnd.curl.mcurl"
        ],
        [
            "md",
            "text/markdown"
        ],
        [
            "mdb",
            "application/x-msaccess"
        ],
        [
            "mdi",
            "image/vnd.ms-modi"
        ],
        [
            "mdx",
            "text/mdx"
        ],
        [
            "me",
            "text/troff"
        ],
        [
            "mesh",
            "model/mesh"
        ],
        [
            "meta4",
            "application/metalink4+xml"
        ],
        [
            "metalink",
            "application/metalink+xml"
        ],
        [
            "mets",
            "application/mets+xml"
        ],
        [
            "mfm",
            "application/vnd.mfmp"
        ],
        [
            "mft",
            "application/rpki-manifest"
        ],
        [
            "mgp",
            "application/vnd.osgeo.mapguide.package"
        ],
        [
            "mgz",
            "application/vnd.proteus.magazine"
        ],
        [
            "mid",
            "audio/midi"
        ],
        [
            "midi",
            "audio/midi"
        ],
        [
            "mie",
            "application/x-mie"
        ],
        [
            "mif",
            "application/vnd.mif"
        ],
        [
            "mime",
            "message/rfc822"
        ],
        [
            "mj2",
            "video/mj2"
        ],
        [
            "mjp2",
            "video/mj2"
        ],
        [
            "mjs",
            "application/javascript"
        ],
        [
            "mk3d",
            "video/x-matroska"
        ],
        [
            "mka",
            "audio/x-matroska"
        ],
        [
            "mkd",
            "text/x-markdown"
        ],
        [
            "mks",
            "video/x-matroska"
        ],
        [
            "mkv",
            "video/x-matroska"
        ],
        [
            "mlp",
            "application/vnd.dolby.mlp"
        ],
        [
            "mmd",
            "application/vnd.chipnuts.karaoke-mmd"
        ],
        [
            "mmf",
            "application/vnd.smaf"
        ],
        [
            "mml",
            "text/mathml"
        ],
        [
            "mmr",
            "image/vnd.fujixerox.edmics-mmr"
        ],
        [
            "mng",
            "video/x-mng"
        ],
        [
            "mny",
            "application/x-msmoney"
        ],
        [
            "mobi",
            "application/x-mobipocket-ebook"
        ],
        [
            "mods",
            "application/mods+xml"
        ],
        [
            "mov",
            "video/quicktime"
        ],
        [
            "movie",
            "video/x-sgi-movie"
        ],
        [
            "mp2",
            "audio/mpeg"
        ],
        [
            "mp2a",
            "audio/mpeg"
        ],
        [
            "mp3",
            "audio/mpeg"
        ],
        [
            "mp4",
            "video/mp4"
        ],
        [
            "mp4a",
            "audio/mp4"
        ],
        [
            "mp4s",
            "application/mp4"
        ],
        [
            "mp4v",
            "video/mp4"
        ],
        [
            "mp21",
            "application/mp21"
        ],
        [
            "mpc",
            "application/vnd.mophun.certificate"
        ],
        [
            "mpd",
            "application/dash+xml"
        ],
        [
            "mpe",
            "video/mpeg"
        ],
        [
            "mpeg",
            "video/mpeg"
        ],
        [
            "mpg",
            "video/mpeg"
        ],
        [
            "mpg4",
            "video/mp4"
        ],
        [
            "mpga",
            "audio/mpeg"
        ],
        [
            "mpkg",
            "application/vnd.apple.installer+xml"
        ],
        [
            "mpm",
            "application/vnd.blueice.multipass"
        ],
        [
            "mpn",
            "application/vnd.mophun.application"
        ],
        [
            "mpp",
            "application/vnd.ms-project"
        ],
        [
            "mpt",
            "application/vnd.ms-project"
        ],
        [
            "mpy",
            "application/vnd.ibm.minipay"
        ],
        [
            "mqy",
            "application/vnd.mobius.mqy"
        ],
        [
            "mrc",
            "application/marc"
        ],
        [
            "mrcx",
            "application/marcxml+xml"
        ],
        [
            "ms",
            "text/troff"
        ],
        [
            "mscml",
            "application/mediaservercontrol+xml"
        ],
        [
            "mseed",
            "application/vnd.fdsn.mseed"
        ],
        [
            "mseq",
            "application/vnd.mseq"
        ],
        [
            "msf",
            "application/vnd.epson.msf"
        ],
        [
            "msg",
            "application/vnd.ms-outlook"
        ],
        [
            "msh",
            "model/mesh"
        ],
        [
            "msi",
            "application/x-msdownload"
        ],
        [
            "msl",
            "application/vnd.mobius.msl"
        ],
        [
            "msm",
            "application/octet-stream"
        ],
        [
            "msp",
            "application/octet-stream"
        ],
        [
            "msty",
            "application/vnd.muvee.style"
        ],
        [
            "mtl",
            "model/mtl"
        ],
        [
            "mts",
            "model/vnd.mts"
        ],
        [
            "mus",
            "application/vnd.musician"
        ],
        [
            "musd",
            "application/mmt-usd+xml"
        ],
        [
            "musicxml",
            "application/vnd.recordare.musicxml+xml"
        ],
        [
            "mvb",
            "application/x-msmediaview"
        ],
        [
            "mvt",
            "application/vnd.mapbox-vector-tile"
        ],
        [
            "mwf",
            "application/vnd.mfer"
        ],
        [
            "mxf",
            "application/mxf"
        ],
        [
            "mxl",
            "application/vnd.recordare.musicxml"
        ],
        [
            "mxmf",
            "audio/mobile-xmf"
        ],
        [
            "mxml",
            "application/xv+xml"
        ],
        [
            "mxs",
            "application/vnd.triscape.mxs"
        ],
        [
            "mxu",
            "video/vnd.mpegurl"
        ],
        [
            "n-gage",
            "application/vnd.nokia.n-gage.symbian.install"
        ],
        [
            "n3",
            "text/n3"
        ],
        [
            "nb",
            "application/mathematica"
        ],
        [
            "nbp",
            "application/vnd.wolfram.player"
        ],
        [
            "nc",
            "application/x-netcdf"
        ],
        [
            "ncx",
            "application/x-dtbncx+xml"
        ],
        [
            "nfo",
            "text/x-nfo"
        ],
        [
            "ngdat",
            "application/vnd.nokia.n-gage.data"
        ],
        [
            "nitf",
            "application/vnd.nitf"
        ],
        [
            "nlu",
            "application/vnd.neurolanguage.nlu"
        ],
        [
            "nml",
            "application/vnd.enliven"
        ],
        [
            "nnd",
            "application/vnd.noblenet-directory"
        ],
        [
            "nns",
            "application/vnd.noblenet-sealer"
        ],
        [
            "nnw",
            "application/vnd.noblenet-web"
        ],
        [
            "npx",
            "image/vnd.net-fpx"
        ],
        [
            "nq",
            "application/n-quads"
        ],
        [
            "nsc",
            "application/x-conference"
        ],
        [
            "nsf",
            "application/vnd.lotus-notes"
        ],
        [
            "nt",
            "application/n-triples"
        ],
        [
            "ntf",
            "application/vnd.nitf"
        ],
        [
            "numbers",
            "application/x-iwork-numbers-sffnumbers"
        ],
        [
            "nzb",
            "application/x-nzb"
        ],
        [
            "oa2",
            "application/vnd.fujitsu.oasys2"
        ],
        [
            "oa3",
            "application/vnd.fujitsu.oasys3"
        ],
        [
            "oas",
            "application/vnd.fujitsu.oasys"
        ],
        [
            "obd",
            "application/x-msbinder"
        ],
        [
            "obgx",
            "application/vnd.openblox.game+xml"
        ],
        [
            "obj",
            "model/obj"
        ],
        [
            "oda",
            "application/oda"
        ],
        [
            "odb",
            "application/vnd.oasis.opendocument.database"
        ],
        [
            "odc",
            "application/vnd.oasis.opendocument.chart"
        ],
        [
            "odf",
            "application/vnd.oasis.opendocument.formula"
        ],
        [
            "odft",
            "application/vnd.oasis.opendocument.formula-template"
        ],
        [
            "odg",
            "application/vnd.oasis.opendocument.graphics"
        ],
        [
            "odi",
            "application/vnd.oasis.opendocument.image"
        ],
        [
            "odm",
            "application/vnd.oasis.opendocument.text-master"
        ],
        [
            "odp",
            "application/vnd.oasis.opendocument.presentation"
        ],
        [
            "ods",
            "application/vnd.oasis.opendocument.spreadsheet"
        ],
        [
            "odt",
            "application/vnd.oasis.opendocument.text"
        ],
        [
            "oga",
            "audio/ogg"
        ],
        [
            "ogex",
            "model/vnd.opengex"
        ],
        [
            "ogg",
            "audio/ogg"
        ],
        [
            "ogv",
            "video/ogg"
        ],
        [
            "ogx",
            "application/ogg"
        ],
        [
            "omdoc",
            "application/omdoc+xml"
        ],
        [
            "onepkg",
            "application/onenote"
        ],
        [
            "onetmp",
            "application/onenote"
        ],
        [
            "onetoc",
            "application/onenote"
        ],
        [
            "onetoc2",
            "application/onenote"
        ],
        [
            "opf",
            "application/oebps-package+xml"
        ],
        [
            "opml",
            "text/x-opml"
        ],
        [
            "oprc",
            "application/vnd.palm"
        ],
        [
            "opus",
            "audio/ogg"
        ],
        [
            "org",
            "text/x-org"
        ],
        [
            "osf",
            "application/vnd.yamaha.openscoreformat"
        ],
        [
            "osfpvg",
            "application/vnd.yamaha.openscoreformat.osfpvg+xml"
        ],
        [
            "osm",
            "application/vnd.openstreetmap.data+xml"
        ],
        [
            "otc",
            "application/vnd.oasis.opendocument.chart-template"
        ],
        [
            "otf",
            "font/otf"
        ],
        [
            "otg",
            "application/vnd.oasis.opendocument.graphics-template"
        ],
        [
            "oth",
            "application/vnd.oasis.opendocument.text-web"
        ],
        [
            "oti",
            "application/vnd.oasis.opendocument.image-template"
        ],
        [
            "otp",
            "application/vnd.oasis.opendocument.presentation-template"
        ],
        [
            "ots",
            "application/vnd.oasis.opendocument.spreadsheet-template"
        ],
        [
            "ott",
            "application/vnd.oasis.opendocument.text-template"
        ],
        [
            "ova",
            "application/x-virtualbox-ova"
        ],
        [
            "ovf",
            "application/x-virtualbox-ovf"
        ],
        [
            "owl",
            "application/rdf+xml"
        ],
        [
            "oxps",
            "application/oxps"
        ],
        [
            "oxt",
            "application/vnd.openofficeorg.extension"
        ],
        [
            "p",
            "text/x-pascal"
        ],
        [
            "p7a",
            "application/x-pkcs7-signature"
        ],
        [
            "p7b",
            "application/x-pkcs7-certificates"
        ],
        [
            "p7c",
            "application/pkcs7-mime"
        ],
        [
            "p7m",
            "application/pkcs7-mime"
        ],
        [
            "p7r",
            "application/x-pkcs7-certreqresp"
        ],
        [
            "p7s",
            "application/pkcs7-signature"
        ],
        [
            "p8",
            "application/pkcs8"
        ],
        [
            "p10",
            "application/x-pkcs10"
        ],
        [
            "p12",
            "application/x-pkcs12"
        ],
        [
            "pac",
            "application/x-ns-proxy-autoconfig"
        ],
        [
            "pages",
            "application/x-iwork-pages-sffpages"
        ],
        [
            "pas",
            "text/x-pascal"
        ],
        [
            "paw",
            "application/vnd.pawaafile"
        ],
        [
            "pbd",
            "application/vnd.powerbuilder6"
        ],
        [
            "pbm",
            "image/x-portable-bitmap"
        ],
        [
            "pcap",
            "application/vnd.tcpdump.pcap"
        ],
        [
            "pcf",
            "application/x-font-pcf"
        ],
        [
            "pcl",
            "application/vnd.hp-pcl"
        ],
        [
            "pclxl",
            "application/vnd.hp-pclxl"
        ],
        [
            "pct",
            "image/x-pict"
        ],
        [
            "pcurl",
            "application/vnd.curl.pcurl"
        ],
        [
            "pcx",
            "image/x-pcx"
        ],
        [
            "pdb",
            "application/x-pilot"
        ],
        [
            "pde",
            "text/x-processing"
        ],
        [
            "pdf",
            "application/pdf"
        ],
        [
            "pem",
            "application/x-x509-user-cert"
        ],
        [
            "pfa",
            "application/x-font-type1"
        ],
        [
            "pfb",
            "application/x-font-type1"
        ],
        [
            "pfm",
            "application/x-font-type1"
        ],
        [
            "pfr",
            "application/font-tdpfr"
        ],
        [
            "pfx",
            "application/x-pkcs12"
        ],
        [
            "pgm",
            "image/x-portable-graymap"
        ],
        [
            "pgn",
            "application/x-chess-pgn"
        ],
        [
            "pgp",
            "application/pgp"
        ],
        [
            "php",
            "application/x-httpd-php"
        ],
        [
            "php3",
            "application/x-httpd-php"
        ],
        [
            "php4",
            "application/x-httpd-php"
        ],
        [
            "phps",
            "application/x-httpd-php-source"
        ],
        [
            "phtml",
            "application/x-httpd-php"
        ],
        [
            "pic",
            "image/x-pict"
        ],
        [
            "pkg",
            "application/octet-stream"
        ],
        [
            "pki",
            "application/pkixcmp"
        ],
        [
            "pkipath",
            "application/pkix-pkipath"
        ],
        [
            "pkpass",
            "application/vnd.apple.pkpass"
        ],
        [
            "pl",
            "application/x-perl"
        ],
        [
            "plb",
            "application/vnd.3gpp.pic-bw-large"
        ],
        [
            "plc",
            "application/vnd.mobius.plc"
        ],
        [
            "plf",
            "application/vnd.pocketlearn"
        ],
        [
            "pls",
            "application/pls+xml"
        ],
        [
            "pm",
            "application/x-perl"
        ],
        [
            "pml",
            "application/vnd.ctc-posml"
        ],
        [
            "png",
            "image/png"
        ],
        [
            "pnm",
            "image/x-portable-anymap"
        ],
        [
            "portpkg",
            "application/vnd.macports.portpkg"
        ],
        [
            "pot",
            "application/vnd.ms-powerpoint"
        ],
        [
            "potm",
            "application/vnd.ms-powerpoint.presentation.macroEnabled.12"
        ],
        [
            "potx",
            "application/vnd.openxmlformats-officedocument.presentationml.template"
        ],
        [
            "ppa",
            "application/vnd.ms-powerpoint"
        ],
        [
            "ppam",
            "application/vnd.ms-powerpoint.addin.macroEnabled.12"
        ],
        [
            "ppd",
            "application/vnd.cups-ppd"
        ],
        [
            "ppm",
            "image/x-portable-pixmap"
        ],
        [
            "pps",
            "application/vnd.ms-powerpoint"
        ],
        [
            "ppsm",
            "application/vnd.ms-powerpoint.slideshow.macroEnabled.12"
        ],
        [
            "ppsx",
            "application/vnd.openxmlformats-officedocument.presentationml.slideshow"
        ],
        [
            "ppt",
            "application/powerpoint"
        ],
        [
            "pptm",
            "application/vnd.ms-powerpoint.presentation.macroEnabled.12"
        ],
        [
            "pptx",
            "application/vnd.openxmlformats-officedocument.presentationml.presentation"
        ],
        [
            "pqa",
            "application/vnd.palm"
        ],
        [
            "prc",
            "application/x-pilot"
        ],
        [
            "pre",
            "application/vnd.lotus-freelance"
        ],
        [
            "prf",
            "application/pics-rules"
        ],
        [
            "provx",
            "application/provenance+xml"
        ],
        [
            "ps",
            "application/postscript"
        ],
        [
            "psb",
            "application/vnd.3gpp.pic-bw-small"
        ],
        [
            "psd",
            "application/x-photoshop"
        ],
        [
            "psf",
            "application/x-font-linux-psf"
        ],
        [
            "pskcxml",
            "application/pskc+xml"
        ],
        [
            "pti",
            "image/prs.pti"
        ],
        [
            "ptid",
            "application/vnd.pvi.ptid1"
        ],
        [
            "pub",
            "application/x-mspublisher"
        ],
        [
            "pvb",
            "application/vnd.3gpp.pic-bw-var"
        ],
        [
            "pwn",
            "application/vnd.3m.post-it-notes"
        ],
        [
            "pya",
            "audio/vnd.ms-playready.media.pya"
        ],
        [
            "pyv",
            "video/vnd.ms-playready.media.pyv"
        ],
        [
            "qam",
            "application/vnd.epson.quickanime"
        ],
        [
            "qbo",
            "application/vnd.intu.qbo"
        ],
        [
            "qfx",
            "application/vnd.intu.qfx"
        ],
        [
            "qps",
            "application/vnd.publishare-delta-tree"
        ],
        [
            "qt",
            "video/quicktime"
        ],
        [
            "qwd",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qwt",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qxb",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qxd",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qxl",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qxt",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "ra",
            "audio/x-realaudio"
        ],
        [
            "ram",
            "audio/x-pn-realaudio"
        ],
        [
            "raml",
            "application/raml+yaml"
        ],
        [
            "rapd",
            "application/route-apd+xml"
        ],
        [
            "rar",
            "application/x-rar"
        ],
        [
            "ras",
            "image/x-cmu-raster"
        ],
        [
            "rcprofile",
            "application/vnd.ipunplugged.rcprofile"
        ],
        [
            "rdf",
            "application/rdf+xml"
        ],
        [
            "rdz",
            "application/vnd.data-vision.rdz"
        ],
        [
            "relo",
            "application/p2p-overlay+xml"
        ],
        [
            "rep",
            "application/vnd.businessobjects"
        ],
        [
            "res",
            "application/x-dtbresource+xml"
        ],
        [
            "rgb",
            "image/x-rgb"
        ],
        [
            "rif",
            "application/reginfo+xml"
        ],
        [
            "rip",
            "audio/vnd.rip"
        ],
        [
            "ris",
            "application/x-research-info-systems"
        ],
        [
            "rl",
            "application/resource-lists+xml"
        ],
        [
            "rlc",
            "image/vnd.fujixerox.edmics-rlc"
        ],
        [
            "rld",
            "application/resource-lists-diff+xml"
        ],
        [
            "rm",
            "audio/x-pn-realaudio"
        ],
        [
            "rmi",
            "audio/midi"
        ],
        [
            "rmp",
            "audio/x-pn-realaudio-plugin"
        ],
        [
            "rms",
            "application/vnd.jcp.javame.midlet-rms"
        ],
        [
            "rmvb",
            "application/vnd.rn-realmedia-vbr"
        ],
        [
            "rnc",
            "application/relax-ng-compact-syntax"
        ],
        [
            "rng",
            "application/xml"
        ],
        [
            "roa",
            "application/rpki-roa"
        ],
        [
            "roff",
            "text/troff"
        ],
        [
            "rp9",
            "application/vnd.cloanto.rp9"
        ],
        [
            "rpm",
            "audio/x-pn-realaudio-plugin"
        ],
        [
            "rpss",
            "application/vnd.nokia.radio-presets"
        ],
        [
            "rpst",
            "application/vnd.nokia.radio-preset"
        ],
        [
            "rq",
            "application/sparql-query"
        ],
        [
            "rs",
            "application/rls-services+xml"
        ],
        [
            "rsa",
            "application/x-pkcs7"
        ],
        [
            "rsat",
            "application/atsc-rsat+xml"
        ],
        [
            "rsd",
            "application/rsd+xml"
        ],
        [
            "rsheet",
            "application/urc-ressheet+xml"
        ],
        [
            "rss",
            "application/rss+xml"
        ],
        [
            "rtf",
            "text/rtf"
        ],
        [
            "rtx",
            "text/richtext"
        ],
        [
            "run",
            "application/x-makeself"
        ],
        [
            "rusd",
            "application/route-usd+xml"
        ],
        [
            "rv",
            "video/vnd.rn-realvideo"
        ],
        [
            "s",
            "text/x-asm"
        ],
        [
            "s3m",
            "audio/s3m"
        ],
        [
            "saf",
            "application/vnd.yamaha.smaf-audio"
        ],
        [
            "sass",
            "text/x-sass"
        ],
        [
            "sbml",
            "application/sbml+xml"
        ],
        [
            "sc",
            "application/vnd.ibm.secure-container"
        ],
        [
            "scd",
            "application/x-msschedule"
        ],
        [
            "scm",
            "application/vnd.lotus-screencam"
        ],
        [
            "scq",
            "application/scvp-cv-request"
        ],
        [
            "scs",
            "application/scvp-cv-response"
        ],
        [
            "scss",
            "text/x-scss"
        ],
        [
            "scurl",
            "text/vnd.curl.scurl"
        ],
        [
            "sda",
            "application/vnd.stardivision.draw"
        ],
        [
            "sdc",
            "application/vnd.stardivision.calc"
        ],
        [
            "sdd",
            "application/vnd.stardivision.impress"
        ],
        [
            "sdkd",
            "application/vnd.solent.sdkm+xml"
        ],
        [
            "sdkm",
            "application/vnd.solent.sdkm+xml"
        ],
        [
            "sdp",
            "application/sdp"
        ],
        [
            "sdw",
            "application/vnd.stardivision.writer"
        ],
        [
            "sea",
            "application/octet-stream"
        ],
        [
            "see",
            "application/vnd.seemail"
        ],
        [
            "seed",
            "application/vnd.fdsn.seed"
        ],
        [
            "sema",
            "application/vnd.sema"
        ],
        [
            "semd",
            "application/vnd.semd"
        ],
        [
            "semf",
            "application/vnd.semf"
        ],
        [
            "senmlx",
            "application/senml+xml"
        ],
        [
            "sensmlx",
            "application/sensml+xml"
        ],
        [
            "ser",
            "application/java-serialized-object"
        ],
        [
            "setpay",
            "application/set-payment-initiation"
        ],
        [
            "setreg",
            "application/set-registration-initiation"
        ],
        [
            "sfd-hdstx",
            "application/vnd.hydrostatix.sof-data"
        ],
        [
            "sfs",
            "application/vnd.spotfire.sfs"
        ],
        [
            "sfv",
            "text/x-sfv"
        ],
        [
            "sgi",
            "image/sgi"
        ],
        [
            "sgl",
            "application/vnd.stardivision.writer-global"
        ],
        [
            "sgm",
            "text/sgml"
        ],
        [
            "sgml",
            "text/sgml"
        ],
        [
            "sh",
            "application/x-sh"
        ],
        [
            "shar",
            "application/x-shar"
        ],
        [
            "shex",
            "text/shex"
        ],
        [
            "shf",
            "application/shf+xml"
        ],
        [
            "shtml",
            "text/html"
        ],
        [
            "sid",
            "image/x-mrsid-image"
        ],
        [
            "sieve",
            "application/sieve"
        ],
        [
            "sig",
            "application/pgp-signature"
        ],
        [
            "sil",
            "audio/silk"
        ],
        [
            "silo",
            "model/mesh"
        ],
        [
            "sis",
            "application/vnd.symbian.install"
        ],
        [
            "sisx",
            "application/vnd.symbian.install"
        ],
        [
            "sit",
            "application/x-stuffit"
        ],
        [
            "sitx",
            "application/x-stuffitx"
        ],
        [
            "siv",
            "application/sieve"
        ],
        [
            "skd",
            "application/vnd.koan"
        ],
        [
            "skm",
            "application/vnd.koan"
        ],
        [
            "skp",
            "application/vnd.koan"
        ],
        [
            "skt",
            "application/vnd.koan"
        ],
        [
            "sldm",
            "application/vnd.ms-powerpoint.slide.macroenabled.12"
        ],
        [
            "sldx",
            "application/vnd.openxmlformats-officedocument.presentationml.slide"
        ],
        [
            "slim",
            "text/slim"
        ],
        [
            "slm",
            "text/slim"
        ],
        [
            "sls",
            "application/route-s-tsid+xml"
        ],
        [
            "slt",
            "application/vnd.epson.salt"
        ],
        [
            "sm",
            "application/vnd.stepmania.stepchart"
        ],
        [
            "smf",
            "application/vnd.stardivision.math"
        ],
        [
            "smi",
            "application/smil"
        ],
        [
            "smil",
            "application/smil"
        ],
        [
            "smv",
            "video/x-smv"
        ],
        [
            "smzip",
            "application/vnd.stepmania.package"
        ],
        [
            "snd",
            "audio/basic"
        ],
        [
            "snf",
            "application/x-font-snf"
        ],
        [
            "so",
            "application/octet-stream"
        ],
        [
            "spc",
            "application/x-pkcs7-certificates"
        ],
        [
            "spdx",
            "text/spdx"
        ],
        [
            "spf",
            "application/vnd.yamaha.smaf-phrase"
        ],
        [
            "spl",
            "application/x-futuresplash"
        ],
        [
            "spot",
            "text/vnd.in3d.spot"
        ],
        [
            "spp",
            "application/scvp-vp-response"
        ],
        [
            "spq",
            "application/scvp-vp-request"
        ],
        [
            "spx",
            "audio/ogg"
        ],
        [
            "sql",
            "application/x-sql"
        ],
        [
            "src",
            "application/x-wais-source"
        ],
        [
            "srt",
            "application/x-subrip"
        ],
        [
            "sru",
            "application/sru+xml"
        ],
        [
            "srx",
            "application/sparql-results+xml"
        ],
        [
            "ssdl",
            "application/ssdl+xml"
        ],
        [
            "sse",
            "application/vnd.kodak-descriptor"
        ],
        [
            "ssf",
            "application/vnd.epson.ssf"
        ],
        [
            "ssml",
            "application/ssml+xml"
        ],
        [
            "sst",
            "application/octet-stream"
        ],
        [
            "st",
            "application/vnd.sailingtracker.track"
        ],
        [
            "stc",
            "application/vnd.sun.xml.calc.template"
        ],
        [
            "std",
            "application/vnd.sun.xml.draw.template"
        ],
        [
            "stf",
            "application/vnd.wt.stf"
        ],
        [
            "sti",
            "application/vnd.sun.xml.impress.template"
        ],
        [
            "stk",
            "application/hyperstudio"
        ],
        [
            "stl",
            "model/stl"
        ],
        [
            "stpx",
            "model/step+xml"
        ],
        [
            "stpxz",
            "model/step-xml+zip"
        ],
        [
            "stpz",
            "model/step+zip"
        ],
        [
            "str",
            "application/vnd.pg.format"
        ],
        [
            "stw",
            "application/vnd.sun.xml.writer.template"
        ],
        [
            "styl",
            "text/stylus"
        ],
        [
            "stylus",
            "text/stylus"
        ],
        [
            "sub",
            "text/vnd.dvb.subtitle"
        ],
        [
            "sus",
            "application/vnd.sus-calendar"
        ],
        [
            "susp",
            "application/vnd.sus-calendar"
        ],
        [
            "sv4cpio",
            "application/x-sv4cpio"
        ],
        [
            "sv4crc",
            "application/x-sv4crc"
        ],
        [
            "svc",
            "application/vnd.dvb.service"
        ],
        [
            "svd",
            "application/vnd.svd"
        ],
        [
            "svg",
            "image/svg+xml"
        ],
        [
            "svgz",
            "image/svg+xml"
        ],
        [
            "swa",
            "application/x-director"
        ],
        [
            "swf",
            "application/x-shockwave-flash"
        ],
        [
            "swi",
            "application/vnd.aristanetworks.swi"
        ],
        [
            "swidtag",
            "application/swid+xml"
        ],
        [
            "sxc",
            "application/vnd.sun.xml.calc"
        ],
        [
            "sxd",
            "application/vnd.sun.xml.draw"
        ],
        [
            "sxg",
            "application/vnd.sun.xml.writer.global"
        ],
        [
            "sxi",
            "application/vnd.sun.xml.impress"
        ],
        [
            "sxm",
            "application/vnd.sun.xml.math"
        ],
        [
            "sxw",
            "application/vnd.sun.xml.writer"
        ],
        [
            "t",
            "text/troff"
        ],
        [
            "t3",
            "application/x-t3vm-image"
        ],
        [
            "t38",
            "image/t38"
        ],
        [
            "taglet",
            "application/vnd.mynfc"
        ],
        [
            "tao",
            "application/vnd.tao.intent-module-archive"
        ],
        [
            "tap",
            "image/vnd.tencent.tap"
        ],
        [
            "tar",
            "application/x-tar"
        ],
        [
            "tcap",
            "application/vnd.3gpp2.tcap"
        ],
        [
            "tcl",
            "application/x-tcl"
        ],
        [
            "td",
            "application/urc-targetdesc+xml"
        ],
        [
            "teacher",
            "application/vnd.smart.teacher"
        ],
        [
            "tei",
            "application/tei+xml"
        ],
        [
            "teicorpus",
            "application/tei+xml"
        ],
        [
            "tex",
            "application/x-tex"
        ],
        [
            "texi",
            "application/x-texinfo"
        ],
        [
            "texinfo",
            "application/x-texinfo"
        ],
        [
            "text",
            "text/plain"
        ],
        [
            "tfi",
            "application/thraud+xml"
        ],
        [
            "tfm",
            "application/x-tex-tfm"
        ],
        [
            "tfx",
            "image/tiff-fx"
        ],
        [
            "tga",
            "image/x-tga"
        ],
        [
            "tgz",
            "application/x-tar"
        ],
        [
            "thmx",
            "application/vnd.ms-officetheme"
        ],
        [
            "tif",
            "image/tiff"
        ],
        [
            "tiff",
            "image/tiff"
        ],
        [
            "tk",
            "application/x-tcl"
        ],
        [
            "tmo",
            "application/vnd.tmobile-livetv"
        ],
        [
            "toml",
            "application/toml"
        ],
        [
            "torrent",
            "application/x-bittorrent"
        ],
        [
            "tpl",
            "application/vnd.groove-tool-template"
        ],
        [
            "tpt",
            "application/vnd.trid.tpt"
        ],
        [
            "tr",
            "text/troff"
        ],
        [
            "tra",
            "application/vnd.trueapp"
        ],
        [
            "trig",
            "application/trig"
        ],
        [
            "trm",
            "application/x-msterminal"
        ],
        [
            "ts",
            "video/mp2t"
        ],
        [
            "tsd",
            "application/timestamped-data"
        ],
        [
            "tsv",
            "text/tab-separated-values"
        ],
        [
            "ttc",
            "font/collection"
        ],
        [
            "ttf",
            "font/ttf"
        ],
        [
            "ttl",
            "text/turtle"
        ],
        [
            "ttml",
            "application/ttml+xml"
        ],
        [
            "twd",
            "application/vnd.simtech-mindmapper"
        ],
        [
            "twds",
            "application/vnd.simtech-mindmapper"
        ],
        [
            "txd",
            "application/vnd.genomatix.tuxedo"
        ],
        [
            "txf",
            "application/vnd.mobius.txf"
        ],
        [
            "txt",
            "text/plain"
        ],
        [
            "u8dsn",
            "message/global-delivery-status"
        ],
        [
            "u8hdr",
            "message/global-headers"
        ],
        [
            "u8mdn",
            "message/global-disposition-notification"
        ],
        [
            "u8msg",
            "message/global"
        ],
        [
            "u32",
            "application/x-authorware-bin"
        ],
        [
            "ubj",
            "application/ubjson"
        ],
        [
            "udeb",
            "application/x-debian-package"
        ],
        [
            "ufd",
            "application/vnd.ufdl"
        ],
        [
            "ufdl",
            "application/vnd.ufdl"
        ],
        [
            "ulx",
            "application/x-glulx"
        ],
        [
            "umj",
            "application/vnd.umajin"
        ],
        [
            "unityweb",
            "application/vnd.unity"
        ],
        [
            "uoml",
            "application/vnd.uoml+xml"
        ],
        [
            "uri",
            "text/uri-list"
        ],
        [
            "uris",
            "text/uri-list"
        ],
        [
            "urls",
            "text/uri-list"
        ],
        [
            "usdz",
            "model/vnd.usdz+zip"
        ],
        [
            "ustar",
            "application/x-ustar"
        ],
        [
            "utz",
            "application/vnd.uiq.theme"
        ],
        [
            "uu",
            "text/x-uuencode"
        ],
        [
            "uva",
            "audio/vnd.dece.audio"
        ],
        [
            "uvd",
            "application/vnd.dece.data"
        ],
        [
            "uvf",
            "application/vnd.dece.data"
        ],
        [
            "uvg",
            "image/vnd.dece.graphic"
        ],
        [
            "uvh",
            "video/vnd.dece.hd"
        ],
        [
            "uvi",
            "image/vnd.dece.graphic"
        ],
        [
            "uvm",
            "video/vnd.dece.mobile"
        ],
        [
            "uvp",
            "video/vnd.dece.pd"
        ],
        [
            "uvs",
            "video/vnd.dece.sd"
        ],
        [
            "uvt",
            "application/vnd.dece.ttml+xml"
        ],
        [
            "uvu",
            "video/vnd.uvvu.mp4"
        ],
        [
            "uvv",
            "video/vnd.dece.video"
        ],
        [
            "uvva",
            "audio/vnd.dece.audio"
        ],
        [
            "uvvd",
            "application/vnd.dece.data"
        ],
        [
            "uvvf",
            "application/vnd.dece.data"
        ],
        [
            "uvvg",
            "image/vnd.dece.graphic"
        ],
        [
            "uvvh",
            "video/vnd.dece.hd"
        ],
        [
            "uvvi",
            "image/vnd.dece.graphic"
        ],
        [
            "uvvm",
            "video/vnd.dece.mobile"
        ],
        [
            "uvvp",
            "video/vnd.dece.pd"
        ],
        [
            "uvvs",
            "video/vnd.dece.sd"
        ],
        [
            "uvvt",
            "application/vnd.dece.ttml+xml"
        ],
        [
            "uvvu",
            "video/vnd.uvvu.mp4"
        ],
        [
            "uvvv",
            "video/vnd.dece.video"
        ],
        [
            "uvvx",
            "application/vnd.dece.unspecified"
        ],
        [
            "uvvz",
            "application/vnd.dece.zip"
        ],
        [
            "uvx",
            "application/vnd.dece.unspecified"
        ],
        [
            "uvz",
            "application/vnd.dece.zip"
        ],
        [
            "vbox",
            "application/x-virtualbox-vbox"
        ],
        [
            "vbox-extpack",
            "application/x-virtualbox-vbox-extpack"
        ],
        [
            "vcard",
            "text/vcard"
        ],
        [
            "vcd",
            "application/x-cdlink"
        ],
        [
            "vcf",
            "text/x-vcard"
        ],
        [
            "vcg",
            "application/vnd.groove-vcard"
        ],
        [
            "vcs",
            "text/x-vcalendar"
        ],
        [
            "vcx",
            "application/vnd.vcx"
        ],
        [
            "vdi",
            "application/x-virtualbox-vdi"
        ],
        [
            "vds",
            "model/vnd.sap.vds"
        ],
        [
            "vhd",
            "application/x-virtualbox-vhd"
        ],
        [
            "vis",
            "application/vnd.visionary"
        ],
        [
            "viv",
            "video/vnd.vivo"
        ],
        [
            "vlc",
            "application/videolan"
        ],
        [
            "vmdk",
            "application/x-virtualbox-vmdk"
        ],
        [
            "vob",
            "video/x-ms-vob"
        ],
        [
            "vor",
            "application/vnd.stardivision.writer"
        ],
        [
            "vox",
            "application/x-authorware-bin"
        ],
        [
            "vrml",
            "model/vrml"
        ],
        [
            "vsd",
            "application/vnd.visio"
        ],
        [
            "vsf",
            "application/vnd.vsf"
        ],
        [
            "vss",
            "application/vnd.visio"
        ],
        [
            "vst",
            "application/vnd.visio"
        ],
        [
            "vsw",
            "application/vnd.visio"
        ],
        [
            "vtf",
            "image/vnd.valve.source.texture"
        ],
        [
            "vtt",
            "text/vtt"
        ],
        [
            "vtu",
            "model/vnd.vtu"
        ],
        [
            "vxml",
            "application/voicexml+xml"
        ],
        [
            "w3d",
            "application/x-director"
        ],
        [
            "wad",
            "application/x-doom"
        ],
        [
            "wadl",
            "application/vnd.sun.wadl+xml"
        ],
        [
            "war",
            "application/java-archive"
        ],
        [
            "wasm",
            "application/wasm"
        ],
        [
            "wav",
            "audio/x-wav"
        ],
        [
            "wax",
            "audio/x-ms-wax"
        ],
        [
            "wbmp",
            "image/vnd.wap.wbmp"
        ],
        [
            "wbs",
            "application/vnd.criticaltools.wbs+xml"
        ],
        [
            "wbxml",
            "application/wbxml"
        ],
        [
            "wcm",
            "application/vnd.ms-works"
        ],
        [
            "wdb",
            "application/vnd.ms-works"
        ],
        [
            "wdp",
            "image/vnd.ms-photo"
        ],
        [
            "weba",
            "audio/webm"
        ],
        [
            "webapp",
            "application/x-web-app-manifest+json"
        ],
        [
            "webm",
            "video/webm"
        ],
        [
            "webmanifest",
            "application/manifest+json"
        ],
        [
            "webp",
            "image/webp"
        ],
        [
            "wg",
            "application/vnd.pmi.widget"
        ],
        [
            "wgt",
            "application/widget"
        ],
        [
            "wks",
            "application/vnd.ms-works"
        ],
        [
            "wm",
            "video/x-ms-wm"
        ],
        [
            "wma",
            "audio/x-ms-wma"
        ],
        [
            "wmd",
            "application/x-ms-wmd"
        ],
        [
            "wmf",
            "image/wmf"
        ],
        [
            "wml",
            "text/vnd.wap.wml"
        ],
        [
            "wmlc",
            "application/wmlc"
        ],
        [
            "wmls",
            "text/vnd.wap.wmlscript"
        ],
        [
            "wmlsc",
            "application/vnd.wap.wmlscriptc"
        ],
        [
            "wmv",
            "video/x-ms-wmv"
        ],
        [
            "wmx",
            "video/x-ms-wmx"
        ],
        [
            "wmz",
            "application/x-msmetafile"
        ],
        [
            "woff",
            "font/woff"
        ],
        [
            "woff2",
            "font/woff2"
        ],
        [
            "word",
            "application/msword"
        ],
        [
            "wpd",
            "application/vnd.wordperfect"
        ],
        [
            "wpl",
            "application/vnd.ms-wpl"
        ],
        [
            "wps",
            "application/vnd.ms-works"
        ],
        [
            "wqd",
            "application/vnd.wqd"
        ],
        [
            "wri",
            "application/x-mswrite"
        ],
        [
            "wrl",
            "model/vrml"
        ],
        [
            "wsc",
            "message/vnd.wfa.wsc"
        ],
        [
            "wsdl",
            "application/wsdl+xml"
        ],
        [
            "wspolicy",
            "application/wspolicy+xml"
        ],
        [
            "wtb",
            "application/vnd.webturbo"
        ],
        [
            "wvx",
            "video/x-ms-wvx"
        ],
        [
            "x3d",
            "model/x3d+xml"
        ],
        [
            "x3db",
            "model/x3d+fastinfoset"
        ],
        [
            "x3dbz",
            "model/x3d+binary"
        ],
        [
            "x3dv",
            "model/x3d-vrml"
        ],
        [
            "x3dvz",
            "model/x3d+vrml"
        ],
        [
            "x3dz",
            "model/x3d+xml"
        ],
        [
            "x32",
            "application/x-authorware-bin"
        ],
        [
            "x_b",
            "model/vnd.parasolid.transmit.binary"
        ],
        [
            "x_t",
            "model/vnd.parasolid.transmit.text"
        ],
        [
            "xaml",
            "application/xaml+xml"
        ],
        [
            "xap",
            "application/x-silverlight-app"
        ],
        [
            "xar",
            "application/vnd.xara"
        ],
        [
            "xav",
            "application/xcap-att+xml"
        ],
        [
            "xbap",
            "application/x-ms-xbap"
        ],
        [
            "xbd",
            "application/vnd.fujixerox.docuworks.binder"
        ],
        [
            "xbm",
            "image/x-xbitmap"
        ],
        [
            "xca",
            "application/xcap-caps+xml"
        ],
        [
            "xcs",
            "application/calendar+xml"
        ],
        [
            "xdf",
            "application/xcap-diff+xml"
        ],
        [
            "xdm",
            "application/vnd.syncml.dm+xml"
        ],
        [
            "xdp",
            "application/vnd.adobe.xdp+xml"
        ],
        [
            "xdssc",
            "application/dssc+xml"
        ],
        [
            "xdw",
            "application/vnd.fujixerox.docuworks"
        ],
        [
            "xel",
            "application/xcap-el+xml"
        ],
        [
            "xenc",
            "application/xenc+xml"
        ],
        [
            "xer",
            "application/patch-ops-error+xml"
        ],
        [
            "xfdf",
            "application/vnd.adobe.xfdf"
        ],
        [
            "xfdl",
            "application/vnd.xfdl"
        ],
        [
            "xht",
            "application/xhtml+xml"
        ],
        [
            "xhtml",
            "application/xhtml+xml"
        ],
        [
            "xhvml",
            "application/xv+xml"
        ],
        [
            "xif",
            "image/vnd.xiff"
        ],
        [
            "xl",
            "application/excel"
        ],
        [
            "xla",
            "application/vnd.ms-excel"
        ],
        [
            "xlam",
            "application/vnd.ms-excel.addin.macroEnabled.12"
        ],
        [
            "xlc",
            "application/vnd.ms-excel"
        ],
        [
            "xlf",
            "application/xliff+xml"
        ],
        [
            "xlm",
            "application/vnd.ms-excel"
        ],
        [
            "xls",
            "application/vnd.ms-excel"
        ],
        [
            "xlsb",
            "application/vnd.ms-excel.sheet.binary.macroEnabled.12"
        ],
        [
            "xlsm",
            "application/vnd.ms-excel.sheet.macroEnabled.12"
        ],
        [
            "xlsx",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        ],
        [
            "xlt",
            "application/vnd.ms-excel"
        ],
        [
            "xltm",
            "application/vnd.ms-excel.template.macroEnabled.12"
        ],
        [
            "xltx",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.template"
        ],
        [
            "xlw",
            "application/vnd.ms-excel"
        ],
        [
            "xm",
            "audio/xm"
        ],
        [
            "xml",
            "application/xml"
        ],
        [
            "xns",
            "application/xcap-ns+xml"
        ],
        [
            "xo",
            "application/vnd.olpc-sugar"
        ],
        [
            "xop",
            "application/xop+xml"
        ],
        [
            "xpi",
            "application/x-xpinstall"
        ],
        [
            "xpl",
            "application/xproc+xml"
        ],
        [
            "xpm",
            "image/x-xpixmap"
        ],
        [
            "xpr",
            "application/vnd.is-xpr"
        ],
        [
            "xps",
            "application/vnd.ms-xpsdocument"
        ],
        [
            "xpw",
            "application/vnd.intercon.formnet"
        ],
        [
            "xpx",
            "application/vnd.intercon.formnet"
        ],
        [
            "xsd",
            "application/xml"
        ],
        [
            "xsl",
            "application/xml"
        ],
        [
            "xslt",
            "application/xslt+xml"
        ],
        [
            "xsm",
            "application/vnd.syncml+xml"
        ],
        [
            "xspf",
            "application/xspf+xml"
        ],
        [
            "xul",
            "application/vnd.mozilla.xul+xml"
        ],
        [
            "xvm",
            "application/xv+xml"
        ],
        [
            "xvml",
            "application/xv+xml"
        ],
        [
            "xwd",
            "image/x-xwindowdump"
        ],
        [
            "xyz",
            "chemical/x-xyz"
        ],
        [
            "xz",
            "application/x-xz"
        ],
        [
            "yaml",
            "text/yaml"
        ],
        [
            "yang",
            "application/yang"
        ],
        [
            "yin",
            "application/yin+xml"
        ],
        [
            "yml",
            "text/yaml"
        ],
        [
            "ymp",
            "text/x-suse-ymp"
        ],
        [
            "z",
            "application/x-compress"
        ],
        [
            "z1",
            "application/x-zmachine"
        ],
        [
            "z2",
            "application/x-zmachine"
        ],
        [
            "z3",
            "application/x-zmachine"
        ],
        [
            "z4",
            "application/x-zmachine"
        ],
        [
            "z5",
            "application/x-zmachine"
        ],
        [
            "z6",
            "application/x-zmachine"
        ],
        [
            "z7",
            "application/x-zmachine"
        ],
        [
            "z8",
            "application/x-zmachine"
        ],
        [
            "zaz",
            "application/vnd.zzazz.deck+xml"
        ],
        [
            "zip",
            "application/zip"
        ],
        [
            "zir",
            "application/vnd.zul"
        ],
        [
            "zirz",
            "application/vnd.zul"
        ],
        [
            "zmm",
            "application/vnd.handheld-entertainment+xml"
        ],
        [
            "zsh",
            "text/x-scriptzsh"
        ]
    ]);
    function Wy(t, e, n) {
        const r = Nie(t), { webkitRelativePath: i } = t, s = typeof e == "string" ? e : typeof i == "string" && i.length > 0 ? i : `./${t.name}`;
        return typeof r.path != "string" && V3(r, "path", s), V3(r, "relativePath", s), r;
    }
    function Nie(t) {
        const { name: e } = t;
        if (e && e.lastIndexOf(".") !== -1 && !t.type) {
            const r = e.split(".").pop().toLowerCase(), i = Aie.get(r);
            i && Object.defineProperty(t, "type", {
                value: i,
                writable: !1,
                configurable: !1,
                enumerable: !0
            });
        }
        return t;
    }
    function V3(t, e, n) {
        Object.defineProperty(t, e, {
            value: n,
            writable: !1,
            configurable: !1,
            enumerable: !0
        });
    }
    const Pie = [
        ".DS_Store",
        "Thumbs.db"
    ];
    function kie(t) {
        return mm(this, void 0, void 0, function*() {
            return AE(t) && Oie(t.dataTransfer) ? jie(t.dataTransfer, t.type) : Lie(t) ? Die(t) : Array.isArray(t) && t.every((e)=>"getFile" in e && typeof e.getFile == "function") ? Fie(t) : [];
        });
    }
    function Oie(t) {
        return AE(t);
    }
    function Lie(t) {
        return AE(t) && AE(t.target);
    }
    function AE(t) {
        return typeof t == "object" && t !== null;
    }
    function Die(t) {
        return LP(t.target.files).map((e)=>Wy(e));
    }
    function Fie(t) {
        return mm(this, void 0, void 0, function*() {
            return (yield Promise.all(t.map((n)=>n.getFile()))).map((n)=>Wy(n));
        });
    }
    function jie(t, e) {
        return mm(this, void 0, void 0, function*() {
            if (t.items) {
                const n = LP(t.items).filter((i)=>i.kind === "file");
                if (e !== "drop") return n;
                const r = yield Promise.all(n.map(Bie));
                return W3(X5(r));
            }
            return W3(LP(t.files).map((n)=>Wy(n)));
        });
    }
    function W3(t) {
        return t.filter((e)=>Pie.indexOf(e.name) === -1);
    }
    function LP(t) {
        if (t === null) return [];
        const e = [];
        for(let n = 0; n < t.length; n++){
            const r = t[n];
            e.push(r);
        }
        return e;
    }
    function Bie(t) {
        if (typeof t.webkitGetAsEntry != "function") return q3(t);
        const e = t.webkitGetAsEntry();
        return e && e.isDirectory ? K5(e) : q3(t, e);
    }
    function X5(t) {
        return t.reduce((e, n)=>[
                ...e,
                ...Array.isArray(n) ? X5(n) : [
                    n
                ]
            ], []);
    }
    function q3(t, e) {
        return mm(this, void 0, void 0, function*() {
            var n;
            if (globalThis.isSecureContext && typeof t.getAsFileSystemHandle == "function") {
                const s = yield t.getAsFileSystemHandle();
                if (s === null) throw new Error(`${t} is not a File`);
                if (s !== void 0) {
                    const o = yield s.getFile();
                    return o.handle = s, Wy(o);
                }
            }
            const r = t.getAsFile();
            if (!r) throw new Error(`${t} is not a File`);
            return Wy(r, (n = e?.fullPath) !== null && n !== void 0 ? n : void 0);
        });
    }
    function Uie(t) {
        return mm(this, void 0, void 0, function*() {
            return t.isDirectory ? K5(t) : zie(t);
        });
    }
    function K5(t) {
        const e = t.createReader();
        return new Promise((n, r)=>{
            const i = [];
            function s() {
                e.readEntries((o)=>mm(this, void 0, void 0, function*() {
                        if (o.length) {
                            const a = Promise.all(o.map(Uie));
                            i.push(a), s();
                        } else try {
                            const a = yield Promise.all(i);
                            n(a);
                        } catch (a) {
                            r(a);
                        }
                    }), (o)=>{
                    r(o);
                });
            }
            s();
        });
    }
    function zie(t) {
        return mm(this, void 0, void 0, function*() {
            return new Promise((e, n)=>{
                t.file((r)=>{
                    const i = Wy(r, t.fullPath);
                    e(i);
                }, (r)=>{
                    n(r);
                });
            });
        });
    }
    var F_ = {}, H3;
    function Vie() {
        return H3 || (H3 = 1, F_.__esModule = !0, F_.default = function(t, e) {
            if (t && e) {
                var n = Array.isArray(e) ? e : e.split(",");
                if (n.length === 0) return !0;
                var r = t.name || "", i = (t.type || "").toLowerCase(), s = i.replace(/\/.*$/, "");
                return n.some(function(o) {
                    var a = o.trim().toLowerCase();
                    return a.charAt(0) === "." ? r.toLowerCase().endsWith(a) : a.endsWith("/*") ? s === a.replace(/\/.*$/, "") : i === a;
                });
            }
            return !0;
        }), F_;
    }
    var Wie = Vie();
    const IR = Ao(Wie);
    function $3(t) {
        return $ie(t) || Hie(t) || Z5(t) || qie();
    }
    function qie() {
        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function Hie(t) {
        if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
    }
    function $ie(t) {
        if (Array.isArray(t)) return DP(t);
    }
    function G3(t, e) {
        var n = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(t);
            e && (r = r.filter(function(i) {
                return Object.getOwnPropertyDescriptor(t, i).enumerable;
            })), n.push.apply(n, r);
        }
        return n;
    }
    function X3(t) {
        for(var e = 1; e < arguments.length; e++){
            var n = arguments[e] != null ? arguments[e] : {};
            e % 2 ? G3(Object(n), !0).forEach(function(r) {
                Y5(t, r, n[r]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : G3(Object(n)).forEach(function(r) {
                Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
            });
        }
        return t;
    }
    function Y5(t, e, n) {
        return e in t ? Object.defineProperty(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = n, t;
    }
    function ob(t, e) {
        return Kie(t) || Xie(t, e) || Z5(t, e) || Gie();
    }
    function Gie() {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function Z5(t, e) {
        if (t) {
            if (typeof t == "string") return DP(t, e);
            var n = Object.prototype.toString.call(t).slice(8, -1);
            if (n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set") return Array.from(t);
            if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return DP(t, e);
        }
    }
    function DP(t, e) {
        (e == null || e > t.length) && (e = t.length);
        for(var n = 0, r = new Array(e); n < e; n++)r[n] = t[n];
        return r;
    }
    function Xie(t, e) {
        var n = t == null ? null : typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
        if (n != null) {
            var r = [], i = !0, s = !1, o, a;
            try {
                for(n = n.call(t); !(i = (o = n.next()).done) && (r.push(o.value), !(e && r.length === e)); i = !0);
            } catch (l) {
                s = !0, a = l;
            } finally{
                try {
                    !i && n.return != null && n.return();
                } finally{
                    if (s) throw a;
                }
            }
            return r;
        }
    }
    function Kie(t) {
        if (Array.isArray(t)) return t;
    }
    var Yie = typeof IR == "function" ? IR : IR.default, J5 = "file-invalid-type", Q5 = "file-too-large", eq = "file-too-small", tq = "too-many-files", Zie = {
        FileInvalidType: J5,
        FileTooLarge: Q5,
        FileTooSmall: eq,
        TooManyFiles: tq
    }, Jie = function() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", n = e.split(","), r = n.length > 1 ? "one of ".concat(n.join(", ")) : n[0];
        return {
            code: J5,
            message: "File type must be ".concat(r)
        };
    }, K3 = function(e) {
        return {
            code: Q5,
            message: "File is larger than ".concat(e, " ").concat(e === 1 ? "byte" : "bytes")
        };
    }, Y3 = function(e) {
        return {
            code: eq,
            message: "File is smaller than ".concat(e, " ").concat(e === 1 ? "byte" : "bytes")
        };
    }, Qie = {
        code: tq,
        message: "Too many files"
    };
    function nq(t, e) {
        var n = t.type === "application/x-moz-file" || Yie(t, e);
        return [
            n,
            n ? null : Jie(e)
        ];
    }
    function rq(t, e, n) {
        if (_p(t.size)) if (_p(e) && _p(n)) {
            if (t.size > n) return [
                !1,
                K3(n)
            ];
            if (t.size < e) return [
                !1,
                Y3(e)
            ];
        } else {
            if (_p(e) && t.size < e) return [
                !1,
                Y3(e)
            ];
            if (_p(n) && t.size > n) return [
                !1,
                K3(n)
            ];
        }
        return [
            !0,
            null
        ];
    }
    function _p(t) {
        return t != null;
    }
    function ese(t) {
        var e = t.files, n = t.accept, r = t.minSize, i = t.maxSize, s = t.multiple, o = t.maxFiles, a = t.validator;
        return !s && e.length > 1 || s && o >= 1 && e.length > o ? !1 : e.every(function(l) {
            var c = nq(l, n), u = ob(c, 1), f = u[0], p = rq(l, r, i), g = ob(p, 1), x = g[0], S = a ? a(l) : null;
            return f && x && !S;
        });
    }
    function NE(t) {
        return typeof t.isPropagationStopped == "function" ? t.isPropagationStopped() : typeof t.cancelBubble < "u" ? t.cancelBubble : !1;
    }
    function j_(t) {
        return t.dataTransfer ? Array.prototype.some.call(t.dataTransfer.types, function(e) {
            return e === "Files" || e === "application/x-moz-file";
        }) : !!t.target && !!t.target.files;
    }
    function Z3(t) {
        t.preventDefault();
    }
    function tse(t) {
        return t.indexOf("MSIE") !== -1 || t.indexOf("Trident/") !== -1;
    }
    function nse(t) {
        return t.indexOf("Edge/") !== -1;
    }
    function rse() {
        var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
        return tse(t) || nse(t);
    }
    function Cc() {
        for(var t = arguments.length, e = new Array(t), n = 0; n < t; n++)e[n] = arguments[n];
        return function(r) {
            for(var i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++)s[o - 1] = arguments[o];
            return e.some(function(a) {
                return !NE(r) && a && a.apply(void 0, [
                    r
                ].concat(s)), NE(r);
            });
        };
    }
    function ise() {
        return "showOpenFilePicker" in window;
    }
    function sse(t) {
        if (_p(t)) {
            var e = Object.entries(t).filter(function(n) {
                var r = ob(n, 2), i = r[0], s = r[1], o = !0;
                return iq(i) || (console.warn('Skipped "'.concat(i, '" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.')), o = !1), (!Array.isArray(s) || !s.every(sq)) && (console.warn('Skipped "'.concat(i, '" because an invalid file extension was provided.')), o = !1), o;
            }).reduce(function(n, r) {
                var i = ob(r, 2), s = i[0], o = i[1];
                return X3(X3({}, n), {}, Y5({}, s, o));
            }, {});
            return [
                {
                    description: "Files",
                    accept: e
                }
            ];
        }
        return t;
    }
    function ose(t) {
        if (_p(t)) return Object.entries(t).reduce(function(e, n) {
            var r = ob(n, 2), i = r[0], s = r[1];
            return [].concat($3(e), [
                i
            ], $3(s));
        }, []).filter(function(e) {
            return iq(e) || sq(e);
        }).join(",");
    }
    function ase(t) {
        return t instanceof DOMException && (t.name === "AbortError" || t.code === t.ABORT_ERR);
    }
    function lse(t) {
        return t instanceof DOMException && (t.name === "SecurityError" || t.code === t.SECURITY_ERR);
    }
    function iq(t) {
        return t === "audio/*" || t === "video/*" || t === "image/*" || t === "text/*" || t === "application/*" || /\w+\/[-+.\w]+/g.test(t);
    }
    function sq(t) {
        return /^.*\.[\w]+$/.test(t);
    }
    var cse = [
        "children"
    ], use = [
        "open"
    ], dse = [
        "refKey",
        "role",
        "onKeyDown",
        "onFocus",
        "onBlur",
        "onClick",
        "onDragEnter",
        "onDragOver",
        "onDragLeave",
        "onDrop"
    ], fse = [
        "refKey",
        "onChange",
        "onClick"
    ];
    function hse(t) {
        return gse(t) || mse(t) || oq(t) || pse();
    }
    function pse() {
        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function mse(t) {
        if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
    }
    function gse(t) {
        if (Array.isArray(t)) return FP(t);
    }
    function RR(t, e) {
        return xse(t) || vse(t, e) || oq(t, e) || yse();
    }
    function yse() {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function oq(t, e) {
        if (t) {
            if (typeof t == "string") return FP(t, e);
            var n = Object.prototype.toString.call(t).slice(8, -1);
            if (n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set") return Array.from(t);
            if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return FP(t, e);
        }
    }
    function FP(t, e) {
        (e == null || e > t.length) && (e = t.length);
        for(var n = 0, r = new Array(e); n < e; n++)r[n] = t[n];
        return r;
    }
    function vse(t, e) {
        var n = t == null ? null : typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
        if (n != null) {
            var r = [], i = !0, s = !1, o, a;
            try {
                for(n = n.call(t); !(i = (o = n.next()).done) && (r.push(o.value), !(e && r.length === e)); i = !0);
            } catch (l) {
                s = !0, a = l;
            } finally{
                try {
                    !i && n.return != null && n.return();
                } finally{
                    if (s) throw a;
                }
            }
            return r;
        }
    }
    function xse(t) {
        if (Array.isArray(t)) return t;
    }
    function J3(t, e) {
        var n = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(t);
            e && (r = r.filter(function(i) {
                return Object.getOwnPropertyDescriptor(t, i).enumerable;
            })), n.push.apply(n, r);
        }
        return n;
    }
    function ti(t) {
        for(var e = 1; e < arguments.length; e++){
            var n = arguments[e] != null ? arguments[e] : {};
            e % 2 ? J3(Object(n), !0).forEach(function(r) {
                jP(t, r, n[r]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : J3(Object(n)).forEach(function(r) {
                Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
            });
        }
        return t;
    }
    function jP(t, e, n) {
        return e in t ? Object.defineProperty(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = n, t;
    }
    function PE(t, e) {
        if (t == null) return {};
        var n = bse(t, e), r, i;
        if (Object.getOwnPropertySymbols) {
            var s = Object.getOwnPropertySymbols(t);
            for(i = 0; i < s.length; i++)r = s[i], !(e.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(t, r) && (n[r] = t[r]);
        }
        return n;
    }
    function bse(t, e) {
        if (t == null) return {};
        var n = {}, r = Object.keys(t), i, s;
        for(s = 0; s < r.length; s++)i = r[s], !(e.indexOf(i) >= 0) && (n[i] = t[i]);
        return n;
    }
    var xT = X.forwardRef(function(t, e) {
        var n = t.children, r = PE(t, cse), i = lq(r), s = i.open, o = PE(i, use);
        return X.useImperativeHandle(e, function() {
            return {
                open: s
            };
        }, [
            s
        ]), nr.createElement(X.Fragment, null, n(ti(ti({}, o), {}, {
            open: s
        })));
    });
    xT.displayName = "Dropzone";
    var aq = {
        disabled: !1,
        getFilesFromEvent: kie,
        maxSize: 1 / 0,
        minSize: 0,
        multiple: !0,
        maxFiles: 0,
        preventDropOnDocument: !0,
        noClick: !1,
        noKeyboard: !1,
        noDrag: !1,
        noDragEventsBubbling: !1,
        validator: null,
        useFsAccessApi: !1,
        autoFocus: !1
    };
    xT.defaultProps = aq;
    xT.propTypes = {
        children: Er.func,
        accept: Er.objectOf(Er.arrayOf(Er.string)),
        multiple: Er.bool,
        preventDropOnDocument: Er.bool,
        noClick: Er.bool,
        noKeyboard: Er.bool,
        noDrag: Er.bool,
        noDragEventsBubbling: Er.bool,
        minSize: Er.number,
        maxSize: Er.number,
        maxFiles: Er.number,
        disabled: Er.bool,
        getFilesFromEvent: Er.func,
        onFileDialogCancel: Er.func,
        onFileDialogOpen: Er.func,
        useFsAccessApi: Er.bool,
        autoFocus: Er.bool,
        onDragEnter: Er.func,
        onDragLeave: Er.func,
        onDragOver: Er.func,
        onDrop: Er.func,
        onDropAccepted: Er.func,
        onDropRejected: Er.func,
        onError: Er.func,
        validator: Er.func
    };
    var BP = {
        isFocused: !1,
        isFileDialogActive: !1,
        isDragActive: !1,
        isDragAccept: !1,
        isDragReject: !1,
        acceptedFiles: [],
        fileRejections: []
    };
    function lq() {
        var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e = ti(ti({}, aq), t), n = e.accept, r = e.disabled, i = e.getFilesFromEvent, s = e.maxSize, o = e.minSize, a = e.multiple, l = e.maxFiles, c = e.onDragEnter, u = e.onDragLeave, f = e.onDragOver, p = e.onDrop, g = e.onDropAccepted, x = e.onDropRejected, S = e.onFileDialogCancel, _ = e.onFileDialogOpen, b = e.useFsAccessApi, M = e.autoFocus, E = e.preventDropOnDocument, T = e.noClick, k = e.noKeyboard, N = e.noDrag, D = e.noDragEventsBubbling, L = e.onError, R = e.validator, A = X.useMemo(function() {
            return ose(n);
        }, [
            n
        ]), P = X.useMemo(function() {
            return sse(n);
        }, [
            n
        ]), B = X.useMemo(function() {
            return typeof _ == "function" ? _ : Q3;
        }, [
            _
        ]), U = X.useMemo(function() {
            return typeof S == "function" ? S : Q3;
        }, [
            S
        ]), j = X.useRef(null), K = X.useRef(null), q = X.useReducer(wse, BP), te = RR(q, 2), W = te[0], J = te[1], Q = W.isFocused, Y = W.isFileDialogActive, le = X.useRef(typeof window < "u" && window.isSecureContext && b && ise()), ue = function() {
            !le.current && Y && setTimeout(function() {
                if (K.current) {
                    var me = K.current.files;
                    me.length || (J({
                        type: "closeDialog"
                    }), U());
                }
            }, 300);
        };
        X.useEffect(function() {
            return window.addEventListener("focus", ue, !1), function() {
                window.removeEventListener("focus", ue, !1);
            };
        }, [
            K,
            Y,
            U,
            le
        ]);
        var ie = X.useRef([]), he = function(me) {
            j.current && j.current.contains(me.target) || (me.preventDefault(), ie.current = []);
        };
        X.useEffect(function() {
            return E && (document.addEventListener("dragover", Z3, !1), document.addEventListener("drop", he, !1)), function() {
                E && (document.removeEventListener("dragover", Z3), document.removeEventListener("drop", he));
            };
        }, [
            j,
            E
        ]), X.useEffect(function() {
            return !r && M && j.current && j.current.focus(), function() {};
        }, [
            j,
            M,
            r
        ]);
        var ge = X.useCallback(function(pe) {
            L ? L(pe) : console.error(pe);
        }, [
            L
        ]), ve = X.useCallback(function(pe) {
            pe.preventDefault(), pe.persist(), oe(pe), ie.current = [].concat(hse(ie.current), [
                pe.target
            ]), j_(pe) && Promise.resolve(i(pe)).then(function(me) {
                if (!(NE(pe) && !D)) {
                    var Ie = me.length, Xe = Ie > 0 && ese({
                        files: me,
                        accept: A,
                        minSize: o,
                        maxSize: s,
                        multiple: a,
                        maxFiles: l,
                        validator: R
                    }), Ze = Ie > 0 && !Xe;
                    J({
                        isDragAccept: Xe,
                        isDragReject: Ze,
                        isDragActive: !0,
                        type: "setDraggedFiles"
                    }), c && c(pe);
                }
            }).catch(function(me) {
                return ge(me);
            });
        }, [
            i,
            c,
            ge,
            D,
            A,
            o,
            s,
            a,
            l,
            R
        ]), Ee = X.useCallback(function(pe) {
            pe.preventDefault(), pe.persist(), oe(pe);
            var me = j_(pe);
            if (me && pe.dataTransfer) try {
                pe.dataTransfer.dropEffect = "copy";
            } catch  {}
            return me && f && f(pe), !1;
        }, [
            f,
            D
        ]), Ce = X.useCallback(function(pe) {
            pe.preventDefault(), pe.persist(), oe(pe);
            var me = ie.current.filter(function(Xe) {
                return j.current && j.current.contains(Xe);
            }), Ie = me.indexOf(pe.target);
            Ie !== -1 && me.splice(Ie, 1), ie.current = me, !(me.length > 0) && (J({
                type: "setDraggedFiles",
                isDragActive: !1,
                isDragAccept: !1,
                isDragReject: !1
            }), j_(pe) && u && u(pe));
        }, [
            j,
            u,
            D
        ]), Ne = X.useCallback(function(pe, me) {
            var Ie = [], Xe = [];
            pe.forEach(function(Ze) {
                var at = nq(Ze, A), Je = RR(at, 2), Pe = Je[0], Fe = Je[1], nt = rq(Ze, o, s), ct = RR(nt, 2), st = ct[0], _e = ct[1], $e = R ? R(Ze) : null;
                if (Pe && st && !$e) Ie.push(Ze);
                else {
                    var ht = [
                        Fe,
                        _e
                    ];
                    $e && (ht = ht.concat($e)), Xe.push({
                        file: Ze,
                        errors: ht.filter(function(Se) {
                            return Se;
                        })
                    });
                }
            }), (!a && Ie.length > 1 || a && l >= 1 && Ie.length > l) && (Ie.forEach(function(Ze) {
                Xe.push({
                    file: Ze,
                    errors: [
                        Qie
                    ]
                });
            }), Ie.splice(0)), J({
                acceptedFiles: Ie,
                fileRejections: Xe,
                isDragReject: Xe.length > 0,
                type: "setFiles"
            }), p && p(Ie, Xe, me), Xe.length > 0 && x && x(Xe, me), Ie.length > 0 && g && g(Ie, me);
        }, [
            J,
            a,
            A,
            o,
            s,
            l,
            p,
            g,
            x,
            R
        ]), Ve = X.useCallback(function(pe) {
            pe.preventDefault(), pe.persist(), oe(pe), ie.current = [], j_(pe) && Promise.resolve(i(pe)).then(function(me) {
                NE(pe) && !D || Ne(me, pe);
            }).catch(function(me) {
                return ge(me);
            }), J({
                type: "reset"
            });
        }, [
            i,
            Ne,
            ge,
            D
        ]), we = X.useCallback(function() {
            if (le.current) {
                J({
                    type: "openDialog"
                }), B();
                var pe = {
                    multiple: a,
                    types: P
                };
                window.showOpenFilePicker(pe).then(function(me) {
                    return i(me);
                }).then(function(me) {
                    Ne(me, null), J({
                        type: "closeDialog"
                    });
                }).catch(function(me) {
                    ase(me) ? (U(me), J({
                        type: "closeDialog"
                    })) : lse(me) ? (le.current = !1, K.current ? (K.current.value = null, K.current.click()) : ge(new Error("Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided."))) : ge(me);
                });
                return;
            }
            K.current && (J({
                type: "openDialog"
            }), B(), K.current.value = null, K.current.click());
        }, [
            J,
            B,
            U,
            b,
            Ne,
            ge,
            P,
            a
        ]), Me = X.useCallback(function(pe) {
            !j.current || !j.current.isEqualNode(pe.target) || (pe.key === " " || pe.key === "Enter" || pe.keyCode === 32 || pe.keyCode === 13) && (pe.preventDefault(), we());
        }, [
            j,
            we
        ]), se = X.useCallback(function() {
            J({
                type: "focus"
            });
        }, []), Ye = X.useCallback(function() {
            J({
                type: "blur"
            });
        }, []), Be = X.useCallback(function() {
            T || (rse() ? setTimeout(we, 0) : we());
        }, [
            T,
            we
        ]), it = function(me) {
            return r ? null : me;
        }, de = function(me) {
            return k ? null : it(me);
        }, ae = function(me) {
            return N ? null : it(me);
        }, oe = function(me) {
            D && me.stopPropagation();
        }, $ = X.useMemo(function() {
            return function() {
                var pe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, me = pe.refKey, Ie = me === void 0 ? "ref" : me, Xe = pe.role, Ze = pe.onKeyDown, at = pe.onFocus, Je = pe.onBlur, Pe = pe.onClick, Fe = pe.onDragEnter, nt = pe.onDragOver, ct = pe.onDragLeave, st = pe.onDrop, _e = PE(pe, dse);
                return ti(ti(jP({
                    onKeyDown: de(Cc(Ze, Me)),
                    onFocus: de(Cc(at, se)),
                    onBlur: de(Cc(Je, Ye)),
                    onClick: it(Cc(Pe, Be)),
                    onDragEnter: ae(Cc(Fe, ve)),
                    onDragOver: ae(Cc(nt, Ee)),
                    onDragLeave: ae(Cc(ct, Ce)),
                    onDrop: ae(Cc(st, Ve)),
                    role: typeof Xe == "string" && Xe !== "" ? Xe : "presentation"
                }, Ie, j), !r && !k ? {
                    tabIndex: 0
                } : {}), _e);
            };
        }, [
            j,
            Me,
            se,
            Ye,
            Be,
            ve,
            Ee,
            Ce,
            Ve,
            k,
            N,
            r
        ]), H = X.useCallback(function(pe) {
            pe.stopPropagation();
        }, []), fe = X.useMemo(function() {
            return function() {
                var pe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, me = pe.refKey, Ie = me === void 0 ? "ref" : me, Xe = pe.onChange, Ze = pe.onClick, at = PE(pe, fse), Je = jP({
                    accept: A,
                    multiple: a,
                    type: "file",
                    style: {
                        border: 0,
                        clip: "rect(0, 0, 0, 0)",
                        clipPath: "inset(50%)",
                        height: "1px",
                        margin: "0 -1px -1px 0",
                        overflow: "hidden",
                        padding: 0,
                        position: "absolute",
                        width: "1px",
                        whiteSpace: "nowrap"
                    },
                    onChange: it(Cc(Xe, Ve)),
                    onClick: it(Cc(Ze, H)),
                    tabIndex: -1
                }, Ie, K);
                return ti(ti({}, Je), at);
            };
        }, [
            K,
            n,
            a,
            Ve,
            r
        ]);
        return ti(ti({}, W), {}, {
            isFocused: Q && !r,
            getRootProps: $,
            getInputProps: fe,
            rootRef: j,
            inputRef: K,
            open: it(we)
        });
    }
    function wse(t, e) {
        switch(e.type){
            case "focus":
                return ti(ti({}, t), {}, {
                    isFocused: !0
                });
            case "blur":
                return ti(ti({}, t), {}, {
                    isFocused: !1
                });
            case "openDialog":
                return ti(ti({}, BP), {}, {
                    isFileDialogActive: !0
                });
            case "closeDialog":
                return ti(ti({}, t), {}, {
                    isFileDialogActive: !1
                });
            case "setDraggedFiles":
                return ti(ti({}, t), {}, {
                    isDragActive: e.isDragActive,
                    isDragAccept: e.isDragAccept,
                    isDragReject: e.isDragReject
                });
            case "setFiles":
                return ti(ti({}, t), {}, {
                    acceptedFiles: e.acceptedFiles,
                    fileRejections: e.fileRejections,
                    isDragReject: e.isDragReject
                });
            case "reset":
                return ti({}, BP);
            default:
                return t;
        }
    }
    function Q3() {}
    const _se = Object.freeze(Object.defineProperty({
        __proto__: null,
        ErrorCode: Zie,
        default: xT,
        useDropzone: lq
    }, Symbol.toStringTag, {
        value: "Module"
    })), Sse = Tn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-2",
                "items-center",
                "justify-center",
                "w-full"
            ],
            label: [
                "flex",
                "flex-col",
                "items-center",
                "justify-center",
                "w-full",
                "h-64",
                "border-2",
                "border-gray-300",
                "border-dashed",
                "rounded-lg",
                "cursor-pointer",
                "bg-gray-50",
                "hover:bg-gray-100"
            ],
            zone: [
                "flex",
                "flex-col",
                "items-center",
                "justify-center",
                "pt-5",
                "pb-6",
                "text-slate-500"
            ],
            content: []
        },
        variant: {
            active: {
                true: []
            },
            rejected: {
                true: []
            }
        },
        match: [
            {
                if: {
                    active: !0
                },
                then: {
                    label: [
                        "text-blue-400"
                    ],
                    zone: [
                        "text-blue-400"
                    ]
                }
            },
            {
                if: {
                    rejected: !0
                },
                then: {
                    label: [
                        "text-red-400"
                    ],
                    zone: [
                        "text-red-400"
                    ]
                }
            }
        ],
        defaults: {
            active: !1,
            rejected: !1
        }
    }), { useDropzone: Ese } = _se, Mse = ({ id: t, accept: e, textTile: n, textMessage: r, variant: i, tva: s = Sse, css: o, children: a, onDropAccepted: l, ...c })=>{
        const [u, f] = X.useState([]), { getRootProps: p, getInputProps: g, isDragActive: x, isDragReject: S } = Ese({
            noClick: !0,
            multiple: !1,
            accept: e,
            maxFiles: 1,
            minSize: 0,
            maxSize: 8 * 1024 ** 2,
            onDropAccepted (b, M) {
                f(b), l?.(b, M);
            },
            onError (b) {
                console.error(b);
            },
            ...c
        }), _ = s({
            active: x,
            rejected: S,
            ...i,
            css: o
        }).slots;
        return v.jsx("div", {
            ...p(),
            className: _.base(),
            children: a && u && u.length > 0 ? v.jsx("div", {
                className: _.content(),
                children: v.jsx(a, {
                    files: u,
                    clear: ()=>{
                        f([]);
                    },
                    remove: (b)=>{
                        f(u.filter((M)=>M !== b));
                    }
                })
            }) : v.jsxs("label", {
                htmlFor: t,
                className: _.label(),
                children: [
                    v.jsxs("div", {
                        className: _.zone(),
                        children: [
                            v.jsx(vn, {
                                icon: vie,
                                variant: {
                                    size: "4xl"
                                }
                            }),
                            v.jsx("div", {
                                className: "mb-2 text-sm font-semibold",
                                children: n || sa.rich("Drag 'n' drop a file here")
                            }),
                            r ? v.jsx("div", {
                                className: "text-xs",
                                children: r
                            }) : null
                        ]
                    }),
                    v.jsx("input", {
                        id: t,
                        type: "file",
                        className: "hidden",
                        ...g()
                    })
                ]
            })
        });
    }, Tse = Tn({
        slot: {
            base: [
                "min-h-screen",
                "flex",
                "flex-col"
            ],
            header: [
                "flex",
                "flex-row",
                "items-center",
                "bg-slate-50",
                "shadow-xs",
                "border-b",
                "border-b-slate-200",
                "w-full",
                "gap-4",
                "p-4"
            ],
            content: [
                "grow",
                "h-full",
                "border-b",
                "border-b-slate-200",
                "p-2"
            ]
        },
        variant: {},
        defaults: {}
    }), cq = ({ logo: t, menu: e, actions: n, variant: r, tva: i = Tse, css: s, children: o })=>{
        const a = i({
            ...r,
            css: s
        }).slots;
        return v.jsxs("div", {
            className: a.base(),
            children: [
                v.jsx(lV, {
                    position: "top-right"
                }),
                v.jsxs("div", {
                    className: a.header(),
                    children: [
                        v.jsx("div", {
                            children: t
                        }),
                        v.jsx("div", {
                            className: "grow",
                            children: e
                        }),
                        v.jsx("div", {
                            className: "flex flex-row gap-2 items-center",
                            children: n
                        })
                    ]
                }),
                v.jsx("div", {
                    className: a.content(),
                    children: o ?? v.jsx(fl, {})
                })
            ]
        });
    }, Cse = Tn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "text-blue-500",
                "rounded-sm",
                "px-1",
                "py-0.5",
                "hover:text-blue-700",
                "focus:outline-hidden",
                "w-fit"
            ]
        },
        variant: {},
        defaults: {}
    }), Ise = X.forwardRef(({ icon: t, iconProps: e, variant: n, tva: r = Cse, css: i, children: s, ...o }, a)=>{
        const l = r({
            ...n,
            css: i
        }).slots;
        return v.jsxs("a", {
            ...o,
            ref: a,
            className: l.base(),
            children: [
                Ub(t) ? v.jsx(vn, {
                    icon: t,
                    ...e
                }) : t,
                s
            ]
        });
    }), Rse = nV(Ise), Rt = (t)=>v.jsx(Rse, {
            preload: "intent",
            ...t
        }), Ase = Tn({
        slot: {
            base: [
                "fixed",
                "inset-0",
                "h-full",
                "items-center",
                "justify-center",
                "bg-slate-100",
                "flex",
                "transition-all",
                "duration-200",
                "z-10",
                "pointer-events-none",
                "bg-opacity-0",
                "backdrop-blur-none"
            ]
        },
        variant: {
            show: {
                true: [
                    "bg-opacity-50",
                    "backdrop-blur-xs",
                    "pointer-events-auto"
                ]
            }
        },
        defaults: {
            show: !0
        }
    }), Nse = ({ show: t = !0, variant: e, tva: n = Ase, css: r })=>{
        const i = n({
            show: t,
            ...e,
            css: r
        }).slots;
        return t ? v.jsx("div", {
            className: i.base(),
            children: v.jsx(vn, {
                icon: "icon-[svg-spinners--pulse-rings-multiple]",
                variant: {
                    size: "8xl"
                },
                css: {
                    base: [
                        "text-sky-400"
                    ]
                }
            })
        }) : null;
    };
    var l1 = {
        exports: {}
    }, Pse = l1.exports, ej;
    function kse() {
        return ej || (ej = 1, function(t, e) {
            (function(n, r) {
                t.exports = r();
            })(Pse, ()=>(()=>{
                    var n = {
                        d: (x, S)=>{
                            for(var _ in S)n.o(S, _) && !n.o(x, _) && Object.defineProperty(x, _, {
                                enumerable: !0,
                                get: S[_]
                            });
                        },
                        o: (x, S)=>Object.prototype.hasOwnProperty.call(x, S)
                    }, r = {};
                    n.d(r, {
                        default: ()=>g
                    });
                    const i = (...x)=>{}, s = (x)=>x !== null && x?.constructor.name === "Object";
                    let o, a;
                    const l = ()=>{
                        if (!o) {
                            o = !0;
                            try {
                                a = f.storage || localStorage, a.getItem("");
                            } catch  {
                                a = (()=>{
                                    const x = {
                                        getItem: (_)=>S[_] || null,
                                        setItem: (_, b)=>{
                                            S[_] = b;
                                        },
                                        removeItem: (_)=>{
                                            S[_] = void 0;
                                        },
                                        clear: ()=>{
                                            S = {
                                                __proto__: x
                                            };
                                        }
                                    };
                                    let S = {
                                        __proto__: x
                                    };
                                    return S;
                                })();
                            }
                            p();
                        }
                    }, c = "\0", u = (x, S, _ = !0)=>_ ? [
                            ...JSON.stringify(x)
                        ].map((b)=>String.fromCharCode(b.charCodeAt(0) + S)).join("") : JSON.parse([
                            ...x
                        ].map((b)=>String.fromCharCode(b.charCodeAt(0) - S)).join("")), f = {
                        ttl: null,
                        encrypt: !1,
                        encrypter: u,
                        decrypter: (x, S)=>u(x, S, !1),
                        secret: 75,
                        storage: void 0
                    };
                    Object.seal(f);
                    const p = (x = !1)=>{
                        l();
                        for (const S of Object.keys(a)){
                            const _ = a.getItem(S);
                            let b;
                            try {
                                b = JSON.parse(_ || "");
                            } catch  {
                                continue;
                            }
                            s(b) && c in b && (Date.now() > b.ttl || x) && a.removeItem(S);
                        }
                    }, g = {
                        config: f,
                        set: (x, S, _ = {})=>{
                            l();
                            const b = {
                                ...f,
                                ..._,
                                encrypt: _.encrypt !== !1 && (_.encrypt || f.encrypt),
                                ttl: _.ttl === null ? null : _.ttl || f.ttl
                            };
                            try {
                                const M = b.ttl && !isNaN(b.ttl) && b.ttl > 0;
                                let E = M ? {
                                    [c]: S,
                                    ttl: Date.now() + 1e3 * b.ttl
                                } : S;
                                b.encrypt && (M ? E[c] = (b.encrypter || i)(E[c], b.secret) : E = (b.encrypter || i)(E, b.secret)), a.setItem(x, JSON.stringify(E));
                            } catch  {
                                return !1;
                            }
                        },
                        get: (x, S = {})=>{
                            l();
                            const _ = a.getItem(x), b = {
                                ...f,
                                ...S,
                                encrypt: S.encrypt !== !1 && (S.encrypt || f.encrypt),
                                ttl: S.ttl === null ? null : S.ttl || f.ttl
                            };
                            let M, E;
                            try {
                                M = JSON.parse(_ || ""), E = s(M) && c in M, (b.decrypt || b.encrypt) && (E ? M[c] = (b.decrypter || i)(M[c], b.secret) : M = (b.decrypter || i)(M, b.secret));
                            } catch  {}
                            return E ? Date.now() > M.ttl ? (a.removeItem(x), null) : M[c] : M !== void 0 ? M : _;
                        },
                        flush: p,
                        clear: ()=>{
                            l(), a.clear();
                        },
                        remove: (x)=>{
                            l(), a.removeItem(x);
                        }
                    };
                    return r.default;
                })());
        }(l1)), l1.exports;
    }
    var Ose = kse();
    const Lse = Ao(Ose), hv = Lse, Dse = Tn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center"
            ]
        },
        variant: {},
        defaults: {}
    }), gm = X.memo(({ variant: t, tva: e = Dse, css: n, children: r })=>{
        const i = e({
            ...t,
            css: n
        }).slots;
        return v.jsx("div", {
            className: i.base(),
            children: r
        });
    }), uq = Tn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "rounded-sm",
                "px-2",
                "py-1",
                "border",
                "border-b-2",
                "border-transparent",
                "hover:text-slate-500"
            ]
        },
        variant: {
            active: {
                true: []
            },
            inner: {
                true: []
            },
            subtle: {
                true: []
            }
        },
        match: [
            {
                if: {
                    active: !0,
                    inner: !1
                },
                then: {
                    base: [
                        "border",
                        "border-b-2",
                        "border-blue-400",
                        "bg-blue-50",
                        "hover:border-blue-500",
                        "text-slate-800",
                        "hover:text-blue-800"
                    ]
                }
            },
            {
                if: {
                    active: !0,
                    inner: !0
                },
                then: {
                    base: [
                        "border-none",
                        "text-blue-600",
                        "hover:text-blue-800"
                    ]
                }
            },
            {
                if: {
                    subtle: !0
                },
                then: {
                    base: [
                        "hover:bg-slate-50",
                        "hover:border-slate-300",
                        "hover:text-slate-600"
                    ]
                }
            },
            {
                if: {
                    active: !0,
                    subtle: !0
                },
                then: {
                    base: [
                        "bg-slate-100",
                        "border-slate-400"
                    ]
                }
            }
        ],
        defaults: {
            active: !1,
            inner: !1,
            subtle: !1
        }
    }), Fse = X.forwardRef(({ icon: t = null, variant: e, tva: n = uq, css: r, children: i, ...s }, o)=>{
        const a = n({
            ...e,
            css: r
        }).slots;
        return v.jsxs("a", {
            ...s,
            className: a.base(),
            ref: o,
            children: [
                Ub(t) ? v.jsx(vn, {
                    icon: t
                }) : t,
                i
            ]
        });
    }), jse = nV(Fse), Cr = ({ match: t = [], variant: e, tva: n = uq, css: r, ...i })=>{
        const s = oX(), o = t.some((a)=>!!s(a));
        return v.jsx(jse, {
            preload: "intent",
            variant: {
                active: !!s({
                    to: i.to,
                    params: i.params
                }) || o,
                ...e
            },
            tva: n,
            css: r,
            ...i
        });
    }, Bse = Tn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "flex-wrap",
                "items-center",
                "gap-2",
                "text-sm",
                "font-semibold"
            ],
            item: [
                "border",
                "border-blue-200",
                "bg-blue-50",
                "rounded-md",
                "px-2",
                "py-1"
            ]
        },
        variant: {},
        defaults: {}
    }), Jf = ({ textTitle: t, textEmpty: e, items: n, render: r, limit: i, variant: s, tva: o = Bse, css: a })=>{
        const l = i === void 0 ? n : n.slice(0, i), c = o({
            ...s,
            css: a
        }).slots;
        return v.jsxs("div", {
            className: c.base(),
            children: [
                n.length ? null : e,
                l.map((u)=>v.jsx(r, {
                        entity: u
                    }, `items-${u.id}`)),
                i !== void 0 && n.length > i && v.jsx(pm, {
                    textTitle: t,
                    target: v.jsx(ew, {
                        iconEnabled: P5
                    }),
                    outside: !0,
                    children: v.jsx("div", {
                        className: "flex flex-col gap-2",
                        children: n.map((u)=>v.jsx(r, {
                                entity: u
                            }, `items-${u.id}`))
                    })
                })
            ]
        });
    }, dq = Tn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-2"
            ],
            input: [
                "py-2",
                "px-2",
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "cursor-pointer",
                "hover:bg-slate-50",
                "border",
                "border-gray-300",
                "rounded-md",
                "text-slate-400",
                "hover:text-slate-700",
                "focus:outline-hidden",
                "focus:ring-2",
                "focus:ring-blue-500",
                "focus:border-transparent"
            ],
            content: [],
            footer: [
                "flex",
                "items-center",
                "justify-between",
                "gap-2",
                "border-t-2",
                "border-slate-100",
                "mt-4",
                "pt-2"
            ]
        },
        variant: {
            loading: {
                true: []
            },
            selected: {
                true: []
            }
        },
        match: [
            {
                if: {
                    loading: !0
                },
                then: {
                    input: [
                        "text-slate-300"
                    ]
                }
            },
            {
                if: {
                    selected: !0
                },
                then: {
                    input: [
                        "bg-slate-50",
                        "text-slate-700",
                        "hover:bg-slate-100",
                        "hover:text-slate-800"
                    ]
                }
            }
        ],
        defaults: {
            loading: !1,
            selected: !1
        }
    }), Use = Tn({
        use: dq,
        slot: {},
        variant: {},
        defaults: {}
    }), fq = ({ icon: t, textTitle: e, textSelect: n, modalProps: r, table: i, render: s, allowEmpty: o = !1, queryKey: a, queryHash: l, query: c, value: u, onChange: f, onSelect: p, variant: g, tva: x = Use, css: S })=>{
        const _ = x({
            ...g,
            css: S
        }).slots, [b, M] = X.useState(0), [E, T] = X.useState(15), [k, N] = X.useState(u || []), [D, L] = X.useState(""), R = V1({
            queryKey: [
                a,
                "PopupMultiSelect",
                "data",
                {
                    fulltext: D,
                    page: b,
                    size: E,
                    ...l
                }
            ],
            async queryFn () {
                return c({
                    filter: {
                        fulltext: D
                    },
                    cursor: {
                        page: b,
                        size: E
                    }
                });
            }
        }), A = (u?.length || 0) > 0, P = V1({
            queryKey: [
                a,
                "PopupMultiSelect",
                "selected",
                {
                    value: u,
                    ...l
                }
            ],
            async queryFn () {
                return c({
                    filter: {
                        idIn: u || void 0
                    }
                });
            },
            enabled: A
        });
        return X.useEffect(()=>{
            N(u || []);
        }, [
            u
        ]), v.jsx(pm, {
            icon: t,
            target: v.jsxs("label", {
                className: _.input({
                    loading: P.isLoading,
                    selected: !!P.data?.data.length
                }),
                children: [
                    v.jsx(vn, {
                        icon: P.isLoading ? IO : A && P.data?.data?.[0] ? yT : gT
                    }),
                    A && P.data && P.data.data.length ? v.jsx(s, {
                        entities: P.data.data
                    }) : n || v.jsx(ne, {
                        label: "Select item (label)"
                    })
                ]
            }),
            textTitle: e,
            variant: {
                loading: R.isLoading
            },
            disabled: R.isLoading,
            css: {
                modal: [
                    "w-2/3"
                ]
            },
            ...r,
            children: ({ close: B })=>v.jsxs("div", {
                    className: _.base(),
                    children: [
                        v.jsx("div", {
                            className: _.content(),
                            children: v.jsx(i, {
                                cursor: {
                                    cursor: {
                                        page: b,
                                        size: E
                                    },
                                    count: R.data?.count ? R.data.count : {
                                        filter: -1,
                                        total: -1,
                                        where: -1
                                    },
                                    textTotal: v.jsx(ne, {
                                        label: "Total count of items (label)"
                                    }),
                                    onPage (U) {
                                        M(U);
                                    },
                                    onSize (U) {
                                        T(U), M(0);
                                    }
                                },
                                fulltext: {
                                    value: D,
                                    set (U) {
                                        L(U), M(0);
                                    }
                                },
                                table: {
                                    data: R.data?.data ?? [],
                                    selection: {
                                        type: "multi",
                                        value: k,
                                        set (U) {
                                            N(U);
                                        }
                                    }
                                }
                            })
                        }),
                        v.jsxs("div", {
                            className: _.footer(),
                            children: [
                                v.jsx(Dn, {
                                    iconEnabled: La,
                                    iconDisabled: La,
                                    onClick: ()=>{
                                        B(), N(u || []);
                                    },
                                    variant: {
                                        variant: "subtle"
                                    },
                                    children: v.jsx(ne, {
                                        label: "Close (label)"
                                    })
                                }),
                                v.jsx(Dn, {
                                    iconEnabled: RE,
                                    iconDisabled: RE,
                                    disabled: !k.length && !o,
                                    onClick: ()=>{
                                        f(k), p?.(R.data?.data?.filter((U)=>k.includes(U.id)) || []), B();
                                    },
                                    children: v.jsx(ne, {
                                        label: "Confirm selection (label)"
                                    })
                                })
                            ]
                        })
                    ]
                })
        });
    }, hq = ({ icon: t, textTitle: e, textSelect: n, modalProps: r, table: i, render: s, allowEmpty: o = !1, queryKey: a, queryHash: l, query: c, value: u, onChange: f, onSelect: p, variant: g, tva: x = dq, css: S })=>{
        const _ = x({
            ...g,
            css: S
        }).slots, [b, M] = X.useState(0), [E, T] = X.useState(15), [k, N] = X.useState(u ? [
            u
        ] : []), [D, L] = X.useState(""), R = V1({
            queryKey: [
                a,
                "PopupSelect",
                "data",
                {
                    fulltext: D,
                    page: b,
                    size: E,
                    ...l
                }
            ],
            async queryFn () {
                return c({
                    filter: {
                        fulltext: D
                    },
                    cursor: {
                        page: b,
                        size: E
                    }
                });
            }
        }), A = !!u, P = V1({
            queryKey: [
                a,
                "PopupSelect",
                "selected",
                {
                    value: u,
                    ...l
                }
            ],
            async queryFn () {
                return c({
                    filter: {
                        id: u ?? void 0
                    }
                });
            },
            enabled: A
        });
        return X.useEffect(()=>{
            N(u ? [
                u
            ] : []);
        }, [
            u
        ]), v.jsx(pm, {
            icon: t,
            target: v.jsxs("label", {
                className: _.input({
                    loading: P.isLoading,
                    selected: !!P.data?.data.length
                }),
                children: [
                    v.jsx(vn, {
                        icon: P.isLoading ? IO : A && P.data?.data?.[0] ? yT : gT
                    }),
                    A && P.data?.data?.[0] ? v.jsx(s, {
                        entity: P.data?.data?.[0]
                    }) : n || v.jsx(ne, {
                        label: "Select item (label)"
                    })
                ]
            }),
            textTitle: e,
            variant: {
                loading: R.isLoading
            },
            disabled: R.isLoading,
            css: {
                modal: [
                    "w-2/3"
                ]
            },
            ...r,
            children: ({ close: B })=>v.jsxs("div", {
                    className: _.base(),
                    children: [
                        v.jsx("div", {
                            className: _.content(),
                            children: v.jsx(i, {
                                cursor: {
                                    cursor: {
                                        page: b,
                                        size: E
                                    },
                                    count: R.data?.count ? R.data.count : {
                                        filter: -1,
                                        total: -1,
                                        where: -1
                                    },
                                    textTotal: v.jsx(ne, {
                                        label: "Total count of items (label)"
                                    }),
                                    onPage (U) {
                                        M(U);
                                    },
                                    onSize (U) {
                                        T(U), M(0);
                                    }
                                },
                                fulltext: {
                                    value: D,
                                    set (U) {
                                        L(U), M(0);
                                    }
                                },
                                table: {
                                    data: R.data?.data ?? [],
                                    selection: {
                                        type: "single",
                                        value: k,
                                        set (U) {
                                            N(U);
                                        }
                                    }
                                }
                            })
                        }),
                        v.jsxs("div", {
                            className: _.footer(),
                            children: [
                                v.jsx(Dn, {
                                    iconEnabled: La,
                                    iconDisabled: La,
                                    onClick: ()=>{
                                        B(), N(u ? [
                                            u
                                        ] : []);
                                    },
                                    variant: {
                                        variant: "subtle"
                                    },
                                    children: v.jsx(ne, {
                                        label: "Close (label)"
                                    })
                                }),
                                v.jsx(Dn, {
                                    iconEnabled: RE,
                                    iconDisabled: RE,
                                    disabled: !k.length && !o,
                                    onClick: ()=>{
                                        f(k?.[0] || null), p?.(R.data?.data?.find((U)=>U.id === k?.[0]) ?? null), B();
                                    },
                                    children: v.jsx(ne, {
                                        label: "Confirm selection (label)"
                                    })
                                })
                            ]
                        })
                    ]
                })
        });
    }, zse = Tn({
        slot: {
            base: [
                "bg-blue-50",
                "p-2",
                "rounded-md",
                "border",
                "border-blue-200"
            ],
            container: [
                "grid",
                "grid-cols-2",
                "grid-rows-2",
                "gap-1"
            ],
            title: [
                "col-span-1",
                "row-span-1",
                "border-b",
                "border-b-slate-300",
                "pb-2"
            ],
            links: [
                "col-span-1",
                "row-span-1",
                "border-b",
                "border-b-slate-300",
                "pb-2",
                "flex",
                "flex-row",
                "items-center",
                "gap-4",
                "justify-end"
            ],
            actions: [
                "col-span-1",
                "row-span-1",
                "flex",
                "flex-row",
                "items-center",
                "gap-4"
            ],
            extra: [
                "col-span-1",
                "row-span-1",
                "flex",
                "flex-row",
                "gap-4",
                "justify-end"
            ]
        },
        variant: {},
        defaults: {}
    }), pv = ({ entity: t, title: e = ()=>null, links: n = ()=>null, actions: r = ()=>null, extra: i = ()=>null, variant: s, tva: o = zse, css: a })=>{
        const l = o({
            ...s,
            css: a
        }).slots;
        return v.jsx(TO.Provider, {
            value: {
                inline: !0
            },
            children: v.jsx("div", {
                className: l.base(),
                children: v.jsxs("div", {
                    className: l.container(),
                    children: [
                        v.jsx("div", {
                            className: l.title(),
                            children: v.jsx(e, {
                                entity: t
                            })
                        }),
                        v.jsx("div", {
                            className: l.links(),
                            children: v.jsx(n, {
                                entity: t
                            })
                        }),
                        v.jsx("div", {
                            className: l.actions(),
                            children: v.jsx(r, {
                                entity: t
                            })
                        }),
                        v.jsx("div", {
                            className: l.extra(),
                            children: v.jsx(i, {
                                entity: t
                            })
                        })
                    ]
                })
            })
        });
    }, Vse = (t)=>(e)=>{
            t({
                search: ({ cursor: n, ...r })=>({
                        ...r,
                        cursor: {
                            ...n,
                            page: e
                        }
                    })
            });
        }, Wse = (t)=>(e)=>{
            t({
                search: ({ cursor: n, ...r })=>({
                        ...r,
                        cursor: {
                            ...n,
                            size: e,
                            page: 0
                        }
                    })
            });
        }, fi = (t)=>({
            onPage: Vse(t),
            onSize: Wse(t)
        }), hi = (t)=>(e)=>t({
                search: ({ cursor: n, ...r })=>({
                        ...r,
                        filter: e,
                        cursor: {
                            ...n,
                            page: 0
                        }
                    })
            }), pi = (t, e)=>(n)=>{
            (n ?? "") !== (t ?? "") && e({
                search: ({ cursor: r, filter: i, ...s })=>({
                        ...s,
                        filter: {
                            ...i,
                            fulltext: n
                        },
                        cursor: {
                            ...r,
                            page: n ? 0 : r.page
                        }
                    }),
                replace: !1
            });
        }, aa = (t)=>(e)=>{
            t({
                search (n) {
                    return {
                        ...n,
                        selection: e
                    };
                }
            });
        }, Zs = (t)=>({
            loading: v.jsx(ne, {
                label: `${t} - Loading (label)`
            }),
            success: v.jsx(ne, {
                label: `${t} - Success (label)`
            }),
            error: v.jsx(ne, {
                label: `${t} - Error (label)`
            })
        }), qse = Tn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-4"
            ],
            content: [
                "text-bold",
                "text-red-500",
                "font-bold"
            ],
            footer: [
                "flex",
                "flex-row",
                "items-center",
                "justify-between",
                "gap-4"
            ]
        },
        variant: {},
        defaults: {}
    }), la = ({ textContent: t, textToast: e, callback: n, onCancel: r, invalidator: i, variant: s, tva: o = qse, css: a })=>{
        const l = o({
            ...s,
            css: a
        }).slots, u = X.useContext(D5)((p)=>p.close), f = an({
            async mutationFn () {
                return rK.promise(n(), Zs(e));
            },
            async onSuccess () {
                await i?.(), u();
            }
        });
        return v.jsxs("div", {
            className: l.base(),
            children: [
                v.jsx("div", {
                    className: l.content(),
                    children: t
                }),
                v.jsxs("div", {
                    className: l.footer(),
                    children: [
                        v.jsx(Dn, {
                            variant: {
                                variant: "subtle",
                                size: "sm"
                            },
                            iconEnabled: La,
                            onClick: ()=>{
                                u(), r?.();
                            },
                            children: v.jsx(ne, {
                                label: "Cancel (button)"
                            })
                        }),
                        v.jsx(Dn, {
                            variant: {
                                variant: "danger",
                                size: "md"
                            },
                            iconEnabled: Ri,
                            onClick: ()=>{
                                f.mutate();
                            },
                            children: v.jsx(ne, {
                                label: "Delete (button)"
                            })
                        })
                    ]
                })
            ]
        });
    }, Hse = async ({ select: t, query: e = ()=>t, filter: n, where: r })=>({
            total: (await t.clearSelect().select((i)=>i.fn.countAll().as("count")).executeTakeFirstOrThrow()).count,
            filter: (await e({
                select: e({
                    select: t,
                    where: r
                }),
                where: n
            }).clearSelect().select((i)=>i.fn.countAll().as("count")).executeTakeFirstOrThrow()).count,
            where: (await e({
                select: t,
                where: r
            }).clearSelect().select((i)=>i.fn.countAll().as("count")).executeTakeFirstOrThrow()).count
        }), lc = async ({ select: t, query: e = ()=>t, output: n, filter: r, where: i })=>n.parse(await e({
            select: e({
                select: t,
                where: i
            }),
            where: r
        }).executeTakeFirstOrThrow()), As = async ({ select: t, query: e = ()=>t, output: n, filter: r, where: i, cursor: s })=>{
        const o = (a)=>{
            let l = a;
            return s && (l = a.limit(s.size).offset(s.page * s.size)), l;
        };
        return G.array(n).parse(await o(e({
            select: e({
                select: t,
                where: i
            }),
            where: r
        })).execute());
    }, Dr = async ({ select: t, query: e = ()=>t, output: n, filter: r, where: i, cursor: s })=>({
            data: await As({
                select: t,
                output: n,
                where: i,
                filter: r,
                query: e,
                cursor: s
            }),
            count: await Hse({
                select: t,
                where: i,
                filter: r,
                query: e
            })
        }), Vr = (t)=>{
        const e = "input" in t ? t.input : "input", n = "output" in t ? t.output : "output", r = "schema" in t ? t.schema._input : t._input, i = "schema" in t ? t.schema._output : t._output;
        return {
            types: {
                input: e === "output" ? i : r,
                output: n === "input" ? r : i
            },
            parse: (s)=>"schema" in t ? t.schema.parse(s) : t.parse(s)
        };
    }, B_ = (t, e)=>G.custom().pipe(t.catch(e)), mi = ({ filter: t }, { size: e = 30 } = {
        size: 30
    })=>G.object({
            filter: B_(t.default({
                fulltext: ""
            }), {
                fulltext: ""
            }),
            cursor: B_(ste, {
                page: 0,
                size: e
            }).default({
                page: 0,
                size: e
            }),
            sort: B_(G.array(G.any()).default([]), []),
            selection: B_(G.array(G.string()).default([]), [])
        }), $se = Tn({
        slot: {
            base: [
                "w-full",
                "flex",
                "flex-col",
                "items-center",
                "justify-center"
            ],
            title: [
                "text-xl",
                "text-bold",
                "w-full",
                "text-center"
            ],
            message: [
                "text-base",
                "text-slate-500",
                "w-full",
                "text-center"
            ],
            body: [
                "pt-2",
                "w-full"
            ]
        },
        variant: {},
        defaults: {}
    }), pq = ({ textTitle: t, textMessage: e, icon: n, iconProps: r, variant: i, tva: s = $se, css: o, children: a })=>{
        const l = s({
            ...i,
            css: o
        }).slots;
        return v.jsxs("div", {
            className: l.base(),
            children: [
                n ? v.jsx(vn, {
                    icon: n,
                    variant: {
                        size: "6xl"
                    },
                    css: {
                        base: [
                            "text-slate-500",
                            "opacity-50"
                        ]
                    },
                    ...r
                }) : null,
                v.jsx("div", {
                    className: l.title(),
                    children: t
                }),
                v.jsx("div", {
                    className: l.message(),
                    children: e
                }),
                v.jsx("div", {
                    className: l.body(),
                    children: a
                })
            ]
        });
    }, NO = Tn({
        slot: {
            base: [
                "min-w-full",
                "flex",
                "flex-col",
                "gap-2",
                "text-sm"
            ],
            table: [
                "min-w-full",
                "w-max",
                "table-fixed"
            ],
            thead: [
                "border",
                "border-slate-200",
                "bg-slate-100"
            ],
            th: [
                "text-left",
                "px-2",
                "py-1",
                "border-t",
                "border-b",
                "border-slate-300"
            ],
            tbody: [],
            tr: [
                "border-b",
                "border-b-slate-200",
                "odd:bg-slate-50",
                "hover:bg-purple-100",
                "hover:border-purple-300"
            ],
            td: [
                "px-2",
                "py-1"
            ],
            tfoot: [],
            select: [
                "cursor-pointer",
                "text-slate-400",
                "hover:text-slate-600"
            ]
        },
        variant: {
            selected: {
                true: []
            }
        },
        match: [
            {
                if: {
                    selected: !0
                },
                then: {
                    tr: [
                        "bg-blue-100",
                        "odd:bg-blue-50",
                        "border-blue-300"
                    ],
                    select: [
                        "text-slate-600"
                    ]
                }
            }
        ],
        defaults: {
            selected: !1
        }
    }), Gse = ({ table: t, cell: { column: e, data: n, value: r }, variant: i, tva: s = NO, css: o })=>{
        const a = e.def.render, l = s({
            ...i,
            css: o
        }).slots;
        return v.jsx("td", {
            className: l.td(),
            children: v.jsxs("div", {
                className: "group flex flex-row items-center gap-2 justify-between",
                children: [
                    v.jsx(a, {
                        table: t,
                        data: n,
                        value: r,
                        context: t.context
                    }),
                    e.filter && !e.filter.is() ? v.jsx(vn, {
                        icon: gie,
                        css: {
                            base: [
                                "group-hover:visible",
                                "invisible",
                                "opacity-50 hover:opacity-100",
                                "cursor-pointer"
                            ]
                        },
                        variant: {
                            size: "xl"
                        },
                        onClick: ()=>{
                            e.filter && (e.def.filter?.onFilter({
                                data: n,
                                filter: e.filter
                            }), window.scrollTo({
                                top: 0,
                                behavior: "smooth"
                            }));
                        }
                    }) : null
                ]
            })
        });
    }, Xse = ({ table: t, row: e, action: n, variant: r, tva: i = NO, css: s })=>{
        const o = i({
            ...r,
            css: s
        }).slots, a = n?.table, l = n?.row;
        return v.jsxs("tr", {
            className: o.tr({
                css: t.rowCss?.({
                    data: e.data
                }),
                selected: t.selection.isSelected(e)
            }),
            children: [
                a || l || t.selection.enabled ? v.jsx("td", {
                    className: "w-0",
                    children: v.jsxs("div", {
                        className: "flex flex-row items-center gap-2",
                        children: [
                            t.selection.enabled ? v.jsx(vn, {
                                icon: t.selection.isSelected(e) ? yT : gT,
                                css: {
                                    base: o.select({
                                        selected: t.selection.isSelected(e)
                                    })
                                },
                                variant: {
                                    size: "2xl"
                                },
                                onClick: t.selection.withRowHandler(e)
                            }) : null,
                            l ? v.jsx(l, {
                                table: t,
                                data: e.data
                            }) : null
                        ]
                    })
                }) : null,
                e.cells.map((c)=>v.jsx(Gse, {
                        table: t,
                        cell: c,
                        variant: r,
                        tva: i,
                        css: s
                    }, `${e.id}-${c.column.id}`)),
                v.jsx("td", {})
            ]
        });
    }, gi = ({ table: t, fulltext: e, toolbar: n = ()=>null, cursor: r, empty: i = ()=>v.jsx(pq, {
            icon: mie,
            textTitle: v.jsx(ne, {
                label: "Nothing here"
            }),
            textMessage: v.jsx(ne, {
                label: "There is nothing to see right now."
            })
        }), action: s, variant: o, tva: a = NO, css: l })=>{
        const c = a({
            ...o,
            css: l
        }).slots, u = s?.table, f = s?.row;
        return v.jsxs("div", {
            className: c.base(),
            children: [
                v.jsxs("div", {
                    className: "flex items-center justify-between",
                    children: [
                        v.jsxs("div", {
                            className: "flex flex-row items-center gap-2 w-1/3",
                            children: [
                                v.jsx("div", {
                                    className: "flex items-center gap-6 flex-grow",
                                    children: e ? v.jsx(q5, {
                                        value: e.value,
                                        onFulltext: e.set
                                    }) : null
                                }),
                                v.jsx("div", {
                                    className: "flex flex-row items-center gap-2",
                                    children: v.jsx(n, {
                                        table: t
                                    })
                                })
                            ]
                        }),
                        v.jsxs("div", {
                            className: "flex flex-row items-center justify-center gap-2",
                            children: [
                                v.jsx(I3, {
                                    ...r
                                }),
                                t.filter.is() && v.jsx(ew, {
                                    iconEnabled: D3,
                                    css: {
                                        base: [
                                            "text-amber-500"
                                        ]
                                    },
                                    onClick: ()=>t.filter.reset()
                                })
                            ]
                        })
                    ]
                }),
                v.jsx("div", {
                    className: "relative overflow-x-auto",
                    children: v.jsxs("table", {
                        className: c.table(),
                        children: [
                            v.jsx("thead", {
                                className: c.thead(),
                                children: v.jsxs("tr", {
                                    children: [
                                        u || f || t.selection.enabled ? v.jsx("th", {
                                            className: "w-0",
                                            children: v.jsxs("div", {
                                                className: "flex flex-row items-center gap-2",
                                                children: [
                                                    t.selection.enabled ? v.jsx(vn, {
                                                        icon: t.selection.isAll() ? yT : t.selection.isAny() ? yie : gT,
                                                        variant: {
                                                            disabled: t.selection.isSingle,
                                                            size: "2xl"
                                                        },
                                                        css: {
                                                            base: c.select({
                                                                selected: t.selection.isAny()
                                                            })
                                                        },
                                                        onClick: t.selection.withAllHandler()
                                                    }) : null,
                                                    u ? v.jsx(u, {
                                                        table: t
                                                    }) : null
                                                ]
                                            })
                                        }) : null,
                                        t.visible.map((p)=>{
                                            const g = p.def.header || (()=>null);
                                            return v.jsx("th", {
                                                className: c.th(),
                                                style: p.def.size ? {
                                                    width: `${p.def.size}rem`
                                                } : void 0,
                                                children: v.jsxs("div", {
                                                    className: "flex flex-row items-center justify-between",
                                                    children: [
                                                        v.jsx(g, {
                                                            table: t
                                                        }),
                                                        v.jsx("div", {
                                                            className: "flex flex-row items-center gap-2",
                                                            children: p.filter?.is() && v.jsx(vn, {
                                                                icon: D3,
                                                                variant: {
                                                                    size: "md"
                                                                },
                                                                css: {
                                                                    base: [
                                                                        "opacity-50",
                                                                        "hover:opacity-100",
                                                                        "cursor-pointer"
                                                                    ]
                                                                },
                                                                onClick: ()=>{
                                                                    p.filter?.reset();
                                                                }
                                                            })
                                                        })
                                                    ]
                                                })
                                            }, p.id);
                                        }),
                                        v.jsx("th", {})
                                    ]
                                })
                            }),
                            t.isEmpty ? null : v.jsx("tbody", {
                                className: c.tbody(),
                                children: t.rows?.map((p)=>v.jsx(Xse, {
                                        row: p,
                                        table: t,
                                        action: s,
                                        variant: o,
                                        tva: a,
                                        css: l
                                    }, p.id))
                            })
                        ]
                    })
                }),
                t.isEmpty ? v.jsx(i, {}) : null,
                v.jsxs("div", {
                    className: "flex flex-row items-center justify-end gap-2",
                    children: [
                        v.jsx("div", {}),
                        v.jsx(I3, {
                            ...r
                        })
                    ]
                })
            ]
        });
    }, yi = ({ columns: t, order: e = t.map((c)=>c.name), hidden: n = [], visible: r = t.map((c)=>c.name), data: i, filter: s, selection: o, context: a, rowCss: l })=>{
        const c = {
            ...s?.value || {}
        }, u = KF(c || {}), f = new Set(o?.value), p = t.map((x)=>({
                id: j3(),
                def: x,
                filter: x.filter ? {
                    is () {
                        return x.filter ? u.get(x.filter.path) !== void 0 : !1;
                    },
                    reset () {
                        x.filter && u.set(x.filter.path, void 0), s?.set({
                            ...c
                        });
                    },
                    shallow (S, _) {
                        x.filter && u.set(S, _), s?.set({
                            ...c
                        });
                    },
                    set (S) {
                        s?.set({
                            ...S
                        });
                    }
                } : void 0
            })), g = p.filter((x)=>r.includes(x.def.name) && !n.includes(x.def.name)).sort((x, S)=>{
            const _ = e.indexOf(x.def.name), b = e.indexOf(S.def.name);
            return (_ === -1 ? 1 / 0 : _) - (b === -1 ? 1 / 0 : b);
        });
        return {
            data: i,
            columns: p,
            visible: g,
            rowCss: l,
            rows: i?.map((x)=>({
                    id: j3(),
                    data: x,
                    cells: g.map((S)=>({
                            column: S,
                            data: x,
                            value: KF(x).get(S.def.name)
                        }))
                })),
            isEmpty: i.length === 0,
            filter: {
                is () {
                    return p.some((x)=>x.filter?.is());
                },
                reset () {
                    s?.set({});
                },
                set (x) {
                    s?.set({
                        ...x
                    });
                },
                shallow (x, S) {
                    u.set(x, S);
                }
            },
            selection: {
                enabled: !!o && i.length > 0,
                selection: Array.from(f),
                isSingle: o?.type === "single",
                isMulti: o?.type === "multi",
                isSelected ({ data: x }) {
                    return f.has(x.id) || !1;
                },
                isAll () {
                    return i.every((x)=>f.has(x.id));
                },
                isAny () {
                    return i.some((x)=>f.has(x.id));
                },
                withRowHandler ({ data: x }) {
                    return ()=>{
                        if (o?.type === "single") {
                            const S = f.has(x.id);
                            f.clear(), S ? f.delete(x.id) : f.add(x.id);
                        } else f.has(x.id) ? f.delete(x.id) : f.add(x.id);
                        o?.set(Array.from(f));
                    };
                },
                withAllHandler () {
                    return ()=>{
                        i.every((x)=>f.has(x.id)) ? f.clear() : i.forEach(({ id: x })=>f.add(x)), o?.set(Array.from(f));
                    };
                }
            },
            context: a
        };
    }, vi = ()=>(t)=>t, mq = ({ tags: t = [], render: e = ({ tag: i })=>i.label, onClick: n, textEmpty: r })=>{
        const i = t.filter(Boolean).sort((s, o)=>s.sort - o.sort);
        return v.jsx("div", {
            className: "flex flex-wrap flex-row gap-2 items-center",
            children: i.length ? i.map((s)=>v.jsx(Gs, {
                    onClick: ()=>n?.(s),
                    children: v.jsx(e, {
                        tag: s
                    })
                }, s.id)) : r || v.jsx(ne, {
                label: "No tags (label)"
            })
        });
    }, Kse = Tn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center"
            ],
            title: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "text-lg",
                "text-slate-500",
                "font-bold"
            ],
            subtitle: [
                "flex",
                "flex-row",
                "gap-4",
                "items-center",
                "text-lg"
            ]
        },
        variant: {
            withSubtitle: {
                true: []
            }
        },
        match: [
            {
                if: {
                    withSubtitle: !0
                },
                then: {
                    title: [
                        "border-r",
                        "border-r-slate-300",
                        "pr-2"
                    ]
                }
            }
        ],
        defaults: {
            withSubtitle: !1
        }
    }), mv = ({ icon: t, title: e, subtitle: n, variant: r, tva: i = Kse, css: s })=>{
        const o = i({
            withSubtitle: !!n,
            ...r,
            css: s
        }).slots;
        return v.jsxs("div", {
            className: o.base(),
            children: [
                v.jsxs("div", {
                    className: o.title(),
                    children: [
                        t ? v.jsx(vn, {
                            icon: t
                        }) : null,
                        e
                    ]
                }),
                n ? v.jsx("div", {
                    className: o.subtitle(),
                    children: n
                }) : null
            ]
        });
    };
    var U_ = {}, tj;
    function Yse() {
        if (tj) return U_;
        tj = 1;
        var t = tV();
        return U_.createRoot = t.createRoot, U_.hydrateRoot = t.hydrateRoot, U_;
    }
    var Zse = Yse();
    const Jse = Ao(Zse), PO = D7()({}), Qse = jt("/$locale")({
        component: fl,
        loader: async ({ params: { locale: t } })=>{
            try {
                sa.push((await eoe(`../translation/${t}.yaml`)).default);
            } catch (e) {
                console.error(e);
            }
        }
    });
    function eoe(t) {
        switch(t){
            case "../translation/cs":
            case "../translation/cs.yaml":
                return TE(()=>import("./cs-BUpUyNKP.js"), []);
            case "../translation/en":
            case "../translation/en.yaml":
                return TE(()=>import("./en-CvMFGEQe.js"), []);
            default:
                return new Promise(function(e, n) {
                    (typeof queueMicrotask == "function" ? queueMicrotask : setTimeout)(n.bind(null, new Error("Unknown variable dynamic import: " + t)));
                });
        }
    }
    const gq = "cs", toe = [
        gq,
        "en"
    ], noe = jt("/")({
        loader: async ()=>{
            throw Db({
                to: "/$locale",
                params: {
                    locale: sJ({
                        available: toe,
                        fallback: gq
                    })
                }
            });
        }
    }), roe = jt("/$locale/")({
        component: ()=>{
            const { locale: t } = tn({
                from: "/$locale"
            });
            return v.jsx("div", {
                className: "flex flex-col items-center justify-center h-screen w-screen",
                children: v.jsxs("div", {
                    className: "rounded-sm bg-slate-50 p-4 shadow-md border border-slate-300",
                    children: [
                        v.jsx("h1", {
                            className: "text-3xl text-center",
                            children: "Apps"
                        }),
                        v.jsx("ul", {
                            children: v.jsx("li", {
                                children: v.jsx(Rt, {
                                    icon: "icon-[bx--game]",
                                    to: "/$locale/apps/derivean/public/login",
                                    params: {
                                        locale: t
                                    },
                                    children: "DeRivean"
                                })
                            })
                        })
                    ]
                })
            });
        }
    }), { kysely: At, bootstrap: ioe } = cie({
        database: "derivean",
        async bootstrap ({ kysely: t }) {
            const e = "varchar(36)";
            try {
                await t.selectFrom("User").select((n)=>n.fn.countAll().as("count")).executeTakeFirstOrThrow();
            } catch  {
                await t.schema.createTable("User").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("name", "varchar(64)", (r)=>r.notNull()).addColumn("login", "varchar(128)", (r)=>r.notNull()).addColumn("password", "varchar(256)", (r)=>r.notNull()).addUniqueConstraint("[User] login", [
                    "login"
                ]).execute(), await t.schema.createTable("Tag").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("code", "varchar(64)", (r)=>r.notNull()).addColumn("label", "varchar(128)", (r)=>r.notNull()).addColumn("group", "varchar(64)").addColumn("sort", "integer", (r)=>r.notNull().defaultTo(0)).addUniqueConstraint("Tag_code_group", [
                    "code",
                    "group"
                ]).execute(), await t.schema.createTable("Resource").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("name", "varchar(64)", (r)=>r.notNull()).addColumn("weight", "integer", (r)=>r.notNull().defaultTo(1)).addColumn("image", "text").addUniqueConstraint("[Resource] name", [
                    "name"
                ]).execute(), await t.schema.createTable("Resource_Tag").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Resource_Tag] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("tagId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Resource_Tag] tagId", [
                    "tagId"
                ], "Tag", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Resource_Tag] resourceId-tagId", [
                    "resourceId",
                    "tagId"
                ]).execute();
                for await (const r of [
                    "resourceId",
                    "tagId"
                ])await t.schema.createIndex(`[Resource_Tag] ${r}`).on("Resource_Tag").columns([
                    r
                ]).execute();
                await t.schema.createTable("Inventory").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Inventory] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("limit", "float4", (r)=>r.notNull()).addColumn("type", "varchar(16)", (r)=>r.notNull().defaultTo("storage")).execute(), await t.schema.createIndex("[Inventory] resourceId").on("Inventory").columns([
                    "resourceId"
                ]).execute(), await t.schema.createTable("Region").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("name", "varchar(128)", (r)=>r.notNull()).addColumn("probability", "integer", (r)=>r.notNull()).addColumn("limit", "integer", (r)=>r.notNull()).addColumn("image", "text").execute(), await t.schema.createTable("Region_Inventory").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("regionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Region_Inventory] regionId", [
                    "regionId"
                ], "Region", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Region_Inventory] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("minAmount", "float4", (r)=>r.notNull()).addColumn("maxAmount", "float4", (r)=>r.notNull()).addColumn("minLimit", "float4", (r)=>r.notNull()).addColumn("maxLimit", "float4", (r)=>r.notNull()).addUniqueConstraint("[Region_Inventory] regionId-resourceId", [
                    "regionId",
                    "resourceId"
                ]).execute();
                for await (const r of [
                    "regionId",
                    "resourceId"
                ])await t.schema.createIndex(`[Region_Inventory] ${r}`).on("Region_Inventory").columns([
                    r
                ]).execute();
                await t.schema.createTable("Map").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Map] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("name", "varchar(128)", (r)=>r.notNull()).addUniqueConstraint("[Map] userId-name", [
                    "userId",
                    "name"
                ]).execute(), await t.schema.createIndex("[Map] userId").on("Map").columns([
                    "userId"
                ]).execute(), await t.schema.createTable("Cycle").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Cycle] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Cycle] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("stamp", "datetime", (r)=>r.defaultTo(ci`CURRENT_TIMESTAMP`).notNull()).execute();
                for await (const r of [
                    "userId",
                    "mapId"
                ])await t.schema.createIndex(`[Cycle] ${r}`).on("Cycle").columns([
                    r
                ]).execute();
                await t.schema.createTable("Land").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Land] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("regionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Land] regionId", [
                    "regionId"
                ], "Region", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("position", "integer", (r)=>r.notNull()).execute();
                for await (const r of [
                    "mapId",
                    "regionId"
                ])await t.schema.createIndex(`[Land] ${r}`).on("Land").columns([
                    r
                ]).execute();
                await t.schema.createTable("Land_Inventory").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("landId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Land_Inventory] landId", [
                    "landId"
                ], "Land", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("inventoryId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Land_Inventory] inventoryId", [
                    "inventoryId"
                ], "Inventory", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Land_Inventory] landId-inventoryId", [
                    "landId",
                    "inventoryId"
                ]).execute();
                for await (const r of [
                    "landId",
                    "inventoryId"
                ])await t.schema.createIndex(`[Land_Inventory] ${r}`).on("Land_Inventory").columns([
                    r
                ]).execute();
                await t.schema.createTable("Blueprint").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("name", "varchar(64)", (r)=>r.notNull()).addColumn("cycles", "integer", (r)=>r.notNull()).addColumn("sort", "integer", (r)=>r.notNull()).addColumn("limit", "integer", (r)=>r.notNull().defaultTo(1)).addColumn("image", "text").addUniqueConstraint("[Blueprint] name", [
                    "name"
                ]).execute(), await t.schema.createTable("Blueprint_Region").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Region] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("regionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Region] regionId", [
                    "regionId"
                ], "Region", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Region] blueprintId-regionId", [
                    "blueprintId",
                    "regionId"
                ]).execute(), await t.schema.createTable("Blueprint_Inventory").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Inventory] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("inventoryId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Inventory] inventoryId", [
                    "inventoryId"
                ], "Inventory", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Inventory] blueprintId-inventoryId", [
                    "blueprintId",
                    "inventoryId"
                ]).execute(), await t.schema.createTable("Blueprint_Production").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("cycles", "integer", (r)=>r.notNull()).execute(), await t.schema.createTable("Blueprint_Requirement").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Requirement] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Requirement] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("passive", "boolean", (r)=>r.notNull()).addUniqueConstraint("[Blueprint_Requirement] blueprintId-requirementId", [
                    "blueprintId",
                    "resourceId"
                ]).execute(), await t.schema.createTable("Blueprint_Dependency").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Dependency] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("dependencyId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Dependency] dependencyId", [
                    "dependencyId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Dependency] blueprintId-dependencyId", [
                    "blueprintId",
                    "dependencyId"
                ]).execute(), await t.schema.createTable("Blueprint_Conflict").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Conflict] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("conflictId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Conflict] conflictId", [
                    "conflictId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Conflict] blueprintId-conflictId", [
                    "blueprintId",
                    "conflictId"
                ]).execute(), await t.schema.createTable("Blueprint_Production_Requirement").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintProductionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Requirement] blueprintProductionId", [
                    "blueprintProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Requirement] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("passive", "boolean", (r)=>r.notNull()).addUniqueConstraint("[Blueprint_Production_Requirement] blueprintProductionId-resourceId", [
                    "blueprintProductionId",
                    "resourceId"
                ]).execute(), await t.schema.createTable("Blueprint_Production_Dependency").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintProductionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Dependency] blueprintProductionId", [
                    "blueprintProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Dependency] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Production_Dependency] blueprintProductionId-blueprintId", [
                    "blueprintProductionId",
                    "blueprintId"
                ]).execute(), await t.schema.createTable("Blueprint_Production_Resource").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintProductionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Dependency] blueprintProductionId", [
                    "blueprintProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Dependency] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addUniqueConstraint("[Blueprint_Production_Dependency] blueprintProductionId-resourceId", [
                    "blueprintProductionId",
                    "resourceId"
                ]).execute(), await t.schema.createTable("Production").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Production] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("buildingId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Production] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("blueprintProductionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Production] blueprintProductionId", [
                    "blueprintProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("cycles", "integer", (r)=>r.notNull()).addColumn("cycle", "integer", (r)=>r.notNull()).execute(), await t.schema.createTable("Construction").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Construction] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("plan", "boolean", (r)=>r.notNull().defaultTo(!0)).addColumn("cycles", "integer", (r)=>r.notNull()).addColumn("cycle", "integer", (r)=>r.notNull()).execute(), await t.schema.createTable("Plot").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Plot] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Plot] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("landId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Plot] landId", [
                    "landId"
                ], "Land", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("position", "integer", (r)=>r.notNull()).execute(), await t.schema.createTable("Building").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("plotId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building] plotId", [
                    "plotId"
                ], "Plot", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("constructionId", e).addForeignKeyConstraint("[Building] constructionId", [
                    "constructionId"
                ], "Construction", [
                    "id"
                ], (r)=>r.onDelete("set null").onUpdate("set null")).addColumn("landId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building] landId", [
                    "landId"
                ], "Land", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("productionId", e).addForeignKeyConstraint("[Building] productionId", [
                    "productionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("recurringProductionId", e).addForeignKeyConstraint("[Building] recurringProductionId", [
                    "recurringProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("valid", "boolean", (r)=>r.notNull().defaultTo(!0)).execute();
                for await (const r of [
                    "userId",
                    "blueprintId",
                    "constructionId",
                    "landId",
                    "productionId",
                    "recurringProductionId"
                ])await t.schema.createIndex(`[Building] ${r}`).on("Building").columns([
                    r
                ]).execute();
                await t.schema.createTable("Building_Inventory").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("buildingId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building_Inventory] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("inventoryId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building_Inventory] inventoryId", [
                    "inventoryId"
                ], "Inventory", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Building_Inventory] buildingId-inventoryId", [
                    "buildingId",
                    "inventoryId"
                ]).execute(), await t.schema.createTable("Building_To_Building").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building_To_Building] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building_To_Building] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("buildingId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building_To_Building] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("linkId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building_To_Building] linkId", [
                    "linkId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Building_To_Building] buildingId-linkId", [
                    "buildingId",
                    "linkId"
                ]).execute();
                for await (const r of [
                    "userId",
                    "mapId",
                    "buildingId",
                    "linkId"
                ])await t.schema.createIndex(`[Building_To_Building] ${r}`).on("Building_To_Building").columns([
                    r
                ]).execute();
                await t.schema.createTable("Road").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("plotId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Road] plotId", [
                    "plotId"
                ], "Plot", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).execute(), await t.schema.createTable("Supply").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Supply] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Supply] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("buildingId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Supply] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Supply] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Supply] buildingId-resourceId", [
                    "buildingId",
                    "resourceId"
                ]).execute(), await t.schema.createTable("Demand").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("buildingId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Demand] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Demand] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("priority", "integer", (r)=>r.notNull().defaultTo(0)).addColumn("type", "varchar(16)", (r)=>r.notNull().defaultTo("storage")).addUniqueConstraint("[Demand] buildingId-resourceId", [
                    "buildingId",
                    "resourceId"
                ]).execute(), await t.schema.createTable("Transport").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("roadId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] roadId", [
                    "roadId"
                ], "Road", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("sourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] sourceId", [
                    "sourceId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("targetId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] targetId", [
                    "targetId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("type", "varchar(16)", (r)=>r.notNull().defaultTo("storage")).execute();
                for await (const r of [
                    "userId",
                    "mapId",
                    "resourceId",
                    "roadId",
                    "sourceId",
                    "targetId"
                ])await t.schema.createIndex(`[Transport] ${r}`).on("Transport").columns([
                    r
                ]).execute();
            }
        }
    }), soe = jt("/$locale/apps/derivean")({
        async loader ({ context: { queryClient: t, kysely: e } }) {
            return await ioe(), {
                image: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        "image"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (n)=>As({
                                select: n.selectFrom("Blueprint as b").select([
                                    "b.id",
                                    "b.image"
                                ]).where("b.image", "is not", null).union(n.selectFrom("Region as r").select([
                                    "r.id",
                                    "r.image"
                                ]).where("r.image", "is not", null)).union(n.selectFrom("Resource as r").select([
                                    "r.id",
                                    "r.image"
                                ]).where("r.image", "is not", null)),
                                output: G.object({
                                    id: G.string().min(1),
                                    image: G.string()
                                })
                            }));
                    }
                })
            };
        }
    }), yq = "icon-[proicons--game]", ooe = Tn({
        slot: {
            base: [
                "text-orange-500",
                "font-bold",
                "text-2xl",
                "shadow-md",
                "hover:shadow-lg",
                "hover:text-orange-600",
                "rounded-sm",
                "px-2",
                "py-1",
                "bg-slate-100"
            ]
        },
        variant: {},
        defaults: {}
    }), vq = ({ variant: t, tva: e = ooe, css: n })=>{
        const r = e({
            ...t,
            css: n
        }).slots;
        return v.jsx("div", {
            className: r.base(),
            children: "DeRivean"
        });
    }, Da = "icon-[fluent--building-shop-20-regular]", kE = "icon-[oui--vis-map-region]", Kr = "icon-[hugeicons--resources-add]", aoe = (t)=>{
        const { locale: e } = tn({
            from: "/$locale"
        });
        return v.jsxs(gm, {
            ...t,
            children: [
                v.jsx(Cr, {
                    icon: "icon-[ph--graph-light]",
                    to: "/$locale/apps/derivean/root/editor",
                    params: {
                        locale: e
                    },
                    children: v.jsx(ne, {
                        label: "Editor (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: Da,
                    to: "/$locale/apps/derivean/root/blueprint/list",
                    params: {
                        locale: e
                    },
                    match: [
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/view"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/dependencies"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/production"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/requirements"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/edit"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/production/$id/requirements"
                        }
                    ],
                    children: v.jsx(ne, {
                        label: "Blueprint list (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: kE,
                    to: "/$locale/apps/derivean/root/region/list",
                    params: {
                        locale: e
                    },
                    children: v.jsx(ne, {
                        label: "Region list (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: Kr,
                    to: "/$locale/apps/derivean/root/resource/list",
                    params: {
                        locale: e
                    },
                    children: v.jsx(ne, {
                        label: "Resource list (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: AO,
                    to: "/$locale/apps/derivean/root/user/list",
                    params: {
                        locale: e
                    },
                    match: [
                        {
                            to: "/$locale/apps/derivean/root/user/$id/view"
                        },
                        {
                            to: "/$locale/apps/derivean/root/user/$id/building/list"
                        }
                    ],
                    children: v.jsx(ne, {
                        label: "User list (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: sb,
                    to: "/$locale/apps/derivean/root/tag/list",
                    params: {
                        locale: e
                    },
                    children: v.jsx(ne, {
                        label: "Tag list (menu)"
                    })
                })
            ]
        });
    }, tw = G.object({
        id: G.string(),
        name: G.string(),
        login: G.string()
    }), loe = jt("/$locale/apps/derivean/root")({
        async beforeLoad ({ context: t, params: { locale: e } }) {
            return {
                ...t,
                async session () {
                    try {
                        return tw.parse(hv.get("session"));
                    } catch  {
                        throw Db({
                            to: "/$locale/apps/derivean/public/login",
                            params: {
                                locale: e
                            }
                        });
                    }
                }
            };
        },
        async loader ({ context: { session: t } }) {
            return {
                session: await t()
            };
        },
        component: ()=>{
            const { locale: t } = tn({
                from: "/$locale"
            }), { session: e } = Wi({
                from: "/$locale/apps/derivean/root"
            });
            return v.jsx(cq, {
                logo: v.jsx(Rt, {
                    to: "/$locale/apps/derivean/root",
                    params: {
                        locale: t
                    },
                    children: v.jsx(vq, {})
                }),
                menu: v.jsx(aoe, {}),
                actions: v.jsxs(v.Fragment, {
                    children: [
                        e.name,
                        v.jsx(Rt, {
                            icon: yq,
                            to: "/$locale/apps/derivean/game",
                            params: {
                                locale: t
                            }
                        }),
                        v.jsx(Rt, {
                            icon: RO,
                            to: "/$locale/apps/derivean/public/logout",
                            params: {
                                locale: t
                            },
                            preload: !1
                        })
                    ]
                })
            });
        }
    }), coe = jt("/$locale/apps/derivean/map")({
        async beforeLoad ({ context: t, params: { locale: e } }) {
            return {
                ...t,
                async session () {
                    try {
                        return tw.parse(hv.get("session"));
                    } catch  {
                        throw Db({
                            to: "/$locale/apps/derivean/public/login",
                            params: {
                                locale: e
                            }
                        });
                    }
                }
            };
        },
        component () {
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsx(lV, {
                        position: "top-right"
                    }),
                    v.jsx(fl, {})
                ]
            });
        }
    }), uoe = jt("/$locale/apps/derivean/game")({
        async beforeLoad ({ context: t, params: { locale: e } }) {
            return {
                ...t,
                async session () {
                    try {
                        return tw.parse(hv.get("session"));
                    } catch  {
                        throw Db({
                            to: "/$locale/apps/derivean/public/login",
                            params: {
                                locale: e
                            }
                        });
                    }
                }
            };
        },
        async loader ({ context: { queryClient: t, kysely: e, session: n } }) {
            const r = await n();
            return {
                session: r,
                cycle: await t.ensureQueryData({
                    queryKey: [
                        "Cycle"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>(await i.selectFrom("Cycle as c").select((s)=>s.fn.count("c.id").as("count")).where("c.userId", "=", r.id).executeTakeFirstOrThrow()).count);
                    }
                })
            };
        },
        component () {
            const { locale: t } = tn({
                from: "/$locale"
            }), { session: e } = Wi({
                from: "/$locale/apps/derivean/game"
            }), n = n7({
                filters: {
                    status: "pending",
                    mutationKey: [
                        "useCycleMutation"
                    ]
                },
                select (r) {
                    return r.state.status;
                }
            });
            return v.jsx(cq, {
                logo: v.jsx(Rt, {
                    to: "/$locale/apps/derivean/game",
                    params: {
                        locale: t
                    },
                    children: v.jsx(vq, {})
                }),
                actions: v.jsxs(v.Fragment, {
                    children: [
                        e.name,
                        v.jsx(Rt, {
                            icon: "icon-[clarity--crown-line]",
                            to: "/$locale/apps/derivean/root",
                            params: {
                                locale: t
                            }
                        }),
                        v.jsx(Rt, {
                            icon: RO,
                            to: "/$locale/apps/derivean/public/logout",
                            params: {
                                locale: t
                            },
                            preload: !1
                        })
                    ]
                }),
                css: {
                    base: n.length ? [
                        "select-none",
                        "pointer-events-none",
                        "opacity-50"
                    ] : void 0
                },
                children: v.jsx(fl, {})
            });
        }
    });
    var c1 = {
        exports: {}
    }, doe = c1.exports, nj;
    function foe() {
        return nj || (nj = 1, function(t, e) {
            (function(n, r) {
                r();
            })(doe, function() {
                function n(c, u) {
                    return typeof u > "u" ? u = {
                        autoBom: !1
                    } : typeof u != "object" && (console.warn("Deprecated: Expected third argument to be a object"), u = {
                        autoBom: !u
                    }), u.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(c.type) ? new Blob([
                        "\uFEFF",
                        c
                    ], {
                        type: c.type
                    }) : c;
                }
                function r(c, u, f) {
                    var p = new XMLHttpRequest;
                    p.open("GET", c), p.responseType = "blob", p.onload = function() {
                        l(p.response, u, f);
                    }, p.onerror = function() {
                        console.error("could not download file");
                    }, p.send();
                }
                function i(c) {
                    var u = new XMLHttpRequest;
                    u.open("HEAD", c, !1);
                    try {
                        u.send();
                    } catch  {}
                    return 200 <= u.status && 299 >= u.status;
                }
                function s(c) {
                    try {
                        c.dispatchEvent(new MouseEvent("click"));
                    } catch  {
                        var u = document.createEvent("MouseEvents");
                        u.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), c.dispatchEvent(u);
                    }
                }
                var o = typeof window == "object" && window.window === window ? window : typeof self == "object" && self.self === self ? self : typeof Ep == "object" && Ep.global === Ep ? Ep : void 0, a = o.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent), l = o.saveAs || (typeof window != "object" || window !== o ? function() {} : "download" in HTMLAnchorElement.prototype && !a ? function(c, u, f) {
                    var p = o.URL || o.webkitURL, g = document.createElement("a");
                    u = u || c.name || "download", g.download = u, g.rel = "noopener", typeof c == "string" ? (g.href = c, g.origin === location.origin ? s(g) : i(g.href) ? r(c, u, f) : s(g, g.target = "_blank")) : (g.href = p.createObjectURL(c), setTimeout(function() {
                        p.revokeObjectURL(g.href);
                    }, 4e4), setTimeout(function() {
                        s(g);
                    }, 0));
                } : "msSaveOrOpenBlob" in navigator ? function(c, u, f) {
                    if (u = u || c.name || "download", typeof c != "string") navigator.msSaveOrOpenBlob(n(c, f), u);
                    else if (i(c)) r(c, u, f);
                    else {
                        var p = document.createElement("a");
                        p.href = c, p.target = "_blank", setTimeout(function() {
                            s(p);
                        });
                    }
                } : function(c, u, f, p) {
                    if (p = p || open("", "_blank"), p && (p.document.title = p.document.body.innerText = "downloading..."), typeof c == "string") return r(c, u, f);
                    var g = c.type === "application/octet-stream", x = /constructor/i.test(o.HTMLElement) || o.safari, S = /CriOS\/[\d]+/.test(navigator.userAgent);
                    if ((S || g && x || a) && typeof FileReader < "u") {
                        var _ = new FileReader;
                        _.onloadend = function() {
                            var E = _.result;
                            E = S ? E : E.replace(/^data:[^;]*;/, "data:attachment/file;"), p ? p.location.href = E : location = E, p = null;
                        }, _.readAsDataURL(c);
                    } else {
                        var b = o.URL || o.webkitURL, M = b.createObjectURL(c);
                        p ? p.location = M : location.href = M, p = null, setTimeout(function() {
                            b.revokeObjectURL(M);
                        }, 4e4);
                    }
                });
                o.saveAs = l.saveAs = l, t.exports = l;
            });
        }(c1)), c1.exports;
    }
    var hoe = foe();
    const poe = Ao(hoe), AR = [
        "Tag",
        "Resource",
        "Resource_Tag",
        "Blueprint",
        "Inventory",
        "Region",
        "Region_Inventory",
        "Blueprint_Inventory",
        "Blueprint_Region",
        "Blueprint_Dependency",
        "Blueprint_Conflict",
        "Blueprint_Requirement",
        "Blueprint_Production",
        "Blueprint_Production_Requirement",
        "Blueprint_Production_Dependency",
        "Blueprint_Production_Resource"
    ], moe = jt("/$locale/apps/derivean/root/")({
        component () {
            const t = an({
                mutationKey: [
                    "export"
                ],
                async mutationFn () {
                    return or.promise((async ()=>{
                        const e = [];
                        await At.transaction().execute(async (n)=>{
                            for await (const r of AR)e.push({
                                source: r,
                                entities: await n.selectFrom(r).selectAll().execute()
                            });
                        }), poe.saveAs(new Blob([
                            JSON.stringify(e)
                        ], {
                            type: "application/json;charset=utf-8"
                        }), "export.json");
                    })(), Zs("Export game files"));
                }
            });
            return v.jsxs("div", {
                className: "flex flex-col gap-4 w-2/3 mx-auto",
                children: [
                    v.jsx(Mse, {
                        maxSize: 250 * 1024 ** 2,
                        onDrop: async (e)=>{
                            const [n] = e;
                            if (!n) return;
                            const r = JSON.parse(await n.text());
                            await ci`PRAGMA foreign_keys = OFF`.execute(At), await or.promise(At.transaction().execute(async (i)=>{
                                for await (const { source: s } of r){
                                    const o = AR.find((a)=>a === s);
                                    o && await i.deleteFrom(o).execute();
                                }
                                for await (const { source: s, entities: o } of r){
                                    const a = AR.find((l)=>l === s);
                                    if (a) for await (const l of Object.values(o))await i.insertInto(a).values(l).execute();
                                }
                                await ci`
                                    DELETE FROM Inventory
                                    WHERE NOT EXISTS (
                                        SELECT 1 FROM Blueprint_Inventory 
                                        WHERE Blueprint_Inventory.inventoryId = Inventory.id
                                    )
                                `.execute(i);
                            }), Zs("Import game files")), await ci`PRAGMA foreign_keys = ON`.execute(At);
                        }
                    }),
                    v.jsx("div", {
                        className: "flex items-center justify-center mt-10 gap-4",
                        children: v.jsx(Dn, {
                            iconEnabled: yq,
                            loading: t.isPending,
                            onClick: ()=>t.mutate(),
                            variant: {
                                variant: "subtle"
                            },
                            children: v.jsx(ne, {
                                label: "Export game files (label)"
                            })
                        })
                    }),
                    v.jsx("h2", {
                        children: "TODO"
                    }),
                    v.jsxs("ul", {
                        className: "flex flex-col gap-2",
                        children: [
                            v.jsx("li", {
                                children: "Add notification center like inventory is full, production is full and so on."
                            }),
                            v.jsx("li", {
                                children: 'Upgrades: Put everything into the building, drive upgrades by passive "Research" points'
                            }),
                            v.jsx("li", {
                                children: "Bundle default gameplay as exported json (put into public); add button to root to load default/selected gameplay; idea is a few buttons: Settler like, Fantasy, AoE and so on."
                            }),
                            v.jsx("li", {
                                children: "Define game ending rules: amount of resources in (individual resourece per required cycle), required building in a cycle. When a player fail, game end with the ability to reset. Each game rule may have an ending message to show."
                            }),
                            v.jsx("li", {
                                children: "Define winning rules: amount of resources / building built in specific cycle. When rules are not met, it's like a fail."
                            }),
                            v.jsx("li", {
                                children: "Add something like world available resources + the ability to drain and add resources to the world. Something like Wolrd_Inventory where 0 means unlimited resources."
                            }),
                            v.jsx("li", {
                                children: "World renewal resources: a list of resources with cycles and amount when they got renewed (world_renewal_queue)."
                            }),
                            v.jsx("li", {
                                children: "Defines seasons: list of cyclic seasons with their length; resource production may be bound to specific season(s)."
                            }),
                            v.jsx("li", {
                                children: "Add maintenance cost for a building: when a cycle ends, cost is deducted from the inventory. If there is not enough resources, building will be marked as offline (closed for production)."
                            }),
                            v.jsx("li", {
                                children: "Dispaly resources per season (some resources will be available only in specific season)"
                            }),
                            v.jsx("li", {
                                children: "Add resource probability drop: some resources may have not be produces (like a crop). This should be thinked out."
                            })
                        ]
                    })
                ]
            });
        }
    });
    var nw = (t)=>t.type === "checkbox", Ap = (t)=>t instanceof Date, wo = (t)=>t == null;
    const xq = (t)=>typeof t == "object";
    var Ti = (t)=>!wo(t) && !Array.isArray(t) && xq(t) && !Ap(t), bq = (t)=>Ti(t) && t.target ? nw(t.target) ? t.target.checked : t.target.value : t, goe = (t)=>t.substring(0, t.search(/\.\d+(\.|$)/)) || t, wq = (t, e)=>t.has(goe(e)), yoe = (t)=>{
        const e = t.constructor && t.constructor.prototype;
        return Ti(e) && e.hasOwnProperty("isPrototypeOf");
    }, kO = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
    function Xo(t) {
        let e;
        const n = Array.isArray(t), r = typeof FileList < "u" ? t instanceof FileList : !1;
        if (t instanceof Date) e = new Date(t);
        else if (t instanceof Set) e = new Set(t);
        else if (!(kO && (t instanceof Blob || r)) && (n || Ti(t))) if (e = n ? [] : {}, !n && !yoe(t)) e = t;
        else for(const i in t)t.hasOwnProperty(i) && (e[i] = Xo(t[i]));
        else return t;
        return e;
    }
    var bT = (t)=>Array.isArray(t) ? t.filter(Boolean) : [], Si = (t)=>t === void 0, St = (t, e, n)=>{
        if (!e || !Ti(t)) return n;
        const r = bT(e.split(/[,[\].]+?/)).reduce((i, s)=>wo(i) ? i : i[s], t);
        return Si(r) || r === t ? Si(t[e]) ? n : t[e] : r;
    }, ol = (t)=>typeof t == "boolean", OO = (t)=>/^\w*$/.test(t), _q = (t)=>bT(t.replace(/["|']|\]/g, "").split(/\.|\[/)), ur = (t, e, n)=>{
        let r = -1;
        const i = OO(e) ? [
            e
        ] : _q(e), s = i.length, o = s - 1;
        for(; ++r < s;){
            const a = i[r];
            let l = n;
            if (r !== o) {
                const c = t[a];
                l = Ti(c) || Array.isArray(c) ? c : isNaN(+i[r + 1]) ? {} : [];
            }
            if (a === "__proto__" || a === "constructor" || a === "prototype") return;
            t[a] = l, t = t[a];
        }
        return t;
    };
    const OE = {
        BLUR: "blur",
        FOCUS_OUT: "focusout",
        CHANGE: "change"
    }, Xl = {
        onBlur: "onBlur",
        onChange: "onChange",
        onSubmit: "onSubmit",
        onTouched: "onTouched",
        all: "all"
    }, Fu = {
        max: "max",
        min: "min",
        maxLength: "maxLength",
        minLength: "minLength",
        pattern: "pattern",
        required: "required",
        validate: "validate"
    }, voe = nr.createContext(null), LO = ()=>nr.useContext(voe);
    var Sq = (t, e, n, r = !0)=>{
        const i = {
            defaultValues: e._defaultValues
        };
        for(const s in t)Object.defineProperty(i, s, {
            get: ()=>{
                const o = s;
                return e._proxyFormState[o] !== Xl.all && (e._proxyFormState[o] = !r || Xl.all), n && (n[o] = !0), t[o];
            }
        });
        return i;
    }, Ko = (t)=>Ti(t) && !Object.keys(t).length, Eq = (t, e, n, r)=>{
        n(t);
        const { name: i, ...s } = t;
        return Ko(s) || Object.keys(s).length >= Object.keys(e).length || Object.keys(s).find((o)=>e[o] === (!r || Xl.all));
    }, x0 = (t)=>Array.isArray(t) ? t : [
            t
        ], Mq = (t, e, n)=>!t || !e || t === e || x0(t).some((r)=>r && (n ? r === e : r.startsWith(e) || e.startsWith(r)));
    function DO(t) {
        const e = nr.useRef(t);
        e.current = t, nr.useEffect(()=>{
            const n = !t.disabled && e.current.subject && e.current.subject.subscribe({
                next: e.current.next
            });
            return ()=>{
                n && n.unsubscribe();
            };
        }, [
            t.disabled
        ]);
    }
    function xoe(t) {
        const e = LO(), { control: n = e.control, disabled: r, name: i, exact: s } = t || {}, [o, a] = nr.useState(n._formState), l = nr.useRef(!0), c = nr.useRef({
            isDirty: !1,
            isLoading: !1,
            dirtyFields: !1,
            touchedFields: !1,
            validatingFields: !1,
            isValidating: !1,
            isValid: !1,
            errors: !1
        }), u = nr.useRef(i);
        return u.current = i, DO({
            disabled: r,
            next: (f)=>l.current && Mq(u.current, f.name, s) && Eq(f, c.current, n._updateFormState) && a({
                    ...n._formState,
                    ...f
                }),
            subject: n._subjects.state
        }), nr.useEffect(()=>(l.current = !0, c.current.isValid && n._updateValid(!0), ()=>{
                l.current = !1;
            }), [
            n
        ]), nr.useMemo(()=>Sq(o, n, c.current, !1), [
            o,
            n
        ]);
    }
    var Dc = (t)=>typeof t == "string", Tq = (t, e, n, r, i)=>Dc(t) ? (r && e.watch.add(t), St(n, t, i)) : Array.isArray(t) ? t.map((s)=>(r && e.watch.add(s), St(n, s))) : (r && (e.watchAll = !0), n);
    function boe(t) {
        const e = LO(), { control: n = e.control, name: r, defaultValue: i, disabled: s, exact: o } = t || {}, a = nr.useRef(r);
        a.current = r, DO({
            disabled: s,
            subject: n._subjects.values,
            next: (u)=>{
                Mq(a.current, u.name, o) && c(Xo(Tq(a.current, n._names, u.values || n._formValues, !1, i)));
            }
        });
        const [l, c] = nr.useState(n._getWatch(r, i));
        return nr.useEffect(()=>n._removeUnmounted()), l;
    }
    function woe(t) {
        const e = LO(), { name: n, disabled: r, control: i = e.control, shouldUnregister: s } = t, o = wq(i._names.array, n), a = boe({
            control: i,
            name: n,
            defaultValue: St(i._formValues, n, St(i._defaultValues, n, t.defaultValue)),
            exact: !0
        }), l = xoe({
            control: i,
            name: n,
            exact: !0
        }), c = nr.useRef(i.register(n, {
            ...t.rules,
            value: a,
            ...ol(t.disabled) ? {
                disabled: t.disabled
            } : {}
        })), u = nr.useMemo(()=>Object.defineProperties({}, {
                invalid: {
                    enumerable: !0,
                    get: ()=>!!St(l.errors, n)
                },
                isDirty: {
                    enumerable: !0,
                    get: ()=>!!St(l.dirtyFields, n)
                },
                isTouched: {
                    enumerable: !0,
                    get: ()=>!!St(l.touchedFields, n)
                },
                isValidating: {
                    enumerable: !0,
                    get: ()=>!!St(l.validatingFields, n)
                },
                error: {
                    enumerable: !0,
                    get: ()=>St(l.errors, n)
                }
            }), [
            l,
            n
        ]), f = nr.useMemo(()=>({
                name: n,
                value: a,
                ...ol(r) || l.disabled ? {
                    disabled: l.disabled || r
                } : {},
                onChange: (p)=>c.current.onChange({
                        target: {
                            value: bq(p),
                            name: n
                        },
                        type: OE.CHANGE
                    }),
                onBlur: ()=>c.current.onBlur({
                        target: {
                            value: St(i._formValues, n),
                            name: n
                        },
                        type: OE.BLUR
                    }),
                ref: (p)=>{
                    const g = St(i._fields, n);
                    g && p && (g._f.ref = {
                        focus: ()=>p.focus(),
                        select: ()=>p.select(),
                        setCustomValidity: (x)=>p.setCustomValidity(x),
                        reportValidity: ()=>p.reportValidity()
                    });
                }
            }), [
            n,
            i._formValues,
            r,
            l.disabled,
            a,
            i._fields
        ]);
        return nr.useEffect(()=>{
            const p = i._options.shouldUnregister || s, g = (x, S)=>{
                const _ = St(i._fields, x);
                _ && _._f && (_._f.mount = S);
            };
            if (g(n, !0), p) {
                const x = Xo(St(i._options.defaultValues, n));
                ur(i._defaultValues, n, x), Si(St(i._formValues, n)) && ur(i._formValues, n, x);
            }
            return !o && i.register(n), ()=>{
                (o ? p && !i._state.action : p) ? i.unregister(n) : g(n, !1);
            };
        }, [
            n,
            i,
            o,
            s
        ]), nr.useEffect(()=>{
            i._updateDisabledField({
                disabled: r,
                fields: i._fields,
                name: n
            });
        }, [
            r,
            n,
            i
        ]), nr.useMemo(()=>({
                field: f,
                formState: l,
                fieldState: u
            }), [
            f,
            l,
            u
        ]);
    }
    const Ro = (t)=>t.render(woe(t));
    var Cq = (t, e, n, r, i)=>e ? {
            ...n[t],
            types: {
                ...n[t] && n[t].types ? n[t].types : {},
                [r]: i || !0
            }
        } : {}, rj = (t)=>({
            isOnSubmit: !t || t === Xl.onSubmit,
            isOnBlur: t === Xl.onBlur,
            isOnChange: t === Xl.onChange,
            isOnAll: t === Xl.all,
            isOnTouch: t === Xl.onTouched
        }), ij = (t, e, n)=>!n && (e.watchAll || e.watch.has(t) || [
            ...e.watch
        ].some((r)=>t.startsWith(r) && /^\.\w+/.test(t.slice(r.length))));
    const b0 = (t, e, n, r)=>{
        for (const i of n || Object.keys(t)){
            const s = St(t, i);
            if (s) {
                const { _f: o, ...a } = s;
                if (o) {
                    if (o.refs && o.refs[0] && e(o.refs[0], i) && !r) return !0;
                    if (o.ref && e(o.ref, o.name) && !r) return !0;
                    if (b0(a, e)) break;
                } else if (Ti(a) && b0(a, e)) break;
            }
        }
    };
    var _oe = (t, e, n)=>{
        const r = x0(St(t, n));
        return ur(r, "root", e[n]), ur(t, n, r), t;
    }, FO = (t)=>t.type === "file", kc = (t)=>typeof t == "function", LE = (t)=>{
        if (!kO) return !1;
        const e = t ? t.ownerDocument : 0;
        return t instanceof (e && e.defaultView ? e.defaultView.HTMLElement : HTMLElement);
    }, u1 = (t)=>Dc(t), jO = (t)=>t.type === "radio", DE = (t)=>t instanceof RegExp;
    const sj = {
        value: !1,
        isValid: !1
    }, oj = {
        value: !0,
        isValid: !0
    };
    var Iq = (t)=>{
        if (Array.isArray(t)) {
            if (t.length > 1) {
                const e = t.filter((n)=>n && n.checked && !n.disabled).map((n)=>n.value);
                return {
                    value: e,
                    isValid: !!e.length
                };
            }
            return t[0].checked && !t[0].disabled ? t[0].attributes && !Si(t[0].attributes.value) ? Si(t[0].value) || t[0].value === "" ? oj : {
                value: t[0].value,
                isValid: !0
            } : oj : sj;
        }
        return sj;
    };
    const aj = {
        isValid: !1,
        value: null
    };
    var Rq = (t)=>Array.isArray(t) ? t.reduce((e, n)=>n && n.checked && !n.disabled ? {
                isValid: !0,
                value: n.value
            } : e, aj) : aj;
    function lj(t, e, n = "validate") {
        if (u1(t) || Array.isArray(t) && t.every(u1) || ol(t) && !t) return {
            type: n,
            message: u1(t) ? t : "",
            ref: e
        };
    }
    var Sg = (t)=>Ti(t) && !DE(t) ? t : {
            value: t,
            message: ""
        }, cj = async (t, e, n, r, i, s)=>{
        const { ref: o, refs: a, required: l, maxLength: c, minLength: u, min: f, max: p, pattern: g, validate: x, name: S, valueAsNumber: _, mount: b } = t._f, M = St(n, S);
        if (!b || e.has(S)) return {};
        const E = a ? a[0] : o, T = (B)=>{
            i && E.reportValidity && (E.setCustomValidity(ol(B) ? "" : B || ""), E.reportValidity());
        }, k = {}, N = jO(o), D = nw(o), L = N || D, R = (_ || FO(o)) && Si(o.value) && Si(M) || LE(o) && o.value === "" || M === "" || Array.isArray(M) && !M.length, A = Cq.bind(null, S, r, k), P = (B, U, j, K = Fu.maxLength, q = Fu.minLength)=>{
            const te = B ? U : j;
            k[S] = {
                type: B ? K : q,
                message: te,
                ref: o,
                ...A(B ? K : q, te)
            };
        };
        if (s ? !Array.isArray(M) || !M.length : l && (!L && (R || wo(M)) || ol(M) && !M || D && !Iq(a).isValid || N && !Rq(a).isValid)) {
            const { value: B, message: U } = u1(l) ? {
                value: !!l,
                message: l
            } : Sg(l);
            if (B && (k[S] = {
                type: Fu.required,
                message: U,
                ref: E,
                ...A(Fu.required, U)
            }, !r)) return T(U), k;
        }
        if (!R && (!wo(f) || !wo(p))) {
            let B, U;
            const j = Sg(p), K = Sg(f);
            if (!wo(M) && !isNaN(M)) {
                const q = o.valueAsNumber || M && +M;
                wo(j.value) || (B = q > j.value), wo(K.value) || (U = q < K.value);
            } else {
                const q = o.valueAsDate || new Date(M), te = (Q)=>new Date(new Date().toDateString() + " " + Q), W = o.type == "time", J = o.type == "week";
                Dc(j.value) && M && (B = W ? te(M) > te(j.value) : J ? M > j.value : q > new Date(j.value)), Dc(K.value) && M && (U = W ? te(M) < te(K.value) : J ? M < K.value : q < new Date(K.value));
            }
            if ((B || U) && (P(!!B, j.message, K.message, Fu.max, Fu.min), !r)) return T(k[S].message), k;
        }
        if ((c || u) && !R && (Dc(M) || s && Array.isArray(M))) {
            const B = Sg(c), U = Sg(u), j = !wo(B.value) && M.length > +B.value, K = !wo(U.value) && M.length < +U.value;
            if ((j || K) && (P(j, B.message, U.message), !r)) return T(k[S].message), k;
        }
        if (g && !R && Dc(M)) {
            const { value: B, message: U } = Sg(g);
            if (DE(B) && !M.match(B) && (k[S] = {
                type: Fu.pattern,
                message: U,
                ref: o,
                ...A(Fu.pattern, U)
            }, !r)) return T(U), k;
        }
        if (x) {
            if (kc(x)) {
                const B = await x(M, n), U = lj(B, E);
                if (U && (k[S] = {
                    ...U,
                    ...A(Fu.validate, U.message)
                }, !r)) return T(U.message), k;
            } else if (Ti(x)) {
                let B = {};
                for(const U in x){
                    if (!Ko(B) && !r) break;
                    const j = lj(await x[U](M, n), E, U);
                    j && (B = {
                        ...j,
                        ...A(U, j.message)
                    }, T(j.message), r && (k[S] = B));
                }
                if (!Ko(B) && (k[S] = {
                    ref: E,
                    ...B
                }, !r)) return k;
            }
        }
        return T(!0), k;
    };
    function Soe(t, e) {
        const n = e.slice(0, -1).length;
        let r = 0;
        for(; r < n;)t = Si(t) ? r++ : t[e[r++]];
        return t;
    }
    function Eoe(t) {
        for(const e in t)if (t.hasOwnProperty(e) && !Si(t[e])) return !1;
        return !0;
    }
    function Qi(t, e) {
        const n = Array.isArray(e) ? e : OO(e) ? [
            e
        ] : _q(e), r = n.length === 1 ? t : Soe(t, n), i = n.length - 1, s = n[i];
        return r && delete r[s], i !== 0 && (Ti(r) && Ko(r) || Array.isArray(r) && Eoe(r)) && Qi(t, n.slice(0, -1)), t;
    }
    var NR = ()=>{
        let t = [];
        return {
            get observers () {
                return t;
            },
            next: (i)=>{
                for (const s of t)s.next && s.next(i);
            },
            subscribe: (i)=>(t.push(i), {
                    unsubscribe: ()=>{
                        t = t.filter((s)=>s !== i);
                    }
                }),
            unsubscribe: ()=>{
                t = [];
            }
        };
    }, UP = (t)=>wo(t) || !xq(t);
    function Rf(t, e) {
        if (UP(t) || UP(e)) return t === e;
        if (Ap(t) && Ap(e)) return t.getTime() === e.getTime();
        const n = Object.keys(t), r = Object.keys(e);
        if (n.length !== r.length) return !1;
        for (const i of n){
            const s = t[i];
            if (!r.includes(i)) return !1;
            if (i !== "ref") {
                const o = e[i];
                if (Ap(s) && Ap(o) || Ti(s) && Ti(o) || Array.isArray(s) && Array.isArray(o) ? !Rf(s, o) : s !== o) return !1;
            }
        }
        return !0;
    }
    var Aq = (t)=>t.type === "select-multiple", Moe = (t)=>jO(t) || nw(t), PR = (t)=>LE(t) && t.isConnected, Nq = (t)=>{
        for(const e in t)if (kc(t[e])) return !0;
        return !1;
    };
    function FE(t, e = {}) {
        const n = Array.isArray(t);
        if (Ti(t) || n) for(const r in t)Array.isArray(t[r]) || Ti(t[r]) && !Nq(t[r]) ? (e[r] = Array.isArray(t[r]) ? [] : {}, FE(t[r], e[r])) : wo(t[r]) || (e[r] = !0);
        return e;
    }
    function Pq(t, e, n) {
        const r = Array.isArray(t);
        if (Ti(t) || r) for(const i in t)Array.isArray(t[i]) || Ti(t[i]) && !Nq(t[i]) ? Si(e) || UP(n[i]) ? n[i] = Array.isArray(t[i]) ? FE(t[i], []) : {
            ...FE(t[i])
        } : Pq(t[i], wo(e) ? {} : e[i], n[i]) : n[i] = !Rf(t[i], e[i]);
        return n;
    }
    var wx = (t, e)=>Pq(t, e, FE(e)), kq = (t, { valueAsNumber: e, valueAsDate: n, setValueAs: r })=>Si(t) ? t : e ? t === "" ? NaN : t && +t : n && Dc(t) ? new Date(t) : r ? r(t) : t;
    function kR(t) {
        const e = t.ref;
        return FO(e) ? e.files : jO(e) ? Rq(t.refs).value : Aq(e) ? [
            ...e.selectedOptions
        ].map(({ value: n })=>n) : nw(e) ? Iq(t.refs).value : kq(Si(e.value) ? t.ref.value : e.value, t);
    }
    var Toe = (t, e, n, r)=>{
        const i = {};
        for (const s of t){
            const o = St(e, s);
            o && ur(i, s, o._f);
        }
        return {
            criteriaMode: n,
            names: [
                ...t
            ],
            fields: i,
            shouldUseNativeValidation: r
        };
    }, _x = (t)=>Si(t) ? t : DE(t) ? t.source : Ti(t) ? DE(t.value) ? t.value.source : t.value : t;
    const uj = "AsyncFunction";
    var Coe = (t)=>!!t && !!t.validate && !!(kc(t.validate) && t.validate.constructor.name === uj || Ti(t.validate) && Object.values(t.validate).find((e)=>e.constructor.name === uj)), Ioe = (t)=>t.mount && (t.required || t.min || t.max || t.maxLength || t.minLength || t.pattern || t.validate);
    function dj(t, e, n) {
        const r = St(t, n);
        if (r || OO(n)) return {
            error: r,
            name: n
        };
        const i = n.split(".");
        for(; i.length;){
            const s = i.join("."), o = St(e, s), a = St(t, s);
            if (o && !Array.isArray(o) && n !== s) return {
                name: n
            };
            if (a && a.type) return {
                name: s,
                error: a
            };
            i.pop();
        }
        return {
            name: n
        };
    }
    var Roe = (t, e, n, r, i)=>i.isOnAll ? !1 : !n && i.isOnTouch ? !(e || t) : (n ? r.isOnBlur : i.isOnBlur) ? !t : (n ? r.isOnChange : i.isOnChange) ? t : !0, Aoe = (t, e)=>!bT(St(t, e)).length && Qi(t, e);
    const Noe = {
        mode: Xl.onSubmit,
        reValidateMode: Xl.onChange,
        shouldFocusError: !0
    };
    function Poe(t = {}) {
        let e = {
            ...Noe,
            ...t
        }, n = {
            submitCount: 0,
            isDirty: !1,
            isLoading: kc(e.defaultValues),
            isValidating: !1,
            isSubmitted: !1,
            isSubmitting: !1,
            isSubmitSuccessful: !1,
            isValid: !1,
            touchedFields: {},
            dirtyFields: {},
            validatingFields: {},
            errors: e.errors || {},
            disabled: e.disabled || !1
        }, r = {}, i = Ti(e.defaultValues) || Ti(e.values) ? Xo(e.defaultValues || e.values) || {} : {}, s = e.shouldUnregister ? {} : Xo(i), o = {
            action: !1,
            mount: !1,
            watch: !1
        }, a = {
            mount: new Set,
            disabled: new Set,
            unMount: new Set,
            array: new Set,
            watch: new Set
        }, l, c = 0;
        const u = {
            isDirty: !1,
            dirtyFields: !1,
            validatingFields: !1,
            touchedFields: !1,
            isValidating: !1,
            isValid: !1,
            errors: !1
        }, f = {
            values: NR(),
            array: NR(),
            state: NR()
        }, p = rj(e.mode), g = rj(e.reValidateMode), x = e.criteriaMode === Xl.all, S = (de)=>(ae)=>{
                clearTimeout(c), c = setTimeout(de, ae);
            }, _ = async (de)=>{
            if (!e.disabled && (u.isValid || de)) {
                const ae = e.resolver ? Ko((await L()).errors) : await A(r, !0);
                ae !== n.isValid && f.state.next({
                    isValid: ae
                });
            }
        }, b = (de, ae)=>{
            !e.disabled && (u.isValidating || u.validatingFields) && ((de || Array.from(a.mount)).forEach((oe)=>{
                oe && (ae ? ur(n.validatingFields, oe, ae) : Qi(n.validatingFields, oe));
            }), f.state.next({
                validatingFields: n.validatingFields,
                isValidating: !Ko(n.validatingFields)
            }));
        }, M = (de, ae = [], oe, $, H = !0, fe = !0)=>{
            if ($ && oe && !e.disabled) {
                if (o.action = !0, fe && Array.isArray(St(r, de))) {
                    const pe = oe(St(r, de), $.argA, $.argB);
                    H && ur(r, de, pe);
                }
                if (fe && Array.isArray(St(n.errors, de))) {
                    const pe = oe(St(n.errors, de), $.argA, $.argB);
                    H && ur(n.errors, de, pe), Aoe(n.errors, de);
                }
                if (u.touchedFields && fe && Array.isArray(St(n.touchedFields, de))) {
                    const pe = oe(St(n.touchedFields, de), $.argA, $.argB);
                    H && ur(n.touchedFields, de, pe);
                }
                u.dirtyFields && (n.dirtyFields = wx(i, s)), f.state.next({
                    name: de,
                    isDirty: B(de, ae),
                    dirtyFields: n.dirtyFields,
                    errors: n.errors,
                    isValid: n.isValid
                });
            } else ur(s, de, ae);
        }, E = (de, ae)=>{
            ur(n.errors, de, ae), f.state.next({
                errors: n.errors
            });
        }, T = (de)=>{
            n.errors = de, f.state.next({
                errors: n.errors,
                isValid: !1
            });
        }, k = (de, ae, oe, $)=>{
            const H = St(r, de);
            if (H) {
                const fe = St(s, de, Si(oe) ? St(i, de) : oe);
                Si(fe) || $ && $.defaultChecked || ae ? ur(s, de, ae ? fe : kR(H._f)) : K(de, fe), o.mount && _();
            }
        }, N = (de, ae, oe, $, H)=>{
            let fe = !1, pe = !1;
            const me = {
                name: de
            };
            if (!e.disabled) {
                const Ie = !!(St(r, de) && St(r, de)._f && St(r, de)._f.disabled);
                if (!oe || $) {
                    u.isDirty && (pe = n.isDirty, n.isDirty = me.isDirty = B(), fe = pe !== me.isDirty);
                    const Xe = Ie || Rf(St(i, de), ae);
                    pe = !!(!Ie && St(n.dirtyFields, de)), Xe || Ie ? Qi(n.dirtyFields, de) : ur(n.dirtyFields, de, !0), me.dirtyFields = n.dirtyFields, fe = fe || u.dirtyFields && pe !== !Xe;
                }
                if (oe) {
                    const Xe = St(n.touchedFields, de);
                    Xe || (ur(n.touchedFields, de, oe), me.touchedFields = n.touchedFields, fe = fe || u.touchedFields && Xe !== oe);
                }
                fe && H && f.state.next(me);
            }
            return fe ? me : {};
        }, D = (de, ae, oe, $)=>{
            const H = St(n.errors, de), fe = u.isValid && ol(ae) && n.isValid !== ae;
            if (e.delayError && oe ? (l = S(()=>E(de, oe)), l(e.delayError)) : (clearTimeout(c), l = null, oe ? ur(n.errors, de, oe) : Qi(n.errors, de)), (oe ? !Rf(H, oe) : H) || !Ko($) || fe) {
                const pe = {
                    ...$,
                    ...fe && ol(ae) ? {
                        isValid: ae
                    } : {},
                    errors: n.errors,
                    name: de
                };
                n = {
                    ...n,
                    ...pe
                }, f.state.next(pe);
            }
        }, L = async (de)=>{
            b(de, !0);
            const ae = await e.resolver(s, e.context, Toe(de || a.mount, r, e.criteriaMode, e.shouldUseNativeValidation));
            return b(de), ae;
        }, R = async (de)=>{
            const { errors: ae } = await L(de);
            if (de) for (const oe of de){
                const $ = St(ae, oe);
                $ ? ur(n.errors, oe, $) : Qi(n.errors, oe);
            }
            else n.errors = ae;
            return ae;
        }, A = async (de, ae, oe = {
            valid: !0
        })=>{
            for(const $ in de){
                const H = de[$];
                if (H) {
                    const { _f: fe, ...pe } = H;
                    if (fe) {
                        const me = a.array.has(fe.name), Ie = H._f && Coe(H._f);
                        Ie && u.validatingFields && b([
                            $
                        ], !0);
                        const Xe = await cj(H, a.disabled, s, x, e.shouldUseNativeValidation && !ae, me);
                        if (Ie && u.validatingFields && b([
                            $
                        ]), Xe[fe.name] && (oe.valid = !1, ae)) break;
                        !ae && (St(Xe, fe.name) ? me ? _oe(n.errors, Xe, fe.name) : ur(n.errors, fe.name, Xe[fe.name]) : Qi(n.errors, fe.name));
                    }
                    !Ko(pe) && await A(pe, ae, oe);
                }
            }
            return oe.valid;
        }, P = ()=>{
            for (const de of a.unMount){
                const ae = St(r, de);
                ae && (ae._f.refs ? ae._f.refs.every((oe)=>!PR(oe)) : !PR(ae._f.ref)) && ge(de);
            }
            a.unMount = new Set;
        }, B = (de, ae)=>!e.disabled && (de && ae && ur(s, de, ae), !Rf(Y(), i)), U = (de, ae, oe)=>Tq(de, a, {
                ...o.mount ? s : Si(ae) ? i : Dc(de) ? {
                    [de]: ae
                } : ae
            }, oe, ae), j = (de)=>bT(St(o.mount ? s : i, de, e.shouldUnregister ? St(i, de, []) : [])), K = (de, ae, oe = {})=>{
            const $ = St(r, de);
            let H = ae;
            if ($) {
                const fe = $._f;
                fe && (!fe.disabled && ur(s, de, kq(ae, fe)), H = LE(fe.ref) && wo(ae) ? "" : ae, Aq(fe.ref) ? [
                    ...fe.ref.options
                ].forEach((pe)=>pe.selected = H.includes(pe.value)) : fe.refs ? nw(fe.ref) ? fe.refs.length > 1 ? fe.refs.forEach((pe)=>(!pe.defaultChecked || !pe.disabled) && (pe.checked = Array.isArray(H) ? !!H.find((me)=>me === pe.value) : H === pe.value)) : fe.refs[0] && (fe.refs[0].checked = !!H) : fe.refs.forEach((pe)=>pe.checked = pe.value === H) : FO(fe.ref) ? fe.ref.value = "" : (fe.ref.value = H, fe.ref.type || f.values.next({
                    name: de,
                    values: {
                        ...s
                    }
                })));
            }
            (oe.shouldDirty || oe.shouldTouch) && N(de, H, oe.shouldTouch, oe.shouldDirty, !0), oe.shouldValidate && Q(de);
        }, q = (de, ae, oe)=>{
            for(const $ in ae){
                const H = ae[$], fe = `${de}.${$}`, pe = St(r, fe);
                (a.array.has(de) || Ti(H) || pe && !pe._f) && !Ap(H) ? q(fe, H, oe) : K(fe, H, oe);
            }
        }, te = (de, ae, oe = {})=>{
            const $ = St(r, de), H = a.array.has(de), fe = Xo(ae);
            ur(s, de, fe), H ? (f.array.next({
                name: de,
                values: {
                    ...s
                }
            }), (u.isDirty || u.dirtyFields) && oe.shouldDirty && f.state.next({
                name: de,
                dirtyFields: wx(i, s),
                isDirty: B(de, fe)
            })) : $ && !$._f && !wo(fe) ? q(de, fe, oe) : K(de, fe, oe), ij(de, a) && f.state.next({
                ...n
            }), f.values.next({
                name: o.mount ? de : void 0,
                values: {
                    ...s
                }
            });
        }, W = async (de)=>{
            o.mount = !0;
            const ae = de.target;
            let oe = ae.name, $ = !0;
            const H = St(r, oe), fe = ()=>ae.type ? kR(H._f) : bq(de), pe = (me)=>{
                $ = Number.isNaN(me) || Ap(me) && isNaN(me.getTime()) || Rf(me, St(s, oe, me));
            };
            if (H) {
                let me, Ie;
                const Xe = fe(), Ze = de.type === OE.BLUR || de.type === OE.FOCUS_OUT, at = !Ioe(H._f) && !e.resolver && !St(n.errors, oe) && !H._f.deps || Roe(Ze, St(n.touchedFields, oe), n.isSubmitted, g, p), Je = ij(oe, a, Ze);
                ur(s, oe, Xe), Ze ? (H._f.onBlur && H._f.onBlur(de), l && l(0)) : H._f.onChange && H._f.onChange(de);
                const Pe = N(oe, Xe, Ze, !1), Fe = !Ko(Pe) || Je;
                if (!Ze && f.values.next({
                    name: oe,
                    type: de.type,
                    values: {
                        ...s
                    }
                }), at) return u.isValid && (e.mode === "onBlur" && Ze ? _() : Ze || _()), Fe && f.state.next({
                    name: oe,
                    ...Je ? {} : Pe
                });
                if (!Ze && Je && f.state.next({
                    ...n
                }), e.resolver) {
                    const { errors: nt } = await L([
                        oe
                    ]);
                    if (pe(Xe), $) {
                        const ct = dj(n.errors, r, oe), st = dj(nt, r, ct.name || oe);
                        me = st.error, oe = st.name, Ie = Ko(nt);
                    }
                } else b([
                    oe
                ], !0), me = (await cj(H, a.disabled, s, x, e.shouldUseNativeValidation))[oe], b([
                    oe
                ]), pe(Xe), $ && (me ? Ie = !1 : u.isValid && (Ie = await A(r, !0)));
                $ && (H._f.deps && Q(H._f.deps), D(oe, Ie, me, Pe));
            }
        }, J = (de, ae)=>{
            if (St(n.errors, ae) && de.focus) return de.focus(), 1;
        }, Q = async (de, ae = {})=>{
            let oe, $;
            const H = x0(de);
            if (e.resolver) {
                const fe = await R(Si(de) ? de : H);
                oe = Ko(fe), $ = de ? !H.some((pe)=>St(fe, pe)) : oe;
            } else de ? ($ = (await Promise.all(H.map(async (fe)=>{
                const pe = St(r, fe);
                return await A(pe && pe._f ? {
                    [fe]: pe
                } : pe);
            }))).every(Boolean), !(!$ && !n.isValid) && _()) : $ = oe = await A(r);
            return f.state.next({
                ...!Dc(de) || u.isValid && oe !== n.isValid ? {} : {
                    name: de
                },
                ...e.resolver || !de ? {
                    isValid: oe
                } : {},
                errors: n.errors
            }), ae.shouldFocus && !$ && b0(r, J, de ? H : a.mount), $;
        }, Y = (de)=>{
            const ae = {
                ...o.mount ? s : i
            };
            return Si(de) ? ae : Dc(de) ? St(ae, de) : de.map((oe)=>St(ae, oe));
        }, le = (de, ae)=>({
                invalid: !!St((ae || n).errors, de),
                isDirty: !!St((ae || n).dirtyFields, de),
                error: St((ae || n).errors, de),
                isValidating: !!St(n.validatingFields, de),
                isTouched: !!St((ae || n).touchedFields, de)
            }), ue = (de)=>{
            de && x0(de).forEach((ae)=>Qi(n.errors, ae)), f.state.next({
                errors: de ? n.errors : {}
            });
        }, ie = (de, ae, oe)=>{
            const $ = (St(r, de, {
                _f: {}
            })._f || {}).ref, H = St(n.errors, de) || {}, { ref: fe, message: pe, type: me, ...Ie } = H;
            ur(n.errors, de, {
                ...Ie,
                ...ae,
                ref: $
            }), f.state.next({
                name: de,
                errors: n.errors,
                isValid: !1
            }), oe && oe.shouldFocus && $ && $.focus && $.focus();
        }, he = (de, ae)=>kc(de) ? f.values.subscribe({
                next: (oe)=>de(U(void 0, ae), oe)
            }) : U(de, ae, !0), ge = (de, ae = {})=>{
            for (const oe of de ? x0(de) : a.mount)a.mount.delete(oe), a.array.delete(oe), ae.keepValue || (Qi(r, oe), Qi(s, oe)), !ae.keepError && Qi(n.errors, oe), !ae.keepDirty && Qi(n.dirtyFields, oe), !ae.keepTouched && Qi(n.touchedFields, oe), !ae.keepIsValidating && Qi(n.validatingFields, oe), !e.shouldUnregister && !ae.keepDefaultValue && Qi(i, oe);
            f.values.next({
                values: {
                    ...s
                }
            }), f.state.next({
                ...n,
                ...ae.keepDirty ? {
                    isDirty: B()
                } : {}
            }), !ae.keepIsValid && _();
        }, ve = ({ disabled: de, name: ae, field: oe, fields: $ })=>{
            (ol(de) && o.mount || de || a.disabled.has(ae)) && (de ? a.disabled.add(ae) : a.disabled.delete(ae), N(ae, kR(oe ? oe._f : St($, ae)._f), !1, !1, !0));
        }, Ee = (de, ae = {})=>{
            let oe = St(r, de);
            const $ = ol(ae.disabled) || ol(e.disabled);
            return ur(r, de, {
                ...oe || {},
                _f: {
                    ...oe && oe._f ? oe._f : {
                        ref: {
                            name: de
                        }
                    },
                    name: de,
                    mount: !0,
                    ...ae
                }
            }), a.mount.add(de), oe ? ve({
                field: oe,
                disabled: ol(ae.disabled) ? ae.disabled : e.disabled,
                name: de
            }) : k(de, !0, ae.value), {
                ...$ ? {
                    disabled: ae.disabled || e.disabled
                } : {},
                ...e.progressive ? {
                    required: !!ae.required,
                    min: _x(ae.min),
                    max: _x(ae.max),
                    minLength: _x(ae.minLength),
                    maxLength: _x(ae.maxLength),
                    pattern: _x(ae.pattern)
                } : {},
                name: de,
                onChange: W,
                onBlur: W,
                ref: (H)=>{
                    if (H) {
                        Ee(de, ae), oe = St(r, de);
                        const fe = Si(H.value) && H.querySelectorAll && H.querySelectorAll("input,select,textarea")[0] || H, pe = Moe(fe), me = oe._f.refs || [];
                        if (pe ? me.find((Ie)=>Ie === fe) : fe === oe._f.ref) return;
                        ur(r, de, {
                            _f: {
                                ...oe._f,
                                ...pe ? {
                                    refs: [
                                        ...me.filter(PR),
                                        fe,
                                        ...Array.isArray(St(i, de)) ? [
                                            {}
                                        ] : []
                                    ],
                                    ref: {
                                        type: fe.type,
                                        name: de
                                    }
                                } : {
                                    ref: fe
                                }
                            }
                        }), k(de, !1, void 0, fe);
                    } else oe = St(r, de, {}), oe._f && (oe._f.mount = !1), (e.shouldUnregister || ae.shouldUnregister) && !(wq(a.array, de) && o.action) && a.unMount.add(de);
                }
            };
        }, Ce = ()=>e.shouldFocusError && b0(r, J, a.mount), Ne = (de)=>{
            ol(de) && (f.state.next({
                disabled: de
            }), b0(r, (ae, oe)=>{
                const $ = St(r, oe);
                $ && (ae.disabled = $._f.disabled || de, Array.isArray($._f.refs) && $._f.refs.forEach((H)=>{
                    H.disabled = $._f.disabled || de;
                }));
            }, 0, !1));
        }, Ve = (de, ae)=>async (oe)=>{
                let $;
                oe && (oe.preventDefault && oe.preventDefault(), oe.persist && oe.persist());
                let H = Xo(s);
                if (a.disabled.size) for (const fe of a.disabled)ur(H, fe, void 0);
                if (f.state.next({
                    isSubmitting: !0
                }), e.resolver) {
                    const { errors: fe, values: pe } = await L();
                    n.errors = fe, H = pe;
                } else await A(r);
                if (Qi(n.errors, "root"), Ko(n.errors)) {
                    f.state.next({
                        errors: {}
                    });
                    try {
                        await de(H, oe);
                    } catch (fe) {
                        $ = fe;
                    }
                } else ae && await ae({
                    ...n.errors
                }, oe), Ce(), setTimeout(Ce);
                if (f.state.next({
                    isSubmitted: !0,
                    isSubmitting: !1,
                    isSubmitSuccessful: Ko(n.errors) && !$,
                    submitCount: n.submitCount + 1,
                    errors: n.errors
                }), $) throw $;
            }, we = (de, ae = {})=>{
            St(r, de) && (Si(ae.defaultValue) ? te(de, Xo(St(i, de))) : (te(de, ae.defaultValue), ur(i, de, Xo(ae.defaultValue))), ae.keepTouched || Qi(n.touchedFields, de), ae.keepDirty || (Qi(n.dirtyFields, de), n.isDirty = ae.defaultValue ? B(de, Xo(St(i, de))) : B()), ae.keepError || (Qi(n.errors, de), u.isValid && _()), f.state.next({
                ...n
            }));
        }, Me = (de, ae = {})=>{
            const oe = de ? Xo(de) : i, $ = Xo(oe), H = Ko(de), fe = H ? i : $;
            if (ae.keepDefaultValues || (i = oe), !ae.keepValues) {
                if (ae.keepDirtyValues) {
                    const pe = new Set([
                        ...a.mount,
                        ...Object.keys(wx(i, s))
                    ]);
                    for (const me of Array.from(pe))St(n.dirtyFields, me) ? ur(fe, me, St(s, me)) : te(me, St(fe, me));
                } else {
                    if (kO && Si(de)) for (const pe of a.mount){
                        const me = St(r, pe);
                        if (me && me._f) {
                            const Ie = Array.isArray(me._f.refs) ? me._f.refs[0] : me._f.ref;
                            if (LE(Ie)) {
                                const Xe = Ie.closest("form");
                                if (Xe) {
                                    Xe.reset();
                                    break;
                                }
                            }
                        }
                    }
                    r = {};
                }
                s = e.shouldUnregister ? ae.keepDefaultValues ? Xo(i) : {} : Xo(fe), f.array.next({
                    values: {
                        ...fe
                    }
                }), f.values.next({
                    values: {
                        ...fe
                    }
                });
            }
            a = {
                mount: ae.keepDirtyValues ? a.mount : new Set,
                unMount: new Set,
                array: new Set,
                disabled: new Set,
                watch: new Set,
                watchAll: !1,
                focus: ""
            }, o.mount = !u.isValid || !!ae.keepIsValid || !!ae.keepDirtyValues, o.watch = !!e.shouldUnregister, f.state.next({
                submitCount: ae.keepSubmitCount ? n.submitCount : 0,
                isDirty: H ? !1 : ae.keepDirty ? n.isDirty : !!(ae.keepDefaultValues && !Rf(de, i)),
                isSubmitted: ae.keepIsSubmitted ? n.isSubmitted : !1,
                dirtyFields: H ? {} : ae.keepDirtyValues ? ae.keepDefaultValues && s ? wx(i, s) : n.dirtyFields : ae.keepDefaultValues && de ? wx(i, de) : ae.keepDirty ? n.dirtyFields : {},
                touchedFields: ae.keepTouched ? n.touchedFields : {},
                errors: ae.keepErrors ? n.errors : {},
                isSubmitSuccessful: ae.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
                isSubmitting: !1
            });
        }, se = (de, ae)=>Me(kc(de) ? de(s) : de, ae);
        return {
            control: {
                register: Ee,
                unregister: ge,
                getFieldState: le,
                handleSubmit: Ve,
                setError: ie,
                _executeSchema: L,
                _getWatch: U,
                _getDirty: B,
                _updateValid: _,
                _removeUnmounted: P,
                _updateFieldArray: M,
                _updateDisabledField: ve,
                _getFieldArray: j,
                _reset: Me,
                _resetDefaultValues: ()=>kc(e.defaultValues) && e.defaultValues().then((de)=>{
                        se(de, e.resetOptions), f.state.next({
                            isLoading: !1
                        });
                    }),
                _updateFormState: (de)=>{
                    n = {
                        ...n,
                        ...de
                    };
                },
                _disableForm: Ne,
                _subjects: f,
                _proxyFormState: u,
                _setErrors: T,
                get _fields () {
                    return r;
                },
                get _formValues () {
                    return s;
                },
                get _state () {
                    return o;
                },
                set _state (de){
                    o = de;
                },
                get _defaultValues () {
                    return i;
                },
                get _names () {
                    return a;
                },
                set _names (de){
                    a = de;
                },
                get _formState () {
                    return n;
                },
                set _formState (de){
                    n = de;
                },
                get _options () {
                    return e;
                },
                set _options (de){
                    e = {
                        ...e,
                        ...de
                    };
                }
            },
            trigger: Q,
            register: Ee,
            handleSubmit: Ve,
            watch: he,
            setValue: te,
            getValues: Y,
            reset: se,
            resetField: we,
            clearErrors: ue,
            unregister: ge,
            setError: ie,
            setFocus: (de, ae = {})=>{
                const oe = St(r, de), $ = oe && oe._f;
                if ($) {
                    const H = $.refs ? $.refs[0] : $.ref;
                    H.focus && (H.focus(), ae.shouldSelect && kc(H.select) && H.select());
                }
            },
            getFieldState: le
        };
    }
    function hs(t = {}) {
        const e = nr.useRef(void 0), n = nr.useRef(void 0), [r, i] = nr.useState({
            isDirty: !1,
            isValidating: !1,
            isLoading: kc(t.defaultValues),
            isSubmitted: !1,
            isSubmitting: !1,
            isSubmitSuccessful: !1,
            isValid: !1,
            submitCount: 0,
            dirtyFields: {},
            touchedFields: {},
            validatingFields: {},
            errors: t.errors || {},
            disabled: t.disabled || !1,
            defaultValues: kc(t.defaultValues) ? void 0 : t.defaultValues
        });
        e.current || (e.current = {
            ...Poe(t),
            formState: r
        });
        const s = e.current.control;
        return s._options = t, DO({
            subject: s._subjects.state,
            next: (o)=>{
                Eq(o, s._proxyFormState, s._updateFormState, !0) && i({
                    ...s._formState
                });
            }
        }), nr.useEffect(()=>s._disableForm(t.disabled), [
            s,
            t.disabled
        ]), nr.useEffect(()=>{
            if (s._proxyFormState.isDirty) {
                const o = s._getDirty();
                o !== r.isDirty && s._subjects.state.next({
                    isDirty: o
                });
            }
        }, [
            s,
            r.isDirty
        ]), nr.useEffect(()=>{
            t.values && !Rf(t.values, n.current) ? (s._reset(t.values, s._options.resetOptions), n.current = t.values, i((o)=>({
                    ...o
                }))) : s._resetDefaultValues();
        }, [
            t.values,
            s
        ]), nr.useEffect(()=>{
            t.errors && s._setErrors(t.errors);
        }, [
            t.errors,
            s
        ]), nr.useEffect(()=>{
            s._state.mount || (s._updateValid(), s._state.mount = !0), s._state.watch && (s._state.watch = !1, s._subjects.state.next({
                ...s._formState
            })), s._removeUnmounted();
        }), nr.useEffect(()=>{
            t.shouldUnregister && s._subjects.values.next({
                values: s._getWatch()
            });
        }, [
            t.shouldUnregister,
            s
        ]), e.current.formState = Sq(r, s), e.current;
    }
    const fj = (t, e, n)=>{
        if (t && "reportValidity" in t) {
            const r = St(n, e);
            t.setCustomValidity(r && r.message || ""), t.reportValidity();
        }
    }, Oq = (t, e)=>{
        for(const n in e.fields){
            const r = e.fields[n];
            r && r.ref && "reportValidity" in r.ref ? fj(r.ref, n, t) : r && r.refs && r.refs.forEach((i)=>fj(i, n, t));
        }
    }, koe = (t, e)=>{
        e.shouldUseNativeValidation && Oq(t, e);
        const n = {};
        for(const r in t){
            const i = St(e.fields, r), s = Object.assign(t[r] || {}, {
                ref: i && i.ref
            });
            if (Ooe(e.names || Object.keys(t), r)) {
                const o = Object.assign({}, St(n, r));
                ur(o, "root", s), ur(n, r, o);
            } else ur(n, r, s);
        }
        return n;
    }, Ooe = (t, e)=>t.some((n)=>n.match(`^${e}\\.\\d+`));
    function Loe(t, e) {
        for(var n = {}; t.length;){
            var r = t[0], i = r.code, s = r.message, o = r.path.join(".");
            if (!n[o]) if ("unionErrors" in r) {
                var a = r.unionErrors[0].errors[0];
                n[o] = {
                    message: a.message,
                    type: a.code
                };
            } else n[o] = {
                message: s,
                type: i
            };
            if ("unionErrors" in r && r.unionErrors.forEach(function(u) {
                return u.errors.forEach(function(f) {
                    return t.push(f);
                });
            }), e) {
                var l = n[o].types, c = l && l[r.code];
                n[o] = Cq(o, e, n, i, c ? [].concat(c, r.message) : r.message);
            }
            t.shift();
        }
        return n;
    }
    function ps(t, e, n) {
        return n === void 0 && (n = {}), function(r, i, s) {
            try {
                return Promise.resolve(function(o, a) {
                    try {
                        var l = Promise.resolve(t[n.mode === "sync" ? "parse" : "parseAsync"](r, e)).then(function(c) {
                            return s.shouldUseNativeValidation && Oq({}, s), {
                                errors: {},
                                values: n.raw ? Object.assign({}, r) : c
                            };
                        });
                    } catch (c) {
                        return a(c);
                    }
                    return l && l.then ? l.then(void 0, a) : l;
                }(0, function(o) {
                    if (function(a) {
                        return Array.isArray(a?.errors);
                    }(o)) return {
                        values: {},
                        errors: koe(Loe(o.errors, !s.shouldUseNativeValidation && s.criteriaMode === "all"), s)
                    };
                    throw o;
                }));
            } catch (o) {
                return Promise.reject(o);
            }
        };
    }
    var Lq = (t)=>{
        throw TypeError(t);
    }, Dq = (t, e, n)=>e.has(t) || Lq("Cannot " + n), dr = (t, e, n)=>(Dq(t, e, "read from private field"), n ? n.call(t) : e.get(t)), zl = (t, e, n)=>e.has(t) ? Lq("Cannot add the same private member more than once") : e instanceof WeakSet ? e.add(t) : e.set(t, n), nl = (t, e, n, r)=>(Dq(t, e, "write to private field"), e.set(t, n), n);
    const Fq = "KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHUobil7aWYobj09PSIvIilyZXR1cm57cGFyZW50Om51bGwsbmFtZToiIn07Y29uc3QgZT1uLnNwbGl0KCIvIikuZmlsdGVyKGk9PmkubGVuZ3RoPjApO2lmKGUubGVuZ3RoPT09MCl0aHJvdyBFcnJvcigiSW52YWxpZCBwYXRoIik7Y29uc3QgYT1lW2UubGVuZ3RoLTFdLHI9Ii8iK2Uuc2xpY2UoMCwtMSkuam9pbigiLyIpO3JldHVybntuYW1lOmEscGFyZW50OnJ9fWFzeW5jIGZ1bmN0aW9uIHcobixlKXtjb25zdHtwYXJlbnQ6YSxuYW1lOnJ9PXUobik7aWYoYT09bnVsbClyZXR1cm4gYXdhaXQgbmF2aWdhdG9yLnN0b3JhZ2UuZ2V0RGlyZWN0b3J5KCk7Y29uc3QgaT1hLnNwbGl0KCIvIikuZmlsdGVyKHQ9PnQubGVuZ3RoPjApO3RyeXtsZXQgdD1hd2FpdCBuYXZpZ2F0b3Iuc3RvcmFnZS5nZXREaXJlY3RvcnkoKTtmb3IoY29uc3QgcyBvZiBpKXQ9YXdhaXQgdC5nZXREaXJlY3RvcnlIYW5kbGUocyx7Y3JlYXRlOmUuY3JlYXRlfSk7aWYoZS5pc0ZpbGUpcmV0dXJuIGF3YWl0IHQuZ2V0RmlsZUhhbmRsZShyLHtjcmVhdGU6ZS5jcmVhdGV9KX1jYXRjaCh0KXtpZih0Lm5hbWU9PT0iTm90Rm91bmRFcnJvciIpcmV0dXJuIG51bGw7dGhyb3cgdH19Y29uc3QgZj17fTtzZWxmLm9ubWVzc2FnZT1hc3luYyBuPT57dmFyIGk7Y29uc3R7ZXZ0VHlwZTplLGFyZ3M6YX09bi5kYXRhO2xldCByPWZbYS5maWxlSWRdO3RyeXtsZXQgdDtjb25zdCBzPVtdO2lmKGU9PT0icmVnaXN0ZXIiKXtjb25zdCBsPWF3YWl0IHcoYS5maWxlUGF0aCx7Y3JlYXRlOiEwLGlzRmlsZTohMH0pO2lmKGw9PW51bGwpdGhyb3cgRXJyb3IoYG5vdCBmb3VuZCBmaWxlOiAke2EuZmlsZUlkfWApO3I9YXdhaXQgbC5jcmVhdGVTeW5jQWNjZXNzSGFuZGxlKHttb2RlOmEubW9kZX0pLGZbYS5maWxlSWRdPXJ9ZWxzZSBpZihlPT09ImNsb3NlIilhd2FpdCByLmNsb3NlKCksZGVsZXRlIGZbYS5maWxlSWRdO2Vsc2UgaWYoZT09PSJ0cnVuY2F0ZSIpYXdhaXQgci50cnVuY2F0ZShhLm5ld1NpemUpO2Vsc2UgaWYoZT09PSJ3cml0ZSIpe2NvbnN0e2RhdGE6bCxvcHRzOm99PW4uZGF0YS5hcmdzO3Q9YXdhaXQgci53cml0ZShsLG8pfWVsc2UgaWYoZT09PSJyZWFkIil7Y29uc3R7b2Zmc2V0Omwsc2l6ZTpvfT1uLmRhdGEuYXJncyxnPW5ldyBVaW50OEFycmF5KG8pLGQ9YXdhaXQgci5yZWFkKGcse2F0Omx9KSxjPWcuYnVmZmVyO3Q9ZD09PW8/YzooKGk9Yy50cmFuc2Zlcik9PW51bGw/dm9pZCAwOmkuY2FsbChjLGQpKT8/Yy5zbGljZSgwLGQpLHMucHVzaCh0KX1lbHNlIGU9PT0iZ2V0U2l6ZSI/dD1hd2FpdCByLmdldFNpemUoKTplPT09ImZsdXNoIiYmYXdhaXQgci5mbHVzaCgpO3NlbGYucG9zdE1lc3NhZ2Uoe2V2dFR5cGU6ImNhbGxiYWNrIixjYklkOm4uZGF0YS5jYklkLHJldHVyblZhbDp0fSxzKX1jYXRjaCh0KXtjb25zdCBzPXQ7c2VsZi5wb3N0TWVzc2FnZSh7ZXZ0VHlwZToidGhyb3dFcnJvciIsY2JJZDpuLmRhdGEuY2JJZCxlcnJNc2c6cy5uYW1lKyI6ICIrcy5tZXNzYWdlK2AKYCtKU09OLnN0cmluZ2lmeShuLmRhdGEpfSl9fX0pKCk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPW9wZnMtd29ya2VyLUY0UldscWNfLmpzLm1hcAo=", Doe = (t)=>Uint8Array.from(atob(t), (e)=>e.charCodeAt(0)), hj = typeof self < "u" && self.Blob && new Blob([
        Doe(Fq)
    ], {
        type: "text/javascript;charset=utf-8"
    });
    function Foe(t) {
        let e;
        try {
            if (e = hj && (self.URL || self.webkitURL).createObjectURL(hj), !e) throw "";
            const n = new Worker(e, {
                name: t?.name
            });
            return n.addEventListener("error", ()=>{
                (self.URL || self.webkitURL).revokeObjectURL(e);
            }), n;
        } catch  {
            return new Worker("data:text/javascript;base64," + Fq, {
                name: t?.name
            });
        } finally{
            e && (self.URL || self.webkitURL).revokeObjectURL(e);
        }
    }
    async function joe(t, e, n) {
        const r = Boe();
        return await r("register", {
            fileId: t,
            filePath: e,
            mode: n
        }), {
            read: async (i, s)=>await r("read", {
                    fileId: t,
                    offset: i,
                    size: s
                }),
            write: async (i, s)=>await r("write", {
                    fileId: t,
                    data: i,
                    opts: s
                }, [
                    ArrayBuffer.isView(i) ? i.buffer : i
                ]),
            close: async ()=>await r("close", {
                    fileId: t
                }),
            truncate: async (i)=>await r("truncate", {
                    fileId: t,
                    newSize: i
                }),
            getSize: async ()=>await r("getSize", {
                    fileId: t
                }),
            flush: async ()=>await r("flush", {
                    fileId: t
                })
        };
    }
    const z_ = [];
    let OR = 0;
    function Boe() {
        if (z_.length < 3) {
            const e = t();
            return z_.push(e), e;
        } else {
            const e = z_[OR];
            return OR = (OR + 1) % z_.length, e;
        }
        function t() {
            const e = new Foe;
            let n = 0, r = {};
            return e.onmessage = ({ data: i })=>{
                var s, o;
                i.evtType === "callback" ? (s = r[i.cbId]) == null || s.resolve(i.returnVal) : i.evtType === "throwError" && ((o = r[i.cbId]) == null || o.reject(Error(i.errMsg))), delete r[i.cbId];
            }, async function(i, s, o = []) {
                n += 1;
                const a = new Promise((l, c)=>{
                    r[n] = {
                        resolve: l,
                        reject: c
                    };
                });
                return e.postMessage({
                    cbId: n,
                    evtType: i,
                    args: s
                }, o), a;
            };
        }
    }
    function wT(t) {
        if (t === "/") return {
            parent: null,
            name: ""
        };
        const e = t.split("/").filter((i)=>i.length > 0);
        if (e.length === 0) throw Error("Invalid path");
        const n = e[e.length - 1], r = "/" + e.slice(0, -1).join("/");
        return {
            name: n,
            parent: r
        };
    }
    async function Pf(t, e) {
        const { parent: n, name: r } = wT(t);
        if (n == null) return await navigator.storage.getDirectory();
        const i = n.split("/").filter((s)=>s.length > 0);
        try {
            let s = await navigator.storage.getDirectory();
            for (const o of i)s = await s.getDirectoryHandle(o, {
                create: e.create
            });
            return e.isFile ? await s.getFileHandle(r, {
                create: e.create
            }) : await s.getDirectoryHandle(r, {
                create: e.create
            });
        } catch (s) {
            if (s.name === "NotFoundError") return null;
            throw s;
        }
    }
    async function jq(t) {
        const { parent: e, name: n } = wT(t);
        if (e == null) {
            const i = await navigator.storage.getDirectory();
            for await (const s of i.keys())await i.removeEntry(s, {
                recursive: !0
            });
            return;
        }
        const r = await Pf(e, {
            create: !1,
            isFile: !1
        });
        r != null && await r.removeEntry(n, {
            recursive: !0
        });
    }
    function zP(t, e) {
        return `${t}/${e}`.replace("//", "/");
    }
    function Np(t) {
        return new Uq(t);
    }
    var Ic, d1, Hx;
    const Uoe = class Bq {
        constructor(e){
            zl(this, Ic), zl(this, d1), zl(this, Hx), nl(this, Ic, e);
            const { parent: n, name: r } = wT(e);
            nl(this, d1, r), nl(this, Hx, n);
        }
        get kind() {
            return "dir";
        }
        get name() {
            return dr(this, d1);
        }
        get path() {
            return dr(this, Ic);
        }
        get parent() {
            return dr(this, Hx) == null ? null : Np(dr(this, Hx));
        }
        async create() {
            return await Pf(dr(this, Ic), {
                create: !0,
                isFile: !1
            }), Np(dr(this, Ic));
        }
        async exists() {
            return await Pf(dr(this, Ic), {
                create: !1,
                isFile: !1
            }) instanceof FileSystemDirectoryHandle;
        }
        async remove() {
            for (const e of await this.children())try {
                await e.remove();
            } catch (n) {
                console.warn(n);
            }
            try {
                await jq(dr(this, Ic));
            } catch (e) {
                console.warn(e);
            }
        }
        async children() {
            const e = await Pf(dr(this, Ic), {
                create: !1,
                isFile: !1
            });
            if (e == null) return [];
            const n = [];
            for await (const r of e.values())n.push((r.kind === "file" ? _T : Np)(zP(dr(this, Ic), r.name)));
            return n;
        }
        async copyTo(e) {
            if (!await this.exists()) throw Error(`dir ${this.path} not exists`);
            if (e instanceof Bq) {
                const n = await e.exists() ? Np(zP(e.path, this.name)) : e;
                await n.create(), await Promise.all((await this.children()).map((r)=>r.copyTo(n)));
                return;
            } else if (e instanceof FileSystemDirectoryHandle) {
                await Promise.all((await this.children()).map(async (n)=>{
                    n.kind === "file" ? await n.copyTo(await e.getFileHandle(n.name, {
                        create: !0
                    })) : await n.copyTo(await e.getDirectoryHandle(n.name, {
                        create: !0
                    }));
                }));
                return;
            }
            throw Error("Illegal target type");
        }
        async moveTo(e) {
            await this.copyTo(e), await this.remove();
        }
    };
    Ic = new WeakMap, d1 = new WeakMap, Hx = new WeakMap;
    let Uq = Uoe;
    const pj = new Map;
    function _T(t, e = "rw") {
        if (e === "rw") {
            const n = pj.get(t) ?? new jE(t, e);
            return pj.set(t, n), n;
        }
        return new jE(t, e);
    }
    async function zq(t, e, n = {
        overwrite: !0
    }) {
        if (e instanceof jE) {
            await zq(t, await e.stream(), n);
            return;
        }
        const r = await (t instanceof jE ? t : _T(t, "rw")).createWriter();
        try {
            if (n.overwrite && await r.truncate(0), e instanceof ReadableStream) {
                const i = e.getReader();
                for(;;){
                    const { done: s, value: o } = await i.read();
                    if (s) break;
                    await r.write(o);
                }
            } else await r.write(e);
        } catch (i) {
            throw i;
        } finally{
            await r.close();
        }
    }
    let zoe = 0;
    const Voe = ()=>++zoe;
    var Rc, $x, f1, Gx, h1, xf, p1, Xx;
    const Woe = class Vq {
        constructor(e, n){
            zl(this, Rc), zl(this, $x), zl(this, f1), zl(this, Gx), zl(this, h1), zl(this, xf, 0), zl(this, p1, (()=>{
                let s = null;
                return ()=>(nl(this, xf, dr(this, xf) + 1), s ?? (s = new Promise(async (o, a)=>{
                        try {
                            const l = await joe(dr(this, h1), dr(this, Rc), dr(this, Gx));
                            o([
                                l,
                                async ()=>{
                                    nl(this, xf, dr(this, xf) - 1), !(dr(this, xf) > 0) && (s = null, await l.close());
                                }
                            ]);
                        } catch (l) {
                            a(l);
                        }
                    })));
            })()), zl(this, Xx, !1), nl(this, h1, Voe()), nl(this, Rc, e), nl(this, Gx, {
                r: "read-only",
                rw: "readwrite",
                "rw-unsafe": "readwrite-unsafe"
            }[n]);
            const { parent: r, name: i } = wT(e);
            if (r == null) throw Error("Invalid path");
            nl(this, f1, i), nl(this, $x, r);
        }
        get kind() {
            return "file";
        }
        get path() {
            return dr(this, Rc);
        }
        get name() {
            return dr(this, f1);
        }
        get parent() {
            return dr(this, $x) == null ? null : Np(dr(this, $x));
        }
        async createWriter() {
            if (dr(this, Gx) === "read-only") throw Error("file is read-only");
            if (dr(this, Xx)) throw Error("Other writer have not been closed");
            nl(this, Xx, !0);
            const e = new TextEncoder, [n, r] = await dr(this, p1).call(this);
            let i = await n.getSize(), s = !1;
            return {
                write: async (o, a = {})=>{
                    if (s) throw Error("Writer is closed");
                    const l = typeof o == "string" ? e.encode(o) : o, c = a.at ?? i, u = l.byteLength;
                    return i = c + u, await n.write(l, {
                        at: c
                    });
                },
                truncate: async (o)=>{
                    if (s) throw Error("Writer is closed");
                    await n.truncate(o), i > o && (i = o);
                },
                flush: async ()=>{
                    if (s) throw Error("Writer is closed");
                    await n.flush();
                },
                close: async ()=>{
                    if (s) throw Error("Writer is closed");
                    s = !0, nl(this, Xx, !1), await r();
                }
            };
        }
        async createReader() {
            const [e, n] = await dr(this, p1).call(this);
            let r = !1, i = 0;
            return {
                read: async (s, o = {})=>{
                    if (r) throw Error("Reader is closed");
                    const a = o.at ?? i, l = await e.read(a, s);
                    return i = a + l.byteLength, l;
                },
                getSize: async ()=>{
                    if (r) throw Error("Reader is closed");
                    return await e.getSize();
                },
                close: async ()=>{
                    r || (r = !0, await n());
                }
            };
        }
        async text() {
            return new TextDecoder().decode(await this.arrayBuffer());
        }
        async arrayBuffer() {
            const e = await Pf(dr(this, Rc), {
                create: !1,
                isFile: !0
            });
            return e == null ? new ArrayBuffer(0) : (await e.getFile()).arrayBuffer();
        }
        async stream() {
            const e = await this.getOriginFile();
            return e == null ? new ReadableStream({
                pull: (n)=>{
                    n.close();
                }
            }) : e.stream();
        }
        async getOriginFile() {
            var e;
            return (e = await Pf(dr(this, Rc), {
                create: !1,
                isFile: !0
            })) == null ? void 0 : e.getFile();
        }
        async getSize() {
            const e = await Pf(dr(this, Rc), {
                create: !1,
                isFile: !0
            });
            return e == null ? 0 : (await e.getFile()).size;
        }
        async exists() {
            return await Pf(dr(this, Rc), {
                create: !1,
                isFile: !0
            }) instanceof FileSystemFileHandle;
        }
        async remove() {
            if (dr(this, xf)) throw Error("exists unclosed reader/writer");
            await jq(dr(this, Rc));
        }
        async copyTo(e) {
            if (e instanceof Vq) {
                if (e.path === this.path) return;
                await zq(e.path, this);
                return;
            } else if (e instanceof Uq) {
                if (!await this.exists()) throw Error(`file ${this.path} not exists`);
                return await this.copyTo(_T(zP(e.path, this.name)));
            } else if (e instanceof FileSystemFileHandle) {
                await (await this.stream()).pipeTo(await e.createWritable());
                return;
            }
            throw Error("Illegal target type");
        }
        async moveTo(e) {
            await this.copyTo(e), await this.remove();
        }
    };
    Rc = new WeakMap, $x = new WeakMap, f1 = new WeakMap, Gx = new WeakMap, h1 = new WeakMap, xf = new WeakMap, p1 = new WeakMap, Xx = new WeakMap;
    let jE = Woe;
    const Wq = "/.opfs-tools-temp-dir";
    async function qq(t) {
        try {
            if (t.kind === "file") {
                if (!await t.exists()) return !0;
                const e = await t.createWriter();
                await e.truncate(0), await e.close(), await t.remove();
            } else await t.remove();
            return !0;
        } catch (e) {
            return console.warn(e), !1;
        }
    }
    function qoe() {
        setInterval(async ()=>{
            for (const t of await Np(Wq).children()){
                const e = /^\d+-(\d+)$/.exec(t.name);
                (e == null || Date.now() - Number(e[1]) > 2592e5) && await qq(t);
            }
        }, 60 * 1e3);
    }
    const mj = [];
    let gj = !1;
    async function Hoe() {
        if (globalThis.localStorage == null) return;
        const t = "OPFS_TOOLS_EXPIRES_TMP_FILES";
        gj || (gj = !0, globalThis.addEventListener("unload", ()=>{
            mj.length !== 0 && localStorage.setItem(t, `${localStorage.getItem(t) ?? ""},${mj.join(",")}`);
        }));
        let e = localStorage.getItem(t) ?? "";
        for (const n of e.split(","))n.length !== 0 && await qq(_T(`${Wq}/${n}`)) && (e = e.replace(n, ""));
        localStorage.setItem(t, e.replace(/,{2,}/g, ","));
    }
    (async function() {
        var t;
        globalThis.__opfs_tools_tmpfile_init__ !== !0 && (globalThis.__opfs_tools_tmpfile_init__ = !0, !(globalThis.FileSystemDirectoryHandle == null || globalThis.FileSystemFileHandle == null || ((t = globalThis.navigator) == null ? void 0 : t.storage.getDirectory) == null) && (qoe(), await Hoe()));
    })();
    const $oe = "icon-[cil--arrow-right]", Hq = "icon-[et--map]", Goe = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                name: G.string().min(1),
                cycles: G.number().int(),
                sort: G.number().int(),
                limit: G.number().int(),
                image: G.string().nullish()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "name",
                "cycles",
                "sort",
                "limit",
                "image"
            ]
        }), Xoe = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                blueprintId: G.string().min(1),
                conflictId: G.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintId",
                "conflictId"
            ]
        }), Koe = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                blueprintId: G.string().min(1),
                dependencyId: G.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintId",
                "dependencyId"
            ]
        }), Yoe = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                blueprintId: G.string().min(1),
                inventoryId: G.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintId",
                "inventoryId"
            ]
        }), Zoe = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                blueprintId: G.string().min(1),
                resourceId: G.string().min(1),
                amount: G.number(),
                cycles: G.number().int()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintId",
                "resourceId",
                "amount",
                "cycles"
            ]
        }), Joe = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                blueprintProductionId: G.string().min(1),
                blueprintId: G.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintProductionId",
                "blueprintId"
            ]
        }), Qoe = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                blueprintProductionId: G.string().min(1),
                resourceId: G.string().min(1),
                amount: G.number(),
                passive: hl()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintProductionId",
                "resourceId",
                "amount",
                "passive"
            ]
        }), eae = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                blueprintProductionId: G.string().min(1),
                resourceId: G.string().min(1),
                amount: G.number()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintProductionId",
                "resourceId",
                "amount"
            ]
        }), tae = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                blueprintId: G.string().min(1),
                resourceId: G.string().min(1),
                amount: G.number(),
                passive: hl()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintId",
                "resourceId",
                "amount",
                "passive"
            ]
        }), nae = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                userId: G.string().min(1),
                plotId: G.string().min(1),
                blueprintId: G.string().min(1),
                constructionId: G.string().nullish(),
                landId: G.string().min(1),
                productionId: G.string().nullish(),
                recurringProductionId: G.string().nullish(),
                valid: hl()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "userId",
                "plotId",
                "blueprintId",
                "constructionId",
                "landId",
                "productionId",
                "recurringProductionId",
                "valid"
            ]
        }), rae = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                resourceId: G.string().min(1),
                amount: G.number(),
                limit: G.number(),
                type: G.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "resourceId",
                "amount",
                "limit",
                "type"
            ]
        }), iae = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                userId: G.string().min(1),
                name: G.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "userId",
                "name"
            ]
        }), sae = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                name: G.string().min(1),
                probability: G.number().int(),
                limit: G.number().int(),
                image: G.string().nullish()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "name",
                "probability",
                "limit",
                "image"
            ]
        }), oae = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                name: G.string().min(1),
                weight: G.number().int(),
                image: G.string().nullish()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "name",
                "weight",
                "image"
            ]
        }), aae = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                code: G.string().min(1),
                label: G.string().min(1),
                group: G.string().nullish(),
                sort: G.number().int()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "code",
                "label",
                "group",
                "sort"
            ]
        }), lae = ({ shape: t, filter: e })=>eo({
            entity: Js.merge(G.object({
                name: G.string().min(1),
                login: G.string().min(1),
                password: G.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "name",
                "login",
                "password"
            ]
        }), cae = iae({
        shape: G.object({
            name: G.string().min(1)
        }),
        filter: Qs
    }), uae = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(cae.shape),
            defaultValues: {
                name: "",
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "name",
                    label: v.jsx(ne, {
                        label: "Map name (label)"
                    }),
                    required: !0,
                    children: v.jsx("input", {
                        type: "text",
                        className: o.input(),
                        ...s.register("name")
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: Hq,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Create map (submit)"
                        })
                    })
                })
            ]
        });
    }, $q = jt("/$locale/apps/derivean/game/")({
        async loader ({ context: { queryClient: t, kysely: e, session: n } }) {
            const r = await n();
            return {
                user: r,
                map: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        "map",
                        r.id
                    ],
                    async queryFn () {
                        return e.transaction().execute((i)=>As({
                                select: i.selectFrom("Map as m").select([
                                    "m.id",
                                    "m.name"
                                ]).where("m.userId", "=", r.id),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1)
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { user: t, map: e } = $q.useLoaderData(), { tva: n } = Lr({
                from: "__root__"
            }), r = n().slots, i = kr([
                [
                    "GameMap"
                ]
            ]), { locale: s } = tn({
                from: "/$locale"
            }), o = dm(), a = an({
                async mutationFn ({ id: l }) {
                    return At.transaction().execute(async (c)=>Promise.all([
                            c.deleteFrom("Map").where("id", "=", l).where("userId", "=", t.id).execute(),
                            Np(`/chunk/${l}`).remove()
                        ]));
                },
                async onSuccess () {
                    await i();
                }
            });
            return v.jsxs("div", {
                className: r.base({
                    css: [
                        "w-1/2",
                        "mx-auto",
                        "mt-24",
                        "flex",
                        "flex-col",
                        "gap-6"
                    ]
                }),
                children: [
                    v.jsx("div", {
                        className: "font-bold text-lg border-b border-slate-300",
                        children: v.jsx(ne, {
                            label: "Map list (label)"
                        })
                    }),
                    e.length > 0 ? e.map((l)=>v.jsxs("div", {
                            className: dn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "justify-between",
                                "p-4",
                                "border",
                                "rounded-sm",
                                "border-slate-200",
                                "hover:border-slate-300",
                                "hover:bg-slate-100"
                            ]),
                            children: [
                                v.jsx(Rt, {
                                    icon: $oe,
                                    to: "/$locale/apps/derivean/map/$mapId/view",
                                    params: {
                                        locale: s,
                                        mapId: l.id
                                    },
                                    children: l.name
                                }),
                                v.jsx("div", {
                                    children: v.jsx(Dn, {
                                        iconEnabled: Ri,
                                        variant: {
                                            variant: "danger"
                                        },
                                        loading: a.isPending,
                                        onClick: ()=>{
                                            a.mutate({
                                                id: l.id
                                            });
                                        }
                                    })
                                })
                            ]
                        }, l.id)) : v.jsx("div", {
                        className: dn([
                            "flex",
                            "items-center",
                            "justify-center",
                            "rounded-sm",
                            "border",
                            "border-amber-400",
                            "p-4",
                            "bg-amber-200",
                            "font-bold"
                        ]),
                        children: v.jsx(ne, {
                            label: "There are no maps (label)"
                        })
                    }),
                    v.jsx("div", {
                        className: "font-bold text-lg border-b border-slate-300",
                        children: v.jsx(ne, {
                            label: "New map (label)"
                        })
                    }),
                    v.jsx("div", {
                        children: v.jsx(uae, {
                            mutation: an({
                                async mutationFn (l) {
                                    return At.transaction().execute((c)=>c.insertInto("Map").values({
                                            id: Kn(),
                                            userId: t.id,
                                            ...l
                                        }).returning("id").executeTakeFirstOrThrow());
                                },
                                async onSuccess (l) {
                                    o({
                                        to: "/$locale/apps/derivean/map/$mapId/view",
                                        params: {
                                            locale: s,
                                            mapId: l.id
                                        }
                                    }), await i();
                                }
                            })
                        })
                    })
                ]
            });
        }
    });
    var LR, yj;
    function BO() {
        if (yj) return LR;
        yj = 1;
        var t = "\0", e = "\0", n = "";
        class r {
            _isDirected = !0;
            _isMultigraph = !1;
            _isCompound = !1;
            _label;
            _defaultNodeLabelFn = ()=>{};
            _defaultEdgeLabelFn = ()=>{};
            _nodes = {};
            _in = {};
            _preds = {};
            _out = {};
            _sucs = {};
            _edgeObjs = {};
            _edgeLabels = {};
            _nodeCount = 0;
            _edgeCount = 0;
            _parent;
            _children;
            constructor(u){
                u && (this._isDirected = Object.hasOwn(u, "directed") ? u.directed : !0, this._isMultigraph = Object.hasOwn(u, "multigraph") ? u.multigraph : !1, this._isCompound = Object.hasOwn(u, "compound") ? u.compound : !1), this._isCompound && (this._parent = {}, this._children = {}, this._children[e] = {});
            }
            isDirected() {
                return this._isDirected;
            }
            isMultigraph() {
                return this._isMultigraph;
            }
            isCompound() {
                return this._isCompound;
            }
            setGraph(u) {
                return this._label = u, this;
            }
            graph() {
                return this._label;
            }
            setDefaultNodeLabel(u) {
                return this._defaultNodeLabelFn = u, typeof u != "function" && (this._defaultNodeLabelFn = ()=>u), this;
            }
            nodeCount() {
                return this._nodeCount;
            }
            nodes() {
                return Object.keys(this._nodes);
            }
            sources() {
                var u = this;
                return this.nodes().filter((f)=>Object.keys(u._in[f]).length === 0);
            }
            sinks() {
                var u = this;
                return this.nodes().filter((f)=>Object.keys(u._out[f]).length === 0);
            }
            setNodes(u, f) {
                var p = arguments, g = this;
                return u.forEach(function(x) {
                    p.length > 1 ? g.setNode(x, f) : g.setNode(x);
                }), this;
            }
            setNode(u, f) {
                return Object.hasOwn(this._nodes, u) ? (arguments.length > 1 && (this._nodes[u] = f), this) : (this._nodes[u] = arguments.length > 1 ? f : this._defaultNodeLabelFn(u), this._isCompound && (this._parent[u] = e, this._children[u] = {}, this._children[e][u] = !0), this._in[u] = {}, this._preds[u] = {}, this._out[u] = {}, this._sucs[u] = {}, ++this._nodeCount, this);
            }
            node(u) {
                return this._nodes[u];
            }
            hasNode(u) {
                return Object.hasOwn(this._nodes, u);
            }
            removeNode(u) {
                var f = this;
                if (Object.hasOwn(this._nodes, u)) {
                    var p = (g)=>f.removeEdge(f._edgeObjs[g]);
                    delete this._nodes[u], this._isCompound && (this._removeFromParentsChildList(u), delete this._parent[u], this.children(u).forEach(function(g) {
                        f.setParent(g);
                    }), delete this._children[u]), Object.keys(this._in[u]).forEach(p), delete this._in[u], delete this._preds[u], Object.keys(this._out[u]).forEach(p), delete this._out[u], delete this._sucs[u], --this._nodeCount;
                }
                return this;
            }
            setParent(u, f) {
                if (!this._isCompound) throw new Error("Cannot set parent in a non-compound graph");
                if (f === void 0) f = e;
                else {
                    f += "";
                    for(var p = f; p !== void 0; p = this.parent(p))if (p === u) throw new Error("Setting " + f + " as parent of " + u + " would create a cycle");
                    this.setNode(f);
                }
                return this.setNode(u), this._removeFromParentsChildList(u), this._parent[u] = f, this._children[f][u] = !0, this;
            }
            _removeFromParentsChildList(u) {
                delete this._children[this._parent[u]][u];
            }
            parent(u) {
                if (this._isCompound) {
                    var f = this._parent[u];
                    if (f !== e) return f;
                }
            }
            children(u = e) {
                if (this._isCompound) {
                    var f = this._children[u];
                    if (f) return Object.keys(f);
                } else {
                    if (u === e) return this.nodes();
                    if (this.hasNode(u)) return [];
                }
            }
            predecessors(u) {
                var f = this._preds[u];
                if (f) return Object.keys(f);
            }
            successors(u) {
                var f = this._sucs[u];
                if (f) return Object.keys(f);
            }
            neighbors(u) {
                var f = this.predecessors(u);
                if (f) {
                    const g = new Set(f);
                    for (var p of this.successors(u))g.add(p);
                    return Array.from(g.values());
                }
            }
            isLeaf(u) {
                var f;
                return this.isDirected() ? f = this.successors(u) : f = this.neighbors(u), f.length === 0;
            }
            filterNodes(u) {
                var f = new this.constructor({
                    directed: this._isDirected,
                    multigraph: this._isMultigraph,
                    compound: this._isCompound
                });
                f.setGraph(this.graph());
                var p = this;
                Object.entries(this._nodes).forEach(function([S, _]) {
                    u(S) && f.setNode(S, _);
                }), Object.values(this._edgeObjs).forEach(function(S) {
                    f.hasNode(S.v) && f.hasNode(S.w) && f.setEdge(S, p.edge(S));
                });
                var g = {};
                function x(S) {
                    var _ = p.parent(S);
                    return _ === void 0 || f.hasNode(_) ? (g[S] = _, _) : _ in g ? g[_] : x(_);
                }
                return this._isCompound && f.nodes().forEach((S)=>f.setParent(S, x(S))), f;
            }
            setDefaultEdgeLabel(u) {
                return this._defaultEdgeLabelFn = u, typeof u != "function" && (this._defaultEdgeLabelFn = ()=>u), this;
            }
            edgeCount() {
                return this._edgeCount;
            }
            edges() {
                return Object.values(this._edgeObjs);
            }
            setPath(u, f) {
                var p = this, g = arguments;
                return u.reduce(function(x, S) {
                    return g.length > 1 ? p.setEdge(x, S, f) : p.setEdge(x, S), S;
                }), this;
            }
            setEdge() {
                var u, f, p, g, x = !1, S = arguments[0];
                typeof S == "object" && S !== null && "v" in S ? (u = S.v, f = S.w, p = S.name, arguments.length === 2 && (g = arguments[1], x = !0)) : (u = S, f = arguments[1], p = arguments[3], arguments.length > 2 && (g = arguments[2], x = !0)), u = "" + u, f = "" + f, p !== void 0 && (p = "" + p);
                var _ = o(this._isDirected, u, f, p);
                if (Object.hasOwn(this._edgeLabels, _)) return x && (this._edgeLabels[_] = g), this;
                if (p !== void 0 && !this._isMultigraph) throw new Error("Cannot set a named edge when isMultigraph = false");
                this.setNode(u), this.setNode(f), this._edgeLabels[_] = x ? g : this._defaultEdgeLabelFn(u, f, p);
                var b = a(this._isDirected, u, f, p);
                return u = b.v, f = b.w, Object.freeze(b), this._edgeObjs[_] = b, i(this._preds[f], u), i(this._sucs[u], f), this._in[f][_] = b, this._out[u][_] = b, this._edgeCount++, this;
            }
            edge(u, f, p) {
                var g = arguments.length === 1 ? l(this._isDirected, arguments[0]) : o(this._isDirected, u, f, p);
                return this._edgeLabels[g];
            }
            edgeAsObj() {
                const u = this.edge(...arguments);
                return typeof u != "object" ? {
                    label: u
                } : u;
            }
            hasEdge(u, f, p) {
                var g = arguments.length === 1 ? l(this._isDirected, arguments[0]) : o(this._isDirected, u, f, p);
                return Object.hasOwn(this._edgeLabels, g);
            }
            removeEdge(u, f, p) {
                var g = arguments.length === 1 ? l(this._isDirected, arguments[0]) : o(this._isDirected, u, f, p), x = this._edgeObjs[g];
                return x && (u = x.v, f = x.w, delete this._edgeLabels[g], delete this._edgeObjs[g], s(this._preds[f], u), s(this._sucs[u], f), delete this._in[f][g], delete this._out[u][g], this._edgeCount--), this;
            }
            inEdges(u, f) {
                var p = this._in[u];
                if (p) {
                    var g = Object.values(p);
                    return f ? g.filter((x)=>x.v === f) : g;
                }
            }
            outEdges(u, f) {
                var p = this._out[u];
                if (p) {
                    var g = Object.values(p);
                    return f ? g.filter((x)=>x.w === f) : g;
                }
            }
            nodeEdges(u, f) {
                var p = this.inEdges(u, f);
                if (p) return p.concat(this.outEdges(u, f));
            }
        }
        function i(c, u) {
            c[u] ? c[u]++ : c[u] = 1;
        }
        function s(c, u) {
            --c[u] || delete c[u];
        }
        function o(c, u, f, p) {
            var g = "" + u, x = "" + f;
            if (!c && g > x) {
                var S = g;
                g = x, x = S;
            }
            return g + n + x + n + (p === void 0 ? t : p);
        }
        function a(c, u, f, p) {
            var g = "" + u, x = "" + f;
            if (!c && g > x) {
                var S = g;
                g = x, x = S;
            }
            var _ = {
                v: g,
                w: x
            };
            return p && (_.name = p), _;
        }
        function l(c, u) {
            return o(c, u.v, u.w, u.name);
        }
        return LR = r, LR;
    }
    var DR, vj;
    function dae() {
        return vj || (vj = 1, DR = "2.2.4"), DR;
    }
    var FR, xj;
    function fae() {
        return xj || (xj = 1, FR = {
            Graph: BO(),
            version: dae()
        }), FR;
    }
    var jR, bj;
    function hae() {
        if (bj) return jR;
        bj = 1;
        var t = BO();
        jR = {
            write: e,
            read: i
        };
        function e(s) {
            var o = {
                options: {
                    directed: s.isDirected(),
                    multigraph: s.isMultigraph(),
                    compound: s.isCompound()
                },
                nodes: n(s),
                edges: r(s)
            };
            return s.graph() !== void 0 && (o.value = structuredClone(s.graph())), o;
        }
        function n(s) {
            return s.nodes().map(function(o) {
                var a = s.node(o), l = s.parent(o), c = {
                    v: o
                };
                return a !== void 0 && (c.value = a), l !== void 0 && (c.parent = l), c;
            });
        }
        function r(s) {
            return s.edges().map(function(o) {
                var a = s.edge(o), l = {
                    v: o.v,
                    w: o.w
                };
                return o.name !== void 0 && (l.name = o.name), a !== void 0 && (l.value = a), l;
            });
        }
        function i(s) {
            var o = new t(s.options).setGraph(s.value);
            return s.nodes.forEach(function(a) {
                o.setNode(a.v, a.value), a.parent && o.setParent(a.v, a.parent);
            }), s.edges.forEach(function(a) {
                o.setEdge({
                    v: a.v,
                    w: a.w,
                    name: a.name
                }, a.value);
            }), o;
        }
        return jR;
    }
    var BR, wj;
    function pae() {
        if (wj) return BR;
        wj = 1, BR = t;
        function t(e) {
            var n = {}, r = [], i;
            function s(o) {
                Object.hasOwn(n, o) || (n[o] = !0, i.push(o), e.successors(o).forEach(s), e.predecessors(o).forEach(s));
            }
            return e.nodes().forEach(function(o) {
                i = [], s(o), i.length && r.push(i);
            }), r;
        }
        return BR;
    }
    var UR, _j;
    function Gq() {
        if (_j) return UR;
        _j = 1;
        class t {
            _arr = [];
            _keyIndices = {};
            size() {
                return this._arr.length;
            }
            keys() {
                return this._arr.map(function(n) {
                    return n.key;
                });
            }
            has(n) {
                return Object.hasOwn(this._keyIndices, n);
            }
            priority(n) {
                var r = this._keyIndices[n];
                if (r !== void 0) return this._arr[r].priority;
            }
            min() {
                if (this.size() === 0) throw new Error("Queue underflow");
                return this._arr[0].key;
            }
            add(n, r) {
                var i = this._keyIndices;
                if (n = String(n), !Object.hasOwn(i, n)) {
                    var s = this._arr, o = s.length;
                    return i[n] = o, s.push({
                        key: n,
                        priority: r
                    }), this._decrease(o), !0;
                }
                return !1;
            }
            removeMin() {
                this._swap(0, this._arr.length - 1);
                var n = this._arr.pop();
                return delete this._keyIndices[n.key], this._heapify(0), n.key;
            }
            decrease(n, r) {
                var i = this._keyIndices[n];
                if (r > this._arr[i].priority) throw new Error("New priority is greater than current priority. Key: " + n + " Old: " + this._arr[i].priority + " New: " + r);
                this._arr[i].priority = r, this._decrease(i);
            }
            _heapify(n) {
                var r = this._arr, i = 2 * n, s = i + 1, o = n;
                i < r.length && (o = r[i].priority < r[o].priority ? i : o, s < r.length && (o = r[s].priority < r[o].priority ? s : o), o !== n && (this._swap(n, o), this._heapify(o)));
            }
            _decrease(n) {
                for(var r = this._arr, i = r[n].priority, s; n !== 0 && (s = n >> 1, !(r[s].priority < i));)this._swap(n, s), n = s;
            }
            _swap(n, r) {
                var i = this._arr, s = this._keyIndices, o = i[n], a = i[r];
                i[n] = a, i[r] = o, s[a.key] = n, s[o.key] = r;
            }
        }
        return UR = t, UR;
    }
    var zR, Sj;
    function Xq() {
        if (Sj) return zR;
        Sj = 1;
        var t = Gq();
        zR = n;
        var e = ()=>1;
        function n(i, s, o, a) {
            return r(i, String(s), o || e, a || function(l) {
                return i.outEdges(l);
            });
        }
        function r(i, s, o, a) {
            var l = {}, c = new t, u, f, p = function(g) {
                var x = g.v !== u ? g.v : g.w, S = l[x], _ = o(g), b = f.distance + _;
                if (_ < 0) throw new Error("dijkstra does not allow negative edge weights. Bad edge: " + g + " Weight: " + _);
                b < S.distance && (S.distance = b, S.predecessor = u, c.decrease(x, b));
            };
            for(i.nodes().forEach(function(g) {
                var x = g === s ? 0 : Number.POSITIVE_INFINITY;
                l[g] = {
                    distance: x
                }, c.add(g, x);
            }); c.size() > 0 && (u = c.removeMin(), f = l[u], f.distance !== Number.POSITIVE_INFINITY);)a(u).forEach(p);
            return l;
        }
        return zR;
    }
    var VR, Ej;
    function mae() {
        if (Ej) return VR;
        Ej = 1;
        var t = Xq();
        VR = e;
        function e(n, r, i) {
            return n.nodes().reduce(function(s, o) {
                return s[o] = t(n, o, r, i), s;
            }, {});
        }
        return VR;
    }
    var WR, Mj;
    function Kq() {
        if (Mj) return WR;
        Mj = 1, WR = t;
        function t(e) {
            var n = 0, r = [], i = {}, s = [];
            function o(a) {
                var l = i[a] = {
                    onStack: !0,
                    lowlink: n,
                    index: n++
                };
                if (r.push(a), e.successors(a).forEach(function(f) {
                    Object.hasOwn(i, f) ? i[f].onStack && (l.lowlink = Math.min(l.lowlink, i[f].index)) : (o(f), l.lowlink = Math.min(l.lowlink, i[f].lowlink));
                }), l.lowlink === l.index) {
                    var c = [], u;
                    do u = r.pop(), i[u].onStack = !1, c.push(u);
                    while (a !== u);
                    s.push(c);
                }
            }
            return e.nodes().forEach(function(a) {
                Object.hasOwn(i, a) || o(a);
            }), s;
        }
        return WR;
    }
    var qR, Tj;
    function gae() {
        if (Tj) return qR;
        Tj = 1;
        var t = Kq();
        qR = e;
        function e(n) {
            return t(n).filter(function(r) {
                return r.length > 1 || r.length === 1 && n.hasEdge(r[0], r[0]);
            });
        }
        return qR;
    }
    var HR, Cj;
    function yae() {
        if (Cj) return HR;
        Cj = 1, HR = e;
        var t = ()=>1;
        function e(r, i, s) {
            return n(r, i || t, s || function(o) {
                return r.outEdges(o);
            });
        }
        function n(r, i, s) {
            var o = {}, a = r.nodes();
            return a.forEach(function(l) {
                o[l] = {}, o[l][l] = {
                    distance: 0
                }, a.forEach(function(c) {
                    l !== c && (o[l][c] = {
                        distance: Number.POSITIVE_INFINITY
                    });
                }), s(l).forEach(function(c) {
                    var u = c.v === l ? c.w : c.v, f = i(c);
                    o[l][u] = {
                        distance: f,
                        predecessor: l
                    };
                });
            }), a.forEach(function(l) {
                var c = o[l];
                a.forEach(function(u) {
                    var f = o[u];
                    a.forEach(function(p) {
                        var g = f[l], x = c[p], S = f[p], _ = g.distance + x.distance;
                        _ < S.distance && (S.distance = _, S.predecessor = x.predecessor);
                    });
                });
            }), o;
        }
        return HR;
    }
    var $R, Ij;
    function Yq() {
        if (Ij) return $R;
        Ij = 1;
        function t(n) {
            var r = {}, i = {}, s = [];
            function o(a) {
                if (Object.hasOwn(i, a)) throw new e;
                Object.hasOwn(r, a) || (i[a] = !0, r[a] = !0, n.predecessors(a).forEach(o), delete i[a], s.push(a));
            }
            if (n.sinks().forEach(o), Object.keys(r).length !== n.nodeCount()) throw new e;
            return s;
        }
        class e extends Error {
            constructor(){
                super(...arguments);
            }
        }
        return $R = t, t.CycleException = e, $R;
    }
    var GR, Rj;
    function vae() {
        if (Rj) return GR;
        Rj = 1;
        var t = Yq();
        GR = e;
        function e(n) {
            try {
                t(n);
            } catch (r) {
                if (r instanceof t.CycleException) return !1;
                throw r;
            }
            return !0;
        }
        return GR;
    }
    var XR, Aj;
    function Zq() {
        if (Aj) return XR;
        Aj = 1, XR = t;
        function t(i, s, o) {
            Array.isArray(s) || (s = [
                s
            ]);
            var a = i.isDirected() ? (f)=>i.successors(f) : (f)=>i.neighbors(f), l = o === "post" ? e : n, c = [], u = {};
            return s.forEach((f)=>{
                if (!i.hasNode(f)) throw new Error("Graph does not have node: " + f);
                l(f, a, u, c);
            }), c;
        }
        function e(i, s, o, a) {
            for(var l = [
                [
                    i,
                    !1
                ]
            ]; l.length > 0;){
                var c = l.pop();
                c[1] ? a.push(c[0]) : Object.hasOwn(o, c[0]) || (o[c[0]] = !0, l.push([
                    c[0],
                    !0
                ]), r(s(c[0]), (u)=>l.push([
                        u,
                        !1
                    ])));
            }
        }
        function n(i, s, o, a) {
            for(var l = [
                i
            ]; l.length > 0;){
                var c = l.pop();
                Object.hasOwn(o, c) || (o[c] = !0, a.push(c), r(s(c), (u)=>l.push(u)));
            }
        }
        function r(i, s) {
            for(var o = i.length; o--;)s(i[o], o, i);
            return i;
        }
        return XR;
    }
    var KR, Nj;
    function xae() {
        if (Nj) return KR;
        Nj = 1;
        var t = Zq();
        KR = e;
        function e(n, r) {
            return t(n, r, "post");
        }
        return KR;
    }
    var YR, Pj;
    function bae() {
        if (Pj) return YR;
        Pj = 1;
        var t = Zq();
        YR = e;
        function e(n, r) {
            return t(n, r, "pre");
        }
        return YR;
    }
    var ZR, kj;
    function wae() {
        if (kj) return ZR;
        kj = 1;
        var t = BO(), e = Gq();
        ZR = n;
        function n(r, i) {
            var s = new t, o = {}, a = new e, l;
            function c(f) {
                var p = f.v === l ? f.w : f.v, g = a.priority(p);
                if (g !== void 0) {
                    var x = i(f);
                    x < g && (o[p] = l, a.decrease(p, x));
                }
            }
            if (r.nodeCount() === 0) return s;
            r.nodes().forEach(function(f) {
                a.add(f, Number.POSITIVE_INFINITY), s.setNode(f);
            }), a.decrease(r.nodes()[0], 0);
            for(var u = !1; a.size() > 0;){
                if (l = a.removeMin(), Object.hasOwn(o, l)) s.setEdge(l, o[l]);
                else {
                    if (u) throw new Error("Input graph is not connected: " + r);
                    u = !0;
                }
                r.nodeEdges(l).forEach(c);
            }
            return s;
        }
        return ZR;
    }
    var JR, Oj;
    function _ae() {
        return Oj || (Oj = 1, JR = {
            components: pae(),
            dijkstra: Xq(),
            dijkstraAll: mae(),
            findCycles: gae(),
            floydWarshall: yae(),
            isAcyclic: vae(),
            postorder: xae(),
            preorder: bae(),
            prim: wae(),
            tarjan: Kq(),
            topsort: Yq()
        }), JR;
    }
    var QR, Lj;
    function ic() {
        if (Lj) return QR;
        Lj = 1;
        var t = fae();
        return QR = {
            Graph: t.Graph,
            json: hae(),
            alg: _ae(),
            version: t.version
        }, QR;
    }
    var eA, Dj;
    function Sae() {
        if (Dj) return eA;
        Dj = 1;
        class t {
            constructor(){
                let i = {};
                i._next = i._prev = i, this._sentinel = i;
            }
            dequeue() {
                let i = this._sentinel, s = i._prev;
                if (s !== i) return e(s), s;
            }
            enqueue(i) {
                let s = this._sentinel;
                i._prev && i._next && e(i), i._next = s._next, s._next._prev = i, s._next = i, i._prev = s;
            }
            toString() {
                let i = [], s = this._sentinel, o = s._prev;
                for(; o !== s;)i.push(JSON.stringify(o, n)), o = o._prev;
                return "[" + i.join(", ") + "]";
            }
        }
        function e(r) {
            r._prev._next = r._next, r._next._prev = r._prev, delete r._next, delete r._prev;
        }
        function n(r, i) {
            if (r !== "_next" && r !== "_prev") return i;
        }
        return eA = t, eA;
    }
    var tA, Fj;
    function Eae() {
        if (Fj) return tA;
        Fj = 1;
        let t = ic().Graph, e = Sae();
        tA = r;
        let n = ()=>1;
        function r(c, u) {
            if (c.nodeCount() <= 1) return [];
            let f = o(c, u || n);
            return i(f.graph, f.buckets, f.zeroIdx).flatMap((g)=>c.outEdges(g.v, g.w));
        }
        function i(c, u, f) {
            let p = [], g = u[u.length - 1], x = u[0], S;
            for(; c.nodeCount();){
                for(; S = x.dequeue();)s(c, u, f, S);
                for(; S = g.dequeue();)s(c, u, f, S);
                if (c.nodeCount()) {
                    for(let _ = u.length - 2; _ > 0; --_)if (S = u[_].dequeue(), S) {
                        p = p.concat(s(c, u, f, S, !0));
                        break;
                    }
                }
            }
            return p;
        }
        function s(c, u, f, p, g) {
            let x = g ? [] : void 0;
            return c.inEdges(p.v).forEach((S)=>{
                let _ = c.edge(S), b = c.node(S.v);
                g && x.push({
                    v: S.v,
                    w: S.w
                }), b.out -= _, a(u, f, b);
            }), c.outEdges(p.v).forEach((S)=>{
                let _ = c.edge(S), b = S.w, M = c.node(b);
                M.in -= _, a(u, f, M);
            }), c.removeNode(p.v), x;
        }
        function o(c, u) {
            let f = new t, p = 0, g = 0;
            c.nodes().forEach((_)=>{
                f.setNode(_, {
                    v: _,
                    in: 0,
                    out: 0
                });
            }), c.edges().forEach((_)=>{
                let b = f.edge(_.v, _.w) || 0, M = u(_), E = b + M;
                f.setEdge(_.v, _.w, E), g = Math.max(g, f.node(_.v).out += M), p = Math.max(p, f.node(_.w).in += M);
            });
            let x = l(g + p + 3).map(()=>new e), S = p + 1;
            return f.nodes().forEach((_)=>{
                a(x, S, f.node(_));
            }), {
                graph: f,
                buckets: x,
                zeroIdx: S
            };
        }
        function a(c, u, f) {
            f.out ? f.in ? c[f.out - f.in + u].enqueue(f) : c[c.length - 1].enqueue(f) : c[0].enqueue(f);
        }
        function l(c) {
            const u = [];
            for(let f = 0; f < c; f++)u.push(f);
            return u;
        }
        return tA;
    }
    var nA, jj;
    function Vi() {
        if (jj) return nA;
        jj = 1;
        let t = ic().Graph;
        nA = {
            addBorderNode: u,
            addDummyNode: e,
            applyWithChunking: g,
            asNonCompoundGraph: r,
            buildLayerMatrix: a,
            intersectRect: o,
            mapValues: N,
            maxRank: x,
            normalizeRanks: l,
            notime: b,
            partition: S,
            pick: k,
            predecessorWeights: s,
            range: T,
            removeEmptyRanks: c,
            simplify: n,
            successorWeights: i,
            time: _,
            uniqueId: E,
            zipObject: D
        };
        function e(L, R, A, P) {
            let B;
            do B = E(P);
            while (L.hasNode(B));
            return A.dummy = R, L.setNode(B, A), B;
        }
        function n(L) {
            let R = new t().setGraph(L.graph());
            return L.nodes().forEach((A)=>R.setNode(A, L.node(A))), L.edges().forEach((A)=>{
                let P = R.edge(A.v, A.w) || {
                    weight: 0,
                    minlen: 1
                }, B = L.edge(A);
                R.setEdge(A.v, A.w, {
                    weight: P.weight + B.weight,
                    minlen: Math.max(P.minlen, B.minlen)
                });
            }), R;
        }
        function r(L) {
            let R = new t({
                multigraph: L.isMultigraph()
            }).setGraph(L.graph());
            return L.nodes().forEach((A)=>{
                L.children(A).length || R.setNode(A, L.node(A));
            }), L.edges().forEach((A)=>{
                R.setEdge(A, L.edge(A));
            }), R;
        }
        function i(L) {
            let R = L.nodes().map((A)=>{
                let P = {};
                return L.outEdges(A).forEach((B)=>{
                    P[B.w] = (P[B.w] || 0) + L.edge(B).weight;
                }), P;
            });
            return D(L.nodes(), R);
        }
        function s(L) {
            let R = L.nodes().map((A)=>{
                let P = {};
                return L.inEdges(A).forEach((B)=>{
                    P[B.v] = (P[B.v] || 0) + L.edge(B).weight;
                }), P;
            });
            return D(L.nodes(), R);
        }
        function o(L, R) {
            let A = L.x, P = L.y, B = R.x - A, U = R.y - P, j = L.width / 2, K = L.height / 2;
            if (!B && !U) throw new Error("Not possible to find intersection inside of the rectangle");
            let q, te;
            return Math.abs(U) * j > Math.abs(B) * K ? (U < 0 && (K = -K), q = K * B / U, te = K) : (B < 0 && (j = -j), q = j, te = j * U / B), {
                x: A + q,
                y: P + te
            };
        }
        function a(L) {
            let R = T(x(L) + 1).map(()=>[]);
            return L.nodes().forEach((A)=>{
                let P = L.node(A), B = P.rank;
                B !== void 0 && (R[B][P.order] = A);
            }), R;
        }
        function l(L) {
            let R = L.nodes().map((P)=>{
                let B = L.node(P).rank;
                return B === void 0 ? Number.MAX_VALUE : B;
            }), A = g(Math.min, R);
            L.nodes().forEach((P)=>{
                let B = L.node(P);
                Object.hasOwn(B, "rank") && (B.rank -= A);
            });
        }
        function c(L) {
            let R = L.nodes().map((j)=>L.node(j).rank), A = g(Math.min, R), P = [];
            L.nodes().forEach((j)=>{
                let K = L.node(j).rank - A;
                P[K] || (P[K] = []), P[K].push(j);
            });
            let B = 0, U = L.graph().nodeRankFactor;
            Array.from(P).forEach((j, K)=>{
                j === void 0 && K % U !== 0 ? --B : j !== void 0 && B && j.forEach((q)=>L.node(q).rank += B);
            });
        }
        function u(L, R, A, P) {
            let B = {
                width: 0,
                height: 0
            };
            return arguments.length >= 4 && (B.rank = A, B.order = P), e(L, "border", B, R);
        }
        function f(L, R = p) {
            const A = [];
            for(let P = 0; P < L.length; P += R){
                const B = L.slice(P, P + R);
                A.push(B);
            }
            return A;
        }
        const p = 65535;
        function g(L, R) {
            if (R.length > p) {
                const A = f(R);
                return L.apply(null, A.map((P)=>L.apply(null, P)));
            } else return L.apply(null, R);
        }
        function x(L) {
            const A = L.nodes().map((P)=>{
                let B = L.node(P).rank;
                return B === void 0 ? Number.MIN_VALUE : B;
            });
            return g(Math.max, A);
        }
        function S(L, R) {
            let A = {
                lhs: [],
                rhs: []
            };
            return L.forEach((P)=>{
                R(P) ? A.lhs.push(P) : A.rhs.push(P);
            }), A;
        }
        function _(L, R) {
            let A = Date.now();
            try {
                return R();
            } finally{
                console.log(L + " time: " + (Date.now() - A) + "ms");
            }
        }
        function b(L, R) {
            return R();
        }
        let M = 0;
        function E(L) {
            var R = ++M;
            return toString(L) + R;
        }
        function T(L, R, A = 1) {
            R == null && (R = L, L = 0);
            let P = (U)=>U < R;
            A < 0 && (P = (U)=>R < U);
            const B = [];
            for(let U = L; P(U); U += A)B.push(U);
            return B;
        }
        function k(L, R) {
            const A = {};
            for (const P of R)L[P] !== void 0 && (A[P] = L[P]);
            return A;
        }
        function N(L, R) {
            let A = R;
            return typeof R == "string" && (A = (P)=>P[R]), Object.entries(L).reduce((P, [B, U])=>(P[B] = A(U, B), P), {});
        }
        function D(L, R) {
            return L.reduce((A, P, B)=>(A[P] = R[B], A), {});
        }
        return nA;
    }
    var rA, Bj;
    function Mae() {
        if (Bj) return rA;
        Bj = 1;
        let t = Eae(), e = Vi().uniqueId;
        rA = {
            run: n,
            undo: i
        };
        function n(s) {
            (s.graph().acyclicer === "greedy" ? t(s, a(s)) : r(s)).forEach((l)=>{
                let c = s.edge(l);
                s.removeEdge(l), c.forwardName = l.name, c.reversed = !0, s.setEdge(l.w, l.v, c, e("rev"));
            });
            function a(l) {
                return (c)=>l.edge(c).weight;
            }
        }
        function r(s) {
            let o = [], a = {}, l = {};
            function c(u) {
                Object.hasOwn(l, u) || (l[u] = !0, a[u] = !0, s.outEdges(u).forEach((f)=>{
                    Object.hasOwn(a, f.w) ? o.push(f) : c(f.w);
                }), delete a[u]);
            }
            return s.nodes().forEach(c), o;
        }
        function i(s) {
            s.edges().forEach((o)=>{
                let a = s.edge(o);
                if (a.reversed) {
                    s.removeEdge(o);
                    let l = a.forwardName;
                    delete a.reversed, delete a.forwardName, s.setEdge(o.w, o.v, a, l);
                }
            });
        }
        return rA;
    }
    var iA, Uj;
    function Tae() {
        if (Uj) return iA;
        Uj = 1;
        let t = Vi();
        iA = {
            run: e,
            undo: r
        };
        function e(i) {
            i.graph().dummyChains = [], i.edges().forEach((s)=>n(i, s));
        }
        function n(i, s) {
            let o = s.v, a = i.node(o).rank, l = s.w, c = i.node(l).rank, u = s.name, f = i.edge(s), p = f.labelRank;
            if (c === a + 1) return;
            i.removeEdge(s);
            let g, x, S;
            for(S = 0, ++a; a < c; ++S, ++a)f.points = [], x = {
                width: 0,
                height: 0,
                edgeLabel: f,
                edgeObj: s,
                rank: a
            }, g = t.addDummyNode(i, "edge", x, "_d"), a === p && (x.width = f.width, x.height = f.height, x.dummy = "edge-label", x.labelpos = f.labelpos), i.setEdge(o, g, {
                weight: f.weight
            }, u), S === 0 && i.graph().dummyChains.push(g), o = g;
            i.setEdge(o, l, {
                weight: f.weight
            }, u);
        }
        function r(i) {
            i.graph().dummyChains.forEach((s)=>{
                let o = i.node(s), a = o.edgeLabel, l;
                for(i.setEdge(o.edgeObj, a); o.dummy;)l = i.successors(s)[0], i.removeNode(s), a.points.push({
                    x: o.x,
                    y: o.y
                }), o.dummy === "edge-label" && (a.x = o.x, a.y = o.y, a.width = o.width, a.height = o.height), s = l, o = i.node(s);
            });
        }
        return iA;
    }
    var sA, zj;
    function BE() {
        if (zj) return sA;
        zj = 1;
        const { applyWithChunking: t } = Vi();
        sA = {
            longestPath: e,
            slack: n
        };
        function e(r) {
            var i = {};
            function s(o) {
                var a = r.node(o);
                if (Object.hasOwn(i, o)) return a.rank;
                i[o] = !0;
                let l = r.outEdges(o).map((u)=>u == null ? Number.POSITIVE_INFINITY : s(u.w) - r.edge(u).minlen);
                var c = t(Math.min, l);
                return c === Number.POSITIVE_INFINITY && (c = 0), a.rank = c;
            }
            r.sources().forEach(s);
        }
        function n(r, i) {
            return r.node(i.w).rank - r.node(i.v).rank - r.edge(i).minlen;
        }
        return sA;
    }
    var oA, Vj;
    function Jq() {
        if (Vj) return oA;
        Vj = 1;
        var t = ic().Graph, e = BE().slack;
        oA = n;
        function n(o) {
            var a = new t({
                directed: !1
            }), l = o.nodes()[0], c = o.nodeCount();
            a.setNode(l, {});
            for(var u, f; r(a, o) < c;)u = i(a, o), f = a.hasNode(u.v) ? e(o, u) : -e(o, u), s(a, o, f);
            return a;
        }
        function r(o, a) {
            function l(c) {
                a.nodeEdges(c).forEach((u)=>{
                    var f = u.v, p = c === f ? u.w : f;
                    !o.hasNode(p) && !e(a, u) && (o.setNode(p, {}), o.setEdge(c, p, {}), l(p));
                });
            }
            return o.nodes().forEach(l), o.nodeCount();
        }
        function i(o, a) {
            return a.edges().reduce((c, u)=>{
                let f = Number.POSITIVE_INFINITY;
                return o.hasNode(u.v) !== o.hasNode(u.w) && (f = e(a, u)), f < c[0] ? [
                    f,
                    u
                ] : c;
            }, [
                Number.POSITIVE_INFINITY,
                null
            ])[1];
        }
        function s(o, a, l) {
            o.nodes().forEach((c)=>a.node(c).rank += l);
        }
        return oA;
    }
    var aA, Wj;
    function Cae() {
        if (Wj) return aA;
        Wj = 1;
        var t = Jq(), e = BE().slack, n = BE().longestPath, r = ic().alg.preorder, i = ic().alg.postorder, s = Vi().simplify;
        aA = o, o.initLowLimValues = u, o.initCutValues = a, o.calcCutValue = c, o.leaveEdge = p, o.enterEdge = g, o.exchangeEdges = x;
        function o(M) {
            M = s(M), n(M);
            var E = t(M);
            u(E), a(E, M);
            for(var T, k; T = p(E);)k = g(E, M, T), x(E, M, T, k);
        }
        function a(M, E) {
            var T = i(M, M.nodes());
            T = T.slice(0, T.length - 1), T.forEach((k)=>l(M, E, k));
        }
        function l(M, E, T) {
            var k = M.node(T), N = k.parent;
            M.edge(T, N).cutvalue = c(M, E, T);
        }
        function c(M, E, T) {
            var k = M.node(T), N = k.parent, D = !0, L = E.edge(T, N), R = 0;
            return L || (D = !1, L = E.edge(N, T)), R = L.weight, E.nodeEdges(T).forEach((A)=>{
                var P = A.v === T, B = P ? A.w : A.v;
                if (B !== N) {
                    var U = P === D, j = E.edge(A).weight;
                    if (R += U ? j : -j, _(M, T, B)) {
                        var K = M.edge(T, B).cutvalue;
                        R += U ? -K : K;
                    }
                }
            }), R;
        }
        function u(M, E) {
            arguments.length < 2 && (E = M.nodes()[0]), f(M, {}, 1, E);
        }
        function f(M, E, T, k, N) {
            var D = T, L = M.node(k);
            return E[k] = !0, M.neighbors(k).forEach((R)=>{
                Object.hasOwn(E, R) || (T = f(M, E, T, R, k));
            }), L.low = D, L.lim = T++, N ? L.parent = N : delete L.parent, T;
        }
        function p(M) {
            return M.edges().find((E)=>M.edge(E).cutvalue < 0);
        }
        function g(M, E, T) {
            var k = T.v, N = T.w;
            E.hasEdge(k, N) || (k = T.w, N = T.v);
            var D = M.node(k), L = M.node(N), R = D, A = !1;
            D.lim > L.lim && (R = L, A = !0);
            var P = E.edges().filter((B)=>A === b(M, M.node(B.v), R) && A !== b(M, M.node(B.w), R));
            return P.reduce((B, U)=>e(E, U) < e(E, B) ? U : B);
        }
        function x(M, E, T, k) {
            var N = T.v, D = T.w;
            M.removeEdge(N, D), M.setEdge(k.v, k.w, {}), u(M), a(M, E), S(M, E);
        }
        function S(M, E) {
            var T = M.nodes().find((N)=>!E.node(N).parent), k = r(M, T);
            k = k.slice(1), k.forEach((N)=>{
                var D = M.node(N).parent, L = E.edge(N, D), R = !1;
                L || (L = E.edge(D, N), R = !0), E.node(N).rank = E.node(D).rank + (R ? L.minlen : -L.minlen);
            });
        }
        function _(M, E, T) {
            return M.hasEdge(E, T);
        }
        function b(M, E, T) {
            return T.low <= E.lim && E.lim <= T.lim;
        }
        return aA;
    }
    var lA, qj;
    function Iae() {
        if (qj) return lA;
        qj = 1;
        var t = BE(), e = t.longestPath, n = Jq(), r = Cae();
        lA = i;
        function i(l) {
            switch(l.graph().ranker){
                case "network-simplex":
                    a(l);
                    break;
                case "tight-tree":
                    o(l);
                    break;
                case "longest-path":
                    s(l);
                    break;
                default:
                    a(l);
            }
        }
        var s = e;
        function o(l) {
            e(l), n(l);
        }
        function a(l) {
            r(l);
        }
        return lA;
    }
    var cA, Hj;
    function Rae() {
        if (Hj) return cA;
        Hj = 1, cA = t;
        function t(r) {
            let i = n(r);
            r.graph().dummyChains.forEach((s)=>{
                let o = r.node(s), a = o.edgeObj, l = e(r, i, a.v, a.w), c = l.path, u = l.lca, f = 0, p = c[f], g = !0;
                for(; s !== a.w;){
                    if (o = r.node(s), g) {
                        for(; (p = c[f]) !== u && r.node(p).maxRank < o.rank;)f++;
                        p === u && (g = !1);
                    }
                    if (!g) {
                        for(; f < c.length - 1 && r.node(p = c[f + 1]).minRank <= o.rank;)f++;
                        p = c[f];
                    }
                    r.setParent(s, p), s = r.successors(s)[0];
                }
            });
        }
        function e(r, i, s, o) {
            let a = [], l = [], c = Math.min(i[s].low, i[o].low), u = Math.max(i[s].lim, i[o].lim), f, p;
            f = s;
            do f = r.parent(f), a.push(f);
            while (f && (i[f].low > c || u > i[f].lim));
            for(p = f, f = o; (f = r.parent(f)) !== p;)l.push(f);
            return {
                path: a.concat(l.reverse()),
                lca: p
            };
        }
        function n(r) {
            let i = {}, s = 0;
            function o(a) {
                let l = s;
                r.children(a).forEach(o), i[a] = {
                    low: l,
                    lim: s++
                };
            }
            return r.children().forEach(o), i;
        }
        return cA;
    }
    var uA, $j;
    function Aae() {
        if ($j) return uA;
        $j = 1;
        let t = Vi();
        uA = {
            run: e,
            cleanup: s
        };
        function e(o) {
            let a = t.addDummyNode(o, "root", {}, "_root"), l = r(o), c = Object.values(l), u = t.applyWithChunking(Math.max, c) - 1, f = 2 * u + 1;
            o.graph().nestingRoot = a, o.edges().forEach((g)=>o.edge(g).minlen *= f);
            let p = i(o) + 1;
            o.children().forEach((g)=>n(o, a, f, p, u, l, g)), o.graph().nodeRankFactor = f;
        }
        function n(o, a, l, c, u, f, p) {
            let g = o.children(p);
            if (!g.length) {
                p !== a && o.setEdge(a, p, {
                    weight: 0,
                    minlen: l
                });
                return;
            }
            let x = t.addBorderNode(o, "_bt"), S = t.addBorderNode(o, "_bb"), _ = o.node(p);
            o.setParent(x, p), _.borderTop = x, o.setParent(S, p), _.borderBottom = S, g.forEach((b)=>{
                n(o, a, l, c, u, f, b);
                let M = o.node(b), E = M.borderTop ? M.borderTop : b, T = M.borderBottom ? M.borderBottom : b, k = M.borderTop ? c : 2 * c, N = E !== T ? 1 : u - f[p] + 1;
                o.setEdge(x, E, {
                    weight: k,
                    minlen: N,
                    nestingEdge: !0
                }), o.setEdge(T, S, {
                    weight: k,
                    minlen: N,
                    nestingEdge: !0
                });
            }), o.parent(p) || o.setEdge(a, x, {
                weight: 0,
                minlen: u + f[p]
            });
        }
        function r(o) {
            var a = {};
            function l(c, u) {
                var f = o.children(c);
                f && f.length && f.forEach((p)=>l(p, u + 1)), a[c] = u;
            }
            return o.children().forEach((c)=>l(c, 1)), a;
        }
        function i(o) {
            return o.edges().reduce((a, l)=>a + o.edge(l).weight, 0);
        }
        function s(o) {
            var a = o.graph();
            o.removeNode(a.nestingRoot), delete a.nestingRoot, o.edges().forEach((l)=>{
                var c = o.edge(l);
                c.nestingEdge && o.removeEdge(l);
            });
        }
        return uA;
    }
    var dA, Gj;
    function Nae() {
        if (Gj) return dA;
        Gj = 1;
        let t = Vi();
        dA = e;
        function e(r) {
            function i(s) {
                let o = r.children(s), a = r.node(s);
                if (o.length && o.forEach(i), Object.hasOwn(a, "minRank")) {
                    a.borderLeft = [], a.borderRight = [];
                    for(let l = a.minRank, c = a.maxRank + 1; l < c; ++l)n(r, "borderLeft", "_bl", s, a, l), n(r, "borderRight", "_br", s, a, l);
                }
            }
            r.children().forEach(i);
        }
        function n(r, i, s, o, a, l) {
            let c = {
                width: 0,
                height: 0,
                rank: l,
                borderType: i
            }, u = a[i][l - 1], f = t.addDummyNode(r, "border", c, s);
            a[i][l] = f, r.setParent(f, o), u && r.setEdge(u, f, {
                weight: 1
            });
        }
        return dA;
    }
    var fA, Xj;
    function Pae() {
        if (Xj) return fA;
        Xj = 1, fA = {
            adjust: t,
            undo: e
        };
        function t(l) {
            let c = l.graph().rankdir.toLowerCase();
            (c === "lr" || c === "rl") && n(l);
        }
        function e(l) {
            let c = l.graph().rankdir.toLowerCase();
            (c === "bt" || c === "rl") && i(l), (c === "lr" || c === "rl") && (o(l), n(l));
        }
        function n(l) {
            l.nodes().forEach((c)=>r(l.node(c))), l.edges().forEach((c)=>r(l.edge(c)));
        }
        function r(l) {
            let c = l.width;
            l.width = l.height, l.height = c;
        }
        function i(l) {
            l.nodes().forEach((c)=>s(l.node(c))), l.edges().forEach((c)=>{
                let u = l.edge(c);
                u.points.forEach(s), Object.hasOwn(u, "y") && s(u);
            });
        }
        function s(l) {
            l.y = -l.y;
        }
        function o(l) {
            l.nodes().forEach((c)=>a(l.node(c))), l.edges().forEach((c)=>{
                let u = l.edge(c);
                u.points.forEach(a), Object.hasOwn(u, "x") && a(u);
            });
        }
        function a(l) {
            let c = l.x;
            l.x = l.y, l.y = c;
        }
        return fA;
    }
    var hA, Kj;
    function kae() {
        if (Kj) return hA;
        Kj = 1;
        let t = Vi();
        hA = e;
        function e(n) {
            let r = {}, i = n.nodes().filter((u)=>!n.children(u).length), s = i.map((u)=>n.node(u).rank), o = t.applyWithChunking(Math.max, s), a = t.range(o + 1).map(()=>[]);
            function l(u) {
                if (r[u]) return;
                r[u] = !0;
                let f = n.node(u);
                a[f.rank].push(u), n.successors(u).forEach(l);
            }
            return i.sort((u, f)=>n.node(u).rank - n.node(f).rank).forEach(l), a;
        }
        return hA;
    }
    var pA, Yj;
    function Oae() {
        if (Yj) return pA;
        Yj = 1;
        let t = Vi().zipObject;
        pA = e;
        function e(r, i) {
            let s = 0;
            for(let o = 1; o < i.length; ++o)s += n(r, i[o - 1], i[o]);
            return s;
        }
        function n(r, i, s) {
            let o = t(s, s.map((p, g)=>g)), a = i.flatMap((p)=>r.outEdges(p).map((g)=>({
                        pos: o[g.w],
                        weight: r.edge(g).weight
                    })).sort((g, x)=>g.pos - x.pos)), l = 1;
            for(; l < s.length;)l <<= 1;
            let c = 2 * l - 1;
            l -= 1;
            let u = new Array(c).fill(0), f = 0;
            return a.forEach((p)=>{
                let g = p.pos + l;
                u[g] += p.weight;
                let x = 0;
                for(; g > 0;)g % 2 && (x += u[g + 1]), g = g - 1 >> 1, u[g] += p.weight;
                f += p.weight * x;
            }), f;
        }
        return pA;
    }
    var mA, Zj;
    function Lae() {
        if (Zj) return mA;
        Zj = 1, mA = t;
        function t(e, n = []) {
            return n.map((r)=>{
                let i = e.inEdges(r);
                if (i.length) {
                    let s = i.reduce((o, a)=>{
                        let l = e.edge(a), c = e.node(a.v);
                        return {
                            sum: o.sum + l.weight * c.order,
                            weight: o.weight + l.weight
                        };
                    }, {
                        sum: 0,
                        weight: 0
                    });
                    return {
                        v: r,
                        barycenter: s.sum / s.weight,
                        weight: s.weight
                    };
                } else return {
                    v: r
                };
            });
        }
        return mA;
    }
    var gA, Jj;
    function Dae() {
        if (Jj) return gA;
        Jj = 1;
        let t = Vi();
        gA = e;
        function e(i, s) {
            let o = {};
            i.forEach((l, c)=>{
                let u = o[l.v] = {
                    indegree: 0,
                    in: [],
                    out: [],
                    vs: [
                        l.v
                    ],
                    i: c
                };
                l.barycenter !== void 0 && (u.barycenter = l.barycenter, u.weight = l.weight);
            }), s.edges().forEach((l)=>{
                let c = o[l.v], u = o[l.w];
                c !== void 0 && u !== void 0 && (u.indegree++, c.out.push(o[l.w]));
            });
            let a = Object.values(o).filter((l)=>!l.indegree);
            return n(a);
        }
        function n(i) {
            let s = [];
            function o(l) {
                return (c)=>{
                    c.merged || (c.barycenter === void 0 || l.barycenter === void 0 || c.barycenter >= l.barycenter) && r(l, c);
                };
            }
            function a(l) {
                return (c)=>{
                    c.in.push(l), --c.indegree === 0 && i.push(c);
                };
            }
            for(; i.length;){
                let l = i.pop();
                s.push(l), l.in.reverse().forEach(o(l)), l.out.forEach(a(l));
            }
            return s.filter((l)=>!l.merged).map((l)=>t.pick(l, [
                    "vs",
                    "i",
                    "barycenter",
                    "weight"
                ]));
        }
        function r(i, s) {
            let o = 0, a = 0;
            i.weight && (o += i.barycenter * i.weight, a += i.weight), s.weight && (o += s.barycenter * s.weight, a += s.weight), i.vs = s.vs.concat(i.vs), i.barycenter = o / a, i.weight = a, i.i = Math.min(s.i, i.i), s.merged = !0;
        }
        return gA;
    }
    var yA, Qj;
    function Fae() {
        if (Qj) return yA;
        Qj = 1;
        let t = Vi();
        yA = e;
        function e(i, s) {
            let o = t.partition(i, (x)=>Object.hasOwn(x, "barycenter")), a = o.lhs, l = o.rhs.sort((x, S)=>S.i - x.i), c = [], u = 0, f = 0, p = 0;
            a.sort(r(!!s)), p = n(c, l, p), a.forEach((x)=>{
                p += x.vs.length, c.push(x.vs), u += x.barycenter * x.weight, f += x.weight, p = n(c, l, p);
            });
            let g = {
                vs: c.flat(!0)
            };
            return f && (g.barycenter = u / f, g.weight = f), g;
        }
        function n(i, s, o) {
            let a;
            for(; s.length && (a = s[s.length - 1]).i <= o;)s.pop(), i.push(a.vs), o++;
            return o;
        }
        function r(i) {
            return (s, o)=>s.barycenter < o.barycenter ? -1 : s.barycenter > o.barycenter ? 1 : i ? o.i - s.i : s.i - o.i;
        }
        return yA;
    }
    var vA, eB;
    function jae() {
        if (eB) return vA;
        eB = 1;
        let t = Lae(), e = Dae(), n = Fae();
        vA = r;
        function r(o, a, l, c) {
            let u = o.children(a), f = o.node(a), p = f ? f.borderLeft : void 0, g = f ? f.borderRight : void 0, x = {};
            p && (u = u.filter((M)=>M !== p && M !== g));
            let S = t(o, u);
            S.forEach((M)=>{
                if (o.children(M.v).length) {
                    let E = r(o, M.v, l, c);
                    x[M.v] = E, Object.hasOwn(E, "barycenter") && s(M, E);
                }
            });
            let _ = e(S, l);
            i(_, x);
            let b = n(_, c);
            if (p && (b.vs = [
                p,
                b.vs,
                g
            ].flat(!0), o.predecessors(p).length)) {
                let M = o.node(o.predecessors(p)[0]), E = o.node(o.predecessors(g)[0]);
                Object.hasOwn(b, "barycenter") || (b.barycenter = 0, b.weight = 0), b.barycenter = (b.barycenter * b.weight + M.order + E.order) / (b.weight + 2), b.weight += 2;
            }
            return b;
        }
        function i(o, a) {
            o.forEach((l)=>{
                l.vs = l.vs.flatMap((c)=>a[c] ? a[c].vs : c);
            });
        }
        function s(o, a) {
            o.barycenter !== void 0 ? (o.barycenter = (o.barycenter * o.weight + a.barycenter * a.weight) / (o.weight + a.weight), o.weight += a.weight) : (o.barycenter = a.barycenter, o.weight = a.weight);
        }
        return vA;
    }
    var xA, tB;
    function Bae() {
        if (tB) return xA;
        tB = 1;
        let t = ic().Graph, e = Vi();
        xA = n;
        function n(i, s, o) {
            let a = r(i), l = new t({
                compound: !0
            }).setGraph({
                root: a
            }).setDefaultNodeLabel((c)=>i.node(c));
            return i.nodes().forEach((c)=>{
                let u = i.node(c), f = i.parent(c);
                (u.rank === s || u.minRank <= s && s <= u.maxRank) && (l.setNode(c), l.setParent(c, f || a), i[o](c).forEach((p)=>{
                    let g = p.v === c ? p.w : p.v, x = l.edge(g, c), S = x !== void 0 ? x.weight : 0;
                    l.setEdge(g, c, {
                        weight: i.edge(p).weight + S
                    });
                }), Object.hasOwn(u, "minRank") && l.setNode(c, {
                    borderLeft: u.borderLeft[s],
                    borderRight: u.borderRight[s]
                }));
            }), l;
        }
        function r(i) {
            for(var s; i.hasNode(s = e.uniqueId("_root")););
            return s;
        }
        return xA;
    }
    var bA, nB;
    function Uae() {
        if (nB) return bA;
        nB = 1, bA = t;
        function t(e, n, r) {
            let i = {}, s;
            r.forEach((o)=>{
                let a = e.parent(o), l, c;
                for(; a;){
                    if (l = e.parent(a), l ? (c = i[l], i[l] = a) : (c = s, s = a), c && c !== a) {
                        n.setEdge(c, a);
                        return;
                    }
                    a = l;
                }
            });
        }
        return bA;
    }
    var wA, rB;
    function zae() {
        if (rB) return wA;
        rB = 1;
        let t = kae(), e = Oae(), n = jae(), r = Bae(), i = Uae(), s = ic().Graph, o = Vi();
        wA = a;
        function a(f, p) {
            if (p && typeof p.customOrder == "function") {
                p.customOrder(f, a);
                return;
            }
            let g = o.maxRank(f), x = l(f, o.range(1, g + 1), "inEdges"), S = l(f, o.range(g - 1, -1, -1), "outEdges"), _ = t(f);
            if (u(f, _), p && p.disableOptimalOrderHeuristic) return;
            let b = Number.POSITIVE_INFINITY, M;
            for(let E = 0, T = 0; T < 4; ++E, ++T){
                c(E % 2 ? x : S, E % 4 >= 2), _ = o.buildLayerMatrix(f);
                let k = e(f, _);
                k < b && (T = 0, M = Object.assign({}, _), b = k);
            }
            u(f, M);
        }
        function l(f, p, g) {
            return p.map(function(x) {
                return r(f, x, g);
            });
        }
        function c(f, p) {
            let g = new s;
            f.forEach(function(x) {
                let S = x.graph().root, _ = n(x, S, g, p);
                _.vs.forEach((b, M)=>x.node(b).order = M), i(x, g, _.vs);
            });
        }
        function u(f, p) {
            Object.values(p).forEach((g)=>g.forEach((x, S)=>f.node(x).order = S));
        }
        return wA;
    }
    var _A, iB;
    function Vae() {
        if (iB) return _A;
        iB = 1;
        let t = ic().Graph, e = Vi();
        _A = {
            positionX: g,
            findType1Conflicts: n,
            findType2Conflicts: r,
            addConflict: s,
            hasConflict: o,
            verticalAlignment: a,
            horizontalCompaction: l,
            alignCoordinates: f,
            findSmallestWidthAlignment: u,
            balance: p
        };
        function n(_, b) {
            let M = {};
            function E(T, k) {
                let N = 0, D = 0, L = T.length, R = k[k.length - 1];
                return k.forEach((A, P)=>{
                    let B = i(_, A), U = B ? _.node(B).order : L;
                    (B || A === R) && (k.slice(D, P + 1).forEach((j)=>{
                        _.predecessors(j).forEach((K)=>{
                            let q = _.node(K), te = q.order;
                            (te < N || U < te) && !(q.dummy && _.node(j).dummy) && s(M, K, j);
                        });
                    }), D = P + 1, N = U);
                }), k;
            }
            return b.length && b.reduce(E), M;
        }
        function r(_, b) {
            let M = {};
            function E(k, N, D, L, R) {
                let A;
                e.range(N, D).forEach((P)=>{
                    A = k[P], _.node(A).dummy && _.predecessors(A).forEach((B)=>{
                        let U = _.node(B);
                        U.dummy && (U.order < L || U.order > R) && s(M, B, A);
                    });
                });
            }
            function T(k, N) {
                let D = -1, L, R = 0;
                return N.forEach((A, P)=>{
                    if (_.node(A).dummy === "border") {
                        let B = _.predecessors(A);
                        B.length && (L = _.node(B[0]).order, E(N, R, P, D, L), R = P, D = L);
                    }
                    E(N, R, N.length, L, k.length);
                }), N;
            }
            return b.length && b.reduce(T), M;
        }
        function i(_, b) {
            if (_.node(b).dummy) return _.predecessors(b).find((M)=>_.node(M).dummy);
        }
        function s(_, b, M) {
            if (b > M) {
                let T = b;
                b = M, M = T;
            }
            let E = _[b];
            E || (_[b] = E = {}), E[M] = !0;
        }
        function o(_, b, M) {
            if (b > M) {
                let E = b;
                b = M, M = E;
            }
            return !!_[b] && Object.hasOwn(_[b], M);
        }
        function a(_, b, M, E) {
            let T = {}, k = {}, N = {};
            return b.forEach((D)=>{
                D.forEach((L, R)=>{
                    T[L] = L, k[L] = L, N[L] = R;
                });
            }), b.forEach((D)=>{
                let L = -1;
                D.forEach((R)=>{
                    let A = E(R);
                    if (A.length) {
                        A = A.sort((B, U)=>N[B] - N[U]);
                        let P = (A.length - 1) / 2;
                        for(let B = Math.floor(P), U = Math.ceil(P); B <= U; ++B){
                            let j = A[B];
                            k[R] === R && L < N[j] && !o(M, R, j) && (k[j] = R, k[R] = T[R] = T[j], L = N[j]);
                        }
                    }
                });
            }), {
                root: T,
                align: k
            };
        }
        function l(_, b, M, E, T) {
            let k = {}, N = c(_, b, M, T), D = T ? "borderLeft" : "borderRight";
            function L(P, B) {
                let U = N.nodes(), j = U.pop(), K = {};
                for(; j;)K[j] ? P(j) : (K[j] = !0, U.push(j), U = U.concat(B(j))), j = U.pop();
            }
            function R(P) {
                k[P] = N.inEdges(P).reduce((B, U)=>Math.max(B, k[U.v] + N.edge(U)), 0);
            }
            function A(P) {
                let B = N.outEdges(P).reduce((j, K)=>Math.min(j, k[K.w] - N.edge(K)), Number.POSITIVE_INFINITY), U = _.node(P);
                B !== Number.POSITIVE_INFINITY && U.borderType !== D && (k[P] = Math.max(k[P], B));
            }
            return L(R, N.predecessors.bind(N)), L(A, N.successors.bind(N)), Object.keys(E).forEach((P)=>k[P] = k[M[P]]), k;
        }
        function c(_, b, M, E) {
            let T = new t, k = _.graph(), N = x(k.nodesep, k.edgesep, E);
            return b.forEach((D)=>{
                let L;
                D.forEach((R)=>{
                    let A = M[R];
                    if (T.setNode(A), L) {
                        var P = M[L], B = T.edge(P, A);
                        T.setEdge(P, A, Math.max(N(_, R, L), B || 0));
                    }
                    L = R;
                });
            }), T;
        }
        function u(_, b) {
            return Object.values(b).reduce((M, E)=>{
                let T = Number.NEGATIVE_INFINITY, k = Number.POSITIVE_INFINITY;
                Object.entries(E).forEach(([D, L])=>{
                    let R = S(_, D) / 2;
                    T = Math.max(L + R, T), k = Math.min(L - R, k);
                });
                const N = T - k;
                return N < M[0] && (M = [
                    N,
                    E
                ]), M;
            }, [
                Number.POSITIVE_INFINITY,
                null
            ])[1];
        }
        function f(_, b) {
            let M = Object.values(b), E = e.applyWithChunking(Math.min, M), T = e.applyWithChunking(Math.max, M);
            [
                "u",
                "d"
            ].forEach((k)=>{
                [
                    "l",
                    "r"
                ].forEach((N)=>{
                    let D = k + N, L = _[D];
                    if (L === b) return;
                    let R = Object.values(L), A = E - e.applyWithChunking(Math.min, R);
                    N !== "l" && (A = T - e.applyWithChunking(Math.max, R)), A && (_[D] = e.mapValues(L, (P)=>P + A));
                });
            });
        }
        function p(_, b) {
            return e.mapValues(_.ul, (M, E)=>{
                if (b) return _[b.toLowerCase()][E];
                {
                    let T = Object.values(_).map((k)=>k[E]).sort((k, N)=>k - N);
                    return (T[1] + T[2]) / 2;
                }
            });
        }
        function g(_) {
            let b = e.buildLayerMatrix(_), M = Object.assign(n(_, b), r(_, b)), E = {}, T;
            [
                "u",
                "d"
            ].forEach((N)=>{
                T = N === "u" ? b : Object.values(b).reverse(), [
                    "l",
                    "r"
                ].forEach((D)=>{
                    D === "r" && (T = T.map((P)=>Object.values(P).reverse()));
                    let L = (N === "u" ? _.predecessors : _.successors).bind(_), R = a(_, T, M, L), A = l(_, T, R.root, R.align, D === "r");
                    D === "r" && (A = e.mapValues(A, (P)=>-P)), E[N + D] = A;
                });
            });
            let k = u(_, E);
            return f(E, k), p(E, _.graph().align);
        }
        function x(_, b, M) {
            return (E, T, k)=>{
                let N = E.node(T), D = E.node(k), L = 0, R;
                if (L += N.width / 2, Object.hasOwn(N, "labelpos")) switch(N.labelpos.toLowerCase()){
                    case "l":
                        R = -N.width / 2;
                        break;
                    case "r":
                        R = N.width / 2;
                        break;
                }
                if (R && (L += M ? R : -R), R = 0, L += (N.dummy ? b : _) / 2, L += (D.dummy ? b : _) / 2, L += D.width / 2, Object.hasOwn(D, "labelpos")) switch(D.labelpos.toLowerCase()){
                    case "l":
                        R = D.width / 2;
                        break;
                    case "r":
                        R = -D.width / 2;
                        break;
                }
                return R && (L += M ? R : -R), R = 0, L;
            };
        }
        function S(_, b) {
            return _.node(b).width;
        }
        return _A;
    }
    var SA, sB;
    function Wae() {
        if (sB) return SA;
        sB = 1;
        let t = Vi(), e = Vae().positionX;
        SA = n;
        function n(i) {
            i = t.asNonCompoundGraph(i), r(i), Object.entries(e(i)).forEach(([s, o])=>i.node(s).x = o);
        }
        function r(i) {
            let s = t.buildLayerMatrix(i), o = i.graph().ranksep, a = 0;
            s.forEach((l)=>{
                const c = l.reduce((u, f)=>{
                    const p = i.node(f).height;
                    return u > p ? u : p;
                }, 0);
                l.forEach((u)=>i.node(u).y = a + c / 2), a += c + o;
            });
        }
        return SA;
    }
    var EA, oB;
    function qae() {
        if (oB) return EA;
        oB = 1;
        let t = Mae(), e = Tae(), n = Iae(), r = Vi().normalizeRanks, i = Rae(), s = Vi().removeEmptyRanks, o = Aae(), a = Nae(), l = Pae(), c = zae(), u = Wae(), f = Vi(), p = ic().Graph;
        EA = g;
        function g(ue, ie) {
            let he = ie && ie.debugTiming ? f.time : f.notime;
            he("layout", ()=>{
                let ge = he("  buildLayoutGraph", ()=>L(ue));
                he("  runLayout", ()=>x(ge, he, ie)), he("  updateInputGraph", ()=>S(ue, ge));
            });
        }
        function x(ue, ie, he) {
            ie("    makeSpaceForEdgeLabels", ()=>R(ue)), ie("    removeSelfEdges", ()=>W(ue)), ie("    acyclic", ()=>t.run(ue)), ie("    nestingGraph.run", ()=>o.run(ue)), ie("    rank", ()=>n(f.asNonCompoundGraph(ue))), ie("    injectEdgeLabelProxies", ()=>A(ue)), ie("    removeEmptyRanks", ()=>s(ue)), ie("    nestingGraph.cleanup", ()=>o.cleanup(ue)), ie("    normalizeRanks", ()=>r(ue)), ie("    assignRankMinMax", ()=>P(ue)), ie("    removeEdgeLabelProxies", ()=>B(ue)), ie("    normalize.run", ()=>e.run(ue)), ie("    parentDummyChains", ()=>i(ue)), ie("    addBorderSegments", ()=>a(ue)), ie("    order", ()=>c(ue, he)), ie("    insertSelfEdges", ()=>J(ue)), ie("    adjustCoordinateSystem", ()=>l.adjust(ue)), ie("    position", ()=>u(ue)), ie("    positionSelfEdges", ()=>Q(ue)), ie("    removeBorderNodes", ()=>te(ue)), ie("    normalize.undo", ()=>e.undo(ue)), ie("    fixupEdgeLabelCoords", ()=>K(ue)), ie("    undoCoordinateSystem", ()=>l.undo(ue)), ie("    translateGraph", ()=>U(ue)), ie("    assignNodeIntersects", ()=>j(ue)), ie("    reversePoints", ()=>q(ue)), ie("    acyclic.undo", ()=>t.undo(ue));
        }
        function S(ue, ie) {
            ue.nodes().forEach((he)=>{
                let ge = ue.node(he), ve = ie.node(he);
                ge && (ge.x = ve.x, ge.y = ve.y, ge.rank = ve.rank, ie.children(he).length && (ge.width = ve.width, ge.height = ve.height));
            }), ue.edges().forEach((he)=>{
                let ge = ue.edge(he), ve = ie.edge(he);
                ge.points = ve.points, Object.hasOwn(ve, "x") && (ge.x = ve.x, ge.y = ve.y);
            }), ue.graph().width = ie.graph().width, ue.graph().height = ie.graph().height;
        }
        let _ = [
            "nodesep",
            "edgesep",
            "ranksep",
            "marginx",
            "marginy"
        ], b = {
            ranksep: 50,
            edgesep: 20,
            nodesep: 50,
            rankdir: "tb"
        }, M = [
            "acyclicer",
            "ranker",
            "rankdir",
            "align"
        ], E = [
            "width",
            "height"
        ], T = {
            width: 0,
            height: 0
        }, k = [
            "minlen",
            "weight",
            "width",
            "height",
            "labeloffset"
        ], N = {
            minlen: 1,
            weight: 1,
            width: 0,
            height: 0,
            labeloffset: 10,
            labelpos: "r"
        }, D = [
            "labelpos"
        ];
        function L(ue) {
            let ie = new p({
                multigraph: !0,
                compound: !0
            }), he = le(ue.graph());
            return ie.setGraph(Object.assign({}, b, Y(he, _), f.pick(he, M))), ue.nodes().forEach((ge)=>{
                let ve = le(ue.node(ge));
                const Ee = Y(ve, E);
                Object.keys(T).forEach((Ce)=>{
                    Ee[Ce] === void 0 && (Ee[Ce] = T[Ce]);
                }), ie.setNode(ge, Ee), ie.setParent(ge, ue.parent(ge));
            }), ue.edges().forEach((ge)=>{
                let ve = le(ue.edge(ge));
                ie.setEdge(ge, Object.assign({}, N, Y(ve, k), f.pick(ve, D)));
            }), ie;
        }
        function R(ue) {
            let ie = ue.graph();
            ie.ranksep /= 2, ue.edges().forEach((he)=>{
                let ge = ue.edge(he);
                ge.minlen *= 2, ge.labelpos.toLowerCase() !== "c" && (ie.rankdir === "TB" || ie.rankdir === "BT" ? ge.width += ge.labeloffset : ge.height += ge.labeloffset);
            });
        }
        function A(ue) {
            ue.edges().forEach((ie)=>{
                let he = ue.edge(ie);
                if (he.width && he.height) {
                    let ge = ue.node(ie.v), Ee = {
                        rank: (ue.node(ie.w).rank - ge.rank) / 2 + ge.rank,
                        e: ie
                    };
                    f.addDummyNode(ue, "edge-proxy", Ee, "_ep");
                }
            });
        }
        function P(ue) {
            let ie = 0;
            ue.nodes().forEach((he)=>{
                let ge = ue.node(he);
                ge.borderTop && (ge.minRank = ue.node(ge.borderTop).rank, ge.maxRank = ue.node(ge.borderBottom).rank, ie = Math.max(ie, ge.maxRank));
            }), ue.graph().maxRank = ie;
        }
        function B(ue) {
            ue.nodes().forEach((ie)=>{
                let he = ue.node(ie);
                he.dummy === "edge-proxy" && (ue.edge(he.e).labelRank = he.rank, ue.removeNode(ie));
            });
        }
        function U(ue) {
            let ie = Number.POSITIVE_INFINITY, he = 0, ge = Number.POSITIVE_INFINITY, ve = 0, Ee = ue.graph(), Ce = Ee.marginx || 0, Ne = Ee.marginy || 0;
            function Ve(we) {
                let Me = we.x, se = we.y, Ye = we.width, Be = we.height;
                ie = Math.min(ie, Me - Ye / 2), he = Math.max(he, Me + Ye / 2), ge = Math.min(ge, se - Be / 2), ve = Math.max(ve, se + Be / 2);
            }
            ue.nodes().forEach((we)=>Ve(ue.node(we))), ue.edges().forEach((we)=>{
                let Me = ue.edge(we);
                Object.hasOwn(Me, "x") && Ve(Me);
            }), ie -= Ce, ge -= Ne, ue.nodes().forEach((we)=>{
                let Me = ue.node(we);
                Me.x -= ie, Me.y -= ge;
            }), ue.edges().forEach((we)=>{
                let Me = ue.edge(we);
                Me.points.forEach((se)=>{
                    se.x -= ie, se.y -= ge;
                }), Object.hasOwn(Me, "x") && (Me.x -= ie), Object.hasOwn(Me, "y") && (Me.y -= ge);
            }), Ee.width = he - ie + Ce, Ee.height = ve - ge + Ne;
        }
        function j(ue) {
            ue.edges().forEach((ie)=>{
                let he = ue.edge(ie), ge = ue.node(ie.v), ve = ue.node(ie.w), Ee, Ce;
                he.points ? (Ee = he.points[0], Ce = he.points[he.points.length - 1]) : (he.points = [], Ee = ve, Ce = ge), he.points.unshift(f.intersectRect(ge, Ee)), he.points.push(f.intersectRect(ve, Ce));
            });
        }
        function K(ue) {
            ue.edges().forEach((ie)=>{
                let he = ue.edge(ie);
                if (Object.hasOwn(he, "x")) switch((he.labelpos === "l" || he.labelpos === "r") && (he.width -= he.labeloffset), he.labelpos){
                    case "l":
                        he.x -= he.width / 2 + he.labeloffset;
                        break;
                    case "r":
                        he.x += he.width / 2 + he.labeloffset;
                        break;
                }
            });
        }
        function q(ue) {
            ue.edges().forEach((ie)=>{
                let he = ue.edge(ie);
                he.reversed && he.points.reverse();
            });
        }
        function te(ue) {
            ue.nodes().forEach((ie)=>{
                if (ue.children(ie).length) {
                    let he = ue.node(ie), ge = ue.node(he.borderTop), ve = ue.node(he.borderBottom), Ee = ue.node(he.borderLeft[he.borderLeft.length - 1]), Ce = ue.node(he.borderRight[he.borderRight.length - 1]);
                    he.width = Math.abs(Ce.x - Ee.x), he.height = Math.abs(ve.y - ge.y), he.x = Ee.x + he.width / 2, he.y = ge.y + he.height / 2;
                }
            }), ue.nodes().forEach((ie)=>{
                ue.node(ie).dummy === "border" && ue.removeNode(ie);
            });
        }
        function W(ue) {
            ue.edges().forEach((ie)=>{
                if (ie.v === ie.w) {
                    var he = ue.node(ie.v);
                    he.selfEdges || (he.selfEdges = []), he.selfEdges.push({
                        e: ie,
                        label: ue.edge(ie)
                    }), ue.removeEdge(ie);
                }
            });
        }
        function J(ue) {
            var ie = f.buildLayerMatrix(ue);
            ie.forEach((he)=>{
                var ge = 0;
                he.forEach((ve, Ee)=>{
                    var Ce = ue.node(ve);
                    Ce.order = Ee + ge, (Ce.selfEdges || []).forEach((Ne)=>{
                        f.addDummyNode(ue, "selfedge", {
                            width: Ne.label.width,
                            height: Ne.label.height,
                            rank: Ce.rank,
                            order: Ee + ++ge,
                            e: Ne.e,
                            label: Ne.label
                        }, "_se");
                    }), delete Ce.selfEdges;
                });
            });
        }
        function Q(ue) {
            ue.nodes().forEach((ie)=>{
                var he = ue.node(ie);
                if (he.dummy === "selfedge") {
                    var ge = ue.node(he.e.v), ve = ge.x + ge.width / 2, Ee = ge.y, Ce = he.x - ve, Ne = ge.height / 2;
                    ue.setEdge(he.e, he.label), ue.removeNode(ie), he.label.points = [
                        {
                            x: ve + 2 * Ce / 3,
                            y: Ee - Ne
                        },
                        {
                            x: ve + 5 * Ce / 6,
                            y: Ee - Ne
                        },
                        {
                            x: ve + Ce,
                            y: Ee
                        },
                        {
                            x: ve + 5 * Ce / 6,
                            y: Ee + Ne
                        },
                        {
                            x: ve + 2 * Ce / 3,
                            y: Ee + Ne
                        }
                    ], he.label.x = he.x, he.label.y = he.y;
                }
            });
        }
        function Y(ue, ie) {
            return f.mapValues(f.pick(ue, ie), Number);
        }
        function le(ue) {
            var ie = {};
            return ue && Object.entries(ue).forEach(([he, ge])=>{
                typeof he == "string" && (he = he.toLowerCase()), ie[he] = ge;
            }), ie;
        }
        return EA;
    }
    var MA, aB;
    function Hae() {
        if (aB) return MA;
        aB = 1;
        let t = Vi(), e = ic().Graph;
        MA = {
            debugOrdering: n
        };
        function n(r) {
            let i = t.buildLayerMatrix(r), s = new e({
                compound: !0,
                multigraph: !0
            }).setGraph({});
            return r.nodes().forEach((o)=>{
                s.setNode(o, {
                    label: o
                }), s.setParent(o, "layer" + r.node(o).rank);
            }), r.edges().forEach((o)=>s.setEdge(o.v, o.w, {}, o.name)), i.forEach((o, a)=>{
                let l = "layer" + a;
                s.setNode(l, {
                    rank: "same"
                }), o.reduce((c, u)=>(s.setEdge(c, u, {
                        style: "invis"
                    }), u));
            }), s;
        }
        return MA;
    }
    var TA, lB;
    function $ae() {
        return lB || (lB = 1, TA = "1.1.4"), TA;
    }
    var CA, cB;
    function Gae() {
        return cB || (cB = 1, CA = {
            graphlib: ic(),
            layout: qae(),
            debug: Hae(),
            util: {
                time: Vi().time,
                notime: Vi().notime
            },
            version: $ae()
        }), CA;
    }
    var Xae = Gae();
    const Qq = Ao(Xae);
    function qi(t) {
        if (typeof t == "string" || typeof t == "number") return "" + t;
        let e = "";
        if (Array.isArray(t)) for(let n = 0, r; n < t.length; n++)(r = qi(t[n])) !== "" && (e += (e && " ") + r);
        else for(let n in t)t[n] && (e += (e && " ") + n);
        return e;
    }
    var Kae = {
        value: ()=>{}
    };
    function ST() {
        for(var t = 0, e = arguments.length, n = {}, r; t < e; ++t){
            if (!(r = arguments[t] + "") || r in n || /[\s.]/.test(r)) throw new Error("illegal type: " + r);
            n[r] = [];
        }
        return new m1(n);
    }
    function m1(t) {
        this._ = t;
    }
    function Yae(t, e) {
        return t.trim().split(/^|\s+/).map(function(n) {
            var r = "", i = n.indexOf(".");
            if (i >= 0 && (r = n.slice(i + 1), n = n.slice(0, i)), n && !e.hasOwnProperty(n)) throw new Error("unknown type: " + n);
            return {
                type: n,
                name: r
            };
        });
    }
    m1.prototype = ST.prototype = {
        constructor: m1,
        on: function(t, e) {
            var n = this._, r = Yae(t + "", n), i, s = -1, o = r.length;
            if (arguments.length < 2) {
                for(; ++s < o;)if ((i = (t = r[s]).type) && (i = Zae(n[i], t.name))) return i;
                return;
            }
            if (e != null && typeof e != "function") throw new Error("invalid callback: " + e);
            for(; ++s < o;)if (i = (t = r[s]).type) n[i] = uB(n[i], t.name, e);
            else if (e == null) for(i in n)n[i] = uB(n[i], t.name, null);
            return this;
        },
        copy: function() {
            var t = {}, e = this._;
            for(var n in e)t[n] = e[n].slice();
            return new m1(t);
        },
        call: function(t, e) {
            if ((i = arguments.length - 2) > 0) for(var n = new Array(i), r = 0, i, s; r < i; ++r)n[r] = arguments[r + 2];
            if (!this._.hasOwnProperty(t)) throw new Error("unknown type: " + t);
            for(s = this._[t], r = 0, i = s.length; r < i; ++r)s[r].value.apply(e, n);
        },
        apply: function(t, e, n) {
            if (!this._.hasOwnProperty(t)) throw new Error("unknown type: " + t);
            for(var r = this._[t], i = 0, s = r.length; i < s; ++i)r[i].value.apply(e, n);
        }
    };
    function Zae(t, e) {
        for(var n = 0, r = t.length, i; n < r; ++n)if ((i = t[n]).name === e) return i.value;
    }
    function uB(t, e, n) {
        for(var r = 0, i = t.length; r < i; ++r)if (t[r].name === e) {
            t[r] = Kae, t = t.slice(0, r).concat(t.slice(r + 1));
            break;
        }
        return n != null && t.push({
            name: e,
            value: n
        }), t;
    }
    var VP = "http://www.w3.org/1999/xhtml";
    const dB = {
        svg: "http://www.w3.org/2000/svg",
        xhtml: VP,
        xlink: "http://www.w3.org/1999/xlink",
        xml: "http://www.w3.org/XML/1998/namespace",
        xmlns: "http://www.w3.org/2000/xmlns/"
    };
    function ET(t) {
        var e = t += "", n = e.indexOf(":");
        return n >= 0 && (e = t.slice(0, n)) !== "xmlns" && (t = t.slice(n + 1)), dB.hasOwnProperty(e) ? {
            space: dB[e],
            local: t
        } : t;
    }
    function Jae(t) {
        return function() {
            var e = this.ownerDocument, n = this.namespaceURI;
            return n === VP && e.documentElement.namespaceURI === VP ? e.createElement(t) : e.createElementNS(n, t);
        };
    }
    function Qae(t) {
        return function() {
            return this.ownerDocument.createElementNS(t.space, t.local);
        };
    }
    function eH(t) {
        var e = ET(t);
        return (e.local ? Qae : Jae)(e);
    }
    function ele() {}
    function UO(t) {
        return t == null ? ele : function() {
            return this.querySelector(t);
        };
    }
    function tle(t) {
        typeof t != "function" && (t = UO(t));
        for(var e = this._groups, n = e.length, r = new Array(n), i = 0; i < n; ++i)for(var s = e[i], o = s.length, a = r[i] = new Array(o), l, c, u = 0; u < o; ++u)(l = s[u]) && (c = t.call(l, l.__data__, u, s)) && ("__data__" in l && (c.__data__ = l.__data__), a[u] = c);
        return new Fa(r, this._parents);
    }
    function nle(t) {
        return t == null ? [] : Array.isArray(t) ? t : Array.from(t);
    }
    function rle() {
        return [];
    }
    function tH(t) {
        return t == null ? rle : function() {
            return this.querySelectorAll(t);
        };
    }
    function ile(t) {
        return function() {
            return nle(t.apply(this, arguments));
        };
    }
    function sle(t) {
        typeof t == "function" ? t = ile(t) : t = tH(t);
        for(var e = this._groups, n = e.length, r = [], i = [], s = 0; s < n; ++s)for(var o = e[s], a = o.length, l, c = 0; c < a; ++c)(l = o[c]) && (r.push(t.call(l, l.__data__, c, o)), i.push(l));
        return new Fa(r, i);
    }
    function nH(t) {
        return function() {
            return this.matches(t);
        };
    }
    function rH(t) {
        return function(e) {
            return e.matches(t);
        };
    }
    var ole = Array.prototype.find;
    function ale(t) {
        return function() {
            return ole.call(this.children, t);
        };
    }
    function lle() {
        return this.firstElementChild;
    }
    function cle(t) {
        return this.select(t == null ? lle : ale(typeof t == "function" ? t : rH(t)));
    }
    var ule = Array.prototype.filter;
    function dle() {
        return Array.from(this.children);
    }
    function fle(t) {
        return function() {
            return ule.call(this.children, t);
        };
    }
    function hle(t) {
        return this.selectAll(t == null ? dle : fle(typeof t == "function" ? t : rH(t)));
    }
    function ple(t) {
        typeof t != "function" && (t = nH(t));
        for(var e = this._groups, n = e.length, r = new Array(n), i = 0; i < n; ++i)for(var s = e[i], o = s.length, a = r[i] = [], l, c = 0; c < o; ++c)(l = s[c]) && t.call(l, l.__data__, c, s) && a.push(l);
        return new Fa(r, this._parents);
    }
    function iH(t) {
        return new Array(t.length);
    }
    function mle() {
        return new Fa(this._enter || this._groups.map(iH), this._parents);
    }
    function UE(t, e) {
        this.ownerDocument = t.ownerDocument, this.namespaceURI = t.namespaceURI, this._next = null, this._parent = t, this.__data__ = e;
    }
    UE.prototype = {
        constructor: UE,
        appendChild: function(t) {
            return this._parent.insertBefore(t, this._next);
        },
        insertBefore: function(t, e) {
            return this._parent.insertBefore(t, e);
        },
        querySelector: function(t) {
            return this._parent.querySelector(t);
        },
        querySelectorAll: function(t) {
            return this._parent.querySelectorAll(t);
        }
    };
    function gle(t) {
        return function() {
            return t;
        };
    }
    function yle(t, e, n, r, i, s) {
        for(var o = 0, a, l = e.length, c = s.length; o < c; ++o)(a = e[o]) ? (a.__data__ = s[o], r[o] = a) : n[o] = new UE(t, s[o]);
        for(; o < l; ++o)(a = e[o]) && (i[o] = a);
    }
    function vle(t, e, n, r, i, s, o) {
        var a, l, c = new Map, u = e.length, f = s.length, p = new Array(u), g;
        for(a = 0; a < u; ++a)(l = e[a]) && (p[a] = g = o.call(l, l.__data__, a, e) + "", c.has(g) ? i[a] = l : c.set(g, l));
        for(a = 0; a < f; ++a)g = o.call(t, s[a], a, s) + "", (l = c.get(g)) ? (r[a] = l, l.__data__ = s[a], c.delete(g)) : n[a] = new UE(t, s[a]);
        for(a = 0; a < u; ++a)(l = e[a]) && c.get(p[a]) === l && (i[a] = l);
    }
    function xle(t) {
        return t.__data__;
    }
    function ble(t, e) {
        if (!arguments.length) return Array.from(this, xle);
        var n = e ? vle : yle, r = this._parents, i = this._groups;
        typeof t != "function" && (t = gle(t));
        for(var s = i.length, o = new Array(s), a = new Array(s), l = new Array(s), c = 0; c < s; ++c){
            var u = r[c], f = i[c], p = f.length, g = wle(t.call(u, u && u.__data__, c, r)), x = g.length, S = a[c] = new Array(x), _ = o[c] = new Array(x), b = l[c] = new Array(p);
            n(u, f, S, _, b, g, e);
            for(var M = 0, E = 0, T, k; M < x; ++M)if (T = S[M]) {
                for(M >= E && (E = M + 1); !(k = _[E]) && ++E < x;);
                T._next = k || null;
            }
        }
        return o = new Fa(o, r), o._enter = a, o._exit = l, o;
    }
    function wle(t) {
        return typeof t == "object" && "length" in t ? t : Array.from(t);
    }
    function _le() {
        return new Fa(this._exit || this._groups.map(iH), this._parents);
    }
    function Sle(t, e, n) {
        var r = this.enter(), i = this, s = this.exit();
        return typeof t == "function" ? (r = t(r), r && (r = r.selection())) : r = r.append(t + ""), e != null && (i = e(i), i && (i = i.selection())), n == null ? s.remove() : n(s), r && i ? r.merge(i).order() : i;
    }
    function Ele(t) {
        for(var e = t.selection ? t.selection() : t, n = this._groups, r = e._groups, i = n.length, s = r.length, o = Math.min(i, s), a = new Array(i), l = 0; l < o; ++l)for(var c = n[l], u = r[l], f = c.length, p = a[l] = new Array(f), g, x = 0; x < f; ++x)(g = c[x] || u[x]) && (p[x] = g);
        for(; l < i; ++l)a[l] = n[l];
        return new Fa(a, this._parents);
    }
    function Mle() {
        for(var t = this._groups, e = -1, n = t.length; ++e < n;)for(var r = t[e], i = r.length - 1, s = r[i], o; --i >= 0;)(o = r[i]) && (s && o.compareDocumentPosition(s) ^ 4 && s.parentNode.insertBefore(o, s), s = o);
        return this;
    }
    function Tle(t) {
        t || (t = Cle);
        function e(f, p) {
            return f && p ? t(f.__data__, p.__data__) : !f - !p;
        }
        for(var n = this._groups, r = n.length, i = new Array(r), s = 0; s < r; ++s){
            for(var o = n[s], a = o.length, l = i[s] = new Array(a), c, u = 0; u < a; ++u)(c = o[u]) && (l[u] = c);
            l.sort(e);
        }
        return new Fa(i, this._parents).order();
    }
    function Cle(t, e) {
        return t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN;
    }
    function Ile() {
        var t = arguments[0];
        return arguments[0] = this, t.apply(null, arguments), this;
    }
    function Rle() {
        return Array.from(this);
    }
    function Ale() {
        for(var t = this._groups, e = 0, n = t.length; e < n; ++e)for(var r = t[e], i = 0, s = r.length; i < s; ++i){
            var o = r[i];
            if (o) return o;
        }
        return null;
    }
    function Nle() {
        let t = 0;
        for (const e of this)++t;
        return t;
    }
    function Ple() {
        return !this.node();
    }
    function kle(t) {
        for(var e = this._groups, n = 0, r = e.length; n < r; ++n)for(var i = e[n], s = 0, o = i.length, a; s < o; ++s)(a = i[s]) && t.call(a, a.__data__, s, i);
        return this;
    }
    function Ole(t) {
        return function() {
            this.removeAttribute(t);
        };
    }
    function Lle(t) {
        return function() {
            this.removeAttributeNS(t.space, t.local);
        };
    }
    function Dle(t, e) {
        return function() {
            this.setAttribute(t, e);
        };
    }
    function Fle(t, e) {
        return function() {
            this.setAttributeNS(t.space, t.local, e);
        };
    }
    function jle(t, e) {
        return function() {
            var n = e.apply(this, arguments);
            n == null ? this.removeAttribute(t) : this.setAttribute(t, n);
        };
    }
    function Ble(t, e) {
        return function() {
            var n = e.apply(this, arguments);
            n == null ? this.removeAttributeNS(t.space, t.local) : this.setAttributeNS(t.space, t.local, n);
        };
    }
    function Ule(t, e) {
        var n = ET(t);
        if (arguments.length < 2) {
            var r = this.node();
            return n.local ? r.getAttributeNS(n.space, n.local) : r.getAttribute(n);
        }
        return this.each((e == null ? n.local ? Lle : Ole : typeof e == "function" ? n.local ? Ble : jle : n.local ? Fle : Dle)(n, e));
    }
    function sH(t) {
        return t.ownerDocument && t.ownerDocument.defaultView || t.document && t || t.defaultView;
    }
    function zle(t) {
        return function() {
            this.style.removeProperty(t);
        };
    }
    function Vle(t, e, n) {
        return function() {
            this.style.setProperty(t, e, n);
        };
    }
    function Wle(t, e, n) {
        return function() {
            var r = e.apply(this, arguments);
            r == null ? this.style.removeProperty(t) : this.style.setProperty(t, r, n);
        };
    }
    function qle(t, e, n) {
        return arguments.length > 1 ? this.each((e == null ? zle : typeof e == "function" ? Wle : Vle)(t, e, n ?? "")) : qy(this.node(), t);
    }
    function qy(t, e) {
        return t.style.getPropertyValue(e) || sH(t).getComputedStyle(t, null).getPropertyValue(e);
    }
    function Hle(t) {
        return function() {
            delete this[t];
        };
    }
    function $le(t, e) {
        return function() {
            this[t] = e;
        };
    }
    function Gle(t, e) {
        return function() {
            var n = e.apply(this, arguments);
            n == null ? delete this[t] : this[t] = n;
        };
    }
    function Xle(t, e) {
        return arguments.length > 1 ? this.each((e == null ? Hle : typeof e == "function" ? Gle : $le)(t, e)) : this.node()[t];
    }
    function oH(t) {
        return t.trim().split(/^|\s+/);
    }
    function zO(t) {
        return t.classList || new aH(t);
    }
    function aH(t) {
        this._node = t, this._names = oH(t.getAttribute("class") || "");
    }
    aH.prototype = {
        add: function(t) {
            var e = this._names.indexOf(t);
            e < 0 && (this._names.push(t), this._node.setAttribute("class", this._names.join(" ")));
        },
        remove: function(t) {
            var e = this._names.indexOf(t);
            e >= 0 && (this._names.splice(e, 1), this._node.setAttribute("class", this._names.join(" ")));
        },
        contains: function(t) {
            return this._names.indexOf(t) >= 0;
        }
    };
    function lH(t, e) {
        for(var n = zO(t), r = -1, i = e.length; ++r < i;)n.add(e[r]);
    }
    function cH(t, e) {
        for(var n = zO(t), r = -1, i = e.length; ++r < i;)n.remove(e[r]);
    }
    function Kle(t) {
        return function() {
            lH(this, t);
        };
    }
    function Yle(t) {
        return function() {
            cH(this, t);
        };
    }
    function Zle(t, e) {
        return function() {
            (e.apply(this, arguments) ? lH : cH)(this, t);
        };
    }
    function Jle(t, e) {
        var n = oH(t + "");
        if (arguments.length < 2) {
            for(var r = zO(this.node()), i = -1, s = n.length; ++i < s;)if (!r.contains(n[i])) return !1;
            return !0;
        }
        return this.each((typeof e == "function" ? Zle : e ? Kle : Yle)(n, e));
    }
    function Qle() {
        this.textContent = "";
    }
    function ece(t) {
        return function() {
            this.textContent = t;
        };
    }
    function tce(t) {
        return function() {
            var e = t.apply(this, arguments);
            this.textContent = e ?? "";
        };
    }
    function nce(t) {
        return arguments.length ? this.each(t == null ? Qle : (typeof t == "function" ? tce : ece)(t)) : this.node().textContent;
    }
    function rce() {
        this.innerHTML = "";
    }
    function ice(t) {
        return function() {
            this.innerHTML = t;
        };
    }
    function sce(t) {
        return function() {
            var e = t.apply(this, arguments);
            this.innerHTML = e ?? "";
        };
    }
    function oce(t) {
        return arguments.length ? this.each(t == null ? rce : (typeof t == "function" ? sce : ice)(t)) : this.node().innerHTML;
    }
    function ace() {
        this.nextSibling && this.parentNode.appendChild(this);
    }
    function lce() {
        return this.each(ace);
    }
    function cce() {
        this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
    }
    function uce() {
        return this.each(cce);
    }
    function dce(t) {
        var e = typeof t == "function" ? t : eH(t);
        return this.select(function() {
            return this.appendChild(e.apply(this, arguments));
        });
    }
    function fce() {
        return null;
    }
    function hce(t, e) {
        var n = typeof t == "function" ? t : eH(t), r = e == null ? fce : typeof e == "function" ? e : UO(e);
        return this.select(function() {
            return this.insertBefore(n.apply(this, arguments), r.apply(this, arguments) || null);
        });
    }
    function pce() {
        var t = this.parentNode;
        t && t.removeChild(this);
    }
    function mce() {
        return this.each(pce);
    }
    function gce() {
        var t = this.cloneNode(!1), e = this.parentNode;
        return e ? e.insertBefore(t, this.nextSibling) : t;
    }
    function yce() {
        var t = this.cloneNode(!0), e = this.parentNode;
        return e ? e.insertBefore(t, this.nextSibling) : t;
    }
    function vce(t) {
        return this.select(t ? yce : gce);
    }
    function xce(t) {
        return arguments.length ? this.property("__data__", t) : this.node().__data__;
    }
    function bce(t) {
        return function(e) {
            t.call(this, e, this.__data__);
        };
    }
    function wce(t) {
        return t.trim().split(/^|\s+/).map(function(e) {
            var n = "", r = e.indexOf(".");
            return r >= 0 && (n = e.slice(r + 1), e = e.slice(0, r)), {
                type: e,
                name: n
            };
        });
    }
    function _ce(t) {
        return function() {
            var e = this.__on;
            if (e) {
                for(var n = 0, r = -1, i = e.length, s; n < i; ++n)s = e[n], (!t.type || s.type === t.type) && s.name === t.name ? this.removeEventListener(s.type, s.listener, s.options) : e[++r] = s;
                ++r ? e.length = r : delete this.__on;
            }
        };
    }
    function Sce(t, e, n) {
        return function() {
            var r = this.__on, i, s = bce(e);
            if (r) {
                for(var o = 0, a = r.length; o < a; ++o)if ((i = r[o]).type === t.type && i.name === t.name) {
                    this.removeEventListener(i.type, i.listener, i.options), this.addEventListener(i.type, i.listener = s, i.options = n), i.value = e;
                    return;
                }
            }
            this.addEventListener(t.type, s, n), i = {
                type: t.type,
                name: t.name,
                value: e,
                listener: s,
                options: n
            }, r ? r.push(i) : this.__on = [
                i
            ];
        };
    }
    function Ece(t, e, n) {
        var r = wce(t + ""), i, s = r.length, o;
        if (arguments.length < 2) {
            var a = this.node().__on;
            if (a) {
                for(var l = 0, c = a.length, u; l < c; ++l)for(i = 0, u = a[l]; i < s; ++i)if ((o = r[i]).type === u.type && o.name === u.name) return u.value;
            }
            return;
        }
        for(a = e ? Sce : _ce, i = 0; i < s; ++i)this.each(a(r[i], e, n));
        return this;
    }
    function uH(t, e, n) {
        var r = sH(t), i = r.CustomEvent;
        typeof i == "function" ? i = new i(e, n) : (i = r.document.createEvent("Event"), n ? (i.initEvent(e, n.bubbles, n.cancelable), i.detail = n.detail) : i.initEvent(e, !1, !1)), t.dispatchEvent(i);
    }
    function Mce(t, e) {
        return function() {
            return uH(this, t, e);
        };
    }
    function Tce(t, e) {
        return function() {
            return uH(this, t, e.apply(this, arguments));
        };
    }
    function Cce(t, e) {
        return this.each((typeof e == "function" ? Tce : Mce)(t, e));
    }
    function* Ice() {
        for(var t = this._groups, e = 0, n = t.length; e < n; ++e)for(var r = t[e], i = 0, s = r.length, o; i < s; ++i)(o = r[i]) && (yield o);
    }
    var dH = [
        null
    ];
    function Fa(t, e) {
        this._groups = t, this._parents = e;
    }
    function rw() {
        return new Fa([
            [
                document.documentElement
            ]
        ], dH);
    }
    function Rce() {
        return this;
    }
    Fa.prototype = rw.prototype = {
        constructor: Fa,
        select: tle,
        selectAll: sle,
        selectChild: cle,
        selectChildren: hle,
        filter: ple,
        data: ble,
        enter: mle,
        exit: _le,
        join: Sle,
        merge: Ele,
        selection: Rce,
        order: Mle,
        sort: Tle,
        call: Ile,
        nodes: Rle,
        node: Ale,
        size: Nle,
        empty: Ple,
        each: kle,
        attr: Ule,
        style: qle,
        property: Xle,
        classed: Jle,
        text: nce,
        html: oce,
        raise: lce,
        lower: uce,
        append: dce,
        insert: hce,
        remove: mce,
        clone: vce,
        datum: xce,
        on: Ece,
        dispatch: Cce,
        [Symbol.iterator]: Ice
    };
    function Aa(t) {
        return typeof t == "string" ? new Fa([
            [
                document.querySelector(t)
            ]
        ], [
            document.documentElement
        ]) : new Fa([
            [
                t
            ]
        ], dH);
    }
    function Ace(t) {
        let e;
        for(; e = t.sourceEvent;)t = e;
        return t;
    }
    function Wl(t, e) {
        if (t = Ace(t), e === void 0 && (e = t.currentTarget), e) {
            var n = e.ownerSVGElement || e;
            if (n.createSVGPoint) {
                var r = n.createSVGPoint();
                return r.x = t.clientX, r.y = t.clientY, r = r.matrixTransform(e.getScreenCTM().inverse()), [
                    r.x,
                    r.y
                ];
            }
            if (e.getBoundingClientRect) {
                var i = e.getBoundingClientRect();
                return [
                    t.clientX - i.left - e.clientLeft,
                    t.clientY - i.top - e.clientTop
                ];
            }
        }
        return [
            t.pageX,
            t.pageY
        ];
    }
    const Nce = {
        passive: !1
    }, ab = {
        capture: !0,
        passive: !1
    };
    function IA(t) {
        t.stopImmediatePropagation();
    }
    function Ny(t) {
        t.preventDefault(), t.stopImmediatePropagation();
    }
    function fH(t) {
        var e = t.document.documentElement, n = Aa(t).on("dragstart.drag", Ny, ab);
        "onselectstart" in e ? n.on("selectstart.drag", Ny, ab) : (e.__noselect = e.style.MozUserSelect, e.style.MozUserSelect = "none");
    }
    function hH(t, e) {
        var n = t.document.documentElement, r = Aa(t).on("dragstart.drag", null);
        e && (r.on("click.drag", Ny, ab), setTimeout(function() {
            r.on("click.drag", null);
        }, 0)), "onselectstart" in n ? r.on("selectstart.drag", null) : (n.style.MozUserSelect = n.__noselect, delete n.__noselect);
    }
    const V_ = (t)=>()=>t;
    function WP(t, { sourceEvent: e, subject: n, target: r, identifier: i, active: s, x: o, y: a, dx: l, dy: c, dispatch: u }) {
        Object.defineProperties(this, {
            type: {
                value: t,
                enumerable: !0,
                configurable: !0
            },
            sourceEvent: {
                value: e,
                enumerable: !0,
                configurable: !0
            },
            subject: {
                value: n,
                enumerable: !0,
                configurable: !0
            },
            target: {
                value: r,
                enumerable: !0,
                configurable: !0
            },
            identifier: {
                value: i,
                enumerable: !0,
                configurable: !0
            },
            active: {
                value: s,
                enumerable: !0,
                configurable: !0
            },
            x: {
                value: o,
                enumerable: !0,
                configurable: !0
            },
            y: {
                value: a,
                enumerable: !0,
                configurable: !0
            },
            dx: {
                value: l,
                enumerable: !0,
                configurable: !0
            },
            dy: {
                value: c,
                enumerable: !0,
                configurable: !0
            },
            _: {
                value: u
            }
        });
    }
    WP.prototype.on = function() {
        var t = this._.on.apply(this._, arguments);
        return t === this._ ? this : t;
    };
    function Pce(t) {
        return !t.ctrlKey && !t.button;
    }
    function kce() {
        return this.parentNode;
    }
    function Oce(t, e) {
        return e ?? {
            x: t.x,
            y: t.y
        };
    }
    function Lce() {
        return navigator.maxTouchPoints || "ontouchstart" in this;
    }
    function pH() {
        var t = Pce, e = kce, n = Oce, r = Lce, i = {}, s = ST("start", "drag", "end"), o = 0, a, l, c, u, f = 0;
        function p(T) {
            T.on("mousedown.drag", g).filter(r).on("touchstart.drag", _).on("touchmove.drag", b, Nce).on("touchend.drag touchcancel.drag", M).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
        }
        function g(T, k) {
            if (!(u || !t.call(this, T, k))) {
                var N = E(this, e.call(this, T, k), T, k, "mouse");
                N && (Aa(T.view).on("mousemove.drag", x, ab).on("mouseup.drag", S, ab), fH(T.view), IA(T), c = !1, a = T.clientX, l = T.clientY, N("start", T));
            }
        }
        function x(T) {
            if (Ny(T), !c) {
                var k = T.clientX - a, N = T.clientY - l;
                c = k * k + N * N > f;
            }
            i.mouse("drag", T);
        }
        function S(T) {
            Aa(T.view).on("mousemove.drag mouseup.drag", null), hH(T.view, c), Ny(T), i.mouse("end", T);
        }
        function _(T, k) {
            if (t.call(this, T, k)) {
                var N = T.changedTouches, D = e.call(this, T, k), L = N.length, R, A;
                for(R = 0; R < L; ++R)(A = E(this, D, T, k, N[R].identifier, N[R])) && (IA(T), A("start", T, N[R]));
            }
        }
        function b(T) {
            var k = T.changedTouches, N = k.length, D, L;
            for(D = 0; D < N; ++D)(L = i[k[D].identifier]) && (Ny(T), L("drag", T, k[D]));
        }
        function M(T) {
            var k = T.changedTouches, N = k.length, D, L;
            for(u && clearTimeout(u), u = setTimeout(function() {
                u = null;
            }, 500), D = 0; D < N; ++D)(L = i[k[D].identifier]) && (IA(T), L("end", T, k[D]));
        }
        function E(T, k, N, D, L, R) {
            var A = s.copy(), P = Wl(R || N, k), B, U, j;
            if ((j = n.call(T, new WP("beforestart", {
                sourceEvent: N,
                target: p,
                identifier: L,
                active: o,
                x: P[0],
                y: P[1],
                dx: 0,
                dy: 0,
                dispatch: A
            }), D)) != null) return B = j.x - P[0] || 0, U = j.y - P[1] || 0, function K(q, te, W) {
                var J = P, Q;
                switch(q){
                    case "start":
                        i[L] = K, Q = o++;
                        break;
                    case "end":
                        delete i[L], --o;
                    case "drag":
                        P = Wl(W || te, k), Q = o;
                        break;
                }
                A.call(q, T, new WP(q, {
                    sourceEvent: te,
                    subject: j,
                    target: p,
                    identifier: L,
                    active: Q,
                    x: P[0] + B,
                    y: P[1] + U,
                    dx: P[0] - J[0],
                    dy: P[1] - J[1],
                    dispatch: A
                }), D);
            };
        }
        return p.filter = function(T) {
            return arguments.length ? (t = typeof T == "function" ? T : V_(!!T), p) : t;
        }, p.container = function(T) {
            return arguments.length ? (e = typeof T == "function" ? T : V_(T), p) : e;
        }, p.subject = function(T) {
            return arguments.length ? (n = typeof T == "function" ? T : V_(T), p) : n;
        }, p.touchable = function(T) {
            return arguments.length ? (r = typeof T == "function" ? T : V_(!!T), p) : r;
        }, p.on = function() {
            var T = s.on.apply(s, arguments);
            return T === s ? p : T;
        }, p.clickDistance = function(T) {
            return arguments.length ? (f = (T = +T) * T, p) : Math.sqrt(f);
        }, p;
    }
    function VO(t, e, n) {
        t.prototype = e.prototype = n, n.constructor = t;
    }
    function mH(t, e) {
        var n = Object.create(t.prototype);
        for(var r in e)n[r] = e[r];
        return n;
    }
    function iw() {}
    var lb = .7, zE = 1 / lb, Py = "\\s*([+-]?\\d+)\\s*", cb = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", zc = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", Dce = /^#([0-9a-f]{3,8})$/, Fce = new RegExp(`^rgb\\(${Py},${Py},${Py}\\)$`), jce = new RegExp(`^rgb\\(${zc},${zc},${zc}\\)$`), Bce = new RegExp(`^rgba\\(${Py},${Py},${Py},${cb}\\)$`), Uce = new RegExp(`^rgba\\(${zc},${zc},${zc},${cb}\\)$`), zce = new RegExp(`^hsl\\(${cb},${zc},${zc}\\)$`), Vce = new RegExp(`^hsla\\(${cb},${zc},${zc},${cb}\\)$`), fB = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    };
    VO(iw, ub, {
        copy (t) {
            return Object.assign(new this.constructor, this, t);
        },
        displayable () {
            return this.rgb().displayable();
        },
        hex: hB,
        formatHex: hB,
        formatHex8: Wce,
        formatHsl: qce,
        formatRgb: pB,
        toString: pB
    });
    function hB() {
        return this.rgb().formatHex();
    }
    function Wce() {
        return this.rgb().formatHex8();
    }
    function qce() {
        return gH(this).formatHsl();
    }
    function pB() {
        return this.rgb().formatRgb();
    }
    function ub(t) {
        var e, n;
        return t = (t + "").trim().toLowerCase(), (e = Dce.exec(t)) ? (n = e[1].length, e = parseInt(e[1], 16), n === 6 ? mB(e) : n === 3 ? new ta(e >> 8 & 15 | e >> 4 & 240, e >> 4 & 15 | e & 240, (e & 15) << 4 | e & 15, 1) : n === 8 ? W_(e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, (e & 255) / 255) : n === 4 ? W_(e >> 12 & 15 | e >> 8 & 240, e >> 8 & 15 | e >> 4 & 240, e >> 4 & 15 | e & 240, ((e & 15) << 4 | e & 15) / 255) : null) : (e = Fce.exec(t)) ? new ta(e[1], e[2], e[3], 1) : (e = jce.exec(t)) ? new ta(e[1] * 255 / 100, e[2] * 255 / 100, e[3] * 255 / 100, 1) : (e = Bce.exec(t)) ? W_(e[1], e[2], e[3], e[4]) : (e = Uce.exec(t)) ? W_(e[1] * 255 / 100, e[2] * 255 / 100, e[3] * 255 / 100, e[4]) : (e = zce.exec(t)) ? vB(e[1], e[2] / 100, e[3] / 100, 1) : (e = Vce.exec(t)) ? vB(e[1], e[2] / 100, e[3] / 100, e[4]) : fB.hasOwnProperty(t) ? mB(fB[t]) : t === "transparent" ? new ta(NaN, NaN, NaN, 0) : null;
    }
    function mB(t) {
        return new ta(t >> 16 & 255, t >> 8 & 255, t & 255, 1);
    }
    function W_(t, e, n, r) {
        return r <= 0 && (t = e = n = NaN), new ta(t, e, n, r);
    }
    function Hce(t) {
        return t instanceof iw || (t = ub(t)), t ? (t = t.rgb(), new ta(t.r, t.g, t.b, t.opacity)) : new ta;
    }
    function qP(t, e, n, r) {
        return arguments.length === 1 ? Hce(t) : new ta(t, e, n, r ?? 1);
    }
    function ta(t, e, n, r) {
        this.r = +t, this.g = +e, this.b = +n, this.opacity = +r;
    }
    VO(ta, qP, mH(iw, {
        brighter (t) {
            return t = t == null ? zE : Math.pow(zE, t), new ta(this.r * t, this.g * t, this.b * t, this.opacity);
        },
        darker (t) {
            return t = t == null ? lb : Math.pow(lb, t), new ta(this.r * t, this.g * t, this.b * t, this.opacity);
        },
        rgb () {
            return this;
        },
        clamp () {
            return new ta(Bp(this.r), Bp(this.g), Bp(this.b), VE(this.opacity));
        },
        displayable () {
            return -.5 <= this.r && this.r < 255.5 && -.5 <= this.g && this.g < 255.5 && -.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
        },
        hex: gB,
        formatHex: gB,
        formatHex8: $ce,
        formatRgb: yB,
        toString: yB
    }));
    function gB() {
        return `#${Pp(this.r)}${Pp(this.g)}${Pp(this.b)}`;
    }
    function $ce() {
        return `#${Pp(this.r)}${Pp(this.g)}${Pp(this.b)}${Pp((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
    }
    function yB() {
        const t = VE(this.opacity);
        return `${t === 1 ? "rgb(" : "rgba("}${Bp(this.r)}, ${Bp(this.g)}, ${Bp(this.b)}${t === 1 ? ")" : `, ${t})`}`;
    }
    function VE(t) {
        return isNaN(t) ? 1 : Math.max(0, Math.min(1, t));
    }
    function Bp(t) {
        return Math.max(0, Math.min(255, Math.round(t) || 0));
    }
    function Pp(t) {
        return t = Bp(t), (t < 16 ? "0" : "") + t.toString(16);
    }
    function vB(t, e, n, r) {
        return r <= 0 ? t = e = n = NaN : n <= 0 || n >= 1 ? t = e = NaN : e <= 0 && (t = NaN), new Kl(t, e, n, r);
    }
    function gH(t) {
        if (t instanceof Kl) return new Kl(t.h, t.s, t.l, t.opacity);
        if (t instanceof iw || (t = ub(t)), !t) return new Kl;
        if (t instanceof Kl) return t;
        t = t.rgb();
        var e = t.r / 255, n = t.g / 255, r = t.b / 255, i = Math.min(e, n, r), s = Math.max(e, n, r), o = NaN, a = s - i, l = (s + i) / 2;
        return a ? (e === s ? o = (n - r) / a + (n < r) * 6 : n === s ? o = (r - e) / a + 2 : o = (e - n) / a + 4, a /= l < .5 ? s + i : 2 - s - i, o *= 60) : a = l > 0 && l < 1 ? 0 : o, new Kl(o, a, l, t.opacity);
    }
    function Gce(t, e, n, r) {
        return arguments.length === 1 ? gH(t) : new Kl(t, e, n, r ?? 1);
    }
    function Kl(t, e, n, r) {
        this.h = +t, this.s = +e, this.l = +n, this.opacity = +r;
    }
    VO(Kl, Gce, mH(iw, {
        brighter (t) {
            return t = t == null ? zE : Math.pow(zE, t), new Kl(this.h, this.s, this.l * t, this.opacity);
        },
        darker (t) {
            return t = t == null ? lb : Math.pow(lb, t), new Kl(this.h, this.s, this.l * t, this.opacity);
        },
        rgb () {
            var t = this.h % 360 + (this.h < 0) * 360, e = isNaN(t) || isNaN(this.s) ? 0 : this.s, n = this.l, r = n + (n < .5 ? n : 1 - n) * e, i = 2 * n - r;
            return new ta(RA(t >= 240 ? t - 240 : t + 120, i, r), RA(t, i, r), RA(t < 120 ? t + 240 : t - 120, i, r), this.opacity);
        },
        clamp () {
            return new Kl(xB(this.h), q_(this.s), q_(this.l), VE(this.opacity));
        },
        displayable () {
            return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
        },
        formatHsl () {
            const t = VE(this.opacity);
            return `${t === 1 ? "hsl(" : "hsla("}${xB(this.h)}, ${q_(this.s) * 100}%, ${q_(this.l) * 100}%${t === 1 ? ")" : `, ${t})`}`;
        }
    }));
    function xB(t) {
        return t = (t || 0) % 360, t < 0 ? t + 360 : t;
    }
    function q_(t) {
        return Math.max(0, Math.min(1, t || 0));
    }
    function RA(t, e, n) {
        return (t < 60 ? e + (n - e) * t / 60 : t < 180 ? n : t < 240 ? e + (n - e) * (240 - t) / 60 : e) * 255;
    }
    const yH = (t)=>()=>t;
    function Xce(t, e) {
        return function(n) {
            return t + n * e;
        };
    }
    function Kce(t, e, n) {
        return t = Math.pow(t, n), e = Math.pow(e, n) - t, n = 1 / n, function(r) {
            return Math.pow(t + r * e, n);
        };
    }
    function Yce(t) {
        return (t = +t) == 1 ? vH : function(e, n) {
            return n - e ? Kce(e, n, t) : yH(isNaN(e) ? n : e);
        };
    }
    function vH(t, e) {
        var n = e - t;
        return n ? Xce(t, n) : yH(isNaN(t) ? e : t);
    }
    const bB = function t(e) {
        var n = Yce(e);
        function r(i, s) {
            var o = n((i = qP(i)).r, (s = qP(s)).r), a = n(i.g, s.g), l = n(i.b, s.b), c = vH(i.opacity, s.opacity);
            return function(u) {
                return i.r = o(u), i.g = a(u), i.b = l(u), i.opacity = c(u), i + "";
            };
        }
        return r.gamma = t, r;
    }(1);
    function Sf(t, e) {
        return t = +t, e = +e, function(n) {
            return t * (1 - n) + e * n;
        };
    }
    var HP = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, AA = new RegExp(HP.source, "g");
    function Zce(t) {
        return function() {
            return t;
        };
    }
    function Jce(t) {
        return function(e) {
            return t(e) + "";
        };
    }
    function Qce(t, e) {
        var n = HP.lastIndex = AA.lastIndex = 0, r, i, s, o = -1, a = [], l = [];
        for(t = t + "", e = e + ""; (r = HP.exec(t)) && (i = AA.exec(e));)(s = i.index) > n && (s = e.slice(n, s), a[o] ? a[o] += s : a[++o] = s), (r = r[0]) === (i = i[0]) ? a[o] ? a[o] += i : a[++o] = i : (a[++o] = null, l.push({
            i: o,
            x: Sf(r, i)
        })), n = AA.lastIndex;
        return n < e.length && (s = e.slice(n), a[o] ? a[o] += s : a[++o] = s), a.length < 2 ? l[0] ? Jce(l[0].x) : Zce(e) : (e = l.length, function(c) {
            for(var u = 0, f; u < e; ++u)a[(f = l[u]).i] = f.x(c);
            return a.join("");
        });
    }
    var wB = 180 / Math.PI, $P = {
        translateX: 0,
        translateY: 0,
        rotate: 0,
        skewX: 0,
        scaleX: 1,
        scaleY: 1
    };
    function xH(t, e, n, r, i, s) {
        var o, a, l;
        return (o = Math.sqrt(t * t + e * e)) && (t /= o, e /= o), (l = t * n + e * r) && (n -= t * l, r -= e * l), (a = Math.sqrt(n * n + r * r)) && (n /= a, r /= a, l /= a), t * r < e * n && (t = -t, e = -e, l = -l, o = -o), {
            translateX: i,
            translateY: s,
            rotate: Math.atan2(e, t) * wB,
            skewX: Math.atan(l) * wB,
            scaleX: o,
            scaleY: a
        };
    }
    var H_;
    function eue(t) {
        const e = new (typeof DOMMatrix == "function" ? DOMMatrix : WebKitCSSMatrix)(t + "");
        return e.isIdentity ? $P : xH(e.a, e.b, e.c, e.d, e.e, e.f);
    }
    function tue(t) {
        return t == null || (H_ || (H_ = document.createElementNS("http://www.w3.org/2000/svg", "g")), H_.setAttribute("transform", t), !(t = H_.transform.baseVal.consolidate())) ? $P : (t = t.matrix, xH(t.a, t.b, t.c, t.d, t.e, t.f));
    }
    function bH(t, e, n, r) {
        function i(c) {
            return c.length ? c.pop() + " " : "";
        }
        function s(c, u, f, p, g, x) {
            if (c !== f || u !== p) {
                var S = g.push("translate(", null, e, null, n);
                x.push({
                    i: S - 4,
                    x: Sf(c, f)
                }, {
                    i: S - 2,
                    x: Sf(u, p)
                });
            } else (f || p) && g.push("translate(" + f + e + p + n);
        }
        function o(c, u, f, p) {
            c !== u ? (c - u > 180 ? u += 360 : u - c > 180 && (c += 360), p.push({
                i: f.push(i(f) + "rotate(", null, r) - 2,
                x: Sf(c, u)
            })) : u && f.push(i(f) + "rotate(" + u + r);
        }
        function a(c, u, f, p) {
            c !== u ? p.push({
                i: f.push(i(f) + "skewX(", null, r) - 2,
                x: Sf(c, u)
            }) : u && f.push(i(f) + "skewX(" + u + r);
        }
        function l(c, u, f, p, g, x) {
            if (c !== f || u !== p) {
                var S = g.push(i(g) + "scale(", null, ",", null, ")");
                x.push({
                    i: S - 4,
                    x: Sf(c, f)
                }, {
                    i: S - 2,
                    x: Sf(u, p)
                });
            } else (f !== 1 || p !== 1) && g.push(i(g) + "scale(" + f + "," + p + ")");
        }
        return function(c, u) {
            var f = [], p = [];
            return c = t(c), u = t(u), s(c.translateX, c.translateY, u.translateX, u.translateY, f, p), o(c.rotate, u.rotate, f, p), a(c.skewX, u.skewX, f, p), l(c.scaleX, c.scaleY, u.scaleX, u.scaleY, f, p), c = u = null, function(g) {
                for(var x = -1, S = p.length, _; ++x < S;)f[(_ = p[x]).i] = _.x(g);
                return f.join("");
            };
        };
    }
    var nue = bH(eue, "px, ", "px)", "deg)"), rue = bH(tue, ", ", ")", ")"), iue = 1e-12;
    function _B(t) {
        return ((t = Math.exp(t)) + 1 / t) / 2;
    }
    function sue(t) {
        return ((t = Math.exp(t)) - 1 / t) / 2;
    }
    function oue(t) {
        return ((t = Math.exp(2 * t)) - 1) / (t + 1);
    }
    const aue = function t(e, n, r) {
        function i(s, o) {
            var a = s[0], l = s[1], c = s[2], u = o[0], f = o[1], p = o[2], g = u - a, x = f - l, S = g * g + x * x, _, b;
            if (S < iue) b = Math.log(p / c) / e, _ = function(D) {
                return [
                    a + D * g,
                    l + D * x,
                    c * Math.exp(e * D * b)
                ];
            };
            else {
                var M = Math.sqrt(S), E = (p * p - c * c + r * S) / (2 * c * n * M), T = (p * p - c * c - r * S) / (2 * p * n * M), k = Math.log(Math.sqrt(E * E + 1) - E), N = Math.log(Math.sqrt(T * T + 1) - T);
                b = (N - k) / e, _ = function(D) {
                    var L = D * b, R = _B(k), A = c / (n * M) * (R * oue(e * L + k) - sue(k));
                    return [
                        a + A * g,
                        l + A * x,
                        c * R / _B(e * L + k)
                    ];
                };
            }
            return _.duration = b * 1e3 * e / Math.SQRT2, _;
        }
        return i.rho = function(s) {
            var o = Math.max(.001, +s), a = o * o, l = a * a;
            return t(o, a, l);
        }, i;
    }(Math.SQRT2, 2, 4);
    var Hy = 0, Kx = 0, Sx = 0, wH = 1e3, WE, Yx, qE = 0, rm = 0, MT = 0, db = typeof performance == "object" && performance.now ? performance : Date, _H = typeof window == "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(t) {
        setTimeout(t, 17);
    };
    function WO() {
        return rm || (_H(lue), rm = db.now() + MT);
    }
    function lue() {
        rm = 0;
    }
    function HE() {
        this._call = this._time = this._next = null;
    }
    HE.prototype = SH.prototype = {
        constructor: HE,
        restart: function(t, e, n) {
            if (typeof t != "function") throw new TypeError("callback is not a function");
            n = (n == null ? WO() : +n) + (e == null ? 0 : +e), !this._next && Yx !== this && (Yx ? Yx._next = this : WE = this, Yx = this), this._call = t, this._time = n, GP();
        },
        stop: function() {
            this._call && (this._call = null, this._time = 1 / 0, GP());
        }
    };
    function SH(t, e, n) {
        var r = new HE;
        return r.restart(t, e, n), r;
    }
    function cue() {
        WO(), ++Hy;
        for(var t = WE, e; t;)(e = rm - t._time) >= 0 && t._call.call(void 0, e), t = t._next;
        --Hy;
    }
    function SB() {
        rm = (qE = db.now()) + MT, Hy = Kx = 0;
        try {
            cue();
        } finally{
            Hy = 0, due(), rm = 0;
        }
    }
    function uue() {
        var t = db.now(), e = t - qE;
        e > wH && (MT -= e, qE = t);
    }
    function due() {
        for(var t, e = WE, n, r = 1 / 0; e;)e._call ? (r > e._time && (r = e._time), t = e, e = e._next) : (n = e._next, e._next = null, e = t ? t._next = n : WE = n);
        Yx = t, GP(r);
    }
    function GP(t) {
        if (!Hy) {
            Kx && (Kx = clearTimeout(Kx));
            var e = t - rm;
            e > 24 ? (t < 1 / 0 && (Kx = setTimeout(SB, t - db.now() - MT)), Sx && (Sx = clearInterval(Sx))) : (Sx || (qE = db.now(), Sx = setInterval(uue, wH)), Hy = 1, _H(SB));
        }
    }
    function EB(t, e, n) {
        var r = new HE;
        return e = e == null ? 0 : +e, r.restart((i)=>{
            r.stop(), t(i + e);
        }, e, n), r;
    }
    var fue = ST("start", "end", "cancel", "interrupt"), hue = [], EH = 0, MB = 1, XP = 2, g1 = 3, TB = 4, KP = 5, y1 = 6;
    function TT(t, e, n, r, i, s) {
        var o = t.__transition;
        if (!o) t.__transition = {};
        else if (n in o) return;
        pue(t, n, {
            name: e,
            index: r,
            group: i,
            on: fue,
            tween: hue,
            time: s.time,
            delay: s.delay,
            duration: s.duration,
            ease: s.ease,
            timer: null,
            state: EH
        });
    }
    function qO(t, e) {
        var n = cc(t, e);
        if (n.state > EH) throw new Error("too late; already scheduled");
        return n;
    }
    function Zc(t, e) {
        var n = cc(t, e);
        if (n.state > g1) throw new Error("too late; already running");
        return n;
    }
    function cc(t, e) {
        var n = t.__transition;
        if (!n || !(n = n[e])) throw new Error("transition not found");
        return n;
    }
    function pue(t, e, n) {
        var r = t.__transition, i;
        r[e] = n, n.timer = SH(s, 0, n.time);
        function s(c) {
            n.state = MB, n.timer.restart(o, n.delay, n.time), n.delay <= c && o(c - n.delay);
        }
        function o(c) {
            var u, f, p, g;
            if (n.state !== MB) return l();
            for(u in r)if (g = r[u], g.name === n.name) {
                if (g.state === g1) return EB(o);
                g.state === TB ? (g.state = y1, g.timer.stop(), g.on.call("interrupt", t, t.__data__, g.index, g.group), delete r[u]) : +u < e && (g.state = y1, g.timer.stop(), g.on.call("cancel", t, t.__data__, g.index, g.group), delete r[u]);
            }
            if (EB(function() {
                n.state === g1 && (n.state = TB, n.timer.restart(a, n.delay, n.time), a(c));
            }), n.state = XP, n.on.call("start", t, t.__data__, n.index, n.group), n.state === XP) {
                for(n.state = g1, i = new Array(p = n.tween.length), u = 0, f = -1; u < p; ++u)(g = n.tween[u].value.call(t, t.__data__, n.index, n.group)) && (i[++f] = g);
                i.length = f + 1;
            }
        }
        function a(c) {
            for(var u = c < n.duration ? n.ease.call(null, c / n.duration) : (n.timer.restart(l), n.state = KP, 1), f = -1, p = i.length; ++f < p;)i[f].call(t, u);
            n.state === KP && (n.on.call("end", t, t.__data__, n.index, n.group), l());
        }
        function l() {
            n.state = y1, n.timer.stop(), delete r[e];
            for(var c in r)return;
            delete t.__transition;
        }
    }
    function v1(t, e) {
        var n = t.__transition, r, i, s = !0, o;
        if (n) {
            e = e == null ? null : e + "";
            for(o in n){
                if ((r = n[o]).name !== e) {
                    s = !1;
                    continue;
                }
                i = r.state > XP && r.state < KP, r.state = y1, r.timer.stop(), r.on.call(i ? "interrupt" : "cancel", t, t.__data__, r.index, r.group), delete n[o];
            }
            s && delete t.__transition;
        }
    }
    function mue(t) {
        return this.each(function() {
            v1(this, t);
        });
    }
    function gue(t, e) {
        var n, r;
        return function() {
            var i = Zc(this, t), s = i.tween;
            if (s !== n) {
                r = n = s;
                for(var o = 0, a = r.length; o < a; ++o)if (r[o].name === e) {
                    r = r.slice(), r.splice(o, 1);
                    break;
                }
            }
            i.tween = r;
        };
    }
    function yue(t, e, n) {
        var r, i;
        if (typeof n != "function") throw new Error;
        return function() {
            var s = Zc(this, t), o = s.tween;
            if (o !== r) {
                i = (r = o).slice();
                for(var a = {
                    name: e,
                    value: n
                }, l = 0, c = i.length; l < c; ++l)if (i[l].name === e) {
                    i[l] = a;
                    break;
                }
                l === c && i.push(a);
            }
            s.tween = i;
        };
    }
    function vue(t, e) {
        var n = this._id;
        if (t += "", arguments.length < 2) {
            for(var r = cc(this.node(), n).tween, i = 0, s = r.length, o; i < s; ++i)if ((o = r[i]).name === t) return o.value;
            return null;
        }
        return this.each((e == null ? gue : yue)(n, t, e));
    }
    function HO(t, e, n) {
        var r = t._id;
        return t.each(function() {
            var i = Zc(this, r);
            (i.value || (i.value = {}))[e] = n.apply(this, arguments);
        }), function(i) {
            return cc(i, r).value[e];
        };
    }
    function MH(t, e) {
        var n;
        return (typeof e == "number" ? Sf : e instanceof ub ? bB : (n = ub(e)) ? (e = n, bB) : Qce)(t, e);
    }
    function xue(t) {
        return function() {
            this.removeAttribute(t);
        };
    }
    function bue(t) {
        return function() {
            this.removeAttributeNS(t.space, t.local);
        };
    }
    function wue(t, e, n) {
        var r, i = n + "", s;
        return function() {
            var o = this.getAttribute(t);
            return o === i ? null : o === r ? s : s = e(r = o, n);
        };
    }
    function _ue(t, e, n) {
        var r, i = n + "", s;
        return function() {
            var o = this.getAttributeNS(t.space, t.local);
            return o === i ? null : o === r ? s : s = e(r = o, n);
        };
    }
    function Sue(t, e, n) {
        var r, i, s;
        return function() {
            var o, a = n(this), l;
            return a == null ? void this.removeAttribute(t) : (o = this.getAttribute(t), l = a + "", o === l ? null : o === r && l === i ? s : (i = l, s = e(r = o, a)));
        };
    }
    function Eue(t, e, n) {
        var r, i, s;
        return function() {
            var o, a = n(this), l;
            return a == null ? void this.removeAttributeNS(t.space, t.local) : (o = this.getAttributeNS(t.space, t.local), l = a + "", o === l ? null : o === r && l === i ? s : (i = l, s = e(r = o, a)));
        };
    }
    function Mue(t, e) {
        var n = ET(t), r = n === "transform" ? rue : MH;
        return this.attrTween(t, typeof e == "function" ? (n.local ? Eue : Sue)(n, r, HO(this, "attr." + t, e)) : e == null ? (n.local ? bue : xue)(n) : (n.local ? _ue : wue)(n, r, e));
    }
    function Tue(t, e) {
        return function(n) {
            this.setAttribute(t, e.call(this, n));
        };
    }
    function Cue(t, e) {
        return function(n) {
            this.setAttributeNS(t.space, t.local, e.call(this, n));
        };
    }
    function Iue(t, e) {
        var n, r;
        function i() {
            var s = e.apply(this, arguments);
            return s !== r && (n = (r = s) && Cue(t, s)), n;
        }
        return i._value = e, i;
    }
    function Rue(t, e) {
        var n, r;
        function i() {
            var s = e.apply(this, arguments);
            return s !== r && (n = (r = s) && Tue(t, s)), n;
        }
        return i._value = e, i;
    }
    function Aue(t, e) {
        var n = "attr." + t;
        if (arguments.length < 2) return (n = this.tween(n)) && n._value;
        if (e == null) return this.tween(n, null);
        if (typeof e != "function") throw new Error;
        var r = ET(t);
        return this.tween(n, (r.local ? Iue : Rue)(r, e));
    }
    function Nue(t, e) {
        return function() {
            qO(this, t).delay = +e.apply(this, arguments);
        };
    }
    function Pue(t, e) {
        return e = +e, function() {
            qO(this, t).delay = e;
        };
    }
    function kue(t) {
        var e = this._id;
        return arguments.length ? this.each((typeof t == "function" ? Nue : Pue)(e, t)) : cc(this.node(), e).delay;
    }
    function Oue(t, e) {
        return function() {
            Zc(this, t).duration = +e.apply(this, arguments);
        };
    }
    function Lue(t, e) {
        return e = +e, function() {
            Zc(this, t).duration = e;
        };
    }
    function Due(t) {
        var e = this._id;
        return arguments.length ? this.each((typeof t == "function" ? Oue : Lue)(e, t)) : cc(this.node(), e).duration;
    }
    function Fue(t, e) {
        if (typeof e != "function") throw new Error;
        return function() {
            Zc(this, t).ease = e;
        };
    }
    function jue(t) {
        var e = this._id;
        return arguments.length ? this.each(Fue(e, t)) : cc(this.node(), e).ease;
    }
    function Bue(t, e) {
        return function() {
            var n = e.apply(this, arguments);
            if (typeof n != "function") throw new Error;
            Zc(this, t).ease = n;
        };
    }
    function Uue(t) {
        if (typeof t != "function") throw new Error;
        return this.each(Bue(this._id, t));
    }
    function zue(t) {
        typeof t != "function" && (t = nH(t));
        for(var e = this._groups, n = e.length, r = new Array(n), i = 0; i < n; ++i)for(var s = e[i], o = s.length, a = r[i] = [], l, c = 0; c < o; ++c)(l = s[c]) && t.call(l, l.__data__, c, s) && a.push(l);
        return new pd(r, this._parents, this._name, this._id);
    }
    function Vue(t) {
        if (t._id !== this._id) throw new Error;
        for(var e = this._groups, n = t._groups, r = e.length, i = n.length, s = Math.min(r, i), o = new Array(r), a = 0; a < s; ++a)for(var l = e[a], c = n[a], u = l.length, f = o[a] = new Array(u), p, g = 0; g < u; ++g)(p = l[g] || c[g]) && (f[g] = p);
        for(; a < r; ++a)o[a] = e[a];
        return new pd(o, this._parents, this._name, this._id);
    }
    function Wue(t) {
        return (t + "").trim().split(/^|\s+/).every(function(e) {
            var n = e.indexOf(".");
            return n >= 0 && (e = e.slice(0, n)), !e || e === "start";
        });
    }
    function que(t, e, n) {
        var r, i, s = Wue(e) ? qO : Zc;
        return function() {
            var o = s(this, t), a = o.on;
            a !== r && (i = (r = a).copy()).on(e, n), o.on = i;
        };
    }
    function Hue(t, e) {
        var n = this._id;
        return arguments.length < 2 ? cc(this.node(), n).on.on(t) : this.each(que(n, t, e));
    }
    function $ue(t) {
        return function() {
            var e = this.parentNode;
            for(var n in this.__transition)if (+n !== t) return;
            e && e.removeChild(this);
        };
    }
    function Gue() {
        return this.on("end.remove", $ue(this._id));
    }
    function Xue(t) {
        var e = this._name, n = this._id;
        typeof t != "function" && (t = UO(t));
        for(var r = this._groups, i = r.length, s = new Array(i), o = 0; o < i; ++o)for(var a = r[o], l = a.length, c = s[o] = new Array(l), u, f, p = 0; p < l; ++p)(u = a[p]) && (f = t.call(u, u.__data__, p, a)) && ("__data__" in u && (f.__data__ = u.__data__), c[p] = f, TT(c[p], e, n, p, c, cc(u, n)));
        return new pd(s, this._parents, e, n);
    }
    function Kue(t) {
        var e = this._name, n = this._id;
        typeof t != "function" && (t = tH(t));
        for(var r = this._groups, i = r.length, s = [], o = [], a = 0; a < i; ++a)for(var l = r[a], c = l.length, u, f = 0; f < c; ++f)if (u = l[f]) {
            for(var p = t.call(u, u.__data__, f, l), g, x = cc(u, n), S = 0, _ = p.length; S < _; ++S)(g = p[S]) && TT(g, e, n, S, p, x);
            s.push(p), o.push(u);
        }
        return new pd(s, o, e, n);
    }
    var Yue = rw.prototype.constructor;
    function Zue() {
        return new Yue(this._groups, this._parents);
    }
    function Jue(t, e) {
        var n, r, i;
        return function() {
            var s = qy(this, t), o = (this.style.removeProperty(t), qy(this, t));
            return s === o ? null : s === n && o === r ? i : i = e(n = s, r = o);
        };
    }
    function TH(t) {
        return function() {
            this.style.removeProperty(t);
        };
    }
    function Que(t, e, n) {
        var r, i = n + "", s;
        return function() {
            var o = qy(this, t);
            return o === i ? null : o === r ? s : s = e(r = o, n);
        };
    }
    function ede(t, e, n) {
        var r, i, s;
        return function() {
            var o = qy(this, t), a = n(this), l = a + "";
            return a == null && (l = a = (this.style.removeProperty(t), qy(this, t))), o === l ? null : o === r && l === i ? s : (i = l, s = e(r = o, a));
        };
    }
    function tde(t, e) {
        var n, r, i, s = "style." + e, o = "end." + s, a;
        return function() {
            var l = Zc(this, t), c = l.on, u = l.value[s] == null ? a || (a = TH(e)) : void 0;
            (c !== n || i !== u) && (r = (n = c).copy()).on(o, i = u), l.on = r;
        };
    }
    function nde(t, e, n) {
        var r = (t += "") == "transform" ? nue : MH;
        return e == null ? this.styleTween(t, Jue(t, r)).on("end.style." + t, TH(t)) : typeof e == "function" ? this.styleTween(t, ede(t, r, HO(this, "style." + t, e))).each(tde(this._id, t)) : this.styleTween(t, Que(t, r, e), n).on("end.style." + t, null);
    }
    function rde(t, e, n) {
        return function(r) {
            this.style.setProperty(t, e.call(this, r), n);
        };
    }
    function ide(t, e, n) {
        var r, i;
        function s() {
            var o = e.apply(this, arguments);
            return o !== i && (r = (i = o) && rde(t, o, n)), r;
        }
        return s._value = e, s;
    }
    function sde(t, e, n) {
        var r = "style." + (t += "");
        if (arguments.length < 2) return (r = this.tween(r)) && r._value;
        if (e == null) return this.tween(r, null);
        if (typeof e != "function") throw new Error;
        return this.tween(r, ide(t, e, n ?? ""));
    }
    function ode(t) {
        return function() {
            this.textContent = t;
        };
    }
    function ade(t) {
        return function() {
            var e = t(this);
            this.textContent = e ?? "";
        };
    }
    function lde(t) {
        return this.tween("text", typeof t == "function" ? ade(HO(this, "text", t)) : ode(t == null ? "" : t + ""));
    }
    function cde(t) {
        return function(e) {
            this.textContent = t.call(this, e);
        };
    }
    function ude(t) {
        var e, n;
        function r() {
            var i = t.apply(this, arguments);
            return i !== n && (e = (n = i) && cde(i)), e;
        }
        return r._value = t, r;
    }
    function dde(t) {
        var e = "text";
        if (arguments.length < 1) return (e = this.tween(e)) && e._value;
        if (t == null) return this.tween(e, null);
        if (typeof t != "function") throw new Error;
        return this.tween(e, ude(t));
    }
    function fde() {
        for(var t = this._name, e = this._id, n = CH(), r = this._groups, i = r.length, s = 0; s < i; ++s)for(var o = r[s], a = o.length, l, c = 0; c < a; ++c)if (l = o[c]) {
            var u = cc(l, e);
            TT(l, t, n, c, o, {
                time: u.time + u.delay + u.duration,
                delay: 0,
                duration: u.duration,
                ease: u.ease
            });
        }
        return new pd(r, this._parents, t, n);
    }
    function hde() {
        var t, e, n = this, r = n._id, i = n.size();
        return new Promise(function(s, o) {
            var a = {
                value: o
            }, l = {
                value: function() {
                    --i === 0 && s();
                }
            };
            n.each(function() {
                var c = Zc(this, r), u = c.on;
                u !== t && (e = (t = u).copy(), e._.cancel.push(a), e._.interrupt.push(a), e._.end.push(l)), c.on = e;
            }), i === 0 && s();
        });
    }
    var pde = 0;
    function pd(t, e, n, r) {
        this._groups = t, this._parents = e, this._name = n, this._id = r;
    }
    function CH() {
        return ++pde;
    }
    var ju = rw.prototype;
    pd.prototype = {
        constructor: pd,
        select: Xue,
        selectAll: Kue,
        selectChild: ju.selectChild,
        selectChildren: ju.selectChildren,
        filter: zue,
        merge: Vue,
        selection: Zue,
        transition: fde,
        call: ju.call,
        nodes: ju.nodes,
        node: ju.node,
        size: ju.size,
        empty: ju.empty,
        each: ju.each,
        on: Hue,
        attr: Mue,
        attrTween: Aue,
        style: nde,
        styleTween: sde,
        text: lde,
        textTween: dde,
        remove: Gue,
        tween: vue,
        delay: kue,
        duration: Due,
        ease: jue,
        easeVarying: Uue,
        end: hde,
        [Symbol.iterator]: ju[Symbol.iterator]
    };
    function mde(t) {
        return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
    }
    var gde = {
        time: null,
        delay: 0,
        duration: 250,
        ease: mde
    };
    function yde(t, e) {
        for(var n; !(n = t.__transition) || !(n = n[e]);)if (!(t = t.parentNode)) throw new Error(`transition ${e} not found`);
        return n;
    }
    function vde(t) {
        var e, n;
        t instanceof pd ? (e = t._id, t = t._name) : (e = CH(), (n = gde).time = WO(), t = t == null ? null : t + "");
        for(var r = this._groups, i = r.length, s = 0; s < i; ++s)for(var o = r[s], a = o.length, l, c = 0; c < a; ++c)(l = o[c]) && TT(l, t, e, c, o, n || yde(l, e));
        return new pd(r, this._parents, t, e);
    }
    rw.prototype.interrupt = mue;
    rw.prototype.transition = vde;
    const $_ = (t)=>()=>t;
    function xde(t, { sourceEvent: e, target: n, transform: r, dispatch: i }) {
        Object.defineProperties(this, {
            type: {
                value: t,
                enumerable: !0,
                configurable: !0
            },
            sourceEvent: {
                value: e,
                enumerable: !0,
                configurable: !0
            },
            target: {
                value: n,
                enumerable: !0,
                configurable: !0
            },
            transform: {
                value: r,
                enumerable: !0,
                configurable: !0
            },
            _: {
                value: i
            }
        });
    }
    function Qu(t, e, n) {
        this.k = t, this.x = e, this.y = n;
    }
    Qu.prototype = {
        constructor: Qu,
        scale: function(t) {
            return t === 1 ? this : new Qu(this.k * t, this.x, this.y);
        },
        translate: function(t, e) {
            return t === 0 & e === 0 ? this : new Qu(this.k, this.x + this.k * t, this.y + this.k * e);
        },
        apply: function(t) {
            return [
                t[0] * this.k + this.x,
                t[1] * this.k + this.y
            ];
        },
        applyX: function(t) {
            return t * this.k + this.x;
        },
        applyY: function(t) {
            return t * this.k + this.y;
        },
        invert: function(t) {
            return [
                (t[0] - this.x) / this.k,
                (t[1] - this.y) / this.k
            ];
        },
        invertX: function(t) {
            return (t - this.x) / this.k;
        },
        invertY: function(t) {
            return (t - this.y) / this.k;
        },
        rescaleX: function(t) {
            return t.copy().domain(t.range().map(this.invertX, this).map(t.invert, t));
        },
        rescaleY: function(t) {
            return t.copy().domain(t.range().map(this.invertY, this).map(t.invert, t));
        },
        toString: function() {
            return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
        }
    };
    var CT = new Qu(1, 0, 0);
    IH.prototype = Qu.prototype;
    function IH(t) {
        for(; !t.__zoom;)if (!(t = t.parentNode)) return CT;
        return t.__zoom;
    }
    function NA(t) {
        t.stopImmediatePropagation();
    }
    function Ex(t) {
        t.preventDefault(), t.stopImmediatePropagation();
    }
    function bde(t) {
        return (!t.ctrlKey || t.type === "wheel") && !t.button;
    }
    function wde() {
        var t = this;
        return t instanceof SVGElement ? (t = t.ownerSVGElement || t, t.hasAttribute("viewBox") ? (t = t.viewBox.baseVal, [
            [
                t.x,
                t.y
            ],
            [
                t.x + t.width,
                t.y + t.height
            ]
        ]) : [
            [
                0,
                0
            ],
            [
                t.width.baseVal.value,
                t.height.baseVal.value
            ]
        ]) : [
            [
                0,
                0
            ],
            [
                t.clientWidth,
                t.clientHeight
            ]
        ];
    }
    function CB() {
        return this.__zoom || CT;
    }
    function _de(t) {
        return -t.deltaY * (t.deltaMode === 1 ? .05 : t.deltaMode ? 1 : .002) * (t.ctrlKey ? 10 : 1);
    }
    function Sde() {
        return navigator.maxTouchPoints || "ontouchstart" in this;
    }
    function Ede(t, e, n) {
        var r = t.invertX(e[0][0]) - n[0][0], i = t.invertX(e[1][0]) - n[1][0], s = t.invertY(e[0][1]) - n[0][1], o = t.invertY(e[1][1]) - n[1][1];
        return t.translate(i > r ? (r + i) / 2 : Math.min(0, r) || Math.max(0, i), o > s ? (s + o) / 2 : Math.min(0, s) || Math.max(0, o));
    }
    function RH() {
        var t = bde, e = wde, n = Ede, r = _de, i = Sde, s = [
            0,
            1 / 0
        ], o = [
            [
                -1 / 0,
                -1 / 0
            ],
            [
                1 / 0,
                1 / 0
            ]
        ], a = 250, l = aue, c = ST("start", "zoom", "end"), u, f, p, g = 500, x = 150, S = 0, _ = 10;
        function b(j) {
            j.property("__zoom", CB).on("wheel.zoom", L, {
                passive: !1
            }).on("mousedown.zoom", R).on("dblclick.zoom", A).filter(i).on("touchstart.zoom", P).on("touchmove.zoom", B).on("touchend.zoom touchcancel.zoom", U).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
        }
        b.transform = function(j, K, q, te) {
            var W = j.selection ? j.selection() : j;
            W.property("__zoom", CB), j !== W ? k(j, K, q, te) : W.interrupt().each(function() {
                N(this, arguments).event(te).start().zoom(null, typeof K == "function" ? K.apply(this, arguments) : K).end();
            });
        }, b.scaleBy = function(j, K, q, te) {
            b.scaleTo(j, function() {
                var W = this.__zoom.k, J = typeof K == "function" ? K.apply(this, arguments) : K;
                return W * J;
            }, q, te);
        }, b.scaleTo = function(j, K, q, te) {
            b.transform(j, function() {
                var W = e.apply(this, arguments), J = this.__zoom, Q = q == null ? T(W) : typeof q == "function" ? q.apply(this, arguments) : q, Y = J.invert(Q), le = typeof K == "function" ? K.apply(this, arguments) : K;
                return n(E(M(J, le), Q, Y), W, o);
            }, q, te);
        }, b.translateBy = function(j, K, q, te) {
            b.transform(j, function() {
                return n(this.__zoom.translate(typeof K == "function" ? K.apply(this, arguments) : K, typeof q == "function" ? q.apply(this, arguments) : q), e.apply(this, arguments), o);
            }, null, te);
        }, b.translateTo = function(j, K, q, te, W) {
            b.transform(j, function() {
                var J = e.apply(this, arguments), Q = this.__zoom, Y = te == null ? T(J) : typeof te == "function" ? te.apply(this, arguments) : te;
                return n(CT.translate(Y[0], Y[1]).scale(Q.k).translate(typeof K == "function" ? -K.apply(this, arguments) : -K, typeof q == "function" ? -q.apply(this, arguments) : -q), J, o);
            }, te, W);
        };
        function M(j, K) {
            return K = Math.max(s[0], Math.min(s[1], K)), K === j.k ? j : new Qu(K, j.x, j.y);
        }
        function E(j, K, q) {
            var te = K[0] - q[0] * j.k, W = K[1] - q[1] * j.k;
            return te === j.x && W === j.y ? j : new Qu(j.k, te, W);
        }
        function T(j) {
            return [
                (+j[0][0] + +j[1][0]) / 2,
                (+j[0][1] + +j[1][1]) / 2
            ];
        }
        function k(j, K, q, te) {
            j.on("start.zoom", function() {
                N(this, arguments).event(te).start();
            }).on("interrupt.zoom end.zoom", function() {
                N(this, arguments).event(te).end();
            }).tween("zoom", function() {
                var W = this, J = arguments, Q = N(W, J).event(te), Y = e.apply(W, J), le = q == null ? T(Y) : typeof q == "function" ? q.apply(W, J) : q, ue = Math.max(Y[1][0] - Y[0][0], Y[1][1] - Y[0][1]), ie = W.__zoom, he = typeof K == "function" ? K.apply(W, J) : K, ge = l(ie.invert(le).concat(ue / ie.k), he.invert(le).concat(ue / he.k));
                return function(ve) {
                    if (ve === 1) ve = he;
                    else {
                        var Ee = ge(ve), Ce = ue / Ee[2];
                        ve = new Qu(Ce, le[0] - Ee[0] * Ce, le[1] - Ee[1] * Ce);
                    }
                    Q.zoom(null, ve);
                };
            });
        }
        function N(j, K, q) {
            return !q && j.__zooming || new D(j, K);
        }
        function D(j, K) {
            this.that = j, this.args = K, this.active = 0, this.sourceEvent = null, this.extent = e.apply(j, K), this.taps = 0;
        }
        D.prototype = {
            event: function(j) {
                return j && (this.sourceEvent = j), this;
            },
            start: function() {
                return ++this.active === 1 && (this.that.__zooming = this, this.emit("start")), this;
            },
            zoom: function(j, K) {
                return this.mouse && j !== "mouse" && (this.mouse[1] = K.invert(this.mouse[0])), this.touch0 && j !== "touch" && (this.touch0[1] = K.invert(this.touch0[0])), this.touch1 && j !== "touch" && (this.touch1[1] = K.invert(this.touch1[0])), this.that.__zoom = K, this.emit("zoom"), this;
            },
            end: function() {
                return --this.active === 0 && (delete this.that.__zooming, this.emit("end")), this;
            },
            emit: function(j) {
                var K = Aa(this.that).datum();
                c.call(j, this.that, new xde(j, {
                    sourceEvent: this.sourceEvent,
                    target: b,
                    transform: this.that.__zoom,
                    dispatch: c
                }), K);
            }
        };
        function L(j, ...K) {
            if (!t.apply(this, arguments)) return;
            var q = N(this, K).event(j), te = this.__zoom, W = Math.max(s[0], Math.min(s[1], te.k * Math.pow(2, r.apply(this, arguments)))), J = Wl(j);
            if (q.wheel) (q.mouse[0][0] !== J[0] || q.mouse[0][1] !== J[1]) && (q.mouse[1] = te.invert(q.mouse[0] = J)), clearTimeout(q.wheel);
            else {
                if (te.k === W) return;
                q.mouse = [
                    J,
                    te.invert(J)
                ], v1(this), q.start();
            }
            Ex(j), q.wheel = setTimeout(Q, x), q.zoom("mouse", n(E(M(te, W), q.mouse[0], q.mouse[1]), q.extent, o));
            function Q() {
                q.wheel = null, q.end();
            }
        }
        function R(j, ...K) {
            if (p || !t.apply(this, arguments)) return;
            var q = j.currentTarget, te = N(this, K, !0).event(j), W = Aa(j.view).on("mousemove.zoom", le, !0).on("mouseup.zoom", ue, !0), J = Wl(j, q), Q = j.clientX, Y = j.clientY;
            fH(j.view), NA(j), te.mouse = [
                J,
                this.__zoom.invert(J)
            ], v1(this), te.start();
            function le(ie) {
                if (Ex(ie), !te.moved) {
                    var he = ie.clientX - Q, ge = ie.clientY - Y;
                    te.moved = he * he + ge * ge > S;
                }
                te.event(ie).zoom("mouse", n(E(te.that.__zoom, te.mouse[0] = Wl(ie, q), te.mouse[1]), te.extent, o));
            }
            function ue(ie) {
                W.on("mousemove.zoom mouseup.zoom", null), hH(ie.view, te.moved), Ex(ie), te.event(ie).end();
            }
        }
        function A(j, ...K) {
            if (t.apply(this, arguments)) {
                var q = this.__zoom, te = Wl(j.changedTouches ? j.changedTouches[0] : j, this), W = q.invert(te), J = q.k * (j.shiftKey ? .5 : 2), Q = n(E(M(q, J), te, W), e.apply(this, K), o);
                Ex(j), a > 0 ? Aa(this).transition().duration(a).call(k, Q, te, j) : Aa(this).call(b.transform, Q, te, j);
            }
        }
        function P(j, ...K) {
            if (t.apply(this, arguments)) {
                var q = j.touches, te = q.length, W = N(this, K, j.changedTouches.length === te).event(j), J, Q, Y, le;
                for(NA(j), Q = 0; Q < te; ++Q)Y = q[Q], le = Wl(Y, this), le = [
                    le,
                    this.__zoom.invert(le),
                    Y.identifier
                ], W.touch0 ? !W.touch1 && W.touch0[2] !== le[2] && (W.touch1 = le, W.taps = 0) : (W.touch0 = le, J = !0, W.taps = 1 + !!u);
                u && (u = clearTimeout(u)), J && (W.taps < 2 && (f = le[0], u = setTimeout(function() {
                    u = null;
                }, g)), v1(this), W.start());
            }
        }
        function B(j, ...K) {
            if (this.__zooming) {
                var q = N(this, K).event(j), te = j.changedTouches, W = te.length, J, Q, Y, le;
                for(Ex(j), J = 0; J < W; ++J)Q = te[J], Y = Wl(Q, this), q.touch0 && q.touch0[2] === Q.identifier ? q.touch0[0] = Y : q.touch1 && q.touch1[2] === Q.identifier && (q.touch1[0] = Y);
                if (Q = q.that.__zoom, q.touch1) {
                    var ue = q.touch0[0], ie = q.touch0[1], he = q.touch1[0], ge = q.touch1[1], ve = (ve = he[0] - ue[0]) * ve + (ve = he[1] - ue[1]) * ve, Ee = (Ee = ge[0] - ie[0]) * Ee + (Ee = ge[1] - ie[1]) * Ee;
                    Q = M(Q, Math.sqrt(ve / Ee)), Y = [
                        (ue[0] + he[0]) / 2,
                        (ue[1] + he[1]) / 2
                    ], le = [
                        (ie[0] + ge[0]) / 2,
                        (ie[1] + ge[1]) / 2
                    ];
                } else if (q.touch0) Y = q.touch0[0], le = q.touch0[1];
                else return;
                q.zoom("touch", n(E(Q, Y, le), q.extent, o));
            }
        }
        function U(j, ...K) {
            if (this.__zooming) {
                var q = N(this, K).event(j), te = j.changedTouches, W = te.length, J, Q;
                for(NA(j), p && clearTimeout(p), p = setTimeout(function() {
                    p = null;
                }, g), J = 0; J < W; ++J)Q = te[J], q.touch0 && q.touch0[2] === Q.identifier ? delete q.touch0 : q.touch1 && q.touch1[2] === Q.identifier && delete q.touch1;
                if (q.touch1 && !q.touch0 && (q.touch0 = q.touch1, delete q.touch1), q.touch0) q.touch0[1] = this.__zoom.invert(q.touch0[0]);
                else if (q.end(), q.taps === 2 && (Q = Wl(Q, this), Math.hypot(f[0] - Q[0], f[1] - Q[1]) < _)) {
                    var Y = Aa(this).on("dblclick.zoom");
                    Y && Y.apply(this, arguments);
                }
            }
        }
        return b.wheelDelta = function(j) {
            return arguments.length ? (r = typeof j == "function" ? j : $_(+j), b) : r;
        }, b.filter = function(j) {
            return arguments.length ? (t = typeof j == "function" ? j : $_(!!j), b) : t;
        }, b.touchable = function(j) {
            return arguments.length ? (i = typeof j == "function" ? j : $_(!!j), b) : i;
        }, b.extent = function(j) {
            return arguments.length ? (e = typeof j == "function" ? j : $_([
                [
                    +j[0][0],
                    +j[0][1]
                ],
                [
                    +j[1][0],
                    +j[1][1]
                ]
            ]), b) : e;
        }, b.scaleExtent = function(j) {
            return arguments.length ? (s[0] = +j[0], s[1] = +j[1], b) : [
                s[0],
                s[1]
            ];
        }, b.translateExtent = function(j) {
            return arguments.length ? (o[0][0] = +j[0][0], o[1][0] = +j[1][0], o[0][1] = +j[0][1], o[1][1] = +j[1][1], b) : [
                [
                    o[0][0],
                    o[0][1]
                ],
                [
                    o[1][0],
                    o[1][1]
                ]
            ];
        }, b.constrain = function(j) {
            return arguments.length ? (n = j, b) : n;
        }, b.duration = function(j) {
            return arguments.length ? (a = +j, b) : a;
        }, b.interpolate = function(j) {
            return arguments.length ? (l = j, b) : l;
        }, b.on = function() {
            var j = c.on.apply(c, arguments);
            return j === c ? b : j;
        }, b.clickDistance = function(j) {
            return arguments.length ? (S = (j = +j) * j, b) : Math.sqrt(S);
        }, b.tapDistance = function(j) {
            return arguments.length ? (_ = +j, b) : _;
        }, b;
    }
    const xd = {
        error001: ()=>"[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001",
        error002: ()=>"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.",
        error003: (t)=>`Node type "${t}" not found. Using fallback type "default".`,
        error004: ()=>"The React Flow parent container needs a width and a height to render the graph.",
        error005: ()=>"Only child nodes can use a parent extent.",
        error006: ()=>"Can't create edge. An edge needs a source and a target.",
        error007: (t)=>`The old edge with id=${t} does not exist.`,
        error009: (t)=>`Marker type "${t}" doesn't exist.`,
        error008: (t, { id: e, sourceHandle: n, targetHandle: r })=>`Couldn't create edge for ${t} handle id: "${t === "source" ? n : r}", edge id: ${e}.`,
        error010: ()=>"Handle: No node id found. Make sure to only use a Handle inside a custom Node.",
        error011: (t)=>`Edge type "${t}" not found. Using fallback type "default".`,
        error012: (t)=>`Node with id "${t}" does not exist, it may have been removed. This can happen when a node is deleted before the "onNodeClick" handler is called.`,
        error013: (t = "react")=>`It seems that you haven't loaded the styles. Please import '@xyflow/${t}/dist/style.css' or base.css to make sure everything is working properly.`,
        error014: ()=>"useNodeConnections: No node ID found. Call useNodeConnections inside a custom Node or provide a node ID."
    }, fb = [
        [
            Number.NEGATIVE_INFINITY,
            Number.NEGATIVE_INFINITY
        ],
        [
            Number.POSITIVE_INFINITY,
            Number.POSITIVE_INFINITY
        ]
    ], AH = [
        "Enter",
        " ",
        "Escape"
    ];
    var $y;
    (function(t) {
        t.Strict = "strict", t.Loose = "loose";
    })($y || ($y = {}));
    var Up;
    (function(t) {
        t.Free = "free", t.Vertical = "vertical", t.Horizontal = "horizontal";
    })(Up || (Up = {}));
    var hb;
    (function(t) {
        t.Partial = "partial", t.Full = "full";
    })(hb || (hb = {}));
    const NH = {
        inProgress: !1,
        isValid: null,
        from: null,
        fromHandle: null,
        fromPosition: null,
        fromNode: null,
        to: null,
        toHandle: null,
        toPosition: null,
        toNode: null
    };
    var Af;
    (function(t) {
        t.Bezier = "default", t.Straight = "straight", t.Step = "step", t.SmoothStep = "smoothstep", t.SimpleBezier = "simplebezier";
    })(Af || (Af = {}));
    var $E;
    (function(t) {
        t.Arrow = "arrow", t.ArrowClosed = "arrowclosed";
    })($E || ($E = {}));
    var Qt;
    (function(t) {
        t.Left = "left", t.Top = "top", t.Right = "right", t.Bottom = "bottom";
    })(Qt || (Qt = {}));
    const IB = {
        [Qt.Left]: Qt.Right,
        [Qt.Right]: Qt.Left,
        [Qt.Top]: Qt.Bottom,
        [Qt.Bottom]: Qt.Top
    };
    function PH(t) {
        return t === null ? null : t ? "valid" : "invalid";
    }
    const kH = (t)=>"id" in t && "source" in t && "target" in t, Mde = (t)=>"id" in t && "position" in t && !("source" in t) && !("target" in t), $O = (t)=>"id" in t && "internals" in t && !("source" in t) && !("target" in t), sw = (t, e = [
        0,
        0
    ])=>{
        const { width: n, height: r } = bd(t), i = t.origin ?? e, s = n * i[0], o = r * i[1];
        return {
            x: t.position.x - s,
            y: t.position.y - o
        };
    }, Tde = (t, e = {
        nodeOrigin: [
            0,
            0
        ],
        nodeLookup: void 0
    })=>{
        if (t.length === 0) return {
            x: 0,
            y: 0,
            width: 0,
            height: 0
        };
        const n = t.reduce((r, i)=>{
            const s = typeof i == "string";
            let o = !e.nodeLookup && !s ? i : void 0;
            e.nodeLookup && (o = s ? e.nodeLookup.get(i) : $O(i) ? i : e.nodeLookup.get(i.id));
            const a = o ? GE(o, e.nodeOrigin) : {
                x: 0,
                y: 0,
                x2: 0,
                y2: 0
            };
            return IT(r, a);
        }, {
            x: 1 / 0,
            y: 1 / 0,
            x2: -1 / 0,
            y2: -1 / 0
        });
        return RT(n);
    }, ow = (t, e = {})=>{
        if (t.size === 0) return {
            x: 0,
            y: 0,
            width: 0,
            height: 0
        };
        let n = {
            x: 1 / 0,
            y: 1 / 0,
            x2: -1 / 0,
            y2: -1 / 0
        };
        return t.forEach((r)=>{
            if (e.filter === void 0 || e.filter(r)) {
                const i = GE(r);
                n = IT(n, i);
            }
        }), RT(n);
    }, OH = (t, e, [n, r, i] = [
        0,
        0,
        1
    ], s = !1, o = !1)=>{
        const a = {
            ...aw(e, [
                n,
                r,
                i
            ]),
            width: e.width / i,
            height: e.height / i
        }, l = [];
        for (const c of t.values()){
            const { measured: u, selectable: f = !0, hidden: p = !1 } = c;
            if (o && !f || p) continue;
            const g = u.width ?? c.width ?? c.initialWidth ?? null, x = u.height ?? c.height ?? c.initialHeight ?? null, S = pb(a, Xy(c)), _ = (g ?? 0) * (x ?? 0), b = s && S > 0;
            (!c.internals.handleBounds || b || S >= _ || c.dragging) && l.push(c);
        }
        return l;
    }, Cde = (t, e)=>{
        const n = new Set;
        return t.forEach((r)=>{
            n.add(r.id);
        }), e.filter((r)=>n.has(r.source) || n.has(r.target));
    };
    function YP(t, e) {
        const n = new Map, r = e?.nodes ? new Set(e.nodes.map((i)=>i.id)) : null;
        return t.forEach((i)=>{
            i.measured.width && i.measured.height && (e?.includeHiddenNodes || !i.hidden) && (!r || r.has(i.id)) && n.set(i.id, i);
        }), n;
    }
    async function ZP({ nodes: t, width: e, height: n, panZoom: r, minZoom: i, maxZoom: s }, o) {
        if (t.size === 0) return Promise.resolve(!1);
        const a = ow(t), l = GO(a, e, n, o?.minZoom ?? i, o?.maxZoom ?? s, o?.padding ?? .1);
        return await r.setViewport(l, {
            duration: o?.duration
        }), Promise.resolve(!0);
    }
    function LH({ nodeId: t, nextPosition: e, nodeLookup: n, nodeOrigin: r = [
        0,
        0
    ], nodeExtent: i, onError: s }) {
        const o = n.get(t), a = o.parentId ? n.get(o.parentId) : void 0, { x: l, y: c } = a ? a.internals.positionAbsolute : {
            x: 0,
            y: 0
        }, u = o.origin ?? r;
        let f = i;
        if (o.extent === "parent" && !o.expandParent) if (!a) s?.("005", xd.error005());
        else {
            const g = a.measured.width, x = a.measured.height;
            g && x && (f = [
                [
                    l,
                    c
                ],
                [
                    l + g,
                    c + x
                ]
            ]);
        }
        else a && Ky(o.extent) && (f = [
            [
                o.extent[0][0] + l,
                o.extent[0][1] + c
            ],
            [
                o.extent[1][0] + l,
                o.extent[1][1] + c
            ]
        ]);
        const p = Ky(f) ? im(e, f, o.measured) : e;
        return {
            position: {
                x: p.x - l + o.measured.width * u[0],
                y: p.y - c + o.measured.height * u[1]
            },
            positionAbsolute: p
        };
    }
    async function Ide({ nodesToRemove: t = [], edgesToRemove: e = [], nodes: n, edges: r, onBeforeDelete: i }) {
        const s = new Set(t.map((p)=>p.id)), o = [];
        for (const p of n){
            if (p.deletable === !1) continue;
            const g = s.has(p.id), x = !g && p.parentId && o.find((S)=>S.id === p.parentId);
            (g || x) && o.push(p);
        }
        const a = new Set(e.map((p)=>p.id)), l = r.filter((p)=>p.deletable !== !1), u = Cde(o, l);
        for (const p of l)a.has(p.id) && !u.find((x)=>x.id === p.id) && u.push(p);
        if (!i) return {
            edges: u,
            nodes: o
        };
        const f = await i({
            nodes: o,
            edges: u
        });
        return typeof f == "boolean" ? f ? {
            edges: u,
            nodes: o
        } : {
            edges: [],
            nodes: []
        } : f;
    }
    const Gy = (t, e = 0, n = 1)=>Math.min(Math.max(t, e), n), im = (t = {
        x: 0,
        y: 0
    }, e, n)=>({
            x: Gy(t.x, e[0][0], e[1][0] - (n?.width ?? 0)),
            y: Gy(t.y, e[0][1], e[1][1] - (n?.height ?? 0))
        });
    function DH(t, e, n) {
        const { width: r, height: i } = bd(n), { x: s, y: o } = n.internals.positionAbsolute;
        return im(t, [
            [
                s,
                o
            ],
            [
                s + r,
                o + i
            ]
        ], e);
    }
    const RB = (t, e, n)=>t < e ? Gy(Math.abs(t - e), 1, e) / e : t > n ? -Gy(Math.abs(t - n), 1, e) / e : 0, FH = (t, e, n = 15, r = 40)=>{
        const i = RB(t.x, r, e.width - r) * n, s = RB(t.y, r, e.height - r) * n;
        return [
            i,
            s
        ];
    }, IT = (t, e)=>({
            x: Math.min(t.x, e.x),
            y: Math.min(t.y, e.y),
            x2: Math.max(t.x2, e.x2),
            y2: Math.max(t.y2, e.y2)
        }), JP = ({ x: t, y: e, width: n, height: r })=>({
            x: t,
            y: e,
            x2: t + n,
            y2: e + r
        }), RT = ({ x: t, y: e, x2: n, y2: r })=>({
            x: t,
            y: e,
            width: n - t,
            height: r - e
        }), Xy = (t, e = [
        0,
        0
    ])=>{
        const { x: n, y: r } = $O(t) ? t.internals.positionAbsolute : sw(t, e);
        return {
            x: n,
            y: r,
            width: t.measured?.width ?? t.width ?? t.initialWidth ?? 0,
            height: t.measured?.height ?? t.height ?? t.initialHeight ?? 0
        };
    }, GE = (t, e = [
        0,
        0
    ])=>{
        const { x: n, y: r } = $O(t) ? t.internals.positionAbsolute : sw(t, e);
        return {
            x: n,
            y: r,
            x2: n + (t.measured?.width ?? t.width ?? t.initialWidth ?? 0),
            y2: r + (t.measured?.height ?? t.height ?? t.initialHeight ?? 0)
        };
    }, jH = (t, e)=>RT(IT(JP(t), JP(e))), pb = (t, e)=>{
        const n = Math.max(0, Math.min(t.x + t.width, e.x + e.width) - Math.max(t.x, e.x)), r = Math.max(0, Math.min(t.y + t.height, e.y + e.height) - Math.max(t.y, e.y));
        return Math.ceil(n * r);
    }, AB = (t)=>Jl(t.width) && Jl(t.height) && Jl(t.x) && Jl(t.y), Jl = (t)=>!isNaN(t) && isFinite(t), Rde = (t, e)=>{}, AT = (t, e = [
        1,
        1
    ])=>({
            x: e[0] * Math.round(t.x / e[0]),
            y: e[1] * Math.round(t.y / e[1])
        }), aw = ({ x: t, y: e }, [n, r, i], s = !1, o = [
        1,
        1
    ])=>{
        const a = {
            x: (t - n) / i,
            y: (e - r) / i
        };
        return s ? AT(a, o) : a;
    }, BH = ({ x: t, y: e }, [n, r, i])=>({
            x: t * i + n,
            y: e * i + r
        }), GO = (t, e, n, r, i, s)=>{
        const o = e / (t.width * (1 + s)), a = n / (t.height * (1 + s)), l = Math.min(o, a), c = Gy(l, r, i), u = t.x + t.width / 2, f = t.y + t.height / 2, p = e / 2 - u * c, g = n / 2 - f * c;
        return {
            x: p,
            y: g,
            zoom: c
        };
    }, XE = ()=>typeof navigator < "u" && navigator?.userAgent?.indexOf("Mac") >= 0;
    function Ky(t) {
        return t !== void 0 && t !== "parent";
    }
    function bd(t) {
        return {
            width: t.measured?.width ?? t.width ?? t.initialWidth ?? 0,
            height: t.measured?.height ?? t.height ?? t.initialHeight ?? 0
        };
    }
    function UH(t) {
        return (t.measured?.width ?? t.width ?? t.initialWidth) !== void 0 && (t.measured?.height ?? t.height ?? t.initialHeight) !== void 0;
    }
    function zH(t, e = {
        width: 0,
        height: 0
    }, n, r, i) {
        const s = {
            ...t
        }, o = r.get(n);
        if (o) {
            const a = o.origin || i;
            s.x += o.internals.positionAbsolute.x - (e.width ?? 0) * a[0], s.y += o.internals.positionAbsolute.y - (e.height ?? 0) * a[1];
        }
        return s;
    }
    function NB(t, e) {
        if (t.size !== e.size) return !1;
        for (const n of t)if (!e.has(n)) return !1;
        return !0;
    }
    function w0(t, { snapGrid: e = [
        0,
        0
    ], snapToGrid: n = !1, transform: r, containerBounds: i }) {
        const { x: s, y: o } = rd(t), a = aw({
            x: s - (i?.left ?? 0),
            y: o - (i?.top ?? 0)
        }, r), { x: l, y: c } = n ? AT(a, e) : a;
        return {
            xSnapped: l,
            ySnapped: c,
            ...a
        };
    }
    const NT = (t)=>({
            width: t.offsetWidth,
            height: t.offsetHeight
        }), VH = (t)=>t?.getRootNode?.() || window?.document, Ade = [
        "INPUT",
        "SELECT",
        "TEXTAREA"
    ];
    function QP(t) {
        const e = t.composedPath?.()?.[0] || t.target;
        return e?.nodeType !== 1 ? !1 : Ade.includes(e.nodeName) || e.hasAttribute("contenteditable") || !!e.closest(".nokey");
    }
    const WH = (t)=>"clientX" in t, rd = (t, e)=>{
        const n = WH(t), r = n ? t.clientX : t.touches?.[0].clientX, i = n ? t.clientY : t.touches?.[0].clientY;
        return {
            x: r - (e?.left ?? 0),
            y: i - (e?.top ?? 0)
        };
    }, PB = (t, e, n, r, i)=>{
        const s = e.querySelectorAll(`.${t}`);
        return !s || !s.length ? null : Array.from(s).map((o)=>{
            const a = o.getBoundingClientRect();
            return {
                id: o.getAttribute("data-handleid"),
                type: t,
                nodeId: i,
                position: o.getAttribute("data-handlepos"),
                x: (a.left - n.left) / r,
                y: (a.top - n.top) / r,
                ...NT(o)
            };
        });
    };
    function qH({ sourceX: t, sourceY: e, targetX: n, targetY: r, sourceControlX: i, sourceControlY: s, targetControlX: o, targetControlY: a }) {
        const l = t * .125 + i * .375 + o * .375 + n * .125, c = e * .125 + s * .375 + a * .375 + r * .125, u = Math.abs(l - t), f = Math.abs(c - e);
        return [
            l,
            c,
            u,
            f
        ];
    }
    function G_(t, e) {
        return t >= 0 ? .5 * t : e * 25 * Math.sqrt(-t);
    }
    function kB({ pos: t, x1: e, y1: n, x2: r, y2: i, c: s }) {
        switch(t){
            case Qt.Left:
                return [
                    e - G_(e - r, s),
                    n
                ];
            case Qt.Right:
                return [
                    e + G_(r - e, s),
                    n
                ];
            case Qt.Top:
                return [
                    e,
                    n - G_(n - i, s)
                ];
            case Qt.Bottom:
                return [
                    e,
                    n + G_(i - n, s)
                ];
        }
    }
    function XO({ sourceX: t, sourceY: e, sourcePosition: n = Qt.Bottom, targetX: r, targetY: i, targetPosition: s = Qt.Top, curvature: o = .25 }) {
        const [a, l] = kB({
            pos: n,
            x1: t,
            y1: e,
            x2: r,
            y2: i,
            c: o
        }), [c, u] = kB({
            pos: s,
            x1: r,
            y1: i,
            x2: t,
            y2: e,
            c: o
        }), [f, p, g, x] = qH({
            sourceX: t,
            sourceY: e,
            targetX: r,
            targetY: i,
            sourceControlX: a,
            sourceControlY: l,
            targetControlX: c,
            targetControlY: u
        });
        return [
            `M${t},${e} C${a},${l} ${c},${u} ${r},${i}`,
            f,
            p,
            g,
            x
        ];
    }
    function HH({ sourceX: t, sourceY: e, targetX: n, targetY: r }) {
        const i = Math.abs(n - t) / 2, s = n < t ? n + i : n - i, o = Math.abs(r - e) / 2, a = r < e ? r + o : r - o;
        return [
            s,
            a,
            i,
            o
        ];
    }
    function Nde({ sourceNode: t, targetNode: e, selected: n = !1, zIndex: r = 0, elevateOnSelect: i = !1 }) {
        if (!i) return r;
        const s = n || e.selected || t.selected, o = Math.max(t.internals.z || 0, e.internals.z || 0, 1e3);
        return r + (s ? o : 0);
    }
    function Pde({ sourceNode: t, targetNode: e, width: n, height: r, transform: i }) {
        const s = IT(GE(t), GE(e));
        s.x === s.x2 && (s.x2 += 1), s.y === s.y2 && (s.y2 += 1);
        const o = {
            x: -i[0] / i[2],
            y: -i[1] / i[2],
            width: n / i[2],
            height: r / i[2]
        };
        return pb(o, RT(s)) > 0;
    }
    const kde = ({ source: t, sourceHandle: e, target: n, targetHandle: r })=>`xy-edge__${t}${e || ""}-${n}${r || ""}`, Ode = (t, e)=>e.some((n)=>n.source === t.source && n.target === t.target && (n.sourceHandle === t.sourceHandle || !n.sourceHandle && !t.sourceHandle) && (n.targetHandle === t.targetHandle || !n.targetHandle && !t.targetHandle)), Lde = (t, e)=>{
        if (!t.source || !t.target) return e;
        let n;
        return kH(t) ? n = {
            ...t
        } : n = {
            ...t,
            id: kde(t)
        }, Ode(n, e) ? e : (n.sourceHandle === null && delete n.sourceHandle, n.targetHandle === null && delete n.targetHandle, e.concat(n));
    };
    function $H({ sourceX: t, sourceY: e, targetX: n, targetY: r }) {
        const [i, s, o, a] = HH({
            sourceX: t,
            sourceY: e,
            targetX: n,
            targetY: r
        });
        return [
            `M ${t},${e}L ${n},${r}`,
            i,
            s,
            o,
            a
        ];
    }
    const OB = {
        [Qt.Left]: {
            x: -1,
            y: 0
        },
        [Qt.Right]: {
            x: 1,
            y: 0
        },
        [Qt.Top]: {
            x: 0,
            y: -1
        },
        [Qt.Bottom]: {
            x: 0,
            y: 1
        }
    }, Dde = ({ source: t, sourcePosition: e = Qt.Bottom, target: n })=>e === Qt.Left || e === Qt.Right ? t.x < n.x ? {
            x: 1,
            y: 0
        } : {
            x: -1,
            y: 0
        } : t.y < n.y ? {
            x: 0,
            y: 1
        } : {
            x: 0,
            y: -1
        }, LB = (t, e)=>Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2));
    function Fde({ source: t, sourcePosition: e = Qt.Bottom, target: n, targetPosition: r = Qt.Top, center: i, offset: s }) {
        const o = OB[e], a = OB[r], l = {
            x: t.x + o.x * s,
            y: t.y + o.y * s
        }, c = {
            x: n.x + a.x * s,
            y: n.y + a.y * s
        }, u = Dde({
            source: l,
            sourcePosition: e,
            target: c
        }), f = u.x !== 0 ? "x" : "y", p = u[f];
        let g = [], x, S;
        const _ = {
            x: 0,
            y: 0
        }, b = {
            x: 0,
            y: 0
        }, [M, E, T, k] = HH({
            sourceX: t.x,
            sourceY: t.y,
            targetX: n.x,
            targetY: n.y
        });
        if (o[f] * a[f] === -1) {
            x = i.x ?? M, S = i.y ?? E;
            const D = [
                {
                    x,
                    y: l.y
                },
                {
                    x,
                    y: c.y
                }
            ], L = [
                {
                    x: l.x,
                    y: S
                },
                {
                    x: c.x,
                    y: S
                }
            ];
            o[f] === p ? g = f === "x" ? D : L : g = f === "x" ? L : D;
        } else {
            const D = [
                {
                    x: l.x,
                    y: c.y
                }
            ], L = [
                {
                    x: c.x,
                    y: l.y
                }
            ];
            if (f === "x" ? g = o.x === p ? L : D : g = o.y === p ? D : L, e === r) {
                const U = Math.abs(t[f] - n[f]);
                if (U <= s) {
                    const j = Math.min(s - 1, s - U);
                    o[f] === p ? _[f] = (l[f] > t[f] ? -1 : 1) * j : b[f] = (c[f] > n[f] ? -1 : 1) * j;
                }
            }
            if (e !== r) {
                const U = f === "x" ? "y" : "x", j = o[f] === a[U], K = l[U] > c[U], q = l[U] < c[U];
                (o[f] === 1 && (!j && K || j && q) || o[f] !== 1 && (!j && q || j && K)) && (g = f === "x" ? D : L);
            }
            const R = {
                x: l.x + _.x,
                y: l.y + _.y
            }, A = {
                x: c.x + b.x,
                y: c.y + b.y
            }, P = Math.max(Math.abs(R.x - g[0].x), Math.abs(A.x - g[0].x)), B = Math.max(Math.abs(R.y - g[0].y), Math.abs(A.y - g[0].y));
            P >= B ? (x = (R.x + A.x) / 2, S = g[0].y) : (x = g[0].x, S = (R.y + A.y) / 2);
        }
        return [
            [
                t,
                {
                    x: l.x + _.x,
                    y: l.y + _.y
                },
                ...g,
                {
                    x: c.x + b.x,
                    y: c.y + b.y
                },
                n
            ],
            x,
            S,
            T,
            k
        ];
    }
    function jde(t, e, n, r) {
        const i = Math.min(LB(t, e) / 2, LB(e, n) / 2, r), { x: s, y: o } = e;
        if (t.x === s && s === n.x || t.y === o && o === n.y) return `L${s} ${o}`;
        if (t.y === o) {
            const c = t.x < n.x ? -1 : 1, u = t.y < n.y ? 1 : -1;
            return `L ${s + i * c},${o}Q ${s},${o} ${s},${o + i * u}`;
        }
        const a = t.x < n.x ? 1 : -1, l = t.y < n.y ? -1 : 1;
        return `L ${s},${o + i * l}Q ${s},${o} ${s + i * a},${o}`;
    }
    function ek({ sourceX: t, sourceY: e, sourcePosition: n = Qt.Bottom, targetX: r, targetY: i, targetPosition: s = Qt.Top, borderRadius: o = 5, centerX: a, centerY: l, offset: c = 20 }) {
        const [u, f, p, g, x] = Fde({
            source: {
                x: t,
                y: e
            },
            sourcePosition: n,
            target: {
                x: r,
                y: i
            },
            targetPosition: s,
            center: {
                x: a,
                y: l
            },
            offset: c
        });
        return [
            u.reduce((_, b, M)=>{
                let E = "";
                return M > 0 && M < u.length - 1 ? E = jde(u[M - 1], b, u[M + 1], o) : E = `${M === 0 ? "M" : "L"}${b.x} ${b.y}`, _ += E, _;
            }, ""),
            f,
            p,
            g,
            x
        ];
    }
    function DB(t) {
        return t && !!(t.internals.handleBounds || t.handles?.length) && !!(t.measured.width || t.width || t.initialWidth);
    }
    function Bde(t) {
        const { sourceNode: e, targetNode: n } = t;
        if (!DB(e) || !DB(n)) return null;
        const r = e.internals.handleBounds || FB(e.handles), i = n.internals.handleBounds || FB(n.handles), s = jB(r?.source ?? [], t.sourceHandle), o = jB(t.connectionMode === $y.Strict ? i?.target ?? [] : (i?.target ?? []).concat(i?.source ?? []), t.targetHandle);
        if (!s || !o) return t.onError?.("008", xd.error008(s ? "target" : "source", {
            id: t.id,
            sourceHandle: t.sourceHandle,
            targetHandle: t.targetHandle
        })), null;
        const a = s?.position || Qt.Bottom, l = o?.position || Qt.Top, c = mb(e, s, a), u = mb(n, o, l);
        return {
            sourceX: c.x,
            sourceY: c.y,
            targetX: u.x,
            targetY: u.y,
            sourcePosition: a,
            targetPosition: l
        };
    }
    function FB(t) {
        if (!t) return null;
        const e = [], n = [];
        for (const r of t)r.width = r.width ?? 1, r.height = r.height ?? 1, r.type === "source" ? e.push(r) : r.type === "target" && n.push(r);
        return {
            source: e,
            target: n
        };
    }
    function mb(t, e, n = Qt.Left, r = !1) {
        const i = (e?.x ?? 0) + t.internals.positionAbsolute.x, s = (e?.y ?? 0) + t.internals.positionAbsolute.y, { width: o, height: a } = e ?? bd(t);
        if (r) return {
            x: i + o / 2,
            y: s + a / 2
        };
        switch(e?.position ?? n){
            case Qt.Top:
                return {
                    x: i + o / 2,
                    y: s
                };
            case Qt.Right:
                return {
                    x: i + o,
                    y: s + a / 2
                };
            case Qt.Bottom:
                return {
                    x: i + o / 2,
                    y: s + a
                };
            case Qt.Left:
                return {
                    x: i,
                    y: s + a / 2
                };
        }
    }
    function jB(t, e) {
        return t && (e ? t.find((n)=>n.id === e) : t[0]) || null;
    }
    function tk(t, e) {
        return t ? typeof t == "string" ? t : `${e ? `${e}__` : ""}${Object.keys(t).sort().map((r)=>`${r}=${t[r]}`).join("&")}` : "";
    }
    function Ude(t, { id: e, defaultColor: n, defaultMarkerStart: r, defaultMarkerEnd: i }) {
        const s = new Set;
        return t.reduce((o, a)=>([
                a.markerStart || r,
                a.markerEnd || i
            ].forEach((l)=>{
                if (l && typeof l == "object") {
                    const c = tk(l, e);
                    s.has(c) || (o.push({
                        id: c,
                        color: l.color || n,
                        ...l
                    }), s.add(c));
                }
            }), o), []).sort((o, a)=>o.id.localeCompare(a.id));
    }
    const KO = {
        nodeOrigin: [
            0,
            0
        ],
        nodeExtent: fb,
        elevateNodesOnSelect: !0,
        defaults: {}
    }, zde = {
        ...KO,
        checkEquality: !0
    };
    function YO(t, e) {
        const n = {
            ...t
        };
        for(const r in e)e[r] !== void 0 && (n[r] = e[r]);
        return n;
    }
    function Vde(t, e, n) {
        const r = YO(KO, n);
        for (const i of t.values())if (i.parentId) ZO(i, t, e, r);
        else {
            const s = sw(i, r.nodeOrigin), o = Ky(i.extent) ? i.extent : r.nodeExtent, a = im(s, o, bd(i));
            i.internals.positionAbsolute = a;
        }
    }
    function nk(t, e, n, r) {
        const i = YO(zde, r), s = new Map(e), o = i?.elevateNodesOnSelect ? 1e3 : 0;
        e.clear(), n.clear();
        for (const a of t){
            let l = s.get(a.id);
            if (i.checkEquality && a === l?.internals.userNode) e.set(a.id, l);
            else {
                const c = sw(a, i.nodeOrigin), u = Ky(a.extent) ? a.extent : i.nodeExtent, f = im(c, u, bd(a));
                l = {
                    ...i.defaults,
                    ...a,
                    measured: {
                        width: a.measured?.width,
                        height: a.measured?.height
                    },
                    internals: {
                        positionAbsolute: f,
                        handleBounds: a.measured ? l?.internals.handleBounds : void 0,
                        z: GH(a, o),
                        userNode: a
                    }
                }, e.set(a.id, l);
            }
            a.parentId && ZO(l, e, n, r);
        }
    }
    function Wde(t, e) {
        if (!t.parentId) return;
        const n = e.get(t.parentId);
        n ? n.set(t.id, t) : e.set(t.parentId, new Map([
            [
                t.id,
                t
            ]
        ]));
    }
    function ZO(t, e, n, r) {
        const { elevateNodesOnSelect: i, nodeOrigin: s, nodeExtent: o } = YO(KO, r), a = t.parentId, l = e.get(a);
        if (!l) {
            console.warn(`Parent node ${a} not found. Please make sure that parent nodes are in front of their child nodes in the nodes array.`);
            return;
        }
        Wde(t, n);
        const c = i ? 1e3 : 0, { x: u, y: f, z: p } = qde(t, l, s, o, c), { positionAbsolute: g } = t.internals, x = u !== g.x || f !== g.y;
        (x || p !== t.internals.z) && e.set(t.id, {
            ...t,
            internals: {
                ...t.internals,
                positionAbsolute: x ? {
                    x: u,
                    y: f
                } : g,
                z: p
            }
        });
    }
    function GH(t, e) {
        return (Jl(t.zIndex) ? t.zIndex : 0) + (t.selected ? e : 0);
    }
    function qde(t, e, n, r, i) {
        const { x: s, y: o } = e.internals.positionAbsolute, a = bd(t), l = sw(t, n), c = Ky(t.extent) ? im(l, t.extent, a) : l;
        let u = im({
            x: s + c.x,
            y: o + c.y
        }, r, a);
        t.extent === "parent" && (u = DH(u, a, e));
        const f = GH(t, i), p = e.internals.z ?? 0;
        return {
            x: u.x,
            y: u.y,
            z: p > f ? p : f
        };
    }
    function JO(t, e, n, r = [
        0,
        0
    ]) {
        const i = [], s = new Map;
        for (const o of t){
            const a = e.get(o.parentId);
            if (!a) continue;
            const l = s.get(o.parentId)?.expandedRect ?? Xy(a), c = jH(l, o.rect);
            s.set(o.parentId, {
                expandedRect: c,
                parent: a
            });
        }
        return s.size > 0 && s.forEach(({ expandedRect: o, parent: a }, l)=>{
            const c = a.internals.positionAbsolute, u = bd(a), f = a.origin ?? r, p = o.x < c.x ? Math.round(Math.abs(c.x - o.x)) : 0, g = o.y < c.y ? Math.round(Math.abs(c.y - o.y)) : 0, x = Math.max(u.width, Math.round(o.width)), S = Math.max(u.height, Math.round(o.height)), _ = (x - u.width) * f[0], b = (S - u.height) * f[1];
            (p > 0 || g > 0 || _ || b) && (i.push({
                id: l,
                type: "position",
                position: {
                    x: a.position.x - p + _,
                    y: a.position.y - g + b
                }
            }), n.get(l)?.forEach((M)=>{
                t.some((E)=>E.id === M.id) || i.push({
                    id: M.id,
                    type: "position",
                    position: {
                        x: M.position.x + p,
                        y: M.position.y + g
                    }
                });
            })), (u.width < o.width || u.height < o.height || p || g) && i.push({
                id: l,
                type: "dimensions",
                setAttributes: !0,
                dimensions: {
                    width: x + (p ? f[0] * p - _ : 0),
                    height: S + (g ? f[1] * g - b : 0)
                }
            });
        }), i;
    }
    function Hde(t, e, n, r, i, s) {
        const o = r?.querySelector(".xyflow__viewport");
        let a = !1;
        if (!o) return {
            changes: [],
            updatedInternals: a
        };
        const l = [], c = window.getComputedStyle(o), { m22: u } = new window.DOMMatrixReadOnly(c.transform), f = [];
        for (const p of t.values()){
            const g = e.get(p.id);
            if (!g) continue;
            if (g.hidden) {
                e.set(g.id, {
                    ...g,
                    internals: {
                        ...g.internals,
                        handleBounds: void 0
                    }
                }), a = !0;
                continue;
            }
            const x = NT(p.nodeElement), S = g.measured.width !== x.width || g.measured.height !== x.height;
            if (!!(x.width && x.height && (S || !g.internals.handleBounds || p.force))) {
                const b = p.nodeElement.getBoundingClientRect(), M = Ky(g.extent) ? g.extent : s;
                let { positionAbsolute: E } = g.internals;
                g.parentId && g.extent === "parent" ? E = DH(E, x, e.get(g.parentId)) : M && (E = im(E, M, x));
                const T = {
                    ...g,
                    measured: x,
                    internals: {
                        ...g.internals,
                        positionAbsolute: E,
                        handleBounds: {
                            source: PB("source", p.nodeElement, b, u, g.id),
                            target: PB("target", p.nodeElement, b, u, g.id)
                        }
                    }
                };
                e.set(g.id, T), g.parentId && ZO(T, e, n, {
                    nodeOrigin: i
                }), a = !0, S && (l.push({
                    id: g.id,
                    type: "dimensions",
                    dimensions: x
                }), g.expandParent && g.parentId && f.push({
                    id: g.id,
                    parentId: g.parentId,
                    rect: Xy(T, i)
                }));
            }
        }
        if (f.length > 0) {
            const p = JO(f, e, n, i);
            l.push(...p);
        }
        return {
            changes: l,
            updatedInternals: a
        };
    }
    async function $de({ delta: t, panZoom: e, transform: n, translateExtent: r, width: i, height: s }) {
        if (!e || !t.x && !t.y) return Promise.resolve(!1);
        const o = await e.setViewportConstrained({
            x: n[0] + t.x,
            y: n[1] + t.y,
            zoom: n[2]
        }, [
            [
                0,
                0
            ],
            [
                i,
                s
            ]
        ], r), a = !!o && (o.x !== n[0] || o.y !== n[1] || o.k !== n[2]);
        return Promise.resolve(a);
    }
    function BB(t, e, n, r, i, s) {
        let o = i;
        const a = r.get(o) || new Map;
        r.set(o, a.set(n, e)), o = `${i}-${t}`;
        const l = r.get(o) || new Map;
        if (r.set(o, l.set(n, e)), s) {
            o = `${i}-${t}-${s}`;
            const c = r.get(o) || new Map;
            r.set(o, c.set(n, e));
        }
    }
    function XH(t, e, n) {
        t.clear(), e.clear();
        for (const r of n){
            const { source: i, target: s, sourceHandle: o = null, targetHandle: a = null } = r, l = {
                edgeId: r.id,
                source: i,
                target: s,
                sourceHandle: o,
                targetHandle: a
            }, c = `${i}-${o}--${s}-${a}`, u = `${s}-${a}--${i}-${o}`;
            BB("source", l, u, t, i, o), BB("target", l, c, t, s, a), e.set(r.id, r);
        }
    }
    function KH(t, e) {
        if (!t.parentId) return !1;
        const n = e.get(t.parentId);
        return n ? n.selected ? !0 : KH(n, e) : !1;
    }
    function UB(t, e, n) {
        let r = t;
        do {
            if (r?.matches?.(e)) return !0;
            if (r === n) return !1;
            r = r?.parentElement;
        }while (r);
        return !1;
    }
    function Gde(t, e, n, r) {
        const i = new Map;
        for (const [s, o] of t)if ((o.selected || o.id === r) && (!o.parentId || !KH(o, t)) && (o.draggable || e && typeof o.draggable > "u")) {
            const a = t.get(s);
            a && i.set(s, {
                id: s,
                position: a.position || {
                    x: 0,
                    y: 0
                },
                distance: {
                    x: n.x - a.internals.positionAbsolute.x,
                    y: n.y - a.internals.positionAbsolute.y
                },
                extent: a.extent,
                parentId: a.parentId,
                origin: a.origin,
                expandParent: a.expandParent,
                internals: {
                    positionAbsolute: a.internals.positionAbsolute || {
                        x: 0,
                        y: 0
                    }
                },
                measured: {
                    width: a.measured.width ?? 0,
                    height: a.measured.height ?? 0
                }
            });
        }
        return i;
    }
    function PA({ nodeId: t, dragItems: e, nodeLookup: n, dragging: r = !0 }) {
        const i = [];
        for (const [o, a] of e){
            const l = n.get(o)?.internals.userNode;
            l && i.push({
                ...l,
                position: a.position,
                dragging: r
            });
        }
        if (!t) return [
            i[0],
            i
        ];
        const s = n.get(t)?.internals.userNode;
        return [
            s ? {
                ...s,
                position: e.get(t)?.position || s.position,
                dragging: r
            } : i[0],
            i
        ];
    }
    function Xde({ onNodeMouseDown: t, getStoreItems: e, onDragStart: n, onDrag: r, onDragStop: i }) {
        let s = {
            x: null,
            y: null
        }, o = 0, a = new Map, l = !1, c = {
            x: 0,
            y: 0
        }, u = null, f = !1, p = null, g = !1;
        function x({ noDragClassName: _, handleSelector: b, domNode: M, isSelectable: E, nodeId: T, nodeClickDistance: k = 0 }) {
            p = Aa(M);
            function N({ x: A, y: P }, B) {
                const { nodeLookup: U, nodeExtent: j, snapGrid: K, snapToGrid: q, nodeOrigin: te, onNodeDrag: W, onSelectionDrag: J, onError: Q, updateNodePositions: Y } = e();
                s = {
                    x: A,
                    y: P
                };
                let le = !1, ue = {
                    x: 0,
                    y: 0,
                    x2: 0,
                    y2: 0
                };
                if (a.size > 1 && j) {
                    const ie = ow(a);
                    ue = JP(ie);
                }
                for (const [ie, he] of a){
                    if (!U.has(ie)) continue;
                    let ge = {
                        x: A - he.distance.x,
                        y: P - he.distance.y
                    };
                    q && (ge = AT(ge, K));
                    let ve = [
                        [
                            j[0][0],
                            j[0][1]
                        ],
                        [
                            j[1][0],
                            j[1][1]
                        ]
                    ];
                    if (a.size > 1 && j && !he.extent) {
                        const { positionAbsolute: Ne } = he.internals, Ve = Ne.x - ue.x + j[0][0], we = Ne.x + he.measured.width - ue.x2 + j[1][0], Me = Ne.y - ue.y + j[0][1], se = Ne.y + he.measured.height - ue.y2 + j[1][1];
                        ve = [
                            [
                                Ve,
                                Me
                            ],
                            [
                                we,
                                se
                            ]
                        ];
                    }
                    const { position: Ee, positionAbsolute: Ce } = LH({
                        nodeId: ie,
                        nextPosition: ge,
                        nodeLookup: U,
                        nodeExtent: ve,
                        nodeOrigin: te,
                        onError: Q
                    });
                    le = le || he.position.x !== Ee.x || he.position.y !== Ee.y, he.position = Ee, he.internals.positionAbsolute = Ce;
                }
                if (le && (Y(a, !0), B && (r || W || !T && J))) {
                    const [ie, he] = PA({
                        nodeId: T,
                        dragItems: a,
                        nodeLookup: U
                    });
                    r?.(B, a, ie, he), W?.(B, ie, he), T || J?.(B, he);
                }
            }
            async function D() {
                if (!u) return;
                const { transform: A, panBy: P, autoPanSpeed: B, autoPanOnNodeDrag: U } = e();
                if (!U) {
                    l = !1, cancelAnimationFrame(o);
                    return;
                }
                const [j, K] = FH(c, u, B);
                (j !== 0 || K !== 0) && (s.x = (s.x ?? 0) - j / A[2], s.y = (s.y ?? 0) - K / A[2], await P({
                    x: j,
                    y: K
                }) && N(s, null)), o = requestAnimationFrame(D);
            }
            function L(A) {
                const { nodeLookup: P, multiSelectionActive: B, nodesDraggable: U, transform: j, snapGrid: K, snapToGrid: q, selectNodesOnDrag: te, onNodeDragStart: W, onSelectionDragStart: J, unselectNodesAndEdges: Q } = e();
                f = !0, (!te || !E) && !B && T && (P.get(T)?.selected || Q()), E && te && T && t?.(T);
                const Y = w0(A.sourceEvent, {
                    transform: j,
                    snapGrid: K,
                    snapToGrid: q,
                    containerBounds: u
                });
                if (s = Y, a = Gde(P, U, Y, T), a.size > 0 && (n || W || !T && J)) {
                    const [le, ue] = PA({
                        nodeId: T,
                        dragItems: a,
                        nodeLookup: P
                    });
                    n?.(A.sourceEvent, a, le, ue), W?.(A.sourceEvent, le, ue), T || J?.(A.sourceEvent, ue);
                }
            }
            const R = pH().clickDistance(k).on("start", (A)=>{
                const { domNode: P, nodeDragThreshold: B, transform: U, snapGrid: j, snapToGrid: K } = e();
                u = P?.getBoundingClientRect() || null, g = !1, B === 0 && L(A), s = w0(A.sourceEvent, {
                    transform: U,
                    snapGrid: j,
                    snapToGrid: K,
                    containerBounds: u
                }), c = rd(A.sourceEvent, u);
            }).on("drag", (A)=>{
                const { autoPanOnNodeDrag: P, transform: B, snapGrid: U, snapToGrid: j, nodeDragThreshold: K, nodeLookup: q } = e(), te = w0(A.sourceEvent, {
                    transform: B,
                    snapGrid: U,
                    snapToGrid: j,
                    containerBounds: u
                });
                if ((A.sourceEvent.type === "touchmove" && A.sourceEvent.touches.length > 1 || T && !q.has(T)) && (g = !0), !g) {
                    if (!l && P && f && (l = !0, D()), !f) {
                        const W = te.xSnapped - (s.x ?? 0), J = te.ySnapped - (s.y ?? 0);
                        Math.sqrt(W * W + J * J) > K && L(A);
                    }
                    (s.x !== te.xSnapped || s.y !== te.ySnapped) && a && f && (c = rd(A.sourceEvent, u), N(te, A.sourceEvent));
                }
            }).on("end", (A)=>{
                if (!(!f || g) && (l = !1, f = !1, cancelAnimationFrame(o), a.size > 0)) {
                    const { nodeLookup: P, updateNodePositions: B, onNodeDragStop: U, onSelectionDragStop: j } = e();
                    if (B(a, !1), i || U || !T && j) {
                        const [K, q] = PA({
                            nodeId: T,
                            dragItems: a,
                            nodeLookup: P,
                            dragging: !1
                        });
                        i?.(A.sourceEvent, a, K, q), U?.(A.sourceEvent, K, q), T || j?.(A.sourceEvent, q);
                    }
                }
            }).filter((A)=>{
                const P = A.target;
                return !A.button && (!_ || !UB(P, `.${_}`, M)) && (!b || UB(P, b, M));
            });
            p.call(R);
        }
        function S() {
            p?.on(".drag", null);
        }
        return {
            update: x,
            destroy: S
        };
    }
    function Kde(t, e, n) {
        const r = [], i = {
            x: t.x - n,
            y: t.y - n,
            width: n * 2,
            height: n * 2
        };
        for (const s of e.values())pb(i, Xy(s)) > 0 && r.push(s);
        return r;
    }
    const Yde = 250;
    function Zde(t, e, n, r) {
        let i = [], s = 1 / 0;
        const o = Kde(t, n, e + Yde);
        for (const a of o){
            const l = [
                ...a.internals.handleBounds?.source ?? [],
                ...a.internals.handleBounds?.target ?? []
            ];
            for (const c of l){
                if (r.nodeId === c.nodeId && r.type === c.type && r.id === c.id) continue;
                const { x: u, y: f } = mb(a, c, c.position, !0), p = Math.sqrt(Math.pow(u - t.x, 2) + Math.pow(f - t.y, 2));
                p > e || (p < s ? (i = [
                    {
                        ...c,
                        x: u,
                        y: f
                    }
                ], s = p) : p === s && i.push({
                    ...c,
                    x: u,
                    y: f
                }));
            }
        }
        if (!i.length) return null;
        if (i.length > 1) {
            const a = r.type === "source" ? "target" : "source";
            return i.find((l)=>l.type === a) ?? i[0];
        }
        return i[0];
    }
    function YH(t, e, n, r, i, s = !1) {
        const o = r.get(t);
        if (!o) return null;
        const a = i === "strict" ? o.internals.handleBounds?.[e] : [
            ...o.internals.handleBounds?.source ?? [],
            ...o.internals.handleBounds?.target ?? []
        ], l = (n ? a?.find((c)=>c.id === n) : a?.[0]) ?? null;
        return l && s ? {
            ...l,
            ...mb(o, l, l.position, !0)
        } : l;
    }
    function ZH(t, e) {
        return t || (e?.classList.contains("target") ? "target" : e?.classList.contains("source") ? "source" : null);
    }
    function Jde(t, e) {
        let n = null;
        return e ? n = !0 : t && !e && (n = !1), n;
    }
    const JH = ()=>!0;
    function Qde(t, { connectionMode: e, connectionRadius: n, handleId: r, nodeId: i, edgeUpdaterType: s, isTarget: o, domNode: a, nodeLookup: l, lib: c, autoPanOnConnect: u, flowId: f, panBy: p, cancelConnection: g, onConnectStart: x, onConnect: S, onConnectEnd: _, isValidConnection: b = JH, onReconnectEnd: M, updateConnection: E, getTransform: T, getFromHandle: k, autoPanSpeed: N }) {
        const D = VH(t.target);
        let L = 0, R;
        const { x: A, y: P } = rd(t), B = D?.elementFromPoint(A, P), U = ZH(s, B), j = a?.getBoundingClientRect();
        if (!j || !U) return;
        const K = YH(i, U, r, l, e);
        if (!K) return;
        let q = rd(t, j), te = !1, W = null, J = !1, Q = null;
        function Y() {
            if (!u || !j) return;
            const [Ce, Ne] = FH(q, j, N);
            p({
                x: Ce,
                y: Ne
            }), L = requestAnimationFrame(Y);
        }
        const le = {
            ...K,
            nodeId: i,
            type: U,
            position: K.position
        }, ue = l.get(i), he = {
            inProgress: !0,
            isValid: null,
            from: mb(ue, le, Qt.Left, !0),
            fromHandle: le,
            fromPosition: le.position,
            fromNode: ue,
            to: q,
            toHandle: null,
            toPosition: IB[le.position],
            toNode: null
        };
        E(he);
        let ge = he;
        x?.(t, {
            nodeId: i,
            handleId: r,
            handleType: U
        });
        function ve(Ce) {
            if (!k() || !le) {
                Ee(Ce);
                return;
            }
            const Ne = T();
            q = rd(Ce, j), R = Zde(aw(q, Ne, !1, [
                1,
                1
            ]), n, l, le), te || (Y(), te = !0);
            const Ve = QH(Ce, {
                handle: R,
                connectionMode: e,
                fromNodeId: i,
                fromHandleId: r,
                fromType: o ? "target" : "source",
                isValidConnection: b,
                doc: D,
                lib: c,
                flowId: f,
                nodeLookup: l
            });
            Q = Ve.handleDomNode, W = Ve.connection, J = Jde(!!R, Ve.isValid);
            const we = {
                ...ge,
                isValid: J,
                to: R && J ? BH({
                    x: R.x,
                    y: R.y
                }, Ne) : q,
                toHandle: Ve.toHandle,
                toPosition: J && Ve.toHandle ? Ve.toHandle.position : IB[le.position],
                toNode: Ve.toHandle ? l.get(Ve.toHandle.nodeId) : null
            };
            J && R && ge.toHandle && we.toHandle && ge.toHandle.type === we.toHandle.type && ge.toHandle.nodeId === we.toHandle.nodeId && ge.toHandle.id === we.toHandle.id && ge.to.x === we.to.x && ge.to.y === we.to.y || (E(we), ge = we);
        }
        function Ee(Ce) {
            (R || Q) && W && J && S?.(W);
            const { inProgress: Ne, ...Ve } = ge, we = {
                ...Ve,
                toPosition: ge.toHandle ? ge.toPosition : null
            };
            _?.(Ce, we), s && M?.(Ce, we), g(), cancelAnimationFrame(L), te = !1, J = !1, W = null, Q = null, D.removeEventListener("mousemove", ve), D.removeEventListener("mouseup", Ee), D.removeEventListener("touchmove", ve), D.removeEventListener("touchend", Ee);
        }
        D.addEventListener("mousemove", ve), D.addEventListener("mouseup", Ee), D.addEventListener("touchmove", ve), D.addEventListener("touchend", Ee);
    }
    function QH(t, { handle: e, connectionMode: n, fromNodeId: r, fromHandleId: i, fromType: s, doc: o, lib: a, flowId: l, isValidConnection: c = JH, nodeLookup: u }) {
        const f = s === "target", p = e ? o.querySelector(`.${a}-flow__handle[data-id="${l}-${e?.nodeId}-${e?.id}-${e?.type}"]`) : null, { x: g, y: x } = rd(t), S = o.elementFromPoint(g, x), _ = S?.classList.contains(`${a}-flow__handle`) ? S : p, b = {
            handleDomNode: _,
            isValid: !1,
            connection: null,
            toHandle: null
        };
        if (_) {
            const M = ZH(void 0, _), E = _.getAttribute("data-nodeid"), T = _.getAttribute("data-handleid"), k = _.classList.contains("connectable"), N = _.classList.contains("connectableend");
            if (!E || !M) return b;
            const D = {
                source: f ? E : r,
                sourceHandle: f ? T : i,
                target: f ? r : E,
                targetHandle: f ? i : T
            };
            b.connection = D;
            const R = k && N && (n === $y.Strict ? f && M === "source" || !f && M === "target" : E !== r || T !== i);
            b.isValid = R && c(D), b.toHandle = YH(E, M, T, u, n, !1);
        }
        return b;
    }
    const rk = {
        onPointerDown: Qde,
        isValid: QH
    };
    function efe({ domNode: t, panZoom: e, getTransform: n, getViewScale: r }) {
        const i = Aa(t);
        function s({ translateExtent: a, width: l, height: c, zoomStep: u = 10, pannable: f = !0, zoomable: p = !0, inversePan: g = !1 }) {
            const x = (E)=>{
                const T = n();
                if (E.sourceEvent.type !== "wheel" || !e) return;
                const k = -E.sourceEvent.deltaY * (E.sourceEvent.deltaMode === 1 ? .05 : E.sourceEvent.deltaMode ? 1 : .002) * u, N = T[2] * Math.pow(2, k);
                e.scaleTo(N);
            };
            let S = [
                0,
                0
            ];
            const _ = (E)=>{
                (E.sourceEvent.type === "mousedown" || E.sourceEvent.type === "touchstart") && (S = [
                    E.sourceEvent.clientX ?? E.sourceEvent.touches[0].clientX,
                    E.sourceEvent.clientY ?? E.sourceEvent.touches[0].clientY
                ]);
            }, b = (E)=>{
                const T = n();
                if (E.sourceEvent.type !== "mousemove" && E.sourceEvent.type !== "touchmove" || !e) return;
                const k = [
                    E.sourceEvent.clientX ?? E.sourceEvent.touches[0].clientX,
                    E.sourceEvent.clientY ?? E.sourceEvent.touches[0].clientY
                ], N = [
                    k[0] - S[0],
                    k[1] - S[1]
                ];
                S = k;
                const D = r() * Math.max(T[2], Math.log(T[2])) * (g ? -1 : 1), L = {
                    x: T[0] - N[0] * D,
                    y: T[1] - N[1] * D
                }, R = [
                    [
                        0,
                        0
                    ],
                    [
                        l,
                        c
                    ]
                ];
                e.setViewportConstrained({
                    x: L.x,
                    y: L.y,
                    zoom: T[2]
                }, R, a);
            }, M = RH().on("start", _).on("zoom", f ? b : null).on("zoom.wheel", p ? x : null);
            i.call(M, {});
        }
        function o() {
            i.on("zoom", null);
        }
        return {
            update: s,
            destroy: o,
            pointer: Wl
        };
    }
    const tfe = (t, e)=>t.x !== e.x || t.y !== e.y || t.zoom !== e.k, PT = (t)=>({
            x: t.x,
            y: t.y,
            zoom: t.k
        }), kA = ({ x: t, y: e, zoom: n })=>CT.translate(t, e).scale(n), ay = (t, e)=>t.target.closest(`.${e}`), e$ = (t, e)=>e === 2 && Array.isArray(t) && t.includes(2), OA = (t, e = 0, n = ()=>{})=>{
        const r = typeof e == "number" && e > 0;
        return r || n(), r ? t.transition().duration(e).on("end", n) : t;
    }, t$ = (t)=>{
        const e = t.ctrlKey && XE() ? 10 : 1;
        return -t.deltaY * (t.deltaMode === 1 ? .05 : t.deltaMode ? 1 : .002) * e;
    };
    function nfe({ zoomPanValues: t, noWheelClassName: e, d3Selection: n, d3Zoom: r, panOnScrollMode: i, panOnScrollSpeed: s, zoomOnPinch: o, onPanZoomStart: a, onPanZoom: l, onPanZoomEnd: c }) {
        return (u)=>{
            if (ay(u, e)) return !1;
            u.preventDefault(), u.stopImmediatePropagation();
            const f = n.property("__zoom").k || 1;
            if (u.ctrlKey && o) {
                const _ = Wl(u), b = t$(u), M = f * Math.pow(2, b);
                r.scaleTo(n, M, _, u);
                return;
            }
            const p = u.deltaMode === 1 ? 20 : 1;
            let g = i === Up.Vertical ? 0 : u.deltaX * p, x = i === Up.Horizontal ? 0 : u.deltaY * p;
            !XE() && u.shiftKey && i !== Up.Vertical && (g = u.deltaY * p, x = 0), r.translateBy(n, -(g / f) * s, -(x / f) * s, {
                internal: !0
            });
            const S = PT(n.property("__zoom"));
            clearTimeout(t.panScrollTimeout), t.isPanScrolling || (t.isPanScrolling = !0, a?.(u, S)), t.isPanScrolling && (l?.(u, S), t.panScrollTimeout = setTimeout(()=>{
                c?.(u, S), t.isPanScrolling = !1;
            }, 150));
        };
    }
    function rfe({ noWheelClassName: t, preventScrolling: e, d3ZoomHandler: n }) {
        return function(r, i) {
            if (!e && r.type === "wheel" && !r.ctrlKey || ay(r, t)) return null;
            r.preventDefault(), n.call(this, r, i);
        };
    }
    function ife({ zoomPanValues: t, onDraggingChange: e, onPanZoomStart: n }) {
        return (r)=>{
            if (r.sourceEvent?.internal) return;
            const i = PT(r.transform);
            t.mouseButton = r.sourceEvent?.button || 0, t.isZoomingOrPanning = !0, t.prevViewport = i, r.sourceEvent?.type === "mousedown" && e(!0), n && n?.(r.sourceEvent, i);
        };
    }
    function sfe({ zoomPanValues: t, panOnDrag: e, onPaneContextMenu: n, onTransformChange: r, onPanZoom: i }) {
        return (s)=>{
            t.usedRightMouseButton = !!(n && e$(e, t.mouseButton ?? 0)), s.sourceEvent?.sync || r([
                s.transform.x,
                s.transform.y,
                s.transform.k
            ]), i && !s.sourceEvent?.internal && i?.(s.sourceEvent, PT(s.transform));
        };
    }
    function ofe({ zoomPanValues: t, panOnDrag: e, panOnScroll: n, onDraggingChange: r, onPanZoomEnd: i, onPaneContextMenu: s }) {
        return (o)=>{
            if (!o.sourceEvent?.internal && (t.isZoomingOrPanning = !1, s && e$(e, t.mouseButton ?? 0) && !t.usedRightMouseButton && o.sourceEvent && s(o.sourceEvent), t.usedRightMouseButton = !1, r(!1), i && tfe(t.prevViewport, o.transform))) {
                const a = PT(o.transform);
                t.prevViewport = a, clearTimeout(t.timerId), t.timerId = setTimeout(()=>{
                    i?.(o.sourceEvent, a);
                }, n ? 150 : 0);
            }
        };
    }
    function afe({ zoomActivationKeyPressed: t, zoomOnScroll: e, zoomOnPinch: n, panOnDrag: r, panOnScroll: i, zoomOnDoubleClick: s, userSelectionActive: o, noWheelClassName: a, noPanClassName: l, lib: c }) {
        return (u)=>{
            const f = t || e, p = n && u.ctrlKey;
            if (u.button === 1 && u.type === "mousedown" && (ay(u, `${c}-flow__node`) || ay(u, `${c}-flow__edge`))) return !0;
            if (!r && !f && !i && !s && !n || o || ay(u, a) && u.type === "wheel" || ay(u, l) && (u.type !== "wheel" || i && u.type === "wheel" && !t) || !n && u.ctrlKey && u.type === "wheel") return !1;
            if (!n && u.type === "touchstart" && u.touches?.length > 1) return u.preventDefault(), !1;
            if (!f && !i && !p && u.type === "wheel" || !r && (u.type === "mousedown" || u.type === "touchstart") || Array.isArray(r) && !r.includes(u.button) && u.type === "mousedown") return !1;
            const g = Array.isArray(r) && r.includes(u.button) || !u.button || u.button <= 1;
            return (!u.ctrlKey || u.type === "wheel") && g;
        };
    }
    function lfe({ domNode: t, minZoom: e, maxZoom: n, paneClickDistance: r, translateExtent: i, viewport: s, onPanZoom: o, onPanZoomStart: a, onPanZoomEnd: l, onDraggingChange: c }) {
        const u = {
            isZoomingOrPanning: !1,
            usedRightMouseButton: !1,
            prevViewport: {
                x: 0,
                y: 0,
                zoom: 0
            },
            mouseButton: 0,
            timerId: void 0,
            panScrollTimeout: void 0,
            isPanScrolling: !1
        }, f = t.getBoundingClientRect(), p = RH().clickDistance(!Jl(r) || r < 0 ? 0 : r).scaleExtent([
            e,
            n
        ]).translateExtent(i), g = Aa(t).call(p);
        E({
            x: s.x,
            y: s.y,
            zoom: Gy(s.zoom, e, n)
        }, [
            [
                0,
                0
            ],
            [
                f.width,
                f.height
            ]
        ], i);
        const x = g.on("wheel.zoom"), S = g.on("dblclick.zoom");
        p.wheelDelta(t$);
        function _(B, U) {
            return g ? new Promise((j)=>{
                p?.transform(OA(g, U?.duration, ()=>j(!0)), B);
            }) : Promise.resolve(!1);
        }
        function b({ noWheelClassName: B, noPanClassName: U, onPaneContextMenu: j, userSelectionActive: K, panOnScroll: q, panOnDrag: te, panOnScrollMode: W, panOnScrollSpeed: J, preventScrolling: Q, zoomOnPinch: Y, zoomOnScroll: le, zoomOnDoubleClick: ue, zoomActivationKeyPressed: ie, lib: he, onTransformChange: ge }) {
            K && !u.isZoomingOrPanning && M();
            const Ee = q && !ie && !K ? nfe({
                zoomPanValues: u,
                noWheelClassName: B,
                d3Selection: g,
                d3Zoom: p,
                panOnScrollMode: W,
                panOnScrollSpeed: J,
                zoomOnPinch: Y,
                onPanZoomStart: a,
                onPanZoom: o,
                onPanZoomEnd: l
            }) : rfe({
                noWheelClassName: B,
                preventScrolling: Q,
                d3ZoomHandler: x
            });
            if (g.on("wheel.zoom", Ee, {
                passive: !1
            }), !K) {
                const Ne = ife({
                    zoomPanValues: u,
                    onDraggingChange: c,
                    onPanZoomStart: a
                });
                p.on("start", Ne);
                const Ve = sfe({
                    zoomPanValues: u,
                    panOnDrag: te,
                    onPaneContextMenu: !!j,
                    onPanZoom: o,
                    onTransformChange: ge
                });
                p.on("zoom", Ve);
                const we = ofe({
                    zoomPanValues: u,
                    panOnDrag: te,
                    panOnScroll: q,
                    onPaneContextMenu: j,
                    onPanZoomEnd: l,
                    onDraggingChange: c
                });
                p.on("end", we);
            }
            const Ce = afe({
                zoomActivationKeyPressed: ie,
                panOnDrag: te,
                zoomOnScroll: le,
                panOnScroll: q,
                zoomOnDoubleClick: ue,
                zoomOnPinch: Y,
                userSelectionActive: K,
                noPanClassName: U,
                noWheelClassName: B,
                lib: he
            });
            p.filter(Ce), ue ? g.on("dblclick.zoom", S) : g.on("dblclick.zoom", null);
        }
        function M() {
            p.on("zoom", null);
        }
        async function E(B, U, j) {
            const K = kA(B), q = p?.constrain()(K, U, j);
            return q && await _(q), new Promise((te)=>te(q));
        }
        async function T(B, U) {
            const j = kA(B);
            return await _(j, U), new Promise((K)=>K(j));
        }
        function k(B) {
            if (g) {
                const U = kA(B), j = g.property("__zoom");
                (j.k !== B.zoom || j.x !== B.x || j.y !== B.y) && p?.transform(g, U, null, {
                    sync: !0
                });
            }
        }
        function N() {
            const B = g ? IH(g.node()) : {
                x: 0,
                y: 0,
                k: 1
            };
            return {
                x: B.x,
                y: B.y,
                zoom: B.k
            };
        }
        function D(B, U) {
            return g ? new Promise((j)=>{
                p?.scaleTo(OA(g, U?.duration, ()=>j(!0)), B);
            }) : Promise.resolve(!1);
        }
        function L(B, U) {
            return g ? new Promise((j)=>{
                p?.scaleBy(OA(g, U?.duration, ()=>j(!0)), B);
            }) : Promise.resolve(!1);
        }
        function R(B) {
            p?.scaleExtent(B);
        }
        function A(B) {
            p?.translateExtent(B);
        }
        function P(B) {
            const U = !Jl(B) || B < 0 ? 0 : B;
            p?.clickDistance(U);
        }
        return {
            update: b,
            destroy: M,
            setViewport: T,
            setViewportConstrained: E,
            getViewport: N,
            scaleTo: D,
            scaleBy: L,
            setScaleExtent: R,
            setTranslateExtent: A,
            syncViewport: k,
            setClickDistance: P
        };
    }
    var _0;
    (function(t) {
        t.Line = "line", t.Handle = "handle";
    })(_0 || (_0 = {}));
    function cfe({ width: t, prevWidth: e, height: n, prevHeight: r, affectsX: i, affectsY: s }) {
        const o = t - e, a = n - r, l = [
            o > 0 ? 1 : o < 0 ? -1 : 0,
            a > 0 ? 1 : a < 0 ? -1 : 0
        ];
        return o && i && (l[0] = l[0] * -1), a && s && (l[1] = l[1] * -1), l;
    }
    function ufe(t) {
        const e = t.includes("right") || t.includes("left"), n = t.includes("bottom") || t.includes("top"), r = t.includes("left"), i = t.includes("top");
        return {
            isHorizontal: e,
            isVertical: n,
            affectsX: r,
            affectsY: i
        };
    }
    function cf(t, e) {
        return Math.max(0, e - t);
    }
    function uf(t, e) {
        return Math.max(0, t - e);
    }
    function X_(t, e, n) {
        return Math.max(0, e - t, t - n);
    }
    function zB(t, e) {
        return t ? !e : e;
    }
    function dfe(t, e, n, r, i, s, o, a) {
        let { affectsX: l, affectsY: c } = e;
        const { isHorizontal: u, isVertical: f } = e, p = u && f, { xSnapped: g, ySnapped: x } = n, { minWidth: S, maxWidth: _, minHeight: b, maxHeight: M } = r, { x: E, y: T, width: k, height: N, aspectRatio: D } = t;
        let L = Math.floor(u ? g - t.pointerX : 0), R = Math.floor(f ? x - t.pointerY : 0);
        const A = k + (l ? -L : L), P = N + (c ? -R : R), B = -s[0] * k, U = -s[1] * N;
        let j = X_(A, S, _), K = X_(P, b, M);
        if (o) {
            let W = 0, J = 0;
            l && L < 0 ? W = cf(E + L + B, o[0][0]) : !l && L > 0 && (W = uf(E + A + B, o[1][0])), c && R < 0 ? J = cf(T + R + U, o[0][1]) : !c && R > 0 && (J = uf(T + P + U, o[1][1])), j = Math.max(j, W), K = Math.max(K, J);
        }
        if (a) {
            let W = 0, J = 0;
            l && L > 0 ? W = uf(E + L, a[0][0]) : !l && L < 0 && (W = cf(E + A, a[1][0])), c && R > 0 ? J = uf(T + R, a[0][1]) : !c && R < 0 && (J = cf(T + P, a[1][1])), j = Math.max(j, W), K = Math.max(K, J);
        }
        if (i) {
            if (u) {
                const W = X_(A / D, b, M) * D;
                if (j = Math.max(j, W), o) {
                    let J = 0;
                    !l && !c || l && !c && p ? J = uf(T + U + A / D, o[1][1]) * D : J = cf(T + U + (l ? L : -L) / D, o[0][1]) * D, j = Math.max(j, J);
                }
                if (a) {
                    let J = 0;
                    !l && !c || l && !c && p ? J = cf(T + A / D, a[1][1]) * D : J = uf(T + (l ? L : -L) / D, a[0][1]) * D, j = Math.max(j, J);
                }
            }
            if (f) {
                const W = X_(P * D, S, _) / D;
                if (K = Math.max(K, W), o) {
                    let J = 0;
                    !l && !c || c && !l && p ? J = uf(E + P * D + B, o[1][0]) / D : J = cf(E + (c ? R : -R) * D + B, o[0][0]) / D, K = Math.max(K, J);
                }
                if (a) {
                    let J = 0;
                    !l && !c || c && !l && p ? J = cf(E + P * D, a[1][0]) / D : J = uf(E + (c ? R : -R) * D, a[0][0]) / D, K = Math.max(K, J);
                }
            }
        }
        R = R + (R < 0 ? K : -K), L = L + (L < 0 ? j : -j), i && (p ? A > P * D ? R = (zB(l, c) ? -L : L) / D : L = (zB(l, c) ? -R : R) * D : u ? (R = L / D, c = l) : (L = R * D, l = c));
        const q = l ? E + L : E, te = c ? T + R : T;
        return {
            width: k + (l ? -L : L),
            height: N + (c ? -R : R),
            x: s[0] * L * (l ? -1 : 1) + q,
            y: s[1] * R * (c ? -1 : 1) + te
        };
    }
    const n$ = {
        width: 0,
        height: 0,
        x: 0,
        y: 0
    }, ffe = {
        ...n$,
        pointerX: 0,
        pointerY: 0,
        aspectRatio: 1
    };
    function hfe(t) {
        return [
            [
                0,
                0
            ],
            [
                t.measured.width,
                t.measured.height
            ]
        ];
    }
    function pfe(t, e, n) {
        const r = e.position.x + t.position.x, i = e.position.y + t.position.y, s = t.measured.width ?? 0, o = t.measured.height ?? 0, a = n[0] * s, l = n[1] * o;
        return [
            [
                r - a,
                i - l
            ],
            [
                r + s - a,
                i + o - l
            ]
        ];
    }
    function mfe({ domNode: t, nodeId: e, getStoreItems: n, onChange: r, onEnd: i }) {
        const s = Aa(t);
        function o({ controlPosition: l, boundaries: c, keepAspectRatio: u, onResizeStart: f, onResize: p, onResizeEnd: g, shouldResize: x }) {
            let S = {
                ...n$
            }, _ = {
                ...ffe
            };
            const b = ufe(l);
            let M, E = null, T = [], k, N, D;
            const L = pH().on("start", (R)=>{
                const { nodeLookup: A, transform: P, snapGrid: B, snapToGrid: U, nodeOrigin: j, paneDomNode: K } = n();
                if (M = A.get(e), !M) return;
                E = K?.getBoundingClientRect() ?? null;
                const { xSnapped: q, ySnapped: te } = w0(R.sourceEvent, {
                    transform: P,
                    snapGrid: B,
                    snapToGrid: U,
                    containerBounds: E
                });
                S = {
                    width: M.measured.width ?? 0,
                    height: M.measured.height ?? 0,
                    x: M.position.x ?? 0,
                    y: M.position.y ?? 0
                }, _ = {
                    ...S,
                    pointerX: q,
                    pointerY: te,
                    aspectRatio: S.width / S.height
                }, k = void 0, M.parentId && (M.extent === "parent" || M.expandParent) && (k = A.get(M.parentId), N = k && M.extent === "parent" ? hfe(k) : void 0), T = [], D = void 0;
                for (const [W, J] of A)if (J.parentId === e && (T.push({
                    id: W,
                    position: {
                        ...J.position
                    },
                    extent: J.extent
                }), J.extent === "parent" || J.expandParent)) {
                    const Q = pfe(J, M, J.origin ?? j);
                    D ? D = [
                        [
                            Math.min(Q[0][0], D[0][0]),
                            Math.min(Q[0][1], D[0][1])
                        ],
                        [
                            Math.max(Q[1][0], D[1][0]),
                            Math.max(Q[1][1], D[1][1])
                        ]
                    ] : D = Q;
                }
                f?.(R, {
                    ...S
                });
            }).on("drag", (R)=>{
                const { transform: A, snapGrid: P, snapToGrid: B, nodeOrigin: U } = n(), j = w0(R.sourceEvent, {
                    transform: A,
                    snapGrid: P,
                    snapToGrid: B,
                    containerBounds: E
                }), K = [];
                if (!M) return;
                const { x: q, y: te, width: W, height: J } = S, Q = {}, Y = M.origin ?? U, { width: le, height: ue, x: ie, y: he } = dfe(_, b, j, c, u, Y, N, D), ge = le !== W, ve = ue !== J, Ee = ie !== q && ge, Ce = he !== te && ve;
                if (!Ee && !Ce && !ge && !ve) return;
                if ((Ee || Ce || Y[0] === 1 || Y[1] === 1) && (Q.x = Ee ? ie : S.x, Q.y = Ce ? he : S.y, S.x = Q.x, S.y = Q.y, T.length > 0)) {
                    const Me = ie - q, se = he - te;
                    for (const Ye of T)Ye.position = {
                        x: Ye.position.x - Me + Y[0] * (le - W),
                        y: Ye.position.y - se + Y[1] * (ue - J)
                    }, K.push(Ye);
                }
                if ((ge || ve) && (Q.width = ge ? le : S.width, Q.height = ve ? ue : S.height, S.width = Q.width, S.height = Q.height), k && M.expandParent) {
                    const Me = Y[0] * (Q.width ?? 0);
                    Q.x && Q.x < Me && (S.x = Me, _.x = _.x - (Q.x - Me));
                    const se = Y[1] * (Q.height ?? 0);
                    Q.y && Q.y < se && (S.y = se, _.y = _.y - (Q.y - se));
                }
                const Ne = cfe({
                    width: S.width,
                    prevWidth: W,
                    height: S.height,
                    prevHeight: J,
                    affectsX: b.affectsX,
                    affectsY: b.affectsY
                }), Ve = {
                    ...S,
                    direction: Ne
                };
                x?.(R, Ve) !== !1 && (p?.(R, Ve), r(Q, K));
            }).on("end", (R)=>{
                g?.(R, {
                    ...S
                }), i?.();
            });
            s.call(L);
        }
        function a() {
            s.on(".drag", null);
        }
        return {
            update: o,
            destroy: a
        };
    }
    const gfe = {}, VB = (t)=>{
        let e;
        const n = new Set, r = (u, f)=>{
            const p = typeof u == "function" ? u(e) : u;
            if (!Object.is(p, e)) {
                const g = e;
                e = f ?? (typeof p != "object" || p === null) ? p : Object.assign({}, e, p), n.forEach((x)=>x(e, g));
            }
        }, i = ()=>e, l = {
            setState: r,
            getState: i,
            getInitialState: ()=>c,
            subscribe: (u)=>(n.add(u), ()=>n.delete(u)),
            destroy: ()=>{
                (gfe ? "production" : void 0) !== "production" && console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."), n.clear();
            }
        }, c = e = t(r, i, l);
        return l;
    }, yfe = (t)=>t ? VB(t) : VB, { useDebugValue: vfe } = nr, { useSyncExternalStoreWithSelector: xfe } = M7, bfe = (t)=>t;
    function r$(t, e = bfe, n) {
        const r = xfe(t.subscribe, t.getState, t.getServerState || t.getInitialState, e, n);
        return vfe(r), r;
    }
    const WB = (t, e)=>{
        const n = yfe(t), r = (i, s = e)=>r$(n, i, s);
        return Object.assign(r, n), r;
    }, wfe = (t, e)=>t ? WB(t, e) : WB;
    function di(t, e) {
        if (Object.is(t, e)) return !0;
        if (typeof t != "object" || t === null || typeof e != "object" || e === null) return !1;
        if (t instanceof Map && e instanceof Map) {
            if (t.size !== e.size) return !1;
            for (const [r, i] of t)if (!Object.is(i, e.get(r))) return !1;
            return !0;
        }
        if (t instanceof Set && e instanceof Set) {
            if (t.size !== e.size) return !1;
            for (const r of t)if (!e.has(r)) return !1;
            return !0;
        }
        const n = Object.keys(t);
        if (n.length !== Object.keys(e).length) return !1;
        for (const r of n)if (!Object.prototype.hasOwnProperty.call(e, r) || !Object.is(t[r], e[r])) return !1;
        return !0;
    }
    const kT = X.createContext(null), _fe = kT.Provider, i$ = xd.error001();
    function Qn(t, e) {
        const n = X.useContext(kT);
        if (n === null) throw new Error(i$);
        return r$(n, t, e);
    }
    function Yr() {
        const t = X.useContext(kT);
        if (t === null) throw new Error(i$);
        return X.useMemo(()=>({
                getState: t.getState,
                setState: t.setState,
                subscribe: t.subscribe
            }), [
            t
        ]);
    }
    const qB = {
        display: "none"
    }, Sfe = {
        position: "absolute",
        width: 1,
        height: 1,
        margin: -1,
        border: 0,
        padding: 0,
        overflow: "hidden",
        clip: "rect(0px, 0px, 0px, 0px)",
        clipPath: "inset(100%)"
    }, s$ = "react-flow__node-desc", o$ = "react-flow__edge-desc", Efe = "react-flow__aria-live", Mfe = (t)=>t.ariaLiveMessage;
    function Tfe({ rfId: t }) {
        const e = Qn(Mfe);
        return v.jsx("div", {
            id: `${Efe}-${t}`,
            "aria-live": "assertive",
            "aria-atomic": "true",
            style: Sfe,
            children: e
        });
    }
    function Cfe({ rfId: t, disableKeyboardA11y: e }) {
        return v.jsxs(v.Fragment, {
            children: [
                v.jsxs("div", {
                    id: `${s$}-${t}`,
                    style: qB,
                    children: [
                        "Press enter or space to select a node.",
                        !e && "You can then use the arrow keys to move the node around.",
                        " Press delete to remove it and escape to cancel.",
                        " "
                    ]
                }),
                v.jsx("div", {
                    id: `${o$}-${t}`,
                    style: qB,
                    children: "Press enter or space to select an edge. You can then press delete to remove it or escape to cancel."
                }),
                !e && v.jsx(Tfe, {
                    rfId: t
                })
            ]
        });
    }
    const Ife = (t)=>t.userSelectionActive ? "none" : "all", OT = X.forwardRef(({ position: t = "top-left", children: e, className: n, style: r, ...i }, s)=>{
        const o = Qn(Ife), a = `${t}`.split("-");
        return v.jsx("div", {
            className: qi([
                "react-flow__panel",
                n,
                ...a
            ]),
            style: {
                ...r,
                pointerEvents: o
            },
            ref: s,
            ...i,
            children: e
        });
    });
    OT.displayName = "Panel";
    function Rfe({ proOptions: t, position: e = "bottom-right" }) {
        return t?.hideAttribution ? null : v.jsx(OT, {
            position: e,
            className: "react-flow__attribution",
            "data-message": "Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev",
            children: v.jsx("a", {
                href: "https://reactflow.dev",
                target: "_blank",
                rel: "noopener noreferrer",
                "aria-label": "React Flow attribution",
                children: "React Flow"
            })
        });
    }
    const Afe = (t)=>{
        const e = [], n = [];
        for (const [, r] of t.nodeLookup)r.selected && e.push(r.internals.userNode);
        for (const [, r] of t.edgeLookup)r.selected && n.push(r);
        return {
            selectedNodes: e,
            selectedEdges: n
        };
    }, K_ = (t)=>t.id;
    function Nfe(t, e) {
        return di(t.selectedNodes.map(K_), e.selectedNodes.map(K_)) && di(t.selectedEdges.map(K_), e.selectedEdges.map(K_));
    }
    function Pfe({ onSelectionChange: t }) {
        const e = Yr(), { selectedNodes: n, selectedEdges: r } = Qn(Afe, Nfe);
        return X.useEffect(()=>{
            const i = {
                nodes: n,
                edges: r
            };
            t?.(i), e.getState().onSelectionChangeHandlers.forEach((s)=>s(i));
        }, [
            n,
            r,
            t
        ]), null;
    }
    const kfe = (t)=>!!t.onSelectionChangeHandlers;
    function Ofe({ onSelectionChange: t }) {
        const e = Qn(kfe);
        return t || e ? v.jsx(Pfe, {
            onSelectionChange: t
        }) : null;
    }
    const a$ = [
        0,
        0
    ], Lfe = {
        x: 0,
        y: 0,
        zoom: 1
    }, Dfe = [
        "nodes",
        "edges",
        "defaultNodes",
        "defaultEdges",
        "onConnect",
        "onConnectStart",
        "onConnectEnd",
        "onClickConnectStart",
        "onClickConnectEnd",
        "nodesDraggable",
        "nodesConnectable",
        "nodesFocusable",
        "edgesFocusable",
        "edgesReconnectable",
        "elevateNodesOnSelect",
        "elevateEdgesOnSelect",
        "minZoom",
        "maxZoom",
        "nodeExtent",
        "onNodesChange",
        "onEdgesChange",
        "elementsSelectable",
        "connectionMode",
        "snapGrid",
        "snapToGrid",
        "translateExtent",
        "connectOnClick",
        "defaultEdgeOptions",
        "fitView",
        "fitViewOptions",
        "onNodesDelete",
        "onEdgesDelete",
        "onDelete",
        "onNodeDrag",
        "onNodeDragStart",
        "onNodeDragStop",
        "onSelectionDrag",
        "onSelectionDragStart",
        "onSelectionDragStop",
        "onMoveStart",
        "onMove",
        "onMoveEnd",
        "noPanClassName",
        "nodeOrigin",
        "autoPanOnConnect",
        "autoPanOnNodeDrag",
        "onError",
        "connectionRadius",
        "isValidConnection",
        "selectNodesOnDrag",
        "nodeDragThreshold",
        "onBeforeDelete",
        "debug",
        "autoPanSpeed",
        "paneClickDistance"
    ], HB = [
        ...Dfe,
        "rfId"
    ], Ffe = (t)=>({
            setNodes: t.setNodes,
            setEdges: t.setEdges,
            setMinZoom: t.setMinZoom,
            setMaxZoom: t.setMaxZoom,
            setTranslateExtent: t.setTranslateExtent,
            setNodeExtent: t.setNodeExtent,
            reset: t.reset,
            setDefaultNodesAndEdges: t.setDefaultNodesAndEdges,
            setPaneClickDistance: t.setPaneClickDistance
        }), $B = {
        translateExtent: fb,
        nodeOrigin: a$,
        minZoom: .5,
        maxZoom: 2,
        elementsSelectable: !0,
        noPanClassName: "nopan",
        rfId: "1",
        paneClickDistance: 0
    };
    function jfe(t) {
        const { setNodes: e, setEdges: n, setMinZoom: r, setMaxZoom: i, setTranslateExtent: s, setNodeExtent: o, reset: a, setDefaultNodesAndEdges: l, setPaneClickDistance: c } = Qn(Ffe, di), u = Yr();
        X.useEffect(()=>(l(t.defaultNodes, t.defaultEdges), ()=>{
                f.current = $B, a();
            }), []);
        const f = X.useRef($B);
        return X.useEffect(()=>{
            for (const p of HB){
                const g = t[p], x = f.current[p];
                g !== x && (typeof t[p] > "u" || (p === "nodes" ? e(g) : p === "edges" ? n(g) : p === "minZoom" ? r(g) : p === "maxZoom" ? i(g) : p === "translateExtent" ? s(g) : p === "nodeExtent" ? o(g) : p === "paneClickDistance" ? c(g) : p === "fitView" ? u.setState({
                    fitViewOnInit: g
                }) : p === "fitViewOptions" ? u.setState({
                    fitViewOnInitOptions: g
                }) : u.setState({
                    [p]: g
                })));
            }
            f.current = t;
        }, HB.map((p)=>t[p])), null;
    }
    function GB() {
        return typeof window > "u" || !window.matchMedia ? null : window.matchMedia("(prefers-color-scheme: dark)");
    }
    function Bfe(t) {
        const [e, n] = X.useState(t === "system" ? null : t);
        return X.useEffect(()=>{
            if (t !== "system") {
                n(t);
                return;
            }
            const r = GB(), i = ()=>n(r?.matches ? "dark" : "light");
            return i(), r?.addEventListener("change", i), ()=>{
                r?.removeEventListener("change", i);
            };
        }, [
            t
        ]), e !== null ? e : GB()?.matches ? "dark" : "light";
    }
    const XB = typeof document < "u" ? document : null;
    function gb(t = null, e = {
        target: XB,
        actInsideInputWithModifier: !0
    }) {
        const [n, r] = X.useState(!1), i = X.useRef(!1), s = X.useRef(new Set([])), [o, a] = X.useMemo(()=>{
            if (t !== null) {
                const c = (Array.isArray(t) ? t : [
                    t
                ]).filter((f)=>typeof f == "string").map((f)=>f.replace("+", `
`).replace(`

`, `
+`).split(`
`)), u = c.reduce((f, p)=>f.concat(...p), []);
                return [
                    c,
                    u
                ];
            }
            return [
                [],
                []
            ];
        }, [
            t
        ]);
        return X.useEffect(()=>{
            const l = e?.target || XB;
            if (t !== null) {
                const c = (p)=>{
                    if (i.current = p.ctrlKey || p.metaKey || p.shiftKey, (!i.current || i.current && !e.actInsideInputWithModifier) && QP(p)) return !1;
                    const x = YB(p.code, a);
                    s.current.add(p[x]), KB(o, s.current, !1) && (p.preventDefault(), r(!0));
                }, u = (p)=>{
                    if ((!i.current || i.current && !e.actInsideInputWithModifier) && QP(p)) return !1;
                    const x = YB(p.code, a);
                    KB(o, s.current, !0) ? (r(!1), s.current.clear()) : s.current.delete(p[x]), p.key === "Meta" && s.current.clear(), i.current = !1;
                }, f = ()=>{
                    s.current.clear(), r(!1);
                };
                return l?.addEventListener("keydown", c), l?.addEventListener("keyup", u), window.addEventListener("blur", f), window.addEventListener("contextmenu", f), ()=>{
                    l?.removeEventListener("keydown", c), l?.removeEventListener("keyup", u), window.removeEventListener("blur", f), window.removeEventListener("contextmenu", f);
                };
            }
        }, [
            t,
            r
        ]), n;
    }
    function KB(t, e, n) {
        return t.filter((r)=>n || r.length === e.size).some((r)=>r.every((i)=>e.has(i)));
    }
    function YB(t, e) {
        return e.includes(t) ? "code" : "key";
    }
    const Ufe = ()=>{
        const t = Yr();
        return X.useMemo(()=>({
                zoomIn: (e)=>{
                    const { panZoom: n } = t.getState();
                    return n ? n.scaleBy(1.2, {
                        duration: e?.duration
                    }) : Promise.resolve(!1);
                },
                zoomOut: (e)=>{
                    const { panZoom: n } = t.getState();
                    return n ? n.scaleBy(1 / 1.2, {
                        duration: e?.duration
                    }) : Promise.resolve(!1);
                },
                zoomTo: (e, n)=>{
                    const { panZoom: r } = t.getState();
                    return r ? r.scaleTo(e, {
                        duration: n?.duration
                    }) : Promise.resolve(!1);
                },
                getZoom: ()=>t.getState().transform[2],
                setViewport: async (e, n)=>{
                    const { transform: [r, i, s], panZoom: o } = t.getState();
                    return o ? (await o.setViewport({
                        x: e.x ?? r,
                        y: e.y ?? i,
                        zoom: e.zoom ?? s
                    }, {
                        duration: n?.duration
                    }), Promise.resolve(!0)) : Promise.resolve(!1);
                },
                getViewport: ()=>{
                    const [e, n, r] = t.getState().transform;
                    return {
                        x: e,
                        y: n,
                        zoom: r
                    };
                },
                fitView: (e)=>{
                    const { nodeLookup: n, minZoom: r, maxZoom: i, panZoom: s, domNode: o } = t.getState();
                    if (!s || !o) return Promise.resolve(!1);
                    const a = YP(n, e), { width: l, height: c } = NT(o);
                    return ZP({
                        nodes: a,
                        width: l,
                        height: c,
                        minZoom: r,
                        maxZoom: i,
                        panZoom: s
                    }, e);
                },
                setCenter: async (e, n, r)=>{
                    const { width: i, height: s, maxZoom: o, panZoom: a } = t.getState(), l = typeof r?.zoom < "u" ? r.zoom : o, c = i / 2 - e * l, u = s / 2 - n * l;
                    return a ? (await a.setViewport({
                        x: c,
                        y: u,
                        zoom: l
                    }, {
                        duration: r?.duration
                    }), Promise.resolve(!0)) : Promise.resolve(!1);
                },
                fitBounds: async (e, n)=>{
                    const { width: r, height: i, minZoom: s, maxZoom: o, panZoom: a } = t.getState(), l = GO(e, r, i, s, o, n?.padding ?? .1);
                    return a ? (await a.setViewport(l, {
                        duration: n?.duration
                    }), Promise.resolve(!0)) : Promise.resolve(!1);
                },
                screenToFlowPosition: (e, n = {})=>{
                    const { transform: r, snapGrid: i, snapToGrid: s, domNode: o } = t.getState();
                    if (!o) return e;
                    const { x: a, y: l } = o.getBoundingClientRect(), c = {
                        x: e.x - a,
                        y: e.y - l
                    }, u = n.snapGrid ?? i, f = n.snapToGrid ?? s;
                    return aw(c, r, f, u);
                },
                flowToScreenPosition: (e)=>{
                    const { transform: n, domNode: r } = t.getState();
                    if (!r) return e;
                    const { x: i, y: s } = r.getBoundingClientRect(), o = BH(e, n);
                    return {
                        x: o.x + i,
                        y: o.y + s
                    };
                }
            }), []);
    };
    function l$(t, e) {
        const n = [], r = new Map, i = [];
        for (const s of t)if (s.type === "add") {
            i.push(s);
            continue;
        } else if (s.type === "remove" || s.type === "replace") r.set(s.id, [
            s
        ]);
        else {
            const o = r.get(s.id);
            o ? o.push(s) : r.set(s.id, [
                s
            ]);
        }
        for (const s of e){
            const o = r.get(s.id);
            if (!o) {
                n.push(s);
                continue;
            }
            if (o[0].type === "remove") continue;
            if (o[0].type === "replace") {
                n.push({
                    ...o[0].item
                });
                continue;
            }
            const a = {
                ...s
            };
            for (const l of o)zfe(l, a);
            n.push(a);
        }
        return i.length && i.forEach((s)=>{
            s.index !== void 0 ? n.splice(s.index, 0, {
                ...s.item
            }) : n.push({
                ...s.item
            });
        }), n;
    }
    function zfe(t, e) {
        switch(t.type){
            case "select":
                {
                    e.selected = t.selected;
                    break;
                }
            case "position":
                {
                    typeof t.position < "u" && (e.position = t.position), typeof t.dragging < "u" && (e.dragging = t.dragging);
                    break;
                }
            case "dimensions":
                {
                    typeof t.dimensions < "u" && (e.measured ??= {}, e.measured.width = t.dimensions.width, e.measured.height = t.dimensions.height, t.setAttributes && (e.width = t.dimensions.width, e.height = t.dimensions.height)), typeof t.resizing == "boolean" && (e.resizing = t.resizing);
                    break;
                }
        }
    }
    function Vfe(t, e) {
        return l$(t, e);
    }
    function Wfe(t, e) {
        return l$(t, e);
    }
    function yp(t, e) {
        return {
            id: t,
            type: "select",
            selected: e
        };
    }
    function ly(t, e = new Set, n = !1) {
        const r = [];
        for (const [i, s] of t){
            const o = e.has(i);
            !(s.selected === void 0 && !o) && s.selected !== o && (n && (s.selected = o), r.push(yp(s.id, o)));
        }
        return r;
    }
    function ZB({ items: t = [], lookup: e }) {
        const n = [], r = new Map(t.map((i)=>[
                i.id,
                i
            ]));
        for (const [i, s] of t.entries()){
            const o = e.get(s.id), a = o?.internals?.userNode ?? o;
            a !== void 0 && a !== s && n.push({
                id: s.id,
                item: s,
                type: "replace"
            }), a === void 0 && n.push({
                item: s,
                type: "add",
                index: i
            });
        }
        for (const [i] of e)r.get(i) === void 0 && n.push({
            id: i,
            type: "remove"
        });
        return n;
    }
    function JB(t) {
        return {
            id: t.id,
            type: "remove"
        };
    }
    const QB = (t)=>Mde(t), qfe = (t)=>kH(t);
    function c$(t) {
        return X.forwardRef(t);
    }
    const Hfe = typeof window < "u" ? X.useLayoutEffect : X.useEffect;
    function eU(t) {
        const [e, n] = X.useState(BigInt(0)), [r] = X.useState(()=>$fe(()=>n((i)=>i + BigInt(1))));
        return Hfe(()=>{
            const i = r.get();
            i.length && (t(i), r.reset());
        }, [
            e
        ]), r;
    }
    function $fe(t) {
        let e = [];
        return {
            get: ()=>e,
            reset: ()=>{
                e = [];
            },
            push: (n)=>{
                e.push(n), t();
            }
        };
    }
    const u$ = X.createContext(null);
    function Gfe({ children: t }) {
        const e = Yr(), n = X.useCallback((a)=>{
            const { nodes: l = [], setNodes: c, hasDefaultNodes: u, onNodesChange: f, nodeLookup: p } = e.getState();
            let g = l;
            for (const x of a)g = typeof x == "function" ? x(g) : x;
            u ? c(g) : f && f(ZB({
                items: g,
                lookup: p
            }));
        }, []), r = eU(n), i = X.useCallback((a)=>{
            const { edges: l = [], setEdges: c, hasDefaultEdges: u, onEdgesChange: f, edgeLookup: p } = e.getState();
            let g = l;
            for (const x of a)g = typeof x == "function" ? x(g) : x;
            u ? c(g) : f && f(ZB({
                items: g,
                lookup: p
            }));
        }, []), s = eU(i), o = X.useMemo(()=>({
                nodeQueue: r,
                edgeQueue: s
            }), []);
        return v.jsx(u$.Provider, {
            value: o,
            children: t
        });
    }
    function Xfe() {
        const t = X.useContext(u$);
        if (!t) throw new Error("useBatchContext must be used within a BatchProvider");
        return t;
    }
    const Kfe = (t)=>!!t.panZoom;
    function lw() {
        const t = Ufe(), e = Yr(), n = Xfe(), r = Qn(Kfe), i = X.useMemo(()=>{
            const s = (f)=>e.getState().nodeLookup.get(f), o = (f)=>{
                n.nodeQueue.push(f);
            }, a = (f)=>{
                n.edgeQueue.push(f);
            }, l = (f)=>{
                const { nodeLookup: p, nodeOrigin: g } = e.getState(), x = QB(f) ? f : p.get(f.id), S = x.parentId ? zH(x.position, x.measured, x.parentId, p, g) : x.position, _ = {
                    ...x,
                    position: S,
                    width: x.measured?.width ?? x.width,
                    height: x.measured?.height ?? x.height
                };
                return Xy(_);
            }, c = (f, p, g = {
                replace: !1
            })=>{
                o((x)=>x.map((S)=>{
                        if (S.id === f) {
                            const _ = typeof p == "function" ? p(S) : p;
                            return g.replace && QB(_) ? _ : {
                                ...S,
                                ..._
                            };
                        }
                        return S;
                    }));
            }, u = (f, p, g = {
                replace: !1
            })=>{
                a((x)=>x.map((S)=>{
                        if (S.id === f) {
                            const _ = typeof p == "function" ? p(S) : p;
                            return g.replace && qfe(_) ? _ : {
                                ...S,
                                ..._
                            };
                        }
                        return S;
                    }));
            };
            return {
                getNodes: ()=>e.getState().nodes.map((f)=>({
                            ...f
                        })),
                getNode: (f)=>s(f)?.internals.userNode,
                getInternalNode: s,
                getEdges: ()=>{
                    const { edges: f = [] } = e.getState();
                    return f.map((p)=>({
                            ...p
                        }));
                },
                getEdge: (f)=>e.getState().edgeLookup.get(f),
                setNodes: o,
                setEdges: a,
                addNodes: (f)=>{
                    const p = Array.isArray(f) ? f : [
                        f
                    ];
                    n.nodeQueue.push((g)=>[
                            ...g,
                            ...p
                        ]);
                },
                addEdges: (f)=>{
                    const p = Array.isArray(f) ? f : [
                        f
                    ];
                    n.edgeQueue.push((g)=>[
                            ...g,
                            ...p
                        ]);
                },
                toObject: ()=>{
                    const { nodes: f = [], edges: p = [], transform: g } = e.getState(), [x, S, _] = g;
                    return {
                        nodes: f.map((b)=>({
                                ...b
                            })),
                        edges: p.map((b)=>({
                                ...b
                            })),
                        viewport: {
                            x,
                            y: S,
                            zoom: _
                        }
                    };
                },
                deleteElements: async ({ nodes: f = [], edges: p = [] })=>{
                    const { nodes: g, edges: x, onNodesDelete: S, onEdgesDelete: _, triggerNodeChanges: b, triggerEdgeChanges: M, onDelete: E, onBeforeDelete: T } = e.getState(), { nodes: k, edges: N } = await Ide({
                        nodesToRemove: f,
                        edgesToRemove: p,
                        nodes: g,
                        edges: x,
                        onBeforeDelete: T
                    }), D = N.length > 0, L = k.length > 0;
                    if (D) {
                        const R = N.map(JB);
                        _?.(N), M(R);
                    }
                    if (L) {
                        const R = k.map(JB);
                        S?.(k), b(R);
                    }
                    return (L || D) && E?.({
                        nodes: k,
                        edges: N
                    }), {
                        deletedNodes: k,
                        deletedEdges: N
                    };
                },
                getIntersectingNodes: (f, p = !0, g)=>{
                    const x = AB(f), S = x ? f : l(f), _ = g !== void 0;
                    return S ? (g || e.getState().nodes).filter((b)=>{
                        const M = e.getState().nodeLookup.get(b.id);
                        if (M && !x && (b.id === f.id || !M.internals.positionAbsolute)) return !1;
                        const E = Xy(_ ? b : M), T = pb(E, S);
                        return p && T > 0 || T >= S.width * S.height;
                    }) : [];
                },
                isNodeIntersecting: (f, p, g = !0)=>{
                    const S = AB(f) ? f : l(f);
                    if (!S) return !1;
                    const _ = pb(S, p);
                    return g && _ > 0 || _ >= S.width * S.height;
                },
                updateNode: c,
                updateNodeData: (f, p, g = {
                    replace: !1
                })=>{
                    c(f, (x)=>{
                        const S = typeof p == "function" ? p(x) : p;
                        return g.replace ? {
                            ...x,
                            data: S
                        } : {
                            ...x,
                            data: {
                                ...x.data,
                                ...S
                            }
                        };
                    }, g);
                },
                updateEdge: u,
                updateEdgeData: (f, p, g = {
                    replace: !1
                })=>{
                    u(f, (x)=>{
                        const S = typeof p == "function" ? p(x) : p;
                        return g.replace ? {
                            ...x,
                            data: S
                        } : {
                            ...x,
                            data: {
                                ...x.data,
                                ...S
                            }
                        };
                    }, g);
                },
                getNodesBounds: (f)=>{
                    const { nodeLookup: p, nodeOrigin: g } = e.getState();
                    return Tde(f, {
                        nodeLookup: p,
                        nodeOrigin: g
                    });
                },
                getHandleConnections: ({ type: f, id: p, nodeId: g })=>Array.from(e.getState().connectionLookup.get(`${g}-${f}${p ? `-${p}` : ""}`)?.values() ?? []),
                getNodeConnections: ({ type: f, handleId: p, nodeId: g })=>Array.from(e.getState().connectionLookup.get(`${g}${f ? p ? `-${f}-${p}` : `-${f}` : ""}`)?.values() ?? [])
            };
        }, []);
        return X.useMemo(()=>({
                ...i,
                ...t,
                viewportInitialized: r
            }), [
            r
        ]);
    }
    const tU = (t)=>t.selected, Yfe = {
        actInsideInputWithModifier: !1
    }, Zfe = typeof window < "u" ? window : void 0;
    function Jfe({ deleteKeyCode: t, multiSelectionKeyCode: e }) {
        const n = Yr(), { deleteElements: r } = lw(), i = gb(t, Yfe), s = gb(e, {
            target: Zfe
        });
        X.useEffect(()=>{
            if (i) {
                const { edges: o, nodes: a } = n.getState();
                r({
                    nodes: a.filter(tU),
                    edges: o.filter(tU)
                }), n.setState({
                    nodesSelectionActive: !1
                });
            }
        }, [
            i
        ]), X.useEffect(()=>{
            n.setState({
                multiSelectionActive: s
            });
        }, [
            s
        ]);
    }
    function Qfe(t) {
        const e = Yr();
        X.useEffect(()=>{
            const n = ()=>{
                if (!t.current) return !1;
                const r = NT(t.current);
                (r.height === 0 || r.width === 0) && e.getState().onError?.("004", xd.error004()), e.setState({
                    width: r.width || 500,
                    height: r.height || 500
                });
            };
            if (t.current) {
                n(), window.addEventListener("resize", n);
                const r = new ResizeObserver(()=>n());
                return r.observe(t.current), ()=>{
                    window.removeEventListener("resize", n), r && t.current && r.unobserve(t.current);
                };
            }
        }, []);
    }
    const LT = {
        position: "absolute",
        width: "100%",
        height: "100%",
        top: 0,
        left: 0
    }, ehe = (t)=>({
            userSelectionActive: t.userSelectionActive,
            lib: t.lib
        });
    function the({ onPaneContextMenu: t, zoomOnScroll: e = !0, zoomOnPinch: n = !0, panOnScroll: r = !1, panOnScrollSpeed: i = .5, panOnScrollMode: s = Up.Free, zoomOnDoubleClick: o = !0, panOnDrag: a = !0, defaultViewport: l, translateExtent: c, minZoom: u, maxZoom: f, zoomActivationKeyCode: p, preventScrolling: g = !0, children: x, noWheelClassName: S, noPanClassName: _, onViewportChange: b, isControlledViewport: M, paneClickDistance: E }) {
        const T = Yr(), k = X.useRef(null), { userSelectionActive: N, lib: D } = Qn(ehe, di), L = gb(p), R = X.useRef();
        Qfe(k);
        const A = X.useCallback((P)=>{
            b?.({
                x: P[0],
                y: P[1],
                zoom: P[2]
            }), M || T.setState({
                transform: P
            });
        }, [
            b,
            M
        ]);
        return X.useEffect(()=>{
            if (k.current) {
                R.current = lfe({
                    domNode: k.current,
                    minZoom: u,
                    maxZoom: f,
                    translateExtent: c,
                    viewport: l,
                    paneClickDistance: E,
                    onDraggingChange: (j)=>T.setState({
                            paneDragging: j
                        }),
                    onPanZoomStart: (j, K)=>{
                        const { onViewportChangeStart: q, onMoveStart: te } = T.getState();
                        te?.(j, K), q?.(K);
                    },
                    onPanZoom: (j, K)=>{
                        const { onViewportChange: q, onMove: te } = T.getState();
                        te?.(j, K), q?.(K);
                    },
                    onPanZoomEnd: (j, K)=>{
                        const { onViewportChangeEnd: q, onMoveEnd: te } = T.getState();
                        te?.(j, K), q?.(K);
                    }
                });
                const { x: P, y: B, zoom: U } = R.current.getViewport();
                return T.setState({
                    panZoom: R.current,
                    transform: [
                        P,
                        B,
                        U
                    ],
                    domNode: k.current.closest(".react-flow")
                }), ()=>{
                    R.current?.destroy();
                };
            }
        }, []), X.useEffect(()=>{
            R.current?.update({
                onPaneContextMenu: t,
                zoomOnScroll: e,
                zoomOnPinch: n,
                panOnScroll: r,
                panOnScrollSpeed: i,
                panOnScrollMode: s,
                zoomOnDoubleClick: o,
                panOnDrag: a,
                zoomActivationKeyPressed: L,
                preventScrolling: g,
                noPanClassName: _,
                userSelectionActive: N,
                noWheelClassName: S,
                lib: D,
                onTransformChange: A
            });
        }, [
            t,
            e,
            n,
            r,
            i,
            s,
            o,
            a,
            L,
            g,
            _,
            N,
            S,
            D,
            A
        ]), v.jsx("div", {
            className: "react-flow__renderer",
            ref: k,
            style: LT,
            children: x
        });
    }
    const nhe = (t)=>({
            userSelectionActive: t.userSelectionActive,
            userSelectionRect: t.userSelectionRect
        });
    function rhe() {
        const { userSelectionActive: t, userSelectionRect: e } = Qn(nhe, di);
        return t && e ? v.jsx("div", {
            className: "react-flow__selection react-flow__container",
            style: {
                width: e.width,
                height: e.height,
                transform: `translate(${e.x}px, ${e.y}px)`
            }
        }) : null;
    }
    const LA = (t, e)=>(n)=>{
            n.target === e.current && t?.(n);
        }, ihe = (t)=>({
            userSelectionActive: t.userSelectionActive,
            elementsSelectable: t.elementsSelectable,
            dragging: t.paneDragging
        });
    function she({ isSelecting: t, selectionKeyPressed: e, selectionMode: n = hb.Full, panOnDrag: r, selectionOnDrag: i, onSelectionStart: s, onSelectionEnd: o, onPaneClick: a, onPaneContextMenu: l, onPaneScroll: c, onPaneMouseEnter: u, onPaneMouseMove: f, onPaneMouseLeave: p, children: g }) {
        const x = Yr(), { userSelectionActive: S, elementsSelectable: _, dragging: b } = Qn(ihe, di), M = _ && (t || S), E = X.useRef(null), T = X.useRef(), k = X.useRef(new Set), N = X.useRef(new Set), D = X.useRef(!1), L = X.useRef(!1), R = (q)=>{
            if (D.current) {
                D.current = !1;
                return;
            }
            a?.(q), x.getState().resetSelectedElements(), x.setState({
                nodesSelectionActive: !1
            });
        }, A = (q)=>{
            if (Array.isArray(r) && r?.includes(2)) {
                q.preventDefault();
                return;
            }
            l?.(q);
        }, P = c ? (q)=>c(q) : void 0, B = (q)=>{
            const { resetSelectedElements: te, domNode: W } = x.getState();
            if (T.current = W?.getBoundingClientRect(), !_ || !t || q.button !== 0 || q.target !== E.current || !T.current) return;
            q.target?.setPointerCapture?.(q.pointerId), L.current = !0, D.current = !1;
            const { x: J, y: Q } = rd(q.nativeEvent, T.current);
            te(), x.setState({
                userSelectionRect: {
                    width: 0,
                    height: 0,
                    startX: J,
                    startY: Q,
                    x: J,
                    y: Q
                }
            }), s?.(q);
        }, U = (q)=>{
            const { userSelectionRect: te, transform: W, nodeLookup: J, edgeLookup: Q, connectionLookup: Y, triggerNodeChanges: le, triggerEdgeChanges: ue, defaultEdgeOptions: ie } = x.getState();
            if (!T.current || !te) return;
            D.current = !0;
            const { x: he, y: ge } = rd(q.nativeEvent, T.current), { startX: ve, startY: Ee } = te, Ce = {
                startX: ve,
                startY: Ee,
                x: he < ve ? he : ve,
                y: ge < Ee ? ge : Ee,
                width: Math.abs(he - ve),
                height: Math.abs(ge - Ee)
            }, Ne = k.current, Ve = N.current;
            k.current = new Set(OH(J, Ce, W, n === hb.Partial, !0).map((Me)=>Me.id)), N.current = new Set;
            const we = ie?.selectable ?? !0;
            for (const Me of k.current){
                const se = Y.get(Me);
                if (se) for (const { edgeId: Ye } of se.values()){
                    const Be = Q.get(Ye);
                    Be && (Be.selectable ?? we) && N.current.add(Ye);
                }
            }
            if (!NB(Ne, k.current)) {
                const Me = ly(J, k.current, !0);
                le(Me);
            }
            if (!NB(Ve, N.current)) {
                const Me = ly(Q, N.current);
                ue(Me);
            }
            x.setState({
                userSelectionRect: Ce,
                userSelectionActive: !0,
                nodesSelectionActive: !1
            });
        }, j = (q)=>{
            if (q.button !== 0 || !L.current) return;
            q.target?.releasePointerCapture?.(q.pointerId);
            const { userSelectionRect: te } = x.getState();
            !S && te && q.target === E.current && R?.(q), x.setState({
                userSelectionActive: !1,
                userSelectionRect: null,
                nodesSelectionActive: k.current.size > 0
            }), o?.(q), (e || i) && (D.current = !1), L.current = !1;
        }, K = r === !0 || Array.isArray(r) && r.includes(0);
        return v.jsxs("div", {
            className: qi([
                "react-flow__pane",
                {
                    draggable: K,
                    dragging: b,
                    selection: t
                }
            ]),
            onClick: M ? void 0 : LA(R, E),
            onContextMenu: LA(A, E),
            onWheel: LA(P, E),
            onPointerEnter: M ? void 0 : u,
            onPointerDown: M ? B : f,
            onPointerMove: M ? U : f,
            onPointerUp: M ? j : void 0,
            onPointerLeave: p,
            ref: E,
            style: LT,
            children: [
                g,
                v.jsx(rhe, {})
            ]
        });
    }
    function ik({ id: t, store: e, unselect: n = !1, nodeRef: r }) {
        const { addSelectedNodes: i, unselectNodesAndEdges: s, multiSelectionActive: o, nodeLookup: a, onError: l } = e.getState(), c = a.get(t);
        if (!c) {
            l?.("012", xd.error012(t));
            return;
        }
        e.setState({
            nodesSelectionActive: !1
        }), c.selected ? (n || c.selected && o) && (s({
            nodes: [
                c
            ],
            edges: []
        }), requestAnimationFrame(()=>r?.current?.blur())) : i([
            t
        ]);
    }
    function d$({ nodeRef: t, disabled: e = !1, noDragClassName: n, handleSelector: r, nodeId: i, isSelectable: s, nodeClickDistance: o }) {
        const a = Yr(), [l, c] = X.useState(!1), u = X.useRef();
        return X.useEffect(()=>{
            u.current = Xde({
                getStoreItems: ()=>a.getState(),
                onNodeMouseDown: (f)=>{
                    ik({
                        id: f,
                        store: a,
                        nodeRef: t
                    });
                },
                onDragStart: ()=>{
                    c(!0);
                },
                onDragStop: ()=>{
                    c(!1);
                }
            });
        }, []), X.useEffect(()=>{
            if (e) u.current?.destroy();
            else if (t.current) return u.current?.update({
                noDragClassName: n,
                handleSelector: r,
                domNode: t.current,
                isSelectable: s,
                nodeId: i,
                nodeClickDistance: o
            }), ()=>{
                u.current?.destroy();
            };
        }, [
            n,
            r,
            e,
            s,
            t,
            i
        ]), l;
    }
    const ohe = (t)=>(e)=>e.selected && (e.draggable || t && typeof e.draggable > "u");
    function f$() {
        const t = Yr();
        return X.useCallback((n)=>{
            const { nodeExtent: r, snapToGrid: i, snapGrid: s, nodesDraggable: o, onError: a, updateNodePositions: l, nodeLookup: c, nodeOrigin: u } = t.getState(), f = new Map, p = ohe(o), g = i ? s[0] : 5, x = i ? s[1] : 5, S = n.direction.x * g * n.factor, _ = n.direction.y * x * n.factor;
            for (const [, b] of c){
                if (!p(b)) continue;
                let M = {
                    x: b.internals.positionAbsolute.x + S,
                    y: b.internals.positionAbsolute.y + _
                };
                i && (M = AT(M, s));
                const { position: E, positionAbsolute: T } = LH({
                    nodeId: b.id,
                    nextPosition: M,
                    nodeLookup: c,
                    nodeExtent: r,
                    nodeOrigin: u,
                    onError: a
                });
                b.position = E, b.internals.positionAbsolute = T, f.set(b.id, b);
            }
            l(f);
        }, []);
    }
    const QO = X.createContext(null), ahe = QO.Provider;
    QO.Consumer;
    const h$ = ()=>X.useContext(QO), lhe = (t)=>({
            connectOnClick: t.connectOnClick,
            noPanClassName: t.noPanClassName,
            rfId: t.rfId
        }), che = (t, e, n)=>(r)=>{
            const { connectionClickStartHandle: i, connectionMode: s, connection: o } = r, { fromHandle: a, toHandle: l, isValid: c } = o, u = l?.nodeId === t && l?.id === e && l?.type === n;
            return {
                connectingFrom: a?.nodeId === t && a?.id === e && a?.type === n,
                connectingTo: u,
                clickConnecting: i?.nodeId === t && i?.id === e && i?.type === n,
                isPossibleEndHandle: s === $y.Strict ? a?.type !== n : t !== a?.nodeId || e !== a?.id,
                connectionInProcess: !!a,
                valid: u && c
            };
        };
    function uhe({ type: t = "source", position: e = Qt.Top, isValidConnection: n, isConnectable: r = !0, isConnectableStart: i = !0, isConnectableEnd: s = !0, id: o, onConnect: a, children: l, className: c, onMouseDown: u, onTouchStart: f, ...p }, g) {
        const x = o || null, S = t === "target", _ = Yr(), b = h$(), { connectOnClick: M, noPanClassName: E, rfId: T } = Qn(lhe, di), { connectingFrom: k, connectingTo: N, clickConnecting: D, isPossibleEndHandle: L, connectionInProcess: R, valid: A } = Qn(che(b, x, t), di);
        b || _.getState().onError?.("010", xd.error010());
        const P = (j)=>{
            const { defaultEdgeOptions: K, onConnect: q, hasDefaultEdges: te } = _.getState(), W = {
                ...K,
                ...j
            };
            if (te) {
                const { edges: J, setEdges: Q } = _.getState();
                Q(Lde(W, J));
            }
            q?.(W), a?.(W);
        }, B = (j)=>{
            if (!b) return;
            const K = WH(j.nativeEvent);
            if (i && (K && j.button === 0 || !K)) {
                const q = _.getState();
                rk.onPointerDown(j.nativeEvent, {
                    autoPanOnConnect: q.autoPanOnConnect,
                    connectionMode: q.connectionMode,
                    connectionRadius: q.connectionRadius,
                    domNode: q.domNode,
                    nodeLookup: q.nodeLookup,
                    lib: q.lib,
                    isTarget: S,
                    handleId: x,
                    nodeId: b,
                    flowId: q.rfId,
                    panBy: q.panBy,
                    cancelConnection: q.cancelConnection,
                    onConnectStart: q.onConnectStart,
                    onConnectEnd: q.onConnectEnd,
                    updateConnection: q.updateConnection,
                    onConnect: P,
                    isValidConnection: n || q.isValidConnection,
                    getTransform: ()=>_.getState().transform,
                    getFromHandle: ()=>_.getState().connection.fromHandle,
                    autoPanSpeed: q.autoPanSpeed
                });
            }
            K ? u?.(j) : f?.(j);
        }, U = (j)=>{
            const { onClickConnectStart: K, onClickConnectEnd: q, connectionClickStartHandle: te, connectionMode: W, isValidConnection: J, lib: Q, rfId: Y, nodeLookup: le, connection: ue } = _.getState();
            if (!b || !te && !i) return;
            if (!te) {
                K?.(j.nativeEvent, {
                    nodeId: b,
                    handleId: x,
                    handleType: t
                }), _.setState({
                    connectionClickStartHandle: {
                        nodeId: b,
                        type: t,
                        id: x
                    }
                });
                return;
            }
            const ie = VH(j.target), he = n || J, { connection: ge, isValid: ve } = rk.isValid(j.nativeEvent, {
                handle: {
                    nodeId: b,
                    id: x,
                    type: t
                },
                connectionMode: W,
                fromNodeId: te.nodeId,
                fromHandleId: te.id || null,
                fromType: te.type,
                isValidConnection: he,
                flowId: Y,
                doc: ie,
                lib: Q,
                nodeLookup: le
            });
            ve && ge && P(ge);
            const Ee = structuredClone(ue);
            delete Ee.inProgress, Ee.toPosition = Ee.toHandle ? Ee.toHandle.position : null, q?.(j, Ee), _.setState({
                connectionClickStartHandle: null
            });
        };
        return v.jsx("div", {
            "data-handleid": x,
            "data-nodeid": b,
            "data-handlepos": e,
            "data-id": `${T}-${b}-${x}-${t}`,
            className: qi([
                "react-flow__handle",
                `react-flow__handle-${e}`,
                "nodrag",
                E,
                c,
                {
                    source: !S,
                    target: S,
                    connectable: r,
                    connectablestart: i,
                    connectableend: s,
                    clickconnecting: D,
                    connectingfrom: k,
                    connectingto: N,
                    valid: A,
                    connectionindicator: r && (!R || L) && (R ? s : i)
                }
            ]),
            onMouseDown: B,
            onTouchStart: B,
            onClick: M ? U : void 0,
            ref: g,
            ...p,
            children: l
        });
    }
    const Yy = X.memo(c$(uhe));
    function dhe({ data: t, isConnectable: e, sourcePosition: n = Qt.Bottom }) {
        return v.jsxs(v.Fragment, {
            children: [
                t?.label,
                v.jsx(Yy, {
                    type: "source",
                    position: n,
                    isConnectable: e
                })
            ]
        });
    }
    function fhe({ data: t, isConnectable: e, targetPosition: n = Qt.Top, sourcePosition: r = Qt.Bottom }) {
        return v.jsxs(v.Fragment, {
            children: [
                v.jsx(Yy, {
                    type: "target",
                    position: n,
                    isConnectable: e
                }),
                t?.label,
                v.jsx(Yy, {
                    type: "source",
                    position: r,
                    isConnectable: e
                })
            ]
        });
    }
    function hhe() {
        return null;
    }
    function phe({ data: t, isConnectable: e, targetPosition: n = Qt.Top }) {
        return v.jsxs(v.Fragment, {
            children: [
                v.jsx(Yy, {
                    type: "target",
                    position: n,
                    isConnectable: e
                }),
                t?.label
            ]
        });
    }
    const KE = {
        ArrowUp: {
            x: 0,
            y: -1
        },
        ArrowDown: {
            x: 0,
            y: 1
        },
        ArrowLeft: {
            x: -1,
            y: 0
        },
        ArrowRight: {
            x: 1,
            y: 0
        }
    }, nU = {
        input: dhe,
        default: fhe,
        output: phe,
        group: hhe
    };
    function mhe(t) {
        return t.internals.handleBounds === void 0 ? {
            width: t.width ?? t.initialWidth ?? t.style?.width,
            height: t.height ?? t.initialHeight ?? t.style?.height
        } : {
            width: t.width ?? t.style?.width,
            height: t.height ?? t.style?.height
        };
    }
    const ghe = (t)=>{
        const { width: e, height: n, x: r, y: i } = ow(t.nodeLookup, {
            filter: (s)=>!!s.selected
        });
        return {
            width: Jl(e) ? e : null,
            height: Jl(n) ? n : null,
            userSelectionActive: t.userSelectionActive,
            transformString: `translate(${t.transform[0]}px,${t.transform[1]}px) scale(${t.transform[2]}) translate(${r}px,${i}px)`
        };
    };
    function yhe({ onSelectionContextMenu: t, noPanClassName: e, disableKeyboardA11y: n }) {
        const r = Yr(), { width: i, height: s, transformString: o, userSelectionActive: a } = Qn(ghe, di), l = f$(), c = X.useRef(null);
        if (X.useEffect(()=>{
            n || c.current?.focus({
                preventScroll: !0
            });
        }, [
            n
        ]), d$({
            nodeRef: c
        }), a || !i || !s) return null;
        const u = t ? (p)=>{
            const g = r.getState().nodes.filter((x)=>x.selected);
            t(p, g);
        } : void 0, f = (p)=>{
            Object.prototype.hasOwnProperty.call(KE, p.key) && (p.preventDefault(), l({
                direction: KE[p.key],
                factor: p.shiftKey ? 4 : 1
            }));
        };
        return v.jsx("div", {
            className: qi([
                "react-flow__nodesselection",
                "react-flow__container",
                e
            ]),
            style: {
                transform: o
            },
            children: v.jsx("div", {
                ref: c,
                className: "react-flow__nodesselection-rect",
                onContextMenu: u,
                tabIndex: n ? void 0 : -1,
                onKeyDown: n ? void 0 : f,
                style: {
                    width: i,
                    height: s
                }
            })
        });
    }
    const rU = typeof window < "u" ? window : void 0, vhe = (t)=>({
            nodesSelectionActive: t.nodesSelectionActive,
            userSelectionActive: t.userSelectionActive
        });
    function p$({ children: t, onPaneClick: e, onPaneMouseEnter: n, onPaneMouseMove: r, onPaneMouseLeave: i, onPaneContextMenu: s, onPaneScroll: o, paneClickDistance: a, deleteKeyCode: l, selectionKeyCode: c, selectionOnDrag: u, selectionMode: f, onSelectionStart: p, onSelectionEnd: g, multiSelectionKeyCode: x, panActivationKeyCode: S, zoomActivationKeyCode: _, elementsSelectable: b, zoomOnScroll: M, zoomOnPinch: E, panOnScroll: T, panOnScrollSpeed: k, panOnScrollMode: N, zoomOnDoubleClick: D, panOnDrag: L, defaultViewport: R, translateExtent: A, minZoom: P, maxZoom: B, preventScrolling: U, onSelectionContextMenu: j, noWheelClassName: K, noPanClassName: q, disableKeyboardA11y: te, onViewportChange: W, isControlledViewport: J }) {
        const { nodesSelectionActive: Q, userSelectionActive: Y } = Qn(vhe), le = gb(c, {
            target: rU
        }), ue = gb(S, {
            target: rU
        }), ie = ue || L, he = ue || T, ge = u && ie !== !0, ve = le || Y || ge;
        return Jfe({
            deleteKeyCode: l,
            multiSelectionKeyCode: x
        }), v.jsx(the, {
            onPaneContextMenu: s,
            elementsSelectable: b,
            zoomOnScroll: M,
            zoomOnPinch: E,
            panOnScroll: he,
            panOnScrollSpeed: k,
            panOnScrollMode: N,
            zoomOnDoubleClick: D,
            panOnDrag: !le && ie,
            defaultViewport: R,
            translateExtent: A,
            minZoom: P,
            maxZoom: B,
            zoomActivationKeyCode: _,
            preventScrolling: U,
            noWheelClassName: K,
            noPanClassName: q,
            onViewportChange: W,
            isControlledViewport: J,
            paneClickDistance: a,
            children: v.jsxs(she, {
                onSelectionStart: p,
                onSelectionEnd: g,
                onPaneClick: e,
                onPaneMouseEnter: n,
                onPaneMouseMove: r,
                onPaneMouseLeave: i,
                onPaneContextMenu: s,
                onPaneScroll: o,
                panOnDrag: ie,
                isSelecting: !!ve,
                selectionMode: f,
                selectionKeyPressed: le,
                selectionOnDrag: ge,
                children: [
                    t,
                    Q && v.jsx(yhe, {
                        onSelectionContextMenu: j,
                        noPanClassName: q,
                        disableKeyboardA11y: te
                    })
                ]
            })
        });
    }
    p$.displayName = "FlowRenderer";
    const xhe = X.memo(p$), bhe = (t)=>(e)=>t ? OH(e.nodeLookup, {
                x: 0,
                y: 0,
                width: e.width,
                height: e.height
            }, e.transform, !0).map((n)=>n.id) : Array.from(e.nodeLookup.keys());
    function whe(t) {
        return Qn(X.useCallback(bhe(t), [
            t
        ]), di);
    }
    const _he = (t)=>t.updateNodeInternals;
    function She() {
        const t = Qn(_he), [e] = X.useState(()=>typeof ResizeObserver > "u" ? null : new ResizeObserver((n)=>{
                const r = new Map;
                n.forEach((i)=>{
                    const s = i.target.getAttribute("data-id");
                    r.set(s, {
                        id: s,
                        nodeElement: i.target,
                        force: !0
                    });
                }), t(r);
            }));
        return X.useEffect(()=>()=>{
                e?.disconnect();
            }, [
            e
        ]), e;
    }
    function Ehe({ node: t, nodeType: e, hasDimensions: n, resizeObserver: r }) {
        const i = Yr(), s = X.useRef(null), o = X.useRef(null), a = X.useRef(t.sourcePosition), l = X.useRef(t.targetPosition), c = X.useRef(e), u = n && !!t.internals.handleBounds;
        return X.useEffect(()=>{
            s.current && !t.hidden && (!u || o.current !== s.current) && (o.current && r?.unobserve(o.current), r?.observe(s.current), o.current = s.current);
        }, [
            u,
            t.hidden
        ]), X.useEffect(()=>()=>{
                o.current && (r?.unobserve(o.current), o.current = null);
            }, []), X.useEffect(()=>{
            if (s.current) {
                const f = c.current !== e, p = a.current !== t.sourcePosition, g = l.current !== t.targetPosition;
                (f || p || g) && (c.current = e, a.current = t.sourcePosition, l.current = t.targetPosition, i.getState().updateNodeInternals(new Map([
                    [
                        t.id,
                        {
                            id: t.id,
                            nodeElement: s.current,
                            force: !0
                        }
                    ]
                ])));
            }
        }, [
            t.id,
            e,
            t.sourcePosition,
            t.targetPosition
        ]), s;
    }
    function Mhe({ id: t, onClick: e, onMouseEnter: n, onMouseMove: r, onMouseLeave: i, onContextMenu: s, onDoubleClick: o, nodesDraggable: a, elementsSelectable: l, nodesConnectable: c, nodesFocusable: u, resizeObserver: f, noDragClassName: p, noPanClassName: g, disableKeyboardA11y: x, rfId: S, nodeTypes: _, nodeClickDistance: b, onError: M }) {
        const { node: E, internals: T, isParent: k } = Qn((ve)=>{
            const Ee = ve.nodeLookup.get(t), Ce = ve.parentLookup.has(t);
            return {
                node: Ee,
                internals: Ee.internals,
                isParent: Ce
            };
        }, di);
        let N = E.type || "default", D = _?.[N] || nU[N];
        D === void 0 && (M?.("003", xd.error003(N)), N = "default", D = nU.default);
        const L = !!(E.draggable || a && typeof E.draggable > "u"), R = !!(E.selectable || l && typeof E.selectable > "u"), A = !!(E.connectable || c && typeof E.connectable > "u"), P = !!(E.focusable || u && typeof E.focusable > "u"), B = Yr(), U = UH(E), j = Ehe({
            node: E,
            nodeType: N,
            hasDimensions: U,
            resizeObserver: f
        }), K = d$({
            nodeRef: j,
            disabled: E.hidden || !L,
            noDragClassName: p,
            handleSelector: E.dragHandle,
            nodeId: t,
            isSelectable: R,
            nodeClickDistance: b
        }), q = f$();
        if (E.hidden) return null;
        const te = bd(E), W = mhe(E), J = R || L || e || n || r || i, Q = n ? (ve)=>n(ve, {
                ...T.userNode
            }) : void 0, Y = r ? (ve)=>r(ve, {
                ...T.userNode
            }) : void 0, le = i ? (ve)=>i(ve, {
                ...T.userNode
            }) : void 0, ue = s ? (ve)=>s(ve, {
                ...T.userNode
            }) : void 0, ie = o ? (ve)=>o(ve, {
                ...T.userNode
            }) : void 0, he = (ve)=>{
            const { selectNodesOnDrag: Ee, nodeDragThreshold: Ce } = B.getState();
            R && (!Ee || !L || Ce > 0) && ik({
                id: t,
                store: B,
                nodeRef: j
            }), e && e(ve, {
                ...T.userNode
            });
        }, ge = (ve)=>{
            if (!(QP(ve.nativeEvent) || x)) if (AH.includes(ve.key) && R) {
                const Ee = ve.key === "Escape";
                ik({
                    id: t,
                    store: B,
                    unselect: Ee,
                    nodeRef: j
                });
            } else L && E.selected && Object.prototype.hasOwnProperty.call(KE, ve.key) && (ve.preventDefault(), B.setState({
                ariaLiveMessage: `Moved selected node ${ve.key.replace("Arrow", "").toLowerCase()}. New position, x: ${~~T.positionAbsolute.x}, y: ${~~T.positionAbsolute.y}`
            }), q({
                direction: KE[ve.key],
                factor: ve.shiftKey ? 4 : 1
            }));
        };
        return v.jsx("div", {
            className: qi([
                "react-flow__node",
                `react-flow__node-${N}`,
                {
                    [g]: L
                },
                E.className,
                {
                    selected: E.selected,
                    selectable: R,
                    parent: k,
                    draggable: L,
                    dragging: K
                }
            ]),
            ref: j,
            style: {
                zIndex: T.z,
                transform: `translate(${T.positionAbsolute.x}px,${T.positionAbsolute.y}px)`,
                pointerEvents: J ? "all" : "none",
                visibility: U ? "visible" : "hidden",
                ...E.style,
                ...W
            },
            "data-id": t,
            "data-testid": `rf__node-${t}`,
            onMouseEnter: Q,
            onMouseMove: Y,
            onMouseLeave: le,
            onContextMenu: ue,
            onClick: he,
            onDoubleClick: ie,
            onKeyDown: P ? ge : void 0,
            tabIndex: P ? 0 : void 0,
            role: P ? "button" : void 0,
            "aria-describedby": x ? void 0 : `${s$}-${S}`,
            "aria-label": E.ariaLabel,
            children: v.jsx(ahe, {
                value: t,
                children: v.jsx(D, {
                    id: t,
                    data: E.data,
                    type: N,
                    positionAbsoluteX: T.positionAbsolute.x,
                    positionAbsoluteY: T.positionAbsolute.y,
                    selected: E.selected ?? !1,
                    selectable: R,
                    draggable: L,
                    deletable: E.deletable ?? !0,
                    isConnectable: A,
                    sourcePosition: E.sourcePosition,
                    targetPosition: E.targetPosition,
                    dragging: K,
                    dragHandle: E.dragHandle,
                    zIndex: T.z,
                    parentId: E.parentId,
                    ...te
                })
            })
        });
    }
    const The = (t)=>({
            nodesDraggable: t.nodesDraggable,
            nodesConnectable: t.nodesConnectable,
            nodesFocusable: t.nodesFocusable,
            elementsSelectable: t.elementsSelectable,
            onError: t.onError
        });
    function m$(t) {
        const { nodesDraggable: e, nodesConnectable: n, nodesFocusable: r, elementsSelectable: i, onError: s } = Qn(The, di), o = whe(t.onlyRenderVisibleElements), a = She();
        return v.jsx("div", {
            className: "react-flow__nodes",
            style: LT,
            children: o.map((l)=>v.jsx(Mhe, {
                    id: l,
                    nodeTypes: t.nodeTypes,
                    nodeExtent: t.nodeExtent,
                    onClick: t.onNodeClick,
                    onMouseEnter: t.onNodeMouseEnter,
                    onMouseMove: t.onNodeMouseMove,
                    onMouseLeave: t.onNodeMouseLeave,
                    onContextMenu: t.onNodeContextMenu,
                    onDoubleClick: t.onNodeDoubleClick,
                    noDragClassName: t.noDragClassName,
                    noPanClassName: t.noPanClassName,
                    rfId: t.rfId,
                    disableKeyboardA11y: t.disableKeyboardA11y,
                    resizeObserver: a,
                    nodesDraggable: e,
                    nodesConnectable: n,
                    nodesFocusable: r,
                    elementsSelectable: i,
                    nodeClickDistance: t.nodeClickDistance,
                    onError: s
                }, l))
        });
    }
    m$.displayName = "NodeRenderer";
    const Che = X.memo(m$);
    function Ihe(t) {
        return Qn(X.useCallback((n)=>{
            if (!t) return n.edges.map((i)=>i.id);
            const r = [];
            if (n.width && n.height) for (const i of n.edges){
                const s = n.nodeLookup.get(i.source), o = n.nodeLookup.get(i.target);
                s && o && Pde({
                    sourceNode: s,
                    targetNode: o,
                    width: n.width,
                    height: n.height,
                    transform: n.transform
                }) && r.push(i.id);
            }
            return r;
        }, [
            t
        ]), di);
    }
    const Rhe = ({ color: t = "none", strokeWidth: e = 1 })=>v.jsx("polyline", {
            style: {
                stroke: t,
                strokeWidth: e
            },
            strokeLinecap: "round",
            strokeLinejoin: "round",
            fill: "none",
            points: "-5,-4 0,0 -5,4"
        }), Ahe = ({ color: t = "none", strokeWidth: e = 1 })=>v.jsx("polyline", {
            style: {
                stroke: t,
                fill: t,
                strokeWidth: e
            },
            strokeLinecap: "round",
            strokeLinejoin: "round",
            points: "-5,-4 0,0 -5,4 -5,-4"
        }), iU = {
        [$E.Arrow]: Rhe,
        [$E.ArrowClosed]: Ahe
    };
    function Nhe(t) {
        const e = Yr();
        return X.useMemo(()=>Object.prototype.hasOwnProperty.call(iU, t) ? iU[t] : (e.getState().onError?.("009", xd.error009(t)), null), [
            t
        ]);
    }
    const Phe = ({ id: t, type: e, color: n, width: r = 12.5, height: i = 12.5, markerUnits: s = "strokeWidth", strokeWidth: o, orient: a = "auto-start-reverse" })=>{
        const l = Nhe(e);
        return l ? v.jsx("marker", {
            className: "react-flow__arrowhead",
            id: t,
            markerWidth: `${r}`,
            markerHeight: `${i}`,
            viewBox: "-10 -10 20 20",
            markerUnits: s,
            orient: a,
            refX: "0",
            refY: "0",
            children: v.jsx(l, {
                color: n,
                strokeWidth: o
            })
        }) : null;
    }, g$ = ({ defaultColor: t, rfId: e })=>{
        const n = Qn((s)=>s.edges), r = Qn((s)=>s.defaultEdgeOptions), i = X.useMemo(()=>Ude(n, {
                id: e,
                defaultColor: t,
                defaultMarkerStart: r?.markerStart,
                defaultMarkerEnd: r?.markerEnd
            }), [
            n,
            r,
            e,
            t
        ]);
        return i.length ? v.jsx("svg", {
            className: "react-flow__marker",
            children: v.jsx("defs", {
                children: i.map((s)=>v.jsx(Phe, {
                        id: s.id,
                        type: s.type,
                        color: s.color,
                        width: s.width,
                        height: s.height,
                        markerUnits: s.markerUnits,
                        strokeWidth: s.strokeWidth,
                        orient: s.orient
                    }, s.id))
            })
        }) : null;
    };
    g$.displayName = "MarkerDefinitions";
    var khe = X.memo(g$);
    function y$({ x: t, y: e, label: n, labelStyle: r = {}, labelShowBg: i = !0, labelBgStyle: s = {}, labelBgPadding: o = [
        2,
        4
    ], labelBgBorderRadius: a = 2, children: l, className: c, ...u }) {
        const [f, p] = X.useState({
            x: 1,
            y: 0,
            width: 0,
            height: 0
        }), g = qi([
            "react-flow__edge-textwrapper",
            c
        ]), x = X.useRef(null);
        return X.useEffect(()=>{
            if (x.current) {
                const S = x.current.getBBox();
                p({
                    x: S.x,
                    y: S.y,
                    width: S.width,
                    height: S.height
                });
            }
        }, [
            n
        ]), typeof n > "u" || !n ? null : v.jsxs("g", {
            transform: `translate(${t - f.width / 2} ${e - f.height / 2})`,
            className: g,
            visibility: f.width ? "visible" : "hidden",
            ...u,
            children: [
                i && v.jsx("rect", {
                    width: f.width + 2 * o[0],
                    x: -o[0],
                    y: -o[1],
                    height: f.height + 2 * o[1],
                    className: "react-flow__edge-textbg",
                    style: s,
                    rx: a,
                    ry: a
                }),
                v.jsx("text", {
                    className: "react-flow__edge-text",
                    y: f.height / 2,
                    dy: "0.3em",
                    ref: x,
                    style: r,
                    children: n
                }),
                l
            ]
        });
    }
    y$.displayName = "EdgeText";
    const Ohe = X.memo(y$);
    function cw({ path: t, labelX: e, labelY: n, label: r, labelStyle: i, labelShowBg: s, labelBgStyle: o, labelBgPadding: a, labelBgBorderRadius: l, interactionWidth: c = 20, ...u }) {
        return v.jsxs(v.Fragment, {
            children: [
                v.jsx("path", {
                    ...u,
                    d: t,
                    fill: "none",
                    className: qi([
                        "react-flow__edge-path",
                        u.className
                    ])
                }),
                c && v.jsx("path", {
                    d: t,
                    fill: "none",
                    strokeOpacity: 0,
                    strokeWidth: c,
                    className: "react-flow__edge-interaction"
                }),
                r && Jl(e) && Jl(n) ? v.jsx(Ohe, {
                    x: e,
                    y: n,
                    label: r,
                    labelStyle: i,
                    labelShowBg: s,
                    labelBgStyle: o,
                    labelBgPadding: a,
                    labelBgBorderRadius: l
                }) : null
            ]
        });
    }
    function sU({ pos: t, x1: e, y1: n, x2: r, y2: i }) {
        return t === Qt.Left || t === Qt.Right ? [
            .5 * (e + r),
            n
        ] : [
            e,
            .5 * (n + i)
        ];
    }
    function v$({ sourceX: t, sourceY: e, sourcePosition: n = Qt.Bottom, targetX: r, targetY: i, targetPosition: s = Qt.Top }) {
        const [o, a] = sU({
            pos: n,
            x1: t,
            y1: e,
            x2: r,
            y2: i
        }), [l, c] = sU({
            pos: s,
            x1: r,
            y1: i,
            x2: t,
            y2: e
        }), [u, f, p, g] = qH({
            sourceX: t,
            sourceY: e,
            targetX: r,
            targetY: i,
            sourceControlX: o,
            sourceControlY: a,
            targetControlX: l,
            targetControlY: c
        });
        return [
            `M${t},${e} C${o},${a} ${l},${c} ${r},${i}`,
            u,
            f,
            p,
            g
        ];
    }
    function x$(t) {
        return X.memo(({ id: e, sourceX: n, sourceY: r, targetX: i, targetY: s, sourcePosition: o = Qt.Bottom, targetPosition: a = Qt.Top, label: l, labelStyle: c, labelShowBg: u, labelBgStyle: f, labelBgPadding: p, labelBgBorderRadius: g, style: x, markerEnd: S, markerStart: _, interactionWidth: b })=>{
            const [M, E, T] = v$({
                sourceX: n,
                sourceY: r,
                sourcePosition: o,
                targetX: i,
                targetY: s,
                targetPosition: a
            }), k = t.isInternal ? void 0 : e;
            return v.jsx(cw, {
                id: k,
                path: M,
                labelX: E,
                labelY: T,
                label: l,
                labelStyle: c,
                labelShowBg: u,
                labelBgStyle: f,
                labelBgPadding: p,
                labelBgBorderRadius: g,
                style: x,
                markerEnd: S,
                markerStart: _,
                interactionWidth: b
            });
        });
    }
    const Lhe = x$({
        isInternal: !1
    }), b$ = x$({
        isInternal: !0
    });
    Lhe.displayName = "SimpleBezierEdge";
    b$.displayName = "SimpleBezierEdgeInternal";
    function w$(t) {
        return X.memo(({ id: e, sourceX: n, sourceY: r, targetX: i, targetY: s, label: o, labelStyle: a, labelShowBg: l, labelBgStyle: c, labelBgPadding: u, labelBgBorderRadius: f, style: p, sourcePosition: g = Qt.Bottom, targetPosition: x = Qt.Top, markerEnd: S, markerStart: _, pathOptions: b, interactionWidth: M })=>{
            const [E, T, k] = ek({
                sourceX: n,
                sourceY: r,
                sourcePosition: g,
                targetX: i,
                targetY: s,
                targetPosition: x,
                borderRadius: b?.borderRadius,
                offset: b?.offset
            }), N = t.isInternal ? void 0 : e;
            return v.jsx(cw, {
                id: N,
                path: E,
                labelX: T,
                labelY: k,
                label: o,
                labelStyle: a,
                labelShowBg: l,
                labelBgStyle: c,
                labelBgPadding: u,
                labelBgBorderRadius: f,
                style: p,
                markerEnd: S,
                markerStart: _,
                interactionWidth: M
            });
        });
    }
    const _$ = w$({
        isInternal: !1
    }), S$ = w$({
        isInternal: !0
    });
    _$.displayName = "SmoothStepEdge";
    S$.displayName = "SmoothStepEdgeInternal";
    function E$(t) {
        return X.memo(({ id: e, ...n })=>{
            const r = t.isInternal ? void 0 : e;
            return v.jsx(_$, {
                ...n,
                id: r,
                pathOptions: X.useMemo(()=>({
                        borderRadius: 0,
                        offset: n.pathOptions?.offset
                    }), [
                    n.pathOptions?.offset
                ])
            });
        });
    }
    const Dhe = E$({
        isInternal: !1
    }), M$ = E$({
        isInternal: !0
    });
    Dhe.displayName = "StepEdge";
    M$.displayName = "StepEdgeInternal";
    function T$(t) {
        return X.memo(({ id: e, sourceX: n, sourceY: r, targetX: i, targetY: s, label: o, labelStyle: a, labelShowBg: l, labelBgStyle: c, labelBgPadding: u, labelBgBorderRadius: f, style: p, markerEnd: g, markerStart: x, interactionWidth: S })=>{
            const [_, b, M] = $H({
                sourceX: n,
                sourceY: r,
                targetX: i,
                targetY: s
            }), E = t.isInternal ? void 0 : e;
            return v.jsx(cw, {
                id: E,
                path: _,
                labelX: b,
                labelY: M,
                label: o,
                labelStyle: a,
                labelShowBg: l,
                labelBgStyle: c,
                labelBgPadding: u,
                labelBgBorderRadius: f,
                style: p,
                markerEnd: g,
                markerStart: x,
                interactionWidth: S
            });
        });
    }
    const Fhe = T$({
        isInternal: !1
    }), C$ = T$({
        isInternal: !0
    });
    Fhe.displayName = "StraightEdge";
    C$.displayName = "StraightEdgeInternal";
    function I$(t) {
        return X.memo(({ id: e, sourceX: n, sourceY: r, targetX: i, targetY: s, sourcePosition: o = Qt.Bottom, targetPosition: a = Qt.Top, label: l, labelStyle: c, labelShowBg: u, labelBgStyle: f, labelBgPadding: p, labelBgBorderRadius: g, style: x, markerEnd: S, markerStart: _, pathOptions: b, interactionWidth: M })=>{
            const [E, T, k] = XO({
                sourceX: n,
                sourceY: r,
                sourcePosition: o,
                targetX: i,
                targetY: s,
                targetPosition: a,
                curvature: b?.curvature
            }), N = t.isInternal ? void 0 : e;
            return v.jsx(cw, {
                id: N,
                path: E,
                labelX: T,
                labelY: k,
                label: l,
                labelStyle: c,
                labelShowBg: u,
                labelBgStyle: f,
                labelBgPadding: p,
                labelBgBorderRadius: g,
                style: x,
                markerEnd: S,
                markerStart: _,
                interactionWidth: M
            });
        });
    }
    const jhe = I$({
        isInternal: !1
    }), R$ = I$({
        isInternal: !0
    });
    jhe.displayName = "BezierEdge";
    R$.displayName = "BezierEdgeInternal";
    const oU = {
        default: R$,
        straight: C$,
        step: M$,
        smoothstep: S$,
        simplebezier: b$
    }, aU = {
        sourceX: null,
        sourceY: null,
        targetX: null,
        targetY: null,
        sourcePosition: null,
        targetPosition: null
    }, Bhe = (t, e, n)=>n === Qt.Left ? t - e : n === Qt.Right ? t + e : t, Uhe = (t, e, n)=>n === Qt.Top ? t - e : n === Qt.Bottom ? t + e : t, lU = "react-flow__edgeupdater";
    function cU({ position: t, centerX: e, centerY: n, radius: r = 10, onMouseDown: i, onMouseEnter: s, onMouseOut: o, type: a }) {
        return v.jsx("circle", {
            onMouseDown: i,
            onMouseEnter: s,
            onMouseOut: o,
            className: qi([
                lU,
                `${lU}-${a}`
            ]),
            cx: Bhe(e, r, t),
            cy: Uhe(n, r, t),
            r,
            stroke: "transparent",
            fill: "transparent"
        });
    }
    function zhe({ isReconnectable: t, reconnectRadius: e, edge: n, sourceX: r, sourceY: i, targetX: s, targetY: o, sourcePosition: a, targetPosition: l, onReconnect: c, onReconnectStart: u, onReconnectEnd: f, setReconnecting: p, setUpdateHover: g }) {
        const x = Yr(), S = (T, k)=>{
            if (T.button !== 0) return;
            const { autoPanOnConnect: N, domNode: D, isValidConnection: L, connectionMode: R, connectionRadius: A, lib: P, onConnectStart: B, onConnectEnd: U, cancelConnection: j, nodeLookup: K, rfId: q, panBy: te, updateConnection: W } = x.getState(), J = k.type === "target";
            p(!0), u?.(T, n, k.type);
            const Q = (le, ue)=>{
                p(!1), f?.(le, n, k.type, ue);
            }, Y = (le)=>c?.(n, le);
            rk.onPointerDown(T.nativeEvent, {
                autoPanOnConnect: N,
                connectionMode: R,
                connectionRadius: A,
                domNode: D,
                handleId: k.id,
                nodeId: k.nodeId,
                nodeLookup: K,
                isTarget: J,
                edgeUpdaterType: k.type,
                lib: P,
                flowId: q,
                cancelConnection: j,
                panBy: te,
                isValidConnection: L,
                onConnect: Y,
                onConnectStart: B,
                onConnectEnd: U,
                onReconnectEnd: Q,
                updateConnection: W,
                getTransform: ()=>x.getState().transform,
                getFromHandle: ()=>x.getState().connection.fromHandle
            });
        }, _ = (T)=>S(T, {
                nodeId: n.target,
                id: n.targetHandle ?? null,
                type: "target"
            }), b = (T)=>S(T, {
                nodeId: n.source,
                id: n.sourceHandle ?? null,
                type: "source"
            }), M = ()=>g(!0), E = ()=>g(!1);
        return v.jsxs(v.Fragment, {
            children: [
                (t === !0 || t === "source") && v.jsx(cU, {
                    position: a,
                    centerX: r,
                    centerY: i,
                    radius: e,
                    onMouseDown: _,
                    onMouseEnter: M,
                    onMouseOut: E,
                    type: "source"
                }),
                (t === !0 || t === "target") && v.jsx(cU, {
                    position: l,
                    centerX: s,
                    centerY: o,
                    radius: e,
                    onMouseDown: b,
                    onMouseEnter: M,
                    onMouseOut: E,
                    type: "target"
                })
            ]
        });
    }
    function Vhe({ id: t, edgesFocusable: e, edgesReconnectable: n, elementsSelectable: r, onClick: i, onDoubleClick: s, onContextMenu: o, onMouseEnter: a, onMouseMove: l, onMouseLeave: c, reconnectRadius: u, onReconnect: f, onReconnectStart: p, onReconnectEnd: g, rfId: x, edgeTypes: S, noPanClassName: _, onError: b, disableKeyboardA11y: M }) {
        let E = Qn((we)=>we.edgeLookup.get(t));
        const T = Qn((we)=>we.defaultEdgeOptions);
        E = T ? {
            ...T,
            ...E
        } : E;
        let k = E.type || "default", N = S?.[k] || oU[k];
        N === void 0 && (b?.("011", xd.error011(k)), k = "default", N = oU.default);
        const D = !!(E.focusable || e && typeof E.focusable > "u"), L = typeof f < "u" && (E.reconnectable || n && typeof E.reconnectable > "u"), R = !!(E.selectable || r && typeof E.selectable > "u"), A = X.useRef(null), [P, B] = X.useState(!1), [U, j] = X.useState(!1), K = Yr(), { zIndex: q, sourceX: te, sourceY: W, targetX: J, targetY: Q, sourcePosition: Y, targetPosition: le } = Qn(X.useCallback((we)=>{
            const Me = we.nodeLookup.get(E.source), se = we.nodeLookup.get(E.target);
            if (!Me || !se) return {
                zIndex: E.zIndex,
                ...aU
            };
            const Ye = Bde({
                id: t,
                sourceNode: Me,
                targetNode: se,
                sourceHandle: E.sourceHandle || null,
                targetHandle: E.targetHandle || null,
                connectionMode: we.connectionMode,
                onError: b
            });
            return {
                zIndex: Nde({
                    selected: E.selected,
                    zIndex: E.zIndex,
                    sourceNode: Me,
                    targetNode: se,
                    elevateOnSelect: we.elevateEdgesOnSelect
                }),
                ...Ye || aU
            };
        }, [
            E.source,
            E.target,
            E.sourceHandle,
            E.targetHandle,
            E.selected,
            E.zIndex
        ]), di), ue = X.useMemo(()=>E.markerStart ? `url('#${tk(E.markerStart, x)}')` : void 0, [
            E.markerStart,
            x
        ]), ie = X.useMemo(()=>E.markerEnd ? `url('#${tk(E.markerEnd, x)}')` : void 0, [
            E.markerEnd,
            x
        ]);
        if (E.hidden || te === null || W === null || J === null || Q === null) return null;
        const he = (we)=>{
            const { addSelectedEdges: Me, unselectNodesAndEdges: se, multiSelectionActive: Ye } = K.getState();
            R && (K.setState({
                nodesSelectionActive: !1
            }), E.selected && Ye ? (se({
                nodes: [],
                edges: [
                    E
                ]
            }), A.current?.blur()) : Me([
                t
            ])), i && i(we, E);
        }, ge = s ? (we)=>{
            s(we, {
                ...E
            });
        } : void 0, ve = o ? (we)=>{
            o(we, {
                ...E
            });
        } : void 0, Ee = a ? (we)=>{
            a(we, {
                ...E
            });
        } : void 0, Ce = l ? (we)=>{
            l(we, {
                ...E
            });
        } : void 0, Ne = c ? (we)=>{
            c(we, {
                ...E
            });
        } : void 0, Ve = (we)=>{
            if (!M && AH.includes(we.key) && R) {
                const { unselectNodesAndEdges: Me, addSelectedEdges: se } = K.getState();
                we.key === "Escape" ? (A.current?.blur(), Me({
                    edges: [
                        E
                    ]
                })) : se([
                    t
                ]);
            }
        };
        return v.jsx("svg", {
            style: {
                zIndex: q
            },
            children: v.jsxs("g", {
                className: qi([
                    "react-flow__edge",
                    `react-flow__edge-${k}`,
                    E.className,
                    _,
                    {
                        selected: E.selected,
                        animated: E.animated,
                        inactive: !R && !i,
                        updating: P,
                        selectable: R
                    }
                ]),
                onClick: he,
                onDoubleClick: ge,
                onContextMenu: ve,
                onMouseEnter: Ee,
                onMouseMove: Ce,
                onMouseLeave: Ne,
                onKeyDown: D ? Ve : void 0,
                tabIndex: D ? 0 : void 0,
                role: D ? "button" : "img",
                "data-id": t,
                "data-testid": `rf__edge-${t}`,
                "aria-label": E.ariaLabel === null ? void 0 : E.ariaLabel || `Edge from ${E.source} to ${E.target}`,
                "aria-describedby": D ? `${o$}-${x}` : void 0,
                ref: A,
                children: [
                    !U && v.jsx(N, {
                        id: t,
                        source: E.source,
                        target: E.target,
                        type: E.type,
                        selected: E.selected,
                        animated: E.animated,
                        selectable: R,
                        deletable: E.deletable ?? !0,
                        label: E.label,
                        labelStyle: E.labelStyle,
                        labelShowBg: E.labelShowBg,
                        labelBgStyle: E.labelBgStyle,
                        labelBgPadding: E.labelBgPadding,
                        labelBgBorderRadius: E.labelBgBorderRadius,
                        sourceX: te,
                        sourceY: W,
                        targetX: J,
                        targetY: Q,
                        sourcePosition: Y,
                        targetPosition: le,
                        data: E.data,
                        style: E.style,
                        sourceHandleId: E.sourceHandle,
                        targetHandleId: E.targetHandle,
                        markerStart: ue,
                        markerEnd: ie,
                        pathOptions: "pathOptions" in E ? E.pathOptions : void 0,
                        interactionWidth: E.interactionWidth
                    }),
                    L && v.jsx(zhe, {
                        edge: E,
                        isReconnectable: L,
                        reconnectRadius: u,
                        onReconnect: f,
                        onReconnectStart: p,
                        onReconnectEnd: g,
                        sourceX: te,
                        sourceY: W,
                        targetX: J,
                        targetY: Q,
                        sourcePosition: Y,
                        targetPosition: le,
                        setUpdateHover: B,
                        setReconnecting: j
                    })
                ]
            })
        });
    }
    const Whe = (t)=>({
            edgesFocusable: t.edgesFocusable,
            edgesReconnectable: t.edgesReconnectable,
            elementsSelectable: t.elementsSelectable,
            connectionMode: t.connectionMode,
            onError: t.onError
        });
    function A$({ defaultMarkerColor: t, onlyRenderVisibleElements: e, rfId: n, edgeTypes: r, noPanClassName: i, onReconnect: s, onEdgeContextMenu: o, onEdgeMouseEnter: a, onEdgeMouseMove: l, onEdgeMouseLeave: c, onEdgeClick: u, reconnectRadius: f, onEdgeDoubleClick: p, onReconnectStart: g, onReconnectEnd: x, disableKeyboardA11y: S }) {
        const { edgesFocusable: _, edgesReconnectable: b, elementsSelectable: M, onError: E } = Qn(Whe, di), T = Ihe(e);
        return v.jsxs("div", {
            className: "react-flow__edges",
            children: [
                v.jsx(khe, {
                    defaultColor: t,
                    rfId: n
                }),
                T.map((k)=>v.jsx(Vhe, {
                        id: k,
                        edgesFocusable: _,
                        edgesReconnectable: b,
                        elementsSelectable: M,
                        noPanClassName: i,
                        onReconnect: s,
                        onContextMenu: o,
                        onMouseEnter: a,
                        onMouseMove: l,
                        onMouseLeave: c,
                        onClick: u,
                        reconnectRadius: f,
                        onDoubleClick: p,
                        onReconnectStart: g,
                        onReconnectEnd: x,
                        rfId: n,
                        onError: E,
                        edgeTypes: r,
                        disableKeyboardA11y: S
                    }, k))
            ]
        });
    }
    A$.displayName = "EdgeRenderer";
    const qhe = X.memo(A$), Hhe = (t)=>`translate(${t.transform[0]}px,${t.transform[1]}px) scale(${t.transform[2]})`;
    function $he({ children: t }) {
        const e = Qn(Hhe);
        return v.jsx("div", {
            className: "react-flow__viewport xyflow__viewport react-flow__container",
            style: {
                transform: e
            },
            children: t
        });
    }
    function Ghe(t) {
        const e = lw(), n = X.useRef(!1);
        X.useEffect(()=>{
            !n.current && e.viewportInitialized && t && (setTimeout(()=>t(e), 1), n.current = !0);
        }, [
            t,
            e.viewportInitialized
        ]);
    }
    const Xhe = (t)=>t.panZoom?.syncViewport;
    function Khe(t) {
        const e = Qn(Xhe), n = Yr();
        return X.useEffect(()=>{
            t && (e?.(t), n.setState({
                transform: [
                    t.x,
                    t.y,
                    t.zoom
                ]
            }));
        }, [
            t,
            e
        ]), null;
    }
    function Yhe(t) {
        return t.connection.inProgress ? {
            ...t.connection,
            to: aw(t.connection.to, t.transform)
        } : {
            ...t.connection
        };
    }
    function Zhe(t) {
        return Yhe;
    }
    function Jhe(t) {
        const e = Zhe();
        return Qn(e, di);
    }
    const Qhe = (t)=>({
            nodesConnectable: t.nodesConnectable,
            isValid: t.connection.isValid,
            inProgress: t.connection.inProgress,
            width: t.width,
            height: t.height
        });
    function epe({ containerStyle: t, style: e, type: n, component: r }) {
        const { nodesConnectable: i, width: s, height: o, isValid: a, inProgress: l } = Qn(Qhe, di);
        return !(s && i && l) ? null : v.jsx("svg", {
            style: t,
            width: s,
            height: o,
            className: "react-flow__connectionline react-flow__container",
            children: v.jsx("g", {
                className: qi([
                    "react-flow__connection",
                    PH(a)
                ]),
                children: v.jsx(N$, {
                    style: e,
                    type: n,
                    CustomComponent: r,
                    isValid: a
                })
            })
        });
    }
    const N$ = ({ style: t, type: e = Af.Bezier, CustomComponent: n, isValid: r })=>{
        const { inProgress: i, from: s, fromNode: o, fromHandle: a, fromPosition: l, to: c, toNode: u, toHandle: f, toPosition: p } = Jhe();
        if (!i) return;
        if (n) return v.jsx(n, {
            connectionLineType: e,
            connectionLineStyle: t,
            fromNode: o,
            fromHandle: a,
            fromX: s.x,
            fromY: s.y,
            toX: c.x,
            toY: c.y,
            fromPosition: l,
            toPosition: p,
            connectionStatus: PH(r),
            toNode: u,
            toHandle: f
        });
        let g = "";
        const x = {
            sourceX: s.x,
            sourceY: s.y,
            sourcePosition: l,
            targetX: c.x,
            targetY: c.y,
            targetPosition: p
        };
        switch(e){
            case Af.Bezier:
                [g] = XO(x);
                break;
            case Af.SimpleBezier:
                [g] = v$(x);
                break;
            case Af.Step:
                [g] = ek({
                    ...x,
                    borderRadius: 0
                });
                break;
            case Af.SmoothStep:
                [g] = ek(x);
                break;
            default:
                [g] = $H(x);
        }
        return v.jsx("path", {
            d: g,
            fill: "none",
            className: "react-flow__connection-path",
            style: t
        });
    };
    N$.displayName = "ConnectionLine";
    const tpe = {};
    function uU(t = tpe) {
        X.useRef(t), Yr(), X.useEffect(()=>{}, [
            t
        ]);
    }
    function npe() {
        Yr(), X.useRef(!1), X.useEffect(()=>{}, []);
    }
    function P$({ nodeTypes: t, edgeTypes: e, onInit: n, onNodeClick: r, onEdgeClick: i, onNodeDoubleClick: s, onEdgeDoubleClick: o, onNodeMouseEnter: a, onNodeMouseMove: l, onNodeMouseLeave: c, onNodeContextMenu: u, onSelectionContextMenu: f, onSelectionStart: p, onSelectionEnd: g, connectionLineType: x, connectionLineStyle: S, connectionLineComponent: _, connectionLineContainerStyle: b, selectionKeyCode: M, selectionOnDrag: E, selectionMode: T, multiSelectionKeyCode: k, panActivationKeyCode: N, zoomActivationKeyCode: D, deleteKeyCode: L, onlyRenderVisibleElements: R, elementsSelectable: A, defaultViewport: P, translateExtent: B, minZoom: U, maxZoom: j, preventScrolling: K, defaultMarkerColor: q, zoomOnScroll: te, zoomOnPinch: W, panOnScroll: J, panOnScrollSpeed: Q, panOnScrollMode: Y, zoomOnDoubleClick: le, panOnDrag: ue, onPaneClick: ie, onPaneMouseEnter: he, onPaneMouseMove: ge, onPaneMouseLeave: ve, onPaneScroll: Ee, onPaneContextMenu: Ce, paneClickDistance: Ne, nodeClickDistance: Ve, onEdgeContextMenu: we, onEdgeMouseEnter: Me, onEdgeMouseMove: se, onEdgeMouseLeave: Ye, reconnectRadius: Be, onReconnect: it, onReconnectStart: de, onReconnectEnd: ae, noDragClassName: oe, noWheelClassName: $, noPanClassName: H, disableKeyboardA11y: fe, nodeExtent: pe, rfId: me, viewport: Ie, onViewportChange: Xe }) {
        return uU(t), uU(e), npe(), Ghe(n), Khe(Ie), v.jsx(xhe, {
            onPaneClick: ie,
            onPaneMouseEnter: he,
            onPaneMouseMove: ge,
            onPaneMouseLeave: ve,
            onPaneContextMenu: Ce,
            onPaneScroll: Ee,
            paneClickDistance: Ne,
            deleteKeyCode: L,
            selectionKeyCode: M,
            selectionOnDrag: E,
            selectionMode: T,
            onSelectionStart: p,
            onSelectionEnd: g,
            multiSelectionKeyCode: k,
            panActivationKeyCode: N,
            zoomActivationKeyCode: D,
            elementsSelectable: A,
            zoomOnScroll: te,
            zoomOnPinch: W,
            zoomOnDoubleClick: le,
            panOnScroll: J,
            panOnScrollSpeed: Q,
            panOnScrollMode: Y,
            panOnDrag: ue,
            defaultViewport: P,
            translateExtent: B,
            minZoom: U,
            maxZoom: j,
            onSelectionContextMenu: f,
            preventScrolling: K,
            noDragClassName: oe,
            noWheelClassName: $,
            noPanClassName: H,
            disableKeyboardA11y: fe,
            onViewportChange: Xe,
            isControlledViewport: !!Ie,
            children: v.jsxs($he, {
                children: [
                    v.jsx(qhe, {
                        edgeTypes: e,
                        onEdgeClick: i,
                        onEdgeDoubleClick: o,
                        onReconnect: it,
                        onReconnectStart: de,
                        onReconnectEnd: ae,
                        onlyRenderVisibleElements: R,
                        onEdgeContextMenu: we,
                        onEdgeMouseEnter: Me,
                        onEdgeMouseMove: se,
                        onEdgeMouseLeave: Ye,
                        reconnectRadius: Be,
                        defaultMarkerColor: q,
                        noPanClassName: H,
                        disableKeyboardA11y: fe,
                        rfId: me
                    }),
                    v.jsx(epe, {
                        style: S,
                        type: x,
                        component: _,
                        containerStyle: b
                    }),
                    v.jsx("div", {
                        className: "react-flow__edgelabel-renderer"
                    }),
                    v.jsx(Che, {
                        nodeTypes: t,
                        onNodeClick: r,
                        onNodeDoubleClick: s,
                        onNodeMouseEnter: a,
                        onNodeMouseMove: l,
                        onNodeMouseLeave: c,
                        onNodeContextMenu: u,
                        nodeClickDistance: Ve,
                        onlyRenderVisibleElements: R,
                        noPanClassName: H,
                        noDragClassName: oe,
                        disableKeyboardA11y: fe,
                        nodeExtent: pe,
                        rfId: me
                    }),
                    v.jsx("div", {
                        className: "react-flow__viewport-portal"
                    })
                ]
            })
        });
    }
    P$.displayName = "GraphView";
    const rpe = X.memo(P$), dU = ({ nodes: t, edges: e, defaultNodes: n, defaultEdges: r, width: i, height: s, fitView: o, nodeOrigin: a, nodeExtent: l } = {})=>{
        const c = new Map, u = new Map, f = new Map, p = new Map, g = r ?? e ?? [], x = n ?? t ?? [], S = a ?? [
            0,
            0
        ], _ = l ?? fb;
        XH(f, p, g), nk(x, c, u, {
            nodeOrigin: S,
            nodeExtent: _,
            elevateNodesOnSelect: !1
        });
        let b = [
            0,
            0,
            1
        ];
        if (o && i && s) {
            const M = ow(c, {
                filter: (N)=>!!((N.width || N.initialWidth) && (N.height || N.initialHeight))
            }), { x: E, y: T, zoom: k } = GO(M, i, s, .5, 2, .1);
            b = [
                E,
                T,
                k
            ];
        }
        return {
            rfId: "1",
            width: 0,
            height: 0,
            transform: b,
            nodes: x,
            nodeLookup: c,
            parentLookup: u,
            edges: g,
            edgeLookup: p,
            connectionLookup: f,
            onNodesChange: null,
            onEdgesChange: null,
            hasDefaultNodes: n !== void 0,
            hasDefaultEdges: r !== void 0,
            panZoom: null,
            minZoom: .5,
            maxZoom: 2,
            translateExtent: fb,
            nodeExtent: _,
            nodesSelectionActive: !1,
            userSelectionActive: !1,
            userSelectionRect: null,
            connectionMode: $y.Strict,
            domNode: null,
            paneDragging: !1,
            noPanClassName: "nopan",
            nodeOrigin: S,
            nodeDragThreshold: 1,
            snapGrid: [
                15,
                15
            ],
            snapToGrid: !1,
            nodesDraggable: !0,
            nodesConnectable: !0,
            nodesFocusable: !0,
            edgesFocusable: !0,
            edgesReconnectable: !0,
            elementsSelectable: !0,
            elevateNodesOnSelect: !0,
            elevateEdgesOnSelect: !1,
            fitViewOnInit: !1,
            fitViewDone: !1,
            fitViewOnInitOptions: void 0,
            selectNodesOnDrag: !0,
            multiSelectionActive: !1,
            connection: {
                ...NH
            },
            connectionClickStartHandle: null,
            connectOnClick: !0,
            ariaLiveMessage: "",
            autoPanOnConnect: !0,
            autoPanOnNodeDrag: !0,
            autoPanSpeed: 15,
            connectionRadius: 20,
            onError: Rde,
            isValidConnection: void 0,
            onSelectionChangeHandlers: [],
            lib: "react",
            debug: !1
        };
    }, ipe = ({ nodes: t, edges: e, defaultNodes: n, defaultEdges: r, width: i, height: s, fitView: o, nodeOrigin: a, nodeExtent: l })=>wfe((c, u)=>({
                ...dU({
                    nodes: t,
                    edges: e,
                    width: i,
                    height: s,
                    fitView: o,
                    nodeOrigin: a,
                    nodeExtent: l,
                    defaultNodes: n,
                    defaultEdges: r
                }),
                setNodes: (f)=>{
                    const { nodeLookup: p, parentLookup: g, nodeOrigin: x, elevateNodesOnSelect: S } = u();
                    nk(f, p, g, {
                        nodeOrigin: x,
                        nodeExtent: l,
                        elevateNodesOnSelect: S,
                        checkEquality: !0
                    }), c({
                        nodes: f
                    });
                },
                setEdges: (f)=>{
                    const { connectionLookup: p, edgeLookup: g } = u();
                    XH(p, g, f), c({
                        edges: f
                    });
                },
                setDefaultNodesAndEdges: (f, p)=>{
                    if (f) {
                        const { setNodes: g } = u();
                        g(f), c({
                            hasDefaultNodes: !0
                        });
                    }
                    if (p) {
                        const { setEdges: g } = u();
                        g(p), c({
                            hasDefaultEdges: !0
                        });
                    }
                },
                updateNodeInternals: (f, p = {
                    triggerFitView: !0
                })=>{
                    const { triggerNodeChanges: g, nodeLookup: x, parentLookup: S, fitViewOnInit: _, fitViewDone: b, fitViewOnInitOptions: M, domNode: E, nodeOrigin: T, nodeExtent: k, debug: N, fitViewSync: D } = u(), { changes: L, updatedInternals: R } = Hde(f, x, S, E, T, k);
                    if (R) {
                        if (Vde(x, S, {
                            nodeOrigin: T,
                            nodeExtent: k
                        }), p.triggerFitView) {
                            let A = b;
                            !b && _ && (A = D({
                                ...M,
                                nodes: M?.nodes
                            })), c({
                                fitViewDone: A
                            });
                        } else c({});
                        L?.length > 0 && (N && console.log("React Flow: trigger node changes", L), g?.(L));
                    }
                },
                updateNodePositions: (f, p = !1)=>{
                    const g = [], x = [];
                    for (const [S, _] of f){
                        const b = !!(_?.expandParent && _?.parentId && _?.position), M = {
                            id: S,
                            type: "position",
                            position: b ? {
                                x: Math.max(0, _.position.x),
                                y: Math.max(0, _.position.y)
                            } : _.position,
                            dragging: p
                        };
                        b && g.push({
                            id: S,
                            parentId: _.parentId,
                            rect: {
                                ..._.internals.positionAbsolute,
                                width: _.measured.width,
                                height: _.measured.height
                            }
                        }), x.push(M);
                    }
                    if (g.length > 0) {
                        const { nodeLookup: S, parentLookup: _, nodeOrigin: b } = u(), M = JO(g, S, _, b);
                        x.push(...M);
                    }
                    u().triggerNodeChanges(x);
                },
                triggerNodeChanges: (f)=>{
                    const { onNodesChange: p, setNodes: g, nodes: x, hasDefaultNodes: S, debug: _ } = u();
                    if (f?.length) {
                        if (S) {
                            const b = Vfe(f, x);
                            g(b);
                        }
                        _ && console.log("React Flow: trigger node changes", f), p?.(f);
                    }
                },
                triggerEdgeChanges: (f)=>{
                    const { onEdgesChange: p, setEdges: g, edges: x, hasDefaultEdges: S, debug: _ } = u();
                    if (f?.length) {
                        if (S) {
                            const b = Wfe(f, x);
                            g(b);
                        }
                        _ && console.log("React Flow: trigger edge changes", f), p?.(f);
                    }
                },
                addSelectedNodes: (f)=>{
                    const { multiSelectionActive: p, edgeLookup: g, nodeLookup: x, triggerNodeChanges: S, triggerEdgeChanges: _ } = u();
                    if (p) {
                        const b = f.map((M)=>yp(M, !0));
                        S(b);
                        return;
                    }
                    S(ly(x, new Set([
                        ...f
                    ]), !0)), _(ly(g));
                },
                addSelectedEdges: (f)=>{
                    const { multiSelectionActive: p, edgeLookup: g, nodeLookup: x, triggerNodeChanges: S, triggerEdgeChanges: _ } = u();
                    if (p) {
                        const b = f.map((M)=>yp(M, !0));
                        _(b);
                        return;
                    }
                    _(ly(g, new Set([
                        ...f
                    ]))), S(ly(x, new Set, !0));
                },
                unselectNodesAndEdges: ({ nodes: f, edges: p } = {})=>{
                    const { edges: g, nodes: x, nodeLookup: S, triggerNodeChanges: _, triggerEdgeChanges: b } = u(), M = f || x, E = p || g, T = M.map((N)=>{
                        const D = S.get(N.id);
                        return D && (D.selected = !1), yp(N.id, !1);
                    }), k = E.map((N)=>yp(N.id, !1));
                    _(T), b(k);
                },
                setMinZoom: (f)=>{
                    const { panZoom: p, maxZoom: g } = u();
                    p?.setScaleExtent([
                        f,
                        g
                    ]), c({
                        minZoom: f
                    });
                },
                setMaxZoom: (f)=>{
                    const { panZoom: p, minZoom: g } = u();
                    p?.setScaleExtent([
                        g,
                        f
                    ]), c({
                        maxZoom: f
                    });
                },
                setTranslateExtent: (f)=>{
                    u().panZoom?.setTranslateExtent(f), c({
                        translateExtent: f
                    });
                },
                setPaneClickDistance: (f)=>{
                    u().panZoom?.setClickDistance(f);
                },
                resetSelectedElements: ()=>{
                    const { edges: f, nodes: p, triggerNodeChanges: g, triggerEdgeChanges: x } = u(), S = p.reduce((b, M)=>M.selected ? [
                            ...b,
                            yp(M.id, !1)
                        ] : b, []), _ = f.reduce((b, M)=>M.selected ? [
                            ...b,
                            yp(M.id, !1)
                        ] : b, []);
                    g(S), x(_);
                },
                setNodeExtent: (f)=>{
                    const { nodes: p, nodeLookup: g, parentLookup: x, nodeOrigin: S, elevateNodesOnSelect: _, nodeExtent: b } = u();
                    f[0][0] === b[0][0] && f[0][1] === b[0][1] && f[1][0] === b[1][0] && f[1][1] === b[1][1] || (nk(p, g, x, {
                        nodeOrigin: S,
                        nodeExtent: f,
                        elevateNodesOnSelect: _,
                        checkEquality: !1
                    }), c({
                        nodeExtent: f
                    }));
                },
                panBy: (f)=>{
                    const { transform: p, width: g, height: x, panZoom: S, translateExtent: _ } = u();
                    return $de({
                        delta: f,
                        panZoom: S,
                        transform: p,
                        translateExtent: _,
                        width: g,
                        height: x
                    });
                },
                fitView: (f)=>{
                    const { panZoom: p, width: g, height: x, minZoom: S, maxZoom: _, nodeLookup: b } = u();
                    if (!p) return Promise.resolve(!1);
                    const M = YP(b, f);
                    return ZP({
                        nodes: M,
                        width: g,
                        height: x,
                        panZoom: p,
                        minZoom: S,
                        maxZoom: _
                    }, f);
                },
                fitViewSync: (f)=>{
                    const { panZoom: p, width: g, height: x, minZoom: S, maxZoom: _, nodeLookup: b } = u();
                    if (!p) return !1;
                    const M = YP(b, f);
                    return ZP({
                        nodes: M,
                        width: g,
                        height: x,
                        panZoom: p,
                        minZoom: S,
                        maxZoom: _
                    }, f), M.size > 0;
                },
                cancelConnection: ()=>{
                    c({
                        connection: {
                            ...NH
                        }
                    });
                },
                updateConnection: (f)=>{
                    c({
                        connection: f
                    });
                },
                reset: ()=>c({
                        ...dU()
                    })
            }), Object.is);
    function spe({ initialNodes: t, initialEdges: e, defaultNodes: n, defaultEdges: r, initialWidth: i, initialHeight: s, fitView: o, nodeOrigin: a, nodeExtent: l, children: c }) {
        const [u] = X.useState(()=>ipe({
                nodes: t,
                edges: e,
                defaultNodes: n,
                defaultEdges: r,
                width: i,
                height: s,
                fitView: o,
                nodeOrigin: a,
                nodeExtent: l
            }));
        return v.jsx(_fe, {
            value: u,
            children: v.jsx(Gfe, {
                children: c
            })
        });
    }
    function ope({ children: t, nodes: e, edges: n, defaultNodes: r, defaultEdges: i, width: s, height: o, fitView: a, nodeOrigin: l, nodeExtent: c }) {
        return X.useContext(kT) ? v.jsx(v.Fragment, {
            children: t
        }) : v.jsx(spe, {
            initialNodes: e,
            initialEdges: n,
            defaultNodes: r,
            defaultEdges: i,
            initialWidth: s,
            initialHeight: o,
            fitView: a,
            nodeOrigin: l,
            nodeExtent: c,
            children: t
        });
    }
    const ape = {
        width: "100%",
        height: "100%",
        overflow: "hidden",
        position: "relative",
        zIndex: 0
    };
    function lpe({ nodes: t, edges: e, defaultNodes: n, defaultEdges: r, className: i, nodeTypes: s, edgeTypes: o, onNodeClick: a, onEdgeClick: l, onInit: c, onMove: u, onMoveStart: f, onMoveEnd: p, onConnect: g, onConnectStart: x, onConnectEnd: S, onClickConnectStart: _, onClickConnectEnd: b, onNodeMouseEnter: M, onNodeMouseMove: E, onNodeMouseLeave: T, onNodeContextMenu: k, onNodeDoubleClick: N, onNodeDragStart: D, onNodeDrag: L, onNodeDragStop: R, onNodesDelete: A, onEdgesDelete: P, onDelete: B, onSelectionChange: U, onSelectionDragStart: j, onSelectionDrag: K, onSelectionDragStop: q, onSelectionContextMenu: te, onSelectionStart: W, onSelectionEnd: J, onBeforeDelete: Q, connectionMode: Y, connectionLineType: le = Af.Bezier, connectionLineStyle: ue, connectionLineComponent: ie, connectionLineContainerStyle: he, deleteKeyCode: ge = "Backspace", selectionKeyCode: ve = "Shift", selectionOnDrag: Ee = !1, selectionMode: Ce = hb.Full, panActivationKeyCode: Ne = "Space", multiSelectionKeyCode: Ve = XE() ? "Meta" : "Control", zoomActivationKeyCode: we = XE() ? "Meta" : "Control", snapToGrid: Me, snapGrid: se, onlyRenderVisibleElements: Ye = !1, selectNodesOnDrag: Be, nodesDraggable: it, nodesConnectable: de, nodesFocusable: ae, nodeOrigin: oe = a$, edgesFocusable: $, edgesReconnectable: H, elementsSelectable: fe = !0, defaultViewport: pe = Lfe, minZoom: me = .5, maxZoom: Ie = 2, translateExtent: Xe = fb, preventScrolling: Ze = !0, nodeExtent: at, defaultMarkerColor: Je = "#b1b1b7", zoomOnScroll: Pe = !0, zoomOnPinch: Fe = !0, panOnScroll: nt = !1, panOnScrollSpeed: ct = .5, panOnScrollMode: st = Up.Free, zoomOnDoubleClick: _e = !0, panOnDrag: $e = !0, onPaneClick: ht, onPaneMouseEnter: Se, onPaneMouseMove: lt, onPaneMouseLeave: Re, onPaneScroll: Ue, onPaneContextMenu: We, paneClickDistance: rt = 0, nodeClickDistance: pt = 0, children: Nt, onReconnect: Zt, onReconnectStart: wt, onReconnectEnd: Nn, onEdgeContextMenu: pn, onEdgeDoubleClick: Fr, onEdgeMouseEnter: za, onEdgeMouseMove: Po, onEdgeMouseLeave: ro, reconnectRadius: pl = 10, onNodesChange: io, onEdgesChange: Va, noDragClassName: wd = "nodrag", noWheelClassName: fc = "nowheel", noPanClassName: tu = "nopan", fitView: so, fitViewOptions: _d, connectOnClick: Sd, attributionPosition: Ed, proOptions: Md, defaultEdgeOptions: Td, elevateNodesOnSelect: Cd, elevateEdgesOnSelect: ce, disableKeyboardA11y: Oe = !1, autoPanOnConnect: Ge, autoPanOnNodeDrag: je, autoPanSpeed: Le, connectionRadius: dt, isValidConnection: _t, onError: Ct, style: Pt, id: Jt, nodeDragThreshold: Xt, viewport: yt, onViewportChange: Wt, width: nn, height: Pn, colorMode: kn = "light", debug: bn, onScroll: zt, ...Un }, Sn) {
        const Zr = Jt || "1", da = Bfe(kn), ii = X.useCallback((oo)=>{
            oo.currentTarget.scrollTo({
                top: 0,
                left: 0,
                behavior: "instant"
            }), zt?.(oo);
        }, [
            zt
        ]);
        return v.jsx("div", {
            "data-testid": "rf__wrapper",
            ...Un,
            onScroll: ii,
            style: {
                ...Pt,
                ...ape
            },
            ref: Sn,
            className: qi([
                "react-flow",
                i,
                da
            ]),
            id: Jt,
            children: v.jsxs(ope, {
                nodes: t,
                edges: e,
                width: nn,
                height: Pn,
                fitView: so,
                nodeOrigin: oe,
                nodeExtent: at,
                children: [
                    v.jsx(rpe, {
                        onInit: c,
                        onNodeClick: a,
                        onEdgeClick: l,
                        onNodeMouseEnter: M,
                        onNodeMouseMove: E,
                        onNodeMouseLeave: T,
                        onNodeContextMenu: k,
                        onNodeDoubleClick: N,
                        nodeTypes: s,
                        edgeTypes: o,
                        connectionLineType: le,
                        connectionLineStyle: ue,
                        connectionLineComponent: ie,
                        connectionLineContainerStyle: he,
                        selectionKeyCode: ve,
                        selectionOnDrag: Ee,
                        selectionMode: Ce,
                        deleteKeyCode: ge,
                        multiSelectionKeyCode: Ve,
                        panActivationKeyCode: Ne,
                        zoomActivationKeyCode: we,
                        onlyRenderVisibleElements: Ye,
                        defaultViewport: pe,
                        translateExtent: Xe,
                        minZoom: me,
                        maxZoom: Ie,
                        preventScrolling: Ze,
                        zoomOnScroll: Pe,
                        zoomOnPinch: Fe,
                        zoomOnDoubleClick: _e,
                        panOnScroll: nt,
                        panOnScrollSpeed: ct,
                        panOnScrollMode: st,
                        panOnDrag: $e,
                        onPaneClick: ht,
                        onPaneMouseEnter: Se,
                        onPaneMouseMove: lt,
                        onPaneMouseLeave: Re,
                        onPaneScroll: Ue,
                        onPaneContextMenu: We,
                        paneClickDistance: rt,
                        nodeClickDistance: pt,
                        onSelectionContextMenu: te,
                        onSelectionStart: W,
                        onSelectionEnd: J,
                        onReconnect: Zt,
                        onReconnectStart: wt,
                        onReconnectEnd: Nn,
                        onEdgeContextMenu: pn,
                        onEdgeDoubleClick: Fr,
                        onEdgeMouseEnter: za,
                        onEdgeMouseMove: Po,
                        onEdgeMouseLeave: ro,
                        reconnectRadius: pl,
                        defaultMarkerColor: Je,
                        noDragClassName: wd,
                        noWheelClassName: fc,
                        noPanClassName: tu,
                        rfId: Zr,
                        disableKeyboardA11y: Oe,
                        nodeExtent: at,
                        viewport: yt,
                        onViewportChange: Wt
                    }),
                    v.jsx(jfe, {
                        nodes: t,
                        edges: e,
                        defaultNodes: n,
                        defaultEdges: r,
                        onConnect: g,
                        onConnectStart: x,
                        onConnectEnd: S,
                        onClickConnectStart: _,
                        onClickConnectEnd: b,
                        nodesDraggable: it,
                        nodesConnectable: de,
                        nodesFocusable: ae,
                        edgesFocusable: $,
                        edgesReconnectable: H,
                        elementsSelectable: fe,
                        elevateNodesOnSelect: Cd,
                        elevateEdgesOnSelect: ce,
                        minZoom: me,
                        maxZoom: Ie,
                        nodeExtent: at,
                        onNodesChange: io,
                        onEdgesChange: Va,
                        snapToGrid: Me,
                        snapGrid: se,
                        connectionMode: Y,
                        translateExtent: Xe,
                        connectOnClick: Sd,
                        defaultEdgeOptions: Td,
                        fitView: so,
                        fitViewOptions: _d,
                        onNodesDelete: A,
                        onEdgesDelete: P,
                        onDelete: B,
                        onNodeDragStart: D,
                        onNodeDrag: L,
                        onNodeDragStop: R,
                        onSelectionDrag: K,
                        onSelectionDragStart: j,
                        onSelectionDragStop: q,
                        onMove: u,
                        onMoveStart: f,
                        onMoveEnd: p,
                        noPanClassName: tu,
                        nodeOrigin: oe,
                        rfId: Zr,
                        autoPanOnConnect: Ge,
                        autoPanOnNodeDrag: je,
                        autoPanSpeed: Le,
                        onError: Ct,
                        connectionRadius: dt,
                        isValidConnection: _t,
                        selectNodesOnDrag: Be,
                        nodeDragThreshold: Xt,
                        onBeforeDelete: Q,
                        paneClickDistance: rt,
                        debug: bn
                    }),
                    v.jsx(Ofe, {
                        onSelectionChange: U
                    }),
                    Nt,
                    v.jsx(Rfe, {
                        proOptions: Md,
                        position: Ed
                    }),
                    v.jsx(Cfe, {
                        rfId: Zr,
                        disableKeyboardA11y: Oe
                    })
                ]
            })
        });
    }
    var cpe = c$(lpe);
    const upe = (t)=>t.domNode?.querySelector(".react-flow__edgelabel-renderer");
    function dpe({ children: t }) {
        const e = Qn(upe);
        return e ? WM.createPortal(t, e) : null;
    }
    function fpe({ dimensions: t, lineWidth: e, variant: n, className: r }) {
        return v.jsx("path", {
            strokeWidth: e,
            d: `M${t[0] / 2} 0 V${t[1]} M0 ${t[1] / 2} H${t[0]}`,
            className: qi([
                "react-flow__background-pattern",
                n,
                r
            ])
        });
    }
    function hpe({ radius: t, className: e }) {
        return v.jsx("circle", {
            cx: t,
            cy: t,
            r: t,
            className: qi([
                "react-flow__background-pattern",
                "dots",
                e
            ])
        });
    }
    var id;
    (function(t) {
        t.Lines = "lines", t.Dots = "dots", t.Cross = "cross";
    })(id || (id = {}));
    const ppe = {
        [id.Dots]: 1,
        [id.Lines]: 1,
        [id.Cross]: 6
    }, mpe = (t)=>({
            transform: t.transform,
            patternId: `pattern-${t.rfId}`
        });
    function k$({ id: t, variant: e = id.Dots, gap: n = 20, size: r, lineWidth: i = 1, offset: s = 0, color: o, bgColor: a, style: l, className: c, patternClassName: u }) {
        const f = X.useRef(null), { transform: p, patternId: g } = Qn(mpe, di), x = r || ppe[e], S = e === id.Dots, _ = e === id.Cross, b = Array.isArray(n) ? n : [
            n,
            n
        ], M = [
            b[0] * p[2] || 1,
            b[1] * p[2] || 1
        ], E = x * p[2], T = Array.isArray(s) ? s : [
            s,
            s
        ], k = _ ? [
            E,
            E
        ] : M, N = [
            T[0] * p[2] || 1 + k[0] / 2,
            T[1] * p[2] || 1 + k[1] / 2
        ], D = `${g}${t || ""}`;
        return v.jsxs("svg", {
            className: qi([
                "react-flow__background",
                c
            ]),
            style: {
                ...l,
                ...LT,
                "--xy-background-color-props": a,
                "--xy-background-pattern-color-props": o
            },
            ref: f,
            "data-testid": "rf__background",
            children: [
                v.jsx("pattern", {
                    id: D,
                    x: p[0] % M[0],
                    y: p[1] % M[1],
                    width: M[0],
                    height: M[1],
                    patternUnits: "userSpaceOnUse",
                    patternTransform: `translate(-${N[0]},-${N[1]})`,
                    children: S ? v.jsx(hpe, {
                        radius: E / 2,
                        className: u
                    }) : v.jsx(fpe, {
                        dimensions: k,
                        lineWidth: i,
                        variant: e,
                        className: u
                    })
                }),
                v.jsx("rect", {
                    x: "0",
                    y: "0",
                    width: "100%",
                    height: "100%",
                    fill: `url(#${D})`
                })
            ]
        });
    }
    k$.displayName = "Background";
    const gpe = X.memo(k$);
    function ype() {
        return v.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 32 32",
            children: v.jsx("path", {
                d: "M32 18.133H18.133V32h-4.266V18.133H0v-4.266h13.867V0h4.266v13.867H32z"
            })
        });
    }
    function vpe() {
        return v.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 32 5",
            children: v.jsx("path", {
                d: "M0 0h32v4.2H0z"
            })
        });
    }
    function xpe() {
        return v.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 32 30",
            children: v.jsx("path", {
                d: "M3.692 4.63c0-.53.4-.938.939-.938h5.215V0H4.708C2.13 0 0 2.054 0 4.63v5.216h3.692V4.631zM27.354 0h-5.2v3.692h5.17c.53 0 .984.4.984.939v5.215H32V4.631A4.624 4.624 0 0027.354 0zm.954 24.83c0 .532-.4.94-.939.94h-5.215v3.768h5.215c2.577 0 4.631-2.13 4.631-4.707v-5.139h-3.692v5.139zm-23.677.94c-.531 0-.939-.4-.939-.94v-5.138H0v5.139c0 2.577 2.13 4.707 4.708 4.707h5.138V25.77H4.631z"
            })
        });
    }
    function bpe() {
        return v.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 25 32",
            children: v.jsx("path", {
                d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0 8 0 4.571 3.429 4.571 7.619v3.048H3.048A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047zm4.724-13.866H7.467V7.619c0-2.59 2.133-4.724 4.723-4.724 2.591 0 4.724 2.133 4.724 4.724v3.048z"
            })
        });
    }
    function wpe() {
        return v.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 25 32",
            children: v.jsx("path", {
                d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0c-4.114 1.828-1.37 2.133.305 2.438 1.676.305 4.42 2.59 4.42 5.181v3.048H3.047A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047z"
            })
        });
    }
    function Y_({ children: t, className: e, ...n }) {
        return v.jsx("button", {
            type: "button",
            className: qi([
                "react-flow__controls-button",
                e
            ]),
            ...n,
            children: t
        });
    }
    const _pe = (t)=>({
            isInteractive: t.nodesDraggable || t.nodesConnectable || t.elementsSelectable,
            minZoomReached: t.transform[2] <= t.minZoom,
            maxZoomReached: t.transform[2] >= t.maxZoom
        });
    function O$({ style: t, showZoom: e = !0, showFitView: n = !0, showInteractive: r = !0, fitViewOptions: i, onZoomIn: s, onZoomOut: o, onFitView: a, onInteractiveChange: l, className: c, children: u, position: f = "bottom-left", orientation: p = "vertical", "aria-label": g = "React Flow controls" }) {
        const x = Yr(), { isInteractive: S, minZoomReached: _, maxZoomReached: b } = Qn(_pe, di), { zoomIn: M, zoomOut: E, fitView: T } = lw(), k = ()=>{
            M(), s?.();
        }, N = ()=>{
            E(), o?.();
        }, D = ()=>{
            T(i), a?.();
        }, L = ()=>{
            x.setState({
                nodesDraggable: !S,
                nodesConnectable: !S,
                elementsSelectable: !S
            }), l?.(!S);
        }, R = p === "horizontal" ? "horizontal" : "vertical";
        return v.jsxs(OT, {
            className: qi([
                "react-flow__controls",
                R,
                c
            ]),
            position: f,
            style: t,
            "data-testid": "rf__controls",
            "aria-label": g,
            children: [
                e && v.jsxs(v.Fragment, {
                    children: [
                        v.jsx(Y_, {
                            onClick: k,
                            className: "react-flow__controls-zoomin",
                            title: "zoom in",
                            "aria-label": "zoom in",
                            disabled: b,
                            children: v.jsx(ype, {})
                        }),
                        v.jsx(Y_, {
                            onClick: N,
                            className: "react-flow__controls-zoomout",
                            title: "zoom out",
                            "aria-label": "zoom out",
                            disabled: _,
                            children: v.jsx(vpe, {})
                        })
                    ]
                }),
                n && v.jsx(Y_, {
                    className: "react-flow__controls-fitview",
                    onClick: D,
                    title: "fit view",
                    "aria-label": "fit view",
                    children: v.jsx(xpe, {})
                }),
                r && v.jsx(Y_, {
                    className: "react-flow__controls-interactive",
                    onClick: L,
                    title: "toggle interactivity",
                    "aria-label": "toggle interactivity",
                    children: S ? v.jsx(wpe, {}) : v.jsx(bpe, {})
                }),
                u
            ]
        });
    }
    O$.displayName = "Controls";
    const Spe = X.memo(O$);
    function Epe({ id: t, x: e, y: n, width: r, height: i, style: s, color: o, strokeColor: a, strokeWidth: l, className: c, borderRadius: u, shapeRendering: f, selected: p, onClick: g }) {
        const { background: x, backgroundColor: S } = s || {}, _ = o || x || S;
        return v.jsx("rect", {
            className: qi([
                "react-flow__minimap-node",
                {
                    selected: p
                },
                c
            ]),
            x: e,
            y: n,
            rx: u,
            ry: u,
            width: r,
            height: i,
            style: {
                fill: _,
                stroke: a,
                strokeWidth: l
            },
            shapeRendering: f,
            onClick: g ? (b)=>g(b, t) : void 0
        });
    }
    const Mpe = X.memo(Epe), Tpe = (t)=>t.nodes.map((e)=>e.id), DA = (t)=>t instanceof Function ? t : ()=>t;
    function Cpe({ nodeStrokeColor: t, nodeColor: e, nodeClassName: n = "", nodeBorderRadius: r = 5, nodeStrokeWidth: i, nodeComponent: s = Mpe, onClick: o }) {
        const a = Qn(Tpe, di), l = DA(e), c = DA(t), u = DA(n), f = typeof window > "u" || window.chrome ? "crispEdges" : "geometricPrecision";
        return v.jsx(v.Fragment, {
            children: a.map((p)=>v.jsx(Rpe, {
                    id: p,
                    nodeColorFunc: l,
                    nodeStrokeColorFunc: c,
                    nodeClassNameFunc: u,
                    nodeBorderRadius: r,
                    nodeStrokeWidth: i,
                    NodeComponent: s,
                    onClick: o,
                    shapeRendering: f
                }, p))
        });
    }
    function Ipe({ id: t, nodeColorFunc: e, nodeStrokeColorFunc: n, nodeClassNameFunc: r, nodeBorderRadius: i, nodeStrokeWidth: s, shapeRendering: o, NodeComponent: a, onClick: l }) {
        const { node: c, x: u, y: f, width: p, height: g } = Qn((x)=>{
            const S = x.nodeLookup.get(t), { x: _, y: b } = S.internals.positionAbsolute, { width: M, height: E } = bd(S);
            return {
                node: S,
                x: _,
                y: b,
                width: M,
                height: E
            };
        }, di);
        return !c || c.hidden || !UH(c) ? null : v.jsx(a, {
            x: u,
            y: f,
            width: p,
            height: g,
            style: c.style,
            selected: !!c.selected,
            className: r(c),
            color: e(c),
            borderRadius: i,
            strokeColor: n(c),
            strokeWidth: s,
            shapeRendering: o,
            onClick: l,
            id: c.id
        });
    }
    const Rpe = X.memo(Ipe);
    var Ape = X.memo(Cpe);
    const Npe = 200, Ppe = 150, kpe = (t)=>{
        const e = {
            x: -t.transform[0] / t.transform[2],
            y: -t.transform[1] / t.transform[2],
            width: t.width / t.transform[2],
            height: t.height / t.transform[2]
        };
        return {
            viewBB: e,
            boundingRect: t.nodeLookup.size > 0 ? jH(ow(t.nodeLookup), e) : e,
            rfId: t.rfId,
            panZoom: t.panZoom,
            translateExtent: t.translateExtent,
            flowWidth: t.width,
            flowHeight: t.height
        };
    }, Ope = "react-flow__minimap-desc";
    function L$({ style: t, className: e, nodeStrokeColor: n, nodeColor: r, nodeClassName: i = "", nodeBorderRadius: s = 5, nodeStrokeWidth: o, nodeComponent: a, bgColor: l, maskColor: c, maskStrokeColor: u, maskStrokeWidth: f, position: p = "bottom-right", onClick: g, onNodeClick: x, pannable: S = !1, zoomable: _ = !1, ariaLabel: b = "React Flow mini map", inversePan: M, zoomStep: E = 10, offsetScale: T = 5 }) {
        const k = Yr(), N = X.useRef(null), { boundingRect: D, viewBB: L, rfId: R, panZoom: A, translateExtent: P, flowWidth: B, flowHeight: U } = Qn(kpe, di), j = t?.width ?? Npe, K = t?.height ?? Ppe, q = D.width / j, te = D.height / K, W = Math.max(q, te), J = W * j, Q = W * K, Y = T * W, le = D.x - (J - D.width) / 2 - Y, ue = D.y - (Q - D.height) / 2 - Y, ie = J + Y * 2, he = Q + Y * 2, ge = `${Ope}-${R}`, ve = X.useRef(0), Ee = X.useRef();
        ve.current = W, X.useEffect(()=>{
            if (N.current && A) return Ee.current = efe({
                domNode: N.current,
                panZoom: A,
                getTransform: ()=>k.getState().transform,
                getViewScale: ()=>ve.current
            }), ()=>{
                Ee.current?.destroy();
            };
        }, [
            A
        ]), X.useEffect(()=>{
            Ee.current?.update({
                translateExtent: P,
                width: B,
                height: U,
                inversePan: M,
                pannable: S,
                zoomStep: E,
                zoomable: _
            });
        }, [
            S,
            _,
            M,
            E,
            P,
            B,
            U
        ]);
        const Ce = g ? (Ve)=>{
            const [we, Me] = Ee.current?.pointer(Ve) || [
                0,
                0
            ];
            g(Ve, {
                x: we,
                y: Me
            });
        } : void 0, Ne = x ? X.useCallback((Ve, we)=>{
            const Me = k.getState().nodeLookup.get(we);
            x(Ve, Me);
        }, []) : void 0;
        return v.jsx(OT, {
            position: p,
            style: {
                ...t,
                "--xy-minimap-background-color-props": typeof l == "string" ? l : void 0,
                "--xy-minimap-mask-background-color-props": typeof c == "string" ? c : void 0,
                "--xy-minimap-mask-stroke-color-props": typeof u == "string" ? u : void 0,
                "--xy-minimap-mask-stroke-width-props": typeof f == "number" ? f * W : void 0,
                "--xy-minimap-node-background-color-props": typeof r == "string" ? r : void 0,
                "--xy-minimap-node-stroke-color-props": typeof n == "string" ? n : void 0,
                "--xy-minimap-node-stroke-width-props": typeof o == "string" ? o : void 0
            },
            className: qi([
                "react-flow__minimap",
                e
            ]),
            "data-testid": "rf__minimap",
            children: v.jsxs("svg", {
                width: j,
                height: K,
                viewBox: `${le} ${ue} ${ie} ${he}`,
                className: "react-flow__minimap-svg",
                role: "img",
                "aria-labelledby": ge,
                ref: N,
                onClick: Ce,
                children: [
                    b && v.jsx("title", {
                        id: ge,
                        children: b
                    }),
                    v.jsx(Ape, {
                        onClick: Ne,
                        nodeColor: r,
                        nodeStrokeColor: n,
                        nodeBorderRadius: s,
                        nodeClassName: i,
                        nodeStrokeWidth: o,
                        nodeComponent: a
                    }),
                    v.jsx("path", {
                        className: "react-flow__minimap-mask",
                        d: `M${le - Y},${ue - Y}h${ie + Y * 2}v${he + Y * 2}h${-ie - Y * 2}z
        M${L.x},${L.y}h${L.width}v${L.height}h${-L.width}z`,
                        fillRule: "evenodd",
                        pointerEvents: "none"
                    })
                ]
            })
        });
    }
    L$.displayName = "MiniMap";
    const Lpe = X.memo(L$);
    function Dpe({ nodeId: t, position: e, variant: n = _0.Handle, className: r, style: i = {}, children: s, color: o, minWidth: a = 10, minHeight: l = 10, maxWidth: c = Number.MAX_VALUE, maxHeight: u = Number.MAX_VALUE, keepAspectRatio: f = !1, shouldResize: p, onResizeStart: g, onResize: x, onResizeEnd: S }) {
        const _ = h$(), b = typeof t == "string" ? t : _, M = Yr(), E = X.useRef(null), T = n === _0.Line ? "right" : "bottom-right", k = e ?? T, N = X.useRef(null);
        X.useEffect(()=>{
            if (!(!E.current || !b)) return N.current || (N.current = mfe({
                domNode: E.current,
                nodeId: b,
                getStoreItems: ()=>{
                    const { nodeLookup: A, transform: P, snapGrid: B, snapToGrid: U, nodeOrigin: j, domNode: K } = M.getState();
                    return {
                        nodeLookup: A,
                        transform: P,
                        snapGrid: B,
                        snapToGrid: U,
                        nodeOrigin: j,
                        paneDomNode: K
                    };
                },
                onChange: (A, P)=>{
                    const { triggerNodeChanges: B, nodeLookup: U, parentLookup: j, nodeOrigin: K } = M.getState(), q = [], te = {
                        x: A.x,
                        y: A.y
                    }, W = U.get(b);
                    if (W && W.expandParent && W.parentId) {
                        const J = W.origin ?? K, Q = A.width ?? W.measured.width, Y = A.height ?? W.measured.height, le = {
                            id: W.id,
                            parentId: W.parentId,
                            rect: {
                                width: Q,
                                height: Y,
                                ...zH({
                                    x: A.x ?? W.position.x,
                                    y: A.y ?? W.position.y
                                }, {
                                    width: Q,
                                    height: Y
                                }, W.parentId, U, J)
                            }
                        }, ue = JO([
                            le
                        ], U, j, K);
                        q.push(...ue), te.x = A.x ? Math.max(J[0] * Q, A.x) : void 0, te.y = A.y ? Math.max(J[1] * Y, A.y) : void 0;
                    }
                    if (te.x !== void 0 && te.y !== void 0) {
                        const J = {
                            id: b,
                            type: "position",
                            position: {
                                ...te
                            }
                        };
                        q.push(J);
                    }
                    if (A.width !== void 0 && A.height !== void 0) {
                        const J = {
                            id: b,
                            type: "dimensions",
                            resizing: !0,
                            setAttributes: !0,
                            dimensions: {
                                width: A.width,
                                height: A.height
                            }
                        };
                        q.push(J);
                    }
                    for (const J of P){
                        const Q = {
                            ...J,
                            type: "position"
                        };
                        q.push(Q);
                    }
                    B(q);
                },
                onEnd: ()=>{
                    const A = {
                        id: b,
                        type: "dimensions",
                        resizing: !1
                    };
                    M.getState().triggerNodeChanges([
                        A
                    ]);
                }
            })), N.current.update({
                controlPosition: k,
                boundaries: {
                    minWidth: a,
                    minHeight: l,
                    maxWidth: c,
                    maxHeight: u
                },
                keepAspectRatio: f,
                onResizeStart: g,
                onResize: x,
                onResizeEnd: S,
                shouldResize: p
            }), ()=>{
                N.current?.destroy();
            };
        }, [
            k,
            a,
            l,
            c,
            u,
            f,
            g,
            x,
            S,
            p
        ]);
        const D = k.split("-"), L = n === _0.Line ? "borderColor" : "backgroundColor", R = o ? {
            ...i,
            [L]: o
        } : i;
        return v.jsx("div", {
            className: qi([
                "react-flow__resize-control",
                "nodrag",
                ...D,
                n,
                r
            ]),
            ref: E,
            style: R,
            children: s
        });
    }
    X.memo(Dpe);
    const ar = "icon-[solar--home-outline]", e2 = sae({
        shape: G.object({
            name: G.string().min(1),
            probability: Bc(),
            limit: Bc(),
            image: G.instanceof(FileList, {
                message: "You must upload a file."
            }).transform((t)=>t[0]).refine((t)=>(t && t.size < 5 * 1024 * 1024, !0), {
                message: sa.text("File size must be less than 5MB")
            }).refine((t)=>t ? [
                    "image/png",
                    "image/jpeg",
                    "image/webp"
                ].includes(t.type) : !0, {
                message: "Only PNG/JPEG/WEBP files are allowed."
            }).optional()
        }),
        filter: Qs
    }), fU = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(e2.shape),
            defaultValues: {
                name: "",
                limit: 32,
                probability: 100,
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "name",
                    label: v.jsx(ne, {
                        label: "Region name (label)"
                    }),
                    children: v.jsx("input", {
                        type: "text",
                        className: o.input(),
                        ...s.register("name")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "image",
                    label: v.jsx(ne, {
                        label: "Region image (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Region image (hint)"
                    }),
                    children: v.jsx("input", {
                        type: "file",
                        className: o.input(),
                        ...s.register("image")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "probability",
                    label: v.jsx(ne, {
                        label: "Region spawn probability (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Region spawn probability (hint)"
                    }),
                    required: !0,
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        min: .5,
                        max: 100,
                        step: .5,
                        ...s.register("probability")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "limit",
                    label: v.jsx(ne, {
                        label: "Region limit (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Region limit (hint)"
                    }),
                    required: !0,
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        min: 1,
                        step: 1,
                        ...s.register("limit")
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: Hq,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, Zy = async (t)=>new Promise((e, n)=>{
            const r = new Image;
            r.src = URL.createObjectURL(t), r.onload = ()=>{
                const i = document.createElement("canvas");
                i.width = r.width, i.height = r.height;
                const s = i.getContext("2d");
                if (s) return s.drawImage(r, 0, 0), e(i.toDataURL("image/webp", 1));
                n(new Error("Failed to convert image to WebP-64"));
            }, r.onerror = ()=>{
                n(new Error("Failed to load image"));
            };
        }), FA = vi(), Fpe = [
        FA({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Region name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsx(Rt, {
                    to: "/$locale/apps/derivean/root/region/$id/view",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: e
                });
            },
            size: 18
        }),
        FA({
            name: "probability",
            header () {
                return v.jsx(ne, {
                    label: "Region probability (label)"
                });
            },
            render ({ value: t }) {
                return v.jsxs(Gs, {
                    children: [
                        Vn({
                            number: t
                        }),
                        "%"
                    ]
                });
            },
            size: 14
        }),
        FA({
            name: "limit",
            header () {
                return v.jsx(ne, {
                    label: "Region limit (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 18
        })
    ], D$ = ({ table: t, ...e })=>{
        const n = kr([
            [
                "Region"
            ]
        ]);
        return v.jsx(gi, {
            table: yi({
                ...t,
                columns: Fpe
            }),
            action: {
                table () {
                    return v.jsx(Or, {
                        children: v.jsx(Wn, {
                            label: v.jsx(ne, {
                                label: "Create region (menu)"
                            }),
                            textTitle: v.jsx(ne, {
                                label: "Create region (modal)"
                            }),
                            icon: kE,
                            children: ({ close: r })=>v.jsx(fU, {
                                    mutation: an({
                                        async mutationFn ({ image: i, ...s }) {
                                            return At.transaction().execute(async (o)=>o.insertInto("Region").values({
                                                    id: Kn(),
                                                    ...s,
                                                    image: i ? await Zy(i) : null
                                                }).execute());
                                        },
                                        async onSuccess () {
                                            await n(), r();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: r }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit region (modal)"
                                }),
                                icon: kE,
                                children: ({ close: i })=>v.jsx(fU, {
                                        defaultValues: r,
                                        mutation: an({
                                            async mutationFn ({ image: s, ...o }) {
                                                return At.transaction().execute(async (a)=>a.updateTable("Region").set({
                                                        ...o,
                                                        image: s ? await Zy(s) : null
                                                    }).where("id", "=", r.id).execute());
                                            },
                                            async onSuccess () {
                                                await n(), i();
                                            }
                                        })
                                    })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete region (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>At.transaction().execute(async (i)=>i.deleteFrom("Region").where("id", "=", r.id).execute()),
                                    textContent: v.jsx(ne, {
                                        label: "Delete region (content)"
                                    }),
                                    textToast: "Delete region",
                                    invalidator: n
                                })
                            })
                        ]
                    });
                }
            },
            ...e
        });
    }, jpe = (t)=>v.jsx(fq, {
            icon: kE,
            table: D$,
            textTitle: v.jsx(ne, {
                label: "Select regions (title)"
            }),
            render: ({ entities: e })=>v.jsx(Jf, {
                    items: e,
                    css: {
                        base: [
                            "flex",
                            "flex-row",
                            "gap-2"
                        ]
                    },
                    render: ({ entity: n })=>v.jsx("div", {
                            className: dn([
                                "p-2",
                                "border",
                                "border-blue-300",
                                "bg-blue-50",
                                "rounded-sm"
                            ]),
                            children: n.name
                        })
                }),
            queryKey: "Region",
            query: async ({ filter: e, cursor: n })=>At.transaction().execute(async (r)=>Dr({
                        select: r.selectFrom("Region as r").selectAll(),
                        output: e2.entity,
                        query ({ select: i, where: s }) {
                            let o = i;
                            if (s?.id && (o = o.where("r.id", "=", s.id)), s?.idIn && (o = o.where("r.id", "in", s.idIn)), s?.fulltext) {
                                const a = `%${s.fulltext}%`.toLowerCase();
                                o = o.where((l)=>l.or([
                                        l("r.id", "like", a),
                                        l("r.name", "like", a)
                                    ]));
                            }
                            return o;
                        },
                        filter: e,
                        cursor: n
                    })),
            ...t
        }), t2 = Goe({
        shape: G.object({
            name: G.string().min(1),
            cycles: Bc(),
            sort: Bc(),
            limit: Bc(),
            regionIds: G.array(G.string()).optional(),
            image: G.instanceof(FileList, {
                message: "You must upload a file."
            }).transform((t)=>t[0]).refine((t)=>(t && t.size < 5 * 1024 * 1024, !0), {
                message: sa.text("File size must be less than 5MB")
            }).refine((t)=>t ? [
                    "image/png",
                    "image/jpeg",
                    "image/webp"
                ].includes(t.type) : !0, {
                message: "Only PNG/JPEG/WEBP files are allowed."
            }).optional()
        }),
        filter: Qs.merge(G.object({
            name: G.string().optional()
        }))
    }), YE = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(t2.shape),
            defaultValues: {
                cycles: 1,
                sort: 0,
                limit: 1,
                regionIds: [],
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "name",
                    label: v.jsx(ne, {
                        label: "Building name (label)"
                    }),
                    required: !0,
                    children: v.jsx("input", {
                        type: "text",
                        className: o.input(),
                        ...s.register("name")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "cycles",
                    label: v.jsx(ne, {
                        label: "Construction cycles (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Amount of cycles to build this building (hint)"
                    }),
                    required: !0,
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        min: 1,
                        ...s.register("cycles")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "limit",
                    label: v.jsx(ne, {
                        label: "Building limit (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Maximum number of building a player can build (hint)"
                    }),
                    required: !0,
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        min: 1,
                        ...s.register("limit")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "sort",
                    label: v.jsx(ne, {
                        label: "Blueprint sort (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Sort blueprints by this number (hint)"
                    }),
                    required: !0,
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        min: 0,
                        ...s.register("sort")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "regionIds",
                    label: v.jsx(ne, {
                        label: "Regions (label)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "regionIds",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(jpe, {
                                ...l
                            })
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "image",
                    label: v.jsx(ne, {
                        label: "Building image (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Building image (hint)"
                    }),
                    children: v.jsx("input", {
                        type: "file",
                        className: o.input(),
                        ...s.register("image")
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: ar,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, ul = "icon-[fluent-mdl2--production-floor-management]", Bpe = ({ id: t, data: e, isConnectable: n })=>{
        const { locale: r } = tn({
            from: "/$locale"
        }), i = dm();
        return v.jsxs("div", {
            className: "min-w-[14rem]",
            onClick: ()=>{
                i({
                    to: "/$locale/apps/derivean/root/editor",
                    params: {
                        locale: r
                    },
                    search: {
                        zoomTo: t
                    }
                });
            },
            onDoubleClick: ()=>{
                i({
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: r,
                        id: t
                    }
                });
            },
            children: [
                v.jsx(Yy, {
                    type: "target",
                    position: Qt.Left,
                    className: "w-4 h-4"
                }),
                v.jsxs("div", {
                    className: "flex flex-col gap-2 items-start",
                    children: [
                        v.jsx("div", {
                            className: "flex flex-row items-center gap-2",
                            onClick: (s)=>s.stopPropagation(),
                            onDoubleClick: (s)=>s.stopPropagation(),
                            onMouseDown: (s)=>s.stopPropagation(),
                            children: v.jsx(Rt, {
                                icon: ar,
                                to: "/$locale/apps/derivean/root/blueprint/$id/view",
                                params: {
                                    locale: r,
                                    id: t
                                },
                                children: e.name
                            })
                        }),
                        v.jsxs("div", {
                            className: "flex flex-row items-center justify-between gap-2 border bg-slate-50 border-slate-200 rounded-sm w-full p-1",
                            onClick: (s)=>s.stopPropagation(),
                            onDoubleClick: (s)=>s.stopPropagation(),
                            onMouseDown: (s)=>s.stopPropagation(),
                            children: [
                                v.jsxs("div", {
                                    className: "flex flex-row gap-2",
                                    children: [
                                        v.jsx(Rt, {
                                            icon: Kr,
                                            to: "/$locale/apps/derivean/root/blueprint/$id/requirements",
                                            params: {
                                                locale: r,
                                                id: t
                                            }
                                        }),
                                        v.jsx(Rt, {
                                            icon: ul,
                                            to: "/$locale/apps/derivean/root/blueprint/$id/production",
                                            params: {
                                                locale: r,
                                                id: t
                                            }
                                        }),
                                        v.jsx(Rt, {
                                            icon: G5,
                                            to: "/$locale/apps/derivean/root/blueprint/$id/edit",
                                            params: {
                                                locale: r,
                                                id: t
                                            }
                                        })
                                    ]
                                }),
                                v.jsx("div", {
                                    children: v.jsx(pm, {
                                        target: v.jsx(ew, {
                                            iconEnabled: Ri,
                                            css: {
                                                base: [
                                                    "text-red-500"
                                                ]
                                            }
                                        }),
                                        outside: !0,
                                        textTitle: v.jsx(ne, {
                                            label: "Delete blueprint (modal)"
                                        }),
                                        css: {
                                            modal: [
                                                "w-1/3"
                                            ]
                                        },
                                        children: ()=>{
                                            const s = kr([
                                                [
                                                    "Editor"
                                                ]
                                            ]);
                                            return v.jsx(la, {
                                                callback: async ()=>At.transaction().execute(async (o)=>o.deleteFrom("Blueprint").where("id", "=", e.id).execute()),
                                                textContent: v.jsx(ne, {
                                                    label: "Delete blueprint (content)"
                                                }),
                                                textToast: "Delete blueprint",
                                                invalidator: s
                                            });
                                        }
                                    })
                                })
                            ]
                        })
                    ]
                }),
                v.jsx(Yy, {
                    type: "source",
                    position: Qt.Right,
                    isConnectable: n,
                    className: "w-4 h-4"
                })
            ]
        });
    }, Upe = ({ nodeId: t })=>{
        const { fitView: e } = lw();
        return X.useEffect(()=>{
            t && setTimeout(()=>{
                e({
                    nodes: [
                        {
                            id: t
                        }
                    ],
                    duration: 750,
                    minZoom: 1,
                    maxZoom: 1
                });
            }, 50);
        }, [
            t
        ]), null;
    }, zpe = ({ data: t, zoomTo: e })=>{
        const n = kr([]), r = an({
            async mutationFn ({ blueprintId: i, dependencyId: s }) {
                return At.transaction().execute(async (o)=>o.insertInto("Blueprint_Dependency").values({
                        id: Kn(),
                        blueprintId: i,
                        dependencyId: s
                    }).execute());
            },
            async onSuccess () {
                await n();
            }
        });
        return v.jsx("div", {
            className: "w-fit h-fit mx-auto border border-slate-300 rounded-md shadow-md m-8",
            children: v.jsx("div", {
                style: {
                    width: "95vw",
                    height: "85vh"
                },
                children: v.jsxs(cpe, {
                    nodes: t.nodes,
                    edges: t.edges,
                    onConnect: (i)=>{
                        r.mutate({
                            blueprintId: i.target,
                            dependencyId: i.source
                        });
                    },
                    fitView: !0,
                    snapGrid: [
                        16,
                        16
                    ],
                    elementsSelectable: !1,
                    nodeTypes: X.useMemo(()=>({
                            blueprint (i) {
                                return v.jsx(Bpe, {
                                    ...i
                                });
                            }
                        }), []),
                    edgeTypes: X.useMemo(()=>({
                            dependency ({ id: i, sourceX: s, sourceY: o, targetX: a, targetY: l, sourcePosition: c, targetPosition: u, style: f = {}, markerEnd: p }) {
                                const { setEdges: g } = lw(), [x, S, _] = XO({
                                    sourceX: s,
                                    sourceY: o,
                                    sourcePosition: c,
                                    targetX: a,
                                    targetY: l,
                                    targetPosition: u
                                }), b = kr([]), M = an({
                                    async mutationFn ({ id: E }) {
                                        return At.transaction().execute(async (T)=>{
                                            await T.deleteFrom("Blueprint_Dependency").where("id", "=", E).execute();
                                        });
                                    },
                                    async onSuccess () {
                                        g((E)=>E.filter((T)=>T.id !== i)), await b();
                                    }
                                });
                                return v.jsxs(v.Fragment, {
                                    children: [
                                        v.jsx(cw, {
                                            path: x,
                                            markerEnd: p,
                                            style: f
                                        }),
                                        v.jsx(dpe, {
                                            children: v.jsx("div", {
                                                className: dn("nodrag nopan", [
                                                    "flex",
                                                    "items-center",
                                                    "justify-center",
                                                    "cursor-pointer",
                                                    "bg-red-200",
                                                    "text-red-500",
                                                    "border",
                                                    "border-red-300",
                                                    "hover:border-red-600",
                                                    "hover:bg-red-300",
                                                    "hover:text-red-700",
                                                    "rounded-full",
                                                    "w-4",
                                                    "h-4",
                                                    "z-20"
                                                ]),
                                                style: {
                                                    position: "absolute",
                                                    pointerEvents: "all",
                                                    transformOrigin: "center",
                                                    transform: `translate(-50%, -50%) translate(${S}px,${_}px)`
                                                },
                                                children: v.jsx(vn, {
                                                    icon: M.isPending ? IO : MO,
                                                    onClick: ()=>{
                                                        M.mutate({
                                                            id: i
                                                        });
                                                    }
                                                })
                                            })
                                        })
                                    ]
                                });
                            }
                        }), []),
                    children: [
                        v.jsx(Upe, {
                            nodeId: e
                        }),
                        v.jsx(Spe, {
                            orientation: "horizontal",
                            showInteractive: !1,
                            showZoom: !1,
                            children: v.jsx(pm, {
                                target: v.jsx(ew, {
                                    className: "react-flow__controls-button",
                                    iconEnabled: ar
                                }),
                                outside: !1,
                                textTitle: v.jsx(ne, {
                                    label: "Create blueprint (modal)"
                                }),
                                css: {
                                    modal: [
                                        "w-1/3"
                                    ]
                                },
                                children: ({ close: i })=>{
                                    const s = kr([
                                        [
                                            "Editor"
                                        ]
                                    ]), { locale: o } = tn({
                                        from: "/$locale"
                                    }), a = dm();
                                    return v.jsx(YE, {
                                        mutation: an({
                                            async mutationFn ({ image: l, regionIds: c, ...u }) {
                                                return At.transaction().execute(async (f)=>{
                                                    const p = await f.insertInto("Blueprint").values({
                                                        id: Kn(),
                                                        ...u,
                                                        image: l ? await YW(l) : null
                                                    }).returningAll().executeTakeFirstOrThrow();
                                                    return c?.length && await f.insertInto("Blueprint_Region").values(c.map((g)=>({
                                                            id: Kn(),
                                                            blueprintId: p.id,
                                                            regionId: g
                                                        }))).execute(), p;
                                                });
                                            },
                                            async onSuccess (l) {
                                                await s(), a({
                                                    to: "/$locale/apps/derivean/root/editor",
                                                    params: {
                                                        locale: o
                                                    },
                                                    search: {
                                                        zoomTo: l.id
                                                    }
                                                }), i();
                                            }
                                        })
                                    });
                                }
                            })
                        }),
                        v.jsx(Lpe, {}),
                        v.jsx(gpe, {
                            variant: id.Dots,
                            gap: 12,
                            size: 1
                        })
                    ]
                })
            })
        });
    }, Vpe = ({ graph: t, nodes: e, edges: n, size: r = {
        width: 344,
        height: 36
    } })=>(t.setGraph({
            rankdir: "LR",
            nodesep: 125,
            edgesep: 65,
            ranksep: 50
        }), e.forEach((i)=>{
            t.setNode(i.id, {
                width: r.width,
                height: r.height
            });
        }), n.forEach((i)=>{
            t.setEdge(i.source, i.target);
        }), Qq.layout(t, {}), {
            nodes: e.map((i)=>{
                const s = t.node(i.id);
                return {
                    ...i,
                    targetPosition: "left",
                    sourcePosition: "right",
                    position: {
                        x: s.x - r.width / 2,
                        y: s.y - r.height / 2
                    }
                };
            }),
            edges: n
        }), sk = jt("/$locale/apps/derivean/root/editor")({
        validateSearch: Vr(G.object({
            zoomTo: G.string().optional()
        })),
        async loader ({ context: { kysely: t } }) {
            const e = (await t.selectFrom("Blueprint").select([
                "id",
                "name",
                "cycles",
                "sort"
            ]).execute()).map((r)=>({
                    id: r.id,
                    position: {
                        x: 0,
                        y: 0
                    },
                    data: r,
                    type: "blueprint"
                })), n = (await t.selectFrom("Blueprint_Dependency").select([
                "id",
                "blueprintId",
                "dependencyId"
            ]).execute()).map(({ id: r, blueprintId: i, dependencyId: s })=>({
                    id: r,
                    source: s,
                    target: i,
                    type: "dependency"
                }));
            return Vpe({
                graph: new Qq.graphlib.Graph().setDefaultEdgeLabel(()=>({})),
                nodes: [
                    ...e
                ],
                edges: [
                    ...n
                ]
            });
        },
        component () {
            const t = sk.useLoaderData(), { zoomTo: e } = sk.useSearch();
            return v.jsx(zpe, {
                data: t,
                zoomTo: e
            });
        }
    }), Wpe = ()=>an({
            mutationKey: [
                "useRegisterMutation"
            ],
            async mutationFn ({ login: t, name: e, password1: n }) {
                return At.transaction().execute(async (r)=>tw.parse(await r.insertInto("User").values({
                        id: Kn(),
                        name: e,
                        login: t,
                        password: DW.hash(n)
                    }).returning([
                        "User.id",
                        "User.name",
                        "User.login"
                    ]).executeTakeFirstOrThrow()));
            }
        }), qpe = G.object({
        name: G.string().min(1),
        login: G.string().min(1),
        password1: G.string().min(1),
        password2: G.string().min(1)
    }).refine((t)=>t.password1 === t.password2, {
        message: "Passwords must match",
        path: [
            "password1"
        ]
    }), Hpe = ({ onSuccess: t })=>{
        const e = Wpe(), n = hs({
            resolver: ps(qpe)
        }), r = fs({
            isLoading: n.formState.isLoading,
            isSubmitting: n.formState.isSubmitting
        }).slots;
        return v.jsxs("form", {
            className: r.base(),
            onSubmit: n.handleSubmit(async (i)=>e.mutateAsync(i, {
                    onSuccess: t,
                    onError: (s)=>{
                        lO({
                            error: s,
                            errors: [
                                Uk({
                                    error: s,
                                    schema: aO,
                                    onError: ({ data: o })=>{
                                        n.setError("root", {
                                            message: o.message
                                        });
                                    }
                                })
                            ],
                            onError: (o)=>{
                                n.setError("root", {
                                    message: o.message
                                });
                            }
                        });
                    }
                }).catch(()=>{})),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: n.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: n.formState,
                    name: "name",
                    label: v.jsx(ne, {
                        label: "Name (label)"
                    }),
                    children: v.jsx("input", {
                        type: "text",
                        className: r.input(),
                        ...n.register("name")
                    })
                }),
                v.jsx(yn, {
                    formState: n.formState,
                    name: "login",
                    label: v.jsx(ne, {
                        label: "Login (label)"
                    }),
                    children: v.jsx("input", {
                        type: "text",
                        className: r.input(),
                        ...n.register("login")
                    })
                }),
                v.jsx(yn, {
                    formState: n.formState,
                    name: "password1",
                    label: v.jsx(ne, {
                        label: "Password 1 (label)"
                    }),
                    children: v.jsx("input", {
                        type: "password",
                        className: r.input(),
                        ...n.register("password1")
                    })
                }),
                v.jsx(yn, {
                    formState: n.formState,
                    name: "password2",
                    label: v.jsx(ne, {
                        label: "Password 2 (label)"
                    }),
                    children: v.jsx("input", {
                        type: "password",
                        className: r.input(),
                        ...n.register("password2")
                    })
                }),
                v.jsx(Dn, {
                    iconEnabled: "icon-[mdi--register-outline]",
                    iconDisabled: "icon-[mdi--register-outline]",
                    type: "submit",
                    children: v.jsx(ne, {
                        label: "Register (submit)"
                    })
                })
            ]
        });
    }, $pe = jt("/$locale/apps/derivean/public/register")({
        component: ()=>{
            const t = dm();
            return v.jsx("div", {
                className: dn([
                    "flex",
                    "justify-center",
                    "h-screen",
                    "bg-linear-to-tr",
                    "from-blue-700",
                    "to-blue-400"
                ]),
                children: v.jsxs("div", {
                    className: "flex flex-col bg-slate-100 p-20 w-1/2 m-10 drop-shadow-xl",
                    children: [
                        v.jsx("hr", {
                            className: "my-12 h-0.5 border-t-0 bg-slate-300"
                        }),
                        v.jsx(Hpe, {
                            onSuccess: async (e)=>{
                                hv.set("session", e), await t({
                                    to: "/$locale/apps/derivean/game"
                                });
                            }
                        })
                    ]
                })
            });
        }
    }), Gpe = jt("/$locale/apps/derivean/public/logout")({
        pendingComponent () {
            return v.jsx("div", {
                className: dn([
                    "flex items-center justify-center h-screen",
                    "bg-linear-to-tr",
                    "from-blue-700",
                    "to-blue-400"
                ]),
                children: v.jsx(pq, {
                    icon: RO,
                    textTitle: v.jsx(ne, {
                        label: "Logout (label)"
                    }),
                    textMessage: v.jsx(ne, {
                        label: "Logout in progress..."
                    }),
                    css: {
                        base: [
                            "p-4",
                            "bg-slate-200",
                            "rounded-sm"
                        ]
                    }
                })
            });
        },
        async loader ({ params: { locale: t } }) {
            throw hv.remove("session"), Db({
                to: "/$locale/apps/derivean/public/login",
                params: {
                    locale: t
                }
            });
        }
    }), Xpe = ()=>an({
            mutationKey: [
                "useLoginMutation"
            ],
            async mutationFn ({ login: t, password: e }) {
                return At.transaction().execute(async (n)=>{
                    const r = await n.selectFrom("User as u").select([
                        "u.id",
                        "u.login",
                        "u.name"
                    ]).where("u.login", "=", t).where("u.password", "=", DW.hash(e)).executeTakeFirstOrThrow();
                    return {
                        id: r.id,
                        login: r.login,
                        name: r.name
                    };
                });
            }
        }), Kpe = G.object({
        login: G.string().min(1),
        password: G.string().min(1)
    }), Ype = ({ onSuccess: t })=>{
        const { locale: e } = tn({
            from: "/$locale"
        }), n = Xpe(), r = hs({
            resolver: ps(Kpe)
        }), i = fs({
            isLoading: r.formState.isLoading,
            isSubmitting: r.formState.isSubmitting
        }).slots;
        return v.jsxs("form", {
            className: i.base(),
            onSubmit: r.handleSubmit(async (s)=>n.mutateAsync(s, {
                    onSuccess: t,
                    onError: (o)=>{
                        lO({
                            error: o,
                            errors: [
                                Uk({
                                    error: o,
                                    schema: aO,
                                    onError: ({ data: a })=>{
                                        r.setError("root", {
                                            message: a.message
                                        });
                                    }
                                })
                            ],
                            onError: (a)=>{
                                r.setError("root", {
                                    message: a.message
                                });
                            }
                        });
                    }
                }).catch(()=>{})),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: r.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: r.formState,
                    name: "login",
                    label: v.jsx(ne, {
                        label: "Login (label)"
                    }),
                    children: v.jsx("input", {
                        type: "text",
                        className: i.input(),
                        ...r.register("login")
                    })
                }),
                v.jsx(yn, {
                    formState: r.formState,
                    name: "password",
                    label: v.jsx(ne, {
                        label: "Password (label)"
                    }),
                    children: v.jsx("input", {
                        type: "password",
                        className: i.input(),
                        ...r.register("password")
                    })
                }),
                v.jsxs("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: [
                        v.jsx(Rt, {
                            icon: "icon-[mdi--register-outline]",
                            to: "/$locale/apps/derivean/public/register",
                            params: {
                                locale: e
                            },
                            children: v.jsx(ne, {
                                label: "Register (link)"
                            })
                        }),
                        v.jsx(Dn, {
                            iconEnabled: "icon-[uiw--login]",
                            iconDisabled: "icon-[uiw--login]",
                            type: "submit",
                            children: v.jsx(ne, {
                                label: "Login (submit)"
                            })
                        })
                    ]
                })
            ]
        });
    }, Zpe = jt("/$locale/apps/derivean/public/login")({
        component: ()=>{
            const t = dm();
            return v.jsx("div", {
                className: dn([
                    "flex",
                    "justify-center",
                    "h-screen",
                    "bg-linear-to-tr",
                    "from-blue-700",
                    "to-blue-400"
                ]),
                children: v.jsxs("div", {
                    className: "flex flex-col bg-slate-100 p-20 w-1/2 m-10 drop-shadow-xl",
                    children: [
                        v.jsx("hr", {
                            className: "my-12 h-0.5 border-t-0 bg-slate-300"
                        }),
                        v.jsx(Ype, {
                            onSuccess: async (e)=>{
                                hv.set("session", e), await t({
                                    to: "/$locale/apps/derivean/game"
                                });
                            }
                        })
                    ]
                })
            });
        }
    }), F$ = 16, j$ = 256, Jpe = j$ * F$, B$ = {
        plotSize: F$,
        plotCount: j$,
        chunkSize: Jpe,
        colorMap: [
            {
                level: -1,
                color: "#000022"
            },
            {
                level: -.95,
                color: "#000044"
            },
            {
                level: -.9,
                color: "#001f7f"
            },
            {
                level: -.85,
                color: "#002b9f"
            },
            {
                level: -.8,
                color: "#0037bf"
            },
            {
                level: -.75,
                color: "#0043df"
            },
            {
                level: -.7,
                color: "#0050ff"
            },
            {
                level: -.65,
                color: "#0062ff"
            },
            {
                level: -.6,
                color: "#0074ff"
            },
            {
                level: -.55,
                color: "#0086ff"
            },
            {
                level: -.5,
                color: "#0098ff"
            },
            {
                level: -.45,
                color: "#00aaff"
            },
            {
                level: -.4,
                color: "#11ccff"
            },
            {
                level: -.35,
                color: "#33ddff"
            },
            {
                level: -.3,
                color: "#55eeff"
            },
            {
                level: -.25,
                color: "#77ffff"
            },
            {
                level: -.2,
                color: "#ccdd77"
            },
            {
                level: -.15,
                color: "#eedd66"
            },
            {
                level: -.1,
                color: "#ffcc44"
            },
            {
                level: -.05,
                color: "#ffaa22"
            },
            {
                level: 0,
                color: "#44dd44"
            },
            {
                level: .05,
                color: "#33cc33"
            },
            {
                level: .1,
                color: "#22bb22"
            },
            {
                level: .15,
                color: "#22aa22"
            },
            {
                level: .2,
                color: "#119911"
            },
            {
                level: .25,
                color: "#008800"
            },
            {
                level: .3,
                color: "#007700"
            },
            {
                level: .35,
                color: "#006600"
            },
            {
                level: .4,
                color: "#005500"
            },
            {
                level: .45,
                color: "#004c00"
            },
            {
                level: .5,
                color: "#004400"
            },
            {
                level: .55,
                color: "#003b00"
            },
            {
                level: .6,
                color: "#003300"
            },
            {
                level: .65,
                color: "#778822"
            },
            {
                level: .7,
                color: "#889933"
            },
            {
                level: .75,
                color: "#99aa22"
            },
            {
                level: .8,
                color: "#aaa833"
            },
            {
                level: .85,
                color: "#bbb844"
            },
            {
                level: .875,
                color: "#cccc55"
            },
            {
                level: .9,
                color: "#dddd66"
            },
            {
                level: .925,
                color: "#666677"
            },
            {
                level: .95,
                color: "#777788"
            },
            {
                level: .975,
                color: "#888899"
            },
            {
                level: .99,
                color: "#aaaaaa"
            },
            {
                level: 1,
                color: "#ffffff"
            }
        ]
    };
    function ok() {
        return ok = Object.assign ? Object.assign.bind() : function(t) {
            for(var e = 1; e < arguments.length; e++){
                var n = arguments[e];
                for(var r in n)({}).hasOwnProperty.call(n, r) && (t[r] = n[r]);
            }
            return t;
        }, ok.apply(null, arguments);
    }
    const DT = "173", Ku = {
        LEFT: 0,
        MIDDLE: 1,
        RIGHT: 2,
        ROTATE: 0,
        DOLLY: 1,
        PAN: 2
    }, $l = {
        ROTATE: 0,
        PAN: 1,
        DOLLY_PAN: 2,
        DOLLY_ROTATE: 3
    }, U$ = 0, ak = 1, z$ = 2, Qpe = 3, V$ = 0, FT = 1, S0 = 2, Vl = 3, md = 0, To = 1, Oc = 2, sd = 0, zp = 1, lk = 2, ck = 3, uk = 4, W$ = 5, Nf = 100, q$ = 101, H$ = 102, $$ = 103, G$ = 104, X$ = 200, K$ = 201, Y$ = 202, Z$ = 203, ZE = 204, JE = 205, J$ = 206, Q$ = 207, e6 = 208, t6 = 209, n6 = 210, r6 = 211, i6 = 212, s6 = 213, o6 = 214, QE = 0, eM = 1, tM = 2, sm = 3, nM = 4, rM = 5, iM = 6, sM = 7, uw = 0, a6 = 1, l6 = 2, Vc = 0, c6 = 1, u6 = 2, d6 = 3, jT = 4, f6 = 5, h6 = 6, p6 = 7, dk = "attached", m6 = "detached", BT = 300, gd = 301, Qf = 302, yb = 303, vb = 304, gv = 306, xb = 1e3, ll = 1001, bb = 1002, Is = 1003, n2 = 1004, eme = 1004, cy = 1005, tme = 1005, es = 1006, E0 = 1007, nme = 1007, Fc = 1008, rme = 1008, sc = 1009, r2 = 1010, i2 = 1011, Jy = 1012, UT = 1013, yd = 1014, na = 1015, yv = 1016, zT = 1017, VT = 1018, om = 1020, s2 = 35902, o2 = 1021, a2 = 1022, Hs = 1023, l2 = 1024, c2 = 1025, Vp = 1026, am = 1027, WT = 1028, dw = 1029, u2 = 1030, qT = 1031, ime = 1032, HT = 1033, M0 = 33776, T0 = 33777, C0 = 33778, I0 = 33779, oM = 35840, aM = 35841, lM = 35842, cM = 35843, uM = 36196, dM = 37492, fM = 37496, hM = 37808, pM = 37809, mM = 37810, gM = 37811, yM = 37812, vM = 37813, xM = 37814, bM = 37815, wM = 37816, _M = 37817, SM = 37818, EM = 37819, MM = 37820, TM = 37821, R0 = 36492, CM = 36494, IM = 36495, d2 = 36283, RM = 36284, AM = 36285, NM = 36286, g6 = 2200, y6 = 2201, v6 = 2202, wb = 2300, PM = 2301, x1 = 2302, kp = 2400, Op = 2401, _b = 2402, $T = 2500, f2 = 2501, sme = 0, ome = 1, ame = 2, x6 = 3200, b6 = 3201, lme = 3202, cme = 3203, ih = 0, w6 = 1, Zu = "", Jo = "srgb", lm = "srgb-linear", Sb = "linear", hr = "srgb", ume = 0, vp = 7680, dme = 7681, fme = 7682, hme = 7683, pme = 34055, mme = 34056, gme = 5386, yme = 512, vme = 513, xme = 514, bme = 515, wme = 516, _me = 517, Sme = 518, fk = 519, _6 = 512, S6 = 513, E6 = 514, h2 = 515, M6 = 516, T6 = 517, C6 = 518, I6 = 519, Eb = 35044, Eme = 35048, Mme = 35040, Tme = 35045, Cme = 35049, Ime = 35041, Rme = 35046, Ame = 35050, Nme = 35042, Pme = "100", hk = "300 es", Ql = 2e3, Mb = 2001, kme = {
        COMPUTE: "compute",
        RENDER: "render"
    };
    let Jc = class {
        addEventListener(e, n) {
            this._listeners === void 0 && (this._listeners = {});
            const r = this._listeners;
            r[e] === void 0 && (r[e] = []), r[e].indexOf(n) === -1 && r[e].push(n);
        }
        hasEventListener(e, n) {
            const r = this._listeners;
            return r === void 0 ? !1 : r[e] !== void 0 && r[e].indexOf(n) !== -1;
        }
        removeEventListener(e, n) {
            const r = this._listeners;
            if (r === void 0) return;
            const i = r[e];
            if (i !== void 0) {
                const s = i.indexOf(n);
                s !== -1 && i.splice(s, 1);
            }
        }
        dispatchEvent(e) {
            const n = this._listeners;
            if (n === void 0) return;
            const r = n[e.type];
            if (r !== void 0) {
                e.target = this;
                const i = r.slice(0);
                for(let s = 0, o = i.length; s < o; s++)i[s].call(this, e);
                e.target = null;
            }
        }
    };
    const Bs = [
        "00",
        "01",
        "02",
        "03",
        "04",
        "05",
        "06",
        "07",
        "08",
        "09",
        "0a",
        "0b",
        "0c",
        "0d",
        "0e",
        "0f",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19",
        "1a",
        "1b",
        "1c",
        "1d",
        "1e",
        "1f",
        "20",
        "21",
        "22",
        "23",
        "24",
        "25",
        "26",
        "27",
        "28",
        "29",
        "2a",
        "2b",
        "2c",
        "2d",
        "2e",
        "2f",
        "30",
        "31",
        "32",
        "33",
        "34",
        "35",
        "36",
        "37",
        "38",
        "39",
        "3a",
        "3b",
        "3c",
        "3d",
        "3e",
        "3f",
        "40",
        "41",
        "42",
        "43",
        "44",
        "45",
        "46",
        "47",
        "48",
        "49",
        "4a",
        "4b",
        "4c",
        "4d",
        "4e",
        "4f",
        "50",
        "51",
        "52",
        "53",
        "54",
        "55",
        "56",
        "57",
        "58",
        "59",
        "5a",
        "5b",
        "5c",
        "5d",
        "5e",
        "5f",
        "60",
        "61",
        "62",
        "63",
        "64",
        "65",
        "66",
        "67",
        "68",
        "69",
        "6a",
        "6b",
        "6c",
        "6d",
        "6e",
        "6f",
        "70",
        "71",
        "72",
        "73",
        "74",
        "75",
        "76",
        "77",
        "78",
        "79",
        "7a",
        "7b",
        "7c",
        "7d",
        "7e",
        "7f",
        "80",
        "81",
        "82",
        "83",
        "84",
        "85",
        "86",
        "87",
        "88",
        "89",
        "8a",
        "8b",
        "8c",
        "8d",
        "8e",
        "8f",
        "90",
        "91",
        "92",
        "93",
        "94",
        "95",
        "96",
        "97",
        "98",
        "99",
        "9a",
        "9b",
        "9c",
        "9d",
        "9e",
        "9f",
        "a0",
        "a1",
        "a2",
        "a3",
        "a4",
        "a5",
        "a6",
        "a7",
        "a8",
        "a9",
        "aa",
        "ab",
        "ac",
        "ad",
        "ae",
        "af",
        "b0",
        "b1",
        "b2",
        "b3",
        "b4",
        "b5",
        "b6",
        "b7",
        "b8",
        "b9",
        "ba",
        "bb",
        "bc",
        "bd",
        "be",
        "bf",
        "c0",
        "c1",
        "c2",
        "c3",
        "c4",
        "c5",
        "c6",
        "c7",
        "c8",
        "c9",
        "ca",
        "cb",
        "cc",
        "cd",
        "ce",
        "cf",
        "d0",
        "d1",
        "d2",
        "d3",
        "d4",
        "d5",
        "d6",
        "d7",
        "d8",
        "d9",
        "da",
        "db",
        "dc",
        "dd",
        "de",
        "df",
        "e0",
        "e1",
        "e2",
        "e3",
        "e4",
        "e5",
        "e6",
        "e7",
        "e8",
        "e9",
        "ea",
        "eb",
        "ec",
        "ed",
        "ee",
        "ef",
        "f0",
        "f1",
        "f2",
        "f3",
        "f4",
        "f5",
        "f6",
        "f7",
        "f8",
        "f9",
        "fa",
        "fb",
        "fc",
        "fd",
        "fe",
        "ff"
    ];
    let hU = 1234567;
    const Wp = Math.PI / 180, Qy = 180 / Math.PI;
    function ka() {
        const t = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, n = Math.random() * 4294967295 | 0, r = Math.random() * 4294967295 | 0;
        return (Bs[t & 255] + Bs[t >> 8 & 255] + Bs[t >> 16 & 255] + Bs[t >> 24 & 255] + "-" + Bs[e & 255] + Bs[e >> 8 & 255] + "-" + Bs[e >> 16 & 15 | 64] + Bs[e >> 24 & 255] + "-" + Bs[n & 63 | 128] + Bs[n >> 8 & 255] + "-" + Bs[n >> 16 & 255] + Bs[n >> 24 & 255] + Bs[r & 255] + Bs[r >> 8 & 255] + Bs[r >> 16 & 255] + Bs[r >> 24 & 255]).toLowerCase();
    }
    function _n(t, e, n) {
        return Math.max(e, Math.min(n, t));
    }
    function p2(t, e) {
        return (t % e + e) % e;
    }
    function Ome(t, e, n, r, i) {
        return r + (t - e) * (i - r) / (n - e);
    }
    function Lme(t, e, n) {
        return t !== e ? (n - t) / (e - t) : 0;
    }
    function A0(t, e, n) {
        return (1 - n) * t + n * e;
    }
    function Dme(t, e, n, r) {
        return A0(t, e, 1 - Math.exp(-n * r));
    }
    function Fme(t, e = 1) {
        return e - Math.abs(p2(t, e * 2) - e);
    }
    function jme(t, e, n) {
        return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e), t * t * (3 - 2 * t));
    }
    function Bme(t, e, n) {
        return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e), t * t * t * (t * (t * 6 - 15) + 10));
    }
    function Ume(t, e) {
        return t + Math.floor(Math.random() * (e - t + 1));
    }
    function zme(t, e) {
        return t + Math.random() * (e - t);
    }
    function Vme(t) {
        return t * (.5 - Math.random());
    }
    function Wme(t) {
        t !== void 0 && (hU = t);
        let e = hU += 1831565813;
        return e = Math.imul(e ^ e >>> 15, e | 1), e ^= e + Math.imul(e ^ e >>> 7, e | 61), ((e ^ e >>> 14) >>> 0) / 4294967296;
    }
    function qme(t) {
        return t * Wp;
    }
    function Hme(t) {
        return t * Qy;
    }
    function $me(t) {
        return (t & t - 1) === 0 && t !== 0;
    }
    function Gme(t) {
        return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2));
    }
    function Xme(t) {
        return Math.pow(2, Math.floor(Math.log(t) / Math.LN2));
    }
    function Kme(t, e, n, r, i) {
        const s = Math.cos, o = Math.sin, a = s(n / 2), l = o(n / 2), c = s((e + r) / 2), u = o((e + r) / 2), f = s((e - r) / 2), p = o((e - r) / 2), g = s((r - e) / 2), x = o((r - e) / 2);
        switch(i){
            case "XYX":
                t.set(a * u, l * f, l * p, a * c);
                break;
            case "YZY":
                t.set(l * p, a * u, l * f, a * c);
                break;
            case "ZXZ":
                t.set(l * f, l * p, a * u, a * c);
                break;
            case "XZX":
                t.set(a * u, l * x, l * g, a * c);
                break;
            case "YXY":
                t.set(l * g, a * u, l * x, a * c);
                break;
            case "ZYZ":
                t.set(l * x, l * g, a * u, a * c);
                break;
            default:
                console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i);
        }
    }
    function Mo(t, e) {
        switch(e.constructor){
            case Float32Array:
                return t;
            case Uint32Array:
                return t / 4294967295;
            case Uint16Array:
                return t / 65535;
            case Uint8Array:
                return t / 255;
            case Int32Array:
                return Math.max(t / 2147483647, -1);
            case Int16Array:
                return Math.max(t / 32767, -1);
            case Int8Array:
                return Math.max(t / 127, -1);
            default:
                throw new Error("Invalid component type.");
        }
    }
    function In(t, e) {
        switch(e.constructor){
            case Float32Array:
                return t;
            case Uint32Array:
                return Math.round(t * 4294967295);
            case Uint16Array:
                return Math.round(t * 65535);
            case Uint8Array:
                return Math.round(t * 255);
            case Int32Array:
                return Math.round(t * 2147483647);
            case Int16Array:
                return Math.round(t * 32767);
            case Int8Array:
                return Math.round(t * 127);
            default:
                throw new Error("Invalid component type.");
        }
    }
    const Yme = {
        DEG2RAD: Wp,
        RAD2DEG: Qy,
        generateUUID: ka,
        clamp: _n,
        euclideanModulo: p2,
        mapLinear: Ome,
        inverseLerp: Lme,
        lerp: A0,
        damp: Dme,
        pingpong: Fme,
        smoothstep: jme,
        smootherstep: Bme,
        randInt: Ume,
        randFloat: zme,
        randFloatSpread: Vme,
        seededRandom: Wme,
        degToRad: qme,
        radToDeg: Hme,
        isPowerOfTwo: $me,
        ceilPowerOfTwo: Gme,
        floorPowerOfTwo: Xme,
        setQuaternionFromProperEuler: Kme,
        normalize: In,
        denormalize: Mo
    };
    class ot {
        constructor(e = 0, n = 0){
            ot.prototype.isVector2 = !0, this.x = e, this.y = n;
        }
        get width() {
            return this.x;
        }
        set width(e) {
            this.x = e;
        }
        get height() {
            return this.y;
        }
        set height(e) {
            this.y = e;
        }
        set(e, n) {
            return this.x = e, this.y = n, this;
        }
        setScalar(e) {
            return this.x = e, this.y = e, this;
        }
        setX(e) {
            return this.x = e, this;
        }
        setY(e) {
            return this.y = e, this;
        }
        setComponent(e, n) {
            switch(e){
                case 0:
                    this.x = n;
                    break;
                case 1:
                    this.y = n;
                    break;
                default:
                    throw new Error("index is out of range: " + e);
            }
            return this;
        }
        getComponent(e) {
            switch(e){
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                default:
                    throw new Error("index is out of range: " + e);
            }
        }
        clone() {
            return new this.constructor(this.x, this.y);
        }
        copy(e) {
            return this.x = e.x, this.y = e.y, this;
        }
        add(e) {
            return this.x += e.x, this.y += e.y, this;
        }
        addScalar(e) {
            return this.x += e, this.y += e, this;
        }
        addVectors(e, n) {
            return this.x = e.x + n.x, this.y = e.y + n.y, this;
        }
        addScaledVector(e, n) {
            return this.x += e.x * n, this.y += e.y * n, this;
        }
        sub(e) {
            return this.x -= e.x, this.y -= e.y, this;
        }
        subScalar(e) {
            return this.x -= e, this.y -= e, this;
        }
        subVectors(e, n) {
            return this.x = e.x - n.x, this.y = e.y - n.y, this;
        }
        multiply(e) {
            return this.x *= e.x, this.y *= e.y, this;
        }
        multiplyScalar(e) {
            return this.x *= e, this.y *= e, this;
        }
        divide(e) {
            return this.x /= e.x, this.y /= e.y, this;
        }
        divideScalar(e) {
            return this.multiplyScalar(1 / e);
        }
        applyMatrix3(e) {
            const n = this.x, r = this.y, i = e.elements;
            return this.x = i[0] * n + i[3] * r + i[6], this.y = i[1] * n + i[4] * r + i[7], this;
        }
        min(e) {
            return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;
        }
        max(e) {
            return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;
        }
        clamp(e, n) {
            return this.x = _n(this.x, e.x, n.x), this.y = _n(this.y, e.y, n.y), this;
        }
        clampScalar(e, n) {
            return this.x = _n(this.x, e, n), this.y = _n(this.y, e, n), this;
        }
        clampLength(e, n) {
            const r = this.length();
            return this.divideScalar(r || 1).multiplyScalar(_n(r, e, n));
        }
        floor() {
            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
        }
        ceil() {
            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
        }
        round() {
            return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
        }
        roundToZero() {
            return this.x = Math.trunc(this.x), this.y = Math.trunc(this.y), this;
        }
        negate() {
            return this.x = -this.x, this.y = -this.y, this;
        }
        dot(e) {
            return this.x * e.x + this.y * e.y;
        }
        cross(e) {
            return this.x * e.y - this.y * e.x;
        }
        lengthSq() {
            return this.x * this.x + this.y * this.y;
        }
        length() {
            return Math.sqrt(this.x * this.x + this.y * this.y);
        }
        manhattanLength() {
            return Math.abs(this.x) + Math.abs(this.y);
        }
        normalize() {
            return this.divideScalar(this.length() || 1);
        }
        angle() {
            return Math.atan2(-this.y, -this.x) + Math.PI;
        }
        angleTo(e) {
            const n = Math.sqrt(this.lengthSq() * e.lengthSq());
            if (n === 0) return Math.PI / 2;
            const r = this.dot(e) / n;
            return Math.acos(_n(r, -1, 1));
        }
        distanceTo(e) {
            return Math.sqrt(this.distanceToSquared(e));
        }
        distanceToSquared(e) {
            const n = this.x - e.x, r = this.y - e.y;
            return n * n + r * r;
        }
        manhattanDistanceTo(e) {
            return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
        }
        setLength(e) {
            return this.normalize().multiplyScalar(e);
        }
        lerp(e, n) {
            return this.x += (e.x - this.x) * n, this.y += (e.y - this.y) * n, this;
        }
        lerpVectors(e, n, r) {
            return this.x = e.x + (n.x - e.x) * r, this.y = e.y + (n.y - e.y) * r, this;
        }
        equals(e) {
            return e.x === this.x && e.y === this.y;
        }
        fromArray(e, n = 0) {
            return this.x = e[n], this.y = e[n + 1], this;
        }
        toArray(e = [], n = 0) {
            return e[n] = this.x, e[n + 1] = this.y, e;
        }
        fromBufferAttribute(e, n) {
            return this.x = e.getX(n), this.y = e.getY(n), this;
        }
        rotateAround(e, n) {
            const r = Math.cos(n), i = Math.sin(n), s = this.x - e.x, o = this.y - e.y;
            return this.x = s * r - o * i + e.x, this.y = s * i + o * r + e.y, this;
        }
        random() {
            return this.x = Math.random(), this.y = Math.random(), this;
        }
        *[Symbol.iterator]() {
            yield this.x, yield this.y;
        }
    }
    class Mn {
        constructor(e, n, r, i, s, o, a, l, c){
            Mn.prototype.isMatrix3 = !0, this.elements = [
                1,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                1
            ], e !== void 0 && this.set(e, n, r, i, s, o, a, l, c);
        }
        set(e, n, r, i, s, o, a, l, c) {
            const u = this.elements;
            return u[0] = e, u[1] = i, u[2] = a, u[3] = n, u[4] = s, u[5] = l, u[6] = r, u[7] = o, u[8] = c, this;
        }
        identity() {
            return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
        }
        copy(e) {
            const n = this.elements, r = e.elements;
            return n[0] = r[0], n[1] = r[1], n[2] = r[2], n[3] = r[3], n[4] = r[4], n[5] = r[5], n[6] = r[6], n[7] = r[7], n[8] = r[8], this;
        }
        extractBasis(e, n, r) {
            return e.setFromMatrix3Column(this, 0), n.setFromMatrix3Column(this, 1), r.setFromMatrix3Column(this, 2), this;
        }
        setFromMatrix4(e) {
            const n = e.elements;
            return this.set(n[0], n[4], n[8], n[1], n[5], n[9], n[2], n[6], n[10]), this;
        }
        multiply(e) {
            return this.multiplyMatrices(this, e);
        }
        premultiply(e) {
            return this.multiplyMatrices(e, this);
        }
        multiplyMatrices(e, n) {
            const r = e.elements, i = n.elements, s = this.elements, o = r[0], a = r[3], l = r[6], c = r[1], u = r[4], f = r[7], p = r[2], g = r[5], x = r[8], S = i[0], _ = i[3], b = i[6], M = i[1], E = i[4], T = i[7], k = i[2], N = i[5], D = i[8];
            return s[0] = o * S + a * M + l * k, s[3] = o * _ + a * E + l * N, s[6] = o * b + a * T + l * D, s[1] = c * S + u * M + f * k, s[4] = c * _ + u * E + f * N, s[7] = c * b + u * T + f * D, s[2] = p * S + g * M + x * k, s[5] = p * _ + g * E + x * N, s[8] = p * b + g * T + x * D, this;
        }
        multiplyScalar(e) {
            const n = this.elements;
            return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= e, n[4] *= e, n[7] *= e, n[2] *= e, n[5] *= e, n[8] *= e, this;
        }
        determinant() {
            const e = this.elements, n = e[0], r = e[1], i = e[2], s = e[3], o = e[4], a = e[5], l = e[6], c = e[7], u = e[8];
            return n * o * u - n * a * c - r * s * u + r * a * l + i * s * c - i * o * l;
        }
        invert() {
            const e = this.elements, n = e[0], r = e[1], i = e[2], s = e[3], o = e[4], a = e[5], l = e[6], c = e[7], u = e[8], f = u * o - a * c, p = a * l - u * s, g = c * s - o * l, x = n * f + r * p + i * g;
            if (x === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
            const S = 1 / x;
            return e[0] = f * S, e[1] = (i * c - u * r) * S, e[2] = (a * r - i * o) * S, e[3] = p * S, e[4] = (u * n - i * l) * S, e[5] = (i * s - a * n) * S, e[6] = g * S, e[7] = (r * l - c * n) * S, e[8] = (o * n - r * s) * S, this;
        }
        transpose() {
            let e;
            const n = this.elements;
            return e = n[1], n[1] = n[3], n[3] = e, e = n[2], n[2] = n[6], n[6] = e, e = n[5], n[5] = n[7], n[7] = e, this;
        }
        getNormalMatrix(e) {
            return this.setFromMatrix4(e).invert().transpose();
        }
        transposeIntoArray(e) {
            const n = this.elements;
            return e[0] = n[0], e[1] = n[3], e[2] = n[6], e[3] = n[1], e[4] = n[4], e[5] = n[7], e[6] = n[2], e[7] = n[5], e[8] = n[8], this;
        }
        setUvTransform(e, n, r, i, s, o, a) {
            const l = Math.cos(s), c = Math.sin(s);
            return this.set(r * l, r * c, -r * (l * o + c * a) + o + e, -i * c, i * l, -i * (-c * o + l * a) + a + n, 0, 0, 1), this;
        }
        scale(e, n) {
            return this.premultiply(jA.makeScale(e, n)), this;
        }
        rotate(e) {
            return this.premultiply(jA.makeRotation(-e)), this;
        }
        translate(e, n) {
            return this.premultiply(jA.makeTranslation(e, n)), this;
        }
        makeTranslation(e, n) {
            return e.isVector2 ? this.set(1, 0, e.x, 0, 1, e.y, 0, 0, 1) : this.set(1, 0, e, 0, 1, n, 0, 0, 1), this;
        }
        makeRotation(e) {
            const n = Math.cos(e), r = Math.sin(e);
            return this.set(n, -r, 0, r, n, 0, 0, 0, 1), this;
        }
        makeScale(e, n) {
            return this.set(e, 0, 0, 0, n, 0, 0, 0, 1), this;
        }
        equals(e) {
            const n = this.elements, r = e.elements;
            for(let i = 0; i < 9; i++)if (n[i] !== r[i]) return !1;
            return !0;
        }
        fromArray(e, n = 0) {
            for(let r = 0; r < 9; r++)this.elements[r] = e[r + n];
            return this;
        }
        toArray(e = [], n = 0) {
            const r = this.elements;
            return e[n] = r[0], e[n + 1] = r[1], e[n + 2] = r[2], e[n + 3] = r[3], e[n + 4] = r[4], e[n + 5] = r[5], e[n + 6] = r[6], e[n + 7] = r[7], e[n + 8] = r[8], e;
        }
        clone() {
            return new this.constructor().fromArray(this.elements);
        }
    }
    const jA = new Mn;
    function R6(t) {
        for(let e = t.length - 1; e >= 0; --e)if (t[e] >= 65535) return !0;
        return !1;
    }
    const Zme = {
        Int8Array,
        Uint8Array,
        Uint8ClampedArray,
        Int16Array,
        Uint16Array,
        Int32Array,
        Uint32Array,
        Float32Array,
        Float64Array
    };
    function uy(t, e) {
        return new Zme[t](e);
    }
    function Tb(t) {
        return document.createElementNS("http://www.w3.org/1999/xhtml", t);
    }
    function A6() {
        const t = Tb("canvas");
        return t.style.display = "block", t;
    }
    const pU = {};
    function Jg(t) {
        t in pU || (pU[t] = !0, console.warn(t));
    }
    function Jme(t, e, n) {
        return new Promise(function(r, i) {
            function s() {
                switch(t.clientWaitSync(e, t.SYNC_FLUSH_COMMANDS_BIT, 0)){
                    case t.WAIT_FAILED:
                        i();
                        break;
                    case t.TIMEOUT_EXPIRED:
                        setTimeout(s, n);
                        break;
                    default:
                        r();
                }
            }
            setTimeout(s, n);
        });
    }
    function Qme(t) {
        const e = t.elements;
        e[2] = .5 * e[2] + .5 * e[3], e[6] = .5 * e[6] + .5 * e[7], e[10] = .5 * e[10] + .5 * e[11], e[14] = .5 * e[14] + .5 * e[15];
    }
    function ege(t) {
        const e = t.elements;
        e[11] === -1 ? (e[10] = -e[10] - 1, e[14] = -e[14]) : (e[10] = -e[10], e[14] = -e[14] + 1);
    }
    const mU = new Mn().set(.4123908, .3575843, .1804808, .212639, .7151687, .0721923, .0193308, .1191948, .9505322), gU = new Mn().set(3.2409699, -1.5373832, -.4986108, -.9692436, 1.8759675, .0415551, .0556301, -.203977, 1.0569715);
    function tge() {
        const t = {
            enabled: !0,
            workingColorSpace: lm,
            spaces: {},
            convert: function(i, s, o) {
                return this.enabled === !1 || s === o || !s || !o || (this.spaces[s].transfer === hr && (i.r = od(i.r), i.g = od(i.g), i.b = od(i.b)), this.spaces[s].primaries !== this.spaces[o].primaries && (i.applyMatrix3(this.spaces[s].toXYZ), i.applyMatrix3(this.spaces[o].fromXYZ)), this.spaces[o].transfer === hr && (i.r = ky(i.r), i.g = ky(i.g), i.b = ky(i.b))), i;
            },
            fromWorkingColorSpace: function(i, s) {
                return this.convert(i, this.workingColorSpace, s);
            },
            toWorkingColorSpace: function(i, s) {
                return this.convert(i, s, this.workingColorSpace);
            },
            getPrimaries: function(i) {
                return this.spaces[i].primaries;
            },
            getTransfer: function(i) {
                return i === Zu ? Sb : this.spaces[i].transfer;
            },
            getLuminanceCoefficients: function(i, s = this.workingColorSpace) {
                return i.fromArray(this.spaces[s].luminanceCoefficients);
            },
            define: function(i) {
                Object.assign(this.spaces, i);
            },
            _getMatrix: function(i, s, o) {
                return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ);
            },
            _getDrawingBufferColorSpace: function(i) {
                return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace;
            },
            _getUnpackColorSpace: function(i = this.workingColorSpace) {
                return this.spaces[i].workingColorSpaceConfig.unpackColorSpace;
            }
        }, e = [
            .64,
            .33,
            .3,
            .6,
            .15,
            .06
        ], n = [
            .2126,
            .7152,
            .0722
        ], r = [
            .3127,
            .329
        ];
        return t.define({
            [lm]: {
                primaries: e,
                whitePoint: r,
                transfer: Sb,
                toXYZ: mU,
                fromXYZ: gU,
                luminanceCoefficients: n,
                workingColorSpaceConfig: {
                    unpackColorSpace: Jo
                },
                outputColorSpaceConfig: {
                    drawingBufferColorSpace: Jo
                }
            },
            [Jo]: {
                primaries: e,
                whitePoint: r,
                transfer: hr,
                toXYZ: mU,
                fromXYZ: gU,
                luminanceCoefficients: n,
                outputColorSpaceConfig: {
                    drawingBufferColorSpace: Jo
                }
            }
        }), t;
    }
    const Zn = tge();
    function od(t) {
        return t < .04045 ? t * .0773993808 : Math.pow(t * .9478672986 + .0521327014, 2.4);
    }
    function ky(t) {
        return t < .0031308 ? t * 12.92 : 1.055 * Math.pow(t, .41666) - .055;
    }
    let Eg;
    class N6 {
        static getDataURL(e) {
            if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
            let n;
            if (e instanceof HTMLCanvasElement) n = e;
            else {
                Eg === void 0 && (Eg = Tb("canvas")), Eg.width = e.width, Eg.height = e.height;
                const r = Eg.getContext("2d");
                e instanceof ImageData ? r.putImageData(e, 0, 0) : r.drawImage(e, 0, 0, e.width, e.height), n = Eg;
            }
            return n.toDataURL("image/png");
        }
        static sRGBToLinear(e) {
            if (typeof HTMLImageElement < "u" && e instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && e instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && e instanceof ImageBitmap) {
                const n = Tb("canvas");
                n.width = e.width, n.height = e.height;
                const r = n.getContext("2d");
                r.drawImage(e, 0, 0, e.width, e.height);
                const i = r.getImageData(0, 0, e.width, e.height), s = i.data;
                for(let o = 0; o < s.length; o++)s[o] = od(s[o] / 255) * 255;
                return r.putImageData(i, 0, 0), n;
            } else if (e.data) {
                const n = e.data.slice(0);
                for(let r = 0; r < n.length; r++)n instanceof Uint8Array || n instanceof Uint8ClampedArray ? n[r] = Math.floor(od(n[r] / 255) * 255) : n[r] = od(n[r]);
                return {
                    data: n,
                    width: e.width,
                    height: e.height
                };
            } else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."), e;
        }
    }
    let nge = 0;
    class Lp {
        constructor(e = null){
            this.isSource = !0, Object.defineProperty(this, "id", {
                value: nge++
            }), this.uuid = ka(), this.data = e, this.dataReady = !0, this.version = 0;
        }
        set needsUpdate(e) {
            e === !0 && this.version++;
        }
        toJSON(e) {
            const n = e === void 0 || typeof e == "string";
            if (!n && e.images[this.uuid] !== void 0) return e.images[this.uuid];
            const r = {
                uuid: this.uuid,
                url: ""
            }, i = this.data;
            if (i !== null) {
                let s;
                if (Array.isArray(i)) {
                    s = [];
                    for(let o = 0, a = i.length; o < a; o++)i[o].isDataTexture ? s.push(BA(i[o].image)) : s.push(BA(i[o]));
                } else s = BA(i);
                r.url = s;
            }
            return n || (e.images[this.uuid] = r), r;
        }
    }
    function BA(t) {
        return typeof HTMLImageElement < "u" && t instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && t instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && t instanceof ImageBitmap ? N6.getDataURL(t) : t.data ? {
            data: Array.from(t.data),
            width: t.width,
            height: t.height,
            type: t.data.constructor.name
        } : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
    }
    let rge = 0;
    class ui extends Jc {
        constructor(e = ui.DEFAULT_IMAGE, n = ui.DEFAULT_MAPPING, r = ll, i = ll, s = es, o = Fc, a = Hs, l = sc, c = ui.DEFAULT_ANISOTROPY, u = Zu){
            super(), this.isTexture = !0, Object.defineProperty(this, "id", {
                value: rge++
            }), this.uuid = ka(), this.name = "", this.source = new Lp(e), this.mipmaps = [], this.mapping = n, this.channel = 0, this.wrapS = r, this.wrapT = i, this.magFilter = s, this.minFilter = o, this.anisotropy = c, this.format = a, this.internalFormat = null, this.type = l, this.offset = new ot(0, 0), this.repeat = new ot(1, 1), this.center = new ot(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new Mn, this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.colorSpace = u, this.userData = {}, this.version = 0, this.onUpdate = null, this.renderTarget = null, this.isRenderTargetTexture = !1, this.pmremVersion = 0;
        }
        get image() {
            return this.source.data;
        }
        set image(e = null) {
            this.source.data = e;
        }
        updateMatrix() {
            this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            return this.name = e.name, this.source = e.source, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.channel = e.channel, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.colorSpace = e.colorSpace, this.renderTarget = e.renderTarget, this.isRenderTargetTexture = e.isRenderTargetTexture, this.userData = JSON.parse(JSON.stringify(e.userData)), this.needsUpdate = !0, this;
        }
        toJSON(e) {
            const n = e === void 0 || typeof e == "string";
            if (!n && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
            const r = {
                metadata: {
                    version: 4.6,
                    type: "Texture",
                    generator: "Texture.toJSON"
                },
                uuid: this.uuid,
                name: this.name,
                image: this.source.toJSON(e).uuid,
                mapping: this.mapping,
                channel: this.channel,
                repeat: [
                    this.repeat.x,
                    this.repeat.y
                ],
                offset: [
                    this.offset.x,
                    this.offset.y
                ],
                center: [
                    this.center.x,
                    this.center.y
                ],
                rotation: this.rotation,
                wrap: [
                    this.wrapS,
                    this.wrapT
                ],
                format: this.format,
                internalFormat: this.internalFormat,
                type: this.type,
                colorSpace: this.colorSpace,
                minFilter: this.minFilter,
                magFilter: this.magFilter,
                anisotropy: this.anisotropy,
                flipY: this.flipY,
                generateMipmaps: this.generateMipmaps,
                premultiplyAlpha: this.premultiplyAlpha,
                unpackAlignment: this.unpackAlignment
            };
            return Object.keys(this.userData).length > 0 && (r.userData = this.userData), n || (e.textures[this.uuid] = r), r;
        }
        dispose() {
            this.dispatchEvent({
                type: "dispose"
            });
        }
        transformUv(e) {
            if (this.mapping !== BT) return e;
            if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch(this.wrapS){
                case xb:
                    e.x = e.x - Math.floor(e.x);
                    break;
                case ll:
                    e.x = e.x < 0 ? 0 : 1;
                    break;
                case bb:
                    Math.abs(Math.floor(e.x) % 2) === 1 ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);
                    break;
            }
            if (e.y < 0 || e.y > 1) switch(this.wrapT){
                case xb:
                    e.y = e.y - Math.floor(e.y);
                    break;
                case ll:
                    e.y = e.y < 0 ? 0 : 1;
                    break;
                case bb:
                    Math.abs(Math.floor(e.y) % 2) === 1 ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
                    break;
            }
            return this.flipY && (e.y = 1 - e.y), e;
        }
        set needsUpdate(e) {
            e === !0 && (this.version++, this.source.needsUpdate = !0);
        }
        set needsPMREMUpdate(e) {
            e === !0 && this.pmremVersion++;
        }
    }
    ui.DEFAULT_IMAGE = null;
    ui.DEFAULT_MAPPING = BT;
    ui.DEFAULT_ANISOTROPY = 1;
    class rr {
        constructor(e = 0, n = 0, r = 0, i = 1){
            rr.prototype.isVector4 = !0, this.x = e, this.y = n, this.z = r, this.w = i;
        }
        get width() {
            return this.z;
        }
        set width(e) {
            this.z = e;
        }
        get height() {
            return this.w;
        }
        set height(e) {
            this.w = e;
        }
        set(e, n, r, i) {
            return this.x = e, this.y = n, this.z = r, this.w = i, this;
        }
        setScalar(e) {
            return this.x = e, this.y = e, this.z = e, this.w = e, this;
        }
        setX(e) {
            return this.x = e, this;
        }
        setY(e) {
            return this.y = e, this;
        }
        setZ(e) {
            return this.z = e, this;
        }
        setW(e) {
            return this.w = e, this;
        }
        setComponent(e, n) {
            switch(e){
                case 0:
                    this.x = n;
                    break;
                case 1:
                    this.y = n;
                    break;
                case 2:
                    this.z = n;
                    break;
                case 3:
                    this.w = n;
                    break;
                default:
                    throw new Error("index is out of range: " + e);
            }
            return this;
        }
        getComponent(e) {
            switch(e){
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                case 3:
                    return this.w;
                default:
                    throw new Error("index is out of range: " + e);
            }
        }
        clone() {
            return new this.constructor(this.x, this.y, this.z, this.w);
        }
        copy(e) {
            return this.x = e.x, this.y = e.y, this.z = e.z, this.w = e.w !== void 0 ? e.w : 1, this;
        }
        add(e) {
            return this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this;
        }
        addScalar(e) {
            return this.x += e, this.y += e, this.z += e, this.w += e, this;
        }
        addVectors(e, n) {
            return this.x = e.x + n.x, this.y = e.y + n.y, this.z = e.z + n.z, this.w = e.w + n.w, this;
        }
        addScaledVector(e, n) {
            return this.x += e.x * n, this.y += e.y * n, this.z += e.z * n, this.w += e.w * n, this;
        }
        sub(e) {
            return this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this;
        }
        subScalar(e) {
            return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;
        }
        subVectors(e, n) {
            return this.x = e.x - n.x, this.y = e.y - n.y, this.z = e.z - n.z, this.w = e.w - n.w, this;
        }
        multiply(e) {
            return this.x *= e.x, this.y *= e.y, this.z *= e.z, this.w *= e.w, this;
        }
        multiplyScalar(e) {
            return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;
        }
        applyMatrix4(e) {
            const n = this.x, r = this.y, i = this.z, s = this.w, o = e.elements;
            return this.x = o[0] * n + o[4] * r + o[8] * i + o[12] * s, this.y = o[1] * n + o[5] * r + o[9] * i + o[13] * s, this.z = o[2] * n + o[6] * r + o[10] * i + o[14] * s, this.w = o[3] * n + o[7] * r + o[11] * i + o[15] * s, this;
        }
        divide(e) {
            return this.x /= e.x, this.y /= e.y, this.z /= e.z, this.w /= e.w, this;
        }
        divideScalar(e) {
            return this.multiplyScalar(1 / e);
        }
        setAxisAngleFromQuaternion(e) {
            this.w = 2 * Math.acos(e.w);
            const n = Math.sqrt(1 - e.w * e.w);
            return n < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / n, this.y = e.y / n, this.z = e.z / n), this;
        }
        setAxisAngleFromRotationMatrix(e) {
            let n, r, i, s;
            const l = e.elements, c = l[0], u = l[4], f = l[8], p = l[1], g = l[5], x = l[9], S = l[2], _ = l[6], b = l[10];
            if (Math.abs(u - p) < .01 && Math.abs(f - S) < .01 && Math.abs(x - _) < .01) {
                if (Math.abs(u + p) < .1 && Math.abs(f + S) < .1 && Math.abs(x + _) < .1 && Math.abs(c + g + b - 3) < .1) return this.set(1, 0, 0, 0), this;
                n = Math.PI;
                const E = (c + 1) / 2, T = (g + 1) / 2, k = (b + 1) / 2, N = (u + p) / 4, D = (f + S) / 4, L = (x + _) / 4;
                return E > T && E > k ? E < .01 ? (r = 0, i = .707106781, s = .707106781) : (r = Math.sqrt(E), i = N / r, s = D / r) : T > k ? T < .01 ? (r = .707106781, i = 0, s = .707106781) : (i = Math.sqrt(T), r = N / i, s = L / i) : k < .01 ? (r = .707106781, i = .707106781, s = 0) : (s = Math.sqrt(k), r = D / s, i = L / s), this.set(r, i, s, n), this;
            }
            let M = Math.sqrt((_ - x) * (_ - x) + (f - S) * (f - S) + (p - u) * (p - u));
            return Math.abs(M) < .001 && (M = 1), this.x = (_ - x) / M, this.y = (f - S) / M, this.z = (p - u) / M, this.w = Math.acos((c + g + b - 1) / 2), this;
        }
        setFromMatrixPosition(e) {
            const n = e.elements;
            return this.x = n[12], this.y = n[13], this.z = n[14], this.w = n[15], this;
        }
        min(e) {
            return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;
        }
        max(e) {
            return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;
        }
        clamp(e, n) {
            return this.x = _n(this.x, e.x, n.x), this.y = _n(this.y, e.y, n.y), this.z = _n(this.z, e.z, n.z), this.w = _n(this.w, e.w, n.w), this;
        }
        clampScalar(e, n) {
            return this.x = _n(this.x, e, n), this.y = _n(this.y, e, n), this.z = _n(this.z, e, n), this.w = _n(this.w, e, n), this;
        }
        clampLength(e, n) {
            const r = this.length();
            return this.divideScalar(r || 1).multiplyScalar(_n(r, e, n));
        }
        floor() {
            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
        }
        ceil() {
            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
        }
        round() {
            return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
        }
        roundToZero() {
            return this.x = Math.trunc(this.x), this.y = Math.trunc(this.y), this.z = Math.trunc(this.z), this.w = Math.trunc(this.w), this;
        }
        negate() {
            return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
        }
        dot(e) {
            return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
        }
        lengthSq() {
            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
        }
        length() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
        }
        manhattanLength() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
        }
        normalize() {
            return this.divideScalar(this.length() || 1);
        }
        setLength(e) {
            return this.normalize().multiplyScalar(e);
        }
        lerp(e, n) {
            return this.x += (e.x - this.x) * n, this.y += (e.y - this.y) * n, this.z += (e.z - this.z) * n, this.w += (e.w - this.w) * n, this;
        }
        lerpVectors(e, n, r) {
            return this.x = e.x + (n.x - e.x) * r, this.y = e.y + (n.y - e.y) * r, this.z = e.z + (n.z - e.z) * r, this.w = e.w + (n.w - e.w) * r, this;
        }
        equals(e) {
            return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
        }
        fromArray(e, n = 0) {
            return this.x = e[n], this.y = e[n + 1], this.z = e[n + 2], this.w = e[n + 3], this;
        }
        toArray(e = [], n = 0) {
            return e[n] = this.x, e[n + 1] = this.y, e[n + 2] = this.z, e[n + 3] = this.w, e;
        }
        fromBufferAttribute(e, n) {
            return this.x = e.getX(n), this.y = e.getY(n), this.z = e.getZ(n), this.w = e.getW(n), this;
        }
        random() {
            return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;
        }
        *[Symbol.iterator]() {
            yield this.x, yield this.y, yield this.z, yield this.w;
        }
    }
    class GT extends Jc {
        constructor(e = 1, n = 1, r = {}){
            super(), this.isRenderTarget = !0, this.width = e, this.height = n, this.depth = 1, this.scissor = new rr(0, 0, e, n), this.scissorTest = !1, this.viewport = new rr(0, 0, e, n);
            const i = {
                width: e,
                height: n,
                depth: 1
            };
            r = Object.assign({
                generateMipmaps: !1,
                internalFormat: null,
                minFilter: es,
                depthBuffer: !0,
                stencilBuffer: !1,
                resolveDepthBuffer: !0,
                resolveStencilBuffer: !0,
                depthTexture: null,
                samples: 0,
                count: 1
            }, r);
            const s = new ui(i, r.mapping, r.wrapS, r.wrapT, r.magFilter, r.minFilter, r.format, r.type, r.anisotropy, r.colorSpace);
            s.flipY = !1, s.generateMipmaps = r.generateMipmaps, s.internalFormat = r.internalFormat, this.textures = [];
            const o = r.count;
            for(let a = 0; a < o; a++)this.textures[a] = s.clone(), this.textures[a].isRenderTargetTexture = !0, this.textures[a].renderTarget = this;
            this.depthBuffer = r.depthBuffer, this.stencilBuffer = r.stencilBuffer, this.resolveDepthBuffer = r.resolveDepthBuffer, this.resolveStencilBuffer = r.resolveStencilBuffer, this._depthTexture = null, this.depthTexture = r.depthTexture, this.samples = r.samples;
        }
        get texture() {
            return this.textures[0];
        }
        set texture(e) {
            this.textures[0] = e;
        }
        set depthTexture(e) {
            this._depthTexture !== null && (this._depthTexture.renderTarget = null), e !== null && (e.renderTarget = this), this._depthTexture = e;
        }
        get depthTexture() {
            return this._depthTexture;
        }
        setSize(e, n, r = 1) {
            if (this.width !== e || this.height !== n || this.depth !== r) {
                this.width = e, this.height = n, this.depth = r;
                for(let i = 0, s = this.textures.length; i < s; i++)this.textures[i].image.width = e, this.textures[i].image.height = n, this.textures[i].image.depth = r;
                this.dispose();
            }
            this.viewport.set(0, 0, e, n), this.scissor.set(0, 0, e, n);
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            this.width = e.width, this.height = e.height, this.depth = e.depth, this.scissor.copy(e.scissor), this.scissorTest = e.scissorTest, this.viewport.copy(e.viewport), this.textures.length = 0;
            for(let r = 0, i = e.textures.length; r < i; r++)this.textures[r] = e.textures[r].clone(), this.textures[r].isRenderTargetTexture = !0, this.textures[r].renderTarget = this;
            const n = Object.assign({}, e.texture.image);
            return this.texture.source = new Lp(n), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.resolveDepthBuffer = e.resolveDepthBuffer, this.resolveStencilBuffer = e.resolveStencilBuffer, e.depthTexture !== null && (this.depthTexture = e.depthTexture.clone()), this.samples = e.samples, this;
        }
        dispose() {
            this.dispatchEvent({
                type: "dispose"
            });
        }
    }
    class Kc extends GT {
        constructor(e = 1, n = 1, r = {}){
            super(e, n, r), this.isWebGLRenderTarget = !0;
        }
    }
    class fw extends ui {
        constructor(e = null, n = 1, r = 1, i = 1){
            super(null), this.isDataArrayTexture = !0, this.image = {
                data: e,
                width: n,
                height: r,
                depth: i
            }, this.magFilter = Is, this.minFilter = Is, this.wrapR = ll, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1, this.layerUpdates = new Set;
        }
        addLayerUpdate(e) {
            this.layerUpdates.add(e);
        }
        clearLayerUpdates() {
            this.layerUpdates.clear();
        }
    }
    class ige extends Kc {
        constructor(e = 1, n = 1, r = 1, i = {}){
            super(e, n, i), this.isWebGLArrayRenderTarget = !0, this.depth = r, this.texture = new fw(null, e, n, r), this.texture.isRenderTargetTexture = !0;
        }
    }
    class XT extends ui {
        constructor(e = null, n = 1, r = 1, i = 1){
            super(null), this.isData3DTexture = !0, this.image = {
                data: e,
                width: n,
                height: r,
                depth: i
            }, this.magFilter = Is, this.minFilter = Is, this.wrapR = ll, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
        }
    }
    class sge extends Kc {
        constructor(e = 1, n = 1, r = 1, i = {}){
            super(e, n, i), this.isWebGL3DRenderTarget = !0, this.depth = r, this.texture = new XT(null, e, n, r), this.texture.isRenderTargetTexture = !0;
        }
    }
    class Xs {
        constructor(e = 0, n = 0, r = 0, i = 1){
            this.isQuaternion = !0, this._x = e, this._y = n, this._z = r, this._w = i;
        }
        static slerpFlat(e, n, r, i, s, o, a) {
            let l = r[i + 0], c = r[i + 1], u = r[i + 2], f = r[i + 3];
            const p = s[o + 0], g = s[o + 1], x = s[o + 2], S = s[o + 3];
            if (a === 0) {
                e[n + 0] = l, e[n + 1] = c, e[n + 2] = u, e[n + 3] = f;
                return;
            }
            if (a === 1) {
                e[n + 0] = p, e[n + 1] = g, e[n + 2] = x, e[n + 3] = S;
                return;
            }
            if (f !== S || l !== p || c !== g || u !== x) {
                let _ = 1 - a;
                const b = l * p + c * g + u * x + f * S, M = b >= 0 ? 1 : -1, E = 1 - b * b;
                if (E > Number.EPSILON) {
                    const k = Math.sqrt(E), N = Math.atan2(k, b * M);
                    _ = Math.sin(_ * N) / k, a = Math.sin(a * N) / k;
                }
                const T = a * M;
                if (l = l * _ + p * T, c = c * _ + g * T, u = u * _ + x * T, f = f * _ + S * T, _ === 1 - a) {
                    const k = 1 / Math.sqrt(l * l + c * c + u * u + f * f);
                    l *= k, c *= k, u *= k, f *= k;
                }
            }
            e[n] = l, e[n + 1] = c, e[n + 2] = u, e[n + 3] = f;
        }
        static multiplyQuaternionsFlat(e, n, r, i, s, o) {
            const a = r[i], l = r[i + 1], c = r[i + 2], u = r[i + 3], f = s[o], p = s[o + 1], g = s[o + 2], x = s[o + 3];
            return e[n] = a * x + u * f + l * g - c * p, e[n + 1] = l * x + u * p + c * f - a * g, e[n + 2] = c * x + u * g + a * p - l * f, e[n + 3] = u * x - a * f - l * p - c * g, e;
        }
        get x() {
            return this._x;
        }
        set x(e) {
            this._x = e, this._onChangeCallback();
        }
        get y() {
            return this._y;
        }
        set y(e) {
            this._y = e, this._onChangeCallback();
        }
        get z() {
            return this._z;
        }
        set z(e) {
            this._z = e, this._onChangeCallback();
        }
        get w() {
            return this._w;
        }
        set w(e) {
            this._w = e, this._onChangeCallback();
        }
        set(e, n, r, i) {
            return this._x = e, this._y = n, this._z = r, this._w = i, this._onChangeCallback(), this;
        }
        clone() {
            return new this.constructor(this._x, this._y, this._z, this._w);
        }
        copy(e) {
            return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this;
        }
        setFromEuler(e, n = !0) {
            const r = e._x, i = e._y, s = e._z, o = e._order, a = Math.cos, l = Math.sin, c = a(r / 2), u = a(i / 2), f = a(s / 2), p = l(r / 2), g = l(i / 2), x = l(s / 2);
            switch(o){
                case "XYZ":
                    this._x = p * u * f + c * g * x, this._y = c * g * f - p * u * x, this._z = c * u * x + p * g * f, this._w = c * u * f - p * g * x;
                    break;
                case "YXZ":
                    this._x = p * u * f + c * g * x, this._y = c * g * f - p * u * x, this._z = c * u * x - p * g * f, this._w = c * u * f + p * g * x;
                    break;
                case "ZXY":
                    this._x = p * u * f - c * g * x, this._y = c * g * f + p * u * x, this._z = c * u * x + p * g * f, this._w = c * u * f - p * g * x;
                    break;
                case "ZYX":
                    this._x = p * u * f - c * g * x, this._y = c * g * f + p * u * x, this._z = c * u * x - p * g * f, this._w = c * u * f + p * g * x;
                    break;
                case "YZX":
                    this._x = p * u * f + c * g * x, this._y = c * g * f + p * u * x, this._z = c * u * x - p * g * f, this._w = c * u * f - p * g * x;
                    break;
                case "XZY":
                    this._x = p * u * f - c * g * x, this._y = c * g * f - p * u * x, this._z = c * u * x + p * g * f, this._w = c * u * f + p * g * x;
                    break;
                default:
                    console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + o);
            }
            return n === !0 && this._onChangeCallback(), this;
        }
        setFromAxisAngle(e, n) {
            const r = n / 2, i = Math.sin(r);
            return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(r), this._onChangeCallback(), this;
        }
        setFromRotationMatrix(e) {
            const n = e.elements, r = n[0], i = n[4], s = n[8], o = n[1], a = n[5], l = n[9], c = n[2], u = n[6], f = n[10], p = r + a + f;
            if (p > 0) {
                const g = .5 / Math.sqrt(p + 1);
                this._w = .25 / g, this._x = (u - l) * g, this._y = (s - c) * g, this._z = (o - i) * g;
            } else if (r > a && r > f) {
                const g = 2 * Math.sqrt(1 + r - a - f);
                this._w = (u - l) / g, this._x = .25 * g, this._y = (i + o) / g, this._z = (s + c) / g;
            } else if (a > f) {
                const g = 2 * Math.sqrt(1 + a - r - f);
                this._w = (s - c) / g, this._x = (i + o) / g, this._y = .25 * g, this._z = (l + u) / g;
            } else {
                const g = 2 * Math.sqrt(1 + f - r - a);
                this._w = (o - i) / g, this._x = (s + c) / g, this._y = (l + u) / g, this._z = .25 * g;
            }
            return this._onChangeCallback(), this;
        }
        setFromUnitVectors(e, n) {
            let r = e.dot(n) + 1;
            return r < Number.EPSILON ? (r = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = r) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = r)) : (this._x = e.y * n.z - e.z * n.y, this._y = e.z * n.x - e.x * n.z, this._z = e.x * n.y - e.y * n.x, this._w = r), this.normalize();
        }
        angleTo(e) {
            return 2 * Math.acos(Math.abs(_n(this.dot(e), -1, 1)));
        }
        rotateTowards(e, n) {
            const r = this.angleTo(e);
            if (r === 0) return this;
            const i = Math.min(1, n / r);
            return this.slerp(e, i), this;
        }
        identity() {
            return this.set(0, 0, 0, 1);
        }
        invert() {
            return this.conjugate();
        }
        conjugate() {
            return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
        }
        dot(e) {
            return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
        }
        lengthSq() {
            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
        }
        length() {
            return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
        }
        normalize() {
            let e = this.length();
            return e === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this;
        }
        multiply(e) {
            return this.multiplyQuaternions(this, e);
        }
        premultiply(e) {
            return this.multiplyQuaternions(e, this);
        }
        multiplyQuaternions(e, n) {
            const r = e._x, i = e._y, s = e._z, o = e._w, a = n._x, l = n._y, c = n._z, u = n._w;
            return this._x = r * u + o * a + i * c - s * l, this._y = i * u + o * l + s * a - r * c, this._z = s * u + o * c + r * l - i * a, this._w = o * u - r * a - i * l - s * c, this._onChangeCallback(), this;
        }
        slerp(e, n) {
            if (n === 0) return this;
            if (n === 1) return this.copy(e);
            const r = this._x, i = this._y, s = this._z, o = this._w;
            let a = o * e._w + r * e._x + i * e._y + s * e._z;
            if (a < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e), a >= 1) return this._w = o, this._x = r, this._y = i, this._z = s, this;
            const l = 1 - a * a;
            if (l <= Number.EPSILON) {
                const g = 1 - n;
                return this._w = g * o + n * this._w, this._x = g * r + n * this._x, this._y = g * i + n * this._y, this._z = g * s + n * this._z, this.normalize(), this;
            }
            const c = Math.sqrt(l), u = Math.atan2(c, a), f = Math.sin((1 - n) * u) / c, p = Math.sin(n * u) / c;
            return this._w = o * f + this._w * p, this._x = r * f + this._x * p, this._y = i * f + this._y * p, this._z = s * f + this._z * p, this._onChangeCallback(), this;
        }
        slerpQuaternions(e, n, r) {
            return this.copy(e).slerp(n, r);
        }
        random() {
            const e = 2 * Math.PI * Math.random(), n = 2 * Math.PI * Math.random(), r = Math.random(), i = Math.sqrt(1 - r), s = Math.sqrt(r);
            return this.set(i * Math.sin(e), i * Math.cos(e), s * Math.sin(n), s * Math.cos(n));
        }
        equals(e) {
            return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
        }
        fromArray(e, n = 0) {
            return this._x = e[n], this._y = e[n + 1], this._z = e[n + 2], this._w = e[n + 3], this._onChangeCallback(), this;
        }
        toArray(e = [], n = 0) {
            return e[n] = this._x, e[n + 1] = this._y, e[n + 2] = this._z, e[n + 3] = this._w, e;
        }
        fromBufferAttribute(e, n) {
            return this._x = e.getX(n), this._y = e.getY(n), this._z = e.getZ(n), this._w = e.getW(n), this._onChangeCallback(), this;
        }
        toJSON() {
            return this.toArray();
        }
        _onChange(e) {
            return this._onChangeCallback = e, this;
        }
        _onChangeCallback() {}
        *[Symbol.iterator]() {
            yield this._x, yield this._y, yield this._z, yield this._w;
        }
    }
    class ye {
        constructor(e = 0, n = 0, r = 0){
            ye.prototype.isVector3 = !0, this.x = e, this.y = n, this.z = r;
        }
        set(e, n, r) {
            return r === void 0 && (r = this.z), this.x = e, this.y = n, this.z = r, this;
        }
        setScalar(e) {
            return this.x = e, this.y = e, this.z = e, this;
        }
        setX(e) {
            return this.x = e, this;
        }
        setY(e) {
            return this.y = e, this;
        }
        setZ(e) {
            return this.z = e, this;
        }
        setComponent(e, n) {
            switch(e){
                case 0:
                    this.x = n;
                    break;
                case 1:
                    this.y = n;
                    break;
                case 2:
                    this.z = n;
                    break;
                default:
                    throw new Error("index is out of range: " + e);
            }
            return this;
        }
        getComponent(e) {
            switch(e){
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                default:
                    throw new Error("index is out of range: " + e);
            }
        }
        clone() {
            return new this.constructor(this.x, this.y, this.z);
        }
        copy(e) {
            return this.x = e.x, this.y = e.y, this.z = e.z, this;
        }
        add(e) {
            return this.x += e.x, this.y += e.y, this.z += e.z, this;
        }
        addScalar(e) {
            return this.x += e, this.y += e, this.z += e, this;
        }
        addVectors(e, n) {
            return this.x = e.x + n.x, this.y = e.y + n.y, this.z = e.z + n.z, this;
        }
        addScaledVector(e, n) {
            return this.x += e.x * n, this.y += e.y * n, this.z += e.z * n, this;
        }
        sub(e) {
            return this.x -= e.x, this.y -= e.y, this.z -= e.z, this;
        }
        subScalar(e) {
            return this.x -= e, this.y -= e, this.z -= e, this;
        }
        subVectors(e, n) {
            return this.x = e.x - n.x, this.y = e.y - n.y, this.z = e.z - n.z, this;
        }
        multiply(e) {
            return this.x *= e.x, this.y *= e.y, this.z *= e.z, this;
        }
        multiplyScalar(e) {
            return this.x *= e, this.y *= e, this.z *= e, this;
        }
        multiplyVectors(e, n) {
            return this.x = e.x * n.x, this.y = e.y * n.y, this.z = e.z * n.z, this;
        }
        applyEuler(e) {
            return this.applyQuaternion(yU.setFromEuler(e));
        }
        applyAxisAngle(e, n) {
            return this.applyQuaternion(yU.setFromAxisAngle(e, n));
        }
        applyMatrix3(e) {
            const n = this.x, r = this.y, i = this.z, s = e.elements;
            return this.x = s[0] * n + s[3] * r + s[6] * i, this.y = s[1] * n + s[4] * r + s[7] * i, this.z = s[2] * n + s[5] * r + s[8] * i, this;
        }
        applyNormalMatrix(e) {
            return this.applyMatrix3(e).normalize();
        }
        applyMatrix4(e) {
            const n = this.x, r = this.y, i = this.z, s = e.elements, o = 1 / (s[3] * n + s[7] * r + s[11] * i + s[15]);
            return this.x = (s[0] * n + s[4] * r + s[8] * i + s[12]) * o, this.y = (s[1] * n + s[5] * r + s[9] * i + s[13]) * o, this.z = (s[2] * n + s[6] * r + s[10] * i + s[14]) * o, this;
        }
        applyQuaternion(e) {
            const n = this.x, r = this.y, i = this.z, s = e.x, o = e.y, a = e.z, l = e.w, c = 2 * (o * i - a * r), u = 2 * (a * n - s * i), f = 2 * (s * r - o * n);
            return this.x = n + l * c + o * f - a * u, this.y = r + l * u + a * c - s * f, this.z = i + l * f + s * u - o * c, this;
        }
        project(e) {
            return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);
        }
        unproject(e) {
            return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);
        }
        transformDirection(e) {
            const n = this.x, r = this.y, i = this.z, s = e.elements;
            return this.x = s[0] * n + s[4] * r + s[8] * i, this.y = s[1] * n + s[5] * r + s[9] * i, this.z = s[2] * n + s[6] * r + s[10] * i, this.normalize();
        }
        divide(e) {
            return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;
        }
        divideScalar(e) {
            return this.multiplyScalar(1 / e);
        }
        min(e) {
            return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;
        }
        max(e) {
            return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;
        }
        clamp(e, n) {
            return this.x = _n(this.x, e.x, n.x), this.y = _n(this.y, e.y, n.y), this.z = _n(this.z, e.z, n.z), this;
        }
        clampScalar(e, n) {
            return this.x = _n(this.x, e, n), this.y = _n(this.y, e, n), this.z = _n(this.z, e, n), this;
        }
        clampLength(e, n) {
            const r = this.length();
            return this.divideScalar(r || 1).multiplyScalar(_n(r, e, n));
        }
        floor() {
            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
        }
        ceil() {
            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
        }
        round() {
            return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
        }
        roundToZero() {
            return this.x = Math.trunc(this.x), this.y = Math.trunc(this.y), this.z = Math.trunc(this.z), this;
        }
        negate() {
            return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
        }
        dot(e) {
            return this.x * e.x + this.y * e.y + this.z * e.z;
        }
        lengthSq() {
            return this.x * this.x + this.y * this.y + this.z * this.z;
        }
        length() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
        }
        manhattanLength() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
        }
        normalize() {
            return this.divideScalar(this.length() || 1);
        }
        setLength(e) {
            return this.normalize().multiplyScalar(e);
        }
        lerp(e, n) {
            return this.x += (e.x - this.x) * n, this.y += (e.y - this.y) * n, this.z += (e.z - this.z) * n, this;
        }
        lerpVectors(e, n, r) {
            return this.x = e.x + (n.x - e.x) * r, this.y = e.y + (n.y - e.y) * r, this.z = e.z + (n.z - e.z) * r, this;
        }
        cross(e) {
            return this.crossVectors(this, e);
        }
        crossVectors(e, n) {
            const r = e.x, i = e.y, s = e.z, o = n.x, a = n.y, l = n.z;
            return this.x = i * l - s * a, this.y = s * o - r * l, this.z = r * a - i * o, this;
        }
        projectOnVector(e) {
            const n = e.lengthSq();
            if (n === 0) return this.set(0, 0, 0);
            const r = e.dot(this) / n;
            return this.copy(e).multiplyScalar(r);
        }
        projectOnPlane(e) {
            return UA.copy(this).projectOnVector(e), this.sub(UA);
        }
        reflect(e) {
            return this.sub(UA.copy(e).multiplyScalar(2 * this.dot(e)));
        }
        angleTo(e) {
            const n = Math.sqrt(this.lengthSq() * e.lengthSq());
            if (n === 0) return Math.PI / 2;
            const r = this.dot(e) / n;
            return Math.acos(_n(r, -1, 1));
        }
        distanceTo(e) {
            return Math.sqrt(this.distanceToSquared(e));
        }
        distanceToSquared(e) {
            const n = this.x - e.x, r = this.y - e.y, i = this.z - e.z;
            return n * n + r * r + i * i;
        }
        manhattanDistanceTo(e) {
            return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);
        }
        setFromSpherical(e) {
            return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
        }
        setFromSphericalCoords(e, n, r) {
            const i = Math.sin(n) * e;
            return this.x = i * Math.sin(r), this.y = Math.cos(n) * e, this.z = i * Math.cos(r), this;
        }
        setFromCylindrical(e) {
            return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
        }
        setFromCylindricalCoords(e, n, r) {
            return this.x = e * Math.sin(n), this.y = r, this.z = e * Math.cos(n), this;
        }
        setFromMatrixPosition(e) {
            const n = e.elements;
            return this.x = n[12], this.y = n[13], this.z = n[14], this;
        }
        setFromMatrixScale(e) {
            const n = this.setFromMatrixColumn(e, 0).length(), r = this.setFromMatrixColumn(e, 1).length(), i = this.setFromMatrixColumn(e, 2).length();
            return this.x = n, this.y = r, this.z = i, this;
        }
        setFromMatrixColumn(e, n) {
            return this.fromArray(e.elements, n * 4);
        }
        setFromMatrix3Column(e, n) {
            return this.fromArray(e.elements, n * 3);
        }
        setFromEuler(e) {
            return this.x = e._x, this.y = e._y, this.z = e._z, this;
        }
        setFromColor(e) {
            return this.x = e.r, this.y = e.g, this.z = e.b, this;
        }
        equals(e) {
            return e.x === this.x && e.y === this.y && e.z === this.z;
        }
        fromArray(e, n = 0) {
            return this.x = e[n], this.y = e[n + 1], this.z = e[n + 2], this;
        }
        toArray(e = [], n = 0) {
            return e[n] = this.x, e[n + 1] = this.y, e[n + 2] = this.z, e;
        }
        fromBufferAttribute(e, n) {
            return this.x = e.getX(n), this.y = e.getY(n), this.z = e.getZ(n), this;
        }
        random() {
            return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
        }
        randomDirection() {
            const e = Math.random() * Math.PI * 2, n = Math.random() * 2 - 1, r = Math.sqrt(1 - n * n);
            return this.x = r * Math.cos(e), this.y = n, this.z = r * Math.sin(e), this;
        }
        *[Symbol.iterator]() {
            yield this.x, yield this.y, yield this.z;
        }
    }
    const UA = new ye, yU = new Xs;
    class Co {
        constructor(e = new ye(1 / 0, 1 / 0, 1 / 0), n = new ye(-1 / 0, -1 / 0, -1 / 0)){
            this.isBox3 = !0, this.min = e, this.max = n;
        }
        set(e, n) {
            return this.min.copy(e), this.max.copy(n), this;
        }
        setFromArray(e) {
            this.makeEmpty();
            for(let n = 0, r = e.length; n < r; n += 3)this.expandByPoint(jl.fromArray(e, n));
            return this;
        }
        setFromBufferAttribute(e) {
            this.makeEmpty();
            for(let n = 0, r = e.count; n < r; n++)this.expandByPoint(jl.fromBufferAttribute(e, n));
            return this;
        }
        setFromPoints(e) {
            this.makeEmpty();
            for(let n = 0, r = e.length; n < r; n++)this.expandByPoint(e[n]);
            return this;
        }
        setFromCenterAndSize(e, n) {
            const r = jl.copy(n).multiplyScalar(.5);
            return this.min.copy(e).sub(r), this.max.copy(e).add(r), this;
        }
        setFromObject(e, n = !1) {
            return this.makeEmpty(), this.expandByObject(e, n);
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            return this.min.copy(e.min), this.max.copy(e.max), this;
        }
        makeEmpty() {
            return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
        }
        isEmpty() {
            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
        }
        getCenter(e) {
            return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
        }
        getSize(e) {
            return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
        }
        expandByPoint(e) {
            return this.min.min(e), this.max.max(e), this;
        }
        expandByVector(e) {
            return this.min.sub(e), this.max.add(e), this;
        }
        expandByScalar(e) {
            return this.min.addScalar(-e), this.max.addScalar(e), this;
        }
        expandByObject(e, n = !1) {
            e.updateWorldMatrix(!1, !1);
            const r = e.geometry;
            if (r !== void 0) {
                const s = r.getAttribute("position");
                if (n === !0 && s !== void 0 && e.isInstancedMesh !== !0) for(let o = 0, a = s.count; o < a; o++)e.isMesh === !0 ? e.getVertexPosition(o, jl) : jl.fromBufferAttribute(s, o), jl.applyMatrix4(e.matrixWorld), this.expandByPoint(jl);
                else e.boundingBox !== void 0 ? (e.boundingBox === null && e.computeBoundingBox(), Z_.copy(e.boundingBox)) : (r.boundingBox === null && r.computeBoundingBox(), Z_.copy(r.boundingBox)), Z_.applyMatrix4(e.matrixWorld), this.union(Z_);
            }
            const i = e.children;
            for(let s = 0, o = i.length; s < o; s++)this.expandByObject(i[s], n);
            return this;
        }
        containsPoint(e) {
            return e.x >= this.min.x && e.x <= this.max.x && e.y >= this.min.y && e.y <= this.max.y && e.z >= this.min.z && e.z <= this.max.z;
        }
        containsBox(e) {
            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;
        }
        getParameter(e, n) {
            return n.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));
        }
        intersectsBox(e) {
            return e.max.x >= this.min.x && e.min.x <= this.max.x && e.max.y >= this.min.y && e.min.y <= this.max.y && e.max.z >= this.min.z && e.min.z <= this.max.z;
        }
        intersectsSphere(e) {
            return this.clampPoint(e.center, jl), jl.distanceToSquared(e.center) <= e.radius * e.radius;
        }
        intersectsPlane(e) {
            let n, r;
            return e.normal.x > 0 ? (n = e.normal.x * this.min.x, r = e.normal.x * this.max.x) : (n = e.normal.x * this.max.x, r = e.normal.x * this.min.x), e.normal.y > 0 ? (n += e.normal.y * this.min.y, r += e.normal.y * this.max.y) : (n += e.normal.y * this.max.y, r += e.normal.y * this.min.y), e.normal.z > 0 ? (n += e.normal.z * this.min.z, r += e.normal.z * this.max.z) : (n += e.normal.z * this.max.z, r += e.normal.z * this.min.z), n <= -e.constant && r >= -e.constant;
        }
        intersectsTriangle(e) {
            if (this.isEmpty()) return !1;
            this.getCenter(Mx), J_.subVectors(this.max, Mx), Mg.subVectors(e.a, Mx), Tg.subVectors(e.b, Mx), Cg.subVectors(e.c, Mx), df.subVectors(Tg, Mg), ff.subVectors(Cg, Tg), Qh.subVectors(Mg, Cg);
            let n = [
                0,
                -df.z,
                df.y,
                0,
                -ff.z,
                ff.y,
                0,
                -Qh.z,
                Qh.y,
                df.z,
                0,
                -df.x,
                ff.z,
                0,
                -ff.x,
                Qh.z,
                0,
                -Qh.x,
                -df.y,
                df.x,
                0,
                -ff.y,
                ff.x,
                0,
                -Qh.y,
                Qh.x,
                0
            ];
            return !zA(n, Mg, Tg, Cg, J_) || (n = [
                1,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                1
            ], !zA(n, Mg, Tg, Cg, J_)) ? !1 : (Q_.crossVectors(df, ff), n = [
                Q_.x,
                Q_.y,
                Q_.z
            ], zA(n, Mg, Tg, Cg, J_));
        }
        clampPoint(e, n) {
            return n.copy(e).clamp(this.min, this.max);
        }
        distanceToPoint(e) {
            return this.clampPoint(e, jl).distanceTo(e);
        }
        getBoundingSphere(e) {
            return this.isEmpty() ? e.makeEmpty() : (this.getCenter(e.center), e.radius = this.getSize(jl).length() * .5), e;
        }
        intersect(e) {
            return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
        }
        union(e) {
            return this.min.min(e.min), this.max.max(e.max), this;
        }
        applyMatrix4(e) {
            return this.isEmpty() ? this : (Bu[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), Bu[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), Bu[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), Bu[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), Bu[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), Bu[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), Bu[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), Bu[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(Bu), this);
        }
        translate(e) {
            return this.min.add(e), this.max.add(e), this;
        }
        equals(e) {
            return e.min.equals(this.min) && e.max.equals(this.max);
        }
    }
    const Bu = [
        new ye,
        new ye,
        new ye,
        new ye,
        new ye,
        new ye,
        new ye,
        new ye
    ], jl = new ye, Z_ = new Co, Mg = new ye, Tg = new ye, Cg = new ye, df = new ye, ff = new ye, Qh = new ye, Mx = new ye, J_ = new ye, Q_ = new ye, ep = new ye;
    function zA(t, e, n, r, i) {
        for(let s = 0, o = t.length - 3; s <= o; s += 3){
            ep.fromArray(t, s);
            const a = i.x * Math.abs(ep.x) + i.y * Math.abs(ep.y) + i.z * Math.abs(ep.z), l = e.dot(ep), c = n.dot(ep), u = r.dot(ep);
            if (Math.max(-Math.max(l, c, u), Math.min(l, c, u)) > a) return !1;
        }
        return !0;
    }
    const oge = new Co, Tx = new ye, VA = new ye;
    class Ks {
        constructor(e = new ye, n = -1){
            this.isSphere = !0, this.center = e, this.radius = n;
        }
        set(e, n) {
            return this.center.copy(e), this.radius = n, this;
        }
        setFromPoints(e, n) {
            const r = this.center;
            n !== void 0 ? r.copy(n) : oge.setFromPoints(e).getCenter(r);
            let i = 0;
            for(let s = 0, o = e.length; s < o; s++)i = Math.max(i, r.distanceToSquared(e[s]));
            return this.radius = Math.sqrt(i), this;
        }
        copy(e) {
            return this.center.copy(e.center), this.radius = e.radius, this;
        }
        isEmpty() {
            return this.radius < 0;
        }
        makeEmpty() {
            return this.center.set(0, 0, 0), this.radius = -1, this;
        }
        containsPoint(e) {
            return e.distanceToSquared(this.center) <= this.radius * this.radius;
        }
        distanceToPoint(e) {
            return e.distanceTo(this.center) - this.radius;
        }
        intersectsSphere(e) {
            const n = this.radius + e.radius;
            return e.center.distanceToSquared(this.center) <= n * n;
        }
        intersectsBox(e) {
            return e.intersectsSphere(this);
        }
        intersectsPlane(e) {
            return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
        }
        clampPoint(e, n) {
            const r = this.center.distanceToSquared(e);
            return n.copy(e), r > this.radius * this.radius && (n.sub(this.center).normalize(), n.multiplyScalar(this.radius).add(this.center)), n;
        }
        getBoundingBox(e) {
            return this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
        }
        applyMatrix4(e) {
            return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;
        }
        translate(e) {
            return this.center.add(e), this;
        }
        expandByPoint(e) {
            if (this.isEmpty()) return this.center.copy(e), this.radius = 0, this;
            Tx.subVectors(e, this.center);
            const n = Tx.lengthSq();
            if (n > this.radius * this.radius) {
                const r = Math.sqrt(n), i = (r - this.radius) * .5;
                this.center.addScaledVector(Tx, i / r), this.radius += i;
            }
            return this;
        }
        union(e) {
            return e.isEmpty() ? this : this.isEmpty() ? (this.copy(e), this) : (this.center.equals(e.center) === !0 ? this.radius = Math.max(this.radius, e.radius) : (VA.subVectors(e.center, this.center).setLength(e.radius), this.expandByPoint(Tx.copy(e.center).add(VA)), this.expandByPoint(Tx.copy(e.center).sub(VA))), this);
        }
        equals(e) {
            return e.center.equals(this.center) && e.radius === this.radius;
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    const Uu = new ye, WA = new ye, eS = new ye, hf = new ye, qA = new ye, tS = new ye, HA = new ye;
    class ym {
        constructor(e = new ye, n = new ye(0, 0, -1)){
            this.origin = e, this.direction = n;
        }
        set(e, n) {
            return this.origin.copy(e), this.direction.copy(n), this;
        }
        copy(e) {
            return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
        }
        at(e, n) {
            return n.copy(this.origin).addScaledVector(this.direction, e);
        }
        lookAt(e) {
            return this.direction.copy(e).sub(this.origin).normalize(), this;
        }
        recast(e) {
            return this.origin.copy(this.at(e, Uu)), this;
        }
        closestPointToPoint(e, n) {
            n.subVectors(e, this.origin);
            const r = n.dot(this.direction);
            return r < 0 ? n.copy(this.origin) : n.copy(this.origin).addScaledVector(this.direction, r);
        }
        distanceToPoint(e) {
            return Math.sqrt(this.distanceSqToPoint(e));
        }
        distanceSqToPoint(e) {
            const n = Uu.subVectors(e, this.origin).dot(this.direction);
            return n < 0 ? this.origin.distanceToSquared(e) : (Uu.copy(this.origin).addScaledVector(this.direction, n), Uu.distanceToSquared(e));
        }
        distanceSqToSegment(e, n, r, i) {
            WA.copy(e).add(n).multiplyScalar(.5), eS.copy(n).sub(e).normalize(), hf.copy(this.origin).sub(WA);
            const s = e.distanceTo(n) * .5, o = -this.direction.dot(eS), a = hf.dot(this.direction), l = -hf.dot(eS), c = hf.lengthSq(), u = Math.abs(1 - o * o);
            let f, p, g, x;
            if (u > 0) if (f = o * l - a, p = o * a - l, x = s * u, f >= 0) if (p >= -x) if (p <= x) {
                const S = 1 / u;
                f *= S, p *= S, g = f * (f + o * p + 2 * a) + p * (o * f + p + 2 * l) + c;
            } else p = s, f = Math.max(0, -(o * p + a)), g = -f * f + p * (p + 2 * l) + c;
            else p = -s, f = Math.max(0, -(o * p + a)), g = -f * f + p * (p + 2 * l) + c;
            else p <= -x ? (f = Math.max(0, -(-o * s + a)), p = f > 0 ? -s : Math.min(Math.max(-s, -l), s), g = -f * f + p * (p + 2 * l) + c) : p <= x ? (f = 0, p = Math.min(Math.max(-s, -l), s), g = p * (p + 2 * l) + c) : (f = Math.max(0, -(o * s + a)), p = f > 0 ? s : Math.min(Math.max(-s, -l), s), g = -f * f + p * (p + 2 * l) + c);
            else p = o > 0 ? -s : s, f = Math.max(0, -(o * p + a)), g = -f * f + p * (p + 2 * l) + c;
            return r && r.copy(this.origin).addScaledVector(this.direction, f), i && i.copy(WA).addScaledVector(eS, p), g;
        }
        intersectSphere(e, n) {
            Uu.subVectors(e.center, this.origin);
            const r = Uu.dot(this.direction), i = Uu.dot(Uu) - r * r, s = e.radius * e.radius;
            if (i > s) return null;
            const o = Math.sqrt(s - i), a = r - o, l = r + o;
            return l < 0 ? null : a < 0 ? this.at(l, n) : this.at(a, n);
        }
        intersectsSphere(e) {
            return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
        }
        distanceToPlane(e) {
            const n = e.normal.dot(this.direction);
            if (n === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
            const r = -(this.origin.dot(e.normal) + e.constant) / n;
            return r >= 0 ? r : null;
        }
        intersectPlane(e, n) {
            const r = this.distanceToPlane(e);
            return r === null ? null : this.at(r, n);
        }
        intersectsPlane(e) {
            const n = e.distanceToPoint(this.origin);
            return n === 0 || e.normal.dot(this.direction) * n < 0;
        }
        intersectBox(e, n) {
            let r, i, s, o, a, l;
            const c = 1 / this.direction.x, u = 1 / this.direction.y, f = 1 / this.direction.z, p = this.origin;
            return c >= 0 ? (r = (e.min.x - p.x) * c, i = (e.max.x - p.x) * c) : (r = (e.max.x - p.x) * c, i = (e.min.x - p.x) * c), u >= 0 ? (s = (e.min.y - p.y) * u, o = (e.max.y - p.y) * u) : (s = (e.max.y - p.y) * u, o = (e.min.y - p.y) * u), r > o || s > i || ((s > r || isNaN(r)) && (r = s), (o < i || isNaN(i)) && (i = o), f >= 0 ? (a = (e.min.z - p.z) * f, l = (e.max.z - p.z) * f) : (a = (e.max.z - p.z) * f, l = (e.min.z - p.z) * f), r > l || a > i) || ((a > r || r !== r) && (r = a), (l < i || i !== i) && (i = l), i < 0) ? null : this.at(r >= 0 ? r : i, n);
        }
        intersectsBox(e) {
            return this.intersectBox(e, Uu) !== null;
        }
        intersectTriangle(e, n, r, i, s) {
            qA.subVectors(n, e), tS.subVectors(r, e), HA.crossVectors(qA, tS);
            let o = this.direction.dot(HA), a;
            if (o > 0) {
                if (i) return null;
                a = 1;
            } else if (o < 0) a = -1, o = -o;
            else return null;
            hf.subVectors(this.origin, e);
            const l = a * this.direction.dot(tS.crossVectors(hf, tS));
            if (l < 0) return null;
            const c = a * this.direction.dot(qA.cross(hf));
            if (c < 0 || l + c > o) return null;
            const u = -a * hf.dot(HA);
            return u < 0 ? null : this.at(u / o, s);
        }
        applyMatrix4(e) {
            return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;
        }
        equals(e) {
            return e.origin.equals(this.origin) && e.direction.equals(this.direction);
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    class fn {
        constructor(e, n, r, i, s, o, a, l, c, u, f, p, g, x, S, _){
            fn.prototype.isMatrix4 = !0, this.elements = [
                1,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                1
            ], e !== void 0 && this.set(e, n, r, i, s, o, a, l, c, u, f, p, g, x, S, _);
        }
        set(e, n, r, i, s, o, a, l, c, u, f, p, g, x, S, _) {
            const b = this.elements;
            return b[0] = e, b[4] = n, b[8] = r, b[12] = i, b[1] = s, b[5] = o, b[9] = a, b[13] = l, b[2] = c, b[6] = u, b[10] = f, b[14] = p, b[3] = g, b[7] = x, b[11] = S, b[15] = _, this;
        }
        identity() {
            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
        }
        clone() {
            return new fn().fromArray(this.elements);
        }
        copy(e) {
            const n = this.elements, r = e.elements;
            return n[0] = r[0], n[1] = r[1], n[2] = r[2], n[3] = r[3], n[4] = r[4], n[5] = r[5], n[6] = r[6], n[7] = r[7], n[8] = r[8], n[9] = r[9], n[10] = r[10], n[11] = r[11], n[12] = r[12], n[13] = r[13], n[14] = r[14], n[15] = r[15], this;
        }
        copyPosition(e) {
            const n = this.elements, r = e.elements;
            return n[12] = r[12], n[13] = r[13], n[14] = r[14], this;
        }
        setFromMatrix3(e) {
            const n = e.elements;
            return this.set(n[0], n[3], n[6], 0, n[1], n[4], n[7], 0, n[2], n[5], n[8], 0, 0, 0, 0, 1), this;
        }
        extractBasis(e, n, r) {
            return e.setFromMatrixColumn(this, 0), n.setFromMatrixColumn(this, 1), r.setFromMatrixColumn(this, 2), this;
        }
        makeBasis(e, n, r) {
            return this.set(e.x, n.x, r.x, 0, e.y, n.y, r.y, 0, e.z, n.z, r.z, 0, 0, 0, 0, 1), this;
        }
        extractRotation(e) {
            const n = this.elements, r = e.elements, i = 1 / Ig.setFromMatrixColumn(e, 0).length(), s = 1 / Ig.setFromMatrixColumn(e, 1).length(), o = 1 / Ig.setFromMatrixColumn(e, 2).length();
            return n[0] = r[0] * i, n[1] = r[1] * i, n[2] = r[2] * i, n[3] = 0, n[4] = r[4] * s, n[5] = r[5] * s, n[6] = r[6] * s, n[7] = 0, n[8] = r[8] * o, n[9] = r[9] * o, n[10] = r[10] * o, n[11] = 0, n[12] = 0, n[13] = 0, n[14] = 0, n[15] = 1, this;
        }
        makeRotationFromEuler(e) {
            const n = this.elements, r = e.x, i = e.y, s = e.z, o = Math.cos(r), a = Math.sin(r), l = Math.cos(i), c = Math.sin(i), u = Math.cos(s), f = Math.sin(s);
            if (e.order === "XYZ") {
                const p = o * u, g = o * f, x = a * u, S = a * f;
                n[0] = l * u, n[4] = -l * f, n[8] = c, n[1] = g + x * c, n[5] = p - S * c, n[9] = -a * l, n[2] = S - p * c, n[6] = x + g * c, n[10] = o * l;
            } else if (e.order === "YXZ") {
                const p = l * u, g = l * f, x = c * u, S = c * f;
                n[0] = p + S * a, n[4] = x * a - g, n[8] = o * c, n[1] = o * f, n[5] = o * u, n[9] = -a, n[2] = g * a - x, n[6] = S + p * a, n[10] = o * l;
            } else if (e.order === "ZXY") {
                const p = l * u, g = l * f, x = c * u, S = c * f;
                n[0] = p - S * a, n[4] = -o * f, n[8] = x + g * a, n[1] = g + x * a, n[5] = o * u, n[9] = S - p * a, n[2] = -o * c, n[6] = a, n[10] = o * l;
            } else if (e.order === "ZYX") {
                const p = o * u, g = o * f, x = a * u, S = a * f;
                n[0] = l * u, n[4] = x * c - g, n[8] = p * c + S, n[1] = l * f, n[5] = S * c + p, n[9] = g * c - x, n[2] = -c, n[6] = a * l, n[10] = o * l;
            } else if (e.order === "YZX") {
                const p = o * l, g = o * c, x = a * l, S = a * c;
                n[0] = l * u, n[4] = S - p * f, n[8] = x * f + g, n[1] = f, n[5] = o * u, n[9] = -a * u, n[2] = -c * u, n[6] = g * f + x, n[10] = p - S * f;
            } else if (e.order === "XZY") {
                const p = o * l, g = o * c, x = a * l, S = a * c;
                n[0] = l * u, n[4] = -f, n[8] = c * u, n[1] = p * f + S, n[5] = o * u, n[9] = g * f - x, n[2] = x * f - g, n[6] = a * u, n[10] = S * f + p;
            }
            return n[3] = 0, n[7] = 0, n[11] = 0, n[12] = 0, n[13] = 0, n[14] = 0, n[15] = 1, this;
        }
        makeRotationFromQuaternion(e) {
            return this.compose(age, e, lge);
        }
        lookAt(e, n, r) {
            const i = this.elements;
            return _a.subVectors(e, n), _a.lengthSq() === 0 && (_a.z = 1), _a.normalize(), pf.crossVectors(r, _a), pf.lengthSq() === 0 && (Math.abs(r.z) === 1 ? _a.x += 1e-4 : _a.z += 1e-4, _a.normalize(), pf.crossVectors(r, _a)), pf.normalize(), nS.crossVectors(_a, pf), i[0] = pf.x, i[4] = nS.x, i[8] = _a.x, i[1] = pf.y, i[5] = nS.y, i[9] = _a.y, i[2] = pf.z, i[6] = nS.z, i[10] = _a.z, this;
        }
        multiply(e) {
            return this.multiplyMatrices(this, e);
        }
        premultiply(e) {
            return this.multiplyMatrices(e, this);
        }
        multiplyMatrices(e, n) {
            const r = e.elements, i = n.elements, s = this.elements, o = r[0], a = r[4], l = r[8], c = r[12], u = r[1], f = r[5], p = r[9], g = r[13], x = r[2], S = r[6], _ = r[10], b = r[14], M = r[3], E = r[7], T = r[11], k = r[15], N = i[0], D = i[4], L = i[8], R = i[12], A = i[1], P = i[5], B = i[9], U = i[13], j = i[2], K = i[6], q = i[10], te = i[14], W = i[3], J = i[7], Q = i[11], Y = i[15];
            return s[0] = o * N + a * A + l * j + c * W, s[4] = o * D + a * P + l * K + c * J, s[8] = o * L + a * B + l * q + c * Q, s[12] = o * R + a * U + l * te + c * Y, s[1] = u * N + f * A + p * j + g * W, s[5] = u * D + f * P + p * K + g * J, s[9] = u * L + f * B + p * q + g * Q, s[13] = u * R + f * U + p * te + g * Y, s[2] = x * N + S * A + _ * j + b * W, s[6] = x * D + S * P + _ * K + b * J, s[10] = x * L + S * B + _ * q + b * Q, s[14] = x * R + S * U + _ * te + b * Y, s[3] = M * N + E * A + T * j + k * W, s[7] = M * D + E * P + T * K + k * J, s[11] = M * L + E * B + T * q + k * Q, s[15] = M * R + E * U + T * te + k * Y, this;
        }
        multiplyScalar(e) {
            const n = this.elements;
            return n[0] *= e, n[4] *= e, n[8] *= e, n[12] *= e, n[1] *= e, n[5] *= e, n[9] *= e, n[13] *= e, n[2] *= e, n[6] *= e, n[10] *= e, n[14] *= e, n[3] *= e, n[7] *= e, n[11] *= e, n[15] *= e, this;
        }
        determinant() {
            const e = this.elements, n = e[0], r = e[4], i = e[8], s = e[12], o = e[1], a = e[5], l = e[9], c = e[13], u = e[2], f = e[6], p = e[10], g = e[14], x = e[3], S = e[7], _ = e[11], b = e[15];
            return x * (+s * l * f - i * c * f - s * a * p + r * c * p + i * a * g - r * l * g) + S * (+n * l * g - n * c * p + s * o * p - i * o * g + i * c * u - s * l * u) + _ * (+n * c * f - n * a * g - s * o * f + r * o * g + s * a * u - r * c * u) + b * (-i * a * u - n * l * f + n * a * p + i * o * f - r * o * p + r * l * u);
        }
        transpose() {
            const e = this.elements;
            let n;
            return n = e[1], e[1] = e[4], e[4] = n, n = e[2], e[2] = e[8], e[8] = n, n = e[6], e[6] = e[9], e[9] = n, n = e[3], e[3] = e[12], e[12] = n, n = e[7], e[7] = e[13], e[13] = n, n = e[11], e[11] = e[14], e[14] = n, this;
        }
        setPosition(e, n, r) {
            const i = this.elements;
            return e.isVector3 ? (i[12] = e.x, i[13] = e.y, i[14] = e.z) : (i[12] = e, i[13] = n, i[14] = r), this;
        }
        invert() {
            const e = this.elements, n = e[0], r = e[1], i = e[2], s = e[3], o = e[4], a = e[5], l = e[6], c = e[7], u = e[8], f = e[9], p = e[10], g = e[11], x = e[12], S = e[13], _ = e[14], b = e[15], M = f * _ * c - S * p * c + S * l * g - a * _ * g - f * l * b + a * p * b, E = x * p * c - u * _ * c - x * l * g + o * _ * g + u * l * b - o * p * b, T = u * S * c - x * f * c + x * a * g - o * S * g - u * a * b + o * f * b, k = x * f * l - u * S * l - x * a * p + o * S * p + u * a * _ - o * f * _, N = n * M + r * E + i * T + s * k;
            if (N === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            const D = 1 / N;
            return e[0] = M * D, e[1] = (S * p * s - f * _ * s - S * i * g + r * _ * g + f * i * b - r * p * b) * D, e[2] = (a * _ * s - S * l * s + S * i * c - r * _ * c - a * i * b + r * l * b) * D, e[3] = (f * l * s - a * p * s - f * i * c + r * p * c + a * i * g - r * l * g) * D, e[4] = E * D, e[5] = (u * _ * s - x * p * s + x * i * g - n * _ * g - u * i * b + n * p * b) * D, e[6] = (x * l * s - o * _ * s - x * i * c + n * _ * c + o * i * b - n * l * b) * D, e[7] = (o * p * s - u * l * s + u * i * c - n * p * c - o * i * g + n * l * g) * D, e[8] = T * D, e[9] = (x * f * s - u * S * s - x * r * g + n * S * g + u * r * b - n * f * b) * D, e[10] = (o * S * s - x * a * s + x * r * c - n * S * c - o * r * b + n * a * b) * D, e[11] = (u * a * s - o * f * s - u * r * c + n * f * c + o * r * g - n * a * g) * D, e[12] = k * D, e[13] = (u * S * i - x * f * i + x * r * p - n * S * p - u * r * _ + n * f * _) * D, e[14] = (x * a * i - o * S * i - x * r * l + n * S * l + o * r * _ - n * a * _) * D, e[15] = (o * f * i - u * a * i + u * r * l - n * f * l - o * r * p + n * a * p) * D, this;
        }
        scale(e) {
            const n = this.elements, r = e.x, i = e.y, s = e.z;
            return n[0] *= r, n[4] *= i, n[8] *= s, n[1] *= r, n[5] *= i, n[9] *= s, n[2] *= r, n[6] *= i, n[10] *= s, n[3] *= r, n[7] *= i, n[11] *= s, this;
        }
        getMaxScaleOnAxis() {
            const e = this.elements, n = e[0] * e[0] + e[1] * e[1] + e[2] * e[2], r = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
            return Math.sqrt(Math.max(n, r, i));
        }
        makeTranslation(e, n, r) {
            return e.isVector3 ? this.set(1, 0, 0, e.x, 0, 1, 0, e.y, 0, 0, 1, e.z, 0, 0, 0, 1) : this.set(1, 0, 0, e, 0, 1, 0, n, 0, 0, 1, r, 0, 0, 0, 1), this;
        }
        makeRotationX(e) {
            const n = Math.cos(e), r = Math.sin(e);
            return this.set(1, 0, 0, 0, 0, n, -r, 0, 0, r, n, 0, 0, 0, 0, 1), this;
        }
        makeRotationY(e) {
            const n = Math.cos(e), r = Math.sin(e);
            return this.set(n, 0, r, 0, 0, 1, 0, 0, -r, 0, n, 0, 0, 0, 0, 1), this;
        }
        makeRotationZ(e) {
            const n = Math.cos(e), r = Math.sin(e);
            return this.set(n, -r, 0, 0, r, n, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
        }
        makeRotationAxis(e, n) {
            const r = Math.cos(n), i = Math.sin(n), s = 1 - r, o = e.x, a = e.y, l = e.z, c = s * o, u = s * a;
            return this.set(c * o + r, c * a - i * l, c * l + i * a, 0, c * a + i * l, u * a + r, u * l - i * o, 0, c * l - i * a, u * l + i * o, s * l * l + r, 0, 0, 0, 0, 1), this;
        }
        makeScale(e, n, r) {
            return this.set(e, 0, 0, 0, 0, n, 0, 0, 0, 0, r, 0, 0, 0, 0, 1), this;
        }
        makeShear(e, n, r, i, s, o) {
            return this.set(1, r, s, 0, e, 1, o, 0, n, i, 1, 0, 0, 0, 0, 1), this;
        }
        compose(e, n, r) {
            const i = this.elements, s = n._x, o = n._y, a = n._z, l = n._w, c = s + s, u = o + o, f = a + a, p = s * c, g = s * u, x = s * f, S = o * u, _ = o * f, b = a * f, M = l * c, E = l * u, T = l * f, k = r.x, N = r.y, D = r.z;
            return i[0] = (1 - (S + b)) * k, i[1] = (g + T) * k, i[2] = (x - E) * k, i[3] = 0, i[4] = (g - T) * N, i[5] = (1 - (p + b)) * N, i[6] = (_ + M) * N, i[7] = 0, i[8] = (x + E) * D, i[9] = (_ - M) * D, i[10] = (1 - (p + S)) * D, i[11] = 0, i[12] = e.x, i[13] = e.y, i[14] = e.z, i[15] = 1, this;
        }
        decompose(e, n, r) {
            const i = this.elements;
            let s = Ig.set(i[0], i[1], i[2]).length();
            const o = Ig.set(i[4], i[5], i[6]).length(), a = Ig.set(i[8], i[9], i[10]).length();
            this.determinant() < 0 && (s = -s), e.x = i[12], e.y = i[13], e.z = i[14], Bl.copy(this);
            const c = 1 / s, u = 1 / o, f = 1 / a;
            return Bl.elements[0] *= c, Bl.elements[1] *= c, Bl.elements[2] *= c, Bl.elements[4] *= u, Bl.elements[5] *= u, Bl.elements[6] *= u, Bl.elements[8] *= f, Bl.elements[9] *= f, Bl.elements[10] *= f, n.setFromRotationMatrix(Bl), r.x = s, r.y = o, r.z = a, this;
        }
        makePerspective(e, n, r, i, s, o, a = Ql) {
            const l = this.elements, c = 2 * s / (n - e), u = 2 * s / (r - i), f = (n + e) / (n - e), p = (r + i) / (r - i);
            let g, x;
            if (a === Ql) g = -(o + s) / (o - s), x = -2 * o * s / (o - s);
            else if (a === Mb) g = -o / (o - s), x = -o * s / (o - s);
            else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: " + a);
            return l[0] = c, l[4] = 0, l[8] = f, l[12] = 0, l[1] = 0, l[5] = u, l[9] = p, l[13] = 0, l[2] = 0, l[6] = 0, l[10] = g, l[14] = x, l[3] = 0, l[7] = 0, l[11] = -1, l[15] = 0, this;
        }
        makeOrthographic(e, n, r, i, s, o, a = Ql) {
            const l = this.elements, c = 1 / (n - e), u = 1 / (r - i), f = 1 / (o - s), p = (n + e) * c, g = (r + i) * u;
            let x, S;
            if (a === Ql) x = (o + s) * f, S = -2 * f;
            else if (a === Mb) x = s * f, S = -1 * f;
            else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: " + a);
            return l[0] = 2 * c, l[4] = 0, l[8] = 0, l[12] = -p, l[1] = 0, l[5] = 2 * u, l[9] = 0, l[13] = -g, l[2] = 0, l[6] = 0, l[10] = S, l[14] = -x, l[3] = 0, l[7] = 0, l[11] = 0, l[15] = 1, this;
        }
        equals(e) {
            const n = this.elements, r = e.elements;
            for(let i = 0; i < 16; i++)if (n[i] !== r[i]) return !1;
            return !0;
        }
        fromArray(e, n = 0) {
            for(let r = 0; r < 16; r++)this.elements[r] = e[r + n];
            return this;
        }
        toArray(e = [], n = 0) {
            const r = this.elements;
            return e[n] = r[0], e[n + 1] = r[1], e[n + 2] = r[2], e[n + 3] = r[3], e[n + 4] = r[4], e[n + 5] = r[5], e[n + 6] = r[6], e[n + 7] = r[7], e[n + 8] = r[8], e[n + 9] = r[9], e[n + 10] = r[10], e[n + 11] = r[11], e[n + 12] = r[12], e[n + 13] = r[13], e[n + 14] = r[14], e[n + 15] = r[15], e;
        }
    }
    const Ig = new ye, Bl = new fn, age = new ye(0, 0, 0), lge = new ye(1, 1, 1), pf = new ye, nS = new ye, _a = new ye, vU = new fn, xU = new Xs;
    class ja {
        constructor(e = 0, n = 0, r = 0, i = ja.DEFAULT_ORDER){
            this.isEuler = !0, this._x = e, this._y = n, this._z = r, this._order = i;
        }
        get x() {
            return this._x;
        }
        set x(e) {
            this._x = e, this._onChangeCallback();
        }
        get y() {
            return this._y;
        }
        set y(e) {
            this._y = e, this._onChangeCallback();
        }
        get z() {
            return this._z;
        }
        set z(e) {
            this._z = e, this._onChangeCallback();
        }
        get order() {
            return this._order;
        }
        set order(e) {
            this._order = e, this._onChangeCallback();
        }
        set(e, n, r, i = this._order) {
            return this._x = e, this._y = n, this._z = r, this._order = i, this._onChangeCallback(), this;
        }
        clone() {
            return new this.constructor(this._x, this._y, this._z, this._order);
        }
        copy(e) {
            return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this;
        }
        setFromRotationMatrix(e, n = this._order, r = !0) {
            const i = e.elements, s = i[0], o = i[4], a = i[8], l = i[1], c = i[5], u = i[9], f = i[2], p = i[6], g = i[10];
            switch(n){
                case "XYZ":
                    this._y = Math.asin(_n(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(-u, g), this._z = Math.atan2(-o, s)) : (this._x = Math.atan2(p, c), this._z = 0);
                    break;
                case "YXZ":
                    this._x = Math.asin(-_n(u, -1, 1)), Math.abs(u) < .9999999 ? (this._y = Math.atan2(a, g), this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-f, s), this._z = 0);
                    break;
                case "ZXY":
                    this._x = Math.asin(_n(p, -1, 1)), Math.abs(p) < .9999999 ? (this._y = Math.atan2(-f, g), this._z = Math.atan2(-o, c)) : (this._y = 0, this._z = Math.atan2(l, s));
                    break;
                case "ZYX":
                    this._y = Math.asin(-_n(f, -1, 1)), Math.abs(f) < .9999999 ? (this._x = Math.atan2(p, g), this._z = Math.atan2(l, s)) : (this._x = 0, this._z = Math.atan2(-o, c));
                    break;
                case "YZX":
                    this._z = Math.asin(_n(l, -1, 1)), Math.abs(l) < .9999999 ? (this._x = Math.atan2(-u, c), this._y = Math.atan2(-f, s)) : (this._x = 0, this._y = Math.atan2(a, g));
                    break;
                case "XZY":
                    this._z = Math.asin(-_n(o, -1, 1)), Math.abs(o) < .9999999 ? (this._x = Math.atan2(p, c), this._y = Math.atan2(a, s)) : (this._x = Math.atan2(-u, g), this._y = 0);
                    break;
                default:
                    console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + n);
            }
            return this._order = n, r === !0 && this._onChangeCallback(), this;
        }
        setFromQuaternion(e, n, r) {
            return vU.makeRotationFromQuaternion(e), this.setFromRotationMatrix(vU, n, r);
        }
        setFromVector3(e, n = this._order) {
            return this.set(e.x, e.y, e.z, n);
        }
        reorder(e) {
            return xU.setFromEuler(this), this.setFromQuaternion(xU, e);
        }
        equals(e) {
            return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
        }
        fromArray(e) {
            return this._x = e[0], this._y = e[1], this._z = e[2], e[3] !== void 0 && (this._order = e[3]), this._onChangeCallback(), this;
        }
        toArray(e = [], n = 0) {
            return e[n] = this._x, e[n + 1] = this._y, e[n + 2] = this._z, e[n + 3] = this._order, e;
        }
        _onChange(e) {
            return this._onChangeCallback = e, this;
        }
        _onChangeCallback() {}
        *[Symbol.iterator]() {
            yield this._x, yield this._y, yield this._z, yield this._order;
        }
    }
    ja.DEFAULT_ORDER = "XYZ";
    class qp {
        constructor(){
            this.mask = 1;
        }
        set(e) {
            this.mask = (1 << e | 0) >>> 0;
        }
        enable(e) {
            this.mask |= 1 << e | 0;
        }
        enableAll() {
            this.mask = -1;
        }
        toggle(e) {
            this.mask ^= 1 << e | 0;
        }
        disable(e) {
            this.mask &= ~(1 << e | 0);
        }
        disableAll() {
            this.mask = 0;
        }
        test(e) {
            return (this.mask & e.mask) !== 0;
        }
        isEnabled(e) {
            return (this.mask & (1 << e | 0)) !== 0;
        }
    }
    let cge = 0;
    const bU = new ye, Rg = new Xs, zu = new fn, rS = new ye, Cx = new ye, uge = new ye, dge = new Xs, wU = new ye(1, 0, 0), _U = new ye(0, 1, 0), SU = new ye(0, 0, 1), EU = {
        type: "added"
    }, fge = {
        type: "removed"
    }, Ag = {
        type: "childadded",
        child: null
    }, $A = {
        type: "childremoved",
        child: null
    };
    class ir extends Jc {
        constructor(){
            super(), this.isObject3D = !0, Object.defineProperty(this, "id", {
                value: cge++
            }), this.uuid = ka(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = ir.DEFAULT_UP.clone();
            const e = new ye, n = new ja, r = new Xs, i = new ye(1, 1, 1);
            function s() {
                r.setFromEuler(n, !1);
            }
            function o() {
                n.setFromQuaternion(r, void 0, !1);
            }
            n._onChange(s), r._onChange(o), Object.defineProperties(this, {
                position: {
                    configurable: !0,
                    enumerable: !0,
                    value: e
                },
                rotation: {
                    configurable: !0,
                    enumerable: !0,
                    value: n
                },
                quaternion: {
                    configurable: !0,
                    enumerable: !0,
                    value: r
                },
                scale: {
                    configurable: !0,
                    enumerable: !0,
                    value: i
                },
                modelViewMatrix: {
                    value: new fn
                },
                normalMatrix: {
                    value: new Mn
                }
            }), this.matrix = new fn, this.matrixWorld = new fn, this.matrixAutoUpdate = ir.DEFAULT_MATRIX_AUTO_UPDATE, this.matrixWorldAutoUpdate = ir.DEFAULT_MATRIX_WORLD_AUTO_UPDATE, this.matrixWorldNeedsUpdate = !1, this.layers = new qp, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.animations = [], this.userData = {};
        }
        onBeforeShadow() {}
        onAfterShadow() {}
        onBeforeRender() {}
        onAfterRender() {}
        applyMatrix4(e) {
            this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale);
        }
        applyQuaternion(e) {
            return this.quaternion.premultiply(e), this;
        }
        setRotationFromAxisAngle(e, n) {
            this.quaternion.setFromAxisAngle(e, n);
        }
        setRotationFromEuler(e) {
            this.quaternion.setFromEuler(e, !0);
        }
        setRotationFromMatrix(e) {
            this.quaternion.setFromRotationMatrix(e);
        }
        setRotationFromQuaternion(e) {
            this.quaternion.copy(e);
        }
        rotateOnAxis(e, n) {
            return Rg.setFromAxisAngle(e, n), this.quaternion.multiply(Rg), this;
        }
        rotateOnWorldAxis(e, n) {
            return Rg.setFromAxisAngle(e, n), this.quaternion.premultiply(Rg), this;
        }
        rotateX(e) {
            return this.rotateOnAxis(wU, e);
        }
        rotateY(e) {
            return this.rotateOnAxis(_U, e);
        }
        rotateZ(e) {
            return this.rotateOnAxis(SU, e);
        }
        translateOnAxis(e, n) {
            return bU.copy(e).applyQuaternion(this.quaternion), this.position.add(bU.multiplyScalar(n)), this;
        }
        translateX(e) {
            return this.translateOnAxis(wU, e);
        }
        translateY(e) {
            return this.translateOnAxis(_U, e);
        }
        translateZ(e) {
            return this.translateOnAxis(SU, e);
        }
        localToWorld(e) {
            return this.updateWorldMatrix(!0, !1), e.applyMatrix4(this.matrixWorld);
        }
        worldToLocal(e) {
            return this.updateWorldMatrix(!0, !1), e.applyMatrix4(zu.copy(this.matrixWorld).invert());
        }
        lookAt(e, n, r) {
            e.isVector3 ? rS.copy(e) : rS.set(e, n, r);
            const i = this.parent;
            this.updateWorldMatrix(!0, !1), Cx.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? zu.lookAt(Cx, rS, this.up) : zu.lookAt(rS, Cx, this.up), this.quaternion.setFromRotationMatrix(zu), i && (zu.extractRotation(i.matrixWorld), Rg.setFromRotationMatrix(zu), this.quaternion.premultiply(Rg.invert()));
        }
        add(e) {
            if (arguments.length > 1) {
                for(let n = 0; n < arguments.length; n++)this.add(arguments[n]);
                return this;
            }
            return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (e.removeFromParent(), e.parent = this, this.children.push(e), e.dispatchEvent(EU), Ag.child = e, this.dispatchEvent(Ag), Ag.child = null) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this);
        }
        remove(e) {
            if (arguments.length > 1) {
                for(let r = 0; r < arguments.length; r++)this.remove(arguments[r]);
                return this;
            }
            const n = this.children.indexOf(e);
            return n !== -1 && (e.parent = null, this.children.splice(n, 1), e.dispatchEvent(fge), $A.child = e, this.dispatchEvent($A), $A.child = null), this;
        }
        removeFromParent() {
            const e = this.parent;
            return e !== null && e.remove(this), this;
        }
        clear() {
            return this.remove(...this.children);
        }
        attach(e) {
            return this.updateWorldMatrix(!0, !1), zu.copy(this.matrixWorld).invert(), e.parent !== null && (e.parent.updateWorldMatrix(!0, !1), zu.multiply(e.parent.matrixWorld)), e.applyMatrix4(zu), e.removeFromParent(), e.parent = this, this.children.push(e), e.updateWorldMatrix(!1, !0), e.dispatchEvent(EU), Ag.child = e, this.dispatchEvent(Ag), Ag.child = null, this;
        }
        getObjectById(e) {
            return this.getObjectByProperty("id", e);
        }
        getObjectByName(e) {
            return this.getObjectByProperty("name", e);
        }
        getObjectByProperty(e, n) {
            if (this[e] === n) return this;
            for(let r = 0, i = this.children.length; r < i; r++){
                const o = this.children[r].getObjectByProperty(e, n);
                if (o !== void 0) return o;
            }
        }
        getObjectsByProperty(e, n, r = []) {
            this[e] === n && r.push(this);
            const i = this.children;
            for(let s = 0, o = i.length; s < o; s++)i[s].getObjectsByProperty(e, n, r);
            return r;
        }
        getWorldPosition(e) {
            return this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld);
        }
        getWorldQuaternion(e) {
            return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Cx, e, uge), e;
        }
        getWorldScale(e) {
            return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Cx, dge, e), e;
        }
        getWorldDirection(e) {
            this.updateWorldMatrix(!0, !1);
            const n = this.matrixWorld.elements;
            return e.set(n[8], n[9], n[10]).normalize();
        }
        raycast() {}
        traverse(e) {
            e(this);
            const n = this.children;
            for(let r = 0, i = n.length; r < i; r++)n[r].traverse(e);
        }
        traverseVisible(e) {
            if (this.visible === !1) return;
            e(this);
            const n = this.children;
            for(let r = 0, i = n.length; r < i; r++)n[r].traverseVisible(e);
        }
        traverseAncestors(e) {
            const n = this.parent;
            n !== null && (e(n), n.traverseAncestors(e));
        }
        updateMatrix() {
            this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
        }
        updateMatrixWorld(e) {
            this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.matrixWorldAutoUpdate === !0 && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix)), this.matrixWorldNeedsUpdate = !1, e = !0);
            const n = this.children;
            for(let r = 0, i = n.length; r < i; r++)n[r].updateMatrixWorld(e);
        }
        updateWorldMatrix(e, n) {
            const r = this.parent;
            if (e === !0 && r !== null && r.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), this.matrixWorldAutoUpdate === !0 && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix)), n === !0) {
                const i = this.children;
                for(let s = 0, o = i.length; s < o; s++)i[s].updateWorldMatrix(!1, !0);
            }
        }
        toJSON(e) {
            const n = e === void 0 || typeof e == "string", r = {};
            n && (e = {
                geometries: {},
                materials: {},
                textures: {},
                images: {},
                shapes: {},
                skeletons: {},
                animations: {},
                nodes: {}
            }, r.metadata = {
                version: 4.6,
                type: "Object",
                generator: "Object3D.toJSON"
            });
            const i = {};
            i.uuid = this.uuid, i.type = this.type, this.name !== "" && (i.name = this.name), this.castShadow === !0 && (i.castShadow = !0), this.receiveShadow === !0 && (i.receiveShadow = !0), this.visible === !1 && (i.visible = !1), this.frustumCulled === !1 && (i.frustumCulled = !1), this.renderOrder !== 0 && (i.renderOrder = this.renderOrder), Object.keys(this.userData).length > 0 && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), i.up = this.up.toArray(), this.matrixAutoUpdate === !1 && (i.matrixAutoUpdate = !1), this.isInstancedMesh && (i.type = "InstancedMesh", i.count = this.count, i.instanceMatrix = this.instanceMatrix.toJSON(), this.instanceColor !== null && (i.instanceColor = this.instanceColor.toJSON())), this.isBatchedMesh && (i.type = "BatchedMesh", i.perObjectFrustumCulled = this.perObjectFrustumCulled, i.sortObjects = this.sortObjects, i.drawRanges = this._drawRanges, i.reservedRanges = this._reservedRanges, i.visibility = this._visibility, i.active = this._active, i.bounds = this._bounds.map((a)=>({
                    boxInitialized: a.boxInitialized,
                    boxMin: a.box.min.toArray(),
                    boxMax: a.box.max.toArray(),
                    sphereInitialized: a.sphereInitialized,
                    sphereRadius: a.sphere.radius,
                    sphereCenter: a.sphere.center.toArray()
                })), i.maxInstanceCount = this._maxInstanceCount, i.maxVertexCount = this._maxVertexCount, i.maxIndexCount = this._maxIndexCount, i.geometryInitialized = this._geometryInitialized, i.geometryCount = this._geometryCount, i.matricesTexture = this._matricesTexture.toJSON(e), this._colorsTexture !== null && (i.colorsTexture = this._colorsTexture.toJSON(e)), this.boundingSphere !== null && (i.boundingSphere = {
                center: i.boundingSphere.center.toArray(),
                radius: i.boundingSphere.radius
            }), this.boundingBox !== null && (i.boundingBox = {
                min: i.boundingBox.min.toArray(),
                max: i.boundingBox.max.toArray()
            }));
            function s(a, l) {
                return a[l.uuid] === void 0 && (a[l.uuid] = l.toJSON(e)), l.uuid;
            }
            if (this.isScene) this.background && (this.background.isColor ? i.background = this.background.toJSON() : this.background.isTexture && (i.background = this.background.toJSON(e).uuid)), this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== !0 && (i.environment = this.environment.toJSON(e).uuid);
            else if (this.isMesh || this.isLine || this.isPoints) {
                i.geometry = s(e.geometries, this.geometry);
                const a = this.geometry.parameters;
                if (a !== void 0 && a.shapes !== void 0) {
                    const l = a.shapes;
                    if (Array.isArray(l)) for(let c = 0, u = l.length; c < u; c++){
                        const f = l[c];
                        s(e.shapes, f);
                    }
                    else s(e.shapes, l);
                }
            }
            if (this.isSkinnedMesh && (i.bindMode = this.bindMode, i.bindMatrix = this.bindMatrix.toArray(), this.skeleton !== void 0 && (s(e.skeletons, this.skeleton), i.skeleton = this.skeleton.uuid)), this.material !== void 0) if (Array.isArray(this.material)) {
                const a = [];
                for(let l = 0, c = this.material.length; l < c; l++)a.push(s(e.materials, this.material[l]));
                i.material = a;
            } else i.material = s(e.materials, this.material);
            if (this.children.length > 0) {
                i.children = [];
                for(let a = 0; a < this.children.length; a++)i.children.push(this.children[a].toJSON(e).object);
            }
            if (this.animations.length > 0) {
                i.animations = [];
                for(let a = 0; a < this.animations.length; a++){
                    const l = this.animations[a];
                    i.animations.push(s(e.animations, l));
                }
            }
            if (n) {
                const a = o(e.geometries), l = o(e.materials), c = o(e.textures), u = o(e.images), f = o(e.shapes), p = o(e.skeletons), g = o(e.animations), x = o(e.nodes);
                a.length > 0 && (r.geometries = a), l.length > 0 && (r.materials = l), c.length > 0 && (r.textures = c), u.length > 0 && (r.images = u), f.length > 0 && (r.shapes = f), p.length > 0 && (r.skeletons = p), g.length > 0 && (r.animations = g), x.length > 0 && (r.nodes = x);
            }
            return r.object = i, r;
            function o(a) {
                const l = [];
                for(const c in a){
                    const u = a[c];
                    delete u.metadata, l.push(u);
                }
                return l;
            }
        }
        clone(e) {
            return new this.constructor().copy(this, e);
        }
        copy(e, n = !0) {
            if (this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.animations = e.animations.slice(), this.userData = JSON.parse(JSON.stringify(e.userData)), n === !0) for(let r = 0; r < e.children.length; r++){
                const i = e.children[r];
                this.add(i.clone());
            }
            return this;
        }
    }
    ir.DEFAULT_UP = new ye(0, 1, 0);
    ir.DEFAULT_MATRIX_AUTO_UPDATE = !0;
    ir.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0;
    const Ul = new ye, Vu = new ye, GA = new ye, Wu = new ye, Ng = new ye, Pg = new ye, MU = new ye, XA = new ye, KA = new ye, YA = new ye, ZA = new rr, JA = new rr, QA = new rr;
    class Qo {
        constructor(e = new ye, n = new ye, r = new ye){
            this.a = e, this.b = n, this.c = r;
        }
        static getNormal(e, n, r, i) {
            i.subVectors(r, n), Ul.subVectors(e, n), i.cross(Ul);
            const s = i.lengthSq();
            return s > 0 ? i.multiplyScalar(1 / Math.sqrt(s)) : i.set(0, 0, 0);
        }
        static getBarycoord(e, n, r, i, s) {
            Ul.subVectors(i, n), Vu.subVectors(r, n), GA.subVectors(e, n);
            const o = Ul.dot(Ul), a = Ul.dot(Vu), l = Ul.dot(GA), c = Vu.dot(Vu), u = Vu.dot(GA), f = o * c - a * a;
            if (f === 0) return s.set(0, 0, 0), null;
            const p = 1 / f, g = (c * l - a * u) * p, x = (o * u - a * l) * p;
            return s.set(1 - g - x, x, g);
        }
        static containsPoint(e, n, r, i) {
            return this.getBarycoord(e, n, r, i, Wu) === null ? !1 : Wu.x >= 0 && Wu.y >= 0 && Wu.x + Wu.y <= 1;
        }
        static getInterpolation(e, n, r, i, s, o, a, l) {
            return this.getBarycoord(e, n, r, i, Wu) === null ? (l.x = 0, l.y = 0, "z" in l && (l.z = 0), "w" in l && (l.w = 0), null) : (l.setScalar(0), l.addScaledVector(s, Wu.x), l.addScaledVector(o, Wu.y), l.addScaledVector(a, Wu.z), l);
        }
        static getInterpolatedAttribute(e, n, r, i, s, o) {
            return ZA.setScalar(0), JA.setScalar(0), QA.setScalar(0), ZA.fromBufferAttribute(e, n), JA.fromBufferAttribute(e, r), QA.fromBufferAttribute(e, i), o.setScalar(0), o.addScaledVector(ZA, s.x), o.addScaledVector(JA, s.y), o.addScaledVector(QA, s.z), o;
        }
        static isFrontFacing(e, n, r, i) {
            return Ul.subVectors(r, n), Vu.subVectors(e, n), Ul.cross(Vu).dot(i) < 0;
        }
        set(e, n, r) {
            return this.a.copy(e), this.b.copy(n), this.c.copy(r), this;
        }
        setFromPointsAndIndices(e, n, r, i) {
            return this.a.copy(e[n]), this.b.copy(e[r]), this.c.copy(e[i]), this;
        }
        setFromAttributeAndIndices(e, n, r, i) {
            return this.a.fromBufferAttribute(e, n), this.b.fromBufferAttribute(e, r), this.c.fromBufferAttribute(e, i), this;
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
        }
        getArea() {
            return Ul.subVectors(this.c, this.b), Vu.subVectors(this.a, this.b), Ul.cross(Vu).length() * .5;
        }
        getMidpoint(e) {
            return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
        }
        getNormal(e) {
            return Qo.getNormal(this.a, this.b, this.c, e);
        }
        getPlane(e) {
            return e.setFromCoplanarPoints(this.a, this.b, this.c);
        }
        getBarycoord(e, n) {
            return Qo.getBarycoord(e, this.a, this.b, this.c, n);
        }
        getInterpolation(e, n, r, i, s) {
            return Qo.getInterpolation(e, this.a, this.b, this.c, n, r, i, s);
        }
        containsPoint(e) {
            return Qo.containsPoint(e, this.a, this.b, this.c);
        }
        isFrontFacing(e) {
            return Qo.isFrontFacing(this.a, this.b, this.c, e);
        }
        intersectsBox(e) {
            return e.intersectsTriangle(this);
        }
        closestPointToPoint(e, n) {
            const r = this.a, i = this.b, s = this.c;
            let o, a;
            Ng.subVectors(i, r), Pg.subVectors(s, r), XA.subVectors(e, r);
            const l = Ng.dot(XA), c = Pg.dot(XA);
            if (l <= 0 && c <= 0) return n.copy(r);
            KA.subVectors(e, i);
            const u = Ng.dot(KA), f = Pg.dot(KA);
            if (u >= 0 && f <= u) return n.copy(i);
            const p = l * f - u * c;
            if (p <= 0 && l >= 0 && u <= 0) return o = l / (l - u), n.copy(r).addScaledVector(Ng, o);
            YA.subVectors(e, s);
            const g = Ng.dot(YA), x = Pg.dot(YA);
            if (x >= 0 && g <= x) return n.copy(s);
            const S = g * c - l * x;
            if (S <= 0 && c >= 0 && x <= 0) return a = c / (c - x), n.copy(r).addScaledVector(Pg, a);
            const _ = u * x - g * f;
            if (_ <= 0 && f - u >= 0 && g - x >= 0) return MU.subVectors(s, i), a = (f - u) / (f - u + (g - x)), n.copy(i).addScaledVector(MU, a);
            const b = 1 / (_ + S + p);
            return o = S * b, a = p * b, n.copy(r).addScaledVector(Ng, o).addScaledVector(Pg, a);
        }
        equals(e) {
            return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
        }
    }
    const P6 = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    }, mf = {
        h: 0,
        s: 0,
        l: 0
    }, iS = {
        h: 0,
        s: 0,
        l: 0
    };
    function eN(t, e, n) {
        return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? t + (e - t) * 6 * n : n < 1 / 2 ? e : n < 2 / 3 ? t + (e - t) * 6 * (2 / 3 - n) : t;
    }
    class Ft {
        constructor(e, n, r){
            return this.isColor = !0, this.r = 1, this.g = 1, this.b = 1, this.set(e, n, r);
        }
        set(e, n, r) {
            if (n === void 0 && r === void 0) {
                const i = e;
                i && i.isColor ? this.copy(i) : typeof i == "number" ? this.setHex(i) : typeof i == "string" && this.setStyle(i);
            } else this.setRGB(e, n, r);
            return this;
        }
        setScalar(e) {
            return this.r = e, this.g = e, this.b = e, this;
        }
        setHex(e, n = Jo) {
            return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (e & 255) / 255, Zn.toWorkingColorSpace(this, n), this;
        }
        setRGB(e, n, r, i = Zn.workingColorSpace) {
            return this.r = e, this.g = n, this.b = r, Zn.toWorkingColorSpace(this, i), this;
        }
        setHSL(e, n, r, i = Zn.workingColorSpace) {
            if (e = p2(e, 1), n = _n(n, 0, 1), r = _n(r, 0, 1), n === 0) this.r = this.g = this.b = r;
            else {
                const s = r <= .5 ? r * (1 + n) : r + n - r * n, o = 2 * r - s;
                this.r = eN(o, s, e + 1 / 3), this.g = eN(o, s, e), this.b = eN(o, s, e - 1 / 3);
            }
            return Zn.toWorkingColorSpace(this, i), this;
        }
        setStyle(e, n = Jo) {
            function r(s) {
                s !== void 0 && parseFloat(s) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.");
            }
            let i;
            if (i = /^(\w+)\(([^\)]*)\)/.exec(e)) {
                let s;
                const o = i[1], a = i[2];
                switch(o){
                    case "rgb":
                    case "rgba":
                        if (s = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) return r(s[4]), this.setRGB(Math.min(255, parseInt(s[1], 10)) / 255, Math.min(255, parseInt(s[2], 10)) / 255, Math.min(255, parseInt(s[3], 10)) / 255, n);
                        if (s = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) return r(s[4]), this.setRGB(Math.min(100, parseInt(s[1], 10)) / 100, Math.min(100, parseInt(s[2], 10)) / 100, Math.min(100, parseInt(s[3], 10)) / 100, n);
                        break;
                    case "hsl":
                    case "hsla":
                        if (s = /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) return r(s[4]), this.setHSL(parseFloat(s[1]) / 360, parseFloat(s[2]) / 100, parseFloat(s[3]) / 100, n);
                        break;
                    default:
                        console.warn("THREE.Color: Unknown color model " + e);
                }
            } else if (i = /^\#([A-Fa-f\d]+)$/.exec(e)) {
                const s = i[1], o = s.length;
                if (o === 3) return this.setRGB(parseInt(s.charAt(0), 16) / 15, parseInt(s.charAt(1), 16) / 15, parseInt(s.charAt(2), 16) / 15, n);
                if (o === 6) return this.setHex(parseInt(s, 16), n);
                console.warn("THREE.Color: Invalid hex color " + e);
            } else if (e && e.length > 0) return this.setColorName(e, n);
            return this;
        }
        setColorName(e, n = Jo) {
            const r = P6[e.toLowerCase()];
            return r !== void 0 ? this.setHex(r, n) : console.warn("THREE.Color: Unknown color " + e), this;
        }
        clone() {
            return new this.constructor(this.r, this.g, this.b);
        }
        copy(e) {
            return this.r = e.r, this.g = e.g, this.b = e.b, this;
        }
        copySRGBToLinear(e) {
            return this.r = od(e.r), this.g = od(e.g), this.b = od(e.b), this;
        }
        copyLinearToSRGB(e) {
            return this.r = ky(e.r), this.g = ky(e.g), this.b = ky(e.b), this;
        }
        convertSRGBToLinear() {
            return this.copySRGBToLinear(this), this;
        }
        convertLinearToSRGB() {
            return this.copyLinearToSRGB(this), this;
        }
        getHex(e = Jo) {
            return Zn.fromWorkingColorSpace(Us.copy(this), e), Math.round(_n(Us.r * 255, 0, 255)) * 65536 + Math.round(_n(Us.g * 255, 0, 255)) * 256 + Math.round(_n(Us.b * 255, 0, 255));
        }
        getHexString(e = Jo) {
            return ("000000" + this.getHex(e).toString(16)).slice(-6);
        }
        getHSL(e, n = Zn.workingColorSpace) {
            Zn.fromWorkingColorSpace(Us.copy(this), n);
            const r = Us.r, i = Us.g, s = Us.b, o = Math.max(r, i, s), a = Math.min(r, i, s);
            let l, c;
            const u = (a + o) / 2;
            if (a === o) l = 0, c = 0;
            else {
                const f = o - a;
                switch(c = u <= .5 ? f / (o + a) : f / (2 - o - a), o){
                    case r:
                        l = (i - s) / f + (i < s ? 6 : 0);
                        break;
                    case i:
                        l = (s - r) / f + 2;
                        break;
                    case s:
                        l = (r - i) / f + 4;
                        break;
                }
                l /= 6;
            }
            return e.h = l, e.s = c, e.l = u, e;
        }
        getRGB(e, n = Zn.workingColorSpace) {
            return Zn.fromWorkingColorSpace(Us.copy(this), n), e.r = Us.r, e.g = Us.g, e.b = Us.b, e;
        }
        getStyle(e = Jo) {
            Zn.fromWorkingColorSpace(Us.copy(this), e);
            const n = Us.r, r = Us.g, i = Us.b;
            return e !== Jo ? `color(${e} ${n.toFixed(3)} ${r.toFixed(3)} ${i.toFixed(3)})` : `rgb(${Math.round(n * 255)},${Math.round(r * 255)},${Math.round(i * 255)})`;
        }
        offsetHSL(e, n, r) {
            return this.getHSL(mf), this.setHSL(mf.h + e, mf.s + n, mf.l + r);
        }
        add(e) {
            return this.r += e.r, this.g += e.g, this.b += e.b, this;
        }
        addColors(e, n) {
            return this.r = e.r + n.r, this.g = e.g + n.g, this.b = e.b + n.b, this;
        }
        addScalar(e) {
            return this.r += e, this.g += e, this.b += e, this;
        }
        sub(e) {
            return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;
        }
        multiply(e) {
            return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;
        }
        multiplyScalar(e) {
            return this.r *= e, this.g *= e, this.b *= e, this;
        }
        lerp(e, n) {
            return this.r += (e.r - this.r) * n, this.g += (e.g - this.g) * n, this.b += (e.b - this.b) * n, this;
        }
        lerpColors(e, n, r) {
            return this.r = e.r + (n.r - e.r) * r, this.g = e.g + (n.g - e.g) * r, this.b = e.b + (n.b - e.b) * r, this;
        }
        lerpHSL(e, n) {
            this.getHSL(mf), e.getHSL(iS);
            const r = A0(mf.h, iS.h, n), i = A0(mf.s, iS.s, n), s = A0(mf.l, iS.l, n);
            return this.setHSL(r, i, s), this;
        }
        setFromVector3(e) {
            return this.r = e.x, this.g = e.y, this.b = e.z, this;
        }
        applyMatrix3(e) {
            const n = this.r, r = this.g, i = this.b, s = e.elements;
            return this.r = s[0] * n + s[3] * r + s[6] * i, this.g = s[1] * n + s[4] * r + s[7] * i, this.b = s[2] * n + s[5] * r + s[8] * i, this;
        }
        equals(e) {
            return e.r === this.r && e.g === this.g && e.b === this.b;
        }
        fromArray(e, n = 0) {
            return this.r = e[n], this.g = e[n + 1], this.b = e[n + 2], this;
        }
        toArray(e = [], n = 0) {
            return e[n] = this.r, e[n + 1] = this.g, e[n + 2] = this.b, e;
        }
        fromBufferAttribute(e, n) {
            return this.r = e.getX(n), this.g = e.getY(n), this.b = e.getZ(n), this;
        }
        toJSON() {
            return this.getHex();
        }
        *[Symbol.iterator]() {
            yield this.r, yield this.g, yield this.b;
        }
    }
    const Us = new Ft;
    Ft.NAMES = P6;
    let hge = 0;
    class no extends Jc {
        constructor(){
            super(), this.isMaterial = !0, Object.defineProperty(this, "id", {
                value: hge++
            }), this.uuid = ka(), this.name = "", this.type = "Material", this.blending = zp, this.side = md, this.vertexColors = !1, this.opacity = 1, this.transparent = !1, this.alphaHash = !1, this.blendSrc = ZE, this.blendDst = JE, this.blendEquation = Nf, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.blendColor = new Ft(0, 0, 0), this.blendAlpha = 0, this.depthFunc = sm, this.depthTest = !0, this.depthWrite = !0, this.stencilWriteMask = 255, this.stencilFunc = fk, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = vp, this.stencilZFail = vp, this.stencilZPass = vp, this.stencilWrite = !1, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaToCoverage = !1, this.premultipliedAlpha = !1, this.forceSinglePass = !1, this.visible = !0, this.toneMapped = !0, this.userData = {}, this.version = 0, this._alphaTest = 0;
        }
        get alphaTest() {
            return this._alphaTest;
        }
        set alphaTest(e) {
            this._alphaTest > 0 != e > 0 && this.version++, this._alphaTest = e;
        }
        onBeforeRender() {}
        onBeforeCompile() {}
        customProgramCacheKey() {
            return this.onBeforeCompile.toString();
        }
        setValues(e) {
            if (e !== void 0) for(const n in e){
                const r = e[n];
                if (r === void 0) {
                    console.warn(`THREE.Material: parameter '${n}' has value of undefined.`);
                    continue;
                }
                const i = this[n];
                if (i === void 0) {
                    console.warn(`THREE.Material: '${n}' is not a property of THREE.${this.type}.`);
                    continue;
                }
                i && i.isColor ? i.set(r) : i && i.isVector3 && r && r.isVector3 ? i.copy(r) : this[n] = r;
            }
        }
        toJSON(e) {
            const n = e === void 0 || typeof e == "string";
            n && (e = {
                textures: {},
                images: {}
            });
            const r = {
                metadata: {
                    version: 4.6,
                    type: "Material",
                    generator: "Material.toJSON"
                }
            };
            r.uuid = this.uuid, r.type = this.type, this.name !== "" && (r.name = this.name), this.color && this.color.isColor && (r.color = this.color.getHex()), this.roughness !== void 0 && (r.roughness = this.roughness), this.metalness !== void 0 && (r.metalness = this.metalness), this.sheen !== void 0 && (r.sheen = this.sheen), this.sheenColor && this.sheenColor.isColor && (r.sheenColor = this.sheenColor.getHex()), this.sheenRoughness !== void 0 && (r.sheenRoughness = this.sheenRoughness), this.emissive && this.emissive.isColor && (r.emissive = this.emissive.getHex()), this.emissiveIntensity !== void 0 && this.emissiveIntensity !== 1 && (r.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (r.specular = this.specular.getHex()), this.specularIntensity !== void 0 && (r.specularIntensity = this.specularIntensity), this.specularColor && this.specularColor.isColor && (r.specularColor = this.specularColor.getHex()), this.shininess !== void 0 && (r.shininess = this.shininess), this.clearcoat !== void 0 && (r.clearcoat = this.clearcoat), this.clearcoatRoughness !== void 0 && (r.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (r.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (r.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (r.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, r.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.dispersion !== void 0 && (r.dispersion = this.dispersion), this.iridescence !== void 0 && (r.iridescence = this.iridescence), this.iridescenceIOR !== void 0 && (r.iridescenceIOR = this.iridescenceIOR), this.iridescenceThicknessRange !== void 0 && (r.iridescenceThicknessRange = this.iridescenceThicknessRange), this.iridescenceMap && this.iridescenceMap.isTexture && (r.iridescenceMap = this.iridescenceMap.toJSON(e).uuid), this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture && (r.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON(e).uuid), this.anisotropy !== void 0 && (r.anisotropy = this.anisotropy), this.anisotropyRotation !== void 0 && (r.anisotropyRotation = this.anisotropyRotation), this.anisotropyMap && this.anisotropyMap.isTexture && (r.anisotropyMap = this.anisotropyMap.toJSON(e).uuid), this.map && this.map.isTexture && (r.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (r.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (r.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (r.lightMap = this.lightMap.toJSON(e).uuid, r.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (r.aoMap = this.aoMap.toJSON(e).uuid, r.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (r.bumpMap = this.bumpMap.toJSON(e).uuid, r.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (r.normalMap = this.normalMap.toJSON(e).uuid, r.normalMapType = this.normalMapType, r.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (r.displacementMap = this.displacementMap.toJSON(e).uuid, r.displacementScale = this.displacementScale, r.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (r.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (r.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (r.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (r.specularMap = this.specularMap.toJSON(e).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (r.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid), this.specularColorMap && this.specularColorMap.isTexture && (r.specularColorMap = this.specularColorMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (r.envMap = this.envMap.toJSON(e).uuid, this.combine !== void 0 && (r.combine = this.combine)), this.envMapRotation !== void 0 && (r.envMapRotation = this.envMapRotation.toArray()), this.envMapIntensity !== void 0 && (r.envMapIntensity = this.envMapIntensity), this.reflectivity !== void 0 && (r.reflectivity = this.reflectivity), this.refractionRatio !== void 0 && (r.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (r.gradientMap = this.gradientMap.toJSON(e).uuid), this.transmission !== void 0 && (r.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (r.transmissionMap = this.transmissionMap.toJSON(e).uuid), this.thickness !== void 0 && (r.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (r.thicknessMap = this.thicknessMap.toJSON(e).uuid), this.attenuationDistance !== void 0 && this.attenuationDistance !== 1 / 0 && (r.attenuationDistance = this.attenuationDistance), this.attenuationColor !== void 0 && (r.attenuationColor = this.attenuationColor.getHex()), this.size !== void 0 && (r.size = this.size), this.shadowSide !== null && (r.shadowSide = this.shadowSide), this.sizeAttenuation !== void 0 && (r.sizeAttenuation = this.sizeAttenuation), this.blending !== zp && (r.blending = this.blending), this.side !== md && (r.side = this.side), this.vertexColors === !0 && (r.vertexColors = !0), this.opacity < 1 && (r.opacity = this.opacity), this.transparent === !0 && (r.transparent = !0), this.blendSrc !== ZE && (r.blendSrc = this.blendSrc), this.blendDst !== JE && (r.blendDst = this.blendDst), this.blendEquation !== Nf && (r.blendEquation = this.blendEquation), this.blendSrcAlpha !== null && (r.blendSrcAlpha = this.blendSrcAlpha), this.blendDstAlpha !== null && (r.blendDstAlpha = this.blendDstAlpha), this.blendEquationAlpha !== null && (r.blendEquationAlpha = this.blendEquationAlpha), this.blendColor && this.blendColor.isColor && (r.blendColor = this.blendColor.getHex()), this.blendAlpha !== 0 && (r.blendAlpha = this.blendAlpha), this.depthFunc !== sm && (r.depthFunc = this.depthFunc), this.depthTest === !1 && (r.depthTest = this.depthTest), this.depthWrite === !1 && (r.depthWrite = this.depthWrite), this.colorWrite === !1 && (r.colorWrite = this.colorWrite), this.stencilWriteMask !== 255 && (r.stencilWriteMask = this.stencilWriteMask), this.stencilFunc !== fk && (r.stencilFunc = this.stencilFunc), this.stencilRef !== 0 && (r.stencilRef = this.stencilRef), this.stencilFuncMask !== 255 && (r.stencilFuncMask = this.stencilFuncMask), this.stencilFail !== vp && (r.stencilFail = this.stencilFail), this.stencilZFail !== vp && (r.stencilZFail = this.stencilZFail), this.stencilZPass !== vp && (r.stencilZPass = this.stencilZPass), this.stencilWrite === !0 && (r.stencilWrite = this.stencilWrite), this.rotation !== void 0 && this.rotation !== 0 && (r.rotation = this.rotation), this.polygonOffset === !0 && (r.polygonOffset = !0), this.polygonOffsetFactor !== 0 && (r.polygonOffsetFactor = this.polygonOffsetFactor), this.polygonOffsetUnits !== 0 && (r.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth !== void 0 && this.linewidth !== 1 && (r.linewidth = this.linewidth), this.dashSize !== void 0 && (r.dashSize = this.dashSize), this.gapSize !== void 0 && (r.gapSize = this.gapSize), this.scale !== void 0 && (r.scale = this.scale), this.dithering === !0 && (r.dithering = !0), this.alphaTest > 0 && (r.alphaTest = this.alphaTest), this.alphaHash === !0 && (r.alphaHash = !0), this.alphaToCoverage === !0 && (r.alphaToCoverage = !0), this.premultipliedAlpha === !0 && (r.premultipliedAlpha = !0), this.forceSinglePass === !0 && (r.forceSinglePass = !0), this.wireframe === !0 && (r.wireframe = !0), this.wireframeLinewidth > 1 && (r.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (r.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (r.wireframeLinejoin = this.wireframeLinejoin), this.flatShading === !0 && (r.flatShading = !0), this.visible === !1 && (r.visible = !1), this.toneMapped === !1 && (r.toneMapped = !1), this.fog === !1 && (r.fog = !1), Object.keys(this.userData).length > 0 && (r.userData = this.userData);
            function i(s) {
                const o = [];
                for(const a in s){
                    const l = s[a];
                    delete l.metadata, o.push(l);
                }
                return o;
            }
            if (n) {
                const s = i(e.textures), o = i(e.images);
                s.length > 0 && (r.textures = s), o.length > 0 && (r.images = o);
            }
            return r;
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            this.name = e.name, this.blending = e.blending, this.side = e.side, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.blendColor.copy(e.blendColor), this.blendAlpha = e.blendAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
            const n = e.clippingPlanes;
            let r = null;
            if (n !== null) {
                const i = n.length;
                r = new Array(i);
                for(let s = 0; s !== i; ++s)r[s] = n[s].clone();
            }
            return this.clippingPlanes = r, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.alphaHash = e.alphaHash, this.alphaToCoverage = e.alphaToCoverage, this.premultipliedAlpha = e.premultipliedAlpha, this.forceSinglePass = e.forceSinglePass, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
        }
        dispose() {
            this.dispatchEvent({
                type: "dispose"
            });
        }
        set needsUpdate(e) {
            e === !0 && this.version++;
        }
        onBuild() {
            console.warn("Material: onBuild() has been removed.");
        }
    }
    class sh extends no {
        constructor(e){
            super(), this.isMeshBasicMaterial = !0, this.type = "MeshBasicMaterial", this.color = new Ft(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.envMapRotation = new ja, this.combine = uw, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapRotation.copy(e.envMapRotation), this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.fog = e.fog, this;
        }
    }
    const Ju = pge();
    function pge() {
        const t = new ArrayBuffer(4), e = new Float32Array(t), n = new Uint32Array(t), r = new Uint32Array(512), i = new Uint32Array(512);
        for(let l = 0; l < 256; ++l){
            const c = l - 127;
            c < -27 ? (r[l] = 0, r[l | 256] = 32768, i[l] = 24, i[l | 256] = 24) : c < -14 ? (r[l] = 1024 >> -c - 14, r[l | 256] = 1024 >> -c - 14 | 32768, i[l] = -c - 1, i[l | 256] = -c - 1) : c <= 15 ? (r[l] = c + 15 << 10, r[l | 256] = c + 15 << 10 | 32768, i[l] = 13, i[l | 256] = 13) : c < 128 ? (r[l] = 31744, r[l | 256] = 64512, i[l] = 24, i[l | 256] = 24) : (r[l] = 31744, r[l | 256] = 64512, i[l] = 13, i[l | 256] = 13);
        }
        const s = new Uint32Array(2048), o = new Uint32Array(64), a = new Uint32Array(64);
        for(let l = 1; l < 1024; ++l){
            let c = l << 13, u = 0;
            for(; !(c & 8388608);)c <<= 1, u -= 8388608;
            c &= -8388609, u += 947912704, s[l] = c | u;
        }
        for(let l = 1024; l < 2048; ++l)s[l] = 939524096 + (l - 1024 << 13);
        for(let l = 1; l < 31; ++l)o[l] = l << 23;
        o[31] = 1199570944, o[32] = 2147483648;
        for(let l = 33; l < 63; ++l)o[l] = 2147483648 + (l - 32 << 23);
        o[63] = 3347054592;
        for(let l = 1; l < 64; ++l)l !== 32 && (a[l] = 1024);
        return {
            floatView: e,
            uint32View: n,
            baseTable: r,
            shiftTable: i,
            mantissaTable: s,
            exponentTable: o,
            offsetTable: a
        };
    }
    function $o(t) {
        Math.abs(t) > 65504 && console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."), t = _n(t, -65504, 65504), Ju.floatView[0] = t;
        const e = Ju.uint32View[0], n = e >> 23 & 511;
        return Ju.baseTable[n] + ((e & 8388607) >> Ju.shiftTable[n]);
    }
    function Zx(t) {
        const e = t >> 10;
        return Ju.uint32View[0] = Ju.mantissaTable[Ju.offsetTable[e] + (t & 1023)] + Ju.exponentTable[e], Ju.floatView[0];
    }
    const mge = {
        toHalfFloat: $o,
        fromHalfFloat: Zx
    }, Fi = new ye, sS = new ot;
    let gge = 0;
    class wr {
        constructor(e, n, r = !1){
            if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
            this.isBufferAttribute = !0, Object.defineProperty(this, "id", {
                value: gge++
            }), this.name = "", this.array = e, this.itemSize = n, this.count = e !== void 0 ? e.length / n : 0, this.normalized = r, this.usage = Eb, this.updateRanges = [], this.gpuType = na, this.version = 0;
        }
        onUploadCallback() {}
        set needsUpdate(e) {
            e === !0 && this.version++;
        }
        setUsage(e) {
            return this.usage = e, this;
        }
        addUpdateRange(e, n) {
            this.updateRanges.push({
                start: e,
                count: n
            });
        }
        clearUpdateRanges() {
            this.updateRanges.length = 0;
        }
        copy(e) {
            return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this.gpuType = e.gpuType, this;
        }
        copyAt(e, n, r) {
            e *= this.itemSize, r *= n.itemSize;
            for(let i = 0, s = this.itemSize; i < s; i++)this.array[e + i] = n.array[r + i];
            return this;
        }
        copyArray(e) {
            return this.array.set(e), this;
        }
        applyMatrix3(e) {
            if (this.itemSize === 2) for(let n = 0, r = this.count; n < r; n++)sS.fromBufferAttribute(this, n), sS.applyMatrix3(e), this.setXY(n, sS.x, sS.y);
            else if (this.itemSize === 3) for(let n = 0, r = this.count; n < r; n++)Fi.fromBufferAttribute(this, n), Fi.applyMatrix3(e), this.setXYZ(n, Fi.x, Fi.y, Fi.z);
            return this;
        }
        applyMatrix4(e) {
            for(let n = 0, r = this.count; n < r; n++)Fi.fromBufferAttribute(this, n), Fi.applyMatrix4(e), this.setXYZ(n, Fi.x, Fi.y, Fi.z);
            return this;
        }
        applyNormalMatrix(e) {
            for(let n = 0, r = this.count; n < r; n++)Fi.fromBufferAttribute(this, n), Fi.applyNormalMatrix(e), this.setXYZ(n, Fi.x, Fi.y, Fi.z);
            return this;
        }
        transformDirection(e) {
            for(let n = 0, r = this.count; n < r; n++)Fi.fromBufferAttribute(this, n), Fi.transformDirection(e), this.setXYZ(n, Fi.x, Fi.y, Fi.z);
            return this;
        }
        set(e, n = 0) {
            return this.array.set(e, n), this;
        }
        getComponent(e, n) {
            let r = this.array[e * this.itemSize + n];
            return this.normalized && (r = Mo(r, this.array)), r;
        }
        setComponent(e, n, r) {
            return this.normalized && (r = In(r, this.array)), this.array[e * this.itemSize + n] = r, this;
        }
        getX(e) {
            let n = this.array[e * this.itemSize];
            return this.normalized && (n = Mo(n, this.array)), n;
        }
        setX(e, n) {
            return this.normalized && (n = In(n, this.array)), this.array[e * this.itemSize] = n, this;
        }
        getY(e) {
            let n = this.array[e * this.itemSize + 1];
            return this.normalized && (n = Mo(n, this.array)), n;
        }
        setY(e, n) {
            return this.normalized && (n = In(n, this.array)), this.array[e * this.itemSize + 1] = n, this;
        }
        getZ(e) {
            let n = this.array[e * this.itemSize + 2];
            return this.normalized && (n = Mo(n, this.array)), n;
        }
        setZ(e, n) {
            return this.normalized && (n = In(n, this.array)), this.array[e * this.itemSize + 2] = n, this;
        }
        getW(e) {
            let n = this.array[e * this.itemSize + 3];
            return this.normalized && (n = Mo(n, this.array)), n;
        }
        setW(e, n) {
            return this.normalized && (n = In(n, this.array)), this.array[e * this.itemSize + 3] = n, this;
        }
        setXY(e, n, r) {
            return e *= this.itemSize, this.normalized && (n = In(n, this.array), r = In(r, this.array)), this.array[e + 0] = n, this.array[e + 1] = r, this;
        }
        setXYZ(e, n, r, i) {
            return e *= this.itemSize, this.normalized && (n = In(n, this.array), r = In(r, this.array), i = In(i, this.array)), this.array[e + 0] = n, this.array[e + 1] = r, this.array[e + 2] = i, this;
        }
        setXYZW(e, n, r, i, s) {
            return e *= this.itemSize, this.normalized && (n = In(n, this.array), r = In(r, this.array), i = In(i, this.array), s = In(s, this.array)), this.array[e + 0] = n, this.array[e + 1] = r, this.array[e + 2] = i, this.array[e + 3] = s, this;
        }
        onUpload(e) {
            return this.onUploadCallback = e, this;
        }
        clone() {
            return new this.constructor(this.array, this.itemSize).copy(this);
        }
        toJSON() {
            const e = {
                itemSize: this.itemSize,
                type: this.array.constructor.name,
                array: Array.from(this.array),
                normalized: this.normalized
            };
            return this.name !== "" && (e.name = this.name), this.usage !== Eb && (e.usage = this.usage), e;
        }
    }
    class yge extends wr {
        constructor(e, n, r){
            super(new Int8Array(e), n, r);
        }
    }
    class vge extends wr {
        constructor(e, n, r){
            super(new Uint8Array(e), n, r);
        }
    }
    class xge extends wr {
        constructor(e, n, r){
            super(new Uint8ClampedArray(e), n, r);
        }
    }
    class bge extends wr {
        constructor(e, n, r){
            super(new Int16Array(e), n, r);
        }
    }
    class m2 extends wr {
        constructor(e, n, r){
            super(new Uint16Array(e), n, r);
        }
    }
    class wge extends wr {
        constructor(e, n, r){
            super(new Int32Array(e), n, r);
        }
    }
    class g2 extends wr {
        constructor(e, n, r){
            super(new Uint32Array(e), n, r);
        }
    }
    class _ge extends wr {
        constructor(e, n, r){
            super(new Uint16Array(e), n, r), this.isFloat16BufferAttribute = !0;
        }
        getX(e) {
            let n = Zx(this.array[e * this.itemSize]);
            return this.normalized && (n = Mo(n, this.array)), n;
        }
        setX(e, n) {
            return this.normalized && (n = In(n, this.array)), this.array[e * this.itemSize] = $o(n), this;
        }
        getY(e) {
            let n = Zx(this.array[e * this.itemSize + 1]);
            return this.normalized && (n = Mo(n, this.array)), n;
        }
        setY(e, n) {
            return this.normalized && (n = In(n, this.array)), this.array[e * this.itemSize + 1] = $o(n), this;
        }
        getZ(e) {
            let n = Zx(this.array[e * this.itemSize + 2]);
            return this.normalized && (n = Mo(n, this.array)), n;
        }
        setZ(e, n) {
            return this.normalized && (n = In(n, this.array)), this.array[e * this.itemSize + 2] = $o(n), this;
        }
        getW(e) {
            let n = Zx(this.array[e * this.itemSize + 3]);
            return this.normalized && (n = Mo(n, this.array)), n;
        }
        setW(e, n) {
            return this.normalized && (n = In(n, this.array)), this.array[e * this.itemSize + 3] = $o(n), this;
        }
        setXY(e, n, r) {
            return e *= this.itemSize, this.normalized && (n = In(n, this.array), r = In(r, this.array)), this.array[e + 0] = $o(n), this.array[e + 1] = $o(r), this;
        }
        setXYZ(e, n, r, i) {
            return e *= this.itemSize, this.normalized && (n = In(n, this.array), r = In(r, this.array), i = In(i, this.array)), this.array[e + 0] = $o(n), this.array[e + 1] = $o(r), this.array[e + 2] = $o(i), this;
        }
        setXYZW(e, n, r, i, s) {
            return e *= this.itemSize, this.normalized && (n = In(n, this.array), r = In(r, this.array), i = In(i, this.array), s = In(s, this.array)), this.array[e + 0] = $o(n), this.array[e + 1] = $o(r), this.array[e + 2] = $o(i), this.array[e + 3] = $o(s), this;
        }
    }
    class Gt extends wr {
        constructor(e, n, r){
            super(new Float32Array(e), n, r);
        }
    }
    let Sge = 0;
    const Qa = new fn, tN = new ir, kg = new ye, Sa = new Co, Ix = new Co, ds = new ye;
    class Fn extends Jc {
        constructor(){
            super(), this.isBufferGeometry = !0, Object.defineProperty(this, "id", {
                value: Sge++
            }), this.uuid = ka(), this.name = "", this.type = "BufferGeometry", this.index = null, this.indirect = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = !1, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
                start: 0,
                count: 1 / 0
            }, this.userData = {};
        }
        getIndex() {
            return this.index;
        }
        setIndex(e) {
            return Array.isArray(e) ? this.index = new (R6(e) ? g2 : m2)(e, 1) : this.index = e, this;
        }
        setIndirect(e) {
            return this.indirect = e, this;
        }
        getIndirect() {
            return this.indirect;
        }
        getAttribute(e) {
            return this.attributes[e];
        }
        setAttribute(e, n) {
            return this.attributes[e] = n, this;
        }
        deleteAttribute(e) {
            return delete this.attributes[e], this;
        }
        hasAttribute(e) {
            return this.attributes[e] !== void 0;
        }
        addGroup(e, n, r = 0) {
            this.groups.push({
                start: e,
                count: n,
                materialIndex: r
            });
        }
        clearGroups() {
            this.groups = [];
        }
        setDrawRange(e, n) {
            this.drawRange.start = e, this.drawRange.count = n;
        }
        applyMatrix4(e) {
            const n = this.attributes.position;
            n !== void 0 && (n.applyMatrix4(e), n.needsUpdate = !0);
            const r = this.attributes.normal;
            if (r !== void 0) {
                const s = new Mn().getNormalMatrix(e);
                r.applyNormalMatrix(s), r.needsUpdate = !0;
            }
            const i = this.attributes.tangent;
            return i !== void 0 && (i.transformDirection(e), i.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
        }
        applyQuaternion(e) {
            return Qa.makeRotationFromQuaternion(e), this.applyMatrix4(Qa), this;
        }
        rotateX(e) {
            return Qa.makeRotationX(e), this.applyMatrix4(Qa), this;
        }
        rotateY(e) {
            return Qa.makeRotationY(e), this.applyMatrix4(Qa), this;
        }
        rotateZ(e) {
            return Qa.makeRotationZ(e), this.applyMatrix4(Qa), this;
        }
        translate(e, n, r) {
            return Qa.makeTranslation(e, n, r), this.applyMatrix4(Qa), this;
        }
        scale(e, n, r) {
            return Qa.makeScale(e, n, r), this.applyMatrix4(Qa), this;
        }
        lookAt(e) {
            return tN.lookAt(e), tN.updateMatrix(), this.applyMatrix4(tN.matrix), this;
        }
        center() {
            return this.computeBoundingBox(), this.boundingBox.getCenter(kg).negate(), this.translate(kg.x, kg.y, kg.z), this;
        }
        setFromPoints(e) {
            const n = this.getAttribute("position");
            if (n === void 0) {
                const r = [];
                for(let i = 0, s = e.length; i < s; i++){
                    const o = e[i];
                    r.push(o.x, o.y, o.z || 0);
                }
                this.setAttribute("position", new Gt(r, 3));
            } else {
                const r = Math.min(e.length, n.count);
                for(let i = 0; i < r; i++){
                    const s = e[i];
                    n.setXYZ(i, s.x, s.y, s.z || 0);
                }
                e.length > n.count && console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."), n.needsUpdate = !0;
            }
            return this;
        }
        computeBoundingBox() {
            this.boundingBox === null && (this.boundingBox = new Co);
            const e = this.attributes.position, n = this.morphAttributes.position;
            if (e && e.isGLBufferAttribute) {
                console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.", this), this.boundingBox.set(new ye(-1 / 0, -1 / 0, -1 / 0), new ye(1 / 0, 1 / 0, 1 / 0));
                return;
            }
            if (e !== void 0) {
                if (this.boundingBox.setFromBufferAttribute(e), n) for(let r = 0, i = n.length; r < i; r++){
                    const s = n[r];
                    Sa.setFromBufferAttribute(s), this.morphTargetsRelative ? (ds.addVectors(this.boundingBox.min, Sa.min), this.boundingBox.expandByPoint(ds), ds.addVectors(this.boundingBox.max, Sa.max), this.boundingBox.expandByPoint(ds)) : (this.boundingBox.expandByPoint(Sa.min), this.boundingBox.expandByPoint(Sa.max));
                }
            } else this.boundingBox.makeEmpty();
            (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
        }
        computeBoundingSphere() {
            this.boundingSphere === null && (this.boundingSphere = new Ks);
            const e = this.attributes.position, n = this.morphAttributes.position;
            if (e && e.isGLBufferAttribute) {
                console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.", this), this.boundingSphere.set(new ye, 1 / 0);
                return;
            }
            if (e) {
                const r = this.boundingSphere.center;
                if (Sa.setFromBufferAttribute(e), n) for(let s = 0, o = n.length; s < o; s++){
                    const a = n[s];
                    Ix.setFromBufferAttribute(a), this.morphTargetsRelative ? (ds.addVectors(Sa.min, Ix.min), Sa.expandByPoint(ds), ds.addVectors(Sa.max, Ix.max), Sa.expandByPoint(ds)) : (Sa.expandByPoint(Ix.min), Sa.expandByPoint(Ix.max));
                }
                Sa.getCenter(r);
                let i = 0;
                for(let s = 0, o = e.count; s < o; s++)ds.fromBufferAttribute(e, s), i = Math.max(i, r.distanceToSquared(ds));
                if (n) for(let s = 0, o = n.length; s < o; s++){
                    const a = n[s], l = this.morphTargetsRelative;
                    for(let c = 0, u = a.count; c < u; c++)ds.fromBufferAttribute(a, c), l && (kg.fromBufferAttribute(e, c), ds.add(kg)), i = Math.max(i, r.distanceToSquared(ds));
                }
                this.boundingSphere.radius = Math.sqrt(i), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
            }
        }
        computeTangents() {
            const e = this.index, n = this.attributes;
            if (e === null || n.position === void 0 || n.normal === void 0 || n.uv === void 0) {
                console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
                return;
            }
            const r = n.position, i = n.normal, s = n.uv;
            this.hasAttribute("tangent") === !1 && this.setAttribute("tangent", new wr(new Float32Array(4 * r.count), 4));
            const o = this.getAttribute("tangent"), a = [], l = [];
            for(let L = 0; L < r.count; L++)a[L] = new ye, l[L] = new ye;
            const c = new ye, u = new ye, f = new ye, p = new ot, g = new ot, x = new ot, S = new ye, _ = new ye;
            function b(L, R, A) {
                c.fromBufferAttribute(r, L), u.fromBufferAttribute(r, R), f.fromBufferAttribute(r, A), p.fromBufferAttribute(s, L), g.fromBufferAttribute(s, R), x.fromBufferAttribute(s, A), u.sub(c), f.sub(c), g.sub(p), x.sub(p);
                const P = 1 / (g.x * x.y - x.x * g.y);
                isFinite(P) && (S.copy(u).multiplyScalar(x.y).addScaledVector(f, -g.y).multiplyScalar(P), _.copy(f).multiplyScalar(g.x).addScaledVector(u, -x.x).multiplyScalar(P), a[L].add(S), a[R].add(S), a[A].add(S), l[L].add(_), l[R].add(_), l[A].add(_));
            }
            let M = this.groups;
            M.length === 0 && (M = [
                {
                    start: 0,
                    count: e.count
                }
            ]);
            for(let L = 0, R = M.length; L < R; ++L){
                const A = M[L], P = A.start, B = A.count;
                for(let U = P, j = P + B; U < j; U += 3)b(e.getX(U + 0), e.getX(U + 1), e.getX(U + 2));
            }
            const E = new ye, T = new ye, k = new ye, N = new ye;
            function D(L) {
                k.fromBufferAttribute(i, L), N.copy(k);
                const R = a[L];
                E.copy(R), E.sub(k.multiplyScalar(k.dot(R))).normalize(), T.crossVectors(N, R);
                const P = T.dot(l[L]) < 0 ? -1 : 1;
                o.setXYZW(L, E.x, E.y, E.z, P);
            }
            for(let L = 0, R = M.length; L < R; ++L){
                const A = M[L], P = A.start, B = A.count;
                for(let U = P, j = P + B; U < j; U += 3)D(e.getX(U + 0)), D(e.getX(U + 1)), D(e.getX(U + 2));
            }
        }
        computeVertexNormals() {
            const e = this.index, n = this.getAttribute("position");
            if (n !== void 0) {
                let r = this.getAttribute("normal");
                if (r === void 0) r = new wr(new Float32Array(n.count * 3), 3), this.setAttribute("normal", r);
                else for(let p = 0, g = r.count; p < g; p++)r.setXYZ(p, 0, 0, 0);
                const i = new ye, s = new ye, o = new ye, a = new ye, l = new ye, c = new ye, u = new ye, f = new ye;
                if (e) for(let p = 0, g = e.count; p < g; p += 3){
                    const x = e.getX(p + 0), S = e.getX(p + 1), _ = e.getX(p + 2);
                    i.fromBufferAttribute(n, x), s.fromBufferAttribute(n, S), o.fromBufferAttribute(n, _), u.subVectors(o, s), f.subVectors(i, s), u.cross(f), a.fromBufferAttribute(r, x), l.fromBufferAttribute(r, S), c.fromBufferAttribute(r, _), a.add(u), l.add(u), c.add(u), r.setXYZ(x, a.x, a.y, a.z), r.setXYZ(S, l.x, l.y, l.z), r.setXYZ(_, c.x, c.y, c.z);
                }
                else for(let p = 0, g = n.count; p < g; p += 3)i.fromBufferAttribute(n, p + 0), s.fromBufferAttribute(n, p + 1), o.fromBufferAttribute(n, p + 2), u.subVectors(o, s), f.subVectors(i, s), u.cross(f), r.setXYZ(p + 0, u.x, u.y, u.z), r.setXYZ(p + 1, u.x, u.y, u.z), r.setXYZ(p + 2, u.x, u.y, u.z);
                this.normalizeNormals(), r.needsUpdate = !0;
            }
        }
        normalizeNormals() {
            const e = this.attributes.normal;
            for(let n = 0, r = e.count; n < r; n++)ds.fromBufferAttribute(e, n), ds.normalize(), e.setXYZ(n, ds.x, ds.y, ds.z);
        }
        toNonIndexed() {
            function e(a, l) {
                const c = a.array, u = a.itemSize, f = a.normalized, p = new c.constructor(l.length * u);
                let g = 0, x = 0;
                for(let S = 0, _ = l.length; S < _; S++){
                    a.isInterleavedBufferAttribute ? g = l[S] * a.data.stride + a.offset : g = l[S] * u;
                    for(let b = 0; b < u; b++)p[x++] = c[g++];
                }
                return new wr(p, u, f);
            }
            if (this.index === null) return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
            const n = new Fn, r = this.index.array, i = this.attributes;
            for(const a in i){
                const l = i[a], c = e(l, r);
                n.setAttribute(a, c);
            }
            const s = this.morphAttributes;
            for(const a in s){
                const l = [], c = s[a];
                for(let u = 0, f = c.length; u < f; u++){
                    const p = c[u], g = e(p, r);
                    l.push(g);
                }
                n.morphAttributes[a] = l;
            }
            n.morphTargetsRelative = this.morphTargetsRelative;
            const o = this.groups;
            for(let a = 0, l = o.length; a < l; a++){
                const c = o[a];
                n.addGroup(c.start, c.count, c.materialIndex);
            }
            return n;
        }
        toJSON() {
            const e = {
                metadata: {
                    version: 4.6,
                    type: "BufferGeometry",
                    generator: "BufferGeometry.toJSON"
                }
            };
            if (e.uuid = this.uuid, e.type = this.type, this.name !== "" && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), this.parameters !== void 0) {
                const l = this.parameters;
                for(const c in l)l[c] !== void 0 && (e[c] = l[c]);
                return e;
            }
            e.data = {
                attributes: {}
            };
            const n = this.index;
            n !== null && (e.data.index = {
                type: n.array.constructor.name,
                array: Array.prototype.slice.call(n.array)
            });
            const r = this.attributes;
            for(const l in r){
                const c = r[l];
                e.data.attributes[l] = c.toJSON(e.data);
            }
            const i = {};
            let s = !1;
            for(const l in this.morphAttributes){
                const c = this.morphAttributes[l], u = [];
                for(let f = 0, p = c.length; f < p; f++){
                    const g = c[f];
                    u.push(g.toJSON(e.data));
                }
                u.length > 0 && (i[l] = u, s = !0);
            }
            s && (e.data.morphAttributes = i, e.data.morphTargetsRelative = this.morphTargetsRelative);
            const o = this.groups;
            o.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(o)));
            const a = this.boundingSphere;
            return a !== null && (e.data.boundingSphere = {
                center: a.center.toArray(),
                radius: a.radius
            }), e;
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
            const n = {};
            this.name = e.name;
            const r = e.index;
            r !== null && this.setIndex(r.clone(n));
            const i = e.attributes;
            for(const c in i){
                const u = i[c];
                this.setAttribute(c, u.clone(n));
            }
            const s = e.morphAttributes;
            for(const c in s){
                const u = [], f = s[c];
                for(let p = 0, g = f.length; p < g; p++)u.push(f[p].clone(n));
                this.morphAttributes[c] = u;
            }
            this.morphTargetsRelative = e.morphTargetsRelative;
            const o = e.groups;
            for(let c = 0, u = o.length; c < u; c++){
                const f = o[c];
                this.addGroup(f.start, f.count, f.materialIndex);
            }
            const a = e.boundingBox;
            a !== null && (this.boundingBox = a.clone());
            const l = e.boundingSphere;
            return l !== null && (this.boundingSphere = l.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, this;
        }
        dispose() {
            this.dispatchEvent({
                type: "dispose"
            });
        }
    }
    const TU = new fn, tp = new ym, oS = new Ks, CU = new ye, aS = new ye, lS = new ye, cS = new ye, nN = new ye, uS = new ye, IU = new ye, dS = new ye;
    class zi extends ir {
        constructor(e = new Fn, n = new sh){
            super(), this.isMesh = !0, this.type = "Mesh", this.geometry = e, this.material = n, this.updateMorphTargets();
        }
        copy(e, n) {
            return super.copy(e, n), e.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), e.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this.material = Array.isArray(e.material) ? e.material.slice() : e.material, this.geometry = e.geometry, this;
        }
        updateMorphTargets() {
            const n = this.geometry.morphAttributes, r = Object.keys(n);
            if (r.length > 0) {
                const i = n[r[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let s = 0, o = i.length; s < o; s++){
                        const a = i[s].name || String(s);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = s;
                    }
                }
            }
        }
        getVertexPosition(e, n) {
            const r = this.geometry, i = r.attributes.position, s = r.morphAttributes.position, o = r.morphTargetsRelative;
            n.fromBufferAttribute(i, e);
            const a = this.morphTargetInfluences;
            if (s && a) {
                uS.set(0, 0, 0);
                for(let l = 0, c = s.length; l < c; l++){
                    const u = a[l], f = s[l];
                    u !== 0 && (nN.fromBufferAttribute(f, e), o ? uS.addScaledVector(nN, u) : uS.addScaledVector(nN.sub(n), u));
                }
                n.add(uS);
            }
            return n;
        }
        raycast(e, n) {
            const r = this.geometry, i = this.material, s = this.matrixWorld;
            i !== void 0 && (r.boundingSphere === null && r.computeBoundingSphere(), oS.copy(r.boundingSphere), oS.applyMatrix4(s), tp.copy(e.ray).recast(e.near), !(oS.containsPoint(tp.origin) === !1 && (tp.intersectSphere(oS, CU) === null || tp.origin.distanceToSquared(CU) > (e.far - e.near) ** 2)) && (TU.copy(s).invert(), tp.copy(e.ray).applyMatrix4(TU), !(r.boundingBox !== null && tp.intersectsBox(r.boundingBox) === !1) && this._computeIntersections(e, n, tp)));
        }
        _computeIntersections(e, n, r) {
            let i;
            const s = this.geometry, o = this.material, a = s.index, l = s.attributes.position, c = s.attributes.uv, u = s.attributes.uv1, f = s.attributes.normal, p = s.groups, g = s.drawRange;
            if (a !== null) if (Array.isArray(o)) for(let x = 0, S = p.length; x < S; x++){
                const _ = p[x], b = o[_.materialIndex], M = Math.max(_.start, g.start), E = Math.min(a.count, Math.min(_.start + _.count, g.start + g.count));
                for(let T = M, k = E; T < k; T += 3){
                    const N = a.getX(T), D = a.getX(T + 1), L = a.getX(T + 2);
                    i = fS(this, b, e, r, c, u, f, N, D, L), i && (i.faceIndex = Math.floor(T / 3), i.face.materialIndex = _.materialIndex, n.push(i));
                }
            }
            else {
                const x = Math.max(0, g.start), S = Math.min(a.count, g.start + g.count);
                for(let _ = x, b = S; _ < b; _ += 3){
                    const M = a.getX(_), E = a.getX(_ + 1), T = a.getX(_ + 2);
                    i = fS(this, o, e, r, c, u, f, M, E, T), i && (i.faceIndex = Math.floor(_ / 3), n.push(i));
                }
            }
            else if (l !== void 0) if (Array.isArray(o)) for(let x = 0, S = p.length; x < S; x++){
                const _ = p[x], b = o[_.materialIndex], M = Math.max(_.start, g.start), E = Math.min(l.count, Math.min(_.start + _.count, g.start + g.count));
                for(let T = M, k = E; T < k; T += 3){
                    const N = T, D = T + 1, L = T + 2;
                    i = fS(this, b, e, r, c, u, f, N, D, L), i && (i.faceIndex = Math.floor(T / 3), i.face.materialIndex = _.materialIndex, n.push(i));
                }
            }
            else {
                const x = Math.max(0, g.start), S = Math.min(l.count, g.start + g.count);
                for(let _ = x, b = S; _ < b; _ += 3){
                    const M = _, E = _ + 1, T = _ + 2;
                    i = fS(this, o, e, r, c, u, f, M, E, T), i && (i.faceIndex = Math.floor(_ / 3), n.push(i));
                }
            }
        }
    }
    function Ege(t, e, n, r, i, s, o, a) {
        let l;
        if (e.side === To ? l = r.intersectTriangle(o, s, i, !0, a) : l = r.intersectTriangle(i, s, o, e.side === md, a), l === null) return null;
        dS.copy(a), dS.applyMatrix4(t.matrixWorld);
        const c = n.ray.origin.distanceTo(dS);
        return c < n.near || c > n.far ? null : {
            distance: c,
            point: dS.clone(),
            object: t
        };
    }
    function fS(t, e, n, r, i, s, o, a, l, c) {
        t.getVertexPosition(a, aS), t.getVertexPosition(l, lS), t.getVertexPosition(c, cS);
        const u = Ege(t, e, n, r, aS, lS, cS, IU);
        if (u) {
            const f = new ye;
            Qo.getBarycoord(IU, aS, lS, cS, f), i && (u.uv = Qo.getInterpolatedAttribute(i, a, l, c, f, new ot)), s && (u.uv1 = Qo.getInterpolatedAttribute(s, a, l, c, f, new ot)), o && (u.normal = Qo.getInterpolatedAttribute(o, a, l, c, f, new ye), u.normal.dot(r.direction) > 0 && u.normal.multiplyScalar(-1));
            const p = {
                a,
                b: l,
                c,
                normal: new ye,
                materialIndex: 0
            };
            Qo.getNormal(aS, lS, cS, p.normal), u.face = p, u.barycoord = f;
        }
        return u;
    }
    class vm extends Fn {
        constructor(e = 1, n = 1, r = 1, i = 1, s = 1, o = 1){
            super(), this.type = "BoxGeometry", this.parameters = {
                width: e,
                height: n,
                depth: r,
                widthSegments: i,
                heightSegments: s,
                depthSegments: o
            };
            const a = this;
            i = Math.floor(i), s = Math.floor(s), o = Math.floor(o);
            const l = [], c = [], u = [], f = [];
            let p = 0, g = 0;
            x("z", "y", "x", -1, -1, r, n, e, o, s, 0), x("z", "y", "x", 1, -1, r, n, -e, o, s, 1), x("x", "z", "y", 1, 1, e, r, n, i, o, 2), x("x", "z", "y", 1, -1, e, r, -n, i, o, 3), x("x", "y", "z", 1, -1, e, n, r, i, s, 4), x("x", "y", "z", -1, -1, e, n, -r, i, s, 5), this.setIndex(l), this.setAttribute("position", new Gt(c, 3)), this.setAttribute("normal", new Gt(u, 3)), this.setAttribute("uv", new Gt(f, 2));
            function x(S, _, b, M, E, T, k, N, D, L, R) {
                const A = T / D, P = k / L, B = T / 2, U = k / 2, j = N / 2, K = D + 1, q = L + 1;
                let te = 0, W = 0;
                const J = new ye;
                for(let Q = 0; Q < q; Q++){
                    const Y = Q * P - U;
                    for(let le = 0; le < K; le++){
                        const ue = le * A - B;
                        J[S] = ue * M, J[_] = Y * E, J[b] = j, c.push(J.x, J.y, J.z), J[S] = 0, J[_] = 0, J[b] = N > 0 ? 1 : -1, u.push(J.x, J.y, J.z), f.push(le / D), f.push(1 - Q / L), te += 1;
                    }
                }
                for(let Q = 0; Q < L; Q++)for(let Y = 0; Y < D; Y++){
                    const le = p + Y + K * Q, ue = p + Y + K * (Q + 1), ie = p + (Y + 1) + K * (Q + 1), he = p + (Y + 1) + K * Q;
                    l.push(le, ue, he), l.push(ue, ie, he), W += 6;
                }
                a.addGroup(g, W, R), g += W, p += te;
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new vm(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments);
        }
    }
    function ev(t) {
        const e = {};
        for(const n in t){
            e[n] = {};
            for(const r in t[n]){
                const i = t[n][r];
                i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture || i.isQuaternion) ? i.isRenderTargetTexture ? (console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."), e[n][r] = null) : e[n][r] = i.clone() : Array.isArray(i) ? e[n][r] = i.slice() : e[n][r] = i;
            }
        }
        return e;
    }
    function xo(t) {
        const e = {};
        for(let n = 0; n < t.length; n++){
            const r = ev(t[n]);
            for(const i in r)e[i] = r[i];
        }
        return e;
    }
    function Mge(t) {
        const e = [];
        for(let n = 0; n < t.length; n++)e.push(t[n].clone());
        return e;
    }
    function k6(t) {
        const e = t.getRenderTarget();
        return e === null ? t.outputColorSpace : e.isXRRenderTarget === !0 ? e.texture.colorSpace : Zn.workingColorSpace;
    }
    const O6 = {
        clone: ev,
        merge: xo
    };
    var Tge = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, Cge = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;
    class oc extends no {
        constructor(e){
            super(), this.isShaderMaterial = !0, this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.uniformsGroups = [], this.vertexShader = Tge, this.fragmentShader = Cge, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.forceSinglePass = !0, this.extensions = {
                clipCullDistance: !1,
                multiDraw: !1
            }, this.defaultAttributeValues = {
                color: [
                    1,
                    1,
                    1
                ],
                uv: [
                    0,
                    0
                ],
                uv1: [
                    0,
                    0
                ]
            }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, this.glslVersion = null, e !== void 0 && this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = ev(e.uniforms), this.uniformsGroups = Mge(e.uniformsGroups), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.fog = e.fog, this.lights = e.lights, this.clipping = e.clipping, this.extensions = Object.assign({}, e.extensions), this.glslVersion = e.glslVersion, this;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            n.glslVersion = this.glslVersion, n.uniforms = {};
            for(const i in this.uniforms){
                const o = this.uniforms[i].value;
                o && o.isTexture ? n.uniforms[i] = {
                    type: "t",
                    value: o.toJSON(e).uuid
                } : o && o.isColor ? n.uniforms[i] = {
                    type: "c",
                    value: o.getHex()
                } : o && o.isVector2 ? n.uniforms[i] = {
                    type: "v2",
                    value: o.toArray()
                } : o && o.isVector3 ? n.uniforms[i] = {
                    type: "v3",
                    value: o.toArray()
                } : o && o.isVector4 ? n.uniforms[i] = {
                    type: "v4",
                    value: o.toArray()
                } : o && o.isMatrix3 ? n.uniforms[i] = {
                    type: "m3",
                    value: o.toArray()
                } : o && o.isMatrix4 ? n.uniforms[i] = {
                    type: "m4",
                    value: o.toArray()
                } : n.uniforms[i] = {
                    value: o
                };
            }
            Object.keys(this.defines).length > 0 && (n.defines = this.defines), n.vertexShader = this.vertexShader, n.fragmentShader = this.fragmentShader, n.lights = this.lights, n.clipping = this.clipping;
            const r = {};
            for(const i in this.extensions)this.extensions[i] === !0 && (r[i] = !0);
            return Object.keys(r).length > 0 && (n.extensions = r), n;
        }
    }
    class hw extends ir {
        constructor(){
            super(), this.isCamera = !0, this.type = "Camera", this.matrixWorldInverse = new fn, this.projectionMatrix = new fn, this.projectionMatrixInverse = new fn, this.coordinateSystem = Ql;
        }
        copy(e, n) {
            return super.copy(e, n), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this.coordinateSystem = e.coordinateSystem, this;
        }
        getWorldDirection(e) {
            return super.getWorldDirection(e).negate();
        }
        updateMatrixWorld(e) {
            super.updateMatrixWorld(e), this.matrixWorldInverse.copy(this.matrixWorld).invert();
        }
        updateWorldMatrix(e, n) {
            super.updateWorldMatrix(e, n), this.matrixWorldInverse.copy(this.matrixWorld).invert();
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    const gf = new ye, RU = new ot, AU = new ot;
    class Ei extends hw {
        constructor(e = 50, n = 1, r = .1, i = 2e3){
            super(), this.isPerspectiveCamera = !0, this.type = "PerspectiveCamera", this.fov = e, this.zoom = 1, this.near = r, this.far = i, this.focus = 10, this.aspect = n, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
        }
        copy(e, n) {
            return super.copy(e, n), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = e.view === null ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;
        }
        setFocalLength(e) {
            const n = .5 * this.getFilmHeight() / e;
            this.fov = Qy * 2 * Math.atan(n), this.updateProjectionMatrix();
        }
        getFocalLength() {
            const e = Math.tan(Wp * .5 * this.fov);
            return .5 * this.getFilmHeight() / e;
        }
        getEffectiveFOV() {
            return Qy * 2 * Math.atan(Math.tan(Wp * .5 * this.fov) / this.zoom);
        }
        getFilmWidth() {
            return this.filmGauge * Math.min(this.aspect, 1);
        }
        getFilmHeight() {
            return this.filmGauge / Math.max(this.aspect, 1);
        }
        getViewBounds(e, n, r) {
            gf.set(-1, -1, .5).applyMatrix4(this.projectionMatrixInverse), n.set(gf.x, gf.y).multiplyScalar(-e / gf.z), gf.set(1, 1, .5).applyMatrix4(this.projectionMatrixInverse), r.set(gf.x, gf.y).multiplyScalar(-e / gf.z);
        }
        getViewSize(e, n) {
            return this.getViewBounds(e, RU, AU), n.subVectors(AU, RU);
        }
        setViewOffset(e, n, r, i, s, o) {
            this.aspect = e / n, this.view === null && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = n, this.view.offsetX = r, this.view.offsetY = i, this.view.width = s, this.view.height = o, this.updateProjectionMatrix();
        }
        clearViewOffset() {
            this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
        }
        updateProjectionMatrix() {
            const e = this.near;
            let n = e * Math.tan(Wp * .5 * this.fov) / this.zoom, r = 2 * n, i = this.aspect * r, s = -.5 * i;
            const o = this.view;
            if (this.view !== null && this.view.enabled) {
                const l = o.fullWidth, c = o.fullHeight;
                s += o.offsetX * i / l, n -= o.offsetY * r / c, i *= o.width / l, r *= o.height / c;
            }
            const a = this.filmOffset;
            a !== 0 && (s += e * a / this.getFilmWidth()), this.projectionMatrix.makePerspective(s, s + i, n, n - r, e, this.far, this.coordinateSystem), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return n.object.fov = this.fov, n.object.zoom = this.zoom, n.object.near = this.near, n.object.far = this.far, n.object.focus = this.focus, n.object.aspect = this.aspect, this.view !== null && (n.object.view = Object.assign({}, this.view)), n.object.filmGauge = this.filmGauge, n.object.filmOffset = this.filmOffset, n;
        }
    }
    const Og = -90, Lg = 1;
    class L6 extends ir {
        constructor(e, n, r){
            super(), this.type = "CubeCamera", this.renderTarget = r, this.coordinateSystem = null, this.activeMipmapLevel = 0;
            const i = new Ei(Og, Lg, e, n);
            i.layers = this.layers, this.add(i);
            const s = new Ei(Og, Lg, e, n);
            s.layers = this.layers, this.add(s);
            const o = new Ei(Og, Lg, e, n);
            o.layers = this.layers, this.add(o);
            const a = new Ei(Og, Lg, e, n);
            a.layers = this.layers, this.add(a);
            const l = new Ei(Og, Lg, e, n);
            l.layers = this.layers, this.add(l);
            const c = new Ei(Og, Lg, e, n);
            c.layers = this.layers, this.add(c);
        }
        updateCoordinateSystem() {
            const e = this.coordinateSystem, n = this.children.concat(), [r, i, s, o, a, l] = n;
            for (const c of n)this.remove(c);
            if (e === Ql) r.up.set(0, 1, 0), r.lookAt(1, 0, 0), i.up.set(0, 1, 0), i.lookAt(-1, 0, 0), s.up.set(0, 0, -1), s.lookAt(0, 1, 0), o.up.set(0, 0, 1), o.lookAt(0, -1, 0), a.up.set(0, 1, 0), a.lookAt(0, 0, 1), l.up.set(0, 1, 0), l.lookAt(0, 0, -1);
            else if (e === Mb) r.up.set(0, -1, 0), r.lookAt(-1, 0, 0), i.up.set(0, -1, 0), i.lookAt(1, 0, 0), s.up.set(0, 0, 1), s.lookAt(0, 1, 0), o.up.set(0, 0, -1), o.lookAt(0, -1, 0), a.up.set(0, -1, 0), a.lookAt(0, 0, 1), l.up.set(0, -1, 0), l.lookAt(0, 0, -1);
            else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: " + e);
            for (const c of n)this.add(c), c.updateMatrixWorld();
        }
        update(e, n) {
            this.parent === null && this.updateMatrixWorld();
            const { renderTarget: r, activeMipmapLevel: i } = this;
            this.coordinateSystem !== e.coordinateSystem && (this.coordinateSystem = e.coordinateSystem, this.updateCoordinateSystem());
            const [s, o, a, l, c, u] = this.children, f = e.getRenderTarget(), p = e.getActiveCubeFace(), g = e.getActiveMipmapLevel(), x = e.xr.enabled;
            e.xr.enabled = !1;
            const S = r.texture.generateMipmaps;
            r.texture.generateMipmaps = !1, e.setRenderTarget(r, 0, i), e.render(n, s), e.setRenderTarget(r, 1, i), e.render(n, o), e.setRenderTarget(r, 2, i), e.render(n, a), e.setRenderTarget(r, 3, i), e.render(n, l), e.setRenderTarget(r, 4, i), e.render(n, c), r.texture.generateMipmaps = S, e.setRenderTarget(r, 5, i), e.render(n, u), e.setRenderTarget(f, p, g), e.xr.enabled = x, r.texture.needsPMREMUpdate = !0;
        }
    }
    class pw extends ui {
        constructor(e, n, r, i, s, o, a, l, c, u){
            e = e !== void 0 ? e : [], n = n !== void 0 ? n : gd, super(e, n, r, i, s, o, a, l, c, u), this.isCubeTexture = !0, this.flipY = !1;
        }
        get images() {
            return this.image;
        }
        set images(e) {
            this.image = e;
        }
    }
    class D6 extends Kc {
        constructor(e = 1, n = {}){
            super(e, e, n), this.isWebGLCubeRenderTarget = !0;
            const r = {
                width: e,
                height: e,
                depth: 1
            }, i = [
                r,
                r,
                r,
                r,
                r,
                r
            ];
            this.texture = new pw(i, n.mapping, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.colorSpace), this.texture.isRenderTargetTexture = !0, this.texture.generateMipmaps = n.generateMipmaps !== void 0 ? n.generateMipmaps : !1, this.texture.minFilter = n.minFilter !== void 0 ? n.minFilter : es;
        }
        fromEquirectangularTexture(e, n) {
            this.texture.type = n.type, this.texture.colorSpace = n.colorSpace, this.texture.generateMipmaps = n.generateMipmaps, this.texture.minFilter = n.minFilter, this.texture.magFilter = n.magFilter;
            const r = {
                uniforms: {
                    tEquirect: {
                        value: null
                    }
                },
                vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
                fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`
            }, i = new vm(5, 5, 5), s = new oc({
                name: "CubemapFromEquirect",
                uniforms: ev(r.uniforms),
                vertexShader: r.vertexShader,
                fragmentShader: r.fragmentShader,
                side: To,
                blending: sd
            });
            s.uniforms.tEquirect.value = n;
            const o = new zi(i, s), a = n.minFilter;
            return n.minFilter === Fc && (n.minFilter = es), new L6(1, 10, this).update(e, o), n.minFilter = a, o.geometry.dispose(), o.material.dispose(), this;
        }
        clear(e, n, r, i) {
            const s = e.getRenderTarget();
            for(let o = 0; o < 6; o++)e.setRenderTarget(this, o), e.clear(n, r, i);
            e.setRenderTarget(s);
        }
    }
    class dy extends ir {
        constructor(){
            super(), this.isGroup = !0, this.type = "Group";
        }
    }
    const Ige = {
        type: "move"
    };
    class b1 {
        constructor(){
            this._targetRay = null, this._grip = null, this._hand = null;
        }
        getHandSpace() {
            return this._hand === null && (this._hand = new dy, this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = {}, this._hand.inputState = {
                pinching: !1
            }), this._hand;
        }
        getTargetRaySpace() {
            return this._targetRay === null && (this._targetRay = new dy, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1, this._targetRay.hasLinearVelocity = !1, this._targetRay.linearVelocity = new ye, this._targetRay.hasAngularVelocity = !1, this._targetRay.angularVelocity = new ye), this._targetRay;
        }
        getGripSpace() {
            return this._grip === null && (this._grip = new dy, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1, this._grip.hasLinearVelocity = !1, this._grip.linearVelocity = new ye, this._grip.hasAngularVelocity = !1, this._grip.angularVelocity = new ye), this._grip;
        }
        dispatchEvent(e) {
            return this._targetRay !== null && this._targetRay.dispatchEvent(e), this._grip !== null && this._grip.dispatchEvent(e), this._hand !== null && this._hand.dispatchEvent(e), this;
        }
        connect(e) {
            if (e && e.hand) {
                const n = this._hand;
                if (n) for (const r of e.hand.values())this._getHandJoint(n, r);
            }
            return this.dispatchEvent({
                type: "connected",
                data: e
            }), this;
        }
        disconnect(e) {
            return this.dispatchEvent({
                type: "disconnected",
                data: e
            }), this._targetRay !== null && (this._targetRay.visible = !1), this._grip !== null && (this._grip.visible = !1), this._hand !== null && (this._hand.visible = !1), this;
        }
        update(e, n, r) {
            let i = null, s = null, o = null;
            const a = this._targetRay, l = this._grip, c = this._hand;
            if (e && n.session.visibilityState !== "visible-blurred") {
                if (c && e.hand) {
                    o = !0;
                    for (const S of e.hand.values()){
                        const _ = n.getJointPose(S, r), b = this._getHandJoint(c, S);
                        _ !== null && (b.matrix.fromArray(_.transform.matrix), b.matrix.decompose(b.position, b.rotation, b.scale), b.matrixWorldNeedsUpdate = !0, b.jointRadius = _.radius), b.visible = _ !== null;
                    }
                    const u = c.joints["index-finger-tip"], f = c.joints["thumb-tip"], p = u.position.distanceTo(f.position), g = .02, x = .005;
                    c.inputState.pinching && p > g + x ? (c.inputState.pinching = !1, this.dispatchEvent({
                        type: "pinchend",
                        handedness: e.handedness,
                        target: this
                    })) : !c.inputState.pinching && p <= g - x && (c.inputState.pinching = !0, this.dispatchEvent({
                        type: "pinchstart",
                        handedness: e.handedness,
                        target: this
                    }));
                } else l !== null && e.gripSpace && (s = n.getPose(e.gripSpace, r), s !== null && (l.matrix.fromArray(s.transform.matrix), l.matrix.decompose(l.position, l.rotation, l.scale), l.matrixWorldNeedsUpdate = !0, s.linearVelocity ? (l.hasLinearVelocity = !0, l.linearVelocity.copy(s.linearVelocity)) : l.hasLinearVelocity = !1, s.angularVelocity ? (l.hasAngularVelocity = !0, l.angularVelocity.copy(s.angularVelocity)) : l.hasAngularVelocity = !1));
                a !== null && (i = n.getPose(e.targetRaySpace, r), i === null && s !== null && (i = s), i !== null && (a.matrix.fromArray(i.transform.matrix), a.matrix.decompose(a.position, a.rotation, a.scale), a.matrixWorldNeedsUpdate = !0, i.linearVelocity ? (a.hasLinearVelocity = !0, a.linearVelocity.copy(i.linearVelocity)) : a.hasLinearVelocity = !1, i.angularVelocity ? (a.hasAngularVelocity = !0, a.angularVelocity.copy(i.angularVelocity)) : a.hasAngularVelocity = !1, this.dispatchEvent(Ige)));
            }
            return a !== null && (a.visible = i !== null), l !== null && (l.visible = s !== null), c !== null && (c.visible = o !== null), this;
        }
        _getHandJoint(e, n) {
            if (e.joints[n.jointName] === void 0) {
                const r = new dy;
                r.matrixAutoUpdate = !1, r.visible = !1, e.joints[n.jointName] = r, e.add(r);
            }
            return e.joints[n.jointName];
        }
    }
    class KT {
        constructor(e, n = 25e-5){
            this.isFogExp2 = !0, this.name = "", this.color = new Ft(e), this.density = n;
        }
        clone() {
            return new KT(this.color, this.density);
        }
        toJSON() {
            return {
                type: "FogExp2",
                name: this.name,
                color: this.color.getHex(),
                density: this.density
            };
        }
    }
    class YT {
        constructor(e, n = 1, r = 1e3){
            this.isFog = !0, this.name = "", this.color = new Ft(e), this.near = n, this.far = r;
        }
        clone() {
            return new YT(this.color, this.near, this.far);
        }
        toJSON() {
            return {
                type: "Fog",
                name: this.name,
                color: this.color.getHex(),
                near: this.near,
                far: this.far
            };
        }
    }
    class y2 extends ir {
        constructor(){
            super(), this.isScene = !0, this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.backgroundBlurriness = 0, this.backgroundIntensity = 1, this.backgroundRotation = new ja, this.environmentIntensity = 1, this.environmentRotation = new ja, this.overrideMaterial = null, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
                detail: this
            }));
        }
        copy(e, n) {
            return super.copy(e, n), e.background !== null && (this.background = e.background.clone()), e.environment !== null && (this.environment = e.environment.clone()), e.fog !== null && (this.fog = e.fog.clone()), this.backgroundBlurriness = e.backgroundBlurriness, this.backgroundIntensity = e.backgroundIntensity, this.backgroundRotation.copy(e.backgroundRotation), this.environmentIntensity = e.environmentIntensity, this.environmentRotation.copy(e.environmentRotation), e.overrideMaterial !== null && (this.overrideMaterial = e.overrideMaterial.clone()), this.matrixAutoUpdate = e.matrixAutoUpdate, this;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return this.fog !== null && (n.object.fog = this.fog.toJSON()), this.backgroundBlurriness > 0 && (n.object.backgroundBlurriness = this.backgroundBlurriness), this.backgroundIntensity !== 1 && (n.object.backgroundIntensity = this.backgroundIntensity), n.object.backgroundRotation = this.backgroundRotation.toArray(), this.environmentIntensity !== 1 && (n.object.environmentIntensity = this.environmentIntensity), n.object.environmentRotation = this.environmentRotation.toArray(), n;
        }
    }
    class ZT {
        constructor(e, n){
            this.isInterleavedBuffer = !0, this.array = e, this.stride = n, this.count = e !== void 0 ? e.length / n : 0, this.usage = Eb, this.updateRanges = [], this.version = 0, this.uuid = ka();
        }
        onUploadCallback() {}
        set needsUpdate(e) {
            e === !0 && this.version++;
        }
        setUsage(e) {
            return this.usage = e, this;
        }
        addUpdateRange(e, n) {
            this.updateRanges.push({
                start: e,
                count: n
            });
        }
        clearUpdateRanges() {
            this.updateRanges.length = 0;
        }
        copy(e) {
            return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this;
        }
        copyAt(e, n, r) {
            e *= this.stride, r *= n.stride;
            for(let i = 0, s = this.stride; i < s; i++)this.array[e + i] = n.array[r + i];
            return this;
        }
        set(e, n = 0) {
            return this.array.set(e, n), this;
        }
        clone(e) {
            e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = ka()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
            const n = new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]), r = new this.constructor(n, this.stride);
            return r.setUsage(this.usage), r;
        }
        onUpload(e) {
            return this.onUploadCallback = e, this;
        }
        toJSON(e) {
            return e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = ka()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = Array.from(new Uint32Array(this.array.buffer))), {
                uuid: this.uuid,
                buffer: this.array.buffer._uuid,
                type: this.array.constructor.name,
                stride: this.stride
            };
        }
    }
    const vo = new ye;
    class cm {
        constructor(e, n, r, i = !1){
            this.isInterleavedBufferAttribute = !0, this.name = "", this.data = e, this.itemSize = n, this.offset = r, this.normalized = i;
        }
        get count() {
            return this.data.count;
        }
        get array() {
            return this.data.array;
        }
        set needsUpdate(e) {
            this.data.needsUpdate = e;
        }
        applyMatrix4(e) {
            for(let n = 0, r = this.data.count; n < r; n++)vo.fromBufferAttribute(this, n), vo.applyMatrix4(e), this.setXYZ(n, vo.x, vo.y, vo.z);
            return this;
        }
        applyNormalMatrix(e) {
            for(let n = 0, r = this.count; n < r; n++)vo.fromBufferAttribute(this, n), vo.applyNormalMatrix(e), this.setXYZ(n, vo.x, vo.y, vo.z);
            return this;
        }
        transformDirection(e) {
            for(let n = 0, r = this.count; n < r; n++)vo.fromBufferAttribute(this, n), vo.transformDirection(e), this.setXYZ(n, vo.x, vo.y, vo.z);
            return this;
        }
        getComponent(e, n) {
            let r = this.array[e * this.data.stride + this.offset + n];
            return this.normalized && (r = Mo(r, this.array)), r;
        }
        setComponent(e, n, r) {
            return this.normalized && (r = In(r, this.array)), this.data.array[e * this.data.stride + this.offset + n] = r, this;
        }
        setX(e, n) {
            return this.normalized && (n = In(n, this.array)), this.data.array[e * this.data.stride + this.offset] = n, this;
        }
        setY(e, n) {
            return this.normalized && (n = In(n, this.array)), this.data.array[e * this.data.stride + this.offset + 1] = n, this;
        }
        setZ(e, n) {
            return this.normalized && (n = In(n, this.array)), this.data.array[e * this.data.stride + this.offset + 2] = n, this;
        }
        setW(e, n) {
            return this.normalized && (n = In(n, this.array)), this.data.array[e * this.data.stride + this.offset + 3] = n, this;
        }
        getX(e) {
            let n = this.data.array[e * this.data.stride + this.offset];
            return this.normalized && (n = Mo(n, this.array)), n;
        }
        getY(e) {
            let n = this.data.array[e * this.data.stride + this.offset + 1];
            return this.normalized && (n = Mo(n, this.array)), n;
        }
        getZ(e) {
            let n = this.data.array[e * this.data.stride + this.offset + 2];
            return this.normalized && (n = Mo(n, this.array)), n;
        }
        getW(e) {
            let n = this.data.array[e * this.data.stride + this.offset + 3];
            return this.normalized && (n = Mo(n, this.array)), n;
        }
        setXY(e, n, r) {
            return e = e * this.data.stride + this.offset, this.normalized && (n = In(n, this.array), r = In(r, this.array)), this.data.array[e + 0] = n, this.data.array[e + 1] = r, this;
        }
        setXYZ(e, n, r, i) {
            return e = e * this.data.stride + this.offset, this.normalized && (n = In(n, this.array), r = In(r, this.array), i = In(i, this.array)), this.data.array[e + 0] = n, this.data.array[e + 1] = r, this.data.array[e + 2] = i, this;
        }
        setXYZW(e, n, r, i, s) {
            return e = e * this.data.stride + this.offset, this.normalized && (n = In(n, this.array), r = In(r, this.array), i = In(i, this.array), s = In(s, this.array)), this.data.array[e + 0] = n, this.data.array[e + 1] = r, this.data.array[e + 2] = i, this.data.array[e + 3] = s, this;
        }
        clone(e) {
            if (e === void 0) {
                console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");
                const n = [];
                for(let r = 0; r < this.count; r++){
                    const i = r * this.data.stride + this.offset;
                    for(let s = 0; s < this.itemSize; s++)n.push(this.data.array[i + s]);
                }
                return new wr(new this.array.constructor(n), this.itemSize, this.normalized);
            } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)), new cm(e.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);
        }
        toJSON(e) {
            if (e === void 0) {
                console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");
                const n = [];
                for(let r = 0; r < this.count; r++){
                    const i = r * this.data.stride + this.offset;
                    for(let s = 0; s < this.itemSize; s++)n.push(this.data.array[i + s]);
                }
                return {
                    itemSize: this.itemSize,
                    type: this.array.constructor.name,
                    array: n,
                    normalized: this.normalized
                };
            } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)), {
                isInterleavedBufferAttribute: !0,
                itemSize: this.itemSize,
                data: this.data.uuid,
                offset: this.offset,
                normalized: this.normalized
            };
        }
    }
    class v2 extends no {
        constructor(e){
            super(), this.isSpriteMaterial = !0, this.type = "SpriteMaterial", this.color = new Ft(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = !0, this.transparent = !0, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this.fog = e.fog, this;
        }
    }
    let Dg;
    const Rx = new ye, Fg = new ye, jg = new ye, Bg = new ot, Ax = new ot, F6 = new fn, hS = new ye, Nx = new ye, pS = new ye, NU = new ot, rN = new ot, PU = new ot;
    class j6 extends ir {
        constructor(e = new v2){
            if (super(), this.isSprite = !0, this.type = "Sprite", Dg === void 0) {
                Dg = new Fn;
                const n = new Float32Array([
                    -.5,
                    -.5,
                    0,
                    0,
                    0,
                    .5,
                    -.5,
                    0,
                    1,
                    0,
                    .5,
                    .5,
                    0,
                    1,
                    1,
                    -.5,
                    .5,
                    0,
                    0,
                    1
                ]), r = new ZT(n, 5);
                Dg.setIndex([
                    0,
                    1,
                    2,
                    0,
                    2,
                    3
                ]), Dg.setAttribute("position", new cm(r, 3, 0, !1)), Dg.setAttribute("uv", new cm(r, 2, 3, !1));
            }
            this.geometry = Dg, this.material = e, this.center = new ot(.5, .5);
        }
        raycast(e, n) {
            e.camera === null && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), Fg.setFromMatrixScale(this.matrixWorld), F6.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), jg.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && this.material.sizeAttenuation === !1 && Fg.multiplyScalar(-jg.z);
            const r = this.material.rotation;
            let i, s;
            r !== 0 && (s = Math.cos(r), i = Math.sin(r));
            const o = this.center;
            mS(hS.set(-.5, -.5, 0), jg, o, Fg, i, s), mS(Nx.set(.5, -.5, 0), jg, o, Fg, i, s), mS(pS.set(.5, .5, 0), jg, o, Fg, i, s), NU.set(0, 0), rN.set(1, 0), PU.set(1, 1);
            let a = e.ray.intersectTriangle(hS, Nx, pS, !1, Rx);
            if (a === null && (mS(Nx.set(-.5, .5, 0), jg, o, Fg, i, s), rN.set(0, 1), a = e.ray.intersectTriangle(hS, pS, Nx, !1, Rx), a === null)) return;
            const l = e.ray.origin.distanceTo(Rx);
            l < e.near || l > e.far || n.push({
                distance: l,
                point: Rx.clone(),
                uv: Qo.getInterpolation(Rx, hS, Nx, pS, NU, rN, PU, new ot),
                face: null,
                object: this
            });
        }
        copy(e, n) {
            return super.copy(e, n), e.center !== void 0 && this.center.copy(e.center), this.material = e.material, this;
        }
    }
    function mS(t, e, n, r, i, s) {
        Bg.subVectors(t, n).addScalar(.5).multiply(r), i !== void 0 ? (Ax.x = s * Bg.x - i * Bg.y, Ax.y = i * Bg.x + s * Bg.y) : Ax.copy(Bg), t.copy(e), t.x += Ax.x, t.y += Ax.y, t.applyMatrix4(F6);
    }
    const gS = new ye, kU = new ye;
    class B6 extends ir {
        constructor(){
            super(), this._currentLevel = 0, this.type = "LOD", Object.defineProperties(this, {
                levels: {
                    enumerable: !0,
                    value: []
                },
                isLOD: {
                    value: !0
                }
            }), this.autoUpdate = !0;
        }
        copy(e) {
            super.copy(e, !1);
            const n = e.levels;
            for(let r = 0, i = n.length; r < i; r++){
                const s = n[r];
                this.addLevel(s.object.clone(), s.distance, s.hysteresis);
            }
            return this.autoUpdate = e.autoUpdate, this;
        }
        addLevel(e, n = 0, r = 0) {
            n = Math.abs(n);
            const i = this.levels;
            let s;
            for(s = 0; s < i.length && !(n < i[s].distance); s++);
            return i.splice(s, 0, {
                distance: n,
                hysteresis: r,
                object: e
            }), this.add(e), this;
        }
        removeLevel(e) {
            const n = this.levels;
            for(let r = 0; r < n.length; r++)if (n[r].distance === e) {
                const i = n.splice(r, 1);
                return this.remove(i[0].object), !0;
            }
            return !1;
        }
        getCurrentLevel() {
            return this._currentLevel;
        }
        getObjectForDistance(e) {
            const n = this.levels;
            if (n.length > 0) {
                let r, i;
                for(r = 1, i = n.length; r < i; r++){
                    let s = n[r].distance;
                    if (n[r].object.visible && (s -= s * n[r].hysteresis), e < s) break;
                }
                return n[r - 1].object;
            }
            return null;
        }
        raycast(e, n) {
            if (this.levels.length > 0) {
                gS.setFromMatrixPosition(this.matrixWorld);
                const i = e.ray.origin.distanceTo(gS);
                this.getObjectForDistance(i).raycast(e, n);
            }
        }
        update(e) {
            const n = this.levels;
            if (n.length > 1) {
                gS.setFromMatrixPosition(e.matrixWorld), kU.setFromMatrixPosition(this.matrixWorld);
                const r = gS.distanceTo(kU) / e.zoom;
                n[0].object.visible = !0;
                let i, s;
                for(i = 1, s = n.length; i < s; i++){
                    let o = n[i].distance;
                    if (n[i].object.visible && (o -= o * n[i].hysteresis), r >= o) n[i - 1].object.visible = !1, n[i].object.visible = !0;
                    else break;
                }
                for(this._currentLevel = i - 1; i < s; i++)n[i].object.visible = !1;
            }
        }
        toJSON(e) {
            const n = super.toJSON(e);
            this.autoUpdate === !1 && (n.object.autoUpdate = !1), n.object.levels = [];
            const r = this.levels;
            for(let i = 0, s = r.length; i < s; i++){
                const o = r[i];
                n.object.levels.push({
                    object: o.object.uuid,
                    distance: o.distance,
                    hysteresis: o.hysteresis
                });
            }
            return n;
        }
    }
    const OU = new ye, LU = new rr, DU = new rr, Rge = new ye, FU = new fn, yS = new ye, iN = new Ks, jU = new fn, sN = new ym;
    class U6 extends zi {
        constructor(e, n){
            super(e, n), this.isSkinnedMesh = !0, this.type = "SkinnedMesh", this.bindMode = dk, this.bindMatrix = new fn, this.bindMatrixInverse = new fn, this.boundingBox = null, this.boundingSphere = null;
        }
        computeBoundingBox() {
            const e = this.geometry;
            this.boundingBox === null && (this.boundingBox = new Co), this.boundingBox.makeEmpty();
            const n = e.getAttribute("position");
            for(let r = 0; r < n.count; r++)this.getVertexPosition(r, yS), this.boundingBox.expandByPoint(yS);
        }
        computeBoundingSphere() {
            const e = this.geometry;
            this.boundingSphere === null && (this.boundingSphere = new Ks), this.boundingSphere.makeEmpty();
            const n = e.getAttribute("position");
            for(let r = 0; r < n.count; r++)this.getVertexPosition(r, yS), this.boundingSphere.expandByPoint(yS);
        }
        copy(e, n) {
            return super.copy(e, n), this.bindMode = e.bindMode, this.bindMatrix.copy(e.bindMatrix), this.bindMatrixInverse.copy(e.bindMatrixInverse), this.skeleton = e.skeleton, e.boundingBox !== null && (this.boundingBox = e.boundingBox.clone()), e.boundingSphere !== null && (this.boundingSphere = e.boundingSphere.clone()), this;
        }
        raycast(e, n) {
            const r = this.material, i = this.matrixWorld;
            r !== void 0 && (this.boundingSphere === null && this.computeBoundingSphere(), iN.copy(this.boundingSphere), iN.applyMatrix4(i), e.ray.intersectsSphere(iN) !== !1 && (jU.copy(i).invert(), sN.copy(e.ray).applyMatrix4(jU), !(this.boundingBox !== null && sN.intersectsBox(this.boundingBox) === !1) && this._computeIntersections(e, n, sN)));
        }
        getVertexPosition(e, n) {
            return super.getVertexPosition(e, n), this.applyBoneTransform(e, n), n;
        }
        bind(e, n) {
            this.skeleton = e, n === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), n = this.matrixWorld), this.bindMatrix.copy(n), this.bindMatrixInverse.copy(n).invert();
        }
        pose() {
            this.skeleton.pose();
        }
        normalizeSkinWeights() {
            const e = new rr, n = this.geometry.attributes.skinWeight;
            for(let r = 0, i = n.count; r < i; r++){
                e.fromBufferAttribute(n, r);
                const s = 1 / e.manhattanLength();
                s !== 1 / 0 ? e.multiplyScalar(s) : e.set(1, 0, 0, 0), n.setXYZW(r, e.x, e.y, e.z, e.w);
            }
        }
        updateMatrixWorld(e) {
            super.updateMatrixWorld(e), this.bindMode === dk ? this.bindMatrixInverse.copy(this.matrixWorld).invert() : this.bindMode === m6 ? this.bindMatrixInverse.copy(this.bindMatrix).invert() : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
        }
        applyBoneTransform(e, n) {
            const r = this.skeleton, i = this.geometry;
            LU.fromBufferAttribute(i.attributes.skinIndex, e), DU.fromBufferAttribute(i.attributes.skinWeight, e), OU.copy(n).applyMatrix4(this.bindMatrix), n.set(0, 0, 0);
            for(let s = 0; s < 4; s++){
                const o = DU.getComponent(s);
                if (o !== 0) {
                    const a = LU.getComponent(s);
                    FU.multiplyMatrices(r.bones[a].matrixWorld, r.boneInverses[a]), n.addScaledVector(Rge.copy(OU).applyMatrix4(FU), o);
                }
            }
            return n.applyMatrix4(this.bindMatrixInverse);
        }
    }
    class x2 extends ir {
        constructor(){
            super(), this.isBone = !0, this.type = "Bone";
        }
    }
    class tc extends ui {
        constructor(e = null, n = 1, r = 1, i, s, o, a, l, c = Is, u = Is, f, p){
            super(null, o, a, l, c, u, i, s, f, p), this.isDataTexture = !0, this.image = {
                data: e,
                width: n,
                height: r
            }, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
        }
    }
    const BU = new fn, Age = new fn;
    class JT {
        constructor(e = [], n = []){
            this.uuid = ka(), this.bones = e.slice(0), this.boneInverses = n, this.boneMatrices = null, this.boneTexture = null, this.init();
        }
        init() {
            const e = this.bones, n = this.boneInverses;
            if (this.boneMatrices = new Float32Array(e.length * 16), n.length === 0) this.calculateInverses();
            else if (e.length !== n.length) {
                console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."), this.boneInverses = [];
                for(let r = 0, i = this.bones.length; r < i; r++)this.boneInverses.push(new fn);
            }
        }
        calculateInverses() {
            this.boneInverses.length = 0;
            for(let e = 0, n = this.bones.length; e < n; e++){
                const r = new fn;
                this.bones[e] && r.copy(this.bones[e].matrixWorld).invert(), this.boneInverses.push(r);
            }
        }
        pose() {
            for(let e = 0, n = this.bones.length; e < n; e++){
                const r = this.bones[e];
                r && r.matrixWorld.copy(this.boneInverses[e]).invert();
            }
            for(let e = 0, n = this.bones.length; e < n; e++){
                const r = this.bones[e];
                r && (r.parent && r.parent.isBone ? (r.matrix.copy(r.parent.matrixWorld).invert(), r.matrix.multiply(r.matrixWorld)) : r.matrix.copy(r.matrixWorld), r.matrix.decompose(r.position, r.quaternion, r.scale));
            }
        }
        update() {
            const e = this.bones, n = this.boneInverses, r = this.boneMatrices, i = this.boneTexture;
            for(let s = 0, o = e.length; s < o; s++){
                const a = e[s] ? e[s].matrixWorld : Age;
                BU.multiplyMatrices(a, n[s]), BU.toArray(r, s * 16);
            }
            i !== null && (i.needsUpdate = !0);
        }
        clone() {
            return new JT(this.bones, this.boneInverses);
        }
        computeBoneTexture() {
            let e = Math.sqrt(this.bones.length * 4);
            e = Math.ceil(e / 4) * 4, e = Math.max(e, 4);
            const n = new Float32Array(e * e * 4);
            n.set(this.boneMatrices);
            const r = new tc(n, e, e, Hs, na);
            return r.needsUpdate = !0, this.boneMatrices = n, this.boneTexture = r, this;
        }
        getBoneByName(e) {
            for(let n = 0, r = this.bones.length; n < r; n++){
                const i = this.bones[n];
                if (i.name === e) return i;
            }
        }
        dispose() {
            this.boneTexture !== null && (this.boneTexture.dispose(), this.boneTexture = null);
        }
        fromJSON(e, n) {
            this.uuid = e.uuid;
            for(let r = 0, i = e.bones.length; r < i; r++){
                const s = e.bones[r];
                let o = n[s];
                o === void 0 && (console.warn("THREE.Skeleton: No bone found with UUID:", s), o = new x2), this.bones.push(o), this.boneInverses.push(new fn().fromArray(e.boneInverses[r]));
            }
            return this.init(), this;
        }
        toJSON() {
            const e = {
                metadata: {
                    version: 4.6,
                    type: "Skeleton",
                    generator: "Skeleton.toJSON"
                },
                bones: [],
                boneInverses: []
            };
            e.uuid = this.uuid;
            const n = this.bones, r = this.boneInverses;
            for(let i = 0, s = n.length; i < s; i++){
                const o = n[i];
                e.bones.push(o.uuid);
                const a = r[i];
                e.boneInverses.push(a.toArray());
            }
            return e;
        }
    }
    class tv extends wr {
        constructor(e, n, r, i = 1){
            super(e, n, r), this.isInstancedBufferAttribute = !0, this.meshPerAttribute = i;
        }
        copy(e) {
            return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e;
        }
    }
    const Ug = new fn, UU = new fn, vS = [], zU = new Co, Nge = new fn, Px = new zi, kx = new Ks;
    class z6 extends zi {
        constructor(e, n, r){
            super(e, n), this.isInstancedMesh = !0, this.instanceMatrix = new tv(new Float32Array(r * 16), 16), this.instanceColor = null, this.morphTexture = null, this.count = r, this.boundingBox = null, this.boundingSphere = null;
            for(let i = 0; i < r; i++)this.setMatrixAt(i, Nge);
        }
        computeBoundingBox() {
            const e = this.geometry, n = this.count;
            this.boundingBox === null && (this.boundingBox = new Co), e.boundingBox === null && e.computeBoundingBox(), this.boundingBox.makeEmpty();
            for(let r = 0; r < n; r++)this.getMatrixAt(r, Ug), zU.copy(e.boundingBox).applyMatrix4(Ug), this.boundingBox.union(zU);
        }
        computeBoundingSphere() {
            const e = this.geometry, n = this.count;
            this.boundingSphere === null && (this.boundingSphere = new Ks), e.boundingSphere === null && e.computeBoundingSphere(), this.boundingSphere.makeEmpty();
            for(let r = 0; r < n; r++)this.getMatrixAt(r, Ug), kx.copy(e.boundingSphere).applyMatrix4(Ug), this.boundingSphere.union(kx);
        }
        copy(e, n) {
            return super.copy(e, n), this.instanceMatrix.copy(e.instanceMatrix), e.morphTexture !== null && (this.morphTexture = e.morphTexture.clone()), e.instanceColor !== null && (this.instanceColor = e.instanceColor.clone()), this.count = e.count, e.boundingBox !== null && (this.boundingBox = e.boundingBox.clone()), e.boundingSphere !== null && (this.boundingSphere = e.boundingSphere.clone()), this;
        }
        getColorAt(e, n) {
            n.fromArray(this.instanceColor.array, e * 3);
        }
        getMatrixAt(e, n) {
            n.fromArray(this.instanceMatrix.array, e * 16);
        }
        getMorphAt(e, n) {
            const r = n.morphTargetInfluences, i = this.morphTexture.source.data.data, s = r.length + 1, o = e * s + 1;
            for(let a = 0; a < r.length; a++)r[a] = i[o + a];
        }
        raycast(e, n) {
            const r = this.matrixWorld, i = this.count;
            if (Px.geometry = this.geometry, Px.material = this.material, Px.material !== void 0 && (this.boundingSphere === null && this.computeBoundingSphere(), kx.copy(this.boundingSphere), kx.applyMatrix4(r), e.ray.intersectsSphere(kx) !== !1)) for(let s = 0; s < i; s++){
                this.getMatrixAt(s, Ug), UU.multiplyMatrices(r, Ug), Px.matrixWorld = UU, Px.raycast(e, vS);
                for(let o = 0, a = vS.length; o < a; o++){
                    const l = vS[o];
                    l.instanceId = s, l.object = this, n.push(l);
                }
                vS.length = 0;
            }
        }
        setColorAt(e, n) {
            this.instanceColor === null && (this.instanceColor = new tv(new Float32Array(this.instanceMatrix.count * 3).fill(1), 3)), n.toArray(this.instanceColor.array, e * 3);
        }
        setMatrixAt(e, n) {
            n.toArray(this.instanceMatrix.array, e * 16);
        }
        setMorphAt(e, n) {
            const r = n.morphTargetInfluences, i = r.length + 1;
            this.morphTexture === null && (this.morphTexture = new tc(new Float32Array(i * this.count), i, this.count, WT, na));
            const s = this.morphTexture.source.data.data;
            let o = 0;
            for(let c = 0; c < r.length; c++)o += r[c];
            const a = this.geometry.morphTargetsRelative ? 1 : 1 - o, l = i * e;
            s[l] = a, s.set(r, l + 1);
        }
        updateMorphTargets() {}
        dispose() {
            return this.dispatchEvent({
                type: "dispose"
            }), this.morphTexture !== null && (this.morphTexture.dispose(), this.morphTexture = null), this;
        }
    }
    const oN = new ye, Pge = new ye, kge = new Mn;
    class Yu {
        constructor(e = new ye(1, 0, 0), n = 0){
            this.isPlane = !0, this.normal = e, this.constant = n;
        }
        set(e, n) {
            return this.normal.copy(e), this.constant = n, this;
        }
        setComponents(e, n, r, i) {
            return this.normal.set(e, n, r), this.constant = i, this;
        }
        setFromNormalAndCoplanarPoint(e, n) {
            return this.normal.copy(e), this.constant = -n.dot(this.normal), this;
        }
        setFromCoplanarPoints(e, n, r) {
            const i = oN.subVectors(r, n).cross(Pge.subVectors(e, n)).normalize();
            return this.setFromNormalAndCoplanarPoint(i, e), this;
        }
        copy(e) {
            return this.normal.copy(e.normal), this.constant = e.constant, this;
        }
        normalize() {
            const e = 1 / this.normal.length();
            return this.normal.multiplyScalar(e), this.constant *= e, this;
        }
        negate() {
            return this.constant *= -1, this.normal.negate(), this;
        }
        distanceToPoint(e) {
            return this.normal.dot(e) + this.constant;
        }
        distanceToSphere(e) {
            return this.distanceToPoint(e.center) - e.radius;
        }
        projectPoint(e, n) {
            return n.copy(e).addScaledVector(this.normal, -this.distanceToPoint(e));
        }
        intersectLine(e, n) {
            const r = e.delta(oN), i = this.normal.dot(r);
            if (i === 0) return this.distanceToPoint(e.start) === 0 ? n.copy(e.start) : null;
            const s = -(e.start.dot(this.normal) + this.constant) / i;
            return s < 0 || s > 1 ? null : n.copy(e.start).addScaledVector(r, s);
        }
        intersectsLine(e) {
            const n = this.distanceToPoint(e.start), r = this.distanceToPoint(e.end);
            return n < 0 && r > 0 || r < 0 && n > 0;
        }
        intersectsBox(e) {
            return e.intersectsPlane(this);
        }
        intersectsSphere(e) {
            return e.intersectsPlane(this);
        }
        coplanarPoint(e) {
            return e.copy(this.normal).multiplyScalar(-this.constant);
        }
        applyMatrix4(e, n) {
            const r = n || kge.getNormalMatrix(e), i = this.coplanarPoint(oN).applyMatrix4(e), s = this.normal.applyMatrix3(r).normalize();
            return this.constant = -i.dot(s), this;
        }
        translate(e) {
            return this.constant -= e.dot(this.normal), this;
        }
        equals(e) {
            return e.normal.equals(this.normal) && e.constant === this.constant;
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    const np = new Ks, xS = new ye;
    class mw {
        constructor(e = new Yu, n = new Yu, r = new Yu, i = new Yu, s = new Yu, o = new Yu){
            this.planes = [
                e,
                n,
                r,
                i,
                s,
                o
            ];
        }
        set(e, n, r, i, s, o) {
            const a = this.planes;
            return a[0].copy(e), a[1].copy(n), a[2].copy(r), a[3].copy(i), a[4].copy(s), a[5].copy(o), this;
        }
        copy(e) {
            const n = this.planes;
            for(let r = 0; r < 6; r++)n[r].copy(e.planes[r]);
            return this;
        }
        setFromProjectionMatrix(e, n = Ql) {
            const r = this.planes, i = e.elements, s = i[0], o = i[1], a = i[2], l = i[3], c = i[4], u = i[5], f = i[6], p = i[7], g = i[8], x = i[9], S = i[10], _ = i[11], b = i[12], M = i[13], E = i[14], T = i[15];
            if (r[0].setComponents(l - s, p - c, _ - g, T - b).normalize(), r[1].setComponents(l + s, p + c, _ + g, T + b).normalize(), r[2].setComponents(l + o, p + u, _ + x, T + M).normalize(), r[3].setComponents(l - o, p - u, _ - x, T - M).normalize(), r[4].setComponents(l - a, p - f, _ - S, T - E).normalize(), n === Ql) r[5].setComponents(l + a, p + f, _ + S, T + E).normalize();
            else if (n === Mb) r[5].setComponents(a, f, S, E).normalize();
            else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: " + n);
            return this;
        }
        intersectsObject(e) {
            if (e.boundingSphere !== void 0) e.boundingSphere === null && e.computeBoundingSphere(), np.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);
            else {
                const n = e.geometry;
                n.boundingSphere === null && n.computeBoundingSphere(), np.copy(n.boundingSphere).applyMatrix4(e.matrixWorld);
            }
            return this.intersectsSphere(np);
        }
        intersectsSprite(e) {
            return np.center.set(0, 0, 0), np.radius = .7071067811865476, np.applyMatrix4(e.matrixWorld), this.intersectsSphere(np);
        }
        intersectsSphere(e) {
            const n = this.planes, r = e.center, i = -e.radius;
            for(let s = 0; s < 6; s++)if (n[s].distanceToPoint(r) < i) return !1;
            return !0;
        }
        intersectsBox(e) {
            const n = this.planes;
            for(let r = 0; r < 6; r++){
                const i = n[r];
                if (xS.x = i.normal.x > 0 ? e.max.x : e.min.x, xS.y = i.normal.y > 0 ? e.max.y : e.min.y, xS.z = i.normal.z > 0 ? e.max.z : e.min.z, i.distanceToPoint(xS) < 0) return !1;
            }
            return !0;
        }
        containsPoint(e) {
            const n = this.planes;
            for(let r = 0; r < 6; r++)if (n[r].distanceToPoint(e) < 0) return !1;
            return !0;
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    function aN(t, e) {
        return t - e;
    }
    function Oge(t, e) {
        return t.z - e.z;
    }
    function Lge(t, e) {
        return e.z - t.z;
    }
    class Dge {
        constructor(){
            this.index = 0, this.pool = [], this.list = [];
        }
        push(e, n, r, i) {
            const s = this.pool, o = this.list;
            this.index >= s.length && s.push({
                start: -1,
                count: -1,
                z: -1,
                index: -1
            });
            const a = s[this.index];
            o.push(a), this.index++, a.start = e, a.count = n, a.z = r, a.index = i;
        }
        reset() {
            this.list.length = 0, this.index = 0;
        }
    }
    const Ho = new fn, Fge = new Ft(1, 1, 1), lN = new mw, bS = new Co, rp = new Ks, Ox = new ye, VU = new ye, jge = new ye, cN = new Dge, zs = new zi, wS = [];
    function Bge(t, e, n = 0) {
        const r = e.itemSize;
        if (t.isInterleavedBufferAttribute || t.array.constructor !== e.array.constructor) {
            const i = t.count;
            for(let s = 0; s < i; s++)for(let o = 0; o < r; o++)e.setComponent(s + n, o, t.getComponent(s, o));
        } else e.array.set(t.array, n * r);
        e.needsUpdate = !0;
    }
    function ip(t, e) {
        if (t.constructor !== e.constructor) {
            const n = Math.min(t.length, e.length);
            for(let r = 0; r < n; r++)e[r] = t[r];
        } else {
            const n = Math.min(t.length, e.length);
            e.set(new t.constructor(t.buffer, 0, n));
        }
    }
    class V6 extends zi {
        get maxInstanceCount() {
            return this._maxInstanceCount;
        }
        get instanceCount() {
            return this._instanceInfo.length - this._availableInstanceIds.length;
        }
        get unusedVertexCount() {
            return this._maxVertexCount - this._nextVertexStart;
        }
        get unusedIndexCount() {
            return this._maxIndexCount - this._nextIndexStart;
        }
        constructor(e, n, r = n * 2, i){
            super(new Fn, i), this.isBatchedMesh = !0, this.perObjectFrustumCulled = !0, this.sortObjects = !0, this.boundingBox = null, this.boundingSphere = null, this.customSort = null, this._instanceInfo = [], this._geometryInfo = [], this._availableInstanceIds = [], this._availableGeometryIds = [], this._nextIndexStart = 0, this._nextVertexStart = 0, this._geometryCount = 0, this._visibilityChanged = !0, this._geometryInitialized = !1, this._maxInstanceCount = e, this._maxVertexCount = n, this._maxIndexCount = r, this._multiDrawCounts = new Int32Array(e), this._multiDrawStarts = new Int32Array(e), this._multiDrawCount = 0, this._multiDrawInstances = null, this._matricesTexture = null, this._indirectTexture = null, this._colorsTexture = null, this._initMatricesTexture(), this._initIndirectTexture();
        }
        _initMatricesTexture() {
            let e = Math.sqrt(this._maxInstanceCount * 4);
            e = Math.ceil(e / 4) * 4, e = Math.max(e, 4);
            const n = new Float32Array(e * e * 4), r = new tc(n, e, e, Hs, na);
            this._matricesTexture = r;
        }
        _initIndirectTexture() {
            let e = Math.sqrt(this._maxInstanceCount);
            e = Math.ceil(e);
            const n = new Uint32Array(e * e), r = new tc(n, e, e, dw, yd);
            this._indirectTexture = r;
        }
        _initColorsTexture() {
            let e = Math.sqrt(this._maxInstanceCount);
            e = Math.ceil(e);
            const n = new Float32Array(e * e * 4).fill(1), r = new tc(n, e, e, Hs, na);
            r.colorSpace = Zn.workingColorSpace, this._colorsTexture = r;
        }
        _initializeGeometry(e) {
            const n = this.geometry, r = this._maxVertexCount, i = this._maxIndexCount;
            if (this._geometryInitialized === !1) {
                for(const s in e.attributes){
                    const o = e.getAttribute(s), { array: a, itemSize: l, normalized: c } = o, u = new a.constructor(r * l), f = new wr(u, l, c);
                    n.setAttribute(s, f);
                }
                if (e.getIndex() !== null) {
                    const s = r > 65535 ? new Uint32Array(i) : new Uint16Array(i);
                    n.setIndex(new wr(s, 1));
                }
                this._geometryInitialized = !0;
            }
        }
        _validateGeometry(e) {
            const n = this.geometry;
            if (!!e.getIndex() != !!n.getIndex()) throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');
            for(const r in n.attributes){
                if (!e.hasAttribute(r)) throw new Error(`THREE.BatchedMesh: Added geometry missing "${r}". All geometries must have consistent attributes.`);
                const i = e.getAttribute(r), s = n.getAttribute(r);
                if (i.itemSize !== s.itemSize || i.normalized !== s.normalized) throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.");
            }
        }
        validateInstanceId(e) {
            const n = this._instanceInfo;
            if (e < 0 || e >= n.length || n[e].active === !1) throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`);
        }
        validateGeometryId(e) {
            const n = this._geometryInfo;
            if (e < 0 || e >= n.length || n[e].active === !1) throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`);
        }
        setCustomSort(e) {
            return this.customSort = e, this;
        }
        computeBoundingBox() {
            this.boundingBox === null && (this.boundingBox = new Co);
            const e = this.boundingBox, n = this._instanceInfo;
            e.makeEmpty();
            for(let r = 0, i = n.length; r < i; r++){
                if (n[r].active === !1) continue;
                const s = n[r].geometryIndex;
                this.getMatrixAt(r, Ho), this.getBoundingBoxAt(s, bS).applyMatrix4(Ho), e.union(bS);
            }
        }
        computeBoundingSphere() {
            this.boundingSphere === null && (this.boundingSphere = new Ks);
            const e = this.boundingSphere, n = this._instanceInfo;
            e.makeEmpty();
            for(let r = 0, i = n.length; r < i; r++){
                if (n[r].active === !1) continue;
                const s = n[r].geometryIndex;
                this.getMatrixAt(r, Ho), this.getBoundingSphereAt(s, rp).applyMatrix4(Ho), e.union(rp);
            }
        }
        addInstance(e) {
            if (this._instanceInfo.length >= this.maxInstanceCount && this._availableInstanceIds.length === 0) throw new Error("THREE.BatchedMesh: Maximum item count reached.");
            const r = {
                visible: !0,
                active: !0,
                geometryIndex: e
            };
            let i = null;
            this._availableInstanceIds.length > 0 ? (this._availableInstanceIds.sort(aN), i = this._availableInstanceIds.shift(), this._instanceInfo[i] = r) : (i = this._instanceInfo.length, this._instanceInfo.push(r));
            const s = this._matricesTexture;
            Ho.identity().toArray(s.image.data, i * 16), s.needsUpdate = !0;
            const o = this._colorsTexture;
            return o && (Fge.toArray(o.image.data, i * 4), o.needsUpdate = !0), this._visibilityChanged = !0, i;
        }
        addGeometry(e, n = -1, r = -1) {
            this._initializeGeometry(e), this._validateGeometry(e);
            const i = {
                vertexStart: -1,
                vertexCount: -1,
                reservedVertexCount: -1,
                indexStart: -1,
                indexCount: -1,
                reservedIndexCount: -1,
                start: -1,
                count: -1,
                boundingBox: null,
                boundingSphere: null,
                active: !0
            }, s = this._geometryInfo;
            i.vertexStart = this._nextVertexStart, i.reservedVertexCount = n === -1 ? e.getAttribute("position").count : n;
            const o = e.getIndex();
            if (o !== null && (i.indexStart = this._nextIndexStart, i.reservedIndexCount = r === -1 ? o.count : r), i.indexStart !== -1 && i.indexStart + i.reservedIndexCount > this._maxIndexCount || i.vertexStart + i.reservedVertexCount > this._maxVertexCount) throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");
            let l;
            return this._availableGeometryIds.length > 0 ? (this._availableGeometryIds.sort(aN), l = this._availableGeometryIds.shift(), s[l] = i) : (l = this._geometryCount, this._geometryCount++, s.push(i)), this.setGeometryAt(l, e), this._nextIndexStart = i.indexStart + i.reservedIndexCount, this._nextVertexStart = i.vertexStart + i.reservedVertexCount, l;
        }
        setGeometryAt(e, n) {
            if (e >= this._geometryCount) throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");
            this._validateGeometry(n);
            const r = this.geometry, i = r.getIndex() !== null, s = r.getIndex(), o = n.getIndex(), a = this._geometryInfo[e];
            if (i && o.count > a.reservedIndexCount || n.attributes.position.count > a.reservedVertexCount) throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");
            const l = a.vertexStart, c = a.reservedVertexCount;
            a.vertexCount = n.getAttribute("position").count;
            for(const u in r.attributes){
                const f = n.getAttribute(u), p = r.getAttribute(u);
                Bge(f, p, l);
                const g = f.itemSize;
                for(let x = f.count, S = c; x < S; x++){
                    const _ = l + x;
                    for(let b = 0; b < g; b++)p.setComponent(_, b, 0);
                }
                p.needsUpdate = !0, p.addUpdateRange(l * g, c * g);
            }
            if (i) {
                const u = a.indexStart, f = a.reservedIndexCount;
                a.indexCount = n.getIndex().count;
                for(let p = 0; p < o.count; p++)s.setX(u + p, l + o.getX(p));
                for(let p = o.count, g = f; p < g; p++)s.setX(u + p, l);
                s.needsUpdate = !0, s.addUpdateRange(u, a.reservedIndexCount);
            }
            return a.start = i ? a.indexStart : a.vertexStart, a.count = i ? a.indexCount : a.vertexCount, a.boundingBox = null, n.boundingBox !== null && (a.boundingBox = n.boundingBox.clone()), a.boundingSphere = null, n.boundingSphere !== null && (a.boundingSphere = n.boundingSphere.clone()), this._visibilityChanged = !0, e;
        }
        deleteGeometry(e) {
            const n = this._geometryInfo;
            if (e >= n.length || n[e].active === !1) return this;
            const r = this._instanceInfo;
            for(let i = 0, s = r.length; i < s; i++)r[i].active && r[i].geometryIndex === e && this.deleteInstance(i);
            return n[e].active = !1, this._availableGeometryIds.push(e), this._visibilityChanged = !0, this;
        }
        deleteInstance(e) {
            return this.validateInstanceId(e), this._instanceInfo[e].active = !1, this._availableInstanceIds.push(e), this._visibilityChanged = !0, this;
        }
        optimize() {
            let e = 0, n = 0;
            const r = this._geometryInfo, i = r.map((o, a)=>a).sort((o, a)=>r[o].vertexStart - r[a].vertexStart), s = this.geometry;
            for(let o = 0, a = r.length; o < a; o++){
                const l = i[o], c = r[l];
                if (c.active !== !1) {
                    if (s.index !== null) {
                        if (c.indexStart !== n) {
                            const { indexStart: u, vertexStart: f, reservedIndexCount: p } = c, g = s.index, x = g.array, S = e - f;
                            for(let _ = u; _ < u + p; _++)x[_] = x[_] + S;
                            g.array.copyWithin(n, u, u + p), g.addUpdateRange(n, p), c.indexStart = n;
                        }
                        n += c.reservedIndexCount;
                    }
                    if (c.vertexStart !== e) {
                        const { vertexStart: u, reservedVertexCount: f } = c, p = s.attributes;
                        for(const g in p){
                            const x = p[g], { array: S, itemSize: _ } = x;
                            S.copyWithin(e * _, u * _, (u + f) * _), x.addUpdateRange(e * _, f * _);
                        }
                        c.vertexStart = e;
                    }
                    e += c.reservedVertexCount, c.start = s.index ? c.indexStart : c.vertexStart, this._nextIndexStart = s.index ? c.indexStart + c.reservedIndexCount : 0, this._nextVertexStart = c.vertexStart + c.reservedVertexCount;
                }
            }
            return this;
        }
        getBoundingBoxAt(e, n) {
            if (e >= this._geometryCount) return null;
            const r = this.geometry, i = this._geometryInfo[e];
            if (i.boundingBox === null) {
                const s = new Co, o = r.index, a = r.attributes.position;
                for(let l = i.start, c = i.start + i.count; l < c; l++){
                    let u = l;
                    o && (u = o.getX(u)), s.expandByPoint(Ox.fromBufferAttribute(a, u));
                }
                i.boundingBox = s;
            }
            return n.copy(i.boundingBox), n;
        }
        getBoundingSphereAt(e, n) {
            if (e >= this._geometryCount) return null;
            const r = this.geometry, i = this._geometryInfo[e];
            if (i.boundingSphere === null) {
                const s = new Ks;
                this.getBoundingBoxAt(e, bS), bS.getCenter(s.center);
                const o = r.index, a = r.attributes.position;
                let l = 0;
                for(let c = i.start, u = i.start + i.count; c < u; c++){
                    let f = c;
                    o && (f = o.getX(f)), Ox.fromBufferAttribute(a, f), l = Math.max(l, s.center.distanceToSquared(Ox));
                }
                s.radius = Math.sqrt(l), i.boundingSphere = s;
            }
            return n.copy(i.boundingSphere), n;
        }
        setMatrixAt(e, n) {
            this.validateInstanceId(e);
            const r = this._matricesTexture, i = this._matricesTexture.image.data;
            return n.toArray(i, e * 16), r.needsUpdate = !0, this;
        }
        getMatrixAt(e, n) {
            return this.validateInstanceId(e), n.fromArray(this._matricesTexture.image.data, e * 16);
        }
        setColorAt(e, n) {
            return this.validateInstanceId(e), this._colorsTexture === null && this._initColorsTexture(), n.toArray(this._colorsTexture.image.data, e * 4), this._colorsTexture.needsUpdate = !0, this;
        }
        getColorAt(e, n) {
            return this.validateInstanceId(e), n.fromArray(this._colorsTexture.image.data, e * 4);
        }
        setVisibleAt(e, n) {
            return this.validateInstanceId(e), this._instanceInfo[e].visible === n ? this : (this._instanceInfo[e].visible = n, this._visibilityChanged = !0, this);
        }
        getVisibleAt(e) {
            return this.validateInstanceId(e), this._instanceInfo[e].visible;
        }
        setGeometryIdAt(e, n) {
            return this.validateInstanceId(e), this.validateGeometryId(n), this._instanceInfo[e].geometryIndex = n, this;
        }
        getGeometryIdAt(e) {
            return this.validateInstanceId(e), this._instanceInfo[e].geometryIndex;
        }
        getGeometryRangeAt(e, n = {}) {
            this.validateGeometryId(e);
            const r = this._geometryInfo[e];
            return n.vertexStart = r.vertexStart, n.vertexCount = r.vertexCount, n.reservedVertexCount = r.reservedVertexCount, n.indexStart = r.indexStart, n.indexCount = r.indexCount, n.reservedIndexCount = r.reservedIndexCount, n.start = r.start, n.count = r.count, n;
        }
        setInstanceCount(e) {
            const n = this._availableInstanceIds, r = this._instanceInfo;
            for(n.sort(aN); n[n.length - 1] === r.length;)r.pop(), n.pop();
            if (e < r.length) throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);
            const i = new Int32Array(e), s = new Int32Array(e);
            ip(this._multiDrawCounts, i), ip(this._multiDrawStarts, s), this._multiDrawCounts = i, this._multiDrawStarts = s, this._maxInstanceCount = e;
            const o = this._indirectTexture, a = this._matricesTexture, l = this._colorsTexture;
            o.dispose(), this._initIndirectTexture(), ip(o.image.data, this._indirectTexture.image.data), a.dispose(), this._initMatricesTexture(), ip(a.image.data, this._matricesTexture.image.data), l && (l.dispose(), this._initColorsTexture(), ip(l.image.data, this._colorsTexture.image.data));
        }
        setGeometrySize(e, n) {
            const r = [
                ...this._geometryInfo
            ].filter((a)=>a.active);
            if (Math.max(...r.map((a)=>a.vertexStart + a.reservedVertexCount)) > e) throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${n}. Cannot shrink further.`);
            if (this.geometry.index && Math.max(...r.map((l)=>l.indexStart + l.reservedIndexCount)) > n) throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${n}. Cannot shrink further.`);
            const s = this.geometry;
            s.dispose(), this._maxVertexCount = e, this._maxIndexCount = n, this._geometryInitialized && (this._geometryInitialized = !1, this.geometry = new Fn, this._initializeGeometry(s));
            const o = this.geometry;
            s.index && ip(s.index.array, o.index.array);
            for(const a in s.attributes)ip(s.attributes[a].array, o.attributes[a].array);
        }
        raycast(e, n) {
            const r = this._instanceInfo, i = this._geometryInfo, s = this.matrixWorld, o = this.geometry;
            zs.material = this.material, zs.geometry.index = o.index, zs.geometry.attributes = o.attributes, zs.geometry.boundingBox === null && (zs.geometry.boundingBox = new Co), zs.geometry.boundingSphere === null && (zs.geometry.boundingSphere = new Ks);
            for(let a = 0, l = r.length; a < l; a++){
                if (!r[a].visible || !r[a].active) continue;
                const c = r[a].geometryIndex, u = i[c];
                zs.geometry.setDrawRange(u.start, u.count), this.getMatrixAt(a, zs.matrixWorld).premultiply(s), this.getBoundingBoxAt(c, zs.geometry.boundingBox), this.getBoundingSphereAt(c, zs.geometry.boundingSphere), zs.raycast(e, wS);
                for(let f = 0, p = wS.length; f < p; f++){
                    const g = wS[f];
                    g.object = this, g.batchId = a, n.push(g);
                }
                wS.length = 0;
            }
            zs.material = null, zs.geometry.index = null, zs.geometry.attributes = {}, zs.geometry.setDrawRange(0, 1 / 0);
        }
        copy(e) {
            return super.copy(e), this.geometry = e.geometry.clone(), this.perObjectFrustumCulled = e.perObjectFrustumCulled, this.sortObjects = e.sortObjects, this.boundingBox = e.boundingBox !== null ? e.boundingBox.clone() : null, this.boundingSphere = e.boundingSphere !== null ? e.boundingSphere.clone() : null, this._geometryInfo = e._geometryInfo.map((n)=>({
                    ...n,
                    boundingBox: n.boundingBox !== null ? n.boundingBox.clone() : null,
                    boundingSphere: n.boundingSphere !== null ? n.boundingSphere.clone() : null
                })), this._instanceInfo = e._instanceInfo.map((n)=>({
                    ...n
                })), this._maxInstanceCount = e._maxInstanceCount, this._maxVertexCount = e._maxVertexCount, this._maxIndexCount = e._maxIndexCount, this._geometryInitialized = e._geometryInitialized, this._geometryCount = e._geometryCount, this._multiDrawCounts = e._multiDrawCounts.slice(), this._multiDrawStarts = e._multiDrawStarts.slice(), this._matricesTexture = e._matricesTexture.clone(), this._matricesTexture.image.data = this._matricesTexture.image.data.slice(), this._colorsTexture !== null && (this._colorsTexture = e._colorsTexture.clone(), this._colorsTexture.image.data = this._colorsTexture.image.data.slice()), this;
        }
        dispose() {
            return this.geometry.dispose(), this._matricesTexture.dispose(), this._matricesTexture = null, this._indirectTexture.dispose(), this._indirectTexture = null, this._colorsTexture !== null && (this._colorsTexture.dispose(), this._colorsTexture = null), this;
        }
        onBeforeRender(e, n, r, i, s) {
            if (!this._visibilityChanged && !this.perObjectFrustumCulled && !this.sortObjects) return;
            const o = i.getIndex(), a = o === null ? 1 : o.array.BYTES_PER_ELEMENT, l = this._instanceInfo, c = this._multiDrawStarts, u = this._multiDrawCounts, f = this._geometryInfo, p = this.perObjectFrustumCulled, g = this._indirectTexture, x = g.image.data;
            p && (Ho.multiplyMatrices(r.projectionMatrix, r.matrixWorldInverse).multiply(this.matrixWorld), lN.setFromProjectionMatrix(Ho, e.coordinateSystem));
            let S = 0;
            if (this.sortObjects) {
                Ho.copy(this.matrixWorld).invert(), Ox.setFromMatrixPosition(r.matrixWorld).applyMatrix4(Ho), VU.set(0, 0, -1).transformDirection(r.matrixWorld).transformDirection(Ho);
                for(let M = 0, E = l.length; M < E; M++)if (l[M].visible && l[M].active) {
                    const T = l[M].geometryIndex;
                    this.getMatrixAt(M, Ho), this.getBoundingSphereAt(T, rp).applyMatrix4(Ho);
                    let k = !1;
                    if (p && (k = !lN.intersectsSphere(rp)), !k) {
                        const N = f[T], D = jge.subVectors(rp.center, Ox).dot(VU);
                        cN.push(N.start, N.count, D, M);
                    }
                }
                const _ = cN.list, b = this.customSort;
                b === null ? _.sort(s.transparent ? Lge : Oge) : b.call(this, _, r);
                for(let M = 0, E = _.length; M < E; M++){
                    const T = _[M];
                    c[S] = T.start * a, u[S] = T.count, x[S] = T.index, S++;
                }
                cN.reset();
            } else for(let _ = 0, b = l.length; _ < b; _++)if (l[_].visible && l[_].active) {
                const M = l[_].geometryIndex;
                let E = !1;
                if (p && (this.getMatrixAt(_, Ho), this.getBoundingSphereAt(M, rp).applyMatrix4(Ho), E = !lN.intersectsSphere(rp)), !E) {
                    const T = f[M];
                    c[S] = T.start * a, u[S] = T.count, x[S] = _, S++;
                }
            }
            g.needsUpdate = !0, this._multiDrawCount = S, this._visibilityChanged = !1;
        }
        onBeforeShadow(e, n, r, i, s, o) {
            this.onBeforeRender(e, null, i, s, o);
        }
    }
    class No extends no {
        constructor(e){
            super(), this.isLineBasicMaterial = !0, this.type = "LineBasicMaterial", this.color = new Ft(16777215), this.map = null, this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.map = e.map, this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this.fog = e.fog, this;
        }
    }
    const kM = new ye, OM = new ye, WU = new fn, Lx = new ym, _S = new Ks, uN = new ye, qU = new ye;
    class eh extends ir {
        constructor(e = new Fn, n = new No){
            super(), this.isLine = !0, this.type = "Line", this.geometry = e, this.material = n, this.updateMorphTargets();
        }
        copy(e, n) {
            return super.copy(e, n), this.material = Array.isArray(e.material) ? e.material.slice() : e.material, this.geometry = e.geometry, this;
        }
        computeLineDistances() {
            const e = this.geometry;
            if (e.index === null) {
                const n = e.attributes.position, r = [
                    0
                ];
                for(let i = 1, s = n.count; i < s; i++)kM.fromBufferAttribute(n, i - 1), OM.fromBufferAttribute(n, i), r[i] = r[i - 1], r[i] += kM.distanceTo(OM);
                e.setAttribute("lineDistance", new Gt(r, 1));
            } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
            return this;
        }
        raycast(e, n) {
            const r = this.geometry, i = this.matrixWorld, s = e.params.Line.threshold, o = r.drawRange;
            if (r.boundingSphere === null && r.computeBoundingSphere(), _S.copy(r.boundingSphere), _S.applyMatrix4(i), _S.radius += s, e.ray.intersectsSphere(_S) === !1) return;
            WU.copy(i).invert(), Lx.copy(e.ray).applyMatrix4(WU);
            const a = s / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a, c = this.isLineSegments ? 2 : 1, u = r.index, p = r.attributes.position;
            if (u !== null) {
                const g = Math.max(0, o.start), x = Math.min(u.count, o.start + o.count);
                for(let S = g, _ = x - 1; S < _; S += c){
                    const b = u.getX(S), M = u.getX(S + 1), E = SS(this, e, Lx, l, b, M, S);
                    E && n.push(E);
                }
                if (this.isLineLoop) {
                    const S = u.getX(x - 1), _ = u.getX(g), b = SS(this, e, Lx, l, S, _, x - 1);
                    b && n.push(b);
                }
            } else {
                const g = Math.max(0, o.start), x = Math.min(p.count, o.start + o.count);
                for(let S = g, _ = x - 1; S < _; S += c){
                    const b = SS(this, e, Lx, l, S, S + 1, S);
                    b && n.push(b);
                }
                if (this.isLineLoop) {
                    const S = SS(this, e, Lx, l, x - 1, g, x - 1);
                    S && n.push(S);
                }
            }
        }
        updateMorphTargets() {
            const n = this.geometry.morphAttributes, r = Object.keys(n);
            if (r.length > 0) {
                const i = n[r[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let s = 0, o = i.length; s < o; s++){
                        const a = i[s].name || String(s);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = s;
                    }
                }
            }
        }
    }
    function SS(t, e, n, r, i, s, o) {
        const a = t.geometry.attributes.position;
        if (kM.fromBufferAttribute(a, i), OM.fromBufferAttribute(a, s), n.distanceSqToSegment(kM, OM, uN, qU) > r) return;
        uN.applyMatrix4(t.matrixWorld);
        const c = e.ray.origin.distanceTo(uN);
        if (!(c < e.near || c > e.far)) return {
            distance: c,
            point: qU.clone().applyMatrix4(t.matrixWorld),
            index: o,
            face: null,
            faceIndex: null,
            barycoord: null,
            object: t
        };
    }
    const HU = new ye, $U = new ye;
    class Qc extends eh {
        constructor(e, n){
            super(e, n), this.isLineSegments = !0, this.type = "LineSegments";
        }
        computeLineDistances() {
            const e = this.geometry;
            if (e.index === null) {
                const n = e.attributes.position, r = [];
                for(let i = 0, s = n.count; i < s; i += 2)HU.fromBufferAttribute(n, i), $U.fromBufferAttribute(n, i + 1), r[i] = i === 0 ? 0 : r[i - 1], r[i + 1] = r[i] + HU.distanceTo($U);
                e.setAttribute("lineDistance", new Gt(r, 1));
            } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
            return this;
        }
    }
    class W6 extends eh {
        constructor(e, n){
            super(e, n), this.isLineLoop = !0, this.type = "LineLoop";
        }
    }
    class b2 extends no {
        constructor(e){
            super(), this.isPointsMaterial = !0, this.type = "PointsMaterial", this.color = new Ft(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = !0, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this.fog = e.fog, this;
        }
    }
    const GU = new fn, pk = new ym, ES = new Ks, MS = new ye;
    class q6 extends ir {
        constructor(e = new Fn, n = new b2){
            super(), this.isPoints = !0, this.type = "Points", this.geometry = e, this.material = n, this.updateMorphTargets();
        }
        copy(e, n) {
            return super.copy(e, n), this.material = Array.isArray(e.material) ? e.material.slice() : e.material, this.geometry = e.geometry, this;
        }
        raycast(e, n) {
            const r = this.geometry, i = this.matrixWorld, s = e.params.Points.threshold, o = r.drawRange;
            if (r.boundingSphere === null && r.computeBoundingSphere(), ES.copy(r.boundingSphere), ES.applyMatrix4(i), ES.radius += s, e.ray.intersectsSphere(ES) === !1) return;
            GU.copy(i).invert(), pk.copy(e.ray).applyMatrix4(GU);
            const a = s / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a, c = r.index, f = r.attributes.position;
            if (c !== null) {
                const p = Math.max(0, o.start), g = Math.min(c.count, o.start + o.count);
                for(let x = p, S = g; x < S; x++){
                    const _ = c.getX(x);
                    MS.fromBufferAttribute(f, _), XU(MS, _, l, i, e, n, this);
                }
            } else {
                const p = Math.max(0, o.start), g = Math.min(f.count, o.start + o.count);
                for(let x = p, S = g; x < S; x++)MS.fromBufferAttribute(f, x), XU(MS, x, l, i, e, n, this);
            }
        }
        updateMorphTargets() {
            const n = this.geometry.morphAttributes, r = Object.keys(n);
            if (r.length > 0) {
                const i = n[r[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let s = 0, o = i.length; s < o; s++){
                        const a = i[s].name || String(s);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = s;
                    }
                }
            }
        }
    }
    function XU(t, e, n, r, i, s, o) {
        const a = pk.distanceSqToPoint(t);
        if (a < n) {
            const l = new ye;
            pk.closestPointToPoint(t, l), l.applyMatrix4(r);
            const c = i.ray.origin.distanceTo(l);
            if (c < i.near || c > i.far) return;
            s.push({
                distance: c,
                distanceToRay: Math.sqrt(a),
                point: l,
                index: e,
                face: null,
                faceIndex: null,
                barycoord: null,
                object: o
            });
        }
    }
    class H6 extends ui {
        constructor(e, n, r, i, s, o, a, l, c){
            super(e, n, r, i, s, o, a, l, c), this.isVideoTexture = !0, this.minFilter = o !== void 0 ? o : es, this.magFilter = s !== void 0 ? s : es, this.generateMipmaps = !1;
            const u = this;
            function f() {
                u.needsUpdate = !0, e.requestVideoFrameCallback(f);
            }
            "requestVideoFrameCallback" in e && e.requestVideoFrameCallback(f);
        }
        clone() {
            return new this.constructor(this.image).copy(this);
        }
        update() {
            const e = this.image;
            "requestVideoFrameCallback" in e === !1 && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
        }
    }
    class Uge extends H6 {
        constructor(e, n, r, i, s, o, a, l){
            super({}, e, n, r, i, s, o, a, l), this.isVideoFrameTexture = !0;
        }
        update() {}
        clone() {
            return new this.constructor().copy(this);
        }
        setFrame(e) {
            this.image = e, this.needsUpdate = !0;
        }
    }
    class zge extends ui {
        constructor(e, n){
            super({
                width: e,
                height: n
            }), this.isFramebufferTexture = !0, this.magFilter = Is, this.minFilter = Is, this.generateMipmaps = !1, this.needsUpdate = !0;
        }
    }
    class QT extends ui {
        constructor(e, n, r, i, s, o, a, l, c, u, f, p){
            super(null, o, a, l, c, u, i, s, f, p), this.isCompressedTexture = !0, this.image = {
                width: n,
                height: r
            }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1;
        }
    }
    class Vge extends QT {
        constructor(e, n, r, i, s, o){
            super(e, n, r, s, o), this.isCompressedArrayTexture = !0, this.image.depth = i, this.wrapR = ll, this.layerUpdates = new Set;
        }
        addLayerUpdate(e) {
            this.layerUpdates.add(e);
        }
        clearLayerUpdates() {
            this.layerUpdates.clear();
        }
    }
    class Wge extends QT {
        constructor(e, n, r){
            super(void 0, e[0].width, e[0].height, n, r, gd), this.isCompressedCubeTexture = !0, this.isCubeTexture = !0, this.image = e;
        }
    }
    class qge extends ui {
        constructor(e, n, r, i, s, o, a, l, c){
            super(e, n, r, i, s, o, a, l, c), this.isCanvasTexture = !0, this.needsUpdate = !0;
        }
    }
    class w2 extends ui {
        constructor(e, n, r, i, s, o, a, l, c, u = Vp){
            if (u !== Vp && u !== am) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
            r === void 0 && u === Vp && (r = yd), r === void 0 && u === am && (r = om), super(null, i, s, o, a, l, u, r, c), this.isDepthTexture = !0, this.image = {
                width: e,
                height: n
            }, this.magFilter = a !== void 0 ? a : Is, this.minFilter = l !== void 0 ? l : Is, this.flipY = !1, this.generateMipmaps = !1, this.compareFunction = null;
        }
        copy(e) {
            return super.copy(e), this.compareFunction = e.compareFunction, this;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return this.compareFunction !== null && (n.compareFunction = this.compareFunction), n;
        }
    }
    class uc {
        constructor(){
            this.type = "Curve", this.arcLengthDivisions = 200;
        }
        getPoint() {
            return console.warn("THREE.Curve: .getPoint() not implemented."), null;
        }
        getPointAt(e, n) {
            const r = this.getUtoTmapping(e);
            return this.getPoint(r, n);
        }
        getPoints(e = 5) {
            const n = [];
            for(let r = 0; r <= e; r++)n.push(this.getPoint(r / e));
            return n;
        }
        getSpacedPoints(e = 5) {
            const n = [];
            for(let r = 0; r <= e; r++)n.push(this.getPointAt(r / e));
            return n;
        }
        getLength() {
            const e = this.getLengths();
            return e[e.length - 1];
        }
        getLengths(e = this.arcLengthDivisions) {
            if (this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
            this.needsUpdate = !1;
            const n = [];
            let r, i = this.getPoint(0), s = 0;
            n.push(0);
            for(let o = 1; o <= e; o++)r = this.getPoint(o / e), s += r.distanceTo(i), n.push(s), i = r;
            return this.cacheArcLengths = n, n;
        }
        updateArcLengths() {
            this.needsUpdate = !0, this.getLengths();
        }
        getUtoTmapping(e, n) {
            const r = this.getLengths();
            let i = 0;
            const s = r.length;
            let o;
            n ? o = n : o = e * r[s - 1];
            let a = 0, l = s - 1, c;
            for(; a <= l;)if (i = Math.floor(a + (l - a) / 2), c = r[i] - o, c < 0) a = i + 1;
            else if (c > 0) l = i - 1;
            else {
                l = i;
                break;
            }
            if (i = l, r[i] === o) return i / (s - 1);
            const u = r[i], p = r[i + 1] - u, g = (o - u) / p;
            return (i + g) / (s - 1);
        }
        getTangent(e, n) {
            let i = e - 1e-4, s = e + 1e-4;
            i < 0 && (i = 0), s > 1 && (s = 1);
            const o = this.getPoint(i), a = this.getPoint(s), l = n || (o.isVector2 ? new ot : new ye);
            return l.copy(a).sub(o).normalize(), l;
        }
        getTangentAt(e, n) {
            const r = this.getUtoTmapping(e);
            return this.getTangent(r, n);
        }
        computeFrenetFrames(e, n) {
            const r = new ye, i = [], s = [], o = [], a = new ye, l = new fn;
            for(let g = 0; g <= e; g++){
                const x = g / e;
                i[g] = this.getTangentAt(x, new ye);
            }
            s[0] = new ye, o[0] = new ye;
            let c = Number.MAX_VALUE;
            const u = Math.abs(i[0].x), f = Math.abs(i[0].y), p = Math.abs(i[0].z);
            u <= c && (c = u, r.set(1, 0, 0)), f <= c && (c = f, r.set(0, 1, 0)), p <= c && r.set(0, 0, 1), a.crossVectors(i[0], r).normalize(), s[0].crossVectors(i[0], a), o[0].crossVectors(i[0], s[0]);
            for(let g = 1; g <= e; g++){
                if (s[g] = s[g - 1].clone(), o[g] = o[g - 1].clone(), a.crossVectors(i[g - 1], i[g]), a.length() > Number.EPSILON) {
                    a.normalize();
                    const x = Math.acos(_n(i[g - 1].dot(i[g]), -1, 1));
                    s[g].applyMatrix4(l.makeRotationAxis(a, x));
                }
                o[g].crossVectors(i[g], s[g]);
            }
            if (n === !0) {
                let g = Math.acos(_n(s[0].dot(s[e]), -1, 1));
                g /= e, i[0].dot(a.crossVectors(s[0], s[e])) > 0 && (g = -g);
                for(let x = 1; x <= e; x++)s[x].applyMatrix4(l.makeRotationAxis(i[x], g * x)), o[x].crossVectors(i[x], s[x]);
            }
            return {
                tangents: i,
                normals: s,
                binormals: o
            };
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            return this.arcLengthDivisions = e.arcLengthDivisions, this;
        }
        toJSON() {
            const e = {
                metadata: {
                    version: 4.6,
                    type: "Curve",
                    generator: "Curve.toJSON"
                }
            };
            return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e;
        }
        fromJSON(e) {
            return this.arcLengthDivisions = e.arcLengthDivisions, this;
        }
    }
    class eC extends uc {
        constructor(e = 0, n = 0, r = 1, i = 1, s = 0, o = Math.PI * 2, a = !1, l = 0){
            super(), this.isEllipseCurve = !0, this.type = "EllipseCurve", this.aX = e, this.aY = n, this.xRadius = r, this.yRadius = i, this.aStartAngle = s, this.aEndAngle = o, this.aClockwise = a, this.aRotation = l;
        }
        getPoint(e, n = new ot) {
            const r = n, i = Math.PI * 2;
            let s = this.aEndAngle - this.aStartAngle;
            const o = Math.abs(s) < Number.EPSILON;
            for(; s < 0;)s += i;
            for(; s > i;)s -= i;
            s < Number.EPSILON && (o ? s = 0 : s = i), this.aClockwise === !0 && !o && (s === i ? s = -i : s = s - i);
            const a = this.aStartAngle + e * s;
            let l = this.aX + this.xRadius * Math.cos(a), c = this.aY + this.yRadius * Math.sin(a);
            if (this.aRotation !== 0) {
                const u = Math.cos(this.aRotation), f = Math.sin(this.aRotation), p = l - this.aX, g = c - this.aY;
                l = p * u - g * f + this.aX, c = p * f + g * u + this.aY;
            }
            return r.set(l, c);
        }
        copy(e) {
            return super.copy(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
        }
    }
    class $6 extends eC {
        constructor(e, n, r, i, s, o){
            super(e, n, r, r, i, s, o), this.isArcCurve = !0, this.type = "ArcCurve";
        }
    }
    function _2() {
        let t = 0, e = 0, n = 0, r = 0;
        function i(s, o, a, l) {
            t = s, e = a, n = -3 * s + 3 * o - 2 * a - l, r = 2 * s - 2 * o + a + l;
        }
        return {
            initCatmullRom: function(s, o, a, l, c) {
                i(o, a, c * (a - s), c * (l - o));
            },
            initNonuniformCatmullRom: function(s, o, a, l, c, u, f) {
                let p = (o - s) / c - (a - s) / (c + u) + (a - o) / u, g = (a - o) / u - (l - o) / (u + f) + (l - a) / f;
                p *= u, g *= u, i(o, a, p, g);
            },
            calc: function(s) {
                const o = s * s, a = o * s;
                return t + e * s + n * o + r * a;
            }
        };
    }
    const TS = new ye, dN = new _2, fN = new _2, hN = new _2;
    class G6 extends uc {
        constructor(e = [], n = !1, r = "centripetal", i = .5){
            super(), this.isCatmullRomCurve3 = !0, this.type = "CatmullRomCurve3", this.points = e, this.closed = n, this.curveType = r, this.tension = i;
        }
        getPoint(e, n = new ye) {
            const r = n, i = this.points, s = i.length, o = (s - (this.closed ? 0 : 1)) * e;
            let a = Math.floor(o), l = o - a;
            this.closed ? a += a > 0 ? 0 : (Math.floor(Math.abs(a) / s) + 1) * s : l === 0 && a === s - 1 && (a = s - 2, l = 1);
            let c, u;
            this.closed || a > 0 ? c = i[(a - 1) % s] : (TS.subVectors(i[0], i[1]).add(i[0]), c = TS);
            const f = i[a % s], p = i[(a + 1) % s];
            if (this.closed || a + 2 < s ? u = i[(a + 2) % s] : (TS.subVectors(i[s - 1], i[s - 2]).add(i[s - 1]), u = TS), this.curveType === "centripetal" || this.curveType === "chordal") {
                const g = this.curveType === "chordal" ? .5 : .25;
                let x = Math.pow(c.distanceToSquared(f), g), S = Math.pow(f.distanceToSquared(p), g), _ = Math.pow(p.distanceToSquared(u), g);
                S < 1e-4 && (S = 1), x < 1e-4 && (x = S), _ < 1e-4 && (_ = S), dN.initNonuniformCatmullRom(c.x, f.x, p.x, u.x, x, S, _), fN.initNonuniformCatmullRom(c.y, f.y, p.y, u.y, x, S, _), hN.initNonuniformCatmullRom(c.z, f.z, p.z, u.z, x, S, _);
            } else this.curveType === "catmullrom" && (dN.initCatmullRom(c.x, f.x, p.x, u.x, this.tension), fN.initCatmullRom(c.y, f.y, p.y, u.y, this.tension), hN.initCatmullRom(c.z, f.z, p.z, u.z, this.tension));
            return r.set(dN.calc(l), fN.calc(l), hN.calc(l)), r;
        }
        copy(e) {
            super.copy(e), this.points = [];
            for(let n = 0, r = e.points.length; n < r; n++){
                const i = e.points[n];
                this.points.push(i.clone());
            }
            return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
        }
        toJSON() {
            const e = super.toJSON();
            e.points = [];
            for(let n = 0, r = this.points.length; n < r; n++){
                const i = this.points[n];
                e.points.push(i.toArray());
            }
            return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e;
        }
        fromJSON(e) {
            super.fromJSON(e), this.points = [];
            for(let n = 0, r = e.points.length; n < r; n++){
                const i = e.points[n];
                this.points.push(new ye().fromArray(i));
            }
            return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
        }
    }
    function KU(t, e, n, r, i) {
        const s = (r - e) * .5, o = (i - n) * .5, a = t * t, l = t * a;
        return (2 * n - 2 * r + s + o) * l + (-3 * n + 3 * r - 2 * s - o) * a + s * t + n;
    }
    function Hge(t, e) {
        const n = 1 - t;
        return n * n * e;
    }
    function $ge(t, e) {
        return 2 * (1 - t) * t * e;
    }
    function Gge(t, e) {
        return t * t * e;
    }
    function N0(t, e, n, r) {
        return Hge(t, e) + $ge(t, n) + Gge(t, r);
    }
    function Xge(t, e) {
        const n = 1 - t;
        return n * n * n * e;
    }
    function Kge(t, e) {
        const n = 1 - t;
        return 3 * n * n * t * e;
    }
    function Yge(t, e) {
        return 3 * (1 - t) * t * t * e;
    }
    function Zge(t, e) {
        return t * t * t * e;
    }
    function P0(t, e, n, r, i) {
        return Xge(t, e) + Kge(t, n) + Yge(t, r) + Zge(t, i);
    }
    class S2 extends uc {
        constructor(e = new ot, n = new ot, r = new ot, i = new ot){
            super(), this.isCubicBezierCurve = !0, this.type = "CubicBezierCurve", this.v0 = e, this.v1 = n, this.v2 = r, this.v3 = i;
        }
        getPoint(e, n = new ot) {
            const r = n, i = this.v0, s = this.v1, o = this.v2, a = this.v3;
            return r.set(P0(e, i.x, s.x, o.x, a.x), P0(e, i.y, s.y, o.y, a.y)), r;
        }
        copy(e) {
            return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
        }
    }
    class X6 extends uc {
        constructor(e = new ye, n = new ye, r = new ye, i = new ye){
            super(), this.isCubicBezierCurve3 = !0, this.type = "CubicBezierCurve3", this.v0 = e, this.v1 = n, this.v2 = r, this.v3 = i;
        }
        getPoint(e, n = new ye) {
            const r = n, i = this.v0, s = this.v1, o = this.v2, a = this.v3;
            return r.set(P0(e, i.x, s.x, o.x, a.x), P0(e, i.y, s.y, o.y, a.y), P0(e, i.z, s.z, o.z, a.z)), r;
        }
        copy(e) {
            return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
        }
    }
    class E2 extends uc {
        constructor(e = new ot, n = new ot){
            super(), this.isLineCurve = !0, this.type = "LineCurve", this.v1 = e, this.v2 = n;
        }
        getPoint(e, n = new ot) {
            const r = n;
            return e === 1 ? r.copy(this.v2) : (r.copy(this.v2).sub(this.v1), r.multiplyScalar(e).add(this.v1)), r;
        }
        getPointAt(e, n) {
            return this.getPoint(e, n);
        }
        getTangent(e, n = new ot) {
            return n.subVectors(this.v2, this.v1).normalize();
        }
        getTangentAt(e, n) {
            return this.getTangent(e, n);
        }
        copy(e) {
            return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
        }
    }
    class K6 extends uc {
        constructor(e = new ye, n = new ye){
            super(), this.isLineCurve3 = !0, this.type = "LineCurve3", this.v1 = e, this.v2 = n;
        }
        getPoint(e, n = new ye) {
            const r = n;
            return e === 1 ? r.copy(this.v2) : (r.copy(this.v2).sub(this.v1), r.multiplyScalar(e).add(this.v1)), r;
        }
        getPointAt(e, n) {
            return this.getPoint(e, n);
        }
        getTangent(e, n = new ye) {
            return n.subVectors(this.v2, this.v1).normalize();
        }
        getTangentAt(e, n) {
            return this.getTangent(e, n);
        }
        copy(e) {
            return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
        }
    }
    class M2 extends uc {
        constructor(e = new ot, n = new ot, r = new ot){
            super(), this.isQuadraticBezierCurve = !0, this.type = "QuadraticBezierCurve", this.v0 = e, this.v1 = n, this.v2 = r;
        }
        getPoint(e, n = new ot) {
            const r = n, i = this.v0, s = this.v1, o = this.v2;
            return r.set(N0(e, i.x, s.x, o.x), N0(e, i.y, s.y, o.y)), r;
        }
        copy(e) {
            return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
        }
    }
    class T2 extends uc {
        constructor(e = new ye, n = new ye, r = new ye){
            super(), this.isQuadraticBezierCurve3 = !0, this.type = "QuadraticBezierCurve3", this.v0 = e, this.v1 = n, this.v2 = r;
        }
        getPoint(e, n = new ye) {
            const r = n, i = this.v0, s = this.v1, o = this.v2;
            return r.set(N0(e, i.x, s.x, o.x), N0(e, i.y, s.y, o.y), N0(e, i.z, s.z, o.z)), r;
        }
        copy(e) {
            return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
        }
    }
    class C2 extends uc {
        constructor(e = []){
            super(), this.isSplineCurve = !0, this.type = "SplineCurve", this.points = e;
        }
        getPoint(e, n = new ot) {
            const r = n, i = this.points, s = (i.length - 1) * e, o = Math.floor(s), a = s - o, l = i[o === 0 ? o : o - 1], c = i[o], u = i[o > i.length - 2 ? i.length - 1 : o + 1], f = i[o > i.length - 3 ? i.length - 1 : o + 2];
            return r.set(KU(a, l.x, c.x, u.x, f.x), KU(a, l.y, c.y, u.y, f.y)), r;
        }
        copy(e) {
            super.copy(e), this.points = [];
            for(let n = 0, r = e.points.length; n < r; n++){
                const i = e.points[n];
                this.points.push(i.clone());
            }
            return this;
        }
        toJSON() {
            const e = super.toJSON();
            e.points = [];
            for(let n = 0, r = this.points.length; n < r; n++){
                const i = this.points[n];
                e.points.push(i.toArray());
            }
            return e;
        }
        fromJSON(e) {
            super.fromJSON(e), this.points = [];
            for(let n = 0, r = e.points.length; n < r; n++){
                const i = e.points[n];
                this.points.push(new ot().fromArray(i));
            }
            return this;
        }
    }
    var LM = Object.freeze({
        __proto__: null,
        ArcCurve: $6,
        CatmullRomCurve3: G6,
        CubicBezierCurve: S2,
        CubicBezierCurve3: X6,
        EllipseCurve: eC,
        LineCurve: E2,
        LineCurve3: K6,
        QuadraticBezierCurve: M2,
        QuadraticBezierCurve3: T2,
        SplineCurve: C2
    });
    class Y6 extends uc {
        constructor(){
            super(), this.type = "CurvePath", this.curves = [], this.autoClose = !1;
        }
        add(e) {
            this.curves.push(e);
        }
        closePath() {
            const e = this.curves[0].getPoint(0), n = this.curves[this.curves.length - 1].getPoint(1);
            if (!e.equals(n)) {
                const r = e.isVector2 === !0 ? "LineCurve" : "LineCurve3";
                this.curves.push(new LM[r](n, e));
            }
            return this;
        }
        getPoint(e, n) {
            const r = e * this.getLength(), i = this.getCurveLengths();
            let s = 0;
            for(; s < i.length;){
                if (i[s] >= r) {
                    const o = i[s] - r, a = this.curves[s], l = a.getLength(), c = l === 0 ? 0 : 1 - o / l;
                    return a.getPointAt(c, n);
                }
                s++;
            }
            return null;
        }
        getLength() {
            const e = this.getCurveLengths();
            return e[e.length - 1];
        }
        updateArcLengths() {
            this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
        }
        getCurveLengths() {
            if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
            const e = [];
            let n = 0;
            for(let r = 0, i = this.curves.length; r < i; r++)n += this.curves[r].getLength(), e.push(n);
            return this.cacheLengths = e, e;
        }
        getSpacedPoints(e = 40) {
            const n = [];
            for(let r = 0; r <= e; r++)n.push(this.getPoint(r / e));
            return this.autoClose && n.push(n[0]), n;
        }
        getPoints(e = 12) {
            const n = [];
            let r;
            for(let i = 0, s = this.curves; i < s.length; i++){
                const o = s[i], a = o.isEllipseCurve ? e * 2 : o.isLineCurve || o.isLineCurve3 ? 1 : o.isSplineCurve ? e * o.points.length : e, l = o.getPoints(a);
                for(let c = 0; c < l.length; c++){
                    const u = l[c];
                    r && r.equals(u) || (n.push(u), r = u);
                }
            }
            return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]), n;
        }
        copy(e) {
            super.copy(e), this.curves = [];
            for(let n = 0, r = e.curves.length; n < r; n++){
                const i = e.curves[n];
                this.curves.push(i.clone());
            }
            return this.autoClose = e.autoClose, this;
        }
        toJSON() {
            const e = super.toJSON();
            e.autoClose = this.autoClose, e.curves = [];
            for(let n = 0, r = this.curves.length; n < r; n++){
                const i = this.curves[n];
                e.curves.push(i.toJSON());
            }
            return e;
        }
        fromJSON(e) {
            super.fromJSON(e), this.autoClose = e.autoClose, this.curves = [];
            for(let n = 0, r = e.curves.length; n < r; n++){
                const i = e.curves[n];
                this.curves.push(new LM[i.type]().fromJSON(i));
            }
            return this;
        }
    }
    class Cb extends Y6 {
        constructor(e){
            super(), this.type = "Path", this.currentPoint = new ot, e && this.setFromPoints(e);
        }
        setFromPoints(e) {
            this.moveTo(e[0].x, e[0].y);
            for(let n = 1, r = e.length; n < r; n++)this.lineTo(e[n].x, e[n].y);
            return this;
        }
        moveTo(e, n) {
            return this.currentPoint.set(e, n), this;
        }
        lineTo(e, n) {
            const r = new E2(this.currentPoint.clone(), new ot(e, n));
            return this.curves.push(r), this.currentPoint.set(e, n), this;
        }
        quadraticCurveTo(e, n, r, i) {
            const s = new M2(this.currentPoint.clone(), new ot(e, n), new ot(r, i));
            return this.curves.push(s), this.currentPoint.set(r, i), this;
        }
        bezierCurveTo(e, n, r, i, s, o) {
            const a = new S2(this.currentPoint.clone(), new ot(e, n), new ot(r, i), new ot(s, o));
            return this.curves.push(a), this.currentPoint.set(s, o), this;
        }
        splineThru(e) {
            const n = [
                this.currentPoint.clone()
            ].concat(e), r = new C2(n);
            return this.curves.push(r), this.currentPoint.copy(e[e.length - 1]), this;
        }
        arc(e, n, r, i, s, o) {
            const a = this.currentPoint.x, l = this.currentPoint.y;
            return this.absarc(e + a, n + l, r, i, s, o), this;
        }
        absarc(e, n, r, i, s, o) {
            return this.absellipse(e, n, r, r, i, s, o), this;
        }
        ellipse(e, n, r, i, s, o, a, l) {
            const c = this.currentPoint.x, u = this.currentPoint.y;
            return this.absellipse(e + c, n + u, r, i, s, o, a, l), this;
        }
        absellipse(e, n, r, i, s, o, a, l) {
            const c = new eC(e, n, r, i, s, o, a, l);
            if (this.curves.length > 0) {
                const f = c.getPoint(0);
                f.equals(this.currentPoint) || this.lineTo(f.x, f.y);
            }
            this.curves.push(c);
            const u = c.getPoint(1);
            return this.currentPoint.copy(u), this;
        }
        copy(e) {
            return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.currentPoint = this.currentPoint.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this;
        }
    }
    class gw extends Fn {
        constructor(e = [
            new ot(0, -.5),
            new ot(.5, 0),
            new ot(0, .5)
        ], n = 12, r = 0, i = Math.PI * 2){
            super(), this.type = "LatheGeometry", this.parameters = {
                points: e,
                segments: n,
                phiStart: r,
                phiLength: i
            }, n = Math.floor(n), i = _n(i, 0, Math.PI * 2);
            const s = [], o = [], a = [], l = [], c = [], u = 1 / n, f = new ye, p = new ot, g = new ye, x = new ye, S = new ye;
            let _ = 0, b = 0;
            for(let M = 0; M <= e.length - 1; M++)switch(M){
                case 0:
                    _ = e[M + 1].x - e[M].x, b = e[M + 1].y - e[M].y, g.x = b * 1, g.y = -_, g.z = b * 0, S.copy(g), g.normalize(), l.push(g.x, g.y, g.z);
                    break;
                case e.length - 1:
                    l.push(S.x, S.y, S.z);
                    break;
                default:
                    _ = e[M + 1].x - e[M].x, b = e[M + 1].y - e[M].y, g.x = b * 1, g.y = -_, g.z = b * 0, x.copy(g), g.x += S.x, g.y += S.y, g.z += S.z, g.normalize(), l.push(g.x, g.y, g.z), S.copy(x);
            }
            for(let M = 0; M <= n; M++){
                const E = r + M * u * i, T = Math.sin(E), k = Math.cos(E);
                for(let N = 0; N <= e.length - 1; N++){
                    f.x = e[N].x * T, f.y = e[N].y, f.z = e[N].x * k, o.push(f.x, f.y, f.z), p.x = M / n, p.y = N / (e.length - 1), a.push(p.x, p.y);
                    const D = l[3 * N + 0] * T, L = l[3 * N + 1], R = l[3 * N + 0] * k;
                    c.push(D, L, R);
                }
            }
            for(let M = 0; M < n; M++)for(let E = 0; E < e.length - 1; E++){
                const T = E + M * e.length, k = T, N = T + e.length, D = T + e.length + 1, L = T + 1;
                s.push(k, N, L), s.push(D, L, N);
            }
            this.setIndex(s), this.setAttribute("position", new Gt(o, 3)), this.setAttribute("uv", new Gt(a, 2)), this.setAttribute("normal", new Gt(c, 3));
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new gw(e.points, e.segments, e.phiStart, e.phiLength);
        }
    }
    class tC extends gw {
        constructor(e = 1, n = 1, r = 4, i = 8){
            const s = new Cb;
            s.absarc(0, -n / 2, e, Math.PI * 1.5, 0), s.absarc(0, n / 2, e, 0, Math.PI * .5), super(s.getPoints(r), i), this.type = "CapsuleGeometry", this.parameters = {
                radius: e,
                length: n,
                capSegments: r,
                radialSegments: i
            };
        }
        static fromJSON(e) {
            return new tC(e.radius, e.length, e.capSegments, e.radialSegments);
        }
    }
    class nC extends Fn {
        constructor(e = 1, n = 32, r = 0, i = Math.PI * 2){
            super(), this.type = "CircleGeometry", this.parameters = {
                radius: e,
                segments: n,
                thetaStart: r,
                thetaLength: i
            }, n = Math.max(3, n);
            const s = [], o = [], a = [], l = [], c = new ye, u = new ot;
            o.push(0, 0, 0), a.push(0, 0, 1), l.push(.5, .5);
            for(let f = 0, p = 3; f <= n; f++, p += 3){
                const g = r + f / n * i;
                c.x = e * Math.cos(g), c.y = e * Math.sin(g), o.push(c.x, c.y, c.z), a.push(0, 0, 1), u.x = (o[p] / e + 1) / 2, u.y = (o[p + 1] / e + 1) / 2, l.push(u.x, u.y);
            }
            for(let f = 1; f <= n; f++)s.push(f, f + 1, 0);
            this.setIndex(s), this.setAttribute("position", new Gt(o, 3)), this.setAttribute("normal", new Gt(a, 3)), this.setAttribute("uv", new Gt(l, 2));
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new nC(e.radius, e.segments, e.thetaStart, e.thetaLength);
        }
    }
    class vv extends Fn {
        constructor(e = 1, n = 1, r = 1, i = 32, s = 1, o = !1, a = 0, l = Math.PI * 2){
            super(), this.type = "CylinderGeometry", this.parameters = {
                radiusTop: e,
                radiusBottom: n,
                height: r,
                radialSegments: i,
                heightSegments: s,
                openEnded: o,
                thetaStart: a,
                thetaLength: l
            };
            const c = this;
            i = Math.floor(i), s = Math.floor(s);
            const u = [], f = [], p = [], g = [];
            let x = 0;
            const S = [], _ = r / 2;
            let b = 0;
            M(), o === !1 && (e > 0 && E(!0), n > 0 && E(!1)), this.setIndex(u), this.setAttribute("position", new Gt(f, 3)), this.setAttribute("normal", new Gt(p, 3)), this.setAttribute("uv", new Gt(g, 2));
            function M() {
                const T = new ye, k = new ye;
                let N = 0;
                const D = (n - e) / r;
                for(let L = 0; L <= s; L++){
                    const R = [], A = L / s, P = A * (n - e) + e;
                    for(let B = 0; B <= i; B++){
                        const U = B / i, j = U * l + a, K = Math.sin(j), q = Math.cos(j);
                        k.x = P * K, k.y = -A * r + _, k.z = P * q, f.push(k.x, k.y, k.z), T.set(K, D, q).normalize(), p.push(T.x, T.y, T.z), g.push(U, 1 - A), R.push(x++);
                    }
                    S.push(R);
                }
                for(let L = 0; L < i; L++)for(let R = 0; R < s; R++){
                    const A = S[R][L], P = S[R + 1][L], B = S[R + 1][L + 1], U = S[R][L + 1];
                    (e > 0 || R !== 0) && (u.push(A, P, U), N += 3), (n > 0 || R !== s - 1) && (u.push(P, B, U), N += 3);
                }
                c.addGroup(b, N, 0), b += N;
            }
            function E(T) {
                const k = x, N = new ot, D = new ye;
                let L = 0;
                const R = T === !0 ? e : n, A = T === !0 ? 1 : -1;
                for(let B = 1; B <= i; B++)f.push(0, _ * A, 0), p.push(0, A, 0), g.push(.5, .5), x++;
                const P = x;
                for(let B = 0; B <= i; B++){
                    const j = B / i * l + a, K = Math.cos(j), q = Math.sin(j);
                    D.x = R * q, D.y = _ * A, D.z = R * K, f.push(D.x, D.y, D.z), p.push(0, A, 0), N.x = K * .5 + .5, N.y = q * .5 * A + .5, g.push(N.x, N.y), x++;
                }
                for(let B = 0; B < i; B++){
                    const U = k + B, j = P + B;
                    T === !0 ? u.push(j, j + 1, U) : u.push(j + 1, j, U), L += 3;
                }
                c.addGroup(b, L, T === !0 ? 1 : 2), b += L;
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new vv(e.radiusTop, e.radiusBottom, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
        }
    }
    class rC extends vv {
        constructor(e = 1, n = 1, r = 32, i = 1, s = !1, o = 0, a = Math.PI * 2){
            super(0, e, n, r, i, s, o, a), this.type = "ConeGeometry", this.parameters = {
                radius: e,
                height: n,
                radialSegments: r,
                heightSegments: i,
                openEnded: s,
                thetaStart: o,
                thetaLength: a
            };
        }
        static fromJSON(e) {
            return new rC(e.radius, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
        }
    }
    class oh extends Fn {
        constructor(e = [], n = [], r = 1, i = 0){
            super(), this.type = "PolyhedronGeometry", this.parameters = {
                vertices: e,
                indices: n,
                radius: r,
                detail: i
            };
            const s = [], o = [];
            a(i), c(r), u(), this.setAttribute("position", new Gt(s, 3)), this.setAttribute("normal", new Gt(s.slice(), 3)), this.setAttribute("uv", new Gt(o, 2)), i === 0 ? this.computeVertexNormals() : this.normalizeNormals();
            function a(M) {
                const E = new ye, T = new ye, k = new ye;
                for(let N = 0; N < n.length; N += 3)g(n[N + 0], E), g(n[N + 1], T), g(n[N + 2], k), l(E, T, k, M);
            }
            function l(M, E, T, k) {
                const N = k + 1, D = [];
                for(let L = 0; L <= N; L++){
                    D[L] = [];
                    const R = M.clone().lerp(T, L / N), A = E.clone().lerp(T, L / N), P = N - L;
                    for(let B = 0; B <= P; B++)B === 0 && L === N ? D[L][B] = R : D[L][B] = R.clone().lerp(A, B / P);
                }
                for(let L = 0; L < N; L++)for(let R = 0; R < 2 * (N - L) - 1; R++){
                    const A = Math.floor(R / 2);
                    R % 2 === 0 ? (p(D[L][A + 1]), p(D[L + 1][A]), p(D[L][A])) : (p(D[L][A + 1]), p(D[L + 1][A + 1]), p(D[L + 1][A]));
                }
            }
            function c(M) {
                const E = new ye;
                for(let T = 0; T < s.length; T += 3)E.x = s[T + 0], E.y = s[T + 1], E.z = s[T + 2], E.normalize().multiplyScalar(M), s[T + 0] = E.x, s[T + 1] = E.y, s[T + 2] = E.z;
            }
            function u() {
                const M = new ye;
                for(let E = 0; E < s.length; E += 3){
                    M.x = s[E + 0], M.y = s[E + 1], M.z = s[E + 2];
                    const T = _(M) / 2 / Math.PI + .5, k = b(M) / Math.PI + .5;
                    o.push(T, 1 - k);
                }
                x(), f();
            }
            function f() {
                for(let M = 0; M < o.length; M += 6){
                    const E = o[M + 0], T = o[M + 2], k = o[M + 4], N = Math.max(E, T, k), D = Math.min(E, T, k);
                    N > .9 && D < .1 && (E < .2 && (o[M + 0] += 1), T < .2 && (o[M + 2] += 1), k < .2 && (o[M + 4] += 1));
                }
            }
            function p(M) {
                s.push(M.x, M.y, M.z);
            }
            function g(M, E) {
                const T = M * 3;
                E.x = e[T + 0], E.y = e[T + 1], E.z = e[T + 2];
            }
            function x() {
                const M = new ye, E = new ye, T = new ye, k = new ye, N = new ot, D = new ot, L = new ot;
                for(let R = 0, A = 0; R < s.length; R += 9, A += 6){
                    M.set(s[R + 0], s[R + 1], s[R + 2]), E.set(s[R + 3], s[R + 4], s[R + 5]), T.set(s[R + 6], s[R + 7], s[R + 8]), N.set(o[A + 0], o[A + 1]), D.set(o[A + 2], o[A + 3]), L.set(o[A + 4], o[A + 5]), k.copy(M).add(E).add(T).divideScalar(3);
                    const P = _(k);
                    S(N, A + 0, M, P), S(D, A + 2, E, P), S(L, A + 4, T, P);
                }
            }
            function S(M, E, T, k) {
                k < 0 && M.x === 1 && (o[E] = M.x - 1), T.x === 0 && T.z === 0 && (o[E] = k / 2 / Math.PI + .5);
            }
            function _(M) {
                return Math.atan2(M.z, -M.x);
            }
            function b(M) {
                return Math.atan2(-M.y, Math.sqrt(M.x * M.x + M.z * M.z));
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new oh(e.vertices, e.indices, e.radius, e.details);
        }
    }
    class iC extends oh {
        constructor(e = 1, n = 0){
            const r = (1 + Math.sqrt(5)) / 2, i = 1 / r, s = [
                -1,
                -1,
                -1,
                -1,
                -1,
                1,
                -1,
                1,
                -1,
                -1,
                1,
                1,
                1,
                -1,
                -1,
                1,
                -1,
                1,
                1,
                1,
                -1,
                1,
                1,
                1,
                0,
                -i,
                -r,
                0,
                -i,
                r,
                0,
                i,
                -r,
                0,
                i,
                r,
                -i,
                -r,
                0,
                -i,
                r,
                0,
                i,
                -r,
                0,
                i,
                r,
                0,
                -r,
                0,
                -i,
                r,
                0,
                -i,
                -r,
                0,
                i,
                r,
                0,
                i
            ], o = [
                3,
                11,
                7,
                3,
                7,
                15,
                3,
                15,
                13,
                7,
                19,
                17,
                7,
                17,
                6,
                7,
                6,
                15,
                17,
                4,
                8,
                17,
                8,
                10,
                17,
                10,
                6,
                8,
                0,
                16,
                8,
                16,
                2,
                8,
                2,
                10,
                0,
                12,
                1,
                0,
                1,
                18,
                0,
                18,
                16,
                6,
                10,
                2,
                6,
                2,
                13,
                6,
                13,
                15,
                2,
                16,
                18,
                2,
                18,
                3,
                2,
                3,
                13,
                18,
                1,
                9,
                18,
                9,
                11,
                18,
                11,
                3,
                4,
                14,
                12,
                4,
                12,
                0,
                4,
                0,
                8,
                11,
                9,
                5,
                11,
                5,
                19,
                11,
                19,
                7,
                19,
                5,
                14,
                19,
                14,
                4,
                19,
                4,
                17,
                1,
                12,
                14,
                1,
                14,
                5,
                1,
                5,
                9
            ];
            super(s, o, e, n), this.type = "DodecahedronGeometry", this.parameters = {
                radius: e,
                detail: n
            };
        }
        static fromJSON(e) {
            return new iC(e.radius, e.detail);
        }
    }
    const CS = new ye, IS = new ye, pN = new ye, RS = new Qo;
    class Z6 extends Fn {
        constructor(e = null, n = 1){
            if (super(), this.type = "EdgesGeometry", this.parameters = {
                geometry: e,
                thresholdAngle: n
            }, e !== null) {
                const i = Math.pow(10, 4), s = Math.cos(Wp * n), o = e.getIndex(), a = e.getAttribute("position"), l = o ? o.count : a.count, c = [
                    0,
                    0,
                    0
                ], u = [
                    "a",
                    "b",
                    "c"
                ], f = new Array(3), p = {}, g = [];
                for(let x = 0; x < l; x += 3){
                    o ? (c[0] = o.getX(x), c[1] = o.getX(x + 1), c[2] = o.getX(x + 2)) : (c[0] = x, c[1] = x + 1, c[2] = x + 2);
                    const { a: S, b: _, c: b } = RS;
                    if (S.fromBufferAttribute(a, c[0]), _.fromBufferAttribute(a, c[1]), b.fromBufferAttribute(a, c[2]), RS.getNormal(pN), f[0] = `${Math.round(S.x * i)},${Math.round(S.y * i)},${Math.round(S.z * i)}`, f[1] = `${Math.round(_.x * i)},${Math.round(_.y * i)},${Math.round(_.z * i)}`, f[2] = `${Math.round(b.x * i)},${Math.round(b.y * i)},${Math.round(b.z * i)}`, !(f[0] === f[1] || f[1] === f[2] || f[2] === f[0])) for(let M = 0; M < 3; M++){
                        const E = (M + 1) % 3, T = f[M], k = f[E], N = RS[u[M]], D = RS[u[E]], L = `${T}_${k}`, R = `${k}_${T}`;
                        R in p && p[R] ? (pN.dot(p[R].normal) <= s && (g.push(N.x, N.y, N.z), g.push(D.x, D.y, D.z)), p[R] = null) : L in p || (p[L] = {
                            index0: c[M],
                            index1: c[E],
                            normal: pN.clone()
                        });
                    }
                }
                for(const x in p)if (p[x]) {
                    const { index0: S, index1: _ } = p[x];
                    CS.fromBufferAttribute(a, S), IS.fromBufferAttribute(a, _), g.push(CS.x, CS.y, CS.z), g.push(IS.x, IS.y, IS.z);
                }
                this.setAttribute("position", new Gt(g, 3));
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
    }
    class Hp extends Cb {
        constructor(e){
            super(e), this.uuid = ka(), this.type = "Shape", this.holes = [];
        }
        getPointsHoles(e) {
            const n = [];
            for(let r = 0, i = this.holes.length; r < i; r++)n[r] = this.holes[r].getPoints(e);
            return n;
        }
        extractPoints(e) {
            return {
                shape: this.getPoints(e),
                holes: this.getPointsHoles(e)
            };
        }
        copy(e) {
            super.copy(e), this.holes = [];
            for(let n = 0, r = e.holes.length; n < r; n++){
                const i = e.holes[n];
                this.holes.push(i.clone());
            }
            return this;
        }
        toJSON() {
            const e = super.toJSON();
            e.uuid = this.uuid, e.holes = [];
            for(let n = 0, r = this.holes.length; n < r; n++){
                const i = this.holes[n];
                e.holes.push(i.toJSON());
            }
            return e;
        }
        fromJSON(e) {
            super.fromJSON(e), this.uuid = e.uuid, this.holes = [];
            for(let n = 0, r = e.holes.length; n < r; n++){
                const i = e.holes[n];
                this.holes.push(new Cb().fromJSON(i));
            }
            return this;
        }
    }
    const Jge = {
        triangulate: function(t, e, n = 2) {
            const r = e && e.length, i = r ? e[0] * n : t.length;
            let s = J6(t, 0, i, n, !0);
            const o = [];
            if (!s || s.next === s.prev) return o;
            let a, l, c, u, f, p, g;
            if (r && (s = rye(t, e, s, n)), t.length > 80 * n) {
                a = c = t[0], l = u = t[1];
                for(let x = n; x < i; x += n)f = t[x], p = t[x + 1], f < a && (a = f), p < l && (l = p), f > c && (c = f), p > u && (u = p);
                g = Math.max(c - a, u - l), g = g !== 0 ? 32767 / g : 0;
            }
            return Ib(s, o, n, a, l, g, 0), o;
        }
    };
    function J6(t, e, n, r, i) {
        let s, o;
        if (i === pye(t, e, n, r) > 0) for(s = e; s < n; s += r)o = YU(s, t[s], t[s + 1], o);
        else for(s = n - r; s >= e; s -= r)o = YU(s, t[s], t[s + 1], o);
        return o && sC(o, o.next) && (Ab(o), o = o.next), o;
    }
    function um(t, e) {
        if (!t) return t;
        e || (e = t);
        let n = t, r;
        do if (r = !1, !n.steiner && (sC(n, n.next) || ri(n.prev, n, n.next) === 0)) {
            if (Ab(n), n = e = n.prev, n === n.next) break;
            r = !0;
        } else n = n.next;
        while (r || n !== e);
        return e;
    }
    function Ib(t, e, n, r, i, s, o) {
        if (!t) return;
        !o && s && lye(t, r, i, s);
        let a = t, l, c;
        for(; t.prev !== t.next;){
            if (l = t.prev, c = t.next, s ? eye(t, r, i, s) : Qge(t)) {
                e.push(l.i / n | 0), e.push(t.i / n | 0), e.push(c.i / n | 0), Ab(t), t = c.next, a = c.next;
                continue;
            }
            if (t = c, t === a) {
                o ? o === 1 ? (t = tye(um(t), e, n), Ib(t, e, n, r, i, s, 2)) : o === 2 && nye(t, e, n, r, i, s) : Ib(um(t), e, n, r, i, s, 1);
                break;
            }
        }
    }
    function Qge(t) {
        const e = t.prev, n = t, r = t.next;
        if (ri(e, n, r) >= 0) return !1;
        const i = e.x, s = n.x, o = r.x, a = e.y, l = n.y, c = r.y, u = i < s ? i < o ? i : o : s < o ? s : o, f = a < l ? a < c ? a : c : l < c ? l : c, p = i > s ? i > o ? i : o : s > o ? s : o, g = a > l ? a > c ? a : c : l > c ? l : c;
        let x = r.next;
        for(; x !== e;){
            if (x.x >= u && x.x <= p && x.y >= f && x.y <= g && fy(i, a, s, l, o, c, x.x, x.y) && ri(x.prev, x, x.next) >= 0) return !1;
            x = x.next;
        }
        return !0;
    }
    function eye(t, e, n, r) {
        const i = t.prev, s = t, o = t.next;
        if (ri(i, s, o) >= 0) return !1;
        const a = i.x, l = s.x, c = o.x, u = i.y, f = s.y, p = o.y, g = a < l ? a < c ? a : c : l < c ? l : c, x = u < f ? u < p ? u : p : f < p ? f : p, S = a > l ? a > c ? a : c : l > c ? l : c, _ = u > f ? u > p ? u : p : f > p ? f : p, b = mk(g, x, e, n, r), M = mk(S, _, e, n, r);
        let E = t.prevZ, T = t.nextZ;
        for(; E && E.z >= b && T && T.z <= M;){
            if (E.x >= g && E.x <= S && E.y >= x && E.y <= _ && E !== i && E !== o && fy(a, u, l, f, c, p, E.x, E.y) && ri(E.prev, E, E.next) >= 0 || (E = E.prevZ, T.x >= g && T.x <= S && T.y >= x && T.y <= _ && T !== i && T !== o && fy(a, u, l, f, c, p, T.x, T.y) && ri(T.prev, T, T.next) >= 0)) return !1;
            T = T.nextZ;
        }
        for(; E && E.z >= b;){
            if (E.x >= g && E.x <= S && E.y >= x && E.y <= _ && E !== i && E !== o && fy(a, u, l, f, c, p, E.x, E.y) && ri(E.prev, E, E.next) >= 0) return !1;
            E = E.prevZ;
        }
        for(; T && T.z <= M;){
            if (T.x >= g && T.x <= S && T.y >= x && T.y <= _ && T !== i && T !== o && fy(a, u, l, f, c, p, T.x, T.y) && ri(T.prev, T, T.next) >= 0) return !1;
            T = T.nextZ;
        }
        return !0;
    }
    function tye(t, e, n) {
        let r = t;
        do {
            const i = r.prev, s = r.next.next;
            !sC(i, s) && Q6(i, r, r.next, s) && Rb(i, s) && Rb(s, i) && (e.push(i.i / n | 0), e.push(r.i / n | 0), e.push(s.i / n | 0), Ab(r), Ab(r.next), r = t = s), r = r.next;
        }while (r !== t);
        return um(r);
    }
    function nye(t, e, n, r, i, s) {
        let o = t;
        do {
            let a = o.next.next;
            for(; a !== o.prev;){
                if (o.i !== a.i && dye(o, a)) {
                    let l = eG(o, a);
                    o = um(o, o.next), l = um(l, l.next), Ib(o, e, n, r, i, s, 0), Ib(l, e, n, r, i, s, 0);
                    return;
                }
                a = a.next;
            }
            o = o.next;
        }while (o !== t);
    }
    function rye(t, e, n, r) {
        const i = [];
        let s, o, a, l, c;
        for(s = 0, o = e.length; s < o; s++)a = e[s] * r, l = s < o - 1 ? e[s + 1] * r : t.length, c = J6(t, a, l, r, !1), c === c.next && (c.steiner = !0), i.push(uye(c));
        for(i.sort(iye), s = 0; s < i.length; s++)n = sye(i[s], n);
        return n;
    }
    function iye(t, e) {
        return t.x - e.x;
    }
    function sye(t, e) {
        const n = oye(t, e);
        if (!n) return e;
        const r = eG(n, t);
        return um(r, r.next), um(n, n.next);
    }
    function oye(t, e) {
        let n = e, r = -1 / 0, i;
        const s = t.x, o = t.y;
        do {
            if (o <= n.y && o >= n.next.y && n.next.y !== n.y) {
                const p = n.x + (o - n.y) * (n.next.x - n.x) / (n.next.y - n.y);
                if (p <= s && p > r && (r = p, i = n.x < n.next.x ? n : n.next, p === s)) return i;
            }
            n = n.next;
        }while (n !== e);
        if (!i) return null;
        const a = i, l = i.x, c = i.y;
        let u = 1 / 0, f;
        n = i;
        do s >= n.x && n.x >= l && s !== n.x && fy(o < c ? s : r, o, l, c, o < c ? r : s, o, n.x, n.y) && (f = Math.abs(o - n.y) / (s - n.x), Rb(n, t) && (f < u || f === u && (n.x > i.x || n.x === i.x && aye(i, n))) && (i = n, u = f)), n = n.next;
        while (n !== a);
        return i;
    }
    function aye(t, e) {
        return ri(t.prev, t, e.prev) < 0 && ri(e.next, t, t.next) < 0;
    }
    function lye(t, e, n, r) {
        let i = t;
        do i.z === 0 && (i.z = mk(i.x, i.y, e, n, r)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next;
        while (i !== t);
        i.prevZ.nextZ = null, i.prevZ = null, cye(i);
    }
    function cye(t) {
        let e, n, r, i, s, o, a, l, c = 1;
        do {
            for(n = t, t = null, s = null, o = 0; n;){
                for(o++, r = n, a = 0, e = 0; e < c && (a++, r = r.nextZ, !!r); e++);
                for(l = c; a > 0 || l > 0 && r;)a !== 0 && (l === 0 || !r || n.z <= r.z) ? (i = n, n = n.nextZ, a--) : (i = r, r = r.nextZ, l--), s ? s.nextZ = i : t = i, i.prevZ = s, s = i;
                n = r;
            }
            s.nextZ = null, c *= 2;
        }while (o > 1);
        return t;
    }
    function mk(t, e, n, r, i) {
        return t = (t - n) * i | 0, e = (e - r) * i | 0, t = (t | t << 8) & 16711935, t = (t | t << 4) & 252645135, t = (t | t << 2) & 858993459, t = (t | t << 1) & 1431655765, e = (e | e << 8) & 16711935, e = (e | e << 4) & 252645135, e = (e | e << 2) & 858993459, e = (e | e << 1) & 1431655765, t | e << 1;
    }
    function uye(t) {
        let e = t, n = t;
        do (e.x < n.x || e.x === n.x && e.y < n.y) && (n = e), e = e.next;
        while (e !== t);
        return n;
    }
    function fy(t, e, n, r, i, s, o, a) {
        return (i - o) * (e - a) >= (t - o) * (s - a) && (t - o) * (r - a) >= (n - o) * (e - a) && (n - o) * (s - a) >= (i - o) * (r - a);
    }
    function dye(t, e) {
        return t.next.i !== e.i && t.prev.i !== e.i && !fye(t, e) && (Rb(t, e) && Rb(e, t) && hye(t, e) && (ri(t.prev, t, e.prev) || ri(t, e.prev, e)) || sC(t, e) && ri(t.prev, t, t.next) > 0 && ri(e.prev, e, e.next) > 0);
    }
    function ri(t, e, n) {
        return (e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y);
    }
    function sC(t, e) {
        return t.x === e.x && t.y === e.y;
    }
    function Q6(t, e, n, r) {
        const i = NS(ri(t, e, n)), s = NS(ri(t, e, r)), o = NS(ri(n, r, t)), a = NS(ri(n, r, e));
        return !!(i !== s && o !== a || i === 0 && AS(t, n, e) || s === 0 && AS(t, r, e) || o === 0 && AS(n, t, r) || a === 0 && AS(n, e, r));
    }
    function AS(t, e, n) {
        return e.x <= Math.max(t.x, n.x) && e.x >= Math.min(t.x, n.x) && e.y <= Math.max(t.y, n.y) && e.y >= Math.min(t.y, n.y);
    }
    function NS(t) {
        return t > 0 ? 1 : t < 0 ? -1 : 0;
    }
    function fye(t, e) {
        let n = t;
        do {
            if (n.i !== t.i && n.next.i !== t.i && n.i !== e.i && n.next.i !== e.i && Q6(n, n.next, t, e)) return !0;
            n = n.next;
        }while (n !== t);
        return !1;
    }
    function Rb(t, e) {
        return ri(t.prev, t, t.next) < 0 ? ri(t, e, t.next) >= 0 && ri(t, t.prev, e) >= 0 : ri(t, e, t.prev) < 0 || ri(t, t.next, e) < 0;
    }
    function hye(t, e) {
        let n = t, r = !1;
        const i = (t.x + e.x) / 2, s = (t.y + e.y) / 2;
        do n.y > s != n.next.y > s && n.next.y !== n.y && i < (n.next.x - n.x) * (s - n.y) / (n.next.y - n.y) + n.x && (r = !r), n = n.next;
        while (n !== t);
        return r;
    }
    function eG(t, e) {
        const n = new gk(t.i, t.x, t.y), r = new gk(e.i, e.x, e.y), i = t.next, s = e.prev;
        return t.next = e, e.prev = t, n.next = i, i.prev = n, r.next = n, n.prev = r, s.next = r, r.prev = s, r;
    }
    function YU(t, e, n, r) {
        const i = new gk(t, e, n);
        return r ? (i.next = r.next, i.prev = r, r.next.prev = i, r.next = i) : (i.prev = i, i.next = i), i;
    }
    function Ab(t) {
        t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), t.nextZ && (t.nextZ.prevZ = t.prevZ);
    }
    function gk(t, e, n) {
        this.i = t, this.x = e, this.y = n, this.prev = null, this.next = null, this.z = 0, this.prevZ = null, this.nextZ = null, this.steiner = !1;
    }
    function pye(t, e, n, r) {
        let i = 0;
        for(let s = e, o = n - r; s < n; s += r)i += (t[o] - t[s]) * (t[s + 1] + t[o + 1]), o = s;
        return i;
    }
    class Wc {
        static area(e) {
            const n = e.length;
            let r = 0;
            for(let i = n - 1, s = 0; s < n; i = s++)r += e[i].x * e[s].y - e[s].x * e[i].y;
            return r * .5;
        }
        static isClockWise(e) {
            return Wc.area(e) < 0;
        }
        static triangulateShape(e, n) {
            const r = [], i = [], s = [];
            ZU(e), JU(r, e);
            let o = e.length;
            n.forEach(ZU);
            for(let l = 0; l < n.length; l++)i.push(o), o += n[l].length, JU(r, n[l]);
            const a = Jge.triangulate(r, i);
            for(let l = 0; l < a.length; l += 3)s.push(a.slice(l, l + 3));
            return s;
        }
    }
    function ZU(t) {
        const e = t.length;
        e > 2 && t[e - 1].equals(t[0]) && t.pop();
    }
    function JU(t, e) {
        for(let n = 0; n < e.length; n++)t.push(e[n].x), t.push(e[n].y);
    }
    class oC extends Fn {
        constructor(e = new Hp([
            new ot(.5, .5),
            new ot(-.5, .5),
            new ot(-.5, -.5),
            new ot(.5, -.5)
        ]), n = {}){
            super(), this.type = "ExtrudeGeometry", this.parameters = {
                shapes: e,
                options: n
            }, e = Array.isArray(e) ? e : [
                e
            ];
            const r = this, i = [], s = [];
            for(let a = 0, l = e.length; a < l; a++){
                const c = e[a];
                o(c);
            }
            this.setAttribute("position", new Gt(i, 3)), this.setAttribute("uv", new Gt(s, 2)), this.computeVertexNormals();
            function o(a) {
                const l = [], c = n.curveSegments !== void 0 ? n.curveSegments : 12, u = n.steps !== void 0 ? n.steps : 1, f = n.depth !== void 0 ? n.depth : 1;
                let p = n.bevelEnabled !== void 0 ? n.bevelEnabled : !0, g = n.bevelThickness !== void 0 ? n.bevelThickness : .2, x = n.bevelSize !== void 0 ? n.bevelSize : g - .1, S = n.bevelOffset !== void 0 ? n.bevelOffset : 0, _ = n.bevelSegments !== void 0 ? n.bevelSegments : 3;
                const b = n.extrudePath, M = n.UVGenerator !== void 0 ? n.UVGenerator : mye;
                let E, T = !1, k, N, D, L;
                b && (E = b.getSpacedPoints(u), T = !0, p = !1, k = b.computeFrenetFrames(u, !1), N = new ye, D = new ye, L = new ye), p || (_ = 0, g = 0, x = 0, S = 0);
                const R = a.extractPoints(c);
                let A = R.shape;
                const P = R.holes;
                if (!Wc.isClockWise(A)) {
                    A = A.reverse();
                    for(let we = 0, Me = P.length; we < Me; we++){
                        const se = P[we];
                        Wc.isClockWise(se) && (P[we] = se.reverse());
                    }
                }
                const U = Wc.triangulateShape(A, P), j = A;
                for(let we = 0, Me = P.length; we < Me; we++){
                    const se = P[we];
                    A = A.concat(se);
                }
                function K(we, Me, se) {
                    return Me || console.error("THREE.ExtrudeGeometry: vec does not exist"), we.clone().addScaledVector(Me, se);
                }
                const q = A.length, te = U.length;
                function W(we, Me, se) {
                    let Ye, Be, it;
                    const de = we.x - Me.x, ae = we.y - Me.y, oe = se.x - we.x, $ = se.y - we.y, H = de * de + ae * ae, fe = de * $ - ae * oe;
                    if (Math.abs(fe) > Number.EPSILON) {
                        const pe = Math.sqrt(H), me = Math.sqrt(oe * oe + $ * $), Ie = Me.x - ae / pe, Xe = Me.y + de / pe, Ze = se.x - $ / me, at = se.y + oe / me, Je = ((Ze - Ie) * $ - (at - Xe) * oe) / (de * $ - ae * oe);
                        Ye = Ie + de * Je - we.x, Be = Xe + ae * Je - we.y;
                        const Pe = Ye * Ye + Be * Be;
                        if (Pe <= 2) return new ot(Ye, Be);
                        it = Math.sqrt(Pe / 2);
                    } else {
                        let pe = !1;
                        de > Number.EPSILON ? oe > Number.EPSILON && (pe = !0) : de < -Number.EPSILON ? oe < -Number.EPSILON && (pe = !0) : Math.sign(ae) === Math.sign($) && (pe = !0), pe ? (Ye = -ae, Be = de, it = Math.sqrt(H)) : (Ye = de, Be = ae, it = Math.sqrt(H / 2));
                    }
                    return new ot(Ye / it, Be / it);
                }
                const J = [];
                for(let we = 0, Me = j.length, se = Me - 1, Ye = we + 1; we < Me; we++, se++, Ye++)se === Me && (se = 0), Ye === Me && (Ye = 0), J[we] = W(j[we], j[se], j[Ye]);
                const Q = [];
                let Y, le = J.concat();
                for(let we = 0, Me = P.length; we < Me; we++){
                    const se = P[we];
                    Y = [];
                    for(let Ye = 0, Be = se.length, it = Be - 1, de = Ye + 1; Ye < Be; Ye++, it++, de++)it === Be && (it = 0), de === Be && (de = 0), Y[Ye] = W(se[Ye], se[it], se[de]);
                    Q.push(Y), le = le.concat(Y);
                }
                for(let we = 0; we < _; we++){
                    const Me = we / _, se = g * Math.cos(Me * Math.PI / 2), Ye = x * Math.sin(Me * Math.PI / 2) + S;
                    for(let Be = 0, it = j.length; Be < it; Be++){
                        const de = K(j[Be], J[Be], Ye);
                        ve(de.x, de.y, -se);
                    }
                    for(let Be = 0, it = P.length; Be < it; Be++){
                        const de = P[Be];
                        Y = Q[Be];
                        for(let ae = 0, oe = de.length; ae < oe; ae++){
                            const $ = K(de[ae], Y[ae], Ye);
                            ve($.x, $.y, -se);
                        }
                    }
                }
                const ue = x + S;
                for(let we = 0; we < q; we++){
                    const Me = p ? K(A[we], le[we], ue) : A[we];
                    T ? (D.copy(k.normals[0]).multiplyScalar(Me.x), N.copy(k.binormals[0]).multiplyScalar(Me.y), L.copy(E[0]).add(D).add(N), ve(L.x, L.y, L.z)) : ve(Me.x, Me.y, 0);
                }
                for(let we = 1; we <= u; we++)for(let Me = 0; Me < q; Me++){
                    const se = p ? K(A[Me], le[Me], ue) : A[Me];
                    T ? (D.copy(k.normals[we]).multiplyScalar(se.x), N.copy(k.binormals[we]).multiplyScalar(se.y), L.copy(E[we]).add(D).add(N), ve(L.x, L.y, L.z)) : ve(se.x, se.y, f / u * we);
                }
                for(let we = _ - 1; we >= 0; we--){
                    const Me = we / _, se = g * Math.cos(Me * Math.PI / 2), Ye = x * Math.sin(Me * Math.PI / 2) + S;
                    for(let Be = 0, it = j.length; Be < it; Be++){
                        const de = K(j[Be], J[Be], Ye);
                        ve(de.x, de.y, f + se);
                    }
                    for(let Be = 0, it = P.length; Be < it; Be++){
                        const de = P[Be];
                        Y = Q[Be];
                        for(let ae = 0, oe = de.length; ae < oe; ae++){
                            const $ = K(de[ae], Y[ae], Ye);
                            T ? ve($.x, $.y + E[u - 1].y, E[u - 1].x + se) : ve($.x, $.y, f + se);
                        }
                    }
                }
                ie(), he();
                function ie() {
                    const we = i.length / 3;
                    if (p) {
                        let Me = 0, se = q * Me;
                        for(let Ye = 0; Ye < te; Ye++){
                            const Be = U[Ye];
                            Ee(Be[2] + se, Be[1] + se, Be[0] + se);
                        }
                        Me = u + _ * 2, se = q * Me;
                        for(let Ye = 0; Ye < te; Ye++){
                            const Be = U[Ye];
                            Ee(Be[0] + se, Be[1] + se, Be[2] + se);
                        }
                    } else {
                        for(let Me = 0; Me < te; Me++){
                            const se = U[Me];
                            Ee(se[2], se[1], se[0]);
                        }
                        for(let Me = 0; Me < te; Me++){
                            const se = U[Me];
                            Ee(se[0] + q * u, se[1] + q * u, se[2] + q * u);
                        }
                    }
                    r.addGroup(we, i.length / 3 - we, 0);
                }
                function he() {
                    const we = i.length / 3;
                    let Me = 0;
                    ge(j, Me), Me += j.length;
                    for(let se = 0, Ye = P.length; se < Ye; se++){
                        const Be = P[se];
                        ge(Be, Me), Me += Be.length;
                    }
                    r.addGroup(we, i.length / 3 - we, 1);
                }
                function ge(we, Me) {
                    let se = we.length;
                    for(; --se >= 0;){
                        const Ye = se;
                        let Be = se - 1;
                        Be < 0 && (Be = we.length - 1);
                        for(let it = 0, de = u + _ * 2; it < de; it++){
                            const ae = q * it, oe = q * (it + 1), $ = Me + Ye + ae, H = Me + Be + ae, fe = Me + Be + oe, pe = Me + Ye + oe;
                            Ce($, H, fe, pe);
                        }
                    }
                }
                function ve(we, Me, se) {
                    l.push(we), l.push(Me), l.push(se);
                }
                function Ee(we, Me, se) {
                    Ne(we), Ne(Me), Ne(se);
                    const Ye = i.length / 3, Be = M.generateTopUV(r, i, Ye - 3, Ye - 2, Ye - 1);
                    Ve(Be[0]), Ve(Be[1]), Ve(Be[2]);
                }
                function Ce(we, Me, se, Ye) {
                    Ne(we), Ne(Me), Ne(Ye), Ne(Me), Ne(se), Ne(Ye);
                    const Be = i.length / 3, it = M.generateSideWallUV(r, i, Be - 6, Be - 3, Be - 2, Be - 1);
                    Ve(it[0]), Ve(it[1]), Ve(it[3]), Ve(it[1]), Ve(it[2]), Ve(it[3]);
                }
                function Ne(we) {
                    i.push(l[we * 3 + 0]), i.push(l[we * 3 + 1]), i.push(l[we * 3 + 2]);
                }
                function Ve(we) {
                    s.push(we.x), s.push(we.y);
                }
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        toJSON() {
            const e = super.toJSON(), n = this.parameters.shapes, r = this.parameters.options;
            return gye(n, r, e);
        }
        static fromJSON(e, n) {
            const r = [];
            for(let s = 0, o = e.shapes.length; s < o; s++){
                const a = n[e.shapes[s]];
                r.push(a);
            }
            const i = e.options.extrudePath;
            return i !== void 0 && (e.options.extrudePath = new LM[i.type]().fromJSON(i)), new oC(r, e.options);
        }
    }
    const mye = {
        generateTopUV: function(t, e, n, r, i) {
            const s = e[n * 3], o = e[n * 3 + 1], a = e[r * 3], l = e[r * 3 + 1], c = e[i * 3], u = e[i * 3 + 1];
            return [
                new ot(s, o),
                new ot(a, l),
                new ot(c, u)
            ];
        },
        generateSideWallUV: function(t, e, n, r, i, s) {
            const o = e[n * 3], a = e[n * 3 + 1], l = e[n * 3 + 2], c = e[r * 3], u = e[r * 3 + 1], f = e[r * 3 + 2], p = e[i * 3], g = e[i * 3 + 1], x = e[i * 3 + 2], S = e[s * 3], _ = e[s * 3 + 1], b = e[s * 3 + 2];
            return Math.abs(a - u) < Math.abs(o - c) ? [
                new ot(o, 1 - l),
                new ot(c, 1 - f),
                new ot(p, 1 - x),
                new ot(S, 1 - b)
            ] : [
                new ot(a, 1 - l),
                new ot(u, 1 - f),
                new ot(g, 1 - x),
                new ot(_, 1 - b)
            ];
        }
    };
    function gye(t, e, n) {
        if (n.shapes = [], Array.isArray(t)) for(let r = 0, i = t.length; r < i; r++){
            const s = t[r];
            n.shapes.push(s.uuid);
        }
        else n.shapes.push(t.uuid);
        return n.options = Object.assign({}, e), e.extrudePath !== void 0 && (n.options.extrudePath = e.extrudePath.toJSON()), n;
    }
    class aC extends oh {
        constructor(e = 1, n = 0){
            const r = (1 + Math.sqrt(5)) / 2, i = [
                -1,
                r,
                0,
                1,
                r,
                0,
                -1,
                -r,
                0,
                1,
                -r,
                0,
                0,
                -1,
                r,
                0,
                1,
                r,
                0,
                -1,
                -r,
                0,
                1,
                -r,
                r,
                0,
                -1,
                r,
                0,
                1,
                -r,
                0,
                -1,
                -r,
                0,
                1
            ], s = [
                0,
                11,
                5,
                0,
                5,
                1,
                0,
                1,
                7,
                0,
                7,
                10,
                0,
                10,
                11,
                1,
                5,
                9,
                5,
                11,
                4,
                11,
                10,
                2,
                10,
                7,
                6,
                7,
                1,
                8,
                3,
                9,
                4,
                3,
                4,
                2,
                3,
                2,
                6,
                3,
                6,
                8,
                3,
                8,
                9,
                4,
                9,
                5,
                2,
                4,
                11,
                6,
                2,
                10,
                8,
                6,
                7,
                9,
                8,
                1
            ];
            super(i, s, e, n), this.type = "IcosahedronGeometry", this.parameters = {
                radius: e,
                detail: n
            };
        }
        static fromJSON(e) {
            return new aC(e.radius, e.detail);
        }
    }
    class yw extends oh {
        constructor(e = 1, n = 0){
            const r = [
                1,
                0,
                0,
                -1,
                0,
                0,
                0,
                1,
                0,
                0,
                -1,
                0,
                0,
                0,
                1,
                0,
                0,
                -1
            ], i = [
                0,
                2,
                4,
                0,
                4,
                3,
                0,
                3,
                5,
                0,
                5,
                2,
                1,
                2,
                5,
                1,
                5,
                3,
                1,
                3,
                4,
                1,
                4,
                2
            ];
            super(r, i, e, n), this.type = "OctahedronGeometry", this.parameters = {
                radius: e,
                detail: n
            };
        }
        static fromJSON(e) {
            return new yw(e.radius, e.detail);
        }
    }
    class xv extends Fn {
        constructor(e = 1, n = 1, r = 1, i = 1){
            super(), this.type = "PlaneGeometry", this.parameters = {
                width: e,
                height: n,
                widthSegments: r,
                heightSegments: i
            };
            const s = e / 2, o = n / 2, a = Math.floor(r), l = Math.floor(i), c = a + 1, u = l + 1, f = e / a, p = n / l, g = [], x = [], S = [], _ = [];
            for(let b = 0; b < u; b++){
                const M = b * p - o;
                for(let E = 0; E < c; E++){
                    const T = E * f - s;
                    x.push(T, -M, 0), S.push(0, 0, 1), _.push(E / a), _.push(1 - b / l);
                }
            }
            for(let b = 0; b < l; b++)for(let M = 0; M < a; M++){
                const E = M + c * b, T = M + c * (b + 1), k = M + 1 + c * (b + 1), N = M + 1 + c * b;
                g.push(E, T, N), g.push(T, k, N);
            }
            this.setIndex(g), this.setAttribute("position", new Gt(x, 3)), this.setAttribute("normal", new Gt(S, 3)), this.setAttribute("uv", new Gt(_, 2));
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new xv(e.width, e.height, e.widthSegments, e.heightSegments);
        }
    }
    class lC extends Fn {
        constructor(e = .5, n = 1, r = 32, i = 1, s = 0, o = Math.PI * 2){
            super(), this.type = "RingGeometry", this.parameters = {
                innerRadius: e,
                outerRadius: n,
                thetaSegments: r,
                phiSegments: i,
                thetaStart: s,
                thetaLength: o
            }, r = Math.max(3, r), i = Math.max(1, i);
            const a = [], l = [], c = [], u = [];
            let f = e;
            const p = (n - e) / i, g = new ye, x = new ot;
            for(let S = 0; S <= i; S++){
                for(let _ = 0; _ <= r; _++){
                    const b = s + _ / r * o;
                    g.x = f * Math.cos(b), g.y = f * Math.sin(b), l.push(g.x, g.y, g.z), c.push(0, 0, 1), x.x = (g.x / n + 1) / 2, x.y = (g.y / n + 1) / 2, u.push(x.x, x.y);
                }
                f += p;
            }
            for(let S = 0; S < i; S++){
                const _ = S * (r + 1);
                for(let b = 0; b < r; b++){
                    const M = b + _, E = M, T = M + r + 1, k = M + r + 2, N = M + 1;
                    a.push(E, T, N), a.push(T, k, N);
                }
            }
            this.setIndex(a), this.setAttribute("position", new Gt(l, 3)), this.setAttribute("normal", new Gt(c, 3)), this.setAttribute("uv", new Gt(u, 2));
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new lC(e.innerRadius, e.outerRadius, e.thetaSegments, e.phiSegments, e.thetaStart, e.thetaLength);
        }
    }
    class cC extends Fn {
        constructor(e = new Hp([
            new ot(0, .5),
            new ot(-.5, -.5),
            new ot(.5, -.5)
        ]), n = 12){
            super(), this.type = "ShapeGeometry", this.parameters = {
                shapes: e,
                curveSegments: n
            };
            const r = [], i = [], s = [], o = [];
            let a = 0, l = 0;
            if (Array.isArray(e) === !1) c(e);
            else for(let u = 0; u < e.length; u++)c(e[u]), this.addGroup(a, l, u), a += l, l = 0;
            this.setIndex(r), this.setAttribute("position", new Gt(i, 3)), this.setAttribute("normal", new Gt(s, 3)), this.setAttribute("uv", new Gt(o, 2));
            function c(u) {
                const f = i.length / 3, p = u.extractPoints(n);
                let g = p.shape;
                const x = p.holes;
                Wc.isClockWise(g) === !1 && (g = g.reverse());
                for(let _ = 0, b = x.length; _ < b; _++){
                    const M = x[_];
                    Wc.isClockWise(M) === !0 && (x[_] = M.reverse());
                }
                const S = Wc.triangulateShape(g, x);
                for(let _ = 0, b = x.length; _ < b; _++){
                    const M = x[_];
                    g = g.concat(M);
                }
                for(let _ = 0, b = g.length; _ < b; _++){
                    const M = g[_];
                    i.push(M.x, M.y, 0), s.push(0, 0, 1), o.push(M.x, M.y);
                }
                for(let _ = 0, b = S.length; _ < b; _++){
                    const M = S[_], E = M[0] + f, T = M[1] + f, k = M[2] + f;
                    r.push(E, T, k), l += 3;
                }
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        toJSON() {
            const e = super.toJSON(), n = this.parameters.shapes;
            return yye(n, e);
        }
        static fromJSON(e, n) {
            const r = [];
            for(let i = 0, s = e.shapes.length; i < s; i++){
                const o = n[e.shapes[i]];
                r.push(o);
            }
            return new cC(r, e.curveSegments);
        }
    }
    function yye(t, e) {
        if (e.shapes = [], Array.isArray(t)) for(let n = 0, r = t.length; n < r; n++){
            const i = t[n];
            e.shapes.push(i.uuid);
        }
        else e.shapes.push(t.uuid);
        return e;
    }
    class vw extends Fn {
        constructor(e = 1, n = 32, r = 16, i = 0, s = Math.PI * 2, o = 0, a = Math.PI){
            super(), this.type = "SphereGeometry", this.parameters = {
                radius: e,
                widthSegments: n,
                heightSegments: r,
                phiStart: i,
                phiLength: s,
                thetaStart: o,
                thetaLength: a
            }, n = Math.max(3, Math.floor(n)), r = Math.max(2, Math.floor(r));
            const l = Math.min(o + a, Math.PI);
            let c = 0;
            const u = [], f = new ye, p = new ye, g = [], x = [], S = [], _ = [];
            for(let b = 0; b <= r; b++){
                const M = [], E = b / r;
                let T = 0;
                b === 0 && o === 0 ? T = .5 / n : b === r && l === Math.PI && (T = -.5 / n);
                for(let k = 0; k <= n; k++){
                    const N = k / n;
                    f.x = -e * Math.cos(i + N * s) * Math.sin(o + E * a), f.y = e * Math.cos(o + E * a), f.z = e * Math.sin(i + N * s) * Math.sin(o + E * a), x.push(f.x, f.y, f.z), p.copy(f).normalize(), S.push(p.x, p.y, p.z), _.push(N + T, 1 - E), M.push(c++);
                }
                u.push(M);
            }
            for(let b = 0; b < r; b++)for(let M = 0; M < n; M++){
                const E = u[b][M + 1], T = u[b][M], k = u[b + 1][M], N = u[b + 1][M + 1];
                (b !== 0 || o > 0) && g.push(E, T, N), (b !== r - 1 || l < Math.PI) && g.push(T, k, N);
            }
            this.setIndex(g), this.setAttribute("position", new Gt(x, 3)), this.setAttribute("normal", new Gt(S, 3)), this.setAttribute("uv", new Gt(_, 2));
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new vw(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength);
        }
    }
    class uC extends oh {
        constructor(e = 1, n = 0){
            const r = [
                1,
                1,
                1,
                -1,
                -1,
                1,
                -1,
                1,
                -1,
                1,
                -1,
                -1
            ], i = [
                2,
                1,
                0,
                0,
                3,
                2,
                1,
                3,
                0,
                2,
                3,
                1
            ];
            super(r, i, e, n), this.type = "TetrahedronGeometry", this.parameters = {
                radius: e,
                detail: n
            };
        }
        static fromJSON(e) {
            return new uC(e.radius, e.detail);
        }
    }
    class dC extends Fn {
        constructor(e = 1, n = .4, r = 12, i = 48, s = Math.PI * 2){
            super(), this.type = "TorusGeometry", this.parameters = {
                radius: e,
                tube: n,
                radialSegments: r,
                tubularSegments: i,
                arc: s
            }, r = Math.floor(r), i = Math.floor(i);
            const o = [], a = [], l = [], c = [], u = new ye, f = new ye, p = new ye;
            for(let g = 0; g <= r; g++)for(let x = 0; x <= i; x++){
                const S = x / i * s, _ = g / r * Math.PI * 2;
                f.x = (e + n * Math.cos(_)) * Math.cos(S), f.y = (e + n * Math.cos(_)) * Math.sin(S), f.z = n * Math.sin(_), a.push(f.x, f.y, f.z), u.x = e * Math.cos(S), u.y = e * Math.sin(S), p.subVectors(f, u).normalize(), l.push(p.x, p.y, p.z), c.push(x / i), c.push(g / r);
            }
            for(let g = 1; g <= r; g++)for(let x = 1; x <= i; x++){
                const S = (i + 1) * g + x - 1, _ = (i + 1) * (g - 1) + x - 1, b = (i + 1) * (g - 1) + x, M = (i + 1) * g + x;
                o.push(S, _, M), o.push(_, b, M);
            }
            this.setIndex(o), this.setAttribute("position", new Gt(a, 3)), this.setAttribute("normal", new Gt(l, 3)), this.setAttribute("uv", new Gt(c, 2));
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new dC(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.arc);
        }
    }
    class fC extends Fn {
        constructor(e = 1, n = .4, r = 64, i = 8, s = 2, o = 3){
            super(), this.type = "TorusKnotGeometry", this.parameters = {
                radius: e,
                tube: n,
                tubularSegments: r,
                radialSegments: i,
                p: s,
                q: o
            }, r = Math.floor(r), i = Math.floor(i);
            const a = [], l = [], c = [], u = [], f = new ye, p = new ye, g = new ye, x = new ye, S = new ye, _ = new ye, b = new ye;
            for(let E = 0; E <= r; ++E){
                const T = E / r * s * Math.PI * 2;
                M(T, s, o, e, g), M(T + .01, s, o, e, x), _.subVectors(x, g), b.addVectors(x, g), S.crossVectors(_, b), b.crossVectors(S, _), S.normalize(), b.normalize();
                for(let k = 0; k <= i; ++k){
                    const N = k / i * Math.PI * 2, D = -n * Math.cos(N), L = n * Math.sin(N);
                    f.x = g.x + (D * b.x + L * S.x), f.y = g.y + (D * b.y + L * S.y), f.z = g.z + (D * b.z + L * S.z), l.push(f.x, f.y, f.z), p.subVectors(f, g).normalize(), c.push(p.x, p.y, p.z), u.push(E / r), u.push(k / i);
                }
            }
            for(let E = 1; E <= r; E++)for(let T = 1; T <= i; T++){
                const k = (i + 1) * (E - 1) + (T - 1), N = (i + 1) * E + (T - 1), D = (i + 1) * E + T, L = (i + 1) * (E - 1) + T;
                a.push(k, N, L), a.push(N, D, L);
            }
            this.setIndex(a), this.setAttribute("position", new Gt(l, 3)), this.setAttribute("normal", new Gt(c, 3)), this.setAttribute("uv", new Gt(u, 2));
            function M(E, T, k, N, D) {
                const L = Math.cos(E), R = Math.sin(E), A = k / T * E, P = Math.cos(A);
                D.x = N * (2 + P) * .5 * L, D.y = N * (2 + P) * R * .5, D.z = N * Math.sin(A) * .5;
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new fC(e.radius, e.tube, e.tubularSegments, e.radialSegments, e.p, e.q);
        }
    }
    class hC extends Fn {
        constructor(e = new T2(new ye(-1, -1, 0), new ye(-1, 1, 0), new ye(1, 1, 0)), n = 64, r = 1, i = 8, s = !1){
            super(), this.type = "TubeGeometry", this.parameters = {
                path: e,
                tubularSegments: n,
                radius: r,
                radialSegments: i,
                closed: s
            };
            const o = e.computeFrenetFrames(n, s);
            this.tangents = o.tangents, this.normals = o.normals, this.binormals = o.binormals;
            const a = new ye, l = new ye, c = new ot;
            let u = new ye;
            const f = [], p = [], g = [], x = [];
            S(), this.setIndex(x), this.setAttribute("position", new Gt(f, 3)), this.setAttribute("normal", new Gt(p, 3)), this.setAttribute("uv", new Gt(g, 2));
            function S() {
                for(let E = 0; E < n; E++)_(E);
                _(s === !1 ? n : 0), M(), b();
            }
            function _(E) {
                u = e.getPointAt(E / n, u);
                const T = o.normals[E], k = o.binormals[E];
                for(let N = 0; N <= i; N++){
                    const D = N / i * Math.PI * 2, L = Math.sin(D), R = -Math.cos(D);
                    l.x = R * T.x + L * k.x, l.y = R * T.y + L * k.y, l.z = R * T.z + L * k.z, l.normalize(), p.push(l.x, l.y, l.z), a.x = u.x + r * l.x, a.y = u.y + r * l.y, a.z = u.z + r * l.z, f.push(a.x, a.y, a.z);
                }
            }
            function b() {
                for(let E = 1; E <= n; E++)for(let T = 1; T <= i; T++){
                    const k = (i + 1) * (E - 1) + (T - 1), N = (i + 1) * E + (T - 1), D = (i + 1) * E + T, L = (i + 1) * (E - 1) + T;
                    x.push(k, N, L), x.push(N, D, L);
                }
            }
            function M() {
                for(let E = 0; E <= n; E++)for(let T = 0; T <= i; T++)c.x = E / n, c.y = T / i, g.push(c.x, c.y);
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.path = this.parameters.path.toJSON(), e;
        }
        static fromJSON(e) {
            return new hC(new LM[e.path.type]().fromJSON(e.path), e.tubularSegments, e.radius, e.radialSegments, e.closed);
        }
    }
    class tG extends Fn {
        constructor(e = null){
            if (super(), this.type = "WireframeGeometry", this.parameters = {
                geometry: e
            }, e !== null) {
                const n = [], r = new Set, i = new ye, s = new ye;
                if (e.index !== null) {
                    const o = e.attributes.position, a = e.index;
                    let l = e.groups;
                    l.length === 0 && (l = [
                        {
                            start: 0,
                            count: a.count,
                            materialIndex: 0
                        }
                    ]);
                    for(let c = 0, u = l.length; c < u; ++c){
                        const f = l[c], p = f.start, g = f.count;
                        for(let x = p, S = p + g; x < S; x += 3)for(let _ = 0; _ < 3; _++){
                            const b = a.getX(x + _), M = a.getX(x + (_ + 1) % 3);
                            i.fromBufferAttribute(o, b), s.fromBufferAttribute(o, M), QU(i, s, r) === !0 && (n.push(i.x, i.y, i.z), n.push(s.x, s.y, s.z));
                        }
                    }
                } else {
                    const o = e.attributes.position;
                    for(let a = 0, l = o.count / 3; a < l; a++)for(let c = 0; c < 3; c++){
                        const u = 3 * a + c, f = 3 * a + (c + 1) % 3;
                        i.fromBufferAttribute(o, u), s.fromBufferAttribute(o, f), QU(i, s, r) === !0 && (n.push(i.x, i.y, i.z), n.push(s.x, s.y, s.z));
                    }
                }
                this.setAttribute("position", new Gt(n, 3));
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
    }
    function QU(t, e, n) {
        const r = `${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`, i = `${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;
        return n.has(r) === !0 || n.has(i) === !0 ? !1 : (n.add(r), n.add(i), !0);
    }
    var ez = Object.freeze({
        __proto__: null,
        BoxGeometry: vm,
        CapsuleGeometry: tC,
        CircleGeometry: nC,
        ConeGeometry: rC,
        CylinderGeometry: vv,
        DodecahedronGeometry: iC,
        EdgesGeometry: Z6,
        ExtrudeGeometry: oC,
        IcosahedronGeometry: aC,
        LatheGeometry: gw,
        OctahedronGeometry: yw,
        PlaneGeometry: xv,
        PolyhedronGeometry: oh,
        RingGeometry: lC,
        ShapeGeometry: cC,
        SphereGeometry: vw,
        TetrahedronGeometry: uC,
        TorusGeometry: dC,
        TorusKnotGeometry: fC,
        TubeGeometry: hC,
        WireframeGeometry: tG
    });
    class nG extends no {
        constructor(e){
            super(), this.isShadowMaterial = !0, this.type = "ShadowMaterial", this.color = new Ft(0), this.transparent = !0, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.fog = e.fog, this;
        }
    }
    class rG extends oc {
        constructor(e){
            super(e), this.isRawShaderMaterial = !0, this.type = "RawShaderMaterial";
        }
    }
    class I2 extends no {
        constructor(e){
            super(), this.isMeshStandardMaterial = !0, this.type = "MeshStandardMaterial", this.defines = {
                STANDARD: ""
            }, this.color = new Ft(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Ft(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = ih, this.normalScale = new ot(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapRotation = new ja, this.envMapIntensity = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.defines = {
                STANDARD: ""
            }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapRotation.copy(e.envMapRotation), this.envMapIntensity = e.envMapIntensity, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
        }
    }
    class iG extends I2 {
        constructor(e){
            super(), this.isMeshPhysicalMaterial = !0, this.defines = {
                STANDARD: "",
                PHYSICAL: ""
            }, this.type = "MeshPhysicalMaterial", this.anisotropyRotation = 0, this.anisotropyMap = null, this.clearcoatMap = null, this.clearcoatRoughness = 0, this.clearcoatRoughnessMap = null, this.clearcoatNormalScale = new ot(1, 1), this.clearcoatNormalMap = null, this.ior = 1.5, Object.defineProperty(this, "reflectivity", {
                get: function() {
                    return _n(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);
                },
                set: function(n) {
                    this.ior = (1 + .4 * n) / (1 - .4 * n);
                }
            }), this.iridescenceMap = null, this.iridescenceIOR = 1.3, this.iridescenceThicknessRange = [
                100,
                400
            ], this.iridescenceThicknessMap = null, this.sheenColor = new Ft(0), this.sheenColorMap = null, this.sheenRoughness = 1, this.sheenRoughnessMap = null, this.transmissionMap = null, this.thickness = 0, this.thicknessMap = null, this.attenuationDistance = 1 / 0, this.attenuationColor = new Ft(1, 1, 1), this.specularIntensity = 1, this.specularIntensityMap = null, this.specularColor = new Ft(1, 1, 1), this.specularColorMap = null, this._anisotropy = 0, this._clearcoat = 0, this._dispersion = 0, this._iridescence = 0, this._sheen = 0, this._transmission = 0, this.setValues(e);
        }
        get anisotropy() {
            return this._anisotropy;
        }
        set anisotropy(e) {
            this._anisotropy > 0 != e > 0 && this.version++, this._anisotropy = e;
        }
        get clearcoat() {
            return this._clearcoat;
        }
        set clearcoat(e) {
            this._clearcoat > 0 != e > 0 && this.version++, this._clearcoat = e;
        }
        get iridescence() {
            return this._iridescence;
        }
        set iridescence(e) {
            this._iridescence > 0 != e > 0 && this.version++, this._iridescence = e;
        }
        get dispersion() {
            return this._dispersion;
        }
        set dispersion(e) {
            this._dispersion > 0 != e > 0 && this.version++, this._dispersion = e;
        }
        get sheen() {
            return this._sheen;
        }
        set sheen(e) {
            this._sheen > 0 != e > 0 && this.version++, this._sheen = e;
        }
        get transmission() {
            return this._transmission;
        }
        set transmission(e) {
            this._transmission > 0 != e > 0 && this.version++, this._transmission = e;
        }
        copy(e) {
            return super.copy(e), this.defines = {
                STANDARD: "",
                PHYSICAL: ""
            }, this.anisotropy = e.anisotropy, this.anisotropyRotation = e.anisotropyRotation, this.anisotropyMap = e.anisotropyMap, this.clearcoat = e.clearcoat, this.clearcoatMap = e.clearcoatMap, this.clearcoatRoughness = e.clearcoatRoughness, this.clearcoatRoughnessMap = e.clearcoatRoughnessMap, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.dispersion = e.dispersion, this.ior = e.ior, this.iridescence = e.iridescence, this.iridescenceMap = e.iridescenceMap, this.iridescenceIOR = e.iridescenceIOR, this.iridescenceThicknessRange = [
                ...e.iridescenceThicknessRange
            ], this.iridescenceThicknessMap = e.iridescenceThicknessMap, this.sheen = e.sheen, this.sheenColor.copy(e.sheenColor), this.sheenColorMap = e.sheenColorMap, this.sheenRoughness = e.sheenRoughness, this.sheenRoughnessMap = e.sheenRoughnessMap, this.transmission = e.transmission, this.transmissionMap = e.transmissionMap, this.thickness = e.thickness, this.thicknessMap = e.thicknessMap, this.attenuationDistance = e.attenuationDistance, this.attenuationColor.copy(e.attenuationColor), this.specularIntensity = e.specularIntensity, this.specularIntensityMap = e.specularIntensityMap, this.specularColor.copy(e.specularColor), this.specularColorMap = e.specularColorMap, this;
        }
    }
    class sG extends no {
        constructor(e){
            super(), this.isMeshPhongMaterial = !0, this.type = "MeshPhongMaterial", this.color = new Ft(16777215), this.specular = new Ft(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Ft(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = ih, this.normalScale = new ot(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.envMapRotation = new ja, this.combine = uw, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapRotation.copy(e.envMapRotation), this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
        }
    }
    class oG extends no {
        constructor(e){
            super(), this.isMeshToonMaterial = !0, this.defines = {
                TOON: ""
            }, this.type = "MeshToonMaterial", this.color = new Ft(16777215), this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Ft(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = ih, this.normalScale = new ot(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.fog = e.fog, this;
        }
    }
    class aG extends no {
        constructor(e){
            super(), this.isMeshNormalMaterial = !0, this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = ih, this.normalScale = new ot(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.flatShading = !1, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.flatShading = e.flatShading, this;
        }
    }
    class lG extends no {
        constructor(e){
            super(), this.isMeshLambertMaterial = !0, this.type = "MeshLambertMaterial", this.color = new Ft(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Ft(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = ih, this.normalScale = new ot(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.envMapRotation = new ja, this.combine = uw, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapRotation.copy(e.envMapRotation), this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
        }
    }
    class R2 extends no {
        constructor(e){
            super(), this.isMeshDepthMaterial = !0, this.type = "MeshDepthMaterial", this.depthPacking = x6, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.depthPacking = e.depthPacking, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;
        }
    }
    class A2 extends no {
        constructor(e){
            super(), this.isMeshDistanceMaterial = !0, this.type = "MeshDistanceMaterial", this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;
        }
    }
    class cG extends no {
        constructor(e){
            super(), this.isMeshMatcapMaterial = !0, this.defines = {
                MATCAP: ""
            }, this.type = "MeshMatcapMaterial", this.color = new Ft(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = ih, this.normalScale = new ot(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.flatShading = !1, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.defines = {
                MATCAP: ""
            }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.flatShading = e.flatShading, this.fog = e.fog, this;
        }
    }
    class uG extends No {
        constructor(e){
            super(), this.isLineDashedMaterial = !0, this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this;
        }
    }
    function Dp(t, e, n) {
        return !t || !n && t.constructor === e ? t : typeof e.BYTES_PER_ELEMENT == "number" ? new e(t) : Array.prototype.slice.call(t);
    }
    function dG(t) {
        return ArrayBuffer.isView(t) && !(t instanceof DataView);
    }
    function fG(t) {
        function e(i, s) {
            return t[i] - t[s];
        }
        const n = t.length, r = new Array(n);
        for(let i = 0; i !== n; ++i)r[i] = i;
        return r.sort(e), r;
    }
    function yk(t, e, n) {
        const r = t.length, i = new t.constructor(r);
        for(let s = 0, o = 0; o !== r; ++s){
            const a = n[s] * e;
            for(let l = 0; l !== e; ++l)i[o++] = t[a + l];
        }
        return i;
    }
    function N2(t, e, n, r) {
        let i = 1, s = t[0];
        for(; s !== void 0 && s[r] === void 0;)s = t[i++];
        if (s === void 0) return;
        let o = s[r];
        if (o !== void 0) if (Array.isArray(o)) do o = s[r], o !== void 0 && (e.push(s.time), n.push.apply(n, o)), s = t[i++];
        while (s !== void 0);
        else if (o.toArray !== void 0) do o = s[r], o !== void 0 && (e.push(s.time), o.toArray(n, n.length)), s = t[i++];
        while (s !== void 0);
        else do o = s[r], o !== void 0 && (e.push(s.time), n.push(o)), s = t[i++];
        while (s !== void 0);
    }
    function vye(t, e, n, r, i = 30) {
        const s = t.clone();
        s.name = e;
        const o = [];
        for(let l = 0; l < s.tracks.length; ++l){
            const c = s.tracks[l], u = c.getValueSize(), f = [], p = [];
            for(let g = 0; g < c.times.length; ++g){
                const x = c.times[g] * i;
                if (!(x < n || x >= r)) {
                    f.push(c.times[g]);
                    for(let S = 0; S < u; ++S)p.push(c.values[g * u + S]);
                }
            }
            f.length !== 0 && (c.times = Dp(f, c.times.constructor), c.values = Dp(p, c.values.constructor), o.push(c));
        }
        s.tracks = o;
        let a = 1 / 0;
        for(let l = 0; l < s.tracks.length; ++l)a > s.tracks[l].times[0] && (a = s.tracks[l].times[0]);
        for(let l = 0; l < s.tracks.length; ++l)s.tracks[l].shift(-1 * a);
        return s.resetDuration(), s;
    }
    function xye(t, e = 0, n = t, r = 30) {
        r <= 0 && (r = 30);
        const i = n.tracks.length, s = e / r;
        for(let o = 0; o < i; ++o){
            const a = n.tracks[o], l = a.ValueTypeName;
            if (l === "bool" || l === "string") continue;
            const c = t.tracks.find(function(b) {
                return b.name === a.name && b.ValueTypeName === l;
            });
            if (c === void 0) continue;
            let u = 0;
            const f = a.getValueSize();
            a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (u = f / 3);
            let p = 0;
            const g = c.getValueSize();
            c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (p = g / 3);
            const x = a.times.length - 1;
            let S;
            if (s <= a.times[0]) {
                const b = u, M = f - u;
                S = a.values.slice(b, M);
            } else if (s >= a.times[x]) {
                const b = x * f + u, M = b + f - u;
                S = a.values.slice(b, M);
            } else {
                const b = a.createInterpolant(), M = u, E = f - u;
                b.evaluate(s), S = b.resultBuffer.slice(M, E);
            }
            l === "quaternion" && new Xs().fromArray(S).normalize().conjugate().toArray(S);
            const _ = c.times.length;
            for(let b = 0; b < _; ++b){
                const M = b * g + p;
                if (l === "quaternion") Xs.multiplyQuaternionsFlat(c.values, M, S, 0, c.values, M);
                else {
                    const E = g - p * 2;
                    for(let T = 0; T < E; ++T)c.values[M + T] -= S[T];
                }
            }
        }
        return t.blendMode = f2, t;
    }
    const bye = {
        convertArray: Dp,
        isTypedArray: dG,
        getKeyframeOrder: fG,
        sortedArray: yk,
        flattenJSON: N2,
        subclip: vye,
        makeClipAdditive: xye
    };
    class xw {
        constructor(e, n, r, i){
            this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = i !== void 0 ? i : new n.constructor(r), this.sampleValues = n, this.valueSize = r, this.settings = null, this.DefaultSettings_ = {};
        }
        evaluate(e) {
            const n = this.parameterPositions;
            let r = this._cachedIndex, i = n[r], s = n[r - 1];
            e: {
                t: {
                    let o;
                    n: {
                        r: if (!(e < i)) {
                            for(let a = r + 2;;){
                                if (i === void 0) {
                                    if (e < s) break r;
                                    return r = n.length, this._cachedIndex = r, this.copySampleValue_(r - 1);
                                }
                                if (r === a) break;
                                if (s = i, i = n[++r], e < i) break t;
                            }
                            o = n.length;
                            break n;
                        }
                        if (!(e >= s)) {
                            const a = n[1];
                            e < a && (r = 2, s = a);
                            for(let l = r - 2;;){
                                if (s === void 0) return this._cachedIndex = 0, this.copySampleValue_(0);
                                if (r === l) break;
                                if (i = s, s = n[--r - 1], e >= s) break t;
                            }
                            o = r, r = 0;
                            break n;
                        }
                        break e;
                    }
                    for(; r < o;){
                        const a = r + o >>> 1;
                        e < n[a] ? o = a : r = a + 1;
                    }
                    if (i = n[r], s = n[r - 1], s === void 0) return this._cachedIndex = 0, this.copySampleValue_(0);
                    if (i === void 0) return r = n.length, this._cachedIndex = r, this.copySampleValue_(r - 1);
                }
                this._cachedIndex = r, this.intervalChanged_(r, s, i);
            }
            return this.interpolate_(r, s, e, i);
        }
        getSettings_() {
            return this.settings || this.DefaultSettings_;
        }
        copySampleValue_(e) {
            const n = this.resultBuffer, r = this.sampleValues, i = this.valueSize, s = e * i;
            for(let o = 0; o !== i; ++o)n[o] = r[s + o];
            return n;
        }
        interpolate_() {
            throw new Error("call to abstract method");
        }
        intervalChanged_() {}
    }
    class hG extends xw {
        constructor(e, n, r, i){
            super(e, n, r, i), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0, this.DefaultSettings_ = {
                endingStart: kp,
                endingEnd: kp
            };
        }
        intervalChanged_(e, n, r) {
            const i = this.parameterPositions;
            let s = e - 2, o = e + 1, a = i[s], l = i[o];
            if (a === void 0) switch(this.getSettings_().endingStart){
                case Op:
                    s = e, a = 2 * n - r;
                    break;
                case _b:
                    s = i.length - 2, a = n + i[s] - i[s + 1];
                    break;
                default:
                    s = e, a = r;
            }
            if (l === void 0) switch(this.getSettings_().endingEnd){
                case Op:
                    o = e, l = 2 * r - n;
                    break;
                case _b:
                    o = 1, l = r + i[1] - i[0];
                    break;
                default:
                    o = e - 1, l = n;
            }
            const c = (r - n) * .5, u = this.valueSize;
            this._weightPrev = c / (n - a), this._weightNext = c / (l - r), this._offsetPrev = s * u, this._offsetNext = o * u;
        }
        interpolate_(e, n, r, i) {
            const s = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, u = this._offsetPrev, f = this._offsetNext, p = this._weightPrev, g = this._weightNext, x = (r - n) / (i - n), S = x * x, _ = S * x, b = -p * _ + 2 * p * S - p * x, M = (1 + p) * _ + (-1.5 - 2 * p) * S + (-.5 + p) * x + 1, E = (-1 - g) * _ + (1.5 + g) * S + .5 * x, T = g * _ - g * S;
            for(let k = 0; k !== a; ++k)s[k] = b * o[u + k] + M * o[c + k] + E * o[l + k] + T * o[f + k];
            return s;
        }
    }
    class P2 extends xw {
        constructor(e, n, r, i){
            super(e, n, r, i);
        }
        interpolate_(e, n, r, i) {
            const s = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, u = (r - n) / (i - n), f = 1 - u;
            for(let p = 0; p !== a; ++p)s[p] = o[c + p] * f + o[l + p] * u;
            return s;
        }
    }
    class pG extends xw {
        constructor(e, n, r, i){
            super(e, n, r, i);
        }
        interpolate_(e) {
            return this.copySampleValue_(e - 1);
        }
    }
    class dc {
        constructor(e, n, r, i){
            if (e === void 0) throw new Error("THREE.KeyframeTrack: track name is undefined");
            if (n === void 0 || n.length === 0) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
            this.name = e, this.times = Dp(n, this.TimeBufferType), this.values = Dp(r, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation);
        }
        static toJSON(e) {
            const n = e.constructor;
            let r;
            if (n.toJSON !== this.toJSON) r = n.toJSON(e);
            else {
                r = {
                    name: e.name,
                    times: Dp(e.times, Array),
                    values: Dp(e.values, Array)
                };
                const i = e.getInterpolation();
                i !== e.DefaultInterpolation && (r.interpolation = i);
            }
            return r.type = e.ValueTypeName, r;
        }
        InterpolantFactoryMethodDiscrete(e) {
            return new pG(this.times, this.values, this.getValueSize(), e);
        }
        InterpolantFactoryMethodLinear(e) {
            return new P2(this.times, this.values, this.getValueSize(), e);
        }
        InterpolantFactoryMethodSmooth(e) {
            return new hG(this.times, this.values, this.getValueSize(), e);
        }
        setInterpolation(e) {
            let n;
            switch(e){
                case wb:
                    n = this.InterpolantFactoryMethodDiscrete;
                    break;
                case PM:
                    n = this.InterpolantFactoryMethodLinear;
                    break;
                case x1:
                    n = this.InterpolantFactoryMethodSmooth;
                    break;
            }
            if (n === void 0) {
                const r = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                if (this.createInterpolant === void 0) if (e !== this.DefaultInterpolation) this.setInterpolation(this.DefaultInterpolation);
                else throw new Error(r);
                return console.warn("THREE.KeyframeTrack:", r), this;
            }
            return this.createInterpolant = n, this;
        }
        getInterpolation() {
            switch(this.createInterpolant){
                case this.InterpolantFactoryMethodDiscrete:
                    return wb;
                case this.InterpolantFactoryMethodLinear:
                    return PM;
                case this.InterpolantFactoryMethodSmooth:
                    return x1;
            }
        }
        getValueSize() {
            return this.values.length / this.times.length;
        }
        shift(e) {
            if (e !== 0) {
                const n = this.times;
                for(let r = 0, i = n.length; r !== i; ++r)n[r] += e;
            }
            return this;
        }
        scale(e) {
            if (e !== 1) {
                const n = this.times;
                for(let r = 0, i = n.length; r !== i; ++r)n[r] *= e;
            }
            return this;
        }
        trim(e, n) {
            const r = this.times, i = r.length;
            let s = 0, o = i - 1;
            for(; s !== i && r[s] < e;)++s;
            for(; o !== -1 && r[o] > n;)--o;
            if (++o, s !== 0 || o !== i) {
                s >= o && (o = Math.max(o, 1), s = o - 1);
                const a = this.getValueSize();
                this.times = r.slice(s, o), this.values = this.values.slice(s * a, o * a);
            }
            return this;
        }
        validate() {
            let e = !0;
            const n = this.getValueSize();
            n - Math.floor(n) !== 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
            const r = this.times, i = this.values, s = r.length;
            s === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
            let o = null;
            for(let a = 0; a !== s; a++){
                const l = r[a];
                if (typeof l == "number" && isNaN(l)) {
                    console.error("THREE.KeyframeTrack: Time is not a valid number.", this, a, l), e = !1;
                    break;
                }
                if (o !== null && o > l) {
                    console.error("THREE.KeyframeTrack: Out of order keys.", this, a, l, o), e = !1;
                    break;
                }
                o = l;
            }
            if (i !== void 0 && dG(i)) for(let a = 0, l = i.length; a !== l; ++a){
                const c = i[a];
                if (isNaN(c)) {
                    console.error("THREE.KeyframeTrack: Value is not a valid number.", this, a, c), e = !1;
                    break;
                }
            }
            return e;
        }
        optimize() {
            const e = this.times.slice(), n = this.values.slice(), r = this.getValueSize(), i = this.getInterpolation() === x1, s = e.length - 1;
            let o = 1;
            for(let a = 1; a < s; ++a){
                let l = !1;
                const c = e[a], u = e[a + 1];
                if (c !== u && (a !== 1 || c !== e[0])) if (i) l = !0;
                else {
                    const f = a * r, p = f - r, g = f + r;
                    for(let x = 0; x !== r; ++x){
                        const S = n[f + x];
                        if (S !== n[p + x] || S !== n[g + x]) {
                            l = !0;
                            break;
                        }
                    }
                }
                if (l) {
                    if (a !== o) {
                        e[o] = e[a];
                        const f = a * r, p = o * r;
                        for(let g = 0; g !== r; ++g)n[p + g] = n[f + g];
                    }
                    ++o;
                }
            }
            if (s > 0) {
                e[o] = e[s];
                for(let a = s * r, l = o * r, c = 0; c !== r; ++c)n[l + c] = n[a + c];
                ++o;
            }
            return o !== e.length ? (this.times = e.slice(0, o), this.values = n.slice(0, o * r)) : (this.times = e, this.values = n), this;
        }
        clone() {
            const e = this.times.slice(), n = this.values.slice(), r = this.constructor, i = new r(this.name, e, n);
            return i.createInterpolant = this.createInterpolant, i;
        }
    }
    dc.prototype.TimeBufferType = Float32Array;
    dc.prototype.ValueBufferType = Float32Array;
    dc.prototype.DefaultInterpolation = PM;
    class xm extends dc {
        constructor(e, n, r){
            super(e, n, r);
        }
    }
    xm.prototype.ValueTypeName = "bool";
    xm.prototype.ValueBufferType = Array;
    xm.prototype.DefaultInterpolation = wb;
    xm.prototype.InterpolantFactoryMethodLinear = void 0;
    xm.prototype.InterpolantFactoryMethodSmooth = void 0;
    class k2 extends dc {
    }
    k2.prototype.ValueTypeName = "color";
    class Nb extends dc {
    }
    Nb.prototype.ValueTypeName = "number";
    class mG extends xw {
        constructor(e, n, r, i){
            super(e, n, r, i);
        }
        interpolate_(e, n, r, i) {
            const s = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = (r - n) / (i - n);
            let c = e * a;
            for(let u = c + a; c !== u; c += 4)Xs.slerpFlat(s, 0, o, c - a, o, c, l);
            return s;
        }
    }
    class bw extends dc {
        InterpolantFactoryMethodLinear(e) {
            return new mG(this.times, this.values, this.getValueSize(), e);
        }
    }
    bw.prototype.ValueTypeName = "quaternion";
    bw.prototype.InterpolantFactoryMethodSmooth = void 0;
    class bm extends dc {
        constructor(e, n, r){
            super(e, n, r);
        }
    }
    bm.prototype.ValueTypeName = "string";
    bm.prototype.ValueBufferType = Array;
    bm.prototype.DefaultInterpolation = wb;
    bm.prototype.InterpolantFactoryMethodLinear = void 0;
    bm.prototype.InterpolantFactoryMethodSmooth = void 0;
    class Pb extends dc {
    }
    Pb.prototype.ValueTypeName = "vector";
    class kb {
        constructor(e = "", n = -1, r = [], i = $T){
            this.name = e, this.tracks = r, this.duration = n, this.blendMode = i, this.uuid = ka(), this.duration < 0 && this.resetDuration();
        }
        static parse(e) {
            const n = [], r = e.tracks, i = 1 / (e.fps || 1);
            for(let o = 0, a = r.length; o !== a; ++o)n.push(_ye(r[o]).scale(i));
            const s = new this(e.name, e.duration, n, e.blendMode);
            return s.uuid = e.uuid, s;
        }
        static toJSON(e) {
            const n = [], r = e.tracks, i = {
                name: e.name,
                duration: e.duration,
                tracks: n,
                uuid: e.uuid,
                blendMode: e.blendMode
            };
            for(let s = 0, o = r.length; s !== o; ++s)n.push(dc.toJSON(r[s]));
            return i;
        }
        static CreateFromMorphTargetSequence(e, n, r, i) {
            const s = n.length, o = [];
            for(let a = 0; a < s; a++){
                let l = [], c = [];
                l.push((a + s - 1) % s, a, (a + 1) % s), c.push(0, 1, 0);
                const u = fG(l);
                l = yk(l, 1, u), c = yk(c, 1, u), !i && l[0] === 0 && (l.push(s), c.push(c[0])), o.push(new Nb(".morphTargetInfluences[" + n[a].name + "]", l, c).scale(1 / r));
            }
            return new this(e, -1, o);
        }
        static findByName(e, n) {
            let r = e;
            if (!Array.isArray(e)) {
                const i = e;
                r = i.geometry && i.geometry.animations || i.animations;
            }
            for(let i = 0; i < r.length; i++)if (r[i].name === n) return r[i];
            return null;
        }
        static CreateClipsFromMorphTargetSequences(e, n, r) {
            const i = {}, s = /^([\w-]*?)([\d]+)$/;
            for(let a = 0, l = e.length; a < l; a++){
                const c = e[a], u = c.name.match(s);
                if (u && u.length > 1) {
                    const f = u[1];
                    let p = i[f];
                    p || (i[f] = p = []), p.push(c);
                }
            }
            const o = [];
            for(const a in i)o.push(this.CreateFromMorphTargetSequence(a, i[a], n, r));
            return o;
        }
        static parseAnimation(e, n) {
            if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
            const r = function(f, p, g, x, S) {
                if (g.length !== 0) {
                    const _ = [], b = [];
                    N2(g, _, b, x), _.length !== 0 && S.push(new f(p, _, b));
                }
            }, i = [], s = e.name || "default", o = e.fps || 30, a = e.blendMode;
            let l = e.length || -1;
            const c = e.hierarchy || [];
            for(let f = 0; f < c.length; f++){
                const p = c[f].keys;
                if (!(!p || p.length === 0)) if (p[0].morphTargets) {
                    const g = {};
                    let x;
                    for(x = 0; x < p.length; x++)if (p[x].morphTargets) for(let S = 0; S < p[x].morphTargets.length; S++)g[p[x].morphTargets[S]] = -1;
                    for(const S in g){
                        const _ = [], b = [];
                        for(let M = 0; M !== p[x].morphTargets.length; ++M){
                            const E = p[x];
                            _.push(E.time), b.push(E.morphTarget === S ? 1 : 0);
                        }
                        i.push(new Nb(".morphTargetInfluence[" + S + "]", _, b));
                    }
                    l = g.length * o;
                } else {
                    const g = ".bones[" + n[f].name + "]";
                    r(Pb, g + ".position", p, "pos", i), r(bw, g + ".quaternion", p, "rot", i), r(Pb, g + ".scale", p, "scl", i);
                }
            }
            return i.length === 0 ? null : new this(s, l, i, a);
        }
        resetDuration() {
            const e = this.tracks;
            let n = 0;
            for(let r = 0, i = e.length; r !== i; ++r){
                const s = this.tracks[r];
                n = Math.max(n, s.times[s.times.length - 1]);
            }
            return this.duration = n, this;
        }
        trim() {
            for(let e = 0; e < this.tracks.length; e++)this.tracks[e].trim(0, this.duration);
            return this;
        }
        validate() {
            let e = !0;
            for(let n = 0; n < this.tracks.length; n++)e = e && this.tracks[n].validate();
            return e;
        }
        optimize() {
            for(let e = 0; e < this.tracks.length; e++)this.tracks[e].optimize();
            return this;
        }
        clone() {
            const e = [];
            for(let n = 0; n < this.tracks.length; n++)e.push(this.tracks[n].clone());
            return new this.constructor(this.name, this.duration, e, this.blendMode);
        }
        toJSON() {
            return this.constructor.toJSON(this);
        }
    }
    function wye(t) {
        switch(t.toLowerCase()){
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
                return Nb;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
                return Pb;
            case "color":
                return k2;
            case "quaternion":
                return bw;
            case "bool":
            case "boolean":
                return xm;
            case "string":
                return bm;
        }
        throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + t);
    }
    function _ye(t) {
        if (t.type === void 0) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
        const e = wye(t.type);
        if (t.times === void 0) {
            const n = [], r = [];
            N2(t.keys, n, r, "value"), t.times = n, t.values = r;
        }
        return e.parse !== void 0 ? e.parse(t) : new e(t.name, t.times, t.values, t.interpolation);
    }
    const ed = {
        enabled: !1,
        files: {},
        add: function(t, e) {
            this.enabled !== !1 && (this.files[t] = e);
        },
        get: function(t) {
            if (this.enabled !== !1) return this.files[t];
        },
        remove: function(t) {
            delete this.files[t];
        },
        clear: function() {
            this.files = {};
        }
    };
    class O2 {
        constructor(e, n, r){
            const i = this;
            let s = !1, o = 0, a = 0, l;
            const c = [];
            this.onStart = void 0, this.onLoad = e, this.onProgress = n, this.onError = r, this.itemStart = function(u) {
                a++, s === !1 && i.onStart !== void 0 && i.onStart(u, o, a), s = !0;
            }, this.itemEnd = function(u) {
                o++, i.onProgress !== void 0 && i.onProgress(u, o, a), o === a && (s = !1, i.onLoad !== void 0 && i.onLoad());
            }, this.itemError = function(u) {
                i.onError !== void 0 && i.onError(u);
            }, this.resolveURL = function(u) {
                return l ? l(u) : u;
            }, this.setURLModifier = function(u) {
                return l = u, this;
            }, this.addHandler = function(u, f) {
                return c.push(u, f), this;
            }, this.removeHandler = function(u) {
                const f = c.indexOf(u);
                return f !== -1 && c.splice(f, 2), this;
            }, this.getHandler = function(u) {
                for(let f = 0, p = c.length; f < p; f += 2){
                    const g = c[f], x = c[f + 1];
                    if (g.global && (g.lastIndex = 0), g.test(u)) return x;
                }
                return null;
            };
        }
    }
    const gG = new O2;
    class ca {
        constructor(e){
            this.manager = e !== void 0 ? e : gG, this.crossOrigin = "anonymous", this.withCredentials = !1, this.path = "", this.resourcePath = "", this.requestHeader = {};
        }
        load() {}
        loadAsync(e, n) {
            const r = this;
            return new Promise(function(i, s) {
                r.load(e, i, n, s);
            });
        }
        parse() {}
        setCrossOrigin(e) {
            return this.crossOrigin = e, this;
        }
        setWithCredentials(e) {
            return this.withCredentials = e, this;
        }
        setPath(e) {
            return this.path = e, this;
        }
        setResourcePath(e) {
            return this.resourcePath = e, this;
        }
        setRequestHeader(e) {
            return this.requestHeader = e, this;
        }
    }
    ca.DEFAULT_MATERIAL_NAME = "__DEFAULT";
    const qu = {};
    class Sye extends Error {
        constructor(e, n){
            super(e), this.response = n;
        }
    }
    class vd extends ca {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
            const s = ed.get(e);
            if (s !== void 0) return this.manager.itemStart(e), setTimeout(()=>{
                n && n(s), this.manager.itemEnd(e);
            }, 0), s;
            if (qu[e] !== void 0) {
                qu[e].push({
                    onLoad: n,
                    onProgress: r,
                    onError: i
                });
                return;
            }
            qu[e] = [], qu[e].push({
                onLoad: n,
                onProgress: r,
                onError: i
            });
            const o = new Request(e, {
                headers: new Headers(this.requestHeader),
                credentials: this.withCredentials ? "include" : "same-origin"
            }), a = this.mimeType, l = this.responseType;
            fetch(o).then((c)=>{
                if (c.status === 200 || c.status === 0) {
                    if (c.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received."), typeof ReadableStream > "u" || c.body === void 0 || c.body.getReader === void 0) return c;
                    const u = qu[e], f = c.body.getReader(), p = c.headers.get("X-File-Size") || c.headers.get("Content-Length"), g = p ? parseInt(p) : 0, x = g !== 0;
                    let S = 0;
                    const _ = new ReadableStream({
                        start (b) {
                            M();
                            function M() {
                                f.read().then(({ done: E, value: T })=>{
                                    if (E) b.close();
                                    else {
                                        S += T.byteLength;
                                        const k = new ProgressEvent("progress", {
                                            lengthComputable: x,
                                            loaded: S,
                                            total: g
                                        });
                                        for(let N = 0, D = u.length; N < D; N++){
                                            const L = u[N];
                                            L.onProgress && L.onProgress(k);
                                        }
                                        b.enqueue(T), M();
                                    }
                                }, (E)=>{
                                    b.error(E);
                                });
                            }
                        }
                    });
                    return new Response(_);
                } else throw new Sye(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`, c);
            }).then((c)=>{
                switch(l){
                    case "arraybuffer":
                        return c.arrayBuffer();
                    case "blob":
                        return c.blob();
                    case "document":
                        return c.text().then((u)=>new DOMParser().parseFromString(u, a));
                    case "json":
                        return c.json();
                    default:
                        if (a === void 0) return c.text();
                        {
                            const f = /charset="?([^;"\s]*)"?/i.exec(a), p = f && f[1] ? f[1].toLowerCase() : void 0, g = new TextDecoder(p);
                            return c.arrayBuffer().then((x)=>g.decode(x));
                        }
                }
            }).then((c)=>{
                ed.add(e, c);
                const u = qu[e];
                delete qu[e];
                for(let f = 0, p = u.length; f < p; f++){
                    const g = u[f];
                    g.onLoad && g.onLoad(c);
                }
            }).catch((c)=>{
                const u = qu[e];
                if (u === void 0) throw this.manager.itemError(e), c;
                delete qu[e];
                for(let f = 0, p = u.length; f < p; f++){
                    const g = u[f];
                    g.onError && g.onError(c);
                }
                this.manager.itemError(e);
            }).finally(()=>{
                this.manager.itemEnd(e);
            }), this.manager.itemStart(e);
        }
        setResponseType(e) {
            return this.responseType = e, this;
        }
        setMimeType(e) {
            return this.mimeType = e, this;
        }
    }
    class Eye extends ca {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = this, o = new vd(this.manager);
            o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(a) {
                try {
                    n(s.parse(JSON.parse(a)));
                } catch (l) {
                    i ? i(l) : console.error(l), s.manager.itemError(e);
                }
            }, r, i);
        }
        parse(e) {
            const n = [];
            for(let r = 0; r < e.length; r++){
                const i = kb.parse(e[r]);
                n.push(i);
            }
            return n;
        }
    }
    class Mye extends ca {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = this, o = [], a = new QT, l = new vd(this.manager);
            l.setPath(this.path), l.setResponseType("arraybuffer"), l.setRequestHeader(this.requestHeader), l.setWithCredentials(s.withCredentials);
            let c = 0;
            function u(f) {
                l.load(e[f], function(p) {
                    const g = s.parse(p, !0);
                    o[f] = {
                        width: g.width,
                        height: g.height,
                        format: g.format,
                        mipmaps: g.mipmaps
                    }, c += 1, c === 6 && (g.mipmapCount === 1 && (a.minFilter = es), a.image = o, a.format = g.format, a.needsUpdate = !0, n && n(a));
                }, r, i);
            }
            if (Array.isArray(e)) for(let f = 0, p = e.length; f < p; ++f)u(f);
            else l.load(e, function(f) {
                const p = s.parse(f, !0);
                if (p.isCubemap) {
                    const g = p.mipmaps.length / p.mipmapCount;
                    for(let x = 0; x < g; x++){
                        o[x] = {
                            mipmaps: []
                        };
                        for(let S = 0; S < p.mipmapCount; S++)o[x].mipmaps.push(p.mipmaps[x * p.mipmapCount + S]), o[x].format = p.format, o[x].width = p.width, o[x].height = p.height;
                    }
                    a.image = o;
                } else a.image.width = p.width, a.image.height = p.height, a.mipmaps = p.mipmaps;
                p.mipmapCount === 1 && (a.minFilter = es), a.format = p.format, a.needsUpdate = !0, n && n(a);
            }, r, i);
            return a;
        }
    }
    class Ob extends ca {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
            const s = this, o = ed.get(e);
            if (o !== void 0) return s.manager.itemStart(e), setTimeout(function() {
                n && n(o), s.manager.itemEnd(e);
            }, 0), o;
            const a = Tb("img");
            function l() {
                u(), ed.add(e, this), n && n(this), s.manager.itemEnd(e);
            }
            function c(f) {
                u(), i && i(f), s.manager.itemError(e), s.manager.itemEnd(e);
            }
            function u() {
                a.removeEventListener("load", l, !1), a.removeEventListener("error", c, !1);
            }
            return a.addEventListener("load", l, !1), a.addEventListener("error", c, !1), e.slice(0, 5) !== "data:" && this.crossOrigin !== void 0 && (a.crossOrigin = this.crossOrigin), s.manager.itemStart(e), a.src = e, a;
        }
    }
    class Tye extends ca {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = new pw;
            s.colorSpace = Jo;
            const o = new Ob(this.manager);
            o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
            let a = 0;
            function l(c) {
                o.load(e[c], function(u) {
                    s.images[c] = u, a++, a === 6 && (s.needsUpdate = !0, n && n(s));
                }, void 0, i);
            }
            for(let c = 0; c < e.length; ++c)l(c);
            return s;
        }
    }
    class Cye extends ca {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = this, o = new tc, a = new vd(this.manager);
            return a.setResponseType("arraybuffer"), a.setRequestHeader(this.requestHeader), a.setPath(this.path), a.setWithCredentials(s.withCredentials), a.load(e, function(l) {
                let c;
                try {
                    c = s.parse(l);
                } catch (u) {
                    if (i !== void 0) i(u);
                    else {
                        console.error(u);
                        return;
                    }
                }
                c.image !== void 0 ? o.image = c.image : c.data !== void 0 && (o.image.width = c.width, o.image.height = c.height, o.image.data = c.data), o.wrapS = c.wrapS !== void 0 ? c.wrapS : ll, o.wrapT = c.wrapT !== void 0 ? c.wrapT : ll, o.magFilter = c.magFilter !== void 0 ? c.magFilter : es, o.minFilter = c.minFilter !== void 0 ? c.minFilter : es, o.anisotropy = c.anisotropy !== void 0 ? c.anisotropy : 1, c.colorSpace !== void 0 && (o.colorSpace = c.colorSpace), c.flipY !== void 0 && (o.flipY = c.flipY), c.format !== void 0 && (o.format = c.format), c.type !== void 0 && (o.type = c.type), c.mipmaps !== void 0 && (o.mipmaps = c.mipmaps, o.minFilter = Fc), c.mipmapCount === 1 && (o.minFilter = es), c.generateMipmaps !== void 0 && (o.generateMipmaps = c.generateMipmaps), o.needsUpdate = !0, n && n(o, c);
            }, r, i), o;
        }
    }
    class Iye extends ca {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = new ui, o = new Ob(this.manager);
            return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(e, function(a) {
                s.image = a, s.needsUpdate = !0, n !== void 0 && n(s);
            }, r, i), s;
        }
    }
    class ah extends ir {
        constructor(e, n = 1){
            super(), this.isLight = !0, this.type = "Light", this.color = new Ft(e), this.intensity = n;
        }
        dispose() {}
        copy(e, n) {
            return super.copy(e, n), this.color.copy(e.color), this.intensity = e.intensity, this;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return n.object.color = this.color.getHex(), n.object.intensity = this.intensity, this.groundColor !== void 0 && (n.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (n.object.distance = this.distance), this.angle !== void 0 && (n.object.angle = this.angle), this.decay !== void 0 && (n.object.decay = this.decay), this.penumbra !== void 0 && (n.object.penumbra = this.penumbra), this.shadow !== void 0 && (n.object.shadow = this.shadow.toJSON()), this.target !== void 0 && (n.object.target = this.target.uuid), n;
        }
    }
    class yG extends ah {
        constructor(e, n, r){
            super(e, r), this.isHemisphereLight = !0, this.type = "HemisphereLight", this.position.copy(ir.DEFAULT_UP), this.updateMatrix(), this.groundColor = new Ft(n);
        }
        copy(e, n) {
            return super.copy(e, n), this.groundColor.copy(e.groundColor), this;
        }
    }
    const mN = new fn, tz = new ye, nz = new ye;
    class L2 {
        constructor(e){
            this.camera = e, this.intensity = 1, this.bias = 0, this.normalBias = 0, this.radius = 1, this.blurSamples = 8, this.mapSize = new ot(512, 512), this.map = null, this.mapPass = null, this.matrix = new fn, this.autoUpdate = !0, this.needsUpdate = !1, this._frustum = new mw, this._frameExtents = new ot(1, 1), this._viewportCount = 1, this._viewports = [
                new rr(0, 0, 1, 1)
            ];
        }
        getViewportCount() {
            return this._viewportCount;
        }
        getFrustum() {
            return this._frustum;
        }
        updateMatrices(e) {
            const n = this.camera, r = this.matrix;
            tz.setFromMatrixPosition(e.matrixWorld), n.position.copy(tz), nz.setFromMatrixPosition(e.target.matrixWorld), n.lookAt(nz), n.updateMatrixWorld(), mN.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(mN), r.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), r.multiply(mN);
        }
        getViewport(e) {
            return this._viewports[e];
        }
        getFrameExtents() {
            return this._frameExtents;
        }
        dispose() {
            this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
        }
        copy(e) {
            return this.camera = e.camera.clone(), this.intensity = e.intensity, this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;
        }
        clone() {
            return new this.constructor().copy(this);
        }
        toJSON() {
            const e = {};
            return this.intensity !== 1 && (e.intensity = this.intensity), this.bias !== 0 && (e.bias = this.bias), this.normalBias !== 0 && (e.normalBias = this.normalBias), this.radius !== 1 && (e.radius = this.radius), (this.mapSize.x !== 512 || this.mapSize.y !== 512) && (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e;
        }
    }
    class Rye extends L2 {
        constructor(){
            super(new Ei(50, 1, .5, 500)), this.isSpotLightShadow = !0, this.focus = 1;
        }
        updateMatrices(e) {
            const n = this.camera, r = Qy * 2 * e.angle * this.focus, i = this.mapSize.width / this.mapSize.height, s = e.distance || n.far;
            (r !== n.fov || i !== n.aspect || s !== n.far) && (n.fov = r, n.aspect = i, n.far = s, n.updateProjectionMatrix()), super.updateMatrices(e);
        }
        copy(e) {
            return super.copy(e), this.focus = e.focus, this;
        }
    }
    class vG extends ah {
        constructor(e, n, r = 0, i = Math.PI / 3, s = 0, o = 2){
            super(e, n), this.isSpotLight = !0, this.type = "SpotLight", this.position.copy(ir.DEFAULT_UP), this.updateMatrix(), this.target = new ir, this.distance = r, this.angle = i, this.penumbra = s, this.decay = o, this.map = null, this.shadow = new Rye;
        }
        get power() {
            return this.intensity * Math.PI;
        }
        set power(e) {
            this.intensity = e / Math.PI;
        }
        dispose() {
            this.shadow.dispose();
        }
        copy(e, n) {
            return super.copy(e, n), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
        }
    }
    const rz = new fn, Dx = new ye, gN = new ye;
    class Aye extends L2 {
        constructor(){
            super(new Ei(90, 1, .5, 500)), this.isPointLightShadow = !0, this._frameExtents = new ot(4, 2), this._viewportCount = 6, this._viewports = [
                new rr(2, 1, 1, 1),
                new rr(0, 1, 1, 1),
                new rr(3, 1, 1, 1),
                new rr(1, 1, 1, 1),
                new rr(3, 0, 1, 1),
                new rr(1, 0, 1, 1)
            ], this._cubeDirections = [
                new ye(1, 0, 0),
                new ye(-1, 0, 0),
                new ye(0, 0, 1),
                new ye(0, 0, -1),
                new ye(0, 1, 0),
                new ye(0, -1, 0)
            ], this._cubeUps = [
                new ye(0, 1, 0),
                new ye(0, 1, 0),
                new ye(0, 1, 0),
                new ye(0, 1, 0),
                new ye(0, 0, 1),
                new ye(0, 0, -1)
            ];
        }
        updateMatrices(e, n = 0) {
            const r = this.camera, i = this.matrix, s = e.distance || r.far;
            s !== r.far && (r.far = s, r.updateProjectionMatrix()), Dx.setFromMatrixPosition(e.matrixWorld), r.position.copy(Dx), gN.copy(r.position), gN.add(this._cubeDirections[n]), r.up.copy(this._cubeUps[n]), r.lookAt(gN), r.updateMatrixWorld(), i.makeTranslation(-Dx.x, -Dx.y, -Dx.z), rz.multiplyMatrices(r.projectionMatrix, r.matrixWorldInverse), this._frustum.setFromProjectionMatrix(rz);
        }
    }
    class xG extends ah {
        constructor(e, n, r = 0, i = 2){
            super(e, n), this.isPointLight = !0, this.type = "PointLight", this.distance = r, this.decay = i, this.shadow = new Aye;
        }
        get power() {
            return this.intensity * 4 * Math.PI;
        }
        set power(e) {
            this.intensity = e / (4 * Math.PI);
        }
        dispose() {
            this.shadow.dispose();
        }
        copy(e, n) {
            return super.copy(e, n), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this;
        }
    }
    class ad extends hw {
        constructor(e = -1, n = 1, r = 1, i = -1, s = .1, o = 2e3){
            super(), this.isOrthographicCamera = !0, this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = e, this.right = n, this.top = r, this.bottom = i, this.near = s, this.far = o, this.updateProjectionMatrix();
        }
        copy(e, n) {
            return super.copy(e, n), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = e.view === null ? null : Object.assign({}, e.view), this;
        }
        setViewOffset(e, n, r, i, s, o) {
            this.view === null && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = n, this.view.offsetX = r, this.view.offsetY = i, this.view.width = s, this.view.height = o, this.updateProjectionMatrix();
        }
        clearViewOffset() {
            this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
        }
        updateProjectionMatrix() {
            const e = (this.right - this.left) / (2 * this.zoom), n = (this.top - this.bottom) / (2 * this.zoom), r = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2;
            let s = r - e, o = r + e, a = i + n, l = i - n;
            if (this.view !== null && this.view.enabled) {
                const c = (this.right - this.left) / this.view.fullWidth / this.zoom, u = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
                s += c * this.view.offsetX, o = s + c * this.view.width, a -= u * this.view.offsetY, l = a - u * this.view.height;
            }
            this.projectionMatrix.makeOrthographic(s, o, a, l, this.near, this.far, this.coordinateSystem), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return n.object.zoom = this.zoom, n.object.left = this.left, n.object.right = this.right, n.object.top = this.top, n.object.bottom = this.bottom, n.object.near = this.near, n.object.far = this.far, this.view !== null && (n.object.view = Object.assign({}, this.view)), n;
        }
    }
    class Nye extends L2 {
        constructor(){
            super(new ad(-5, 5, 5, -5, .5, 500)), this.isDirectionalLightShadow = !0;
        }
    }
    class bG extends ah {
        constructor(e, n){
            super(e, n), this.isDirectionalLight = !0, this.type = "DirectionalLight", this.position.copy(ir.DEFAULT_UP), this.updateMatrix(), this.target = new ir, this.shadow = new Nye;
        }
        dispose() {
            this.shadow.dispose();
        }
        copy(e) {
            return super.copy(e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
        }
    }
    class wG extends ah {
        constructor(e, n){
            super(e, n), this.isAmbientLight = !0, this.type = "AmbientLight";
        }
    }
    class _G extends ah {
        constructor(e, n, r = 10, i = 10){
            super(e, n), this.isRectAreaLight = !0, this.type = "RectAreaLight", this.width = r, this.height = i;
        }
        get power() {
            return this.intensity * this.width * this.height * Math.PI;
        }
        set power(e) {
            this.intensity = e / (this.width * this.height * Math.PI);
        }
        copy(e) {
            return super.copy(e), this.width = e.width, this.height = e.height, this;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return n.object.width = this.width, n.object.height = this.height, n;
        }
    }
    class SG {
        constructor(){
            this.isSphericalHarmonics3 = !0, this.coefficients = [];
            for(let e = 0; e < 9; e++)this.coefficients.push(new ye);
        }
        set(e) {
            for(let n = 0; n < 9; n++)this.coefficients[n].copy(e[n]);
            return this;
        }
        zero() {
            for(let e = 0; e < 9; e++)this.coefficients[e].set(0, 0, 0);
            return this;
        }
        getAt(e, n) {
            const r = e.x, i = e.y, s = e.z, o = this.coefficients;
            return n.copy(o[0]).multiplyScalar(.282095), n.addScaledVector(o[1], .488603 * i), n.addScaledVector(o[2], .488603 * s), n.addScaledVector(o[3], .488603 * r), n.addScaledVector(o[4], 1.092548 * (r * i)), n.addScaledVector(o[5], 1.092548 * (i * s)), n.addScaledVector(o[6], .315392 * (3 * s * s - 1)), n.addScaledVector(o[7], 1.092548 * (r * s)), n.addScaledVector(o[8], .546274 * (r * r - i * i)), n;
        }
        getIrradianceAt(e, n) {
            const r = e.x, i = e.y, s = e.z, o = this.coefficients;
            return n.copy(o[0]).multiplyScalar(.886227), n.addScaledVector(o[1], 2 * .511664 * i), n.addScaledVector(o[2], 2 * .511664 * s), n.addScaledVector(o[3], 2 * .511664 * r), n.addScaledVector(o[4], 2 * .429043 * r * i), n.addScaledVector(o[5], 2 * .429043 * i * s), n.addScaledVector(o[6], .743125 * s * s - .247708), n.addScaledVector(o[7], 2 * .429043 * r * s), n.addScaledVector(o[8], .429043 * (r * r - i * i)), n;
        }
        add(e) {
            for(let n = 0; n < 9; n++)this.coefficients[n].add(e.coefficients[n]);
            return this;
        }
        addScaledSH(e, n) {
            for(let r = 0; r < 9; r++)this.coefficients[r].addScaledVector(e.coefficients[r], n);
            return this;
        }
        scale(e) {
            for(let n = 0; n < 9; n++)this.coefficients[n].multiplyScalar(e);
            return this;
        }
        lerp(e, n) {
            for(let r = 0; r < 9; r++)this.coefficients[r].lerp(e.coefficients[r], n);
            return this;
        }
        equals(e) {
            for(let n = 0; n < 9; n++)if (!this.coefficients[n].equals(e.coefficients[n])) return !1;
            return !0;
        }
        copy(e) {
            return this.set(e.coefficients);
        }
        clone() {
            return new this.constructor().copy(this);
        }
        fromArray(e, n = 0) {
            const r = this.coefficients;
            for(let i = 0; i < 9; i++)r[i].fromArray(e, n + i * 3);
            return this;
        }
        toArray(e = [], n = 0) {
            const r = this.coefficients;
            for(let i = 0; i < 9; i++)r[i].toArray(e, n + i * 3);
            return e;
        }
        static getBasisAt(e, n) {
            const r = e.x, i = e.y, s = e.z;
            n[0] = .282095, n[1] = .488603 * i, n[2] = .488603 * s, n[3] = .488603 * r, n[4] = 1.092548 * r * i, n[5] = 1.092548 * i * s, n[6] = .315392 * (3 * s * s - 1), n[7] = 1.092548 * r * s, n[8] = .546274 * (r * r - i * i);
        }
    }
    class EG extends ah {
        constructor(e = new SG, n = 1){
            super(void 0, n), this.isLightProbe = !0, this.sh = e;
        }
        copy(e) {
            return super.copy(e), this.sh.copy(e.sh), this;
        }
        fromJSON(e) {
            return this.intensity = e.intensity, this.sh.fromArray(e.sh), this;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return n.object.sh = this.sh.toArray(), n;
        }
    }
    class pC extends ca {
        constructor(e){
            super(e), this.textures = {};
        }
        load(e, n, r, i) {
            const s = this, o = new vd(s.manager);
            o.setPath(s.path), o.setRequestHeader(s.requestHeader), o.setWithCredentials(s.withCredentials), o.load(e, function(a) {
                try {
                    n(s.parse(JSON.parse(a)));
                } catch (l) {
                    i ? i(l) : console.error(l), s.manager.itemError(e);
                }
            }, r, i);
        }
        parse(e) {
            const n = this.textures;
            function r(s) {
                return n[s] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", s), n[s];
            }
            const i = this.createMaterialFromType(e.type);
            if (e.uuid !== void 0 && (i.uuid = e.uuid), e.name !== void 0 && (i.name = e.name), e.color !== void 0 && i.color !== void 0 && i.color.setHex(e.color), e.roughness !== void 0 && (i.roughness = e.roughness), e.metalness !== void 0 && (i.metalness = e.metalness), e.sheen !== void 0 && (i.sheen = e.sheen), e.sheenColor !== void 0 && (i.sheenColor = new Ft().setHex(e.sheenColor)), e.sheenRoughness !== void 0 && (i.sheenRoughness = e.sheenRoughness), e.emissive !== void 0 && i.emissive !== void 0 && i.emissive.setHex(e.emissive), e.specular !== void 0 && i.specular !== void 0 && i.specular.setHex(e.specular), e.specularIntensity !== void 0 && (i.specularIntensity = e.specularIntensity), e.specularColor !== void 0 && i.specularColor !== void 0 && i.specularColor.setHex(e.specularColor), e.shininess !== void 0 && (i.shininess = e.shininess), e.clearcoat !== void 0 && (i.clearcoat = e.clearcoat), e.clearcoatRoughness !== void 0 && (i.clearcoatRoughness = e.clearcoatRoughness), e.dispersion !== void 0 && (i.dispersion = e.dispersion), e.iridescence !== void 0 && (i.iridescence = e.iridescence), e.iridescenceIOR !== void 0 && (i.iridescenceIOR = e.iridescenceIOR), e.iridescenceThicknessRange !== void 0 && (i.iridescenceThicknessRange = e.iridescenceThicknessRange), e.transmission !== void 0 && (i.transmission = e.transmission), e.thickness !== void 0 && (i.thickness = e.thickness), e.attenuationDistance !== void 0 && (i.attenuationDistance = e.attenuationDistance), e.attenuationColor !== void 0 && i.attenuationColor !== void 0 && i.attenuationColor.setHex(e.attenuationColor), e.anisotropy !== void 0 && (i.anisotropy = e.anisotropy), e.anisotropyRotation !== void 0 && (i.anisotropyRotation = e.anisotropyRotation), e.fog !== void 0 && (i.fog = e.fog), e.flatShading !== void 0 && (i.flatShading = e.flatShading), e.blending !== void 0 && (i.blending = e.blending), e.combine !== void 0 && (i.combine = e.combine), e.side !== void 0 && (i.side = e.side), e.shadowSide !== void 0 && (i.shadowSide = e.shadowSide), e.opacity !== void 0 && (i.opacity = e.opacity), e.transparent !== void 0 && (i.transparent = e.transparent), e.alphaTest !== void 0 && (i.alphaTest = e.alphaTest), e.alphaHash !== void 0 && (i.alphaHash = e.alphaHash), e.depthFunc !== void 0 && (i.depthFunc = e.depthFunc), e.depthTest !== void 0 && (i.depthTest = e.depthTest), e.depthWrite !== void 0 && (i.depthWrite = e.depthWrite), e.colorWrite !== void 0 && (i.colorWrite = e.colorWrite), e.blendSrc !== void 0 && (i.blendSrc = e.blendSrc), e.blendDst !== void 0 && (i.blendDst = e.blendDst), e.blendEquation !== void 0 && (i.blendEquation = e.blendEquation), e.blendSrcAlpha !== void 0 && (i.blendSrcAlpha = e.blendSrcAlpha), e.blendDstAlpha !== void 0 && (i.blendDstAlpha = e.blendDstAlpha), e.blendEquationAlpha !== void 0 && (i.blendEquationAlpha = e.blendEquationAlpha), e.blendColor !== void 0 && i.blendColor !== void 0 && i.blendColor.setHex(e.blendColor), e.blendAlpha !== void 0 && (i.blendAlpha = e.blendAlpha), e.stencilWriteMask !== void 0 && (i.stencilWriteMask = e.stencilWriteMask), e.stencilFunc !== void 0 && (i.stencilFunc = e.stencilFunc), e.stencilRef !== void 0 && (i.stencilRef = e.stencilRef), e.stencilFuncMask !== void 0 && (i.stencilFuncMask = e.stencilFuncMask), e.stencilFail !== void 0 && (i.stencilFail = e.stencilFail), e.stencilZFail !== void 0 && (i.stencilZFail = e.stencilZFail), e.stencilZPass !== void 0 && (i.stencilZPass = e.stencilZPass), e.stencilWrite !== void 0 && (i.stencilWrite = e.stencilWrite), e.wireframe !== void 0 && (i.wireframe = e.wireframe), e.wireframeLinewidth !== void 0 && (i.wireframeLinewidth = e.wireframeLinewidth), e.wireframeLinecap !== void 0 && (i.wireframeLinecap = e.wireframeLinecap), e.wireframeLinejoin !== void 0 && (i.wireframeLinejoin = e.wireframeLinejoin), e.rotation !== void 0 && (i.rotation = e.rotation), e.linewidth !== void 0 && (i.linewidth = e.linewidth), e.dashSize !== void 0 && (i.dashSize = e.dashSize), e.gapSize !== void 0 && (i.gapSize = e.gapSize), e.scale !== void 0 && (i.scale = e.scale), e.polygonOffset !== void 0 && (i.polygonOffset = e.polygonOffset), e.polygonOffsetFactor !== void 0 && (i.polygonOffsetFactor = e.polygonOffsetFactor), e.polygonOffsetUnits !== void 0 && (i.polygonOffsetUnits = e.polygonOffsetUnits), e.dithering !== void 0 && (i.dithering = e.dithering), e.alphaToCoverage !== void 0 && (i.alphaToCoverage = e.alphaToCoverage), e.premultipliedAlpha !== void 0 && (i.premultipliedAlpha = e.premultipliedAlpha), e.forceSinglePass !== void 0 && (i.forceSinglePass = e.forceSinglePass), e.visible !== void 0 && (i.visible = e.visible), e.toneMapped !== void 0 && (i.toneMapped = e.toneMapped), e.userData !== void 0 && (i.userData = e.userData), e.vertexColors !== void 0 && (typeof e.vertexColors == "number" ? i.vertexColors = e.vertexColors > 0 : i.vertexColors = e.vertexColors), e.uniforms !== void 0) for(const s in e.uniforms){
                const o = e.uniforms[s];
                switch(i.uniforms[s] = {}, o.type){
                    case "t":
                        i.uniforms[s].value = r(o.value);
                        break;
                    case "c":
                        i.uniforms[s].value = new Ft().setHex(o.value);
                        break;
                    case "v2":
                        i.uniforms[s].value = new ot().fromArray(o.value);
                        break;
                    case "v3":
                        i.uniforms[s].value = new ye().fromArray(o.value);
                        break;
                    case "v4":
                        i.uniforms[s].value = new rr().fromArray(o.value);
                        break;
                    case "m3":
                        i.uniforms[s].value = new Mn().fromArray(o.value);
                        break;
                    case "m4":
                        i.uniforms[s].value = new fn().fromArray(o.value);
                        break;
                    default:
                        i.uniforms[s].value = o.value;
                }
            }
            if (e.defines !== void 0 && (i.defines = e.defines), e.vertexShader !== void 0 && (i.vertexShader = e.vertexShader), e.fragmentShader !== void 0 && (i.fragmentShader = e.fragmentShader), e.glslVersion !== void 0 && (i.glslVersion = e.glslVersion), e.extensions !== void 0) for(const s in e.extensions)i.extensions[s] = e.extensions[s];
            if (e.lights !== void 0 && (i.lights = e.lights), e.clipping !== void 0 && (i.clipping = e.clipping), e.size !== void 0 && (i.size = e.size), e.sizeAttenuation !== void 0 && (i.sizeAttenuation = e.sizeAttenuation), e.map !== void 0 && (i.map = r(e.map)), e.matcap !== void 0 && (i.matcap = r(e.matcap)), e.alphaMap !== void 0 && (i.alphaMap = r(e.alphaMap)), e.bumpMap !== void 0 && (i.bumpMap = r(e.bumpMap)), e.bumpScale !== void 0 && (i.bumpScale = e.bumpScale), e.normalMap !== void 0 && (i.normalMap = r(e.normalMap)), e.normalMapType !== void 0 && (i.normalMapType = e.normalMapType), e.normalScale !== void 0) {
                let s = e.normalScale;
                Array.isArray(s) === !1 && (s = [
                    s,
                    s
                ]), i.normalScale = new ot().fromArray(s);
            }
            return e.displacementMap !== void 0 && (i.displacementMap = r(e.displacementMap)), e.displacementScale !== void 0 && (i.displacementScale = e.displacementScale), e.displacementBias !== void 0 && (i.displacementBias = e.displacementBias), e.roughnessMap !== void 0 && (i.roughnessMap = r(e.roughnessMap)), e.metalnessMap !== void 0 && (i.metalnessMap = r(e.metalnessMap)), e.emissiveMap !== void 0 && (i.emissiveMap = r(e.emissiveMap)), e.emissiveIntensity !== void 0 && (i.emissiveIntensity = e.emissiveIntensity), e.specularMap !== void 0 && (i.specularMap = r(e.specularMap)), e.specularIntensityMap !== void 0 && (i.specularIntensityMap = r(e.specularIntensityMap)), e.specularColorMap !== void 0 && (i.specularColorMap = r(e.specularColorMap)), e.envMap !== void 0 && (i.envMap = r(e.envMap)), e.envMapRotation !== void 0 && i.envMapRotation.fromArray(e.envMapRotation), e.envMapIntensity !== void 0 && (i.envMapIntensity = e.envMapIntensity), e.reflectivity !== void 0 && (i.reflectivity = e.reflectivity), e.refractionRatio !== void 0 && (i.refractionRatio = e.refractionRatio), e.lightMap !== void 0 && (i.lightMap = r(e.lightMap)), e.lightMapIntensity !== void 0 && (i.lightMapIntensity = e.lightMapIntensity), e.aoMap !== void 0 && (i.aoMap = r(e.aoMap)), e.aoMapIntensity !== void 0 && (i.aoMapIntensity = e.aoMapIntensity), e.gradientMap !== void 0 && (i.gradientMap = r(e.gradientMap)), e.clearcoatMap !== void 0 && (i.clearcoatMap = r(e.clearcoatMap)), e.clearcoatRoughnessMap !== void 0 && (i.clearcoatRoughnessMap = r(e.clearcoatRoughnessMap)), e.clearcoatNormalMap !== void 0 && (i.clearcoatNormalMap = r(e.clearcoatNormalMap)), e.clearcoatNormalScale !== void 0 && (i.clearcoatNormalScale = new ot().fromArray(e.clearcoatNormalScale)), e.iridescenceMap !== void 0 && (i.iridescenceMap = r(e.iridescenceMap)), e.iridescenceThicknessMap !== void 0 && (i.iridescenceThicknessMap = r(e.iridescenceThicknessMap)), e.transmissionMap !== void 0 && (i.transmissionMap = r(e.transmissionMap)), e.thicknessMap !== void 0 && (i.thicknessMap = r(e.thicknessMap)), e.anisotropyMap !== void 0 && (i.anisotropyMap = r(e.anisotropyMap)), e.sheenColorMap !== void 0 && (i.sheenColorMap = r(e.sheenColorMap)), e.sheenRoughnessMap !== void 0 && (i.sheenRoughnessMap = r(e.sheenRoughnessMap)), i;
        }
        setTextures(e) {
            return this.textures = e, this;
        }
        createMaterialFromType(e) {
            return pC.createMaterialFromType(e);
        }
        static createMaterialFromType(e) {
            const n = {
                ShadowMaterial: nG,
                SpriteMaterial: v2,
                RawShaderMaterial: rG,
                ShaderMaterial: oc,
                PointsMaterial: b2,
                MeshPhysicalMaterial: iG,
                MeshStandardMaterial: I2,
                MeshPhongMaterial: sG,
                MeshToonMaterial: oG,
                MeshNormalMaterial: aG,
                MeshLambertMaterial: lG,
                MeshDepthMaterial: R2,
                MeshDistanceMaterial: A2,
                MeshBasicMaterial: sh,
                MeshMatcapMaterial: cG,
                LineDashedMaterial: uG,
                LineBasicMaterial: No,
                Material: no
            };
            return new n[e];
        }
    }
    class vk {
        static decodeText(e) {
            if (console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."), typeof TextDecoder < "u") return new TextDecoder().decode(e);
            let n = "";
            for(let r = 0, i = e.length; r < i; r++)n += String.fromCharCode(e[r]);
            try {
                return decodeURIComponent(escape(n));
            } catch  {
                return n;
            }
        }
        static extractUrlBase(e) {
            const n = e.lastIndexOf("/");
            return n === -1 ? "./" : e.slice(0, n + 1);
        }
        static resolveURL(e, n) {
            return typeof e != "string" || e === "" ? "" : (/^https?:\/\//i.test(n) && /^\//.test(e) && (n = n.replace(/(^https?:\/\/[^\/]+).*/i, "$1")), /^(https?:)?\/\//i.test(e) || /^data:.*,.*$/i.test(e) || /^blob:.*$/i.test(e) ? e : n + e);
        }
    }
    class MG extends Fn {
        constructor(){
            super(), this.isInstancedBufferGeometry = !0, this.type = "InstancedBufferGeometry", this.instanceCount = 1 / 0;
        }
        copy(e) {
            return super.copy(e), this.instanceCount = e.instanceCount, this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.instanceCount = this.instanceCount, e.isInstancedBufferGeometry = !0, e;
        }
    }
    class TG extends ca {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = this, o = new vd(s.manager);
            o.setPath(s.path), o.setRequestHeader(s.requestHeader), o.setWithCredentials(s.withCredentials), o.load(e, function(a) {
                try {
                    n(s.parse(JSON.parse(a)));
                } catch (l) {
                    i ? i(l) : console.error(l), s.manager.itemError(e);
                }
            }, r, i);
        }
        parse(e) {
            const n = {}, r = {};
            function i(g, x) {
                if (n[x] !== void 0) return n[x];
                const _ = g.interleavedBuffers[x], b = s(g, _.buffer), M = uy(_.type, b), E = new ZT(M, _.stride);
                return E.uuid = _.uuid, n[x] = E, E;
            }
            function s(g, x) {
                if (r[x] !== void 0) return r[x];
                const _ = g.arrayBuffers[x], b = new Uint32Array(_).buffer;
                return r[x] = b, b;
            }
            const o = e.isInstancedBufferGeometry ? new MG : new Fn, a = e.data.index;
            if (a !== void 0) {
                const g = uy(a.type, a.array);
                o.setIndex(new wr(g, 1));
            }
            const l = e.data.attributes;
            for(const g in l){
                const x = l[g];
                let S;
                if (x.isInterleavedBufferAttribute) {
                    const _ = i(e.data, x.data);
                    S = new cm(_, x.itemSize, x.offset, x.normalized);
                } else {
                    const _ = uy(x.type, x.array), b = x.isInstancedBufferAttribute ? tv : wr;
                    S = new b(_, x.itemSize, x.normalized);
                }
                x.name !== void 0 && (S.name = x.name), x.usage !== void 0 && S.setUsage(x.usage), o.setAttribute(g, S);
            }
            const c = e.data.morphAttributes;
            if (c) for(const g in c){
                const x = c[g], S = [];
                for(let _ = 0, b = x.length; _ < b; _++){
                    const M = x[_];
                    let E;
                    if (M.isInterleavedBufferAttribute) {
                        const T = i(e.data, M.data);
                        E = new cm(T, M.itemSize, M.offset, M.normalized);
                    } else {
                        const T = uy(M.type, M.array);
                        E = new wr(T, M.itemSize, M.normalized);
                    }
                    M.name !== void 0 && (E.name = M.name), S.push(E);
                }
                o.morphAttributes[g] = S;
            }
            e.data.morphTargetsRelative && (o.morphTargetsRelative = !0);
            const f = e.data.groups || e.data.drawcalls || e.data.offsets;
            if (f !== void 0) for(let g = 0, x = f.length; g !== x; ++g){
                const S = f[g];
                o.addGroup(S.start, S.count, S.materialIndex);
            }
            const p = e.data.boundingSphere;
            if (p !== void 0) {
                const g = new ye;
                p.center !== void 0 && g.fromArray(p.center), o.boundingSphere = new Ks(g, p.radius);
            }
            return e.name && (o.name = e.name), e.userData && (o.userData = e.userData), o;
        }
    }
    class Pye extends ca {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = this, o = this.path === "" ? vk.extractUrlBase(e) : this.path;
            this.resourcePath = this.resourcePath || o;
            const a = new vd(this.manager);
            a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(e, function(l) {
                let c = null;
                try {
                    c = JSON.parse(l);
                } catch (f) {
                    i !== void 0 && i(f), console.error("THREE:ObjectLoader: Can't parse " + e + ".", f.message);
                    return;
                }
                const u = c.metadata;
                if (u === void 0 || u.type === void 0 || u.type.toLowerCase() === "geometry") {
                    i !== void 0 && i(new Error("THREE.ObjectLoader: Can't load " + e)), console.error("THREE.ObjectLoader: Can't load " + e);
                    return;
                }
                s.parse(c, n);
            }, r, i);
        }
        async loadAsync(e, n) {
            const r = this, i = this.path === "" ? vk.extractUrlBase(e) : this.path;
            this.resourcePath = this.resourcePath || i;
            const s = new vd(this.manager);
            s.setPath(this.path), s.setRequestHeader(this.requestHeader), s.setWithCredentials(this.withCredentials);
            const o = await s.loadAsync(e, n), a = JSON.parse(o), l = a.metadata;
            if (l === void 0 || l.type === void 0 || l.type.toLowerCase() === "geometry") throw new Error("THREE.ObjectLoader: Can't load " + e);
            return await r.parseAsync(a);
        }
        parse(e, n) {
            const r = this.parseAnimations(e.animations), i = this.parseShapes(e.shapes), s = this.parseGeometries(e.geometries, i), o = this.parseImages(e.images, function() {
                n !== void 0 && n(c);
            }), a = this.parseTextures(e.textures, o), l = this.parseMaterials(e.materials, a), c = this.parseObject(e.object, s, l, a, r), u = this.parseSkeletons(e.skeletons, c);
            if (this.bindSkeletons(c, u), this.bindLightTargets(c), n !== void 0) {
                let f = !1;
                for(const p in o)if (o[p].data instanceof HTMLImageElement) {
                    f = !0;
                    break;
                }
                f === !1 && n(c);
            }
            return c;
        }
        async parseAsync(e) {
            const n = this.parseAnimations(e.animations), r = this.parseShapes(e.shapes), i = this.parseGeometries(e.geometries, r), s = await this.parseImagesAsync(e.images), o = this.parseTextures(e.textures, s), a = this.parseMaterials(e.materials, o), l = this.parseObject(e.object, i, a, o, n), c = this.parseSkeletons(e.skeletons, l);
            return this.bindSkeletons(l, c), this.bindLightTargets(l), l;
        }
        parseShapes(e) {
            const n = {};
            if (e !== void 0) for(let r = 0, i = e.length; r < i; r++){
                const s = new Hp().fromJSON(e[r]);
                n[s.uuid] = s;
            }
            return n;
        }
        parseSkeletons(e, n) {
            const r = {}, i = {};
            if (n.traverse(function(s) {
                s.isBone && (i[s.uuid] = s);
            }), e !== void 0) for(let s = 0, o = e.length; s < o; s++){
                const a = new JT().fromJSON(e[s], i);
                r[a.uuid] = a;
            }
            return r;
        }
        parseGeometries(e, n) {
            const r = {};
            if (e !== void 0) {
                const i = new TG;
                for(let s = 0, o = e.length; s < o; s++){
                    let a;
                    const l = e[s];
                    switch(l.type){
                        case "BufferGeometry":
                        case "InstancedBufferGeometry":
                            a = i.parse(l);
                            break;
                        default:
                            l.type in ez ? a = ez[l.type].fromJSON(l, n) : console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`);
                    }
                    a.uuid = l.uuid, l.name !== void 0 && (a.name = l.name), l.userData !== void 0 && (a.userData = l.userData), r[l.uuid] = a;
                }
            }
            return r;
        }
        parseMaterials(e, n) {
            const r = {}, i = {};
            if (e !== void 0) {
                const s = new pC;
                s.setTextures(n);
                for(let o = 0, a = e.length; o < a; o++){
                    const l = e[o];
                    r[l.uuid] === void 0 && (r[l.uuid] = s.parse(l)), i[l.uuid] = r[l.uuid];
                }
            }
            return i;
        }
        parseAnimations(e) {
            const n = {};
            if (e !== void 0) for(let r = 0; r < e.length; r++){
                const i = e[r], s = kb.parse(i);
                n[s.uuid] = s;
            }
            return n;
        }
        parseImages(e, n) {
            const r = this, i = {};
            let s;
            function o(l) {
                return r.manager.itemStart(l), s.load(l, function() {
                    r.manager.itemEnd(l);
                }, void 0, function() {
                    r.manager.itemError(l), r.manager.itemEnd(l);
                });
            }
            function a(l) {
                if (typeof l == "string") {
                    const c = l, u = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c) ? c : r.resourcePath + c;
                    return o(u);
                } else return l.data ? {
                    data: uy(l.type, l.data),
                    width: l.width,
                    height: l.height
                } : null;
            }
            if (e !== void 0 && e.length > 0) {
                const l = new O2(n);
                s = new Ob(l), s.setCrossOrigin(this.crossOrigin);
                for(let c = 0, u = e.length; c < u; c++){
                    const f = e[c], p = f.url;
                    if (Array.isArray(p)) {
                        const g = [];
                        for(let x = 0, S = p.length; x < S; x++){
                            const _ = p[x], b = a(_);
                            b !== null && (b instanceof HTMLImageElement ? g.push(b) : g.push(new tc(b.data, b.width, b.height)));
                        }
                        i[f.uuid] = new Lp(g);
                    } else {
                        const g = a(f.url);
                        i[f.uuid] = new Lp(g);
                    }
                }
            }
            return i;
        }
        async parseImagesAsync(e) {
            const n = this, r = {};
            let i;
            async function s(o) {
                if (typeof o == "string") {
                    const a = o, l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(a) ? a : n.resourcePath + a;
                    return await i.loadAsync(l);
                } else return o.data ? {
                    data: uy(o.type, o.data),
                    width: o.width,
                    height: o.height
                } : null;
            }
            if (e !== void 0 && e.length > 0) {
                i = new Ob(this.manager), i.setCrossOrigin(this.crossOrigin);
                for(let o = 0, a = e.length; o < a; o++){
                    const l = e[o], c = l.url;
                    if (Array.isArray(c)) {
                        const u = [];
                        for(let f = 0, p = c.length; f < p; f++){
                            const g = c[f], x = await s(g);
                            x !== null && (x instanceof HTMLImageElement ? u.push(x) : u.push(new tc(x.data, x.width, x.height)));
                        }
                        r[l.uuid] = new Lp(u);
                    } else {
                        const u = await s(l.url);
                        r[l.uuid] = new Lp(u);
                    }
                }
            }
            return r;
        }
        parseTextures(e, n) {
            function r(s, o) {
                return typeof s == "number" ? s : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", s), o[s]);
            }
            const i = {};
            if (e !== void 0) for(let s = 0, o = e.length; s < o; s++){
                const a = e[s];
                a.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid), n[a.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", a.image);
                const l = n[a.image], c = l.data;
                let u;
                Array.isArray(c) ? (u = new pw, c.length === 6 && (u.needsUpdate = !0)) : (c && c.data ? u = new tc : u = new ui, c && (u.needsUpdate = !0)), u.source = l, u.uuid = a.uuid, a.name !== void 0 && (u.name = a.name), a.mapping !== void 0 && (u.mapping = r(a.mapping, kye)), a.channel !== void 0 && (u.channel = a.channel), a.offset !== void 0 && u.offset.fromArray(a.offset), a.repeat !== void 0 && u.repeat.fromArray(a.repeat), a.center !== void 0 && u.center.fromArray(a.center), a.rotation !== void 0 && (u.rotation = a.rotation), a.wrap !== void 0 && (u.wrapS = r(a.wrap[0], iz), u.wrapT = r(a.wrap[1], iz)), a.format !== void 0 && (u.format = a.format), a.internalFormat !== void 0 && (u.internalFormat = a.internalFormat), a.type !== void 0 && (u.type = a.type), a.colorSpace !== void 0 && (u.colorSpace = a.colorSpace), a.minFilter !== void 0 && (u.minFilter = r(a.minFilter, sz)), a.magFilter !== void 0 && (u.magFilter = r(a.magFilter, sz)), a.anisotropy !== void 0 && (u.anisotropy = a.anisotropy), a.flipY !== void 0 && (u.flipY = a.flipY), a.generateMipmaps !== void 0 && (u.generateMipmaps = a.generateMipmaps), a.premultiplyAlpha !== void 0 && (u.premultiplyAlpha = a.premultiplyAlpha), a.unpackAlignment !== void 0 && (u.unpackAlignment = a.unpackAlignment), a.compareFunction !== void 0 && (u.compareFunction = a.compareFunction), a.userData !== void 0 && (u.userData = a.userData), i[a.uuid] = u;
            }
            return i;
        }
        parseObject(e, n, r, i, s) {
            let o;
            function a(p) {
                return n[p] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", p), n[p];
            }
            function l(p) {
                if (p !== void 0) {
                    if (Array.isArray(p)) {
                        const g = [];
                        for(let x = 0, S = p.length; x < S; x++){
                            const _ = p[x];
                            r[_] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", _), g.push(r[_]);
                        }
                        return g;
                    }
                    return r[p] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", p), r[p];
                }
            }
            function c(p) {
                return i[p] === void 0 && console.warn("THREE.ObjectLoader: Undefined texture", p), i[p];
            }
            let u, f;
            switch(e.type){
                case "Scene":
                    o = new y2, e.background !== void 0 && (Number.isInteger(e.background) ? o.background = new Ft(e.background) : o.background = c(e.background)), e.environment !== void 0 && (o.environment = c(e.environment)), e.fog !== void 0 && (e.fog.type === "Fog" ? o.fog = new YT(e.fog.color, e.fog.near, e.fog.far) : e.fog.type === "FogExp2" && (o.fog = new KT(e.fog.color, e.fog.density)), e.fog.name !== "" && (o.fog.name = e.fog.name)), e.backgroundBlurriness !== void 0 && (o.backgroundBlurriness = e.backgroundBlurriness), e.backgroundIntensity !== void 0 && (o.backgroundIntensity = e.backgroundIntensity), e.backgroundRotation !== void 0 && o.backgroundRotation.fromArray(e.backgroundRotation), e.environmentIntensity !== void 0 && (o.environmentIntensity = e.environmentIntensity), e.environmentRotation !== void 0 && o.environmentRotation.fromArray(e.environmentRotation);
                    break;
                case "PerspectiveCamera":
                    o = new Ei(e.fov, e.aspect, e.near, e.far), e.focus !== void 0 && (o.focus = e.focus), e.zoom !== void 0 && (o.zoom = e.zoom), e.filmGauge !== void 0 && (o.filmGauge = e.filmGauge), e.filmOffset !== void 0 && (o.filmOffset = e.filmOffset), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                    break;
                case "OrthographicCamera":
                    o = new ad(e.left, e.right, e.top, e.bottom, e.near, e.far), e.zoom !== void 0 && (o.zoom = e.zoom), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                    break;
                case "AmbientLight":
                    o = new wG(e.color, e.intensity);
                    break;
                case "DirectionalLight":
                    o = new bG(e.color, e.intensity), o.target = e.target || "";
                    break;
                case "PointLight":
                    o = new xG(e.color, e.intensity, e.distance, e.decay);
                    break;
                case "RectAreaLight":
                    o = new _G(e.color, e.intensity, e.width, e.height);
                    break;
                case "SpotLight":
                    o = new vG(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay), o.target = e.target || "";
                    break;
                case "HemisphereLight":
                    o = new yG(e.color, e.groundColor, e.intensity);
                    break;
                case "LightProbe":
                    o = new EG().fromJSON(e);
                    break;
                case "SkinnedMesh":
                    u = a(e.geometry), f = l(e.material), o = new U6(u, f), e.bindMode !== void 0 && (o.bindMode = e.bindMode), e.bindMatrix !== void 0 && o.bindMatrix.fromArray(e.bindMatrix), e.skeleton !== void 0 && (o.skeleton = e.skeleton);
                    break;
                case "Mesh":
                    u = a(e.geometry), f = l(e.material), o = new zi(u, f);
                    break;
                case "InstancedMesh":
                    u = a(e.geometry), f = l(e.material);
                    const p = e.count, g = e.instanceMatrix, x = e.instanceColor;
                    o = new z6(u, f, p), o.instanceMatrix = new tv(new Float32Array(g.array), 16), x !== void 0 && (o.instanceColor = new tv(new Float32Array(x.array), x.itemSize));
                    break;
                case "BatchedMesh":
                    u = a(e.geometry), f = l(e.material), o = new V6(e.maxInstanceCount, e.maxVertexCount, e.maxIndexCount, f), o.geometry = u, o.perObjectFrustumCulled = e.perObjectFrustumCulled, o.sortObjects = e.sortObjects, o._drawRanges = e.drawRanges, o._reservedRanges = e.reservedRanges, o._visibility = e.visibility, o._active = e.active, o._bounds = e.bounds.map((S)=>{
                        const _ = new Co;
                        _.min.fromArray(S.boxMin), _.max.fromArray(S.boxMax);
                        const b = new Ks;
                        return b.radius = S.sphereRadius, b.center.fromArray(S.sphereCenter), {
                            boxInitialized: S.boxInitialized,
                            box: _,
                            sphereInitialized: S.sphereInitialized,
                            sphere: b
                        };
                    }), o._maxInstanceCount = e.maxInstanceCount, o._maxVertexCount = e.maxVertexCount, o._maxIndexCount = e.maxIndexCount, o._geometryInitialized = e.geometryInitialized, o._geometryCount = e.geometryCount, o._matricesTexture = c(e.matricesTexture.uuid), e.colorsTexture !== void 0 && (o._colorsTexture = c(e.colorsTexture.uuid));
                    break;
                case "LOD":
                    o = new B6;
                    break;
                case "Line":
                    o = new eh(a(e.geometry), l(e.material));
                    break;
                case "LineLoop":
                    o = new W6(a(e.geometry), l(e.material));
                    break;
                case "LineSegments":
                    o = new Qc(a(e.geometry), l(e.material));
                    break;
                case "PointCloud":
                case "Points":
                    o = new q6(a(e.geometry), l(e.material));
                    break;
                case "Sprite":
                    o = new j6(l(e.material));
                    break;
                case "Group":
                    o = new dy;
                    break;
                case "Bone":
                    o = new x2;
                    break;
                default:
                    o = new ir;
            }
            if (o.uuid = e.uuid, e.name !== void 0 && (o.name = e.name), e.matrix !== void 0 ? (o.matrix.fromArray(e.matrix), e.matrixAutoUpdate !== void 0 && (o.matrixAutoUpdate = e.matrixAutoUpdate), o.matrixAutoUpdate && o.matrix.decompose(o.position, o.quaternion, o.scale)) : (e.position !== void 0 && o.position.fromArray(e.position), e.rotation !== void 0 && o.rotation.fromArray(e.rotation), e.quaternion !== void 0 && o.quaternion.fromArray(e.quaternion), e.scale !== void 0 && o.scale.fromArray(e.scale)), e.up !== void 0 && o.up.fromArray(e.up), e.castShadow !== void 0 && (o.castShadow = e.castShadow), e.receiveShadow !== void 0 && (o.receiveShadow = e.receiveShadow), e.shadow && (e.shadow.intensity !== void 0 && (o.shadow.intensity = e.shadow.intensity), e.shadow.bias !== void 0 && (o.shadow.bias = e.shadow.bias), e.shadow.normalBias !== void 0 && (o.shadow.normalBias = e.shadow.normalBias), e.shadow.radius !== void 0 && (o.shadow.radius = e.shadow.radius), e.shadow.mapSize !== void 0 && o.shadow.mapSize.fromArray(e.shadow.mapSize), e.shadow.camera !== void 0 && (o.shadow.camera = this.parseObject(e.shadow.camera))), e.visible !== void 0 && (o.visible = e.visible), e.frustumCulled !== void 0 && (o.frustumCulled = e.frustumCulled), e.renderOrder !== void 0 && (o.renderOrder = e.renderOrder), e.userData !== void 0 && (o.userData = e.userData), e.layers !== void 0 && (o.layers.mask = e.layers), e.children !== void 0) {
                const p = e.children;
                for(let g = 0; g < p.length; g++)o.add(this.parseObject(p[g], n, r, i, s));
            }
            if (e.animations !== void 0) {
                const p = e.animations;
                for(let g = 0; g < p.length; g++){
                    const x = p[g];
                    o.animations.push(s[x]);
                }
            }
            if (e.type === "LOD") {
                e.autoUpdate !== void 0 && (o.autoUpdate = e.autoUpdate);
                const p = e.levels;
                for(let g = 0; g < p.length; g++){
                    const x = p[g], S = o.getObjectByProperty("uuid", x.object);
                    S !== void 0 && o.addLevel(S, x.distance, x.hysteresis);
                }
            }
            return o;
        }
        bindSkeletons(e, n) {
            Object.keys(n).length !== 0 && e.traverse(function(r) {
                if (r.isSkinnedMesh === !0 && r.skeleton !== void 0) {
                    const i = n[r.skeleton];
                    i === void 0 ? console.warn("THREE.ObjectLoader: No skeleton found with UUID:", r.skeleton) : r.bind(i, r.bindMatrix);
                }
            });
        }
        bindLightTargets(e) {
            e.traverse(function(n) {
                if (n.isDirectionalLight || n.isSpotLight) {
                    const r = n.target, i = e.getObjectByProperty("uuid", r);
                    i !== void 0 ? n.target = i : n.target = new ir;
                }
            });
        }
    }
    const kye = {
        UVMapping: BT,
        CubeReflectionMapping: gd,
        CubeRefractionMapping: Qf,
        EquirectangularReflectionMapping: yb,
        EquirectangularRefractionMapping: vb,
        CubeUVReflectionMapping: gv
    }, iz = {
        RepeatWrapping: xb,
        ClampToEdgeWrapping: ll,
        MirroredRepeatWrapping: bb
    }, sz = {
        NearestFilter: Is,
        NearestMipmapNearestFilter: n2,
        NearestMipmapLinearFilter: cy,
        LinearFilter: es,
        LinearMipmapNearestFilter: E0,
        LinearMipmapLinearFilter: Fc
    };
    class Oye extends ca {
        constructor(e){
            super(e), this.isImageBitmapLoader = !0, typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.options = {
                premultiplyAlpha: "none"
            };
        }
        setOptions(e) {
            return this.options = e, this;
        }
        load(e, n, r, i) {
            e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
            const s = this, o = ed.get(e);
            if (o !== void 0) {
                if (s.manager.itemStart(e), o.then) {
                    o.then((c)=>{
                        n && n(c), s.manager.itemEnd(e);
                    }).catch((c)=>{
                        i && i(c);
                    });
                    return;
                }
                return setTimeout(function() {
                    n && n(o), s.manager.itemEnd(e);
                }, 0), o;
            }
            const a = {};
            a.credentials = this.crossOrigin === "anonymous" ? "same-origin" : "include", a.headers = this.requestHeader;
            const l = fetch(e, a).then(function(c) {
                return c.blob();
            }).then(function(c) {
                return createImageBitmap(c, Object.assign(s.options, {
                    colorSpaceConversion: "none"
                }));
            }).then(function(c) {
                return ed.add(e, c), n && n(c), s.manager.itemEnd(e), c;
            }).catch(function(c) {
                i && i(c), ed.remove(e), s.manager.itemError(e), s.manager.itemEnd(e);
            });
            ed.add(e, l), s.manager.itemStart(e);
        }
    }
    let PS;
    class D2 {
        static getContext() {
            return PS === void 0 && (PS = new (window.AudioContext || window.webkitAudioContext)), PS;
        }
        static setContext(e) {
            PS = e;
        }
    }
    class Lye extends ca {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = this, o = new vd(this.manager);
            o.setResponseType("arraybuffer"), o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(l) {
                try {
                    const c = l.slice(0);
                    D2.getContext().decodeAudioData(c, function(f) {
                        n(f);
                    }).catch(a);
                } catch (c) {
                    a(c);
                }
            }, r, i);
            function a(l) {
                i ? i(l) : console.error(l), s.manager.itemError(e);
            }
        }
    }
    const oz = new fn, az = new fn, sp = new fn;
    class Dye {
        constructor(){
            this.type = "StereoCamera", this.aspect = 1, this.eyeSep = .064, this.cameraL = new Ei, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new Ei, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {
                focus: null,
                fov: null,
                aspect: null,
                near: null,
                far: null,
                zoom: null,
                eyeSep: null
            };
        }
        update(e) {
            const n = this._cache;
            if (n.focus !== e.focus || n.fov !== e.fov || n.aspect !== e.aspect * this.aspect || n.near !== e.near || n.far !== e.far || n.zoom !== e.zoom || n.eyeSep !== this.eyeSep) {
                n.focus = e.focus, n.fov = e.fov, n.aspect = e.aspect * this.aspect, n.near = e.near, n.far = e.far, n.zoom = e.zoom, n.eyeSep = this.eyeSep, sp.copy(e.projectionMatrix);
                const i = n.eyeSep / 2, s = i * n.near / n.focus, o = n.near * Math.tan(Wp * n.fov * .5) / n.zoom;
                let a, l;
                az.elements[12] = -i, oz.elements[12] = i, a = -o * n.aspect + s, l = o * n.aspect + s, sp.elements[0] = 2 * n.near / (l - a), sp.elements[8] = (l + a) / (l - a), this.cameraL.projectionMatrix.copy(sp), a = -o * n.aspect - s, l = o * n.aspect - s, sp.elements[0] = 2 * n.near / (l - a), sp.elements[8] = (l + a) / (l - a), this.cameraR.projectionMatrix.copy(sp);
            }
            this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(az), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(oz);
        }
    }
    class CG extends Ei {
        constructor(e = []){
            super(), this.isArrayCamera = !0, this.cameras = e, this.index = 0;
        }
    }
    class F2 {
        constructor(e = !0){
            this.autoStart = e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
        }
        start() {
            this.startTime = lz(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
        }
        stop() {
            this.getElapsedTime(), this.running = !1, this.autoStart = !1;
        }
        getElapsedTime() {
            return this.getDelta(), this.elapsedTime;
        }
        getDelta() {
            let e = 0;
            if (this.autoStart && !this.running) return this.start(), 0;
            if (this.running) {
                const n = lz();
                e = (n - this.oldTime) / 1e3, this.oldTime = n, this.elapsedTime += e;
            }
            return e;
        }
    }
    function lz() {
        return performance.now();
    }
    const op = new ye, cz = new Xs, Fye = new ye, ap = new ye;
    class jye extends ir {
        constructor(){
            super(), this.type = "AudioListener", this.context = D2.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new F2;
        }
        getInput() {
            return this.gain;
        }
        removeFilter() {
            return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
        }
        getFilter() {
            return this.filter;
        }
        setFilter(e) {
            return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
        }
        getMasterVolume() {
            return this.gain.gain.value;
        }
        setMasterVolume(e) {
            return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
        }
        updateMatrixWorld(e) {
            super.updateMatrixWorld(e);
            const n = this.context.listener, r = this.up;
            if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(op, cz, Fye), ap.set(0, 0, -1).applyQuaternion(cz), n.positionX) {
                const i = this.context.currentTime + this.timeDelta;
                n.positionX.linearRampToValueAtTime(op.x, i), n.positionY.linearRampToValueAtTime(op.y, i), n.positionZ.linearRampToValueAtTime(op.z, i), n.forwardX.linearRampToValueAtTime(ap.x, i), n.forwardY.linearRampToValueAtTime(ap.y, i), n.forwardZ.linearRampToValueAtTime(ap.z, i), n.upX.linearRampToValueAtTime(r.x, i), n.upY.linearRampToValueAtTime(r.y, i), n.upZ.linearRampToValueAtTime(r.z, i);
            } else n.setPosition(op.x, op.y, op.z), n.setOrientation(ap.x, ap.y, ap.z, r.x, r.y, r.z);
        }
    }
    class IG extends ir {
        constructor(e){
            super(), this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = !1, this.buffer = null, this.detune = 0, this.loop = !1, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.source = null, this.sourceType = "empty", this._startedAt = 0, this._progress = 0, this._connected = !1, this.filters = [];
        }
        getOutput() {
            return this.gain;
        }
        setNodeSource(e) {
            return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this;
        }
        setMediaElementSource(e) {
            return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this;
        }
        setMediaStreamSource(e) {
            return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this;
        }
        setBuffer(e) {
            return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this;
        }
        play(e = 0) {
            if (this.isPlaying === !0) {
                console.warn("THREE.Audio: Audio is already playing.");
                return;
            }
            if (this.hasPlaybackControl === !1) {
                console.warn("THREE.Audio: this Audio has no playback control.");
                return;
            }
            this._startedAt = this.context.currentTime + e;
            const n = this.context.createBufferSource();
            return n.buffer = this.buffer, n.loop = this.loop, n.loopStart = this.loopStart, n.loopEnd = this.loopEnd, n.onended = this.onEnded.bind(this), n.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = n, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();
        }
        pause() {
            if (this.hasPlaybackControl === !1) {
                console.warn("THREE.Audio: this Audio has no playback control.");
                return;
            }
            return this.isPlaying === !0 && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, this.loop === !0 && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
        }
        stop(e = 0) {
            if (this.hasPlaybackControl === !1) {
                console.warn("THREE.Audio: this Audio has no playback control.");
                return;
            }
            return this._progress = 0, this.source !== null && (this.source.stop(this.context.currentTime + e), this.source.onended = null), this.isPlaying = !1, this;
        }
        connect() {
            if (this.filters.length > 0) {
                this.source.connect(this.filters[0]);
                for(let e = 1, n = this.filters.length; e < n; e++)this.filters[e - 1].connect(this.filters[e]);
                this.filters[this.filters.length - 1].connect(this.getOutput());
            } else this.source.connect(this.getOutput());
            return this._connected = !0, this;
        }
        disconnect() {
            if (this._connected !== !1) {
                if (this.filters.length > 0) {
                    this.source.disconnect(this.filters[0]);
                    for(let e = 1, n = this.filters.length; e < n; e++)this.filters[e - 1].disconnect(this.filters[e]);
                    this.filters[this.filters.length - 1].disconnect(this.getOutput());
                } else this.source.disconnect(this.getOutput());
                return this._connected = !1, this;
            }
        }
        getFilters() {
            return this.filters;
        }
        setFilters(e) {
            return e || (e = []), this._connected === !0 ? (this.disconnect(), this.filters = e.slice(), this.connect()) : this.filters = e.slice(), this;
        }
        setDetune(e) {
            return this.detune = e, this.isPlaying === !0 && this.source.detune !== void 0 && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this;
        }
        getDetune() {
            return this.detune;
        }
        getFilter() {
            return this.getFilters()[0];
        }
        setFilter(e) {
            return this.setFilters(e ? [
                e
            ] : []);
        }
        setPlaybackRate(e) {
            if (this.hasPlaybackControl === !1) {
                console.warn("THREE.Audio: this Audio has no playback control.");
                return;
            }
            return this.playbackRate = e, this.isPlaying === !0 && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
        }
        getPlaybackRate() {
            return this.playbackRate;
        }
        onEnded() {
            this.isPlaying = !1, this._progress = 0;
        }
        getLoop() {
            return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
        }
        setLoop(e) {
            if (this.hasPlaybackControl === !1) {
                console.warn("THREE.Audio: this Audio has no playback control.");
                return;
            }
            return this.loop = e, this.isPlaying === !0 && (this.source.loop = this.loop), this;
        }
        setLoopStart(e) {
            return this.loopStart = e, this;
        }
        setLoopEnd(e) {
            return this.loopEnd = e, this;
        }
        getVolume() {
            return this.gain.gain.value;
        }
        setVolume(e) {
            return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
        }
        copy(e, n) {
            return super.copy(e, n), e.sourceType !== "buffer" ? (console.warn("THREE.Audio: Audio source type cannot be copied."), this) : (this.autoplay = e.autoplay, this.buffer = e.buffer, this.detune = e.detune, this.loop = e.loop, this.loopStart = e.loopStart, this.loopEnd = e.loopEnd, this.offset = e.offset, this.duration = e.duration, this.playbackRate = e.playbackRate, this.hasPlaybackControl = e.hasPlaybackControl, this.sourceType = e.sourceType, this.filters = e.filters.slice(), this);
        }
        clone(e) {
            return new this.constructor(this.listener).copy(this, e);
        }
    }
    const lp = new ye, uz = new Xs, Bye = new ye, cp = new ye;
    class Uye extends IG {
        constructor(e){
            super(e), this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain);
        }
        connect() {
            super.connect(), this.panner.connect(this.gain);
        }
        disconnect() {
            super.disconnect(), this.panner.disconnect(this.gain);
        }
        getOutput() {
            return this.panner;
        }
        getRefDistance() {
            return this.panner.refDistance;
        }
        setRefDistance(e) {
            return this.panner.refDistance = e, this;
        }
        getRolloffFactor() {
            return this.panner.rolloffFactor;
        }
        setRolloffFactor(e) {
            return this.panner.rolloffFactor = e, this;
        }
        getDistanceModel() {
            return this.panner.distanceModel;
        }
        setDistanceModel(e) {
            return this.panner.distanceModel = e, this;
        }
        getMaxDistance() {
            return this.panner.maxDistance;
        }
        setMaxDistance(e) {
            return this.panner.maxDistance = e, this;
        }
        setDirectionalCone(e, n, r) {
            return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = n, this.panner.coneOuterGain = r, this;
        }
        updateMatrixWorld(e) {
            if (super.updateMatrixWorld(e), this.hasPlaybackControl === !0 && this.isPlaying === !1) return;
            this.matrixWorld.decompose(lp, uz, Bye), cp.set(0, 0, 1).applyQuaternion(uz);
            const n = this.panner;
            if (n.positionX) {
                const r = this.context.currentTime + this.listener.timeDelta;
                n.positionX.linearRampToValueAtTime(lp.x, r), n.positionY.linearRampToValueAtTime(lp.y, r), n.positionZ.linearRampToValueAtTime(lp.z, r), n.orientationX.linearRampToValueAtTime(cp.x, r), n.orientationY.linearRampToValueAtTime(cp.y, r), n.orientationZ.linearRampToValueAtTime(cp.z, r);
            } else n.setPosition(lp.x, lp.y, lp.z), n.setOrientation(cp.x, cp.y, cp.z);
        }
    }
    class zye {
        constructor(e, n = 2048){
            this.analyser = e.context.createAnalyser(), this.analyser.fftSize = n, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser);
        }
        getFrequencyData() {
            return this.analyser.getByteFrequencyData(this.data), this.data;
        }
        getAverageFrequency() {
            let e = 0;
            const n = this.getFrequencyData();
            for(let r = 0; r < n.length; r++)e += n[r];
            return e / n.length;
        }
    }
    class RG {
        constructor(e, n, r){
            this.binding = e, this.valueSize = r;
            let i, s, o;
            switch(n){
                case "quaternion":
                    i = this._slerp, s = this._slerpAdditive, o = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(r * 6), this._workIndex = 5;
                    break;
                case "string":
                case "bool":
                    i = this._select, s = this._select, o = this._setAdditiveIdentityOther, this.buffer = new Array(r * 5);
                    break;
                default:
                    i = this._lerp, s = this._lerpAdditive, o = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(r * 5);
            }
            this._mixBufferRegion = i, this._mixBufferRegionAdditive = s, this._setIdentity = o, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0;
        }
        accumulate(e, n) {
            const r = this.buffer, i = this.valueSize, s = e * i + i;
            let o = this.cumulativeWeight;
            if (o === 0) {
                for(let a = 0; a !== i; ++a)r[s + a] = r[a];
                o = n;
            } else {
                o += n;
                const a = n / o;
                this._mixBufferRegion(r, s, 0, a, i);
            }
            this.cumulativeWeight = o;
        }
        accumulateAdditive(e) {
            const n = this.buffer, r = this.valueSize, i = r * this._addIndex;
            this.cumulativeWeightAdditive === 0 && this._setIdentity(), this._mixBufferRegionAdditive(n, i, 0, e, r), this.cumulativeWeightAdditive += e;
        }
        apply(e) {
            const n = this.valueSize, r = this.buffer, i = e * n + n, s = this.cumulativeWeight, o = this.cumulativeWeightAdditive, a = this.binding;
            if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, s < 1) {
                const l = n * this._origIndex;
                this._mixBufferRegion(r, i, l, 1 - s, n);
            }
            o > 0 && this._mixBufferRegionAdditive(r, i, this._addIndex * n, 1, n);
            for(let l = n, c = n + n; l !== c; ++l)if (r[l] !== r[l + n]) {
                a.setValue(r, i);
                break;
            }
        }
        saveOriginalState() {
            const e = this.binding, n = this.buffer, r = this.valueSize, i = r * this._origIndex;
            e.getValue(n, i);
            for(let s = r, o = i; s !== o; ++s)n[s] = n[i + s % r];
            this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0;
        }
        restoreOriginalState() {
            const e = this.valueSize * 3;
            this.binding.setValue(this.buffer, e);
        }
        _setAdditiveIdentityNumeric() {
            const e = this._addIndex * this.valueSize, n = e + this.valueSize;
            for(let r = e; r < n; r++)this.buffer[r] = 0;
        }
        _setAdditiveIdentityQuaternion() {
            this._setAdditiveIdentityNumeric(), this.buffer[this._addIndex * this.valueSize + 3] = 1;
        }
        _setAdditiveIdentityOther() {
            const e = this._origIndex * this.valueSize, n = this._addIndex * this.valueSize;
            for(let r = 0; r < this.valueSize; r++)this.buffer[n + r] = this.buffer[e + r];
        }
        _select(e, n, r, i, s) {
            if (i >= .5) for(let o = 0; o !== s; ++o)e[n + o] = e[r + o];
        }
        _slerp(e, n, r, i) {
            Xs.slerpFlat(e, n, e, n, e, r, i);
        }
        _slerpAdditive(e, n, r, i, s) {
            const o = this._workIndex * s;
            Xs.multiplyQuaternionsFlat(e, o, e, n, e, r), Xs.slerpFlat(e, n, e, n, e, o, i);
        }
        _lerp(e, n, r, i, s) {
            const o = 1 - i;
            for(let a = 0; a !== s; ++a){
                const l = n + a;
                e[l] = e[l] * o + e[r + a] * i;
            }
        }
        _lerpAdditive(e, n, r, i, s) {
            for(let o = 0; o !== s; ++o){
                const a = n + o;
                e[a] = e[a] + e[r + o] * i;
            }
        }
    }
    const j2 = "\\[\\]\\.:\\/", Vye = new RegExp("[" + j2 + "]", "g"), B2 = "[^" + j2 + "]", Wye = "[^" + j2.replace("\\.", "") + "]", qye = /((?:WC+[\/:])*)/.source.replace("WC", B2), Hye = /(WCOD+)?/.source.replace("WCOD", Wye), $ye = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", B2), Gye = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", B2), Xye = new RegExp("^" + qye + Hye + $ye + Gye + "$"), Kye = [
        "material",
        "materials",
        "bones",
        "map"
    ];
    class Yye {
        constructor(e, n, r){
            const i = r || tr.parseTrackName(n);
            this._targetGroup = e, this._bindings = e.subscribe_(n, i);
        }
        getValue(e, n) {
            this.bind();
            const r = this._targetGroup.nCachedObjects_, i = this._bindings[r];
            i !== void 0 && i.getValue(e, n);
        }
        setValue(e, n) {
            const r = this._bindings;
            for(let i = this._targetGroup.nCachedObjects_, s = r.length; i !== s; ++i)r[i].setValue(e, n);
        }
        bind() {
            const e = this._bindings;
            for(let n = this._targetGroup.nCachedObjects_, r = e.length; n !== r; ++n)e[n].bind();
        }
        unbind() {
            const e = this._bindings;
            for(let n = this._targetGroup.nCachedObjects_, r = e.length; n !== r; ++n)e[n].unbind();
        }
    }
    class tr {
        constructor(e, n, r){
            this.path = n, this.parsedPath = r || tr.parseTrackName(n), this.node = tr.findNode(e, this.parsedPath.nodeName), this.rootNode = e, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
        }
        static create(e, n, r) {
            return e && e.isAnimationObjectGroup ? new tr.Composite(e, n, r) : new tr(e, n, r);
        }
        static sanitizeNodeName(e) {
            return e.replace(/\s/g, "_").replace(Vye, "");
        }
        static parseTrackName(e) {
            const n = Xye.exec(e);
            if (n === null) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
            const r = {
                nodeName: n[2],
                objectName: n[3],
                objectIndex: n[4],
                propertyName: n[5],
                propertyIndex: n[6]
            }, i = r.nodeName && r.nodeName.lastIndexOf(".");
            if (i !== void 0 && i !== -1) {
                const s = r.nodeName.substring(i + 1);
                Kye.indexOf(s) !== -1 && (r.nodeName = r.nodeName.substring(0, i), r.objectName = s);
            }
            if (r.propertyName === null || r.propertyName.length === 0) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
            return r;
        }
        static findNode(e, n) {
            if (n === void 0 || n === "" || n === "." || n === -1 || n === e.name || n === e.uuid) return e;
            if (e.skeleton) {
                const r = e.skeleton.getBoneByName(n);
                if (r !== void 0) return r;
            }
            if (e.children) {
                const r = function(s) {
                    for(let o = 0; o < s.length; o++){
                        const a = s[o];
                        if (a.name === n || a.uuid === n) return a;
                        const l = r(a.children);
                        if (l) return l;
                    }
                    return null;
                }, i = r(e.children);
                if (i) return i;
            }
            return null;
        }
        _getValue_unavailable() {}
        _setValue_unavailable() {}
        _getValue_direct(e, n) {
            e[n] = this.targetObject[this.propertyName];
        }
        _getValue_array(e, n) {
            const r = this.resolvedProperty;
            for(let i = 0, s = r.length; i !== s; ++i)e[n++] = r[i];
        }
        _getValue_arrayElement(e, n) {
            e[n] = this.resolvedProperty[this.propertyIndex];
        }
        _getValue_toArray(e, n) {
            this.resolvedProperty.toArray(e, n);
        }
        _setValue_direct(e, n) {
            this.targetObject[this.propertyName] = e[n];
        }
        _setValue_direct_setNeedsUpdate(e, n) {
            this.targetObject[this.propertyName] = e[n], this.targetObject.needsUpdate = !0;
        }
        _setValue_direct_setMatrixWorldNeedsUpdate(e, n) {
            this.targetObject[this.propertyName] = e[n], this.targetObject.matrixWorldNeedsUpdate = !0;
        }
        _setValue_array(e, n) {
            const r = this.resolvedProperty;
            for(let i = 0, s = r.length; i !== s; ++i)r[i] = e[n++];
        }
        _setValue_array_setNeedsUpdate(e, n) {
            const r = this.resolvedProperty;
            for(let i = 0, s = r.length; i !== s; ++i)r[i] = e[n++];
            this.targetObject.needsUpdate = !0;
        }
        _setValue_array_setMatrixWorldNeedsUpdate(e, n) {
            const r = this.resolvedProperty;
            for(let i = 0, s = r.length; i !== s; ++i)r[i] = e[n++];
            this.targetObject.matrixWorldNeedsUpdate = !0;
        }
        _setValue_arrayElement(e, n) {
            this.resolvedProperty[this.propertyIndex] = e[n];
        }
        _setValue_arrayElement_setNeedsUpdate(e, n) {
            this.resolvedProperty[this.propertyIndex] = e[n], this.targetObject.needsUpdate = !0;
        }
        _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, n) {
            this.resolvedProperty[this.propertyIndex] = e[n], this.targetObject.matrixWorldNeedsUpdate = !0;
        }
        _setValue_fromArray(e, n) {
            this.resolvedProperty.fromArray(e, n);
        }
        _setValue_fromArray_setNeedsUpdate(e, n) {
            this.resolvedProperty.fromArray(e, n), this.targetObject.needsUpdate = !0;
        }
        _setValue_fromArray_setMatrixWorldNeedsUpdate(e, n) {
            this.resolvedProperty.fromArray(e, n), this.targetObject.matrixWorldNeedsUpdate = !0;
        }
        _getValue_unbound(e, n) {
            this.bind(), this.getValue(e, n);
        }
        _setValue_unbound(e, n) {
            this.bind(), this.setValue(e, n);
        }
        bind() {
            let e = this.node;
            const n = this.parsedPath, r = n.objectName, i = n.propertyName;
            let s = n.propertyIndex;
            if (e || (e = tr.findNode(this.rootNode, n.nodeName), this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, !e) {
                console.warn("THREE.PropertyBinding: No target node found for track: " + this.path + ".");
                return;
            }
            if (r) {
                let c = n.objectIndex;
                switch(r){
                    case "materials":
                        if (!e.material) {
                            console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                            return;
                        }
                        if (!e.material.materials) {
                            console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                            return;
                        }
                        e = e.material.materials;
                        break;
                    case "bones":
                        if (!e.skeleton) {
                            console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                            return;
                        }
                        e = e.skeleton.bones;
                        for(let u = 0; u < e.length; u++)if (e[u].name === c) {
                            c = u;
                            break;
                        }
                        break;
                    case "map":
                        if ("map" in e) {
                            e = e.map;
                            break;
                        }
                        if (!e.material) {
                            console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                            return;
                        }
                        if (!e.material.map) {
                            console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.", this);
                            return;
                        }
                        e = e.material.map;
                        break;
                    default:
                        if (e[r] === void 0) {
                            console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                            return;
                        }
                        e = e[r];
                }
                if (c !== void 0) {
                    if (e[c] === void 0) {
                        console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                        return;
                    }
                    e = e[c];
                }
            }
            const o = e[i];
            if (o === void 0) {
                const c = n.nodeName;
                console.error("THREE.PropertyBinding: Trying to update property for track: " + c + "." + i + " but it wasn't found.", e);
                return;
            }
            let a = this.Versioning.None;
            this.targetObject = e, e.isMaterial === !0 ? a = this.Versioning.NeedsUpdate : e.isObject3D === !0 && (a = this.Versioning.MatrixWorldNeedsUpdate);
            let l = this.BindingType.Direct;
            if (s !== void 0) {
                if (i === "morphTargetInfluences") {
                    if (!e.geometry) {
                        console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                        return;
                    }
                    if (!e.geometry.morphAttributes) {
                        console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                        return;
                    }
                    e.morphTargetDictionary[s] !== void 0 && (s = e.morphTargetDictionary[s]);
                }
                l = this.BindingType.ArrayElement, this.resolvedProperty = o, this.propertyIndex = s;
            } else o.fromArray !== void 0 && o.toArray !== void 0 ? (l = this.BindingType.HasFromToArray, this.resolvedProperty = o) : Array.isArray(o) ? (l = this.BindingType.EntireArray, this.resolvedProperty = o) : this.propertyName = i;
            this.getValue = this.GetterByBindingType[l], this.setValue = this.SetterByBindingTypeAndVersioning[l][a];
        }
        unbind() {
            this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
        }
    }
    tr.Composite = Yye;
    tr.prototype.BindingType = {
        Direct: 0,
        EntireArray: 1,
        ArrayElement: 2,
        HasFromToArray: 3
    };
    tr.prototype.Versioning = {
        None: 0,
        NeedsUpdate: 1,
        MatrixWorldNeedsUpdate: 2
    };
    tr.prototype.GetterByBindingType = [
        tr.prototype._getValue_direct,
        tr.prototype._getValue_array,
        tr.prototype._getValue_arrayElement,
        tr.prototype._getValue_toArray
    ];
    tr.prototype.SetterByBindingTypeAndVersioning = [
        [
            tr.prototype._setValue_direct,
            tr.prototype._setValue_direct_setNeedsUpdate,
            tr.prototype._setValue_direct_setMatrixWorldNeedsUpdate
        ],
        [
            tr.prototype._setValue_array,
            tr.prototype._setValue_array_setNeedsUpdate,
            tr.prototype._setValue_array_setMatrixWorldNeedsUpdate
        ],
        [
            tr.prototype._setValue_arrayElement,
            tr.prototype._setValue_arrayElement_setNeedsUpdate,
            tr.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate
        ],
        [
            tr.prototype._setValue_fromArray,
            tr.prototype._setValue_fromArray_setNeedsUpdate,
            tr.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate
        ]
    ];
    class Zye {
        constructor(){
            this.isAnimationObjectGroup = !0, this.uuid = ka(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
            const e = {};
            this._indicesByUUID = e;
            for(let r = 0, i = arguments.length; r !== i; ++r)e[arguments[r].uuid] = r;
            this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
            const n = this;
            this.stats = {
                objects: {
                    get total () {
                        return n._objects.length;
                    },
                    get inUse () {
                        return this.total - n.nCachedObjects_;
                    }
                },
                get bindingsPerObject () {
                    return n._bindings.length;
                }
            };
        }
        add() {
            const e = this._objects, n = this._indicesByUUID, r = this._paths, i = this._parsedPaths, s = this._bindings, o = s.length;
            let a, l = e.length, c = this.nCachedObjects_;
            for(let u = 0, f = arguments.length; u !== f; ++u){
                const p = arguments[u], g = p.uuid;
                let x = n[g];
                if (x === void 0) {
                    x = l++, n[g] = x, e.push(p);
                    for(let S = 0, _ = o; S !== _; ++S)s[S].push(new tr(p, r[S], i[S]));
                } else if (x < c) {
                    a = e[x];
                    const S = --c, _ = e[S];
                    n[_.uuid] = x, e[x] = _, n[g] = S, e[S] = p;
                    for(let b = 0, M = o; b !== M; ++b){
                        const E = s[b], T = E[S];
                        let k = E[x];
                        E[x] = T, k === void 0 && (k = new tr(p, r[b], i[b])), E[S] = k;
                    }
                } else e[x] !== a && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
            }
            this.nCachedObjects_ = c;
        }
        remove() {
            const e = this._objects, n = this._indicesByUUID, r = this._bindings, i = r.length;
            let s = this.nCachedObjects_;
            for(let o = 0, a = arguments.length; o !== a; ++o){
                const l = arguments[o], c = l.uuid, u = n[c];
                if (u !== void 0 && u >= s) {
                    const f = s++, p = e[f];
                    n[p.uuid] = u, e[u] = p, n[c] = f, e[f] = l;
                    for(let g = 0, x = i; g !== x; ++g){
                        const S = r[g], _ = S[f], b = S[u];
                        S[u] = _, S[f] = b;
                    }
                }
            }
            this.nCachedObjects_ = s;
        }
        uncache() {
            const e = this._objects, n = this._indicesByUUID, r = this._bindings, i = r.length;
            let s = this.nCachedObjects_, o = e.length;
            for(let a = 0, l = arguments.length; a !== l; ++a){
                const c = arguments[a], u = c.uuid, f = n[u];
                if (f !== void 0) if (delete n[u], f < s) {
                    const p = --s, g = e[p], x = --o, S = e[x];
                    n[g.uuid] = f, e[f] = g, n[S.uuid] = p, e[p] = S, e.pop();
                    for(let _ = 0, b = i; _ !== b; ++_){
                        const M = r[_], E = M[p], T = M[x];
                        M[f] = E, M[p] = T, M.pop();
                    }
                } else {
                    const p = --o, g = e[p];
                    p > 0 && (n[g.uuid] = f), e[f] = g, e.pop();
                    for(let x = 0, S = i; x !== S; ++x){
                        const _ = r[x];
                        _[f] = _[p], _.pop();
                    }
                }
            }
            this.nCachedObjects_ = s;
        }
        subscribe_(e, n) {
            const r = this._bindingsIndicesByPath;
            let i = r[e];
            const s = this._bindings;
            if (i !== void 0) return s[i];
            const o = this._paths, a = this._parsedPaths, l = this._objects, c = l.length, u = this.nCachedObjects_, f = new Array(c);
            i = s.length, r[e] = i, o.push(e), a.push(n), s.push(f);
            for(let p = u, g = l.length; p !== g; ++p){
                const x = l[p];
                f[p] = new tr(x, e, n);
            }
            return f;
        }
        unsubscribe_(e) {
            const n = this._bindingsIndicesByPath, r = n[e];
            if (r !== void 0) {
                const i = this._paths, s = this._parsedPaths, o = this._bindings, a = o.length - 1, l = o[a], c = e[a];
                n[c] = r, o[r] = l, o.pop(), s[r] = s[a], s.pop(), i[r] = i[a], i.pop();
            }
        }
    }
    class AG {
        constructor(e, n, r = null, i = n.blendMode){
            this._mixer = e, this._clip = n, this._localRoot = r, this.blendMode = i;
            const s = n.tracks, o = s.length, a = new Array(o), l = {
                endingStart: kp,
                endingEnd: kp
            };
            for(let c = 0; c !== o; ++c){
                const u = s[c].createInterpolant(null);
                a[c] = u, u.settings = l;
            }
            this._interpolantSettings = l, this._interpolants = a, this._propertyBindings = new Array(o), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = y6, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
        }
        play() {
            return this._mixer._activateAction(this), this;
        }
        stop() {
            return this._mixer._deactivateAction(this), this.reset();
        }
        reset() {
            return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
        }
        isRunning() {
            return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
        }
        isScheduled() {
            return this._mixer._isActiveAction(this);
        }
        startAt(e) {
            return this._startTime = e, this;
        }
        setLoop(e, n) {
            return this.loop = e, this.repetitions = n, this;
        }
        setEffectiveWeight(e) {
            return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading();
        }
        getEffectiveWeight() {
            return this._effectiveWeight;
        }
        fadeIn(e) {
            return this._scheduleFading(e, 0, 1);
        }
        fadeOut(e) {
            return this._scheduleFading(e, 1, 0);
        }
        crossFadeFrom(e, n, r) {
            if (e.fadeOut(n), this.fadeIn(n), r) {
                const i = this._clip.duration, s = e._clip.duration, o = s / i, a = i / s;
                e.warp(1, o, n), this.warp(a, 1, n);
            }
            return this;
        }
        crossFadeTo(e, n, r) {
            return e.crossFadeFrom(this, n, r);
        }
        stopFading() {
            const e = this._weightInterpolant;
            return e !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
        }
        setEffectiveTimeScale(e) {
            return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping();
        }
        getEffectiveTimeScale() {
            return this._effectiveTimeScale;
        }
        setDuration(e) {
            return this.timeScale = this._clip.duration / e, this.stopWarping();
        }
        syncWith(e) {
            return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping();
        }
        halt(e) {
            return this.warp(this._effectiveTimeScale, 0, e);
        }
        warp(e, n, r) {
            const i = this._mixer, s = i.time, o = this.timeScale;
            let a = this._timeScaleInterpolant;
            a === null && (a = i._lendControlInterpolant(), this._timeScaleInterpolant = a);
            const l = a.parameterPositions, c = a.sampleValues;
            return l[0] = s, l[1] = s + r, c[0] = e / o, c[1] = n / o, this;
        }
        stopWarping() {
            const e = this._timeScaleInterpolant;
            return e !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
        }
        getMixer() {
            return this._mixer;
        }
        getClip() {
            return this._clip;
        }
        getRoot() {
            return this._localRoot || this._mixer._root;
        }
        _update(e, n, r, i) {
            if (!this.enabled) {
                this._updateWeight(e);
                return;
            }
            const s = this._startTime;
            if (s !== null) {
                const l = (e - s) * r;
                l < 0 || r === 0 ? n = 0 : (this._startTime = null, n = r * l);
            }
            n *= this._updateTimeScale(e);
            const o = this._updateTime(n), a = this._updateWeight(e);
            if (a > 0) {
                const l = this._interpolants, c = this._propertyBindings;
                switch(this.blendMode){
                    case f2:
                        for(let u = 0, f = l.length; u !== f; ++u)l[u].evaluate(o), c[u].accumulateAdditive(a);
                        break;
                    case $T:
                    default:
                        for(let u = 0, f = l.length; u !== f; ++u)l[u].evaluate(o), c[u].accumulate(i, a);
                }
            }
        }
        _updateWeight(e) {
            let n = 0;
            if (this.enabled) {
                n = this.weight;
                const r = this._weightInterpolant;
                if (r !== null) {
                    const i = r.evaluate(e)[0];
                    n *= i, e > r.parameterPositions[1] && (this.stopFading(), i === 0 && (this.enabled = !1));
                }
            }
            return this._effectiveWeight = n, n;
        }
        _updateTimeScale(e) {
            let n = 0;
            if (!this.paused) {
                n = this.timeScale;
                const r = this._timeScaleInterpolant;
                if (r !== null) {
                    const i = r.evaluate(e)[0];
                    n *= i, e > r.parameterPositions[1] && (this.stopWarping(), n === 0 ? this.paused = !0 : this.timeScale = n);
                }
            }
            return this._effectiveTimeScale = n, n;
        }
        _updateTime(e) {
            const n = this._clip.duration, r = this.loop;
            let i = this.time + e, s = this._loopCount;
            const o = r === v6;
            if (e === 0) return s === -1 ? i : o && (s & 1) === 1 ? n - i : i;
            if (r === g6) {
                s === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
                e: {
                    if (i >= n) i = n;
                    else if (i < 0) i = 0;
                    else {
                        this.time = i;
                        break e;
                    }
                    this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this.time = i, this._mixer.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: e < 0 ? -1 : 1
                    });
                }
            } else {
                if (s === -1 && (e >= 0 ? (s = 0, this._setEndings(!0, this.repetitions === 0, o)) : this._setEndings(this.repetitions === 0, !0, o)), i >= n || i < 0) {
                    const a = Math.floor(i / n);
                    i -= n * a, s += Math.abs(a);
                    const l = this.repetitions - s;
                    if (l <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, i = e > 0 ? n : 0, this.time = i, this._mixer.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: e > 0 ? 1 : -1
                    });
                    else {
                        if (l === 1) {
                            const c = e < 0;
                            this._setEndings(c, !c, o);
                        } else this._setEndings(!1, !1, o);
                        this._loopCount = s, this.time = i, this._mixer.dispatchEvent({
                            type: "loop",
                            action: this,
                            loopDelta: a
                        });
                    }
                } else this.time = i;
                if (o && (s & 1) === 1) return n - i;
            }
            return i;
        }
        _setEndings(e, n, r) {
            const i = this._interpolantSettings;
            r ? (i.endingStart = Op, i.endingEnd = Op) : (e ? i.endingStart = this.zeroSlopeAtStart ? Op : kp : i.endingStart = _b, n ? i.endingEnd = this.zeroSlopeAtEnd ? Op : kp : i.endingEnd = _b);
        }
        _scheduleFading(e, n, r) {
            const i = this._mixer, s = i.time;
            let o = this._weightInterpolant;
            o === null && (o = i._lendControlInterpolant(), this._weightInterpolant = o);
            const a = o.parameterPositions, l = o.sampleValues;
            return a[0] = s, l[0] = n, a[1] = s + e, l[1] = r, this;
        }
    }
    const Jye = new Float32Array(1);
    class Qye extends Jc {
        constructor(e){
            super(), this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
        }
        _bindAction(e, n) {
            const r = e._localRoot || this._root, i = e._clip.tracks, s = i.length, o = e._propertyBindings, a = e._interpolants, l = r.uuid, c = this._bindingsByRootAndName;
            let u = c[l];
            u === void 0 && (u = {}, c[l] = u);
            for(let f = 0; f !== s; ++f){
                const p = i[f], g = p.name;
                let x = u[g];
                if (x !== void 0) ++x.referenceCount, o[f] = x;
                else {
                    if (x = o[f], x !== void 0) {
                        x._cacheIndex === null && (++x.referenceCount, this._addInactiveBinding(x, l, g));
                        continue;
                    }
                    const S = n && n._propertyBindings[f].binding.parsedPath;
                    x = new RG(tr.create(r, g, S), p.ValueTypeName, p.getValueSize()), ++x.referenceCount, this._addInactiveBinding(x, l, g), o[f] = x;
                }
                a[f].resultBuffer = x.buffer;
            }
        }
        _activateAction(e) {
            if (!this._isActiveAction(e)) {
                if (e._cacheIndex === null) {
                    const r = (e._localRoot || this._root).uuid, i = e._clip.uuid, s = this._actionsByClip[i];
                    this._bindAction(e, s && s.knownActions[0]), this._addInactiveAction(e, i, r);
                }
                const n = e._propertyBindings;
                for(let r = 0, i = n.length; r !== i; ++r){
                    const s = n[r];
                    s.useCount++ === 0 && (this._lendBinding(s), s.saveOriginalState());
                }
                this._lendAction(e);
            }
        }
        _deactivateAction(e) {
            if (this._isActiveAction(e)) {
                const n = e._propertyBindings;
                for(let r = 0, i = n.length; r !== i; ++r){
                    const s = n[r];
                    --s.useCount === 0 && (s.restoreOriginalState(), this._takeBackBinding(s));
                }
                this._takeBackAction(e);
            }
        }
        _initMemoryManager() {
            this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
            const e = this;
            this.stats = {
                actions: {
                    get total () {
                        return e._actions.length;
                    },
                    get inUse () {
                        return e._nActiveActions;
                    }
                },
                bindings: {
                    get total () {
                        return e._bindings.length;
                    },
                    get inUse () {
                        return e._nActiveBindings;
                    }
                },
                controlInterpolants: {
                    get total () {
                        return e._controlInterpolants.length;
                    },
                    get inUse () {
                        return e._nActiveControlInterpolants;
                    }
                }
            };
        }
        _isActiveAction(e) {
            const n = e._cacheIndex;
            return n !== null && n < this._nActiveActions;
        }
        _addInactiveAction(e, n, r) {
            const i = this._actions, s = this._actionsByClip;
            let o = s[n];
            if (o === void 0) o = {
                knownActions: [
                    e
                ],
                actionByRoot: {}
            }, e._byClipCacheIndex = 0, s[n] = o;
            else {
                const a = o.knownActions;
                e._byClipCacheIndex = a.length, a.push(e);
            }
            e._cacheIndex = i.length, i.push(e), o.actionByRoot[r] = e;
        }
        _removeInactiveAction(e) {
            const n = this._actions, r = n[n.length - 1], i = e._cacheIndex;
            r._cacheIndex = i, n[i] = r, n.pop(), e._cacheIndex = null;
            const s = e._clip.uuid, o = this._actionsByClip, a = o[s], l = a.knownActions, c = l[l.length - 1], u = e._byClipCacheIndex;
            c._byClipCacheIndex = u, l[u] = c, l.pop(), e._byClipCacheIndex = null;
            const f = a.actionByRoot, p = (e._localRoot || this._root).uuid;
            delete f[p], l.length === 0 && delete o[s], this._removeInactiveBindingsForAction(e);
        }
        _removeInactiveBindingsForAction(e) {
            const n = e._propertyBindings;
            for(let r = 0, i = n.length; r !== i; ++r){
                const s = n[r];
                --s.referenceCount === 0 && this._removeInactiveBinding(s);
            }
        }
        _lendAction(e) {
            const n = this._actions, r = e._cacheIndex, i = this._nActiveActions++, s = n[i];
            e._cacheIndex = i, n[i] = e, s._cacheIndex = r, n[r] = s;
        }
        _takeBackAction(e) {
            const n = this._actions, r = e._cacheIndex, i = --this._nActiveActions, s = n[i];
            e._cacheIndex = i, n[i] = e, s._cacheIndex = r, n[r] = s;
        }
        _addInactiveBinding(e, n, r) {
            const i = this._bindingsByRootAndName, s = this._bindings;
            let o = i[n];
            o === void 0 && (o = {}, i[n] = o), o[r] = e, e._cacheIndex = s.length, s.push(e);
        }
        _removeInactiveBinding(e) {
            const n = this._bindings, r = e.binding, i = r.rootNode.uuid, s = r.path, o = this._bindingsByRootAndName, a = o[i], l = n[n.length - 1], c = e._cacheIndex;
            l._cacheIndex = c, n[c] = l, n.pop(), delete a[s], Object.keys(a).length === 0 && delete o[i];
        }
        _lendBinding(e) {
            const n = this._bindings, r = e._cacheIndex, i = this._nActiveBindings++, s = n[i];
            e._cacheIndex = i, n[i] = e, s._cacheIndex = r, n[r] = s;
        }
        _takeBackBinding(e) {
            const n = this._bindings, r = e._cacheIndex, i = --this._nActiveBindings, s = n[i];
            e._cacheIndex = i, n[i] = e, s._cacheIndex = r, n[r] = s;
        }
        _lendControlInterpolant() {
            const e = this._controlInterpolants, n = this._nActiveControlInterpolants++;
            let r = e[n];
            return r === void 0 && (r = new P2(new Float32Array(2), new Float32Array(2), 1, Jye), r.__cacheIndex = n, e[n] = r), r;
        }
        _takeBackControlInterpolant(e) {
            const n = this._controlInterpolants, r = e.__cacheIndex, i = --this._nActiveControlInterpolants, s = n[i];
            e.__cacheIndex = i, n[i] = e, s.__cacheIndex = r, n[r] = s;
        }
        clipAction(e, n, r) {
            const i = n || this._root, s = i.uuid;
            let o = typeof e == "string" ? kb.findByName(i, e) : e;
            const a = o !== null ? o.uuid : e, l = this._actionsByClip[a];
            let c = null;
            if (r === void 0 && (o !== null ? r = o.blendMode : r = $T), l !== void 0) {
                const f = l.actionByRoot[s];
                if (f !== void 0 && f.blendMode === r) return f;
                c = l.knownActions[0], o === null && (o = c._clip);
            }
            if (o === null) return null;
            const u = new AG(this, o, n, r);
            return this._bindAction(u, c), this._addInactiveAction(u, a, s), u;
        }
        existingAction(e, n) {
            const r = n || this._root, i = r.uuid, s = typeof e == "string" ? kb.findByName(r, e) : e, o = s ? s.uuid : e, a = this._actionsByClip[o];
            return a !== void 0 && a.actionByRoot[i] || null;
        }
        stopAllAction() {
            const e = this._actions, n = this._nActiveActions;
            for(let r = n - 1; r >= 0; --r)e[r].stop();
            return this;
        }
        update(e) {
            e *= this.timeScale;
            const n = this._actions, r = this._nActiveActions, i = this.time += e, s = Math.sign(e), o = this._accuIndex ^= 1;
            for(let c = 0; c !== r; ++c)n[c]._update(i, e, s, o);
            const a = this._bindings, l = this._nActiveBindings;
            for(let c = 0; c !== l; ++c)a[c].apply(o);
            return this;
        }
        setTime(e) {
            this.time = 0;
            for(let n = 0; n < this._actions.length; n++)this._actions[n].time = 0;
            return this.update(e);
        }
        getRoot() {
            return this._root;
        }
        uncacheClip(e) {
            const n = this._actions, r = e.uuid, i = this._actionsByClip, s = i[r];
            if (s !== void 0) {
                const o = s.knownActions;
                for(let a = 0, l = o.length; a !== l; ++a){
                    const c = o[a];
                    this._deactivateAction(c);
                    const u = c._cacheIndex, f = n[n.length - 1];
                    c._cacheIndex = null, c._byClipCacheIndex = null, f._cacheIndex = u, n[u] = f, n.pop(), this._removeInactiveBindingsForAction(c);
                }
                delete i[r];
            }
        }
        uncacheRoot(e) {
            const n = e.uuid, r = this._actionsByClip;
            for(const o in r){
                const a = r[o].actionByRoot, l = a[n];
                l !== void 0 && (this._deactivateAction(l), this._removeInactiveAction(l));
            }
            const i = this._bindingsByRootAndName, s = i[n];
            if (s !== void 0) for(const o in s){
                const a = s[o];
                a.restoreOriginalState(), this._removeInactiveBinding(a);
            }
        }
        uncacheAction(e, n) {
            const r = this.existingAction(e, n);
            r !== null && (this._deactivateAction(r), this._removeInactiveAction(r));
        }
    }
    class eve extends GT {
        constructor(e = 1, n = 1, r = 1, i = {}){
            super(e, n, i), this.isRenderTarget3D = !0, this.depth = r, this.texture = new XT(null, e, n, r), this.texture.isRenderTargetTexture = !0;
        }
    }
    class tve extends GT {
        constructor(e = 1, n = 1, r = 1, i = {}){
            super(e, n, i), this.isRenderTargetArray = !0, this.depth = r, this.texture = new fw(null, e, n, r), this.texture.isRenderTargetTexture = !0;
        }
    }
    class U2 {
        constructor(e){
            this.value = e;
        }
        clone() {
            return new U2(this.value.clone === void 0 ? this.value : this.value.clone());
        }
    }
    let nve = 0;
    class rve extends Jc {
        constructor(){
            super(), this.isUniformsGroup = !0, Object.defineProperty(this, "id", {
                value: nve++
            }), this.name = "", this.usage = Eb, this.uniforms = [];
        }
        add(e) {
            return this.uniforms.push(e), this;
        }
        remove(e) {
            const n = this.uniforms.indexOf(e);
            return n !== -1 && this.uniforms.splice(n, 1), this;
        }
        setName(e) {
            return this.name = e, this;
        }
        setUsage(e) {
            return this.usage = e, this;
        }
        dispose() {
            return this.dispatchEvent({
                type: "dispose"
            }), this;
        }
        copy(e) {
            this.name = e.name, this.usage = e.usage;
            const n = e.uniforms;
            this.uniforms.length = 0;
            for(let r = 0, i = n.length; r < i; r++){
                const s = Array.isArray(n[r]) ? n[r] : [
                    n[r]
                ];
                for(let o = 0; o < s.length; o++)this.uniforms.push(s[o].clone());
            }
            return this;
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    class ive extends ZT {
        constructor(e, n, r = 1){
            super(e, n), this.isInstancedInterleavedBuffer = !0, this.meshPerAttribute = r;
        }
        copy(e) {
            return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
        }
        clone(e) {
            const n = super.clone(e);
            return n.meshPerAttribute = this.meshPerAttribute, n;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return n.isInstancedInterleavedBuffer = !0, n.meshPerAttribute = this.meshPerAttribute, n;
        }
    }
    class sve {
        constructor(e, n, r, i, s){
            this.isGLBufferAttribute = !0, this.name = "", this.buffer = e, this.type = n, this.itemSize = r, this.elementSize = i, this.count = s, this.version = 0;
        }
        set needsUpdate(e) {
            e === !0 && this.version++;
        }
        setBuffer(e) {
            return this.buffer = e, this;
        }
        setType(e, n) {
            return this.type = e, this.elementSize = n, this;
        }
        setItemSize(e) {
            return this.itemSize = e, this;
        }
        setCount(e) {
            return this.count = e, this;
        }
    }
    const dz = new fn;
    class NG {
        constructor(e, n, r = 0, i = 1 / 0){
            this.ray = new ym(e, n), this.near = r, this.far = i, this.camera = null, this.layers = new qp, this.params = {
                Mesh: {},
                Line: {
                    threshold: 1
                },
                LOD: {},
                Points: {
                    threshold: 1
                },
                Sprite: {}
            };
        }
        set(e, n) {
            this.ray.set(e, n);
        }
        setFromCamera(e, n) {
            n.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(n.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(n).sub(this.ray.origin).normalize(), this.camera = n) : n.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (n.near + n.far) / (n.near - n.far)).unproject(n), this.ray.direction.set(0, 0, -1).transformDirection(n.matrixWorld), this.camera = n) : console.error("THREE.Raycaster: Unsupported camera type: " + n.type);
        }
        setFromXRController(e) {
            return dz.identity().extractRotation(e.matrixWorld), this.ray.origin.setFromMatrixPosition(e.matrixWorld), this.ray.direction.set(0, 0, -1).applyMatrix4(dz), this;
        }
        intersectObject(e, n = !0, r = []) {
            return xk(e, this, r, n), r.sort(fz), r;
        }
        intersectObjects(e, n = !0, r = []) {
            for(let i = 0, s = e.length; i < s; i++)xk(e[i], this, r, n);
            return r.sort(fz), r;
        }
    }
    function fz(t, e) {
        return t.distance - e.distance;
    }
    function xk(t, e, n, r) {
        let i = !0;
        if (t.layers.test(e.layers) && t.raycast(e, n) === !1 && (i = !1), i === !0 && r === !0) {
            const s = t.children;
            for(let o = 0, a = s.length; o < a; o++)xk(s[o], e, n, !0);
        }
    }
    class bk {
        constructor(e = 1, n = 0, r = 0){
            return this.radius = e, this.phi = n, this.theta = r, this;
        }
        set(e, n, r) {
            return this.radius = e, this.phi = n, this.theta = r, this;
        }
        copy(e) {
            return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this;
        }
        makeSafe() {
            return this.phi = _n(this.phi, 1e-6, Math.PI - 1e-6), this;
        }
        setFromVector3(e) {
            return this.setFromCartesianCoords(e.x, e.y, e.z);
        }
        setFromCartesianCoords(e, n, r) {
            return this.radius = Math.sqrt(e * e + n * n + r * r), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, r), this.phi = Math.acos(_n(n / this.radius, -1, 1))), this;
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    class ove {
        constructor(e = 1, n = 0, r = 0){
            return this.radius = e, this.theta = n, this.y = r, this;
        }
        set(e, n, r) {
            return this.radius = e, this.theta = n, this.y = r, this;
        }
        copy(e) {
            return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this;
        }
        setFromVector3(e) {
            return this.setFromCartesianCoords(e.x, e.y, e.z);
        }
        setFromCartesianCoords(e, n, r) {
            return this.radius = Math.sqrt(e * e + r * r), this.theta = Math.atan2(e, r), this.y = n, this;
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    class z2 {
        constructor(e, n, r, i){
            z2.prototype.isMatrix2 = !0, this.elements = [
                1,
                0,
                0,
                1
            ], e !== void 0 && this.set(e, n, r, i);
        }
        identity() {
            return this.set(1, 0, 0, 1), this;
        }
        fromArray(e, n = 0) {
            for(let r = 0; r < 4; r++)this.elements[r] = e[r + n];
            return this;
        }
        set(e, n, r, i) {
            const s = this.elements;
            return s[0] = e, s[2] = n, s[1] = r, s[3] = i, this;
        }
    }
    const hz = new ot;
    class ave {
        constructor(e = new ot(1 / 0, 1 / 0), n = new ot(-1 / 0, -1 / 0)){
            this.isBox2 = !0, this.min = e, this.max = n;
        }
        set(e, n) {
            return this.min.copy(e), this.max.copy(n), this;
        }
        setFromPoints(e) {
            this.makeEmpty();
            for(let n = 0, r = e.length; n < r; n++)this.expandByPoint(e[n]);
            return this;
        }
        setFromCenterAndSize(e, n) {
            const r = hz.copy(n).multiplyScalar(.5);
            return this.min.copy(e).sub(r), this.max.copy(e).add(r), this;
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            return this.min.copy(e.min), this.max.copy(e.max), this;
        }
        makeEmpty() {
            return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
        }
        isEmpty() {
            return this.max.x < this.min.x || this.max.y < this.min.y;
        }
        getCenter(e) {
            return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
        }
        getSize(e) {
            return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
        }
        expandByPoint(e) {
            return this.min.min(e), this.max.max(e), this;
        }
        expandByVector(e) {
            return this.min.sub(e), this.max.add(e), this;
        }
        expandByScalar(e) {
            return this.min.addScalar(-e), this.max.addScalar(e), this;
        }
        containsPoint(e) {
            return e.x >= this.min.x && e.x <= this.max.x && e.y >= this.min.y && e.y <= this.max.y;
        }
        containsBox(e) {
            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y;
        }
        getParameter(e, n) {
            return n.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y));
        }
        intersectsBox(e) {
            return e.max.x >= this.min.x && e.min.x <= this.max.x && e.max.y >= this.min.y && e.min.y <= this.max.y;
        }
        clampPoint(e, n) {
            return n.copy(e).clamp(this.min, this.max);
        }
        distanceToPoint(e) {
            return this.clampPoint(e, hz).distanceTo(e);
        }
        intersect(e) {
            return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
        }
        union(e) {
            return this.min.min(e.min), this.max.max(e.max), this;
        }
        translate(e) {
            return this.min.add(e), this.max.add(e), this;
        }
        equals(e) {
            return e.min.equals(this.min) && e.max.equals(this.max);
        }
    }
    const pz = new ye, kS = new ye;
    class lve {
        constructor(e = new ye, n = new ye){
            this.start = e, this.end = n;
        }
        set(e, n) {
            return this.start.copy(e), this.end.copy(n), this;
        }
        copy(e) {
            return this.start.copy(e.start), this.end.copy(e.end), this;
        }
        getCenter(e) {
            return e.addVectors(this.start, this.end).multiplyScalar(.5);
        }
        delta(e) {
            return e.subVectors(this.end, this.start);
        }
        distanceSq() {
            return this.start.distanceToSquared(this.end);
        }
        distance() {
            return this.start.distanceTo(this.end);
        }
        at(e, n) {
            return this.delta(n).multiplyScalar(e).add(this.start);
        }
        closestPointToPointParameter(e, n) {
            pz.subVectors(e, this.start), kS.subVectors(this.end, this.start);
            const r = kS.dot(kS);
            let s = kS.dot(pz) / r;
            return n && (s = _n(s, 0, 1)), s;
        }
        closestPointToPoint(e, n, r) {
            const i = this.closestPointToPointParameter(e, n);
            return this.delta(r).multiplyScalar(i).add(this.start);
        }
        applyMatrix4(e) {
            return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
        }
        equals(e) {
            return e.start.equals(this.start) && e.end.equals(this.end);
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    const mz = new ye;
    class cve extends ir {
        constructor(e, n){
            super(), this.light = e, this.matrixAutoUpdate = !1, this.color = n, this.type = "SpotLightHelper";
            const r = new Fn, i = [
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                1,
                0,
                1,
                0,
                0,
                0,
                -1,
                0,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                -1,
                1
            ];
            for(let o = 0, a = 1, l = 32; o < l; o++, a++){
                const c = o / l * Math.PI * 2, u = a / l * Math.PI * 2;
                i.push(Math.cos(c), Math.sin(c), 1, Math.cos(u), Math.sin(u), 1);
            }
            r.setAttribute("position", new Gt(i, 3));
            const s = new No({
                fog: !1,
                toneMapped: !1
            });
            this.cone = new Qc(r, s), this.add(this.cone), this.update();
        }
        dispose() {
            this.cone.geometry.dispose(), this.cone.material.dispose();
        }
        update() {
            this.light.updateWorldMatrix(!0, !1), this.light.target.updateWorldMatrix(!0, !1), this.parent ? (this.parent.updateWorldMatrix(!0), this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)) : this.matrix.copy(this.light.matrixWorld), this.matrixWorld.copy(this.light.matrixWorld);
            const e = this.light.distance ? this.light.distance : 1e3, n = e * Math.tan(this.light.angle);
            this.cone.scale.set(n, n, e), mz.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(mz), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
        }
    }
    const yf = new ye, OS = new fn, yN = new fn;
    class uve extends Qc {
        constructor(e){
            const n = PG(e), r = new Fn, i = [], s = [], o = new Ft(0, 0, 1), a = new Ft(0, 1, 0);
            for(let c = 0; c < n.length; c++){
                const u = n[c];
                u.parent && u.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), s.push(o.r, o.g, o.b), s.push(a.r, a.g, a.b));
            }
            r.setAttribute("position", new Gt(i, 3)), r.setAttribute("color", new Gt(s, 3));
            const l = new No({
                vertexColors: !0,
                depthTest: !1,
                depthWrite: !1,
                toneMapped: !1,
                transparent: !0
            });
            super(r, l), this.isSkeletonHelper = !0, this.type = "SkeletonHelper", this.root = e, this.bones = n, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1;
        }
        updateMatrixWorld(e) {
            const n = this.bones, r = this.geometry, i = r.getAttribute("position");
            yN.copy(this.root.matrixWorld).invert();
            for(let s = 0, o = 0; s < n.length; s++){
                const a = n[s];
                a.parent && a.parent.isBone && (OS.multiplyMatrices(yN, a.matrixWorld), yf.setFromMatrixPosition(OS), i.setXYZ(o, yf.x, yf.y, yf.z), OS.multiplyMatrices(yN, a.parent.matrixWorld), yf.setFromMatrixPosition(OS), i.setXYZ(o + 1, yf.x, yf.y, yf.z), o += 2);
            }
            r.getAttribute("position").needsUpdate = !0, super.updateMatrixWorld(e);
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    function PG(t) {
        const e = [];
        t.isBone === !0 && e.push(t);
        for(let n = 0; n < t.children.length; n++)e.push.apply(e, PG(t.children[n]));
        return e;
    }
    class dve extends zi {
        constructor(e, n, r){
            const i = new vw(n, 4, 2), s = new sh({
                wireframe: !0,
                fog: !1,
                toneMapped: !1
            });
            super(i, s), this.light = e, this.color = r, this.type = "PointLightHelper", this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
        update() {
            this.light.updateWorldMatrix(!0, !1), this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
        }
    }
    const fve = new ye, gz = new Ft, yz = new Ft;
    class hve extends ir {
        constructor(e, n, r){
            super(), this.light = e, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = r, this.type = "HemisphereLightHelper";
            const i = new yw(n);
            i.rotateY(Math.PI * .5), this.material = new sh({
                wireframe: !0,
                fog: !1,
                toneMapped: !1
            }), this.color === void 0 && (this.material.vertexColors = !0);
            const s = i.getAttribute("position"), o = new Float32Array(s.count * 3);
            i.setAttribute("color", new wr(o, 3)), this.add(new zi(i, this.material)), this.update();
        }
        dispose() {
            this.children[0].geometry.dispose(), this.children[0].material.dispose();
        }
        update() {
            const e = this.children[0];
            if (this.color !== void 0) this.material.color.set(this.color);
            else {
                const n = e.geometry.getAttribute("color");
                gz.copy(this.light.color), yz.copy(this.light.groundColor);
                for(let r = 0, i = n.count; r < i; r++){
                    const s = r < i / 2 ? gz : yz;
                    n.setXYZ(r, s.r, s.g, s.b);
                }
                n.needsUpdate = !0;
            }
            this.light.updateWorldMatrix(!0, !1), e.lookAt(fve.setFromMatrixPosition(this.light.matrixWorld).negate());
        }
    }
    class pve extends Qc {
        constructor(e = 10, n = 10, r = 4473924, i = 8947848){
            r = new Ft(r), i = new Ft(i);
            const s = n / 2, o = e / n, a = e / 2, l = [], c = [];
            for(let p = 0, g = 0, x = -a; p <= n; p++, x += o){
                l.push(-a, 0, x, a, 0, x), l.push(x, 0, -a, x, 0, a);
                const S = p === s ? r : i;
                S.toArray(c, g), g += 3, S.toArray(c, g), g += 3, S.toArray(c, g), g += 3, S.toArray(c, g), g += 3;
            }
            const u = new Fn;
            u.setAttribute("position", new Gt(l, 3)), u.setAttribute("color", new Gt(c, 3));
            const f = new No({
                vertexColors: !0,
                toneMapped: !1
            });
            super(u, f), this.type = "GridHelper";
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    class mve extends Qc {
        constructor(e = 10, n = 16, r = 8, i = 64, s = 4473924, o = 8947848){
            s = new Ft(s), o = new Ft(o);
            const a = [], l = [];
            if (n > 1) for(let f = 0; f < n; f++){
                const p = f / n * (Math.PI * 2), g = Math.sin(p) * e, x = Math.cos(p) * e;
                a.push(0, 0, 0), a.push(g, 0, x);
                const S = f & 1 ? s : o;
                l.push(S.r, S.g, S.b), l.push(S.r, S.g, S.b);
            }
            for(let f = 0; f < r; f++){
                const p = f & 1 ? s : o, g = e - e / r * f;
                for(let x = 0; x < i; x++){
                    let S = x / i * (Math.PI * 2), _ = Math.sin(S) * g, b = Math.cos(S) * g;
                    a.push(_, 0, b), l.push(p.r, p.g, p.b), S = (x + 1) / i * (Math.PI * 2), _ = Math.sin(S) * g, b = Math.cos(S) * g, a.push(_, 0, b), l.push(p.r, p.g, p.b);
                }
            }
            const c = new Fn;
            c.setAttribute("position", new Gt(a, 3)), c.setAttribute("color", new Gt(l, 3));
            const u = new No({
                vertexColors: !0,
                toneMapped: !1
            });
            super(c, u), this.type = "PolarGridHelper";
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    const vz = new ye, LS = new ye, xz = new ye;
    class gve extends ir {
        constructor(e, n, r){
            super(), this.light = e, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = r, this.type = "DirectionalLightHelper", n === void 0 && (n = 1);
            let i = new Fn;
            i.setAttribute("position", new Gt([
                -n,
                n,
                0,
                n,
                n,
                0,
                n,
                -n,
                0,
                -n,
                -n,
                0,
                -n,
                n,
                0
            ], 3));
            const s = new No({
                fog: !1,
                toneMapped: !1
            });
            this.lightPlane = new eh(i, s), this.add(this.lightPlane), i = new Fn, i.setAttribute("position", new Gt([
                0,
                0,
                0,
                0,
                0,
                1
            ], 3)), this.targetLine = new eh(i, s), this.add(this.targetLine), this.update();
        }
        dispose() {
            this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
        }
        update() {
            this.light.updateWorldMatrix(!0, !1), this.light.target.updateWorldMatrix(!0, !1), vz.setFromMatrixPosition(this.light.matrixWorld), LS.setFromMatrixPosition(this.light.target.matrixWorld), xz.subVectors(LS, vz), this.lightPlane.lookAt(LS), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(LS), this.targetLine.scale.z = xz.length();
        }
    }
    const DS = new ye, li = new hw;
    class yve extends Qc {
        constructor(e){
            const n = new Fn, r = new No({
                color: 16777215,
                vertexColors: !0,
                toneMapped: !1
            }), i = [], s = [], o = {};
            a("n1", "n2"), a("n2", "n4"), a("n4", "n3"), a("n3", "n1"), a("f1", "f2"), a("f2", "f4"), a("f4", "f3"), a("f3", "f1"), a("n1", "f1"), a("n2", "f2"), a("n3", "f3"), a("n4", "f4"), a("p", "n1"), a("p", "n2"), a("p", "n3"), a("p", "n4"), a("u1", "u2"), a("u2", "u3"), a("u3", "u1"), a("c", "t"), a("p", "c"), a("cn1", "cn2"), a("cn3", "cn4"), a("cf1", "cf2"), a("cf3", "cf4");
            function a(x, S) {
                l(x), l(S);
            }
            function l(x) {
                i.push(0, 0, 0), s.push(0, 0, 0), o[x] === void 0 && (o[x] = []), o[x].push(i.length / 3 - 1);
            }
            n.setAttribute("position", new Gt(i, 3)), n.setAttribute("color", new Gt(s, 3)), super(n, r), this.type = "CameraHelper", this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = o, this.update();
            const c = new Ft(16755200), u = new Ft(16711680), f = new Ft(43775), p = new Ft(16777215), g = new Ft(3355443);
            this.setColors(c, u, f, p, g);
        }
        setColors(e, n, r, i, s) {
            const a = this.geometry.getAttribute("color");
            a.setXYZ(0, e.r, e.g, e.b), a.setXYZ(1, e.r, e.g, e.b), a.setXYZ(2, e.r, e.g, e.b), a.setXYZ(3, e.r, e.g, e.b), a.setXYZ(4, e.r, e.g, e.b), a.setXYZ(5, e.r, e.g, e.b), a.setXYZ(6, e.r, e.g, e.b), a.setXYZ(7, e.r, e.g, e.b), a.setXYZ(8, e.r, e.g, e.b), a.setXYZ(9, e.r, e.g, e.b), a.setXYZ(10, e.r, e.g, e.b), a.setXYZ(11, e.r, e.g, e.b), a.setXYZ(12, e.r, e.g, e.b), a.setXYZ(13, e.r, e.g, e.b), a.setXYZ(14, e.r, e.g, e.b), a.setXYZ(15, e.r, e.g, e.b), a.setXYZ(16, e.r, e.g, e.b), a.setXYZ(17, e.r, e.g, e.b), a.setXYZ(18, e.r, e.g, e.b), a.setXYZ(19, e.r, e.g, e.b), a.setXYZ(20, e.r, e.g, e.b), a.setXYZ(21, e.r, e.g, e.b), a.setXYZ(22, e.r, e.g, e.b), a.setXYZ(23, e.r, e.g, e.b), a.setXYZ(24, n.r, n.g, n.b), a.setXYZ(25, n.r, n.g, n.b), a.setXYZ(26, n.r, n.g, n.b), a.setXYZ(27, n.r, n.g, n.b), a.setXYZ(28, n.r, n.g, n.b), a.setXYZ(29, n.r, n.g, n.b), a.setXYZ(30, n.r, n.g, n.b), a.setXYZ(31, n.r, n.g, n.b), a.setXYZ(32, r.r, r.g, r.b), a.setXYZ(33, r.r, r.g, r.b), a.setXYZ(34, r.r, r.g, r.b), a.setXYZ(35, r.r, r.g, r.b), a.setXYZ(36, r.r, r.g, r.b), a.setXYZ(37, r.r, r.g, r.b), a.setXYZ(38, i.r, i.g, i.b), a.setXYZ(39, i.r, i.g, i.b), a.setXYZ(40, s.r, s.g, s.b), a.setXYZ(41, s.r, s.g, s.b), a.setXYZ(42, s.r, s.g, s.b), a.setXYZ(43, s.r, s.g, s.b), a.setXYZ(44, s.r, s.g, s.b), a.setXYZ(45, s.r, s.g, s.b), a.setXYZ(46, s.r, s.g, s.b), a.setXYZ(47, s.r, s.g, s.b), a.setXYZ(48, s.r, s.g, s.b), a.setXYZ(49, s.r, s.g, s.b), a.needsUpdate = !0;
        }
        update() {
            const e = this.geometry, n = this.pointMap, r = 1, i = 1;
            li.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);
            const s = this.camera.coordinateSystem === Ql ? -1 : 0;
            _i("c", n, e, li, 0, 0, s), _i("t", n, e, li, 0, 0, 1), _i("n1", n, e, li, -1, -1, s), _i("n2", n, e, li, r, -1, s), _i("n3", n, e, li, -1, i, s), _i("n4", n, e, li, r, i, s), _i("f1", n, e, li, -1, -1, 1), _i("f2", n, e, li, r, -1, 1), _i("f3", n, e, li, -1, i, 1), _i("f4", n, e, li, r, i, 1), _i("u1", n, e, li, r * .7, i * 1.1, s), _i("u2", n, e, li, -1 * .7, i * 1.1, s), _i("u3", n, e, li, 0, i * 2, s), _i("cf1", n, e, li, -1, 0, 1), _i("cf2", n, e, li, r, 0, 1), _i("cf3", n, e, li, 0, -1, 1), _i("cf4", n, e, li, 0, i, 1), _i("cn1", n, e, li, -1, 0, s), _i("cn2", n, e, li, r, 0, s), _i("cn3", n, e, li, 0, -1, s), _i("cn4", n, e, li, 0, i, s), e.getAttribute("position").needsUpdate = !0;
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    function _i(t, e, n, r, i, s, o) {
        DS.set(i, s, o).unproject(r);
        const a = e[t];
        if (a !== void 0) {
            const l = n.getAttribute("position");
            for(let c = 0, u = a.length; c < u; c++)l.setXYZ(a[c], DS.x, DS.y, DS.z);
        }
    }
    const FS = new Co;
    class vve extends Qc {
        constructor(e, n = 16776960){
            const r = new Uint16Array([
                0,
                1,
                1,
                2,
                2,
                3,
                3,
                0,
                4,
                5,
                5,
                6,
                6,
                7,
                7,
                4,
                0,
                4,
                1,
                5,
                2,
                6,
                3,
                7
            ]), i = new Float32Array(8 * 3), s = new Fn;
            s.setIndex(new wr(r, 1)), s.setAttribute("position", new wr(i, 3)), super(s, new No({
                color: n,
                toneMapped: !1
            })), this.object = e, this.type = "BoxHelper", this.matrixAutoUpdate = !1, this.update();
        }
        update(e) {
            if (e !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && FS.setFromObject(this.object), FS.isEmpty()) return;
            const n = FS.min, r = FS.max, i = this.geometry.attributes.position, s = i.array;
            s[0] = r.x, s[1] = r.y, s[2] = r.z, s[3] = n.x, s[4] = r.y, s[5] = r.z, s[6] = n.x, s[7] = n.y, s[8] = r.z, s[9] = r.x, s[10] = n.y, s[11] = r.z, s[12] = r.x, s[13] = r.y, s[14] = n.z, s[15] = n.x, s[16] = r.y, s[17] = n.z, s[18] = n.x, s[19] = n.y, s[20] = n.z, s[21] = r.x, s[22] = n.y, s[23] = n.z, i.needsUpdate = !0, this.geometry.computeBoundingSphere();
        }
        setFromObject(e) {
            return this.object = e, this.update(), this;
        }
        copy(e, n) {
            return super.copy(e, n), this.object = e.object, this;
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    class xve extends Qc {
        constructor(e, n = 16776960){
            const r = new Uint16Array([
                0,
                1,
                1,
                2,
                2,
                3,
                3,
                0,
                4,
                5,
                5,
                6,
                6,
                7,
                7,
                4,
                0,
                4,
                1,
                5,
                2,
                6,
                3,
                7
            ]), i = [
                1,
                1,
                1,
                -1,
                1,
                1,
                -1,
                -1,
                1,
                1,
                -1,
                1,
                1,
                1,
                -1,
                -1,
                1,
                -1,
                -1,
                -1,
                -1,
                1,
                -1,
                -1
            ], s = new Fn;
            s.setIndex(new wr(r, 1)), s.setAttribute("position", new Gt(i, 3)), super(s, new No({
                color: n,
                toneMapped: !1
            })), this.box = e, this.type = "Box3Helper", this.geometry.computeBoundingSphere();
        }
        updateMatrixWorld(e) {
            const n = this.box;
            n.isEmpty() || (n.getCenter(this.position), n.getSize(this.scale), this.scale.multiplyScalar(.5), super.updateMatrixWorld(e));
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    class bve extends eh {
        constructor(e, n = 1, r = 16776960){
            const i = r, s = [
                1,
                -1,
                0,
                -1,
                1,
                0,
                -1,
                -1,
                0,
                1,
                1,
                0,
                -1,
                1,
                0,
                -1,
                -1,
                0,
                1,
                -1,
                0,
                1,
                1,
                0
            ], o = new Fn;
            o.setAttribute("position", new Gt(s, 3)), o.computeBoundingSphere(), super(o, new No({
                color: i,
                toneMapped: !1
            })), this.type = "PlaneHelper", this.plane = e, this.size = n;
            const a = [
                1,
                1,
                0,
                -1,
                1,
                0,
                -1,
                -1,
                0,
                1,
                1,
                0,
                -1,
                -1,
                0,
                1,
                -1,
                0
            ], l = new Fn;
            l.setAttribute("position", new Gt(a, 3)), l.computeBoundingSphere(), this.add(new zi(l, new sh({
                color: i,
                opacity: .2,
                transparent: !0,
                depthWrite: !1,
                toneMapped: !1
            })));
        }
        updateMatrixWorld(e) {
            this.position.set(0, 0, 0), this.scale.set(.5 * this.size, .5 * this.size, 1), this.lookAt(this.plane.normal), this.translateZ(-this.plane.constant), super.updateMatrixWorld(e);
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose(), this.children[0].geometry.dispose(), this.children[0].material.dispose();
        }
    }
    const bz = new ye;
    let jS, vN;
    class wve extends ir {
        constructor(e = new ye(0, 0, 1), n = new ye(0, 0, 0), r = 1, i = 16776960, s = r * .2, o = s * .2){
            super(), this.type = "ArrowHelper", jS === void 0 && (jS = new Fn, jS.setAttribute("position", new Gt([
                0,
                0,
                0,
                0,
                1,
                0
            ], 3)), vN = new vv(0, .5, 1, 5, 1), vN.translate(0, -.5, 0)), this.position.copy(n), this.line = new eh(jS, new No({
                color: i,
                toneMapped: !1
            })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new zi(vN, new sh({
                color: i,
                toneMapped: !1
            })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(r, s, o);
        }
        setDirection(e) {
            if (e.y > .99999) this.quaternion.set(0, 0, 0, 1);
            else if (e.y < -.99999) this.quaternion.set(1, 0, 0, 0);
            else {
                bz.set(e.z, 0, -e.x).normalize();
                const n = Math.acos(e.y);
                this.quaternion.setFromAxisAngle(bz, n);
            }
        }
        setLength(e, n = e * .2, r = n * .2) {
            this.line.scale.set(1, Math.max(1e-4, e - n), 1), this.line.updateMatrix(), this.cone.scale.set(r, n, r), this.cone.position.y = e, this.cone.updateMatrix();
        }
        setColor(e) {
            this.line.material.color.set(e), this.cone.material.color.set(e);
        }
        copy(e) {
            return super.copy(e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this;
        }
        dispose() {
            this.line.geometry.dispose(), this.line.material.dispose(), this.cone.geometry.dispose(), this.cone.material.dispose();
        }
    }
    class _ve extends Qc {
        constructor(e = 1){
            const n = [
                0,
                0,
                0,
                e,
                0,
                0,
                0,
                0,
                0,
                0,
                e,
                0,
                0,
                0,
                0,
                0,
                0,
                e
            ], r = [
                1,
                0,
                0,
                1,
                .6,
                0,
                0,
                1,
                0,
                .6,
                1,
                0,
                0,
                0,
                1,
                0,
                .6,
                1
            ], i = new Fn;
            i.setAttribute("position", new Gt(n, 3)), i.setAttribute("color", new Gt(r, 3));
            const s = new No({
                vertexColors: !0,
                toneMapped: !1
            });
            super(i, s), this.type = "AxesHelper";
        }
        setColors(e, n, r) {
            const i = new Ft, s = this.geometry.attributes.color.array;
            return i.set(e), i.toArray(s, 0), i.toArray(s, 3), i.set(n), i.toArray(s, 6), i.toArray(s, 9), i.set(r), i.toArray(s, 12), i.toArray(s, 15), this.geometry.attributes.color.needsUpdate = !0, this;
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    class Sve {
        constructor(){
            this.type = "ShapePath", this.color = new Ft, this.subPaths = [], this.currentPath = null;
        }
        moveTo(e, n) {
            return this.currentPath = new Cb, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, n), this;
        }
        lineTo(e, n) {
            return this.currentPath.lineTo(e, n), this;
        }
        quadraticCurveTo(e, n, r, i) {
            return this.currentPath.quadraticCurveTo(e, n, r, i), this;
        }
        bezierCurveTo(e, n, r, i, s, o) {
            return this.currentPath.bezierCurveTo(e, n, r, i, s, o), this;
        }
        splineThru(e) {
            return this.currentPath.splineThru(e), this;
        }
        toShapes(e) {
            function n(b) {
                const M = [];
                for(let E = 0, T = b.length; E < T; E++){
                    const k = b[E], N = new Hp;
                    N.curves = k.curves, M.push(N);
                }
                return M;
            }
            function r(b, M) {
                const E = M.length;
                let T = !1;
                for(let k = E - 1, N = 0; N < E; k = N++){
                    let D = M[k], L = M[N], R = L.x - D.x, A = L.y - D.y;
                    if (Math.abs(A) > Number.EPSILON) {
                        if (A < 0 && (D = M[N], R = -R, L = M[k], A = -A), b.y < D.y || b.y > L.y) continue;
                        if (b.y === D.y) {
                            if (b.x === D.x) return !0;
                        } else {
                            const P = A * (b.x - D.x) - R * (b.y - D.y);
                            if (P === 0) return !0;
                            if (P < 0) continue;
                            T = !T;
                        }
                    } else {
                        if (b.y !== D.y) continue;
                        if (L.x <= b.x && b.x <= D.x || D.x <= b.x && b.x <= L.x) return !0;
                    }
                }
                return T;
            }
            const i = Wc.isClockWise, s = this.subPaths;
            if (s.length === 0) return [];
            let o, a, l;
            const c = [];
            if (s.length === 1) return a = s[0], l = new Hp, l.curves = a.curves, c.push(l), c;
            let u = !i(s[0].getPoints());
            u = e ? !u : u;
            const f = [], p = [];
            let g = [], x = 0, S;
            p[x] = void 0, g[x] = [];
            for(let b = 0, M = s.length; b < M; b++)a = s[b], S = a.getPoints(), o = i(S), o = e ? !o : o, o ? (!u && p[x] && x++, p[x] = {
                s: new Hp,
                p: S
            }, p[x].s.curves = a.curves, u && x++, g[x] = []) : g[x].push({
                h: a,
                p: S[0]
            });
            if (!p[0]) return n(s);
            if (p.length > 1) {
                let b = !1, M = 0;
                for(let E = 0, T = p.length; E < T; E++)f[E] = [];
                for(let E = 0, T = p.length; E < T; E++){
                    const k = g[E];
                    for(let N = 0; N < k.length; N++){
                        const D = k[N];
                        let L = !0;
                        for(let R = 0; R < p.length; R++)r(D.p, p[R].p) && (E !== R && M++, L ? (L = !1, f[R].push(D)) : b = !0);
                        L && f[E].push(D);
                    }
                }
                M > 0 && b === !1 && (g = f);
            }
            let _;
            for(let b = 0, M = p.length; b < M; b++){
                l = p[b].s, c.push(l), _ = g[b];
                for(let E = 0, T = _.length; E < T; E++)l.holes.push(_[E].h);
            }
            return c;
        }
    }
    class Eve extends Jc {
        constructor(e, n = null){
            super(), this.object = e, this.domElement = n, this.enabled = !0, this.state = -1, this.keys = {}, this.mouseButtons = {
                LEFT: null,
                MIDDLE: null,
                RIGHT: null
            }, this.touches = {
                ONE: null,
                TWO: null
            };
        }
        connect() {}
        disconnect() {}
        dispose() {}
        update() {}
    }
    function Mve(t, e) {
        const n = t.image && t.image.width ? t.image.width / t.image.height : 1;
        return n > e ? (t.repeat.x = 1, t.repeat.y = n / e, t.offset.x = 0, t.offset.y = (1 - t.repeat.y) / 2) : (t.repeat.x = e / n, t.repeat.y = 1, t.offset.x = (1 - t.repeat.x) / 2, t.offset.y = 0), t;
    }
    function Tve(t, e) {
        const n = t.image && t.image.width ? t.image.width / t.image.height : 1;
        return n > e ? (t.repeat.x = e / n, t.repeat.y = 1, t.offset.x = (1 - t.repeat.x) / 2, t.offset.y = 0) : (t.repeat.x = 1, t.repeat.y = n / e, t.offset.x = 0, t.offset.y = (1 - t.repeat.y) / 2), t;
    }
    function Cve(t) {
        return t.repeat.x = 1, t.repeat.y = 1, t.offset.x = 0, t.offset.y = 0, t;
    }
    function wk(t, e, n, r) {
        const i = Ive(r);
        switch(n){
            case o2:
                return t * e;
            case l2:
                return t * e;
            case c2:
                return t * e * 2;
            case WT:
                return t * e / i.components * i.byteLength;
            case dw:
                return t * e / i.components * i.byteLength;
            case u2:
                return t * e * 2 / i.components * i.byteLength;
            case qT:
                return t * e * 2 / i.components * i.byteLength;
            case a2:
                return t * e * 3 / i.components * i.byteLength;
            case Hs:
                return t * e * 4 / i.components * i.byteLength;
            case HT:
                return t * e * 4 / i.components * i.byteLength;
            case M0:
            case T0:
                return Math.floor((t + 3) / 4) * Math.floor((e + 3) / 4) * 8;
            case C0:
            case I0:
                return Math.floor((t + 3) / 4) * Math.floor((e + 3) / 4) * 16;
            case aM:
            case cM:
                return Math.max(t, 16) * Math.max(e, 8) / 4;
            case oM:
            case lM:
                return Math.max(t, 8) * Math.max(e, 8) / 2;
            case uM:
            case dM:
                return Math.floor((t + 3) / 4) * Math.floor((e + 3) / 4) * 8;
            case fM:
                return Math.floor((t + 3) / 4) * Math.floor((e + 3) / 4) * 16;
            case hM:
                return Math.floor((t + 3) / 4) * Math.floor((e + 3) / 4) * 16;
            case pM:
                return Math.floor((t + 4) / 5) * Math.floor((e + 3) / 4) * 16;
            case mM:
                return Math.floor((t + 4) / 5) * Math.floor((e + 4) / 5) * 16;
            case gM:
                return Math.floor((t + 5) / 6) * Math.floor((e + 4) / 5) * 16;
            case yM:
                return Math.floor((t + 5) / 6) * Math.floor((e + 5) / 6) * 16;
            case vM:
                return Math.floor((t + 7) / 8) * Math.floor((e + 4) / 5) * 16;
            case xM:
                return Math.floor((t + 7) / 8) * Math.floor((e + 5) / 6) * 16;
            case bM:
                return Math.floor((t + 7) / 8) * Math.floor((e + 7) / 8) * 16;
            case wM:
                return Math.floor((t + 9) / 10) * Math.floor((e + 4) / 5) * 16;
            case _M:
                return Math.floor((t + 9) / 10) * Math.floor((e + 5) / 6) * 16;
            case SM:
                return Math.floor((t + 9) / 10) * Math.floor((e + 7) / 8) * 16;
            case EM:
                return Math.floor((t + 9) / 10) * Math.floor((e + 9) / 10) * 16;
            case MM:
                return Math.floor((t + 11) / 12) * Math.floor((e + 9) / 10) * 16;
            case TM:
                return Math.floor((t + 11) / 12) * Math.floor((e + 11) / 12) * 16;
            case R0:
            case CM:
            case IM:
                return Math.ceil(t / 4) * Math.ceil(e / 4) * 16;
            case d2:
            case RM:
                return Math.ceil(t / 4) * Math.ceil(e / 4) * 8;
            case AM:
            case NM:
                return Math.ceil(t / 4) * Math.ceil(e / 4) * 16;
        }
        throw new Error(`Unable to determine texture byte length for ${n} format.`);
    }
    function Ive(t) {
        switch(t){
            case sc:
            case r2:
                return {
                    byteLength: 1,
                    components: 1
                };
            case Jy:
            case i2:
            case yv:
                return {
                    byteLength: 2,
                    components: 1
                };
            case zT:
            case VT:
                return {
                    byteLength: 2,
                    components: 4
                };
            case yd:
            case UT:
            case na:
                return {
                    byteLength: 4,
                    components: 1
                };
            case s2:
                return {
                    byteLength: 4,
                    components: 3
                };
        }
        throw new Error(`Unknown texture type ${t}.`);
    }
    const Rve = {
        contain: Mve,
        cover: Tve,
        fill: Cve,
        getByteLength: wk
    };
    typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", {
        detail: {
            revision: DT
        }
    }));
    typeof window < "u" && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = DT);
    function kG() {
        let t = null, e = !1, n = null, r = null;
        function i(s, o) {
            n(s, o), r = t.requestAnimationFrame(i);
        }
        return {
            start: function() {
                e !== !0 && n !== null && (r = t.requestAnimationFrame(i), e = !0);
            },
            stop: function() {
                t.cancelAnimationFrame(r), e = !1;
            },
            setAnimationLoop: function(s) {
                n = s;
            },
            setContext: function(s) {
                t = s;
            }
        };
    }
    function Ave(t) {
        const e = new WeakMap;
        function n(a, l) {
            const c = a.array, u = a.usage, f = c.byteLength, p = t.createBuffer();
            t.bindBuffer(l, p), t.bufferData(l, c, u), a.onUploadCallback();
            let g;
            if (c instanceof Float32Array) g = t.FLOAT;
            else if (c instanceof Uint16Array) a.isFloat16BufferAttribute ? g = t.HALF_FLOAT : g = t.UNSIGNED_SHORT;
            else if (c instanceof Int16Array) g = t.SHORT;
            else if (c instanceof Uint32Array) g = t.UNSIGNED_INT;
            else if (c instanceof Int32Array) g = t.INT;
            else if (c instanceof Int8Array) g = t.BYTE;
            else if (c instanceof Uint8Array) g = t.UNSIGNED_BYTE;
            else if (c instanceof Uint8ClampedArray) g = t.UNSIGNED_BYTE;
            else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: " + c);
            return {
                buffer: p,
                type: g,
                bytesPerElement: c.BYTES_PER_ELEMENT,
                version: a.version,
                size: f
            };
        }
        function r(a, l, c) {
            const u = l.array, f = l.updateRanges;
            if (t.bindBuffer(c, a), f.length === 0) t.bufferSubData(c, 0, u);
            else {
                f.sort((g, x)=>g.start - x.start);
                let p = 0;
                for(let g = 1; g < f.length; g++){
                    const x = f[p], S = f[g];
                    S.start <= x.start + x.count + 1 ? x.count = Math.max(x.count, S.start + S.count - x.start) : (++p, f[p] = S);
                }
                f.length = p + 1;
                for(let g = 0, x = f.length; g < x; g++){
                    const S = f[g];
                    t.bufferSubData(c, S.start * u.BYTES_PER_ELEMENT, u, S.start, S.count);
                }
                l.clearUpdateRanges();
            }
            l.onUploadCallback();
        }
        function i(a) {
            return a.isInterleavedBufferAttribute && (a = a.data), e.get(a);
        }
        function s(a) {
            a.isInterleavedBufferAttribute && (a = a.data);
            const l = e.get(a);
            l && (t.deleteBuffer(l.buffer), e.delete(a));
        }
        function o(a, l) {
            if (a.isInterleavedBufferAttribute && (a = a.data), a.isGLBufferAttribute) {
                const u = e.get(a);
                (!u || u.version < a.version) && e.set(a, {
                    buffer: a.buffer,
                    type: a.type,
                    bytesPerElement: a.elementSize,
                    version: a.version
                });
                return;
            }
            const c = e.get(a);
            if (c === void 0) e.set(a, n(a, l));
            else if (c.version < a.version) {
                if (c.size !== a.array.byteLength) throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");
                r(c.buffer, a, l), c.version = a.version;
            }
        }
        return {
            get: i,
            remove: s,
            update: o
        };
    }
    var Nve = `#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`, Pve = `#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`, kve = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`, Ove = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, Lve = `#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`, Dve = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`, Fve = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`, jve = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, Bve = `#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`, Uve = `#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`, zve = `vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`, Vve = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`, Wve = `float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`, qve = `#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`, Hve = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`, $ve = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`, Gve = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`, Xve = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`, Kve = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`, Yve = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`, Zve = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`, Jve = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`, Qve = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`, exe = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`, txe = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`, nxe = `vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`, rxe = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`, ixe = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`, sxe = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`, oxe = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`, axe = "gl_FragColor = linearToOutputTexel( gl_FragColor );", lxe = `vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`, cxe = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`, uxe = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`, dxe = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`, fxe = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`, hxe = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`, pxe = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`, mxe = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`, gxe = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`, yxe = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`, vxe = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`, xxe = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, bxe = `LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`, wxe = `varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`, _xe = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`, Sxe = `#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`, Exe = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`, Mxe = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`, Txe = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`, Cxe = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`, Ixe = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`, Rxe = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`, Axe = `
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`, Nxe = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`, Pxe = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`, kxe = `#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, Oxe = `#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, Lxe = `#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, Dxe = `#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`, Fxe = `#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`, jxe = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`, Bxe = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`, Uxe = `#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, zxe = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`, Vxe = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, Wxe = `#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`, qxe = `#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`, Hxe = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`, $xe = `#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`, Gxe = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`, Xxe = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`, Kxe = `#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`, Yxe = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Zxe = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Jxe = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`, Qxe = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`, e0e = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`, t0e = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`, n0e = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`, r0e = `#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`, i0e = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`, s0e = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`, o0e = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`, a0e = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`, l0e = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`, c0e = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`, u0e = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`, d0e = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, f0e = `#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`, h0e = `#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`, p0e = `#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`, m0e = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`, g0e = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, y0e = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`, v0e = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`, x0e = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`, b0e = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, w0e = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, _0e = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`, S0e = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`, E0e = `#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`, M0e = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`, T0e = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`, C0e = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`, I0e = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`, R0e = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;
    const A0e = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`, N0e = `uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, P0e = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, k0e = `#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, O0e = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, L0e = `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, D0e = `#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`, F0e = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`, j0e = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`, B0e = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`, U0e = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`, z0e = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, V0e = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, W0e = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, q0e = `#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`, H0e = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, $0e = `#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, G0e = `#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, X0e = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`, K0e = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Y0e = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`, Z0e = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`, J0e = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Q0e = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, ebe = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`, tbe = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, nbe = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, rbe = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, ibe = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`, sbe = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, obe = `#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, abe = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`, lbe = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, cbe = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`, Ln = {
        alphahash_fragment: Nve,
        alphahash_pars_fragment: Pve,
        alphamap_fragment: kve,
        alphamap_pars_fragment: Ove,
        alphatest_fragment: Lve,
        alphatest_pars_fragment: Dve,
        aomap_fragment: Fve,
        aomap_pars_fragment: jve,
        batching_pars_vertex: Bve,
        batching_vertex: Uve,
        begin_vertex: zve,
        beginnormal_vertex: Vve,
        bsdfs: Wve,
        iridescence_fragment: qve,
        bumpmap_pars_fragment: Hve,
        clipping_planes_fragment: $ve,
        clipping_planes_pars_fragment: Gve,
        clipping_planes_pars_vertex: Xve,
        clipping_planes_vertex: Kve,
        color_fragment: Yve,
        color_pars_fragment: Zve,
        color_pars_vertex: Jve,
        color_vertex: Qve,
        common: exe,
        cube_uv_reflection_fragment: txe,
        defaultnormal_vertex: nxe,
        displacementmap_pars_vertex: rxe,
        displacementmap_vertex: ixe,
        emissivemap_fragment: sxe,
        emissivemap_pars_fragment: oxe,
        colorspace_fragment: axe,
        colorspace_pars_fragment: lxe,
        envmap_fragment: cxe,
        envmap_common_pars_fragment: uxe,
        envmap_pars_fragment: dxe,
        envmap_pars_vertex: fxe,
        envmap_physical_pars_fragment: Sxe,
        envmap_vertex: hxe,
        fog_vertex: pxe,
        fog_pars_vertex: mxe,
        fog_fragment: gxe,
        fog_pars_fragment: yxe,
        gradientmap_pars_fragment: vxe,
        lightmap_pars_fragment: xxe,
        lights_lambert_fragment: bxe,
        lights_lambert_pars_fragment: wxe,
        lights_pars_begin: _xe,
        lights_toon_fragment: Exe,
        lights_toon_pars_fragment: Mxe,
        lights_phong_fragment: Txe,
        lights_phong_pars_fragment: Cxe,
        lights_physical_fragment: Ixe,
        lights_physical_pars_fragment: Rxe,
        lights_fragment_begin: Axe,
        lights_fragment_maps: Nxe,
        lights_fragment_end: Pxe,
        logdepthbuf_fragment: kxe,
        logdepthbuf_pars_fragment: Oxe,
        logdepthbuf_pars_vertex: Lxe,
        logdepthbuf_vertex: Dxe,
        map_fragment: Fxe,
        map_pars_fragment: jxe,
        map_particle_fragment: Bxe,
        map_particle_pars_fragment: Uxe,
        metalnessmap_fragment: zxe,
        metalnessmap_pars_fragment: Vxe,
        morphinstance_vertex: Wxe,
        morphcolor_vertex: qxe,
        morphnormal_vertex: Hxe,
        morphtarget_pars_vertex: $xe,
        morphtarget_vertex: Gxe,
        normal_fragment_begin: Xxe,
        normal_fragment_maps: Kxe,
        normal_pars_fragment: Yxe,
        normal_pars_vertex: Zxe,
        normal_vertex: Jxe,
        normalmap_pars_fragment: Qxe,
        clearcoat_normal_fragment_begin: e0e,
        clearcoat_normal_fragment_maps: t0e,
        clearcoat_pars_fragment: n0e,
        iridescence_pars_fragment: r0e,
        opaque_fragment: i0e,
        packing: s0e,
        premultiplied_alpha_fragment: o0e,
        project_vertex: a0e,
        dithering_fragment: l0e,
        dithering_pars_fragment: c0e,
        roughnessmap_fragment: u0e,
        roughnessmap_pars_fragment: d0e,
        shadowmap_pars_fragment: f0e,
        shadowmap_pars_vertex: h0e,
        shadowmap_vertex: p0e,
        shadowmask_pars_fragment: m0e,
        skinbase_vertex: g0e,
        skinning_pars_vertex: y0e,
        skinning_vertex: v0e,
        skinnormal_vertex: x0e,
        specularmap_fragment: b0e,
        specularmap_pars_fragment: w0e,
        tonemapping_fragment: _0e,
        tonemapping_pars_fragment: S0e,
        transmission_fragment: E0e,
        transmission_pars_fragment: M0e,
        uv_pars_fragment: T0e,
        uv_pars_vertex: C0e,
        uv_vertex: I0e,
        worldpos_vertex: R0e,
        background_vert: A0e,
        background_frag: N0e,
        backgroundCube_vert: P0e,
        backgroundCube_frag: k0e,
        cube_vert: O0e,
        cube_frag: L0e,
        depth_vert: D0e,
        depth_frag: F0e,
        distanceRGBA_vert: j0e,
        distanceRGBA_frag: B0e,
        equirect_vert: U0e,
        equirect_frag: z0e,
        linedashed_vert: V0e,
        linedashed_frag: W0e,
        meshbasic_vert: q0e,
        meshbasic_frag: H0e,
        meshlambert_vert: $0e,
        meshlambert_frag: G0e,
        meshmatcap_vert: X0e,
        meshmatcap_frag: K0e,
        meshnormal_vert: Y0e,
        meshnormal_frag: Z0e,
        meshphong_vert: J0e,
        meshphong_frag: Q0e,
        meshphysical_vert: ebe,
        meshphysical_frag: tbe,
        meshtoon_vert: nbe,
        meshtoon_frag: rbe,
        points_vert: ibe,
        points_frag: sbe,
        shadow_vert: obe,
        shadow_frag: abe,
        sprite_vert: lbe,
        sprite_frag: cbe
    }, Mt = {
        common: {
            diffuse: {
                value: new Ft(16777215)
            },
            opacity: {
                value: 1
            },
            map: {
                value: null
            },
            mapTransform: {
                value: new Mn
            },
            alphaMap: {
                value: null
            },
            alphaMapTransform: {
                value: new Mn
            },
            alphaTest: {
                value: 0
            }
        },
        specularmap: {
            specularMap: {
                value: null
            },
            specularMapTransform: {
                value: new Mn
            }
        },
        envmap: {
            envMap: {
                value: null
            },
            envMapRotation: {
                value: new Mn
            },
            flipEnvMap: {
                value: -1
            },
            reflectivity: {
                value: 1
            },
            ior: {
                value: 1.5
            },
            refractionRatio: {
                value: .98
            }
        },
        aomap: {
            aoMap: {
                value: null
            },
            aoMapIntensity: {
                value: 1
            },
            aoMapTransform: {
                value: new Mn
            }
        },
        lightmap: {
            lightMap: {
                value: null
            },
            lightMapIntensity: {
                value: 1
            },
            lightMapTransform: {
                value: new Mn
            }
        },
        bumpmap: {
            bumpMap: {
                value: null
            },
            bumpMapTransform: {
                value: new Mn
            },
            bumpScale: {
                value: 1
            }
        },
        normalmap: {
            normalMap: {
                value: null
            },
            normalMapTransform: {
                value: new Mn
            },
            normalScale: {
                value: new ot(1, 1)
            }
        },
        displacementmap: {
            displacementMap: {
                value: null
            },
            displacementMapTransform: {
                value: new Mn
            },
            displacementScale: {
                value: 1
            },
            displacementBias: {
                value: 0
            }
        },
        emissivemap: {
            emissiveMap: {
                value: null
            },
            emissiveMapTransform: {
                value: new Mn
            }
        },
        metalnessmap: {
            metalnessMap: {
                value: null
            },
            metalnessMapTransform: {
                value: new Mn
            }
        },
        roughnessmap: {
            roughnessMap: {
                value: null
            },
            roughnessMapTransform: {
                value: new Mn
            }
        },
        gradientmap: {
            gradientMap: {
                value: null
            }
        },
        fog: {
            fogDensity: {
                value: 25e-5
            },
            fogNear: {
                value: 1
            },
            fogFar: {
                value: 2e3
            },
            fogColor: {
                value: new Ft(16777215)
            }
        },
        lights: {
            ambientLightColor: {
                value: []
            },
            lightProbe: {
                value: []
            },
            directionalLights: {
                value: [],
                properties: {
                    direction: {},
                    color: {}
                }
            },
            directionalLightShadows: {
                value: [],
                properties: {
                    shadowIntensity: 1,
                    shadowBias: {},
                    shadowNormalBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            directionalShadowMap: {
                value: []
            },
            directionalShadowMatrix: {
                value: []
            },
            spotLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    direction: {},
                    distance: {},
                    coneCos: {},
                    penumbraCos: {},
                    decay: {}
                }
            },
            spotLightShadows: {
                value: [],
                properties: {
                    shadowIntensity: 1,
                    shadowBias: {},
                    shadowNormalBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            spotLightMap: {
                value: []
            },
            spotShadowMap: {
                value: []
            },
            spotLightMatrix: {
                value: []
            },
            pointLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    decay: {},
                    distance: {}
                }
            },
            pointLightShadows: {
                value: [],
                properties: {
                    shadowIntensity: 1,
                    shadowBias: {},
                    shadowNormalBias: {},
                    shadowRadius: {},
                    shadowMapSize: {},
                    shadowCameraNear: {},
                    shadowCameraFar: {}
                }
            },
            pointShadowMap: {
                value: []
            },
            pointShadowMatrix: {
                value: []
            },
            hemisphereLights: {
                value: [],
                properties: {
                    direction: {},
                    skyColor: {},
                    groundColor: {}
                }
            },
            rectAreaLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    width: {},
                    height: {}
                }
            },
            ltc_1: {
                value: null
            },
            ltc_2: {
                value: null
            }
        },
        points: {
            diffuse: {
                value: new Ft(16777215)
            },
            opacity: {
                value: 1
            },
            size: {
                value: 1
            },
            scale: {
                value: 1
            },
            map: {
                value: null
            },
            alphaMap: {
                value: null
            },
            alphaMapTransform: {
                value: new Mn
            },
            alphaTest: {
                value: 0
            },
            uvTransform: {
                value: new Mn
            }
        },
        sprite: {
            diffuse: {
                value: new Ft(16777215)
            },
            opacity: {
                value: 1
            },
            center: {
                value: new ot(.5, .5)
            },
            rotation: {
                value: 0
            },
            map: {
                value: null
            },
            mapTransform: {
                value: new Mn
            },
            alphaMap: {
                value: null
            },
            alphaMapTransform: {
                value: new Mn
            },
            alphaTest: {
                value: 0
            }
        }
    }, Gl = {
        basic: {
            uniforms: xo([
                Mt.common,
                Mt.specularmap,
                Mt.envmap,
                Mt.aomap,
                Mt.lightmap,
                Mt.fog
            ]),
            vertexShader: Ln.meshbasic_vert,
            fragmentShader: Ln.meshbasic_frag
        },
        lambert: {
            uniforms: xo([
                Mt.common,
                Mt.specularmap,
                Mt.envmap,
                Mt.aomap,
                Mt.lightmap,
                Mt.emissivemap,
                Mt.bumpmap,
                Mt.normalmap,
                Mt.displacementmap,
                Mt.fog,
                Mt.lights,
                {
                    emissive: {
                        value: new Ft(0)
                    }
                }
            ]),
            vertexShader: Ln.meshlambert_vert,
            fragmentShader: Ln.meshlambert_frag
        },
        phong: {
            uniforms: xo([
                Mt.common,
                Mt.specularmap,
                Mt.envmap,
                Mt.aomap,
                Mt.lightmap,
                Mt.emissivemap,
                Mt.bumpmap,
                Mt.normalmap,
                Mt.displacementmap,
                Mt.fog,
                Mt.lights,
                {
                    emissive: {
                        value: new Ft(0)
                    },
                    specular: {
                        value: new Ft(1118481)
                    },
                    shininess: {
                        value: 30
                    }
                }
            ]),
            vertexShader: Ln.meshphong_vert,
            fragmentShader: Ln.meshphong_frag
        },
        standard: {
            uniforms: xo([
                Mt.common,
                Mt.envmap,
                Mt.aomap,
                Mt.lightmap,
                Mt.emissivemap,
                Mt.bumpmap,
                Mt.normalmap,
                Mt.displacementmap,
                Mt.roughnessmap,
                Mt.metalnessmap,
                Mt.fog,
                Mt.lights,
                {
                    emissive: {
                        value: new Ft(0)
                    },
                    roughness: {
                        value: 1
                    },
                    metalness: {
                        value: 0
                    },
                    envMapIntensity: {
                        value: 1
                    }
                }
            ]),
            vertexShader: Ln.meshphysical_vert,
            fragmentShader: Ln.meshphysical_frag
        },
        toon: {
            uniforms: xo([
                Mt.common,
                Mt.aomap,
                Mt.lightmap,
                Mt.emissivemap,
                Mt.bumpmap,
                Mt.normalmap,
                Mt.displacementmap,
                Mt.gradientmap,
                Mt.fog,
                Mt.lights,
                {
                    emissive: {
                        value: new Ft(0)
                    }
                }
            ]),
            vertexShader: Ln.meshtoon_vert,
            fragmentShader: Ln.meshtoon_frag
        },
        matcap: {
            uniforms: xo([
                Mt.common,
                Mt.bumpmap,
                Mt.normalmap,
                Mt.displacementmap,
                Mt.fog,
                {
                    matcap: {
                        value: null
                    }
                }
            ]),
            vertexShader: Ln.meshmatcap_vert,
            fragmentShader: Ln.meshmatcap_frag
        },
        points: {
            uniforms: xo([
                Mt.points,
                Mt.fog
            ]),
            vertexShader: Ln.points_vert,
            fragmentShader: Ln.points_frag
        },
        dashed: {
            uniforms: xo([
                Mt.common,
                Mt.fog,
                {
                    scale: {
                        value: 1
                    },
                    dashSize: {
                        value: 1
                    },
                    totalSize: {
                        value: 2
                    }
                }
            ]),
            vertexShader: Ln.linedashed_vert,
            fragmentShader: Ln.linedashed_frag
        },
        depth: {
            uniforms: xo([
                Mt.common,
                Mt.displacementmap
            ]),
            vertexShader: Ln.depth_vert,
            fragmentShader: Ln.depth_frag
        },
        normal: {
            uniforms: xo([
                Mt.common,
                Mt.bumpmap,
                Mt.normalmap,
                Mt.displacementmap,
                {
                    opacity: {
                        value: 1
                    }
                }
            ]),
            vertexShader: Ln.meshnormal_vert,
            fragmentShader: Ln.meshnormal_frag
        },
        sprite: {
            uniforms: xo([
                Mt.sprite,
                Mt.fog
            ]),
            vertexShader: Ln.sprite_vert,
            fragmentShader: Ln.sprite_frag
        },
        background: {
            uniforms: {
                uvTransform: {
                    value: new Mn
                },
                t2D: {
                    value: null
                },
                backgroundIntensity: {
                    value: 1
                }
            },
            vertexShader: Ln.background_vert,
            fragmentShader: Ln.background_frag
        },
        backgroundCube: {
            uniforms: {
                envMap: {
                    value: null
                },
                flipEnvMap: {
                    value: -1
                },
                backgroundBlurriness: {
                    value: 0
                },
                backgroundIntensity: {
                    value: 1
                },
                backgroundRotation: {
                    value: new Mn
                }
            },
            vertexShader: Ln.backgroundCube_vert,
            fragmentShader: Ln.backgroundCube_frag
        },
        cube: {
            uniforms: {
                tCube: {
                    value: null
                },
                tFlip: {
                    value: -1
                },
                opacity: {
                    value: 1
                }
            },
            vertexShader: Ln.cube_vert,
            fragmentShader: Ln.cube_frag
        },
        equirect: {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: Ln.equirect_vert,
            fragmentShader: Ln.equirect_frag
        },
        distanceRGBA: {
            uniforms: xo([
                Mt.common,
                Mt.displacementmap,
                {
                    referencePosition: {
                        value: new ye
                    },
                    nearDistance: {
                        value: 1
                    },
                    farDistance: {
                        value: 1e3
                    }
                }
            ]),
            vertexShader: Ln.distanceRGBA_vert,
            fragmentShader: Ln.distanceRGBA_frag
        },
        shadow: {
            uniforms: xo([
                Mt.lights,
                Mt.fog,
                {
                    color: {
                        value: new Ft(0)
                    },
                    opacity: {
                        value: 1
                    }
                }
            ]),
            vertexShader: Ln.shadow_vert,
            fragmentShader: Ln.shadow_frag
        }
    };
    Gl.physical = {
        uniforms: xo([
            Gl.standard.uniforms,
            {
                clearcoat: {
                    value: 0
                },
                clearcoatMap: {
                    value: null
                },
                clearcoatMapTransform: {
                    value: new Mn
                },
                clearcoatNormalMap: {
                    value: null
                },
                clearcoatNormalMapTransform: {
                    value: new Mn
                },
                clearcoatNormalScale: {
                    value: new ot(1, 1)
                },
                clearcoatRoughness: {
                    value: 0
                },
                clearcoatRoughnessMap: {
                    value: null
                },
                clearcoatRoughnessMapTransform: {
                    value: new Mn
                },
                dispersion: {
                    value: 0
                },
                iridescence: {
                    value: 0
                },
                iridescenceMap: {
                    value: null
                },
                iridescenceMapTransform: {
                    value: new Mn
                },
                iridescenceIOR: {
                    value: 1.3
                },
                iridescenceThicknessMinimum: {
                    value: 100
                },
                iridescenceThicknessMaximum: {
                    value: 400
                },
                iridescenceThicknessMap: {
                    value: null
                },
                iridescenceThicknessMapTransform: {
                    value: new Mn
                },
                sheen: {
                    value: 0
                },
                sheenColor: {
                    value: new Ft(0)
                },
                sheenColorMap: {
                    value: null
                },
                sheenColorMapTransform: {
                    value: new Mn
                },
                sheenRoughness: {
                    value: 1
                },
                sheenRoughnessMap: {
                    value: null
                },
                sheenRoughnessMapTransform: {
                    value: new Mn
                },
                transmission: {
                    value: 0
                },
                transmissionMap: {
                    value: null
                },
                transmissionMapTransform: {
                    value: new Mn
                },
                transmissionSamplerSize: {
                    value: new ot
                },
                transmissionSamplerMap: {
                    value: null
                },
                thickness: {
                    value: 0
                },
                thicknessMap: {
                    value: null
                },
                thicknessMapTransform: {
                    value: new Mn
                },
                attenuationDistance: {
                    value: 0
                },
                attenuationColor: {
                    value: new Ft(0)
                },
                specularColor: {
                    value: new Ft(1, 1, 1)
                },
                specularColorMap: {
                    value: null
                },
                specularColorMapTransform: {
                    value: new Mn
                },
                specularIntensity: {
                    value: 1
                },
                specularIntensityMap: {
                    value: null
                },
                specularIntensityMapTransform: {
                    value: new Mn
                },
                anisotropyVector: {
                    value: new ot
                },
                anisotropyMap: {
                    value: null
                },
                anisotropyMapTransform: {
                    value: new Mn
                }
            }
        ]),
        vertexShader: Ln.meshphysical_vert,
        fragmentShader: Ln.meshphysical_frag
    };
    const BS = {
        r: 0,
        b: 0,
        g: 0
    }, up = new ja, ube = new fn;
    function dbe(t, e, n, r, i, s, o) {
        const a = new Ft(0);
        let l = s === !0 ? 0 : 1, c, u, f = null, p = 0, g = null;
        function x(E) {
            let T = E.isScene === !0 ? E.background : null;
            return T && T.isTexture && (T = (E.backgroundBlurriness > 0 ? n : e).get(T)), T;
        }
        function S(E) {
            let T = !1;
            const k = x(E);
            k === null ? b(a, l) : k && k.isColor && (b(k, 1), T = !0);
            const N = t.xr.getEnvironmentBlendMode();
            N === "additive" ? r.buffers.color.setClear(0, 0, 0, 1, o) : N === "alpha-blend" && r.buffers.color.setClear(0, 0, 0, 0, o), (t.autoClear || T) && (r.buffers.depth.setTest(!0), r.buffers.depth.setMask(!0), r.buffers.color.setMask(!0), t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil));
        }
        function _(E, T) {
            const k = x(T);
            k && (k.isCubeTexture || k.mapping === gv) ? (u === void 0 && (u = new zi(new vm(1, 1, 1), new oc({
                name: "BackgroundCubeMaterial",
                uniforms: ev(Gl.backgroundCube.uniforms),
                vertexShader: Gl.backgroundCube.vertexShader,
                fragmentShader: Gl.backgroundCube.fragmentShader,
                side: To,
                depthTest: !1,
                depthWrite: !1,
                fog: !1
            })), u.geometry.deleteAttribute("normal"), u.geometry.deleteAttribute("uv"), u.onBeforeRender = function(N, D, L) {
                this.matrixWorld.copyPosition(L.matrixWorld);
            }, Object.defineProperty(u.material, "envMap", {
                get: function() {
                    return this.uniforms.envMap.value;
                }
            }), i.update(u)), up.copy(T.backgroundRotation), up.x *= -1, up.y *= -1, up.z *= -1, k.isCubeTexture && k.isRenderTargetTexture === !1 && (up.y *= -1, up.z *= -1), u.material.uniforms.envMap.value = k, u.material.uniforms.flipEnvMap.value = k.isCubeTexture && k.isRenderTargetTexture === !1 ? -1 : 1, u.material.uniforms.backgroundBlurriness.value = T.backgroundBlurriness, u.material.uniforms.backgroundIntensity.value = T.backgroundIntensity, u.material.uniforms.backgroundRotation.value.setFromMatrix4(ube.makeRotationFromEuler(up)), u.material.toneMapped = Zn.getTransfer(k.colorSpace) !== hr, (f !== k || p !== k.version || g !== t.toneMapping) && (u.material.needsUpdate = !0, f = k, p = k.version, g = t.toneMapping), u.layers.enableAll(), E.unshift(u, u.geometry, u.material, 0, 0, null)) : k && k.isTexture && (c === void 0 && (c = new zi(new xv(2, 2), new oc({
                name: "BackgroundMaterial",
                uniforms: ev(Gl.background.uniforms),
                vertexShader: Gl.background.vertexShader,
                fragmentShader: Gl.background.fragmentShader,
                side: md,
                depthTest: !1,
                depthWrite: !1,
                fog: !1
            })), c.geometry.deleteAttribute("normal"), Object.defineProperty(c.material, "map", {
                get: function() {
                    return this.uniforms.t2D.value;
                }
            }), i.update(c)), c.material.uniforms.t2D.value = k, c.material.uniforms.backgroundIntensity.value = T.backgroundIntensity, c.material.toneMapped = Zn.getTransfer(k.colorSpace) !== hr, k.matrixAutoUpdate === !0 && k.updateMatrix(), c.material.uniforms.uvTransform.value.copy(k.matrix), (f !== k || p !== k.version || g !== t.toneMapping) && (c.material.needsUpdate = !0, f = k, p = k.version, g = t.toneMapping), c.layers.enableAll(), E.unshift(c, c.geometry, c.material, 0, 0, null));
        }
        function b(E, T) {
            E.getRGB(BS, k6(t)), r.buffers.color.setClear(BS.r, BS.g, BS.b, T, o);
        }
        function M() {
            u !== void 0 && (u.geometry.dispose(), u.material.dispose(), u = void 0), c !== void 0 && (c.geometry.dispose(), c.material.dispose(), c = void 0);
        }
        return {
            getClearColor: function() {
                return a;
            },
            setClearColor: function(E, T = 1) {
                a.set(E), l = T, b(a, l);
            },
            getClearAlpha: function() {
                return l;
            },
            setClearAlpha: function(E) {
                l = E, b(a, l);
            },
            render: S,
            addToRenderList: _,
            dispose: M
        };
    }
    function fbe(t, e) {
        const n = t.getParameter(t.MAX_VERTEX_ATTRIBS), r = {}, i = p(null);
        let s = i, o = !1;
        function a(A, P, B, U, j) {
            let K = !1;
            const q = f(U, B, P);
            s !== q && (s = q, c(s.object)), K = g(A, U, B, j), K && x(A, U, B, j), j !== null && e.update(j, t.ELEMENT_ARRAY_BUFFER), (K || o) && (o = !1, T(A, P, B, U), j !== null && t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, e.get(j).buffer));
        }
        function l() {
            return t.createVertexArray();
        }
        function c(A) {
            return t.bindVertexArray(A);
        }
        function u(A) {
            return t.deleteVertexArray(A);
        }
        function f(A, P, B) {
            const U = B.wireframe === !0;
            let j = r[A.id];
            j === void 0 && (j = {}, r[A.id] = j);
            let K = j[P.id];
            K === void 0 && (K = {}, j[P.id] = K);
            let q = K[U];
            return q === void 0 && (q = p(l()), K[U] = q), q;
        }
        function p(A) {
            const P = [], B = [], U = [];
            for(let j = 0; j < n; j++)P[j] = 0, B[j] = 0, U[j] = 0;
            return {
                geometry: null,
                program: null,
                wireframe: !1,
                newAttributes: P,
                enabledAttributes: B,
                attributeDivisors: U,
                object: A,
                attributes: {},
                index: null
            };
        }
        function g(A, P, B, U) {
            const j = s.attributes, K = P.attributes;
            let q = 0;
            const te = B.getAttributes();
            for(const W in te)if (te[W].location >= 0) {
                const Q = j[W];
                let Y = K[W];
                if (Y === void 0 && (W === "instanceMatrix" && A.instanceMatrix && (Y = A.instanceMatrix), W === "instanceColor" && A.instanceColor && (Y = A.instanceColor)), Q === void 0 || Q.attribute !== Y || Y && Q.data !== Y.data) return !0;
                q++;
            }
            return s.attributesNum !== q || s.index !== U;
        }
        function x(A, P, B, U) {
            const j = {}, K = P.attributes;
            let q = 0;
            const te = B.getAttributes();
            for(const W in te)if (te[W].location >= 0) {
                let Q = K[W];
                Q === void 0 && (W === "instanceMatrix" && A.instanceMatrix && (Q = A.instanceMatrix), W === "instanceColor" && A.instanceColor && (Q = A.instanceColor));
                const Y = {};
                Y.attribute = Q, Q && Q.data && (Y.data = Q.data), j[W] = Y, q++;
            }
            s.attributes = j, s.attributesNum = q, s.index = U;
        }
        function S() {
            const A = s.newAttributes;
            for(let P = 0, B = A.length; P < B; P++)A[P] = 0;
        }
        function _(A) {
            b(A, 0);
        }
        function b(A, P) {
            const B = s.newAttributes, U = s.enabledAttributes, j = s.attributeDivisors;
            B[A] = 1, U[A] === 0 && (t.enableVertexAttribArray(A), U[A] = 1), j[A] !== P && (t.vertexAttribDivisor(A, P), j[A] = P);
        }
        function M() {
            const A = s.newAttributes, P = s.enabledAttributes;
            for(let B = 0, U = P.length; B < U; B++)P[B] !== A[B] && (t.disableVertexAttribArray(B), P[B] = 0);
        }
        function E(A, P, B, U, j, K, q) {
            q === !0 ? t.vertexAttribIPointer(A, P, B, j, K) : t.vertexAttribPointer(A, P, B, U, j, K);
        }
        function T(A, P, B, U) {
            S();
            const j = U.attributes, K = B.getAttributes(), q = P.defaultAttributeValues;
            for(const te in K){
                const W = K[te];
                if (W.location >= 0) {
                    let J = j[te];
                    if (J === void 0 && (te === "instanceMatrix" && A.instanceMatrix && (J = A.instanceMatrix), te === "instanceColor" && A.instanceColor && (J = A.instanceColor)), J !== void 0) {
                        const Q = J.normalized, Y = J.itemSize, le = e.get(J);
                        if (le === void 0) continue;
                        const ue = le.buffer, ie = le.type, he = le.bytesPerElement, ge = ie === t.INT || ie === t.UNSIGNED_INT || J.gpuType === UT;
                        if (J.isInterleavedBufferAttribute) {
                            const ve = J.data, Ee = ve.stride, Ce = J.offset;
                            if (ve.isInstancedInterleavedBuffer) {
                                for(let Ne = 0; Ne < W.locationSize; Ne++)b(W.location + Ne, ve.meshPerAttribute);
                                A.isInstancedMesh !== !0 && U._maxInstanceCount === void 0 && (U._maxInstanceCount = ve.meshPerAttribute * ve.count);
                            } else for(let Ne = 0; Ne < W.locationSize; Ne++)_(W.location + Ne);
                            t.bindBuffer(t.ARRAY_BUFFER, ue);
                            for(let Ne = 0; Ne < W.locationSize; Ne++)E(W.location + Ne, Y / W.locationSize, ie, Q, Ee * he, (Ce + Y / W.locationSize * Ne) * he, ge);
                        } else {
                            if (J.isInstancedBufferAttribute) {
                                for(let ve = 0; ve < W.locationSize; ve++)b(W.location + ve, J.meshPerAttribute);
                                A.isInstancedMesh !== !0 && U._maxInstanceCount === void 0 && (U._maxInstanceCount = J.meshPerAttribute * J.count);
                            } else for(let ve = 0; ve < W.locationSize; ve++)_(W.location + ve);
                            t.bindBuffer(t.ARRAY_BUFFER, ue);
                            for(let ve = 0; ve < W.locationSize; ve++)E(W.location + ve, Y / W.locationSize, ie, Q, Y * he, Y / W.locationSize * ve * he, ge);
                        }
                    } else if (q !== void 0) {
                        const Q = q[te];
                        if (Q !== void 0) switch(Q.length){
                            case 2:
                                t.vertexAttrib2fv(W.location, Q);
                                break;
                            case 3:
                                t.vertexAttrib3fv(W.location, Q);
                                break;
                            case 4:
                                t.vertexAttrib4fv(W.location, Q);
                                break;
                            default:
                                t.vertexAttrib1fv(W.location, Q);
                        }
                    }
                }
            }
            M();
        }
        function k() {
            L();
            for(const A in r){
                const P = r[A];
                for(const B in P){
                    const U = P[B];
                    for(const j in U)u(U[j].object), delete U[j];
                    delete P[B];
                }
                delete r[A];
            }
        }
        function N(A) {
            if (r[A.id] === void 0) return;
            const P = r[A.id];
            for(const B in P){
                const U = P[B];
                for(const j in U)u(U[j].object), delete U[j];
                delete P[B];
            }
            delete r[A.id];
        }
        function D(A) {
            for(const P in r){
                const B = r[P];
                if (B[A.id] === void 0) continue;
                const U = B[A.id];
                for(const j in U)u(U[j].object), delete U[j];
                delete B[A.id];
            }
        }
        function L() {
            R(), o = !0, s !== i && (s = i, c(s.object));
        }
        function R() {
            i.geometry = null, i.program = null, i.wireframe = !1;
        }
        return {
            setup: a,
            reset: L,
            resetDefaultState: R,
            dispose: k,
            releaseStatesOfGeometry: N,
            releaseStatesOfProgram: D,
            initAttributes: S,
            enableAttribute: _,
            disableUnusedAttributes: M
        };
    }
    function hbe(t, e, n) {
        let r;
        function i(c) {
            r = c;
        }
        function s(c, u) {
            t.drawArrays(r, c, u), n.update(u, r, 1);
        }
        function o(c, u, f) {
            f !== 0 && (t.drawArraysInstanced(r, c, u, f), n.update(u, r, f));
        }
        function a(c, u, f) {
            if (f === 0) return;
            e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(r, c, 0, u, 0, f);
            let g = 0;
            for(let x = 0; x < f; x++)g += u[x];
            n.update(g, r, 1);
        }
        function l(c, u, f, p) {
            if (f === 0) return;
            const g = e.get("WEBGL_multi_draw");
            if (g === null) for(let x = 0; x < c.length; x++)o(c[x], u[x], p[x]);
            else {
                g.multiDrawArraysInstancedWEBGL(r, c, 0, u, 0, p, 0, f);
                let x = 0;
                for(let S = 0; S < f; S++)x += u[S] * p[S];
                n.update(x, r, 1);
            }
        }
        this.setMode = i, this.render = s, this.renderInstances = o, this.renderMultiDraw = a, this.renderMultiDrawInstances = l;
    }
    function pbe(t, e, n, r) {
        let i;
        function s() {
            if (i !== void 0) return i;
            if (e.has("EXT_texture_filter_anisotropic") === !0) {
                const D = e.get("EXT_texture_filter_anisotropic");
                i = t.getParameter(D.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
            } else i = 0;
            return i;
        }
        function o(D) {
            return !(D !== Hs && r.convert(D) !== t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT));
        }
        function a(D) {
            const L = D === yv && (e.has("EXT_color_buffer_half_float") || e.has("EXT_color_buffer_float"));
            return !(D !== sc && r.convert(D) !== t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE) && D !== na && !L);
        }
        function l(D) {
            if (D === "highp") {
                if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision > 0) return "highp";
                D = "mediump";
            }
            return D === "mediump" && t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp";
        }
        let c = n.precision !== void 0 ? n.precision : "highp";
        const u = l(c);
        u !== c && (console.warn("THREE.WebGLRenderer:", c, "not supported, using", u, "instead."), c = u);
        const f = n.logarithmicDepthBuffer === !0, p = n.reverseDepthBuffer === !0 && e.has("EXT_clip_control"), g = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS), x = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS), S = t.getParameter(t.MAX_TEXTURE_SIZE), _ = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE), b = t.getParameter(t.MAX_VERTEX_ATTRIBS), M = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS), E = t.getParameter(t.MAX_VARYING_VECTORS), T = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS), k = x > 0, N = t.getParameter(t.MAX_SAMPLES);
        return {
            isWebGL2: !0,
            getMaxAnisotropy: s,
            getMaxPrecision: l,
            textureFormatReadable: o,
            textureTypeReadable: a,
            precision: c,
            logarithmicDepthBuffer: f,
            reverseDepthBuffer: p,
            maxTextures: g,
            maxVertexTextures: x,
            maxTextureSize: S,
            maxCubemapSize: _,
            maxAttributes: b,
            maxVertexUniforms: M,
            maxVaryings: E,
            maxFragmentUniforms: T,
            vertexTextures: k,
            maxSamples: N
        };
    }
    function mbe(t) {
        const e = this;
        let n = null, r = 0, i = !1, s = !1;
        const o = new Yu, a = new Mn, l = {
            value: null,
            needsUpdate: !1
        };
        this.uniform = l, this.numPlanes = 0, this.numIntersection = 0, this.init = function(f, p) {
            const g = f.length !== 0 || p || r !== 0 || i;
            return i = p, r = f.length, g;
        }, this.beginShadows = function() {
            s = !0, u(null);
        }, this.endShadows = function() {
            s = !1;
        }, this.setGlobalState = function(f, p) {
            n = u(f, p, 0);
        }, this.setState = function(f, p, g) {
            const x = f.clippingPlanes, S = f.clipIntersection, _ = f.clipShadows, b = t.get(f);
            if (!i || x === null || x.length === 0 || s && !_) s ? u(null) : c();
            else {
                const M = s ? 0 : r, E = M * 4;
                let T = b.clippingState || null;
                l.value = T, T = u(x, p, E, g);
                for(let k = 0; k !== E; ++k)T[k] = n[k];
                b.clippingState = T, this.numIntersection = S ? this.numPlanes : 0, this.numPlanes += M;
            }
        };
        function c() {
            l.value !== n && (l.value = n, l.needsUpdate = r > 0), e.numPlanes = r, e.numIntersection = 0;
        }
        function u(f, p, g, x) {
            const S = f !== null ? f.length : 0;
            let _ = null;
            if (S !== 0) {
                if (_ = l.value, x !== !0 || _ === null) {
                    const b = g + S * 4, M = p.matrixWorldInverse;
                    a.getNormalMatrix(M), (_ === null || _.length < b) && (_ = new Float32Array(b));
                    for(let E = 0, T = g; E !== S; ++E, T += 4)o.copy(f[E]).applyMatrix4(M, a), o.normal.toArray(_, T), _[T + 3] = o.constant;
                }
                l.value = _, l.needsUpdate = !0;
            }
            return e.numPlanes = S, e.numIntersection = 0, _;
        }
    }
    function gbe(t) {
        let e = new WeakMap;
        function n(o, a) {
            return a === yb ? o.mapping = gd : a === vb && (o.mapping = Qf), o;
        }
        function r(o) {
            if (o && o.isTexture) {
                const a = o.mapping;
                if (a === yb || a === vb) if (e.has(o)) {
                    const l = e.get(o).texture;
                    return n(l, o.mapping);
                } else {
                    const l = o.image;
                    if (l && l.height > 0) {
                        const c = new D6(l.height);
                        return c.fromEquirectangularTexture(t, o), e.set(o, c), o.addEventListener("dispose", i), n(c.texture, o.mapping);
                    } else return null;
                }
            }
            return o;
        }
        function i(o) {
            const a = o.target;
            a.removeEventListener("dispose", i);
            const l = e.get(a);
            l !== void 0 && (e.delete(a), l.dispose());
        }
        function s() {
            e = new WeakMap;
        }
        return {
            get: r,
            dispose: s
        };
    }
    const hy = 4, wz = [
        .125,
        .215,
        .35,
        .446,
        .526,
        .582
    ], Sp = 20, xN = new ad, _z = new Ft;
    let bN = null, wN = 0, _N = 0, SN = !1;
    const xp = (1 + Math.sqrt(5)) / 2, zg = 1 / xp, Sz = [
        new ye(-xp, zg, 0),
        new ye(xp, zg, 0),
        new ye(-zg, 0, xp),
        new ye(zg, 0, xp),
        new ye(0, xp, -zg),
        new ye(0, xp, zg),
        new ye(-1, 1, -1),
        new ye(1, 1, -1),
        new ye(-1, 1, 1),
        new ye(1, 1, 1)
    ];
    class _k {
        constructor(e){
            this._renderer = e, this._pingPongRenderTarget = null, this._lodMax = 0, this._cubeSize = 0, this._lodPlanes = [], this._sizeLods = [], this._sigmas = [], this._blurMaterial = null, this._cubemapMaterial = null, this._equirectMaterial = null, this._compileMaterial(this._blurMaterial);
        }
        fromScene(e, n = 0, r = .1, i = 100) {
            bN = this._renderer.getRenderTarget(), wN = this._renderer.getActiveCubeFace(), _N = this._renderer.getActiveMipmapLevel(), SN = this._renderer.xr.enabled, this._renderer.xr.enabled = !1, this._setSize(256);
            const s = this._allocateTargets();
            return s.depthBuffer = !0, this._sceneToCubeUV(e, r, i, s), n > 0 && this._blur(s, 0, 0, n), this._applyPMREM(s), this._cleanup(s), s;
        }
        fromEquirectangular(e, n = null) {
            return this._fromTexture(e, n);
        }
        fromCubemap(e, n = null) {
            return this._fromTexture(e, n);
        }
        compileCubemapShader() {
            this._cubemapMaterial === null && (this._cubemapMaterial = Tz(), this._compileMaterial(this._cubemapMaterial));
        }
        compileEquirectangularShader() {
            this._equirectMaterial === null && (this._equirectMaterial = Mz(), this._compileMaterial(this._equirectMaterial));
        }
        dispose() {
            this._dispose(), this._cubemapMaterial !== null && this._cubemapMaterial.dispose(), this._equirectMaterial !== null && this._equirectMaterial.dispose();
        }
        _setSize(e) {
            this._lodMax = Math.floor(Math.log2(e)), this._cubeSize = Math.pow(2, this._lodMax);
        }
        _dispose() {
            this._blurMaterial !== null && this._blurMaterial.dispose(), this._pingPongRenderTarget !== null && this._pingPongRenderTarget.dispose();
            for(let e = 0; e < this._lodPlanes.length; e++)this._lodPlanes[e].dispose();
        }
        _cleanup(e) {
            this._renderer.setRenderTarget(bN, wN, _N), this._renderer.xr.enabled = SN, e.scissorTest = !1, US(e, 0, 0, e.width, e.height);
        }
        _fromTexture(e, n) {
            e.mapping === gd || e.mapping === Qf ? this._setSize(e.image.length === 0 ? 16 : e.image[0].width || e.image[0].image.width) : this._setSize(e.image.width / 4), bN = this._renderer.getRenderTarget(), wN = this._renderer.getActiveCubeFace(), _N = this._renderer.getActiveMipmapLevel(), SN = this._renderer.xr.enabled, this._renderer.xr.enabled = !1;
            const r = n || this._allocateTargets();
            return this._textureToCubeUV(e, r), this._applyPMREM(r), this._cleanup(r), r;
        }
        _allocateTargets() {
            const e = 3 * Math.max(this._cubeSize, 112), n = 4 * this._cubeSize, r = {
                magFilter: es,
                minFilter: es,
                generateMipmaps: !1,
                type: yv,
                format: Hs,
                colorSpace: lm,
                depthBuffer: !1
            }, i = Ez(e, n, r);
            if (this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== e || this._pingPongRenderTarget.height !== n) {
                this._pingPongRenderTarget !== null && this._dispose(), this._pingPongRenderTarget = Ez(e, n, r);
                const { _lodMax: s } = this;
                ({ sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = ybe(s)), this._blurMaterial = vbe(s, e, n);
            }
            return i;
        }
        _compileMaterial(e) {
            const n = new zi(this._lodPlanes[0], e);
            this._renderer.compile(n, xN);
        }
        _sceneToCubeUV(e, n, r, i) {
            const a = new Ei(90, 1, n, r), l = [
                1,
                -1,
                1,
                1,
                1,
                1
            ], c = [
                1,
                1,
                1,
                -1,
                -1,
                -1
            ], u = this._renderer, f = u.autoClear, p = u.toneMapping;
            u.getClearColor(_z), u.toneMapping = Vc, u.autoClear = !1;
            const g = new sh({
                name: "PMREM.Background",
                side: To,
                depthWrite: !1,
                depthTest: !1
            }), x = new zi(new vm, g);
            let S = !1;
            const _ = e.background;
            _ ? _.isColor && (g.color.copy(_), e.background = null, S = !0) : (g.color.copy(_z), S = !0);
            for(let b = 0; b < 6; b++){
                const M = b % 3;
                M === 0 ? (a.up.set(0, l[b], 0), a.lookAt(c[b], 0, 0)) : M === 1 ? (a.up.set(0, 0, l[b]), a.lookAt(0, c[b], 0)) : (a.up.set(0, l[b], 0), a.lookAt(0, 0, c[b]));
                const E = this._cubeSize;
                US(i, M * E, b > 2 ? E : 0, E, E), u.setRenderTarget(i), S && u.render(x, a), u.render(e, a);
            }
            x.geometry.dispose(), x.material.dispose(), u.toneMapping = p, u.autoClear = f, e.background = _;
        }
        _textureToCubeUV(e, n) {
            const r = this._renderer, i = e.mapping === gd || e.mapping === Qf;
            i ? (this._cubemapMaterial === null && (this._cubemapMaterial = Tz()), this._cubemapMaterial.uniforms.flipEnvMap.value = e.isRenderTargetTexture === !1 ? -1 : 1) : this._equirectMaterial === null && (this._equirectMaterial = Mz());
            const s = i ? this._cubemapMaterial : this._equirectMaterial, o = new zi(this._lodPlanes[0], s), a = s.uniforms;
            a.envMap.value = e;
            const l = this._cubeSize;
            US(n, 0, 0, 3 * l, 2 * l), r.setRenderTarget(n), r.render(o, xN);
        }
        _applyPMREM(e) {
            const n = this._renderer, r = n.autoClear;
            n.autoClear = !1;
            const i = this._lodPlanes.length;
            for(let s = 1; s < i; s++){
                const o = Math.sqrt(this._sigmas[s] * this._sigmas[s] - this._sigmas[s - 1] * this._sigmas[s - 1]), a = Sz[(i - s - 1) % Sz.length];
                this._blur(e, s - 1, s, o, a);
            }
            n.autoClear = r;
        }
        _blur(e, n, r, i, s) {
            const o = this._pingPongRenderTarget;
            this._halfBlur(e, o, n, r, i, "latitudinal", s), this._halfBlur(o, e, r, r, i, "longitudinal", s);
        }
        _halfBlur(e, n, r, i, s, o, a) {
            const l = this._renderer, c = this._blurMaterial;
            o !== "latitudinal" && o !== "longitudinal" && console.error("blur direction must be either latitudinal or longitudinal!");
            const u = 3, f = new zi(this._lodPlanes[i], c), p = c.uniforms, g = this._sizeLods[r] - 1, x = isFinite(s) ? Math.PI / (2 * g) : 2 * Math.PI / (2 * Sp - 1), S = s / x, _ = isFinite(s) ? 1 + Math.floor(u * S) : Sp;
            _ > Sp && console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${Sp}`);
            const b = [];
            let M = 0;
            for(let D = 0; D < Sp; ++D){
                const L = D / S, R = Math.exp(-L * L / 2);
                b.push(R), D === 0 ? M += R : D < _ && (M += 2 * R);
            }
            for(let D = 0; D < b.length; D++)b[D] = b[D] / M;
            p.envMap.value = e.texture, p.samples.value = _, p.weights.value = b, p.latitudinal.value = o === "latitudinal", a && (p.poleAxis.value = a);
            const { _lodMax: E } = this;
            p.dTheta.value = x, p.mipInt.value = E - r;
            const T = this._sizeLods[i], k = 3 * T * (i > E - hy ? i - E + hy : 0), N = 4 * (this._cubeSize - T);
            US(n, k, N, 3 * T, 2 * T), l.setRenderTarget(n), l.render(f, xN);
        }
    }
    function ybe(t) {
        const e = [], n = [], r = [];
        let i = t;
        const s = t - hy + 1 + wz.length;
        for(let o = 0; o < s; o++){
            const a = Math.pow(2, i);
            n.push(a);
            let l = 1 / a;
            o > t - hy ? l = wz[o - t + hy - 1] : o === 0 && (l = 0), r.push(l);
            const c = 1 / (a - 2), u = -c, f = 1 + c, p = [
                u,
                u,
                f,
                u,
                f,
                f,
                u,
                u,
                f,
                f,
                u,
                f
            ], g = 6, x = 6, S = 3, _ = 2, b = 1, M = new Float32Array(S * x * g), E = new Float32Array(_ * x * g), T = new Float32Array(b * x * g);
            for(let N = 0; N < g; N++){
                const D = N % 3 * 2 / 3 - 1, L = N > 2 ? 0 : -1, R = [
                    D,
                    L,
                    0,
                    D + 2 / 3,
                    L,
                    0,
                    D + 2 / 3,
                    L + 1,
                    0,
                    D,
                    L,
                    0,
                    D + 2 / 3,
                    L + 1,
                    0,
                    D,
                    L + 1,
                    0
                ];
                M.set(R, S * x * N), E.set(p, _ * x * N);
                const A = [
                    N,
                    N,
                    N,
                    N,
                    N,
                    N
                ];
                T.set(A, b * x * N);
            }
            const k = new Fn;
            k.setAttribute("position", new wr(M, S)), k.setAttribute("uv", new wr(E, _)), k.setAttribute("faceIndex", new wr(T, b)), e.push(k), i > hy && i--;
        }
        return {
            lodPlanes: e,
            sizeLods: n,
            sigmas: r
        };
    }
    function Ez(t, e, n) {
        const r = new Kc(t, e, n);
        return r.texture.mapping = gv, r.texture.name = "PMREM.cubeUv", r.scissorTest = !0, r;
    }
    function US(t, e, n, r, i) {
        t.viewport.set(e, n, r, i), t.scissor.set(e, n, r, i);
    }
    function vbe(t, e, n) {
        const r = new Float32Array(Sp), i = new ye(0, 1, 0);
        return new oc({
            name: "SphericalGaussianBlur",
            defines: {
                n: Sp,
                CUBEUV_TEXEL_WIDTH: 1 / e,
                CUBEUV_TEXEL_HEIGHT: 1 / n,
                CUBEUV_MAX_MIP: `${t}.0`
            },
            uniforms: {
                envMap: {
                    value: null
                },
                samples: {
                    value: 1
                },
                weights: {
                    value: r
                },
                latitudinal: {
                    value: !1
                },
                dTheta: {
                    value: 0
                },
                mipInt: {
                    value: 0
                },
                poleAxis: {
                    value: i
                }
            },
            vertexShader: V2(),
            fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
            blending: sd,
            depthTest: !1,
            depthWrite: !1
        });
    }
    function Mz() {
        return new oc({
            name: "EquirectangularToCubeUV",
            uniforms: {
                envMap: {
                    value: null
                }
            },
            vertexShader: V2(),
            fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,
            blending: sd,
            depthTest: !1,
            depthWrite: !1
        });
    }
    function Tz() {
        return new oc({
            name: "CubemapToCubeUV",
            uniforms: {
                envMap: {
                    value: null
                },
                flipEnvMap: {
                    value: -1
                }
            },
            vertexShader: V2(),
            fragmentShader: `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,
            blending: sd,
            depthTest: !1,
            depthWrite: !1
        });
    }
    function V2() {
        return `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
    }
    function xbe(t) {
        let e = new WeakMap, n = null;
        function r(a) {
            if (a && a.isTexture) {
                const l = a.mapping, c = l === yb || l === vb, u = l === gd || l === Qf;
                if (c || u) {
                    let f = e.get(a);
                    const p = f !== void 0 ? f.texture.pmremVersion : 0;
                    if (a.isRenderTargetTexture && a.pmremVersion !== p) return n === null && (n = new _k(t)), f = c ? n.fromEquirectangular(a, f) : n.fromCubemap(a, f), f.texture.pmremVersion = a.pmremVersion, e.set(a, f), f.texture;
                    if (f !== void 0) return f.texture;
                    {
                        const g = a.image;
                        return c && g && g.height > 0 || u && g && i(g) ? (n === null && (n = new _k(t)), f = c ? n.fromEquirectangular(a) : n.fromCubemap(a), f.texture.pmremVersion = a.pmremVersion, e.set(a, f), a.addEventListener("dispose", s), f.texture) : null;
                    }
                }
            }
            return a;
        }
        function i(a) {
            let l = 0;
            const c = 6;
            for(let u = 0; u < c; u++)a[u] !== void 0 && l++;
            return l === c;
        }
        function s(a) {
            const l = a.target;
            l.removeEventListener("dispose", s);
            const c = e.get(l);
            c !== void 0 && (e.delete(l), c.dispose());
        }
        function o() {
            e = new WeakMap, n !== null && (n.dispose(), n = null);
        }
        return {
            get: r,
            dispose: o
        };
    }
    function bbe(t) {
        const e = {};
        function n(r) {
            if (e[r] !== void 0) return e[r];
            let i;
            switch(r){
                case "WEBGL_depth_texture":
                    i = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                    break;
                case "EXT_texture_filter_anisotropic":
                    i = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                    break;
                case "WEBGL_compressed_texture_s3tc":
                    i = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                    break;
                case "WEBGL_compressed_texture_pvrtc":
                    i = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    break;
                default:
                    i = t.getExtension(r);
            }
            return e[r] = i, i;
        }
        return {
            has: function(r) {
                return n(r) !== null;
            },
            init: function() {
                n("EXT_color_buffer_float"), n("WEBGL_clip_cull_distance"), n("OES_texture_float_linear"), n("EXT_color_buffer_half_float"), n("WEBGL_multisampled_render_to_texture"), n("WEBGL_render_shared_exponent");
            },
            get: function(r) {
                const i = n(r);
                return i === null && Jg("THREE.WebGLRenderer: " + r + " extension not supported."), i;
            }
        };
    }
    function wbe(t, e, n, r) {
        const i = {}, s = new WeakMap;
        function o(f) {
            const p = f.target;
            p.index !== null && e.remove(p.index);
            for(const x in p.attributes)e.remove(p.attributes[x]);
            p.removeEventListener("dispose", o), delete i[p.id];
            const g = s.get(p);
            g && (e.remove(g), s.delete(p)), r.releaseStatesOfGeometry(p), p.isInstancedBufferGeometry === !0 && delete p._maxInstanceCount, n.memory.geometries--;
        }
        function a(f, p) {
            return i[p.id] === !0 || (p.addEventListener("dispose", o), i[p.id] = !0, n.memory.geometries++), p;
        }
        function l(f) {
            const p = f.attributes;
            for(const g in p)e.update(p[g], t.ARRAY_BUFFER);
        }
        function c(f) {
            const p = [], g = f.index, x = f.attributes.position;
            let S = 0;
            if (g !== null) {
                const M = g.array;
                S = g.version;
                for(let E = 0, T = M.length; E < T; E += 3){
                    const k = M[E + 0], N = M[E + 1], D = M[E + 2];
                    p.push(k, N, N, D, D, k);
                }
            } else if (x !== void 0) {
                const M = x.array;
                S = x.version;
                for(let E = 0, T = M.length / 3 - 1; E < T; E += 3){
                    const k = E + 0, N = E + 1, D = E + 2;
                    p.push(k, N, N, D, D, k);
                }
            } else return;
            const _ = new (R6(p) ? g2 : m2)(p, 1);
            _.version = S;
            const b = s.get(f);
            b && e.remove(b), s.set(f, _);
        }
        function u(f) {
            const p = s.get(f);
            if (p) {
                const g = f.index;
                g !== null && p.version < g.version && c(f);
            } else c(f);
            return s.get(f);
        }
        return {
            get: a,
            update: l,
            getWireframeAttribute: u
        };
    }
    function _be(t, e, n) {
        let r;
        function i(p) {
            r = p;
        }
        let s, o;
        function a(p) {
            s = p.type, o = p.bytesPerElement;
        }
        function l(p, g) {
            t.drawElements(r, g, s, p * o), n.update(g, r, 1);
        }
        function c(p, g, x) {
            x !== 0 && (t.drawElementsInstanced(r, g, s, p * o, x), n.update(g, r, x));
        }
        function u(p, g, x) {
            if (x === 0) return;
            e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(r, g, 0, s, p, 0, x);
            let _ = 0;
            for(let b = 0; b < x; b++)_ += g[b];
            n.update(_, r, 1);
        }
        function f(p, g, x, S) {
            if (x === 0) return;
            const _ = e.get("WEBGL_multi_draw");
            if (_ === null) for(let b = 0; b < p.length; b++)c(p[b] / o, g[b], S[b]);
            else {
                _.multiDrawElementsInstancedWEBGL(r, g, 0, s, p, 0, S, 0, x);
                let b = 0;
                for(let M = 0; M < x; M++)b += g[M] * S[M];
                n.update(b, r, 1);
            }
        }
        this.setMode = i, this.setIndex = a, this.render = l, this.renderInstances = c, this.renderMultiDraw = u, this.renderMultiDrawInstances = f;
    }
    function Sbe(t) {
        const e = {
            geometries: 0,
            textures: 0
        }, n = {
            frame: 0,
            calls: 0,
            triangles: 0,
            points: 0,
            lines: 0
        };
        function r(s, o, a) {
            switch(n.calls++, o){
                case t.TRIANGLES:
                    n.triangles += a * (s / 3);
                    break;
                case t.LINES:
                    n.lines += a * (s / 2);
                    break;
                case t.LINE_STRIP:
                    n.lines += a * (s - 1);
                    break;
                case t.LINE_LOOP:
                    n.lines += a * s;
                    break;
                case t.POINTS:
                    n.points += a * s;
                    break;
                default:
                    console.error("THREE.WebGLInfo: Unknown draw mode:", o);
                    break;
            }
        }
        function i() {
            n.calls = 0, n.triangles = 0, n.points = 0, n.lines = 0;
        }
        return {
            memory: e,
            render: n,
            programs: null,
            autoReset: !0,
            reset: i,
            update: r
        };
    }
    function Ebe(t, e, n) {
        const r = new WeakMap, i = new rr;
        function s(o, a, l) {
            const c = o.morphTargetInfluences, u = a.morphAttributes.position || a.morphAttributes.normal || a.morphAttributes.color, f = u !== void 0 ? u.length : 0;
            let p = r.get(a);
            if (p === void 0 || p.count !== f) {
                let R = function() {
                    D.dispose(), r.delete(a), a.removeEventListener("dispose", R);
                };
                p !== void 0 && p.texture.dispose();
                const g = a.morphAttributes.position !== void 0, x = a.morphAttributes.normal !== void 0, S = a.morphAttributes.color !== void 0, _ = a.morphAttributes.position || [], b = a.morphAttributes.normal || [], M = a.morphAttributes.color || [];
                let E = 0;
                g === !0 && (E = 1), x === !0 && (E = 2), S === !0 && (E = 3);
                let T = a.attributes.position.count * E, k = 1;
                T > e.maxTextureSize && (k = Math.ceil(T / e.maxTextureSize), T = e.maxTextureSize);
                const N = new Float32Array(T * k * 4 * f), D = new fw(N, T, k, f);
                D.type = na, D.needsUpdate = !0;
                const L = E * 4;
                for(let A = 0; A < f; A++){
                    const P = _[A], B = b[A], U = M[A], j = T * k * 4 * A;
                    for(let K = 0; K < P.count; K++){
                        const q = K * L;
                        g === !0 && (i.fromBufferAttribute(P, K), N[j + q + 0] = i.x, N[j + q + 1] = i.y, N[j + q + 2] = i.z, N[j + q + 3] = 0), x === !0 && (i.fromBufferAttribute(B, K), N[j + q + 4] = i.x, N[j + q + 5] = i.y, N[j + q + 6] = i.z, N[j + q + 7] = 0), S === !0 && (i.fromBufferAttribute(U, K), N[j + q + 8] = i.x, N[j + q + 9] = i.y, N[j + q + 10] = i.z, N[j + q + 11] = U.itemSize === 4 ? i.w : 1);
                    }
                }
                p = {
                    count: f,
                    texture: D,
                    size: new ot(T, k)
                }, r.set(a, p), a.addEventListener("dispose", R);
            }
            if (o.isInstancedMesh === !0 && o.morphTexture !== null) l.getUniforms().setValue(t, "morphTexture", o.morphTexture, n);
            else {
                let g = 0;
                for(let S = 0; S < c.length; S++)g += c[S];
                const x = a.morphTargetsRelative ? 1 : 1 - g;
                l.getUniforms().setValue(t, "morphTargetBaseInfluence", x), l.getUniforms().setValue(t, "morphTargetInfluences", c);
            }
            l.getUniforms().setValue(t, "morphTargetsTexture", p.texture, n), l.getUniforms().setValue(t, "morphTargetsTextureSize", p.size);
        }
        return {
            update: s
        };
    }
    function Mbe(t, e, n, r) {
        let i = new WeakMap;
        function s(l) {
            const c = r.render.frame, u = l.geometry, f = e.get(l, u);
            if (i.get(f) !== c && (e.update(f), i.set(f, c)), l.isInstancedMesh && (l.hasEventListener("dispose", a) === !1 && l.addEventListener("dispose", a), i.get(l) !== c && (n.update(l.instanceMatrix, t.ARRAY_BUFFER), l.instanceColor !== null && n.update(l.instanceColor, t.ARRAY_BUFFER), i.set(l, c))), l.isSkinnedMesh) {
                const p = l.skeleton;
                i.get(p) !== c && (p.update(), i.set(p, c));
            }
            return f;
        }
        function o() {
            i = new WeakMap;
        }
        function a(l) {
            const c = l.target;
            c.removeEventListener("dispose", a), n.remove(c.instanceMatrix), c.instanceColor !== null && n.remove(c.instanceColor);
        }
        return {
            update: s,
            dispose: o
        };
    }
    const OG = new ui, Cz = new w2(1, 1), LG = new fw, DG = new XT, FG = new pw, Iz = [], Rz = [], Az = new Float32Array(16), Nz = new Float32Array(9), Pz = new Float32Array(4);
    function bv(t, e, n) {
        const r = t[0];
        if (r <= 0 || r > 0) return t;
        const i = e * n;
        let s = Iz[i];
        if (s === void 0 && (s = new Float32Array(i), Iz[i] = s), e !== 0) {
            r.toArray(s, 0);
            for(let o = 1, a = 0; o !== e; ++o)a += n, t[o].toArray(s, a);
        }
        return s;
    }
    function ts(t, e) {
        if (t.length !== e.length) return !1;
        for(let n = 0, r = t.length; n < r; n++)if (t[n] !== e[n]) return !1;
        return !0;
    }
    function ns(t, e) {
        for(let n = 0, r = e.length; n < r; n++)t[n] = e[n];
    }
    function mC(t, e) {
        let n = Rz[e];
        n === void 0 && (n = new Int32Array(e), Rz[e] = n);
        for(let r = 0; r !== e; ++r)n[r] = t.allocateTextureUnit();
        return n;
    }
    function Tbe(t, e) {
        const n = this.cache;
        n[0] !== e && (t.uniform1f(this.addr, e), n[0] = e);
    }
    function Cbe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y) && (t.uniform2f(this.addr, e.x, e.y), n[0] = e.x, n[1] = e.y);
        else {
            if (ts(n, e)) return;
            t.uniform2fv(this.addr, e), ns(n, e);
        }
    }
    function Ibe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) && (t.uniform3f(this.addr, e.x, e.y, e.z), n[0] = e.x, n[1] = e.y, n[2] = e.z);
        else if (e.r !== void 0) (n[0] !== e.r || n[1] !== e.g || n[2] !== e.b) && (t.uniform3f(this.addr, e.r, e.g, e.b), n[0] = e.r, n[1] = e.g, n[2] = e.b);
        else {
            if (ts(n, e)) return;
            t.uniform3fv(this.addr, e), ns(n, e);
        }
    }
    function Rbe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) && (t.uniform4f(this.addr, e.x, e.y, e.z, e.w), n[0] = e.x, n[1] = e.y, n[2] = e.z, n[3] = e.w);
        else {
            if (ts(n, e)) return;
            t.uniform4fv(this.addr, e), ns(n, e);
        }
    }
    function Abe(t, e) {
        const n = this.cache, r = e.elements;
        if (r === void 0) {
            if (ts(n, e)) return;
            t.uniformMatrix2fv(this.addr, !1, e), ns(n, e);
        } else {
            if (ts(n, r)) return;
            Pz.set(r), t.uniformMatrix2fv(this.addr, !1, Pz), ns(n, r);
        }
    }
    function Nbe(t, e) {
        const n = this.cache, r = e.elements;
        if (r === void 0) {
            if (ts(n, e)) return;
            t.uniformMatrix3fv(this.addr, !1, e), ns(n, e);
        } else {
            if (ts(n, r)) return;
            Nz.set(r), t.uniformMatrix3fv(this.addr, !1, Nz), ns(n, r);
        }
    }
    function Pbe(t, e) {
        const n = this.cache, r = e.elements;
        if (r === void 0) {
            if (ts(n, e)) return;
            t.uniformMatrix4fv(this.addr, !1, e), ns(n, e);
        } else {
            if (ts(n, r)) return;
            Az.set(r), t.uniformMatrix4fv(this.addr, !1, Az), ns(n, r);
        }
    }
    function kbe(t, e) {
        const n = this.cache;
        n[0] !== e && (t.uniform1i(this.addr, e), n[0] = e);
    }
    function Obe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y) && (t.uniform2i(this.addr, e.x, e.y), n[0] = e.x, n[1] = e.y);
        else {
            if (ts(n, e)) return;
            t.uniform2iv(this.addr, e), ns(n, e);
        }
    }
    function Lbe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) && (t.uniform3i(this.addr, e.x, e.y, e.z), n[0] = e.x, n[1] = e.y, n[2] = e.z);
        else {
            if (ts(n, e)) return;
            t.uniform3iv(this.addr, e), ns(n, e);
        }
    }
    function Dbe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) && (t.uniform4i(this.addr, e.x, e.y, e.z, e.w), n[0] = e.x, n[1] = e.y, n[2] = e.z, n[3] = e.w);
        else {
            if (ts(n, e)) return;
            t.uniform4iv(this.addr, e), ns(n, e);
        }
    }
    function Fbe(t, e) {
        const n = this.cache;
        n[0] !== e && (t.uniform1ui(this.addr, e), n[0] = e);
    }
    function jbe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y) && (t.uniform2ui(this.addr, e.x, e.y), n[0] = e.x, n[1] = e.y);
        else {
            if (ts(n, e)) return;
            t.uniform2uiv(this.addr, e), ns(n, e);
        }
    }
    function Bbe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) && (t.uniform3ui(this.addr, e.x, e.y, e.z), n[0] = e.x, n[1] = e.y, n[2] = e.z);
        else {
            if (ts(n, e)) return;
            t.uniform3uiv(this.addr, e), ns(n, e);
        }
    }
    function Ube(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) && (t.uniform4ui(this.addr, e.x, e.y, e.z, e.w), n[0] = e.x, n[1] = e.y, n[2] = e.z, n[3] = e.w);
        else {
            if (ts(n, e)) return;
            t.uniform4uiv(this.addr, e), ns(n, e);
        }
    }
    function zbe(t, e, n) {
        const r = this.cache, i = n.allocateTextureUnit();
        r[0] !== i && (t.uniform1i(this.addr, i), r[0] = i);
        let s;
        this.type === t.SAMPLER_2D_SHADOW ? (Cz.compareFunction = h2, s = Cz) : s = OG, n.setTexture2D(e || s, i);
    }
    function Vbe(t, e, n) {
        const r = this.cache, i = n.allocateTextureUnit();
        r[0] !== i && (t.uniform1i(this.addr, i), r[0] = i), n.setTexture3D(e || DG, i);
    }
    function Wbe(t, e, n) {
        const r = this.cache, i = n.allocateTextureUnit();
        r[0] !== i && (t.uniform1i(this.addr, i), r[0] = i), n.setTextureCube(e || FG, i);
    }
    function qbe(t, e, n) {
        const r = this.cache, i = n.allocateTextureUnit();
        r[0] !== i && (t.uniform1i(this.addr, i), r[0] = i), n.setTexture2DArray(e || LG, i);
    }
    function Hbe(t) {
        switch(t){
            case 5126:
                return Tbe;
            case 35664:
                return Cbe;
            case 35665:
                return Ibe;
            case 35666:
                return Rbe;
            case 35674:
                return Abe;
            case 35675:
                return Nbe;
            case 35676:
                return Pbe;
            case 5124:
            case 35670:
                return kbe;
            case 35667:
            case 35671:
                return Obe;
            case 35668:
            case 35672:
                return Lbe;
            case 35669:
            case 35673:
                return Dbe;
            case 5125:
                return Fbe;
            case 36294:
                return jbe;
            case 36295:
                return Bbe;
            case 36296:
                return Ube;
            case 35678:
            case 36198:
            case 36298:
            case 36306:
            case 35682:
                return zbe;
            case 35679:
            case 36299:
            case 36307:
                return Vbe;
            case 35680:
            case 36300:
            case 36308:
            case 36293:
                return Wbe;
            case 36289:
            case 36303:
            case 36311:
            case 36292:
                return qbe;
        }
    }
    function $be(t, e) {
        t.uniform1fv(this.addr, e);
    }
    function Gbe(t, e) {
        const n = bv(e, this.size, 2);
        t.uniform2fv(this.addr, n);
    }
    function Xbe(t, e) {
        const n = bv(e, this.size, 3);
        t.uniform3fv(this.addr, n);
    }
    function Kbe(t, e) {
        const n = bv(e, this.size, 4);
        t.uniform4fv(this.addr, n);
    }
    function Ybe(t, e) {
        const n = bv(e, this.size, 4);
        t.uniformMatrix2fv(this.addr, !1, n);
    }
    function Zbe(t, e) {
        const n = bv(e, this.size, 9);
        t.uniformMatrix3fv(this.addr, !1, n);
    }
    function Jbe(t, e) {
        const n = bv(e, this.size, 16);
        t.uniformMatrix4fv(this.addr, !1, n);
    }
    function Qbe(t, e) {
        t.uniform1iv(this.addr, e);
    }
    function ewe(t, e) {
        t.uniform2iv(this.addr, e);
    }
    function twe(t, e) {
        t.uniform3iv(this.addr, e);
    }
    function nwe(t, e) {
        t.uniform4iv(this.addr, e);
    }
    function rwe(t, e) {
        t.uniform1uiv(this.addr, e);
    }
    function iwe(t, e) {
        t.uniform2uiv(this.addr, e);
    }
    function swe(t, e) {
        t.uniform3uiv(this.addr, e);
    }
    function owe(t, e) {
        t.uniform4uiv(this.addr, e);
    }
    function awe(t, e, n) {
        const r = this.cache, i = e.length, s = mC(n, i);
        ts(r, s) || (t.uniform1iv(this.addr, s), ns(r, s));
        for(let o = 0; o !== i; ++o)n.setTexture2D(e[o] || OG, s[o]);
    }
    function lwe(t, e, n) {
        const r = this.cache, i = e.length, s = mC(n, i);
        ts(r, s) || (t.uniform1iv(this.addr, s), ns(r, s));
        for(let o = 0; o !== i; ++o)n.setTexture3D(e[o] || DG, s[o]);
    }
    function cwe(t, e, n) {
        const r = this.cache, i = e.length, s = mC(n, i);
        ts(r, s) || (t.uniform1iv(this.addr, s), ns(r, s));
        for(let o = 0; o !== i; ++o)n.setTextureCube(e[o] || FG, s[o]);
    }
    function uwe(t, e, n) {
        const r = this.cache, i = e.length, s = mC(n, i);
        ts(r, s) || (t.uniform1iv(this.addr, s), ns(r, s));
        for(let o = 0; o !== i; ++o)n.setTexture2DArray(e[o] || LG, s[o]);
    }
    function dwe(t) {
        switch(t){
            case 5126:
                return $be;
            case 35664:
                return Gbe;
            case 35665:
                return Xbe;
            case 35666:
                return Kbe;
            case 35674:
                return Ybe;
            case 35675:
                return Zbe;
            case 35676:
                return Jbe;
            case 5124:
            case 35670:
                return Qbe;
            case 35667:
            case 35671:
                return ewe;
            case 35668:
            case 35672:
                return twe;
            case 35669:
            case 35673:
                return nwe;
            case 5125:
                return rwe;
            case 36294:
                return iwe;
            case 36295:
                return swe;
            case 36296:
                return owe;
            case 35678:
            case 36198:
            case 36298:
            case 36306:
            case 35682:
                return awe;
            case 35679:
            case 36299:
            case 36307:
                return lwe;
            case 35680:
            case 36300:
            case 36308:
            case 36293:
                return cwe;
            case 36289:
            case 36303:
            case 36311:
            case 36292:
                return uwe;
        }
    }
    class fwe {
        constructor(e, n, r){
            this.id = e, this.addr = r, this.cache = [], this.type = n.type, this.setValue = Hbe(n.type);
        }
    }
    class hwe {
        constructor(e, n, r){
            this.id = e, this.addr = r, this.cache = [], this.type = n.type, this.size = n.size, this.setValue = dwe(n.type);
        }
    }
    class pwe {
        constructor(e){
            this.id = e, this.seq = [], this.map = {};
        }
        setValue(e, n, r) {
            const i = this.seq;
            for(let s = 0, o = i.length; s !== o; ++s){
                const a = i[s];
                a.setValue(e, n[a.id], r);
            }
        }
    }
    const EN = /(\w+)(\])?(\[|\.)?/g;
    function kz(t, e) {
        t.seq.push(e), t.map[e.id] = e;
    }
    function mwe(t, e, n) {
        const r = t.name, i = r.length;
        for(EN.lastIndex = 0;;){
            const s = EN.exec(r), o = EN.lastIndex;
            let a = s[1];
            const l = s[2] === "]", c = s[3];
            if (l && (a = a | 0), c === void 0 || c === "[" && o + 2 === i) {
                kz(n, c === void 0 ? new fwe(a, t, e) : new hwe(a, t, e));
                break;
            } else {
                let f = n.map[a];
                f === void 0 && (f = new pwe(a), kz(n, f)), n = f;
            }
        }
    }
    class w1 {
        constructor(e, n){
            this.seq = [], this.map = {};
            const r = e.getProgramParameter(n, e.ACTIVE_UNIFORMS);
            for(let i = 0; i < r; ++i){
                const s = e.getActiveUniform(n, i), o = e.getUniformLocation(n, s.name);
                mwe(s, o, this);
            }
        }
        setValue(e, n, r, i) {
            const s = this.map[n];
            s !== void 0 && s.setValue(e, r, i);
        }
        setOptional(e, n, r) {
            const i = n[r];
            i !== void 0 && this.setValue(e, r, i);
        }
        static upload(e, n, r, i) {
            for(let s = 0, o = n.length; s !== o; ++s){
                const a = n[s], l = r[a.id];
                l.needsUpdate !== !1 && a.setValue(e, l.value, i);
            }
        }
        static seqWithValue(e, n) {
            const r = [];
            for(let i = 0, s = e.length; i !== s; ++i){
                const o = e[i];
                o.id in n && r.push(o);
            }
            return r;
        }
    }
    function Oz(t, e, n) {
        const r = t.createShader(e);
        return t.shaderSource(r, n), t.compileShader(r), r;
    }
    const gwe = 37297;
    let ywe = 0;
    function vwe(t, e) {
        const n = t.split(`
`), r = [], i = Math.max(e - 6, 0), s = Math.min(e + 6, n.length);
        for(let o = i; o < s; o++){
            const a = o + 1;
            r.push(`${a === e ? ">" : " "} ${a}: ${n[o]}`);
        }
        return r.join(`
`);
    }
    const Lz = new Mn;
    function xwe(t) {
        Zn._getMatrix(Lz, Zn.workingColorSpace, t);
        const e = `mat3( ${Lz.elements.map((n)=>n.toFixed(4))} )`;
        switch(Zn.getTransfer(t)){
            case Sb:
                return [
                    e,
                    "LinearTransferOETF"
                ];
            case hr:
                return [
                    e,
                    "sRGBTransferOETF"
                ];
            default:
                return console.warn("THREE.WebGLProgram: Unsupported color space: ", t), [
                    e,
                    "LinearTransferOETF"
                ];
        }
    }
    function Dz(t, e, n) {
        const r = t.getShaderParameter(e, t.COMPILE_STATUS), i = t.getShaderInfoLog(e).trim();
        if (r && i === "") return "";
        const s = /ERROR: 0:(\d+)/.exec(i);
        if (s) {
            const o = parseInt(s[1]);
            return n.toUpperCase() + `

` + i + `

` + vwe(t.getShaderSource(e), o);
        } else return i;
    }
    function bwe(t, e) {
        const n = xwe(e);
        return [
            `vec4 ${t}( vec4 value ) {`,
            `	return ${n[1]}( vec4( value.rgb * ${n[0]}, value.a ) );`,
            "}"
        ].join(`
`);
    }
    function wwe(t, e) {
        let n;
        switch(e){
            case c6:
                n = "Linear";
                break;
            case u6:
                n = "Reinhard";
                break;
            case d6:
                n = "Cineon";
                break;
            case jT:
                n = "ACESFilmic";
                break;
            case h6:
                n = "AgX";
                break;
            case p6:
                n = "Neutral";
                break;
            case f6:
                n = "Custom";
                break;
            default:
                console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e), n = "Linear";
        }
        return "vec3 " + t + "( vec3 color ) { return " + n + "ToneMapping( color ); }";
    }
    const zS = new ye;
    function _we() {
        Zn.getLuminanceCoefficients(zS);
        const t = zS.x.toFixed(4), e = zS.y.toFixed(4), n = zS.z.toFixed(4);
        return [
            "float luminance( const in vec3 rgb ) {",
            `	const vec3 weights = vec3( ${t}, ${e}, ${n} );`,
            "	return dot( weights, rgb );",
            "}"
        ].join(`
`);
    }
    function Swe(t) {
        return [
            t.extensionClipCullDistance ? "#extension GL_ANGLE_clip_cull_distance : require" : "",
            t.extensionMultiDraw ? "#extension GL_ANGLE_multi_draw : require" : ""
        ].filter(Jx).join(`
`);
    }
    function Ewe(t) {
        const e = [];
        for(const n in t){
            const r = t[n];
            r !== !1 && e.push("#define " + n + " " + r);
        }
        return e.join(`
`);
    }
    function Mwe(t, e) {
        const n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES);
        for(let i = 0; i < r; i++){
            const s = t.getActiveAttrib(e, i), o = s.name;
            let a = 1;
            s.type === t.FLOAT_MAT2 && (a = 2), s.type === t.FLOAT_MAT3 && (a = 3), s.type === t.FLOAT_MAT4 && (a = 4), n[o] = {
                type: s.type,
                location: t.getAttribLocation(e, o),
                locationSize: a
            };
        }
        return n;
    }
    function Jx(t) {
        return t !== "";
    }
    function Fz(t, e) {
        const n = e.numSpotLightShadows + e.numSpotLightMaps - e.numSpotLightShadowsWithMaps;
        return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g, e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g, n).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
    }
    function jz(t, e) {
        return t.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection);
    }
    const Twe = /^[ \t]*#include +<([\w\d./]+)>/gm;
    function Sk(t) {
        return t.replace(Twe, Iwe);
    }
    const Cwe = new Map;
    function Iwe(t, e) {
        let n = Ln[e];
        if (n === void 0) {
            const r = Cwe.get(e);
            if (r !== void 0) n = Ln[r], console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.', e, r);
            else throw new Error("Can not resolve #include <" + e + ">");
        }
        return Sk(n);
    }
    const Rwe = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
    function Bz(t) {
        return t.replace(Rwe, Awe);
    }
    function Awe(t, e, n, r) {
        let i = "";
        for(let s = parseInt(e); s < parseInt(n); s++)i += r.replace(/\[\s*i\s*\]/g, "[ " + s + " ]").replace(/UNROLLED_LOOP_INDEX/g, s);
        return i;
    }
    function Uz(t) {
        let e = `precision ${t.precision} float;
	precision ${t.precision} int;
	precision ${t.precision} sampler2D;
	precision ${t.precision} samplerCube;
	precision ${t.precision} sampler3D;
	precision ${t.precision} sampler2DArray;
	precision ${t.precision} sampler2DShadow;
	precision ${t.precision} samplerCubeShadow;
	precision ${t.precision} sampler2DArrayShadow;
	precision ${t.precision} isampler2D;
	precision ${t.precision} isampler3D;
	precision ${t.precision} isamplerCube;
	precision ${t.precision} isampler2DArray;
	precision ${t.precision} usampler2D;
	precision ${t.precision} usampler3D;
	precision ${t.precision} usamplerCube;
	precision ${t.precision} usampler2DArray;
	`;
        return t.precision === "highp" ? e += `
#define HIGH_PRECISION` : t.precision === "mediump" ? e += `
#define MEDIUM_PRECISION` : t.precision === "lowp" && (e += `
#define LOW_PRECISION`), e;
    }
    function Nwe(t) {
        let e = "SHADOWMAP_TYPE_BASIC";
        return t.shadowMapType === FT ? e = "SHADOWMAP_TYPE_PCF" : t.shadowMapType === S0 ? e = "SHADOWMAP_TYPE_PCF_SOFT" : t.shadowMapType === Vl && (e = "SHADOWMAP_TYPE_VSM"), e;
    }
    function Pwe(t) {
        let e = "ENVMAP_TYPE_CUBE";
        if (t.envMap) switch(t.envMapMode){
            case gd:
            case Qf:
                e = "ENVMAP_TYPE_CUBE";
                break;
            case gv:
                e = "ENVMAP_TYPE_CUBE_UV";
                break;
        }
        return e;
    }
    function kwe(t) {
        let e = "ENVMAP_MODE_REFLECTION";
        if (t.envMap) switch(t.envMapMode){
            case Qf:
                e = "ENVMAP_MODE_REFRACTION";
                break;
        }
        return e;
    }
    function Owe(t) {
        let e = "ENVMAP_BLENDING_NONE";
        if (t.envMap) switch(t.combine){
            case uw:
                e = "ENVMAP_BLENDING_MULTIPLY";
                break;
            case a6:
                e = "ENVMAP_BLENDING_MIX";
                break;
            case l6:
                e = "ENVMAP_BLENDING_ADD";
                break;
        }
        return e;
    }
    function Lwe(t) {
        const e = t.envMapCubeUVHeight;
        if (e === null) return null;
        const n = Math.log2(e) - 2, r = 1 / e;
        return {
            texelWidth: 1 / (3 * Math.max(Math.pow(2, n), 7 * 16)),
            texelHeight: r,
            maxMip: n
        };
    }
    function Dwe(t, e, n, r) {
        const i = t.getContext(), s = n.defines;
        let o = n.vertexShader, a = n.fragmentShader;
        const l = Nwe(n), c = Pwe(n), u = kwe(n), f = Owe(n), p = Lwe(n), g = Swe(n), x = Ewe(s), S = i.createProgram();
        let _, b, M = n.glslVersion ? "#version " + n.glslVersion + `
` : "";
        n.isRawShaderMaterial ? (_ = [
            "#define SHADER_TYPE " + n.shaderType,
            "#define SHADER_NAME " + n.shaderName,
            x
        ].filter(Jx).join(`
`), _.length > 0 && (_ += `
`), b = [
            "#define SHADER_TYPE " + n.shaderType,
            "#define SHADER_NAME " + n.shaderName,
            x
        ].filter(Jx).join(`
`), b.length > 0 && (b += `
`)) : (_ = [
            Uz(n),
            "#define SHADER_TYPE " + n.shaderType,
            "#define SHADER_NAME " + n.shaderName,
            x,
            n.extensionClipCullDistance ? "#define USE_CLIP_DISTANCE" : "",
            n.batching ? "#define USE_BATCHING" : "",
            n.batchingColor ? "#define USE_BATCHING_COLOR" : "",
            n.instancing ? "#define USE_INSTANCING" : "",
            n.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
            n.instancingMorph ? "#define USE_INSTANCING_MORPH" : "",
            n.useFog && n.fog ? "#define USE_FOG" : "",
            n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
            n.map ? "#define USE_MAP" : "",
            n.envMap ? "#define USE_ENVMAP" : "",
            n.envMap ? "#define " + u : "",
            n.lightMap ? "#define USE_LIGHTMAP" : "",
            n.aoMap ? "#define USE_AOMAP" : "",
            n.bumpMap ? "#define USE_BUMPMAP" : "",
            n.normalMap ? "#define USE_NORMALMAP" : "",
            n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
            n.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
            n.displacementMap ? "#define USE_DISPLACEMENTMAP" : "",
            n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
            n.anisotropy ? "#define USE_ANISOTROPY" : "",
            n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
            n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
            n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
            n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
            n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
            n.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
            n.specularMap ? "#define USE_SPECULARMAP" : "",
            n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
            n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
            n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
            n.metalnessMap ? "#define USE_METALNESSMAP" : "",
            n.alphaMap ? "#define USE_ALPHAMAP" : "",
            n.alphaHash ? "#define USE_ALPHAHASH" : "",
            n.transmission ? "#define USE_TRANSMISSION" : "",
            n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
            n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
            n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
            n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
            n.mapUv ? "#define MAP_UV " + n.mapUv : "",
            n.alphaMapUv ? "#define ALPHAMAP_UV " + n.alphaMapUv : "",
            n.lightMapUv ? "#define LIGHTMAP_UV " + n.lightMapUv : "",
            n.aoMapUv ? "#define AOMAP_UV " + n.aoMapUv : "",
            n.emissiveMapUv ? "#define EMISSIVEMAP_UV " + n.emissiveMapUv : "",
            n.bumpMapUv ? "#define BUMPMAP_UV " + n.bumpMapUv : "",
            n.normalMapUv ? "#define NORMALMAP_UV " + n.normalMapUv : "",
            n.displacementMapUv ? "#define DISPLACEMENTMAP_UV " + n.displacementMapUv : "",
            n.metalnessMapUv ? "#define METALNESSMAP_UV " + n.metalnessMapUv : "",
            n.roughnessMapUv ? "#define ROUGHNESSMAP_UV " + n.roughnessMapUv : "",
            n.anisotropyMapUv ? "#define ANISOTROPYMAP_UV " + n.anisotropyMapUv : "",
            n.clearcoatMapUv ? "#define CLEARCOATMAP_UV " + n.clearcoatMapUv : "",
            n.clearcoatNormalMapUv ? "#define CLEARCOAT_NORMALMAP_UV " + n.clearcoatNormalMapUv : "",
            n.clearcoatRoughnessMapUv ? "#define CLEARCOAT_ROUGHNESSMAP_UV " + n.clearcoatRoughnessMapUv : "",
            n.iridescenceMapUv ? "#define IRIDESCENCEMAP_UV " + n.iridescenceMapUv : "",
            n.iridescenceThicknessMapUv ? "#define IRIDESCENCE_THICKNESSMAP_UV " + n.iridescenceThicknessMapUv : "",
            n.sheenColorMapUv ? "#define SHEEN_COLORMAP_UV " + n.sheenColorMapUv : "",
            n.sheenRoughnessMapUv ? "#define SHEEN_ROUGHNESSMAP_UV " + n.sheenRoughnessMapUv : "",
            n.specularMapUv ? "#define SPECULARMAP_UV " + n.specularMapUv : "",
            n.specularColorMapUv ? "#define SPECULAR_COLORMAP_UV " + n.specularColorMapUv : "",
            n.specularIntensityMapUv ? "#define SPECULAR_INTENSITYMAP_UV " + n.specularIntensityMapUv : "",
            n.transmissionMapUv ? "#define TRANSMISSIONMAP_UV " + n.transmissionMapUv : "",
            n.thicknessMapUv ? "#define THICKNESSMAP_UV " + n.thicknessMapUv : "",
            n.vertexTangents && n.flatShading === !1 ? "#define USE_TANGENT" : "",
            n.vertexColors ? "#define USE_COLOR" : "",
            n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
            n.vertexUv1s ? "#define USE_UV1" : "",
            n.vertexUv2s ? "#define USE_UV2" : "",
            n.vertexUv3s ? "#define USE_UV3" : "",
            n.pointsUvs ? "#define USE_POINTS_UV" : "",
            n.flatShading ? "#define FLAT_SHADED" : "",
            n.skinning ? "#define USE_SKINNING" : "",
            n.morphTargets ? "#define USE_MORPHTARGETS" : "",
            n.morphNormals && n.flatShading === !1 ? "#define USE_MORPHNORMALS" : "",
            n.morphColors ? "#define USE_MORPHCOLORS" : "",
            n.morphTargetsCount > 0 ? "#define MORPHTARGETS_TEXTURE_STRIDE " + n.morphTextureStride : "",
            n.morphTargetsCount > 0 ? "#define MORPHTARGETS_COUNT " + n.morphTargetsCount : "",
            n.doubleSided ? "#define DOUBLE_SIDED" : "",
            n.flipSided ? "#define FLIP_SIDED" : "",
            n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
            n.shadowMapEnabled ? "#define " + l : "",
            n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
            n.numLightProbes > 0 ? "#define USE_LIGHT_PROBES" : "",
            n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
            n.reverseDepthBuffer ? "#define USE_REVERSEDEPTHBUF" : "",
            "uniform mat4 modelMatrix;",
            "uniform mat4 modelViewMatrix;",
            "uniform mat4 projectionMatrix;",
            "uniform mat4 viewMatrix;",
            "uniform mat3 normalMatrix;",
            "uniform vec3 cameraPosition;",
            "uniform bool isOrthographic;",
            "#ifdef USE_INSTANCING",
            "	attribute mat4 instanceMatrix;",
            "#endif",
            "#ifdef USE_INSTANCING_COLOR",
            "	attribute vec3 instanceColor;",
            "#endif",
            "#ifdef USE_INSTANCING_MORPH",
            "	uniform sampler2D morphTexture;",
            "#endif",
            "attribute vec3 position;",
            "attribute vec3 normal;",
            "attribute vec2 uv;",
            "#ifdef USE_UV1",
            "	attribute vec2 uv1;",
            "#endif",
            "#ifdef USE_UV2",
            "	attribute vec2 uv2;",
            "#endif",
            "#ifdef USE_UV3",
            "	attribute vec2 uv3;",
            "#endif",
            "#ifdef USE_TANGENT",
            "	attribute vec4 tangent;",
            "#endif",
            "#if defined( USE_COLOR_ALPHA )",
            "	attribute vec4 color;",
            "#elif defined( USE_COLOR )",
            "	attribute vec3 color;",
            "#endif",
            "#ifdef USE_SKINNING",
            "	attribute vec4 skinIndex;",
            "	attribute vec4 skinWeight;",
            "#endif",
            `
`
        ].filter(Jx).join(`
`), b = [
            Uz(n),
            "#define SHADER_TYPE " + n.shaderType,
            "#define SHADER_NAME " + n.shaderName,
            x,
            n.useFog && n.fog ? "#define USE_FOG" : "",
            n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
            n.alphaToCoverage ? "#define ALPHA_TO_COVERAGE" : "",
            n.map ? "#define USE_MAP" : "",
            n.matcap ? "#define USE_MATCAP" : "",
            n.envMap ? "#define USE_ENVMAP" : "",
            n.envMap ? "#define " + c : "",
            n.envMap ? "#define " + u : "",
            n.envMap ? "#define " + f : "",
            p ? "#define CUBEUV_TEXEL_WIDTH " + p.texelWidth : "",
            p ? "#define CUBEUV_TEXEL_HEIGHT " + p.texelHeight : "",
            p ? "#define CUBEUV_MAX_MIP " + p.maxMip + ".0" : "",
            n.lightMap ? "#define USE_LIGHTMAP" : "",
            n.aoMap ? "#define USE_AOMAP" : "",
            n.bumpMap ? "#define USE_BUMPMAP" : "",
            n.normalMap ? "#define USE_NORMALMAP" : "",
            n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
            n.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
            n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
            n.anisotropy ? "#define USE_ANISOTROPY" : "",
            n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
            n.clearcoat ? "#define USE_CLEARCOAT" : "",
            n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
            n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
            n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
            n.dispersion ? "#define USE_DISPERSION" : "",
            n.iridescence ? "#define USE_IRIDESCENCE" : "",
            n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
            n.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
            n.specularMap ? "#define USE_SPECULARMAP" : "",
            n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
            n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
            n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
            n.metalnessMap ? "#define USE_METALNESSMAP" : "",
            n.alphaMap ? "#define USE_ALPHAMAP" : "",
            n.alphaTest ? "#define USE_ALPHATEST" : "",
            n.alphaHash ? "#define USE_ALPHAHASH" : "",
            n.sheen ? "#define USE_SHEEN" : "",
            n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
            n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
            n.transmission ? "#define USE_TRANSMISSION" : "",
            n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
            n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
            n.vertexTangents && n.flatShading === !1 ? "#define USE_TANGENT" : "",
            n.vertexColors || n.instancingColor || n.batchingColor ? "#define USE_COLOR" : "",
            n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
            n.vertexUv1s ? "#define USE_UV1" : "",
            n.vertexUv2s ? "#define USE_UV2" : "",
            n.vertexUv3s ? "#define USE_UV3" : "",
            n.pointsUvs ? "#define USE_POINTS_UV" : "",
            n.gradientMap ? "#define USE_GRADIENTMAP" : "",
            n.flatShading ? "#define FLAT_SHADED" : "",
            n.doubleSided ? "#define DOUBLE_SIDED" : "",
            n.flipSided ? "#define FLIP_SIDED" : "",
            n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
            n.shadowMapEnabled ? "#define " + l : "",
            n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
            n.numLightProbes > 0 ? "#define USE_LIGHT_PROBES" : "",
            n.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
            n.decodeVideoTextureEmissive ? "#define DECODE_VIDEO_TEXTURE_EMISSIVE" : "",
            n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
            n.reverseDepthBuffer ? "#define USE_REVERSEDEPTHBUF" : "",
            "uniform mat4 viewMatrix;",
            "uniform vec3 cameraPosition;",
            "uniform bool isOrthographic;",
            n.toneMapping !== Vc ? "#define TONE_MAPPING" : "",
            n.toneMapping !== Vc ? Ln.tonemapping_pars_fragment : "",
            n.toneMapping !== Vc ? wwe("toneMapping", n.toneMapping) : "",
            n.dithering ? "#define DITHERING" : "",
            n.opaque ? "#define OPAQUE" : "",
            Ln.colorspace_pars_fragment,
            bwe("linearToOutputTexel", n.outputColorSpace),
            _we(),
            n.useDepthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "",
            `
`
        ].filter(Jx).join(`
`)), o = Sk(o), o = Fz(o, n), o = jz(o, n), a = Sk(a), a = Fz(a, n), a = jz(a, n), o = Bz(o), a = Bz(a), n.isRawShaderMaterial !== !0 && (M = `#version 300 es
`, _ = [
            g,
            "#define attribute in",
            "#define varying out",
            "#define texture2D texture"
        ].join(`
`) + `
` + _, b = [
            "#define varying in",
            n.glslVersion === hk ? "" : "layout(location = 0) out highp vec4 pc_fragColor;",
            n.glslVersion === hk ? "" : "#define gl_FragColor pc_fragColor",
            "#define gl_FragDepthEXT gl_FragDepth",
            "#define texture2D texture",
            "#define textureCube texture",
            "#define texture2DProj textureProj",
            "#define texture2DLodEXT textureLod",
            "#define texture2DProjLodEXT textureProjLod",
            "#define textureCubeLodEXT textureLod",
            "#define texture2DGradEXT textureGrad",
            "#define texture2DProjGradEXT textureProjGrad",
            "#define textureCubeGradEXT textureGrad"
        ].join(`
`) + `
` + b);
        const E = M + _ + o, T = M + b + a, k = Oz(i, i.VERTEX_SHADER, E), N = Oz(i, i.FRAGMENT_SHADER, T);
        i.attachShader(S, k), i.attachShader(S, N), n.index0AttributeName !== void 0 ? i.bindAttribLocation(S, 0, n.index0AttributeName) : n.morphTargets === !0 && i.bindAttribLocation(S, 0, "position"), i.linkProgram(S);
        function D(P) {
            if (t.debug.checkShaderErrors) {
                const B = i.getProgramInfoLog(S).trim(), U = i.getShaderInfoLog(k).trim(), j = i.getShaderInfoLog(N).trim();
                let K = !0, q = !0;
                if (i.getProgramParameter(S, i.LINK_STATUS) === !1) if (K = !1, typeof t.debug.onShaderError == "function") t.debug.onShaderError(i, S, k, N);
                else {
                    const te = Dz(i, k, "vertex"), W = Dz(i, N, "fragment");
                    console.error("THREE.WebGLProgram: Shader Error " + i.getError() + " - VALIDATE_STATUS " + i.getProgramParameter(S, i.VALIDATE_STATUS) + `

Material Name: ` + P.name + `
Material Type: ` + P.type + `

Program Info Log: ` + B + `
` + te + `
` + W);
                }
                else B !== "" ? console.warn("THREE.WebGLProgram: Program Info Log:", B) : (U === "" || j === "") && (q = !1);
                q && (P.diagnostics = {
                    runnable: K,
                    programLog: B,
                    vertexShader: {
                        log: U,
                        prefix: _
                    },
                    fragmentShader: {
                        log: j,
                        prefix: b
                    }
                });
            }
            i.deleteShader(k), i.deleteShader(N), L = new w1(i, S), R = Mwe(i, S);
        }
        let L;
        this.getUniforms = function() {
            return L === void 0 && D(this), L;
        };
        let R;
        this.getAttributes = function() {
            return R === void 0 && D(this), R;
        };
        let A = n.rendererExtensionParallelShaderCompile === !1;
        return this.isReady = function() {
            return A === !1 && (A = i.getProgramParameter(S, gwe)), A;
        }, this.destroy = function() {
            r.releaseStatesOfProgram(this), i.deleteProgram(S), this.program = void 0;
        }, this.type = n.shaderType, this.name = n.shaderName, this.id = ywe++, this.cacheKey = e, this.usedTimes = 1, this.program = S, this.vertexShader = k, this.fragmentShader = N, this;
    }
    let Fwe = 0;
    class jwe {
        constructor(){
            this.shaderCache = new Map, this.materialCache = new Map;
        }
        update(e) {
            const n = e.vertexShader, r = e.fragmentShader, i = this._getShaderStage(n), s = this._getShaderStage(r), o = this._getShaderCacheForMaterial(e);
            return o.has(i) === !1 && (o.add(i), i.usedTimes++), o.has(s) === !1 && (o.add(s), s.usedTimes++), this;
        }
        remove(e) {
            const n = this.materialCache.get(e);
            for (const r of n)r.usedTimes--, r.usedTimes === 0 && this.shaderCache.delete(r.code);
            return this.materialCache.delete(e), this;
        }
        getVertexShaderID(e) {
            return this._getShaderStage(e.vertexShader).id;
        }
        getFragmentShaderID(e) {
            return this._getShaderStage(e.fragmentShader).id;
        }
        dispose() {
            this.shaderCache.clear(), this.materialCache.clear();
        }
        _getShaderCacheForMaterial(e) {
            const n = this.materialCache;
            let r = n.get(e);
            return r === void 0 && (r = new Set, n.set(e, r)), r;
        }
        _getShaderStage(e) {
            const n = this.shaderCache;
            let r = n.get(e);
            return r === void 0 && (r = new Bwe(e), n.set(e, r)), r;
        }
    }
    class Bwe {
        constructor(e){
            this.id = Fwe++, this.code = e, this.usedTimes = 0;
        }
    }
    function Uwe(t, e, n, r, i, s, o) {
        const a = new qp, l = new jwe, c = new Set, u = [], f = i.logarithmicDepthBuffer, p = i.vertexTextures;
        let g = i.precision;
        const x = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "toon",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            MeshMatcapMaterial: "matcap",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
            SpriteMaterial: "sprite"
        };
        function S(R) {
            return c.add(R), R === 0 ? "uv" : `uv${R}`;
        }
        function _(R, A, P, B, U) {
            const j = B.fog, K = U.geometry, q = R.isMeshStandardMaterial ? B.environment : null, te = (R.isMeshStandardMaterial ? n : e).get(R.envMap || q), W = te && te.mapping === gv ? te.image.height : null, J = x[R.type];
            R.precision !== null && (g = i.getMaxPrecision(R.precision), g !== R.precision && console.warn("THREE.WebGLProgram.getParameters:", R.precision, "not supported, using", g, "instead."));
            const Q = K.morphAttributes.position || K.morphAttributes.normal || K.morphAttributes.color, Y = Q !== void 0 ? Q.length : 0;
            let le = 0;
            K.morphAttributes.position !== void 0 && (le = 1), K.morphAttributes.normal !== void 0 && (le = 2), K.morphAttributes.color !== void 0 && (le = 3);
            let ue, ie, he, ge;
            if (J) {
                const wt = Gl[J];
                ue = wt.vertexShader, ie = wt.fragmentShader;
            } else ue = R.vertexShader, ie = R.fragmentShader, l.update(R), he = l.getVertexShaderID(R), ge = l.getFragmentShaderID(R);
            const ve = t.getRenderTarget(), Ee = t.state.buffers.depth.getReversed(), Ce = U.isInstancedMesh === !0, Ne = U.isBatchedMesh === !0, Ve = !!R.map, we = !!R.matcap, Me = !!te, se = !!R.aoMap, Ye = !!R.lightMap, Be = !!R.bumpMap, it = !!R.normalMap, de = !!R.displacementMap, ae = !!R.emissiveMap, oe = !!R.metalnessMap, $ = !!R.roughnessMap, H = R.anisotropy > 0, fe = R.clearcoat > 0, pe = R.dispersion > 0, me = R.iridescence > 0, Ie = R.sheen > 0, Xe = R.transmission > 0, Ze = H && !!R.anisotropyMap, at = fe && !!R.clearcoatMap, Je = fe && !!R.clearcoatNormalMap, Pe = fe && !!R.clearcoatRoughnessMap, Fe = me && !!R.iridescenceMap, nt = me && !!R.iridescenceThicknessMap, ct = Ie && !!R.sheenColorMap, st = Ie && !!R.sheenRoughnessMap, _e = !!R.specularMap, $e = !!R.specularColorMap, ht = !!R.specularIntensityMap, Se = Xe && !!R.transmissionMap, lt = Xe && !!R.thicknessMap, Re = !!R.gradientMap, Ue = !!R.alphaMap, We = R.alphaTest > 0, rt = !!R.alphaHash, pt = !!R.extensions;
            let Nt = Vc;
            R.toneMapped && (ve === null || ve.isXRRenderTarget === !0) && (Nt = t.toneMapping);
            const Zt = {
                shaderID: J,
                shaderType: R.type,
                shaderName: R.name,
                vertexShader: ue,
                fragmentShader: ie,
                defines: R.defines,
                customVertexShaderID: he,
                customFragmentShaderID: ge,
                isRawShaderMaterial: R.isRawShaderMaterial === !0,
                glslVersion: R.glslVersion,
                precision: g,
                batching: Ne,
                batchingColor: Ne && U._colorsTexture !== null,
                instancing: Ce,
                instancingColor: Ce && U.instanceColor !== null,
                instancingMorph: Ce && U.morphTexture !== null,
                supportsVertexTextures: p,
                outputColorSpace: ve === null ? t.outputColorSpace : ve.isXRRenderTarget === !0 ? ve.texture.colorSpace : lm,
                alphaToCoverage: !!R.alphaToCoverage,
                map: Ve,
                matcap: we,
                envMap: Me,
                envMapMode: Me && te.mapping,
                envMapCubeUVHeight: W,
                aoMap: se,
                lightMap: Ye,
                bumpMap: Be,
                normalMap: it,
                displacementMap: p && de,
                emissiveMap: ae,
                normalMapObjectSpace: it && R.normalMapType === w6,
                normalMapTangentSpace: it && R.normalMapType === ih,
                metalnessMap: oe,
                roughnessMap: $,
                anisotropy: H,
                anisotropyMap: Ze,
                clearcoat: fe,
                clearcoatMap: at,
                clearcoatNormalMap: Je,
                clearcoatRoughnessMap: Pe,
                dispersion: pe,
                iridescence: me,
                iridescenceMap: Fe,
                iridescenceThicknessMap: nt,
                sheen: Ie,
                sheenColorMap: ct,
                sheenRoughnessMap: st,
                specularMap: _e,
                specularColorMap: $e,
                specularIntensityMap: ht,
                transmission: Xe,
                transmissionMap: Se,
                thicknessMap: lt,
                gradientMap: Re,
                opaque: R.transparent === !1 && R.blending === zp && R.alphaToCoverage === !1,
                alphaMap: Ue,
                alphaTest: We,
                alphaHash: rt,
                combine: R.combine,
                mapUv: Ve && S(R.map.channel),
                aoMapUv: se && S(R.aoMap.channel),
                lightMapUv: Ye && S(R.lightMap.channel),
                bumpMapUv: Be && S(R.bumpMap.channel),
                normalMapUv: it && S(R.normalMap.channel),
                displacementMapUv: de && S(R.displacementMap.channel),
                emissiveMapUv: ae && S(R.emissiveMap.channel),
                metalnessMapUv: oe && S(R.metalnessMap.channel),
                roughnessMapUv: $ && S(R.roughnessMap.channel),
                anisotropyMapUv: Ze && S(R.anisotropyMap.channel),
                clearcoatMapUv: at && S(R.clearcoatMap.channel),
                clearcoatNormalMapUv: Je && S(R.clearcoatNormalMap.channel),
                clearcoatRoughnessMapUv: Pe && S(R.clearcoatRoughnessMap.channel),
                iridescenceMapUv: Fe && S(R.iridescenceMap.channel),
                iridescenceThicknessMapUv: nt && S(R.iridescenceThicknessMap.channel),
                sheenColorMapUv: ct && S(R.sheenColorMap.channel),
                sheenRoughnessMapUv: st && S(R.sheenRoughnessMap.channel),
                specularMapUv: _e && S(R.specularMap.channel),
                specularColorMapUv: $e && S(R.specularColorMap.channel),
                specularIntensityMapUv: ht && S(R.specularIntensityMap.channel),
                transmissionMapUv: Se && S(R.transmissionMap.channel),
                thicknessMapUv: lt && S(R.thicknessMap.channel),
                alphaMapUv: Ue && S(R.alphaMap.channel),
                vertexTangents: !!K.attributes.tangent && (it || H),
                vertexColors: R.vertexColors,
                vertexAlphas: R.vertexColors === !0 && !!K.attributes.color && K.attributes.color.itemSize === 4,
                pointsUvs: U.isPoints === !0 && !!K.attributes.uv && (Ve || Ue),
                fog: !!j,
                useFog: R.fog === !0,
                fogExp2: !!j && j.isFogExp2,
                flatShading: R.flatShading === !0,
                sizeAttenuation: R.sizeAttenuation === !0,
                logarithmicDepthBuffer: f,
                reverseDepthBuffer: Ee,
                skinning: U.isSkinnedMesh === !0,
                morphTargets: K.morphAttributes.position !== void 0,
                morphNormals: K.morphAttributes.normal !== void 0,
                morphColors: K.morphAttributes.color !== void 0,
                morphTargetsCount: Y,
                morphTextureStride: le,
                numDirLights: A.directional.length,
                numPointLights: A.point.length,
                numSpotLights: A.spot.length,
                numSpotLightMaps: A.spotLightMap.length,
                numRectAreaLights: A.rectArea.length,
                numHemiLights: A.hemi.length,
                numDirLightShadows: A.directionalShadowMap.length,
                numPointLightShadows: A.pointShadowMap.length,
                numSpotLightShadows: A.spotShadowMap.length,
                numSpotLightShadowsWithMaps: A.numSpotLightShadowsWithMaps,
                numLightProbes: A.numLightProbes,
                numClippingPlanes: o.numPlanes,
                numClipIntersection: o.numIntersection,
                dithering: R.dithering,
                shadowMapEnabled: t.shadowMap.enabled && P.length > 0,
                shadowMapType: t.shadowMap.type,
                toneMapping: Nt,
                decodeVideoTexture: Ve && R.map.isVideoTexture === !0 && Zn.getTransfer(R.map.colorSpace) === hr,
                decodeVideoTextureEmissive: ae && R.emissiveMap.isVideoTexture === !0 && Zn.getTransfer(R.emissiveMap.colorSpace) === hr,
                premultipliedAlpha: R.premultipliedAlpha,
                doubleSided: R.side === Oc,
                flipSided: R.side === To,
                useDepthPacking: R.depthPacking >= 0,
                depthPacking: R.depthPacking || 0,
                index0AttributeName: R.index0AttributeName,
                extensionClipCullDistance: pt && R.extensions.clipCullDistance === !0 && r.has("WEBGL_clip_cull_distance"),
                extensionMultiDraw: (pt && R.extensions.multiDraw === !0 || Ne) && r.has("WEBGL_multi_draw"),
                rendererExtensionParallelShaderCompile: r.has("KHR_parallel_shader_compile"),
                customProgramCacheKey: R.customProgramCacheKey()
            };
            return Zt.vertexUv1s = c.has(1), Zt.vertexUv2s = c.has(2), Zt.vertexUv3s = c.has(3), c.clear(), Zt;
        }
        function b(R) {
            const A = [];
            if (R.shaderID ? A.push(R.shaderID) : (A.push(R.customVertexShaderID), A.push(R.customFragmentShaderID)), R.defines !== void 0) for(const P in R.defines)A.push(P), A.push(R.defines[P]);
            return R.isRawShaderMaterial === !1 && (M(A, R), E(A, R), A.push(t.outputColorSpace)), A.push(R.customProgramCacheKey), A.join();
        }
        function M(R, A) {
            R.push(A.precision), R.push(A.outputColorSpace), R.push(A.envMapMode), R.push(A.envMapCubeUVHeight), R.push(A.mapUv), R.push(A.alphaMapUv), R.push(A.lightMapUv), R.push(A.aoMapUv), R.push(A.bumpMapUv), R.push(A.normalMapUv), R.push(A.displacementMapUv), R.push(A.emissiveMapUv), R.push(A.metalnessMapUv), R.push(A.roughnessMapUv), R.push(A.anisotropyMapUv), R.push(A.clearcoatMapUv), R.push(A.clearcoatNormalMapUv), R.push(A.clearcoatRoughnessMapUv), R.push(A.iridescenceMapUv), R.push(A.iridescenceThicknessMapUv), R.push(A.sheenColorMapUv), R.push(A.sheenRoughnessMapUv), R.push(A.specularMapUv), R.push(A.specularColorMapUv), R.push(A.specularIntensityMapUv), R.push(A.transmissionMapUv), R.push(A.thicknessMapUv), R.push(A.combine), R.push(A.fogExp2), R.push(A.sizeAttenuation), R.push(A.morphTargetsCount), R.push(A.morphAttributeCount), R.push(A.numDirLights), R.push(A.numPointLights), R.push(A.numSpotLights), R.push(A.numSpotLightMaps), R.push(A.numHemiLights), R.push(A.numRectAreaLights), R.push(A.numDirLightShadows), R.push(A.numPointLightShadows), R.push(A.numSpotLightShadows), R.push(A.numSpotLightShadowsWithMaps), R.push(A.numLightProbes), R.push(A.shadowMapType), R.push(A.toneMapping), R.push(A.numClippingPlanes), R.push(A.numClipIntersection), R.push(A.depthPacking);
        }
        function E(R, A) {
            a.disableAll(), A.supportsVertexTextures && a.enable(0), A.instancing && a.enable(1), A.instancingColor && a.enable(2), A.instancingMorph && a.enable(3), A.matcap && a.enable(4), A.envMap && a.enable(5), A.normalMapObjectSpace && a.enable(6), A.normalMapTangentSpace && a.enable(7), A.clearcoat && a.enable(8), A.iridescence && a.enable(9), A.alphaTest && a.enable(10), A.vertexColors && a.enable(11), A.vertexAlphas && a.enable(12), A.vertexUv1s && a.enable(13), A.vertexUv2s && a.enable(14), A.vertexUv3s && a.enable(15), A.vertexTangents && a.enable(16), A.anisotropy && a.enable(17), A.alphaHash && a.enable(18), A.batching && a.enable(19), A.dispersion && a.enable(20), A.batchingColor && a.enable(21), R.push(a.mask), a.disableAll(), A.fog && a.enable(0), A.useFog && a.enable(1), A.flatShading && a.enable(2), A.logarithmicDepthBuffer && a.enable(3), A.reverseDepthBuffer && a.enable(4), A.skinning && a.enable(5), A.morphTargets && a.enable(6), A.morphNormals && a.enable(7), A.morphColors && a.enable(8), A.premultipliedAlpha && a.enable(9), A.shadowMapEnabled && a.enable(10), A.doubleSided && a.enable(11), A.flipSided && a.enable(12), A.useDepthPacking && a.enable(13), A.dithering && a.enable(14), A.transmission && a.enable(15), A.sheen && a.enable(16), A.opaque && a.enable(17), A.pointsUvs && a.enable(18), A.decodeVideoTexture && a.enable(19), A.decodeVideoTextureEmissive && a.enable(20), A.alphaToCoverage && a.enable(21), R.push(a.mask);
        }
        function T(R) {
            const A = x[R.type];
            let P;
            if (A) {
                const B = Gl[A];
                P = O6.clone(B.uniforms);
            } else P = R.uniforms;
            return P;
        }
        function k(R, A) {
            let P;
            for(let B = 0, U = u.length; B < U; B++){
                const j = u[B];
                if (j.cacheKey === A) {
                    P = j, ++P.usedTimes;
                    break;
                }
            }
            return P === void 0 && (P = new Dwe(t, A, R, s), u.push(P)), P;
        }
        function N(R) {
            if (--R.usedTimes === 0) {
                const A = u.indexOf(R);
                u[A] = u[u.length - 1], u.pop(), R.destroy();
            }
        }
        function D(R) {
            l.remove(R);
        }
        function L() {
            l.dispose();
        }
        return {
            getParameters: _,
            getProgramCacheKey: b,
            getUniforms: T,
            acquireProgram: k,
            releaseProgram: N,
            releaseShaderCache: D,
            programs: u,
            dispose: L
        };
    }
    function zwe() {
        let t = new WeakMap;
        function e(o) {
            return t.has(o);
        }
        function n(o) {
            let a = t.get(o);
            return a === void 0 && (a = {}, t.set(o, a)), a;
        }
        function r(o) {
            t.delete(o);
        }
        function i(o, a, l) {
            t.get(o)[a] = l;
        }
        function s() {
            t = new WeakMap;
        }
        return {
            has: e,
            get: n,
            remove: r,
            update: i,
            dispose: s
        };
    }
    function Vwe(t, e) {
        return t.groupOrder !== e.groupOrder ? t.groupOrder - e.groupOrder : t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id;
    }
    function zz(t, e) {
        return t.groupOrder !== e.groupOrder ? t.groupOrder - e.groupOrder : t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id;
    }
    function Vz() {
        const t = [];
        let e = 0;
        const n = [], r = [], i = [];
        function s() {
            e = 0, n.length = 0, r.length = 0, i.length = 0;
        }
        function o(f, p, g, x, S, _) {
            let b = t[e];
            return b === void 0 ? (b = {
                id: f.id,
                object: f,
                geometry: p,
                material: g,
                groupOrder: x,
                renderOrder: f.renderOrder,
                z: S,
                group: _
            }, t[e] = b) : (b.id = f.id, b.object = f, b.geometry = p, b.material = g, b.groupOrder = x, b.renderOrder = f.renderOrder, b.z = S, b.group = _), e++, b;
        }
        function a(f, p, g, x, S, _) {
            const b = o(f, p, g, x, S, _);
            g.transmission > 0 ? r.push(b) : g.transparent === !0 ? i.push(b) : n.push(b);
        }
        function l(f, p, g, x, S, _) {
            const b = o(f, p, g, x, S, _);
            g.transmission > 0 ? r.unshift(b) : g.transparent === !0 ? i.unshift(b) : n.unshift(b);
        }
        function c(f, p) {
            n.length > 1 && n.sort(f || Vwe), r.length > 1 && r.sort(p || zz), i.length > 1 && i.sort(p || zz);
        }
        function u() {
            for(let f = e, p = t.length; f < p; f++){
                const g = t[f];
                if (g.id === null) break;
                g.id = null, g.object = null, g.geometry = null, g.material = null, g.group = null;
            }
        }
        return {
            opaque: n,
            transmissive: r,
            transparent: i,
            init: s,
            push: a,
            unshift: l,
            finish: u,
            sort: c
        };
    }
    function Wwe() {
        let t = new WeakMap;
        function e(r, i) {
            const s = t.get(r);
            let o;
            return s === void 0 ? (o = new Vz, t.set(r, [
                o
            ])) : i >= s.length ? (o = new Vz, s.push(o)) : o = s[i], o;
        }
        function n() {
            t = new WeakMap;
        }
        return {
            get: e,
            dispose: n
        };
    }
    function qwe() {
        const t = {};
        return {
            get: function(e) {
                if (t[e.id] !== void 0) return t[e.id];
                let n;
                switch(e.type){
                    case "DirectionalLight":
                        n = {
                            direction: new ye,
                            color: new Ft
                        };
                        break;
                    case "SpotLight":
                        n = {
                            position: new ye,
                            direction: new ye,
                            color: new Ft,
                            distance: 0,
                            coneCos: 0,
                            penumbraCos: 0,
                            decay: 0
                        };
                        break;
                    case "PointLight":
                        n = {
                            position: new ye,
                            color: new Ft,
                            distance: 0,
                            decay: 0
                        };
                        break;
                    case "HemisphereLight":
                        n = {
                            direction: new ye,
                            skyColor: new Ft,
                            groundColor: new Ft
                        };
                        break;
                    case "RectAreaLight":
                        n = {
                            color: new Ft,
                            position: new ye,
                            halfWidth: new ye,
                            halfHeight: new ye
                        };
                        break;
                }
                return t[e.id] = n, n;
            }
        };
    }
    function Hwe() {
        const t = {};
        return {
            get: function(e) {
                if (t[e.id] !== void 0) return t[e.id];
                let n;
                switch(e.type){
                    case "DirectionalLight":
                        n = {
                            shadowIntensity: 1,
                            shadowBias: 0,
                            shadowNormalBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new ot
                        };
                        break;
                    case "SpotLight":
                        n = {
                            shadowIntensity: 1,
                            shadowBias: 0,
                            shadowNormalBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new ot
                        };
                        break;
                    case "PointLight":
                        n = {
                            shadowIntensity: 1,
                            shadowBias: 0,
                            shadowNormalBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new ot,
                            shadowCameraNear: 1,
                            shadowCameraFar: 1e3
                        };
                        break;
                }
                return t[e.id] = n, n;
            }
        };
    }
    let $we = 0;
    function Gwe(t, e) {
        return (e.castShadow ? 2 : 0) - (t.castShadow ? 2 : 0) + (e.map ? 1 : 0) - (t.map ? 1 : 0);
    }
    function Xwe(t) {
        const e = new qwe, n = Hwe(), r = {
            version: 0,
            hash: {
                directionalLength: -1,
                pointLength: -1,
                spotLength: -1,
                rectAreaLength: -1,
                hemiLength: -1,
                numDirectionalShadows: -1,
                numPointShadows: -1,
                numSpotShadows: -1,
                numSpotMaps: -1,
                numLightProbes: -1
            },
            ambient: [
                0,
                0,
                0
            ],
            probe: [],
            directional: [],
            directionalShadow: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotLightMap: [],
            spotShadow: [],
            spotShadowMap: [],
            spotLightMatrix: [],
            rectArea: [],
            rectAreaLTC1: null,
            rectAreaLTC2: null,
            point: [],
            pointShadow: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: [],
            numSpotLightShadowsWithMaps: 0,
            numLightProbes: 0
        };
        for(let c = 0; c < 9; c++)r.probe.push(new ye);
        const i = new ye, s = new fn, o = new fn;
        function a(c) {
            let u = 0, f = 0, p = 0;
            for(let R = 0; R < 9; R++)r.probe[R].set(0, 0, 0);
            let g = 0, x = 0, S = 0, _ = 0, b = 0, M = 0, E = 0, T = 0, k = 0, N = 0, D = 0;
            c.sort(Gwe);
            for(let R = 0, A = c.length; R < A; R++){
                const P = c[R], B = P.color, U = P.intensity, j = P.distance, K = P.shadow && P.shadow.map ? P.shadow.map.texture : null;
                if (P.isAmbientLight) u += B.r * U, f += B.g * U, p += B.b * U;
                else if (P.isLightProbe) {
                    for(let q = 0; q < 9; q++)r.probe[q].addScaledVector(P.sh.coefficients[q], U);
                    D++;
                } else if (P.isDirectionalLight) {
                    const q = e.get(P);
                    if (q.color.copy(P.color).multiplyScalar(P.intensity), P.castShadow) {
                        const te = P.shadow, W = n.get(P);
                        W.shadowIntensity = te.intensity, W.shadowBias = te.bias, W.shadowNormalBias = te.normalBias, W.shadowRadius = te.radius, W.shadowMapSize = te.mapSize, r.directionalShadow[g] = W, r.directionalShadowMap[g] = K, r.directionalShadowMatrix[g] = P.shadow.matrix, M++;
                    }
                    r.directional[g] = q, g++;
                } else if (P.isSpotLight) {
                    const q = e.get(P);
                    q.position.setFromMatrixPosition(P.matrixWorld), q.color.copy(B).multiplyScalar(U), q.distance = j, q.coneCos = Math.cos(P.angle), q.penumbraCos = Math.cos(P.angle * (1 - P.penumbra)), q.decay = P.decay, r.spot[S] = q;
                    const te = P.shadow;
                    if (P.map && (r.spotLightMap[k] = P.map, k++, te.updateMatrices(P), P.castShadow && N++), r.spotLightMatrix[S] = te.matrix, P.castShadow) {
                        const W = n.get(P);
                        W.shadowIntensity = te.intensity, W.shadowBias = te.bias, W.shadowNormalBias = te.normalBias, W.shadowRadius = te.radius, W.shadowMapSize = te.mapSize, r.spotShadow[S] = W, r.spotShadowMap[S] = K, T++;
                    }
                    S++;
                } else if (P.isRectAreaLight) {
                    const q = e.get(P);
                    q.color.copy(B).multiplyScalar(U), q.halfWidth.set(P.width * .5, 0, 0), q.halfHeight.set(0, P.height * .5, 0), r.rectArea[_] = q, _++;
                } else if (P.isPointLight) {
                    const q = e.get(P);
                    if (q.color.copy(P.color).multiplyScalar(P.intensity), q.distance = P.distance, q.decay = P.decay, P.castShadow) {
                        const te = P.shadow, W = n.get(P);
                        W.shadowIntensity = te.intensity, W.shadowBias = te.bias, W.shadowNormalBias = te.normalBias, W.shadowRadius = te.radius, W.shadowMapSize = te.mapSize, W.shadowCameraNear = te.camera.near, W.shadowCameraFar = te.camera.far, r.pointShadow[x] = W, r.pointShadowMap[x] = K, r.pointShadowMatrix[x] = P.shadow.matrix, E++;
                    }
                    r.point[x] = q, x++;
                } else if (P.isHemisphereLight) {
                    const q = e.get(P);
                    q.skyColor.copy(P.color).multiplyScalar(U), q.groundColor.copy(P.groundColor).multiplyScalar(U), r.hemi[b] = q, b++;
                }
            }
            _ > 0 && (t.has("OES_texture_float_linear") === !0 ? (r.rectAreaLTC1 = Mt.LTC_FLOAT_1, r.rectAreaLTC2 = Mt.LTC_FLOAT_2) : (r.rectAreaLTC1 = Mt.LTC_HALF_1, r.rectAreaLTC2 = Mt.LTC_HALF_2)), r.ambient[0] = u, r.ambient[1] = f, r.ambient[2] = p;
            const L = r.hash;
            (L.directionalLength !== g || L.pointLength !== x || L.spotLength !== S || L.rectAreaLength !== _ || L.hemiLength !== b || L.numDirectionalShadows !== M || L.numPointShadows !== E || L.numSpotShadows !== T || L.numSpotMaps !== k || L.numLightProbes !== D) && (r.directional.length = g, r.spot.length = S, r.rectArea.length = _, r.point.length = x, r.hemi.length = b, r.directionalShadow.length = M, r.directionalShadowMap.length = M, r.pointShadow.length = E, r.pointShadowMap.length = E, r.spotShadow.length = T, r.spotShadowMap.length = T, r.directionalShadowMatrix.length = M, r.pointShadowMatrix.length = E, r.spotLightMatrix.length = T + k - N, r.spotLightMap.length = k, r.numSpotLightShadowsWithMaps = N, r.numLightProbes = D, L.directionalLength = g, L.pointLength = x, L.spotLength = S, L.rectAreaLength = _, L.hemiLength = b, L.numDirectionalShadows = M, L.numPointShadows = E, L.numSpotShadows = T, L.numSpotMaps = k, L.numLightProbes = D, r.version = $we++);
        }
        function l(c, u) {
            let f = 0, p = 0, g = 0, x = 0, S = 0;
            const _ = u.matrixWorldInverse;
            for(let b = 0, M = c.length; b < M; b++){
                const E = c[b];
                if (E.isDirectionalLight) {
                    const T = r.directional[f];
                    T.direction.setFromMatrixPosition(E.matrixWorld), i.setFromMatrixPosition(E.target.matrixWorld), T.direction.sub(i), T.direction.transformDirection(_), f++;
                } else if (E.isSpotLight) {
                    const T = r.spot[g];
                    T.position.setFromMatrixPosition(E.matrixWorld), T.position.applyMatrix4(_), T.direction.setFromMatrixPosition(E.matrixWorld), i.setFromMatrixPosition(E.target.matrixWorld), T.direction.sub(i), T.direction.transformDirection(_), g++;
                } else if (E.isRectAreaLight) {
                    const T = r.rectArea[x];
                    T.position.setFromMatrixPosition(E.matrixWorld), T.position.applyMatrix4(_), o.identity(), s.copy(E.matrixWorld), s.premultiply(_), o.extractRotation(s), T.halfWidth.set(E.width * .5, 0, 0), T.halfHeight.set(0, E.height * .5, 0), T.halfWidth.applyMatrix4(o), T.halfHeight.applyMatrix4(o), x++;
                } else if (E.isPointLight) {
                    const T = r.point[p];
                    T.position.setFromMatrixPosition(E.matrixWorld), T.position.applyMatrix4(_), p++;
                } else if (E.isHemisphereLight) {
                    const T = r.hemi[S];
                    T.direction.setFromMatrixPosition(E.matrixWorld), T.direction.transformDirection(_), S++;
                }
            }
        }
        return {
            setup: a,
            setupView: l,
            state: r
        };
    }
    function Wz(t) {
        const e = new Xwe(t), n = [], r = [];
        function i(u) {
            c.camera = u, n.length = 0, r.length = 0;
        }
        function s(u) {
            n.push(u);
        }
        function o(u) {
            r.push(u);
        }
        function a() {
            e.setup(n);
        }
        function l(u) {
            e.setupView(n, u);
        }
        const c = {
            lightsArray: n,
            shadowsArray: r,
            camera: null,
            lights: e,
            transmissionRenderTarget: {}
        };
        return {
            init: i,
            state: c,
            setupLights: a,
            setupLightsView: l,
            pushLight: s,
            pushShadow: o
        };
    }
    function Kwe(t) {
        let e = new WeakMap;
        function n(i, s = 0) {
            const o = e.get(i);
            let a;
            return o === void 0 ? (a = new Wz(t), e.set(i, [
                a
            ])) : s >= o.length ? (a = new Wz(t), o.push(a)) : a = o[s], a;
        }
        function r() {
            e = new WeakMap;
        }
        return {
            get: n,
            dispose: r
        };
    }
    const Ywe = `void main() {
	gl_Position = vec4( position, 1.0 );
}`, Zwe = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
    function Jwe(t, e, n) {
        let r = new mw;
        const i = new ot, s = new ot, o = new rr, a = new R2({
            depthPacking: b6
        }), l = new A2, c = {}, u = n.maxTextureSize, f = {
            [md]: To,
            [To]: md,
            [Oc]: Oc
        }, p = new oc({
            defines: {
                VSM_SAMPLES: 8
            },
            uniforms: {
                shadow_pass: {
                    value: null
                },
                resolution: {
                    value: new ot
                },
                radius: {
                    value: 4
                }
            },
            vertexShader: Ywe,
            fragmentShader: Zwe
        }), g = p.clone();
        g.defines.HORIZONTAL_PASS = 1;
        const x = new Fn;
        x.setAttribute("position", new wr(new Float32Array([
            -1,
            -1,
            .5,
            3,
            -1,
            .5,
            -1,
            3,
            .5
        ]), 3));
        const S = new zi(x, p), _ = this;
        this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = FT;
        let b = this.type;
        this.render = function(N, D, L) {
            if (_.enabled === !1 || _.autoUpdate === !1 && _.needsUpdate === !1 || N.length === 0) return;
            const R = t.getRenderTarget(), A = t.getActiveCubeFace(), P = t.getActiveMipmapLevel(), B = t.state;
            B.setBlending(sd), B.buffers.color.setClear(1, 1, 1, 1), B.buffers.depth.setTest(!0), B.setScissorTest(!1);
            const U = b !== Vl && this.type === Vl, j = b === Vl && this.type !== Vl;
            for(let K = 0, q = N.length; K < q; K++){
                const te = N[K], W = te.shadow;
                if (W === void 0) {
                    console.warn("THREE.WebGLShadowMap:", te, "has no shadow.");
                    continue;
                }
                if (W.autoUpdate === !1 && W.needsUpdate === !1) continue;
                i.copy(W.mapSize);
                const J = W.getFrameExtents();
                if (i.multiply(J), s.copy(W.mapSize), (i.x > u || i.y > u) && (i.x > u && (s.x = Math.floor(u / J.x), i.x = s.x * J.x, W.mapSize.x = s.x), i.y > u && (s.y = Math.floor(u / J.y), i.y = s.y * J.y, W.mapSize.y = s.y)), W.map === null || U === !0 || j === !0) {
                    const Y = this.type !== Vl ? {
                        minFilter: Is,
                        magFilter: Is
                    } : {};
                    W.map !== null && W.map.dispose(), W.map = new Kc(i.x, i.y, Y), W.map.texture.name = te.name + ".shadowMap", W.camera.updateProjectionMatrix();
                }
                t.setRenderTarget(W.map), t.clear();
                const Q = W.getViewportCount();
                for(let Y = 0; Y < Q; Y++){
                    const le = W.getViewport(Y);
                    o.set(s.x * le.x, s.y * le.y, s.x * le.z, s.y * le.w), B.viewport(o), W.updateMatrices(te, Y), r = W.getFrustum(), T(D, L, W.camera, te, this.type);
                }
                W.isPointLightShadow !== !0 && this.type === Vl && M(W, L), W.needsUpdate = !1;
            }
            b = this.type, _.needsUpdate = !1, t.setRenderTarget(R, A, P);
        };
        function M(N, D) {
            const L = e.update(S);
            p.defines.VSM_SAMPLES !== N.blurSamples && (p.defines.VSM_SAMPLES = N.blurSamples, g.defines.VSM_SAMPLES = N.blurSamples, p.needsUpdate = !0, g.needsUpdate = !0), N.mapPass === null && (N.mapPass = new Kc(i.x, i.y)), p.uniforms.shadow_pass.value = N.map.texture, p.uniforms.resolution.value = N.mapSize, p.uniforms.radius.value = N.radius, t.setRenderTarget(N.mapPass), t.clear(), t.renderBufferDirect(D, null, L, p, S, null), g.uniforms.shadow_pass.value = N.mapPass.texture, g.uniforms.resolution.value = N.mapSize, g.uniforms.radius.value = N.radius, t.setRenderTarget(N.map), t.clear(), t.renderBufferDirect(D, null, L, g, S, null);
        }
        function E(N, D, L, R) {
            let A = null;
            const P = L.isPointLight === !0 ? N.customDistanceMaterial : N.customDepthMaterial;
            if (P !== void 0) A = P;
            else if (A = L.isPointLight === !0 ? l : a, t.localClippingEnabled && D.clipShadows === !0 && Array.isArray(D.clippingPlanes) && D.clippingPlanes.length !== 0 || D.displacementMap && D.displacementScale !== 0 || D.alphaMap && D.alphaTest > 0 || D.map && D.alphaTest > 0) {
                const B = A.uuid, U = D.uuid;
                let j = c[B];
                j === void 0 && (j = {}, c[B] = j);
                let K = j[U];
                K === void 0 && (K = A.clone(), j[U] = K, D.addEventListener("dispose", k)), A = K;
            }
            if (A.visible = D.visible, A.wireframe = D.wireframe, R === Vl ? A.side = D.shadowSide !== null ? D.shadowSide : D.side : A.side = D.shadowSide !== null ? D.shadowSide : f[D.side], A.alphaMap = D.alphaMap, A.alphaTest = D.alphaTest, A.map = D.map, A.clipShadows = D.clipShadows, A.clippingPlanes = D.clippingPlanes, A.clipIntersection = D.clipIntersection, A.displacementMap = D.displacementMap, A.displacementScale = D.displacementScale, A.displacementBias = D.displacementBias, A.wireframeLinewidth = D.wireframeLinewidth, A.linewidth = D.linewidth, L.isPointLight === !0 && A.isMeshDistanceMaterial === !0) {
                const B = t.properties.get(A);
                B.light = L;
            }
            return A;
        }
        function T(N, D, L, R, A) {
            if (N.visible === !1) return;
            if (N.layers.test(D.layers) && (N.isMesh || N.isLine || N.isPoints) && (N.castShadow || N.receiveShadow && A === Vl) && (!N.frustumCulled || r.intersectsObject(N))) {
                N.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse, N.matrixWorld);
                const U = e.update(N), j = N.material;
                if (Array.isArray(j)) {
                    const K = U.groups;
                    for(let q = 0, te = K.length; q < te; q++){
                        const W = K[q], J = j[W.materialIndex];
                        if (J && J.visible) {
                            const Q = E(N, J, R, A);
                            N.onBeforeShadow(t, N, D, L, U, Q, W), t.renderBufferDirect(L, null, U, Q, N, W), N.onAfterShadow(t, N, D, L, U, Q, W);
                        }
                    }
                } else if (j.visible) {
                    const K = E(N, j, R, A);
                    N.onBeforeShadow(t, N, D, L, U, K, null), t.renderBufferDirect(L, null, U, K, N, null), N.onAfterShadow(t, N, D, L, U, K, null);
                }
            }
            const B = N.children;
            for(let U = 0, j = B.length; U < j; U++)T(B[U], D, L, R, A);
        }
        function k(N) {
            N.target.removeEventListener("dispose", k);
            for(const L in c){
                const R = c[L], A = N.target.uuid;
                A in R && (R[A].dispose(), delete R[A]);
            }
        }
    }
    const Qwe = {
        [QE]: eM,
        [tM]: iM,
        [nM]: sM,
        [sm]: rM,
        [eM]: QE,
        [iM]: tM,
        [sM]: nM,
        [rM]: sm
    };
    function e_e(t, e) {
        function n() {
            let Se = !1;
            const lt = new rr;
            let Re = null;
            const Ue = new rr(0, 0, 0, 0);
            return {
                setMask: function(We) {
                    Re !== We && !Se && (t.colorMask(We, We, We, We), Re = We);
                },
                setLocked: function(We) {
                    Se = We;
                },
                setClear: function(We, rt, pt, Nt, Zt) {
                    Zt === !0 && (We *= Nt, rt *= Nt, pt *= Nt), lt.set(We, rt, pt, Nt), Ue.equals(lt) === !1 && (t.clearColor(We, rt, pt, Nt), Ue.copy(lt));
                },
                reset: function() {
                    Se = !1, Re = null, Ue.set(-1, 0, 0, 0);
                }
            };
        }
        function r() {
            let Se = !1, lt = !1, Re = null, Ue = null, We = null;
            return {
                setReversed: function(rt) {
                    if (lt !== rt) {
                        const pt = e.get("EXT_clip_control");
                        lt ? pt.clipControlEXT(pt.LOWER_LEFT_EXT, pt.ZERO_TO_ONE_EXT) : pt.clipControlEXT(pt.LOWER_LEFT_EXT, pt.NEGATIVE_ONE_TO_ONE_EXT);
                        const Nt = We;
                        We = null, this.setClear(Nt);
                    }
                    lt = rt;
                },
                getReversed: function() {
                    return lt;
                },
                setTest: function(rt) {
                    rt ? ve(t.DEPTH_TEST) : Ee(t.DEPTH_TEST);
                },
                setMask: function(rt) {
                    Re !== rt && !Se && (t.depthMask(rt), Re = rt);
                },
                setFunc: function(rt) {
                    if (lt && (rt = Qwe[rt]), Ue !== rt) {
                        switch(rt){
                            case QE:
                                t.depthFunc(t.NEVER);
                                break;
                            case eM:
                                t.depthFunc(t.ALWAYS);
                                break;
                            case tM:
                                t.depthFunc(t.LESS);
                                break;
                            case sm:
                                t.depthFunc(t.LEQUAL);
                                break;
                            case nM:
                                t.depthFunc(t.EQUAL);
                                break;
                            case rM:
                                t.depthFunc(t.GEQUAL);
                                break;
                            case iM:
                                t.depthFunc(t.GREATER);
                                break;
                            case sM:
                                t.depthFunc(t.NOTEQUAL);
                                break;
                            default:
                                t.depthFunc(t.LEQUAL);
                        }
                        Ue = rt;
                    }
                },
                setLocked: function(rt) {
                    Se = rt;
                },
                setClear: function(rt) {
                    We !== rt && (lt && (rt = 1 - rt), t.clearDepth(rt), We = rt);
                },
                reset: function() {
                    Se = !1, Re = null, Ue = null, We = null, lt = !1;
                }
            };
        }
        function i() {
            let Se = !1, lt = null, Re = null, Ue = null, We = null, rt = null, pt = null, Nt = null, Zt = null;
            return {
                setTest: function(wt) {
                    Se || (wt ? ve(t.STENCIL_TEST) : Ee(t.STENCIL_TEST));
                },
                setMask: function(wt) {
                    lt !== wt && !Se && (t.stencilMask(wt), lt = wt);
                },
                setFunc: function(wt, Nn, pn) {
                    (Re !== wt || Ue !== Nn || We !== pn) && (t.stencilFunc(wt, Nn, pn), Re = wt, Ue = Nn, We = pn);
                },
                setOp: function(wt, Nn, pn) {
                    (rt !== wt || pt !== Nn || Nt !== pn) && (t.stencilOp(wt, Nn, pn), rt = wt, pt = Nn, Nt = pn);
                },
                setLocked: function(wt) {
                    Se = wt;
                },
                setClear: function(wt) {
                    Zt !== wt && (t.clearStencil(wt), Zt = wt);
                },
                reset: function() {
                    Se = !1, lt = null, Re = null, Ue = null, We = null, rt = null, pt = null, Nt = null, Zt = null;
                }
            };
        }
        const s = new n, o = new r, a = new i, l = new WeakMap, c = new WeakMap;
        let u = {}, f = {}, p = new WeakMap, g = [], x = null, S = !1, _ = null, b = null, M = null, E = null, T = null, k = null, N = null, D = new Ft(0, 0, 0), L = 0, R = !1, A = null, P = null, B = null, U = null, j = null;
        const K = t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);
        let q = !1, te = 0;
        const W = t.getParameter(t.VERSION);
        W.indexOf("WebGL") !== -1 ? (te = parseFloat(/^WebGL (\d)/.exec(W)[1]), q = te >= 1) : W.indexOf("OpenGL ES") !== -1 && (te = parseFloat(/^OpenGL ES (\d)/.exec(W)[1]), q = te >= 2);
        let J = null, Q = {};
        const Y = t.getParameter(t.SCISSOR_BOX), le = t.getParameter(t.VIEWPORT), ue = new rr().fromArray(Y), ie = new rr().fromArray(le);
        function he(Se, lt, Re, Ue) {
            const We = new Uint8Array(4), rt = t.createTexture();
            t.bindTexture(Se, rt), t.texParameteri(Se, t.TEXTURE_MIN_FILTER, t.NEAREST), t.texParameteri(Se, t.TEXTURE_MAG_FILTER, t.NEAREST);
            for(let pt = 0; pt < Re; pt++)Se === t.TEXTURE_3D || Se === t.TEXTURE_2D_ARRAY ? t.texImage3D(lt, 0, t.RGBA, 1, 1, Ue, 0, t.RGBA, t.UNSIGNED_BYTE, We) : t.texImage2D(lt + pt, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, We);
            return rt;
        }
        const ge = {};
        ge[t.TEXTURE_2D] = he(t.TEXTURE_2D, t.TEXTURE_2D, 1), ge[t.TEXTURE_CUBE_MAP] = he(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6), ge[t.TEXTURE_2D_ARRAY] = he(t.TEXTURE_2D_ARRAY, t.TEXTURE_2D_ARRAY, 1, 1), ge[t.TEXTURE_3D] = he(t.TEXTURE_3D, t.TEXTURE_3D, 1, 1), s.setClear(0, 0, 0, 1), o.setClear(1), a.setClear(0), ve(t.DEPTH_TEST), o.setFunc(sm), Be(!1), it(ak), ve(t.CULL_FACE), se(sd);
        function ve(Se) {
            u[Se] !== !0 && (t.enable(Se), u[Se] = !0);
        }
        function Ee(Se) {
            u[Se] !== !1 && (t.disable(Se), u[Se] = !1);
        }
        function Ce(Se, lt) {
            return f[Se] !== lt ? (t.bindFramebuffer(Se, lt), f[Se] = lt, Se === t.DRAW_FRAMEBUFFER && (f[t.FRAMEBUFFER] = lt), Se === t.FRAMEBUFFER && (f[t.DRAW_FRAMEBUFFER] = lt), !0) : !1;
        }
        function Ne(Se, lt) {
            let Re = g, Ue = !1;
            if (Se) {
                Re = p.get(lt), Re === void 0 && (Re = [], p.set(lt, Re));
                const We = Se.textures;
                if (Re.length !== We.length || Re[0] !== t.COLOR_ATTACHMENT0) {
                    for(let rt = 0, pt = We.length; rt < pt; rt++)Re[rt] = t.COLOR_ATTACHMENT0 + rt;
                    Re.length = We.length, Ue = !0;
                }
            } else Re[0] !== t.BACK && (Re[0] = t.BACK, Ue = !0);
            Ue && t.drawBuffers(Re);
        }
        function Ve(Se) {
            return x !== Se ? (t.useProgram(Se), x = Se, !0) : !1;
        }
        const we = {
            [Nf]: t.FUNC_ADD,
            [q$]: t.FUNC_SUBTRACT,
            [H$]: t.FUNC_REVERSE_SUBTRACT
        };
        we[$$] = t.MIN, we[G$] = t.MAX;
        const Me = {
            [X$]: t.ZERO,
            [K$]: t.ONE,
            [Y$]: t.SRC_COLOR,
            [ZE]: t.SRC_ALPHA,
            [n6]: t.SRC_ALPHA_SATURATE,
            [e6]: t.DST_COLOR,
            [J$]: t.DST_ALPHA,
            [Z$]: t.ONE_MINUS_SRC_COLOR,
            [JE]: t.ONE_MINUS_SRC_ALPHA,
            [t6]: t.ONE_MINUS_DST_COLOR,
            [Q$]: t.ONE_MINUS_DST_ALPHA,
            [r6]: t.CONSTANT_COLOR,
            [i6]: t.ONE_MINUS_CONSTANT_COLOR,
            [s6]: t.CONSTANT_ALPHA,
            [o6]: t.ONE_MINUS_CONSTANT_ALPHA
        };
        function se(Se, lt, Re, Ue, We, rt, pt, Nt, Zt, wt) {
            if (Se === sd) {
                S === !0 && (Ee(t.BLEND), S = !1);
                return;
            }
            if (S === !1 && (ve(t.BLEND), S = !0), Se !== W$) {
                if (Se !== _ || wt !== R) {
                    if ((b !== Nf || T !== Nf) && (t.blendEquation(t.FUNC_ADD), b = Nf, T = Nf), wt) switch(Se){
                        case zp:
                            t.blendFuncSeparate(t.ONE, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA);
                            break;
                        case lk:
                            t.blendFunc(t.ONE, t.ONE);
                            break;
                        case ck:
                            t.blendFuncSeparate(t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ZERO, t.ONE);
                            break;
                        case uk:
                            t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA);
                            break;
                        default:
                            console.error("THREE.WebGLState: Invalid blending: ", Se);
                            break;
                    }
                    else switch(Se){
                        case zp:
                            t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA);
                            break;
                        case lk:
                            t.blendFunc(t.SRC_ALPHA, t.ONE);
                            break;
                        case ck:
                            t.blendFuncSeparate(t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ZERO, t.ONE);
                            break;
                        case uk:
                            t.blendFunc(t.ZERO, t.SRC_COLOR);
                            break;
                        default:
                            console.error("THREE.WebGLState: Invalid blending: ", Se);
                            break;
                    }
                    M = null, E = null, k = null, N = null, D.set(0, 0, 0), L = 0, _ = Se, R = wt;
                }
                return;
            }
            We = We || lt, rt = rt || Re, pt = pt || Ue, (lt !== b || We !== T) && (t.blendEquationSeparate(we[lt], we[We]), b = lt, T = We), (Re !== M || Ue !== E || rt !== k || pt !== N) && (t.blendFuncSeparate(Me[Re], Me[Ue], Me[rt], Me[pt]), M = Re, E = Ue, k = rt, N = pt), (Nt.equals(D) === !1 || Zt !== L) && (t.blendColor(Nt.r, Nt.g, Nt.b, Zt), D.copy(Nt), L = Zt), _ = Se, R = !1;
        }
        function Ye(Se, lt) {
            Se.side === Oc ? Ee(t.CULL_FACE) : ve(t.CULL_FACE);
            let Re = Se.side === To;
            lt && (Re = !Re), Be(Re), Se.blending === zp && Se.transparent === !1 ? se(sd) : se(Se.blending, Se.blendEquation, Se.blendSrc, Se.blendDst, Se.blendEquationAlpha, Se.blendSrcAlpha, Se.blendDstAlpha, Se.blendColor, Se.blendAlpha, Se.premultipliedAlpha), o.setFunc(Se.depthFunc), o.setTest(Se.depthTest), o.setMask(Se.depthWrite), s.setMask(Se.colorWrite);
            const Ue = Se.stencilWrite;
            a.setTest(Ue), Ue && (a.setMask(Se.stencilWriteMask), a.setFunc(Se.stencilFunc, Se.stencilRef, Se.stencilFuncMask), a.setOp(Se.stencilFail, Se.stencilZFail, Se.stencilZPass)), ae(Se.polygonOffset, Se.polygonOffsetFactor, Se.polygonOffsetUnits), Se.alphaToCoverage === !0 ? ve(t.SAMPLE_ALPHA_TO_COVERAGE) : Ee(t.SAMPLE_ALPHA_TO_COVERAGE);
        }
        function Be(Se) {
            A !== Se && (Se ? t.frontFace(t.CW) : t.frontFace(t.CCW), A = Se);
        }
        function it(Se) {
            Se !== U$ ? (ve(t.CULL_FACE), Se !== P && (Se === ak ? t.cullFace(t.BACK) : Se === z$ ? t.cullFace(t.FRONT) : t.cullFace(t.FRONT_AND_BACK))) : Ee(t.CULL_FACE), P = Se;
        }
        function de(Se) {
            Se !== B && (q && t.lineWidth(Se), B = Se);
        }
        function ae(Se, lt, Re) {
            Se ? (ve(t.POLYGON_OFFSET_FILL), (U !== lt || j !== Re) && (t.polygonOffset(lt, Re), U = lt, j = Re)) : Ee(t.POLYGON_OFFSET_FILL);
        }
        function oe(Se) {
            Se ? ve(t.SCISSOR_TEST) : Ee(t.SCISSOR_TEST);
        }
        function $(Se) {
            Se === void 0 && (Se = t.TEXTURE0 + K - 1), J !== Se && (t.activeTexture(Se), J = Se);
        }
        function H(Se, lt, Re) {
            Re === void 0 && (J === null ? Re = t.TEXTURE0 + K - 1 : Re = J);
            let Ue = Q[Re];
            Ue === void 0 && (Ue = {
                type: void 0,
                texture: void 0
            }, Q[Re] = Ue), (Ue.type !== Se || Ue.texture !== lt) && (J !== Re && (t.activeTexture(Re), J = Re), t.bindTexture(Se, lt || ge[Se]), Ue.type = Se, Ue.texture = lt);
        }
        function fe() {
            const Se = Q[J];
            Se !== void 0 && Se.type !== void 0 && (t.bindTexture(Se.type, null), Se.type = void 0, Se.texture = void 0);
        }
        function pe() {
            try {
                t.compressedTexImage2D.apply(t, arguments);
            } catch (Se) {
                console.error("THREE.WebGLState:", Se);
            }
        }
        function me() {
            try {
                t.compressedTexImage3D.apply(t, arguments);
            } catch (Se) {
                console.error("THREE.WebGLState:", Se);
            }
        }
        function Ie() {
            try {
                t.texSubImage2D.apply(t, arguments);
            } catch (Se) {
                console.error("THREE.WebGLState:", Se);
            }
        }
        function Xe() {
            try {
                t.texSubImage3D.apply(t, arguments);
            } catch (Se) {
                console.error("THREE.WebGLState:", Se);
            }
        }
        function Ze() {
            try {
                t.compressedTexSubImage2D.apply(t, arguments);
            } catch (Se) {
                console.error("THREE.WebGLState:", Se);
            }
        }
        function at() {
            try {
                t.compressedTexSubImage3D.apply(t, arguments);
            } catch (Se) {
                console.error("THREE.WebGLState:", Se);
            }
        }
        function Je() {
            try {
                t.texStorage2D.apply(t, arguments);
            } catch (Se) {
                console.error("THREE.WebGLState:", Se);
            }
        }
        function Pe() {
            try {
                t.texStorage3D.apply(t, arguments);
            } catch (Se) {
                console.error("THREE.WebGLState:", Se);
            }
        }
        function Fe() {
            try {
                t.texImage2D.apply(t, arguments);
            } catch (Se) {
                console.error("THREE.WebGLState:", Se);
            }
        }
        function nt() {
            try {
                t.texImage3D.apply(t, arguments);
            } catch (Se) {
                console.error("THREE.WebGLState:", Se);
            }
        }
        function ct(Se) {
            ue.equals(Se) === !1 && (t.scissor(Se.x, Se.y, Se.z, Se.w), ue.copy(Se));
        }
        function st(Se) {
            ie.equals(Se) === !1 && (t.viewport(Se.x, Se.y, Se.z, Se.w), ie.copy(Se));
        }
        function _e(Se, lt) {
            let Re = c.get(lt);
            Re === void 0 && (Re = new WeakMap, c.set(lt, Re));
            let Ue = Re.get(Se);
            Ue === void 0 && (Ue = t.getUniformBlockIndex(lt, Se.name), Re.set(Se, Ue));
        }
        function $e(Se, lt) {
            const Ue = c.get(lt).get(Se);
            l.get(lt) !== Ue && (t.uniformBlockBinding(lt, Ue, Se.__bindingPointIndex), l.set(lt, Ue));
        }
        function ht() {
            t.disable(t.BLEND), t.disable(t.CULL_FACE), t.disable(t.DEPTH_TEST), t.disable(t.POLYGON_OFFSET_FILL), t.disable(t.SCISSOR_TEST), t.disable(t.STENCIL_TEST), t.disable(t.SAMPLE_ALPHA_TO_COVERAGE), t.blendEquation(t.FUNC_ADD), t.blendFunc(t.ONE, t.ZERO), t.blendFuncSeparate(t.ONE, t.ZERO, t.ONE, t.ZERO), t.blendColor(0, 0, 0, 0), t.colorMask(!0, !0, !0, !0), t.clearColor(0, 0, 0, 0), t.depthMask(!0), t.depthFunc(t.LESS), o.setReversed(!1), t.clearDepth(1), t.stencilMask(4294967295), t.stencilFunc(t.ALWAYS, 0, 4294967295), t.stencilOp(t.KEEP, t.KEEP, t.KEEP), t.clearStencil(0), t.cullFace(t.BACK), t.frontFace(t.CCW), t.polygonOffset(0, 0), t.activeTexture(t.TEXTURE0), t.bindFramebuffer(t.FRAMEBUFFER, null), t.bindFramebuffer(t.DRAW_FRAMEBUFFER, null), t.bindFramebuffer(t.READ_FRAMEBUFFER, null), t.useProgram(null), t.lineWidth(1), t.scissor(0, 0, t.canvas.width, t.canvas.height), t.viewport(0, 0, t.canvas.width, t.canvas.height), u = {}, J = null, Q = {}, f = {}, p = new WeakMap, g = [], x = null, S = !1, _ = null, b = null, M = null, E = null, T = null, k = null, N = null, D = new Ft(0, 0, 0), L = 0, R = !1, A = null, P = null, B = null, U = null, j = null, ue.set(0, 0, t.canvas.width, t.canvas.height), ie.set(0, 0, t.canvas.width, t.canvas.height), s.reset(), o.reset(), a.reset();
        }
        return {
            buffers: {
                color: s,
                depth: o,
                stencil: a
            },
            enable: ve,
            disable: Ee,
            bindFramebuffer: Ce,
            drawBuffers: Ne,
            useProgram: Ve,
            setBlending: se,
            setMaterial: Ye,
            setFlipSided: Be,
            setCullFace: it,
            setLineWidth: de,
            setPolygonOffset: ae,
            setScissorTest: oe,
            activeTexture: $,
            bindTexture: H,
            unbindTexture: fe,
            compressedTexImage2D: pe,
            compressedTexImage3D: me,
            texImage2D: Fe,
            texImage3D: nt,
            updateUBOMapping: _e,
            uniformBlockBinding: $e,
            texStorage2D: Je,
            texStorage3D: Pe,
            texSubImage2D: Ie,
            texSubImage3D: Xe,
            compressedTexSubImage2D: Ze,
            compressedTexSubImage3D: at,
            scissor: ct,
            viewport: st,
            reset: ht
        };
    }
    function t_e(t, e, n, r, i, s, o) {
        const a = e.has("WEBGL_multisampled_render_to_texture") ? e.get("WEBGL_multisampled_render_to_texture") : null, l = typeof navigator > "u" ? !1 : /OculusBrowser/g.test(navigator.userAgent), c = new ot, u = new WeakMap;
        let f;
        const p = new WeakMap;
        let g = !1;
        try {
            g = typeof OffscreenCanvas < "u" && new OffscreenCanvas(1, 1).getContext("2d") !== null;
        } catch  {}
        function x($, H) {
            return g ? new OffscreenCanvas($, H) : Tb("canvas");
        }
        function S($, H, fe) {
            let pe = 1;
            const me = oe($);
            if ((me.width > fe || me.height > fe) && (pe = fe / Math.max(me.width, me.height)), pe < 1) if (typeof HTMLImageElement < "u" && $ instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && $ instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && $ instanceof ImageBitmap || typeof VideoFrame < "u" && $ instanceof VideoFrame) {
                const Ie = Math.floor(pe * me.width), Xe = Math.floor(pe * me.height);
                f === void 0 && (f = x(Ie, Xe));
                const Ze = H ? x(Ie, Xe) : f;
                return Ze.width = Ie, Ze.height = Xe, Ze.getContext("2d").drawImage($, 0, 0, Ie, Xe), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + me.width + "x" + me.height + ") to (" + Ie + "x" + Xe + ")."), Ze;
            } else return "data" in $ && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + me.width + "x" + me.height + ")."), $;
            return $;
        }
        function _($) {
            return $.generateMipmaps;
        }
        function b($) {
            t.generateMipmap($);
        }
        function M($) {
            return $.isWebGLCubeRenderTarget ? t.TEXTURE_CUBE_MAP : $.isWebGL3DRenderTarget ? t.TEXTURE_3D : $.isWebGLArrayRenderTarget || $.isCompressedArrayTexture ? t.TEXTURE_2D_ARRAY : t.TEXTURE_2D;
        }
        function E($, H, fe, pe, me = !1) {
            if ($ !== null) {
                if (t[$] !== void 0) return t[$];
                console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + $ + "'");
            }
            let Ie = H;
            if (H === t.RED && (fe === t.FLOAT && (Ie = t.R32F), fe === t.HALF_FLOAT && (Ie = t.R16F), fe === t.UNSIGNED_BYTE && (Ie = t.R8)), H === t.RED_INTEGER && (fe === t.UNSIGNED_BYTE && (Ie = t.R8UI), fe === t.UNSIGNED_SHORT && (Ie = t.R16UI), fe === t.UNSIGNED_INT && (Ie = t.R32UI), fe === t.BYTE && (Ie = t.R8I), fe === t.SHORT && (Ie = t.R16I), fe === t.INT && (Ie = t.R32I)), H === t.RG && (fe === t.FLOAT && (Ie = t.RG32F), fe === t.HALF_FLOAT && (Ie = t.RG16F), fe === t.UNSIGNED_BYTE && (Ie = t.RG8)), H === t.RG_INTEGER && (fe === t.UNSIGNED_BYTE && (Ie = t.RG8UI), fe === t.UNSIGNED_SHORT && (Ie = t.RG16UI), fe === t.UNSIGNED_INT && (Ie = t.RG32UI), fe === t.BYTE && (Ie = t.RG8I), fe === t.SHORT && (Ie = t.RG16I), fe === t.INT && (Ie = t.RG32I)), H === t.RGB_INTEGER && (fe === t.UNSIGNED_BYTE && (Ie = t.RGB8UI), fe === t.UNSIGNED_SHORT && (Ie = t.RGB16UI), fe === t.UNSIGNED_INT && (Ie = t.RGB32UI), fe === t.BYTE && (Ie = t.RGB8I), fe === t.SHORT && (Ie = t.RGB16I), fe === t.INT && (Ie = t.RGB32I)), H === t.RGBA_INTEGER && (fe === t.UNSIGNED_BYTE && (Ie = t.RGBA8UI), fe === t.UNSIGNED_SHORT && (Ie = t.RGBA16UI), fe === t.UNSIGNED_INT && (Ie = t.RGBA32UI), fe === t.BYTE && (Ie = t.RGBA8I), fe === t.SHORT && (Ie = t.RGBA16I), fe === t.INT && (Ie = t.RGBA32I)), H === t.RGB && fe === t.UNSIGNED_INT_5_9_9_9_REV && (Ie = t.RGB9_E5), H === t.RGBA) {
                const Xe = me ? Sb : Zn.getTransfer(pe);
                fe === t.FLOAT && (Ie = t.RGBA32F), fe === t.HALF_FLOAT && (Ie = t.RGBA16F), fe === t.UNSIGNED_BYTE && (Ie = Xe === hr ? t.SRGB8_ALPHA8 : t.RGBA8), fe === t.UNSIGNED_SHORT_4_4_4_4 && (Ie = t.RGBA4), fe === t.UNSIGNED_SHORT_5_5_5_1 && (Ie = t.RGB5_A1);
            }
            return (Ie === t.R16F || Ie === t.R32F || Ie === t.RG16F || Ie === t.RG32F || Ie === t.RGBA16F || Ie === t.RGBA32F) && e.get("EXT_color_buffer_float"), Ie;
        }
        function T($, H) {
            let fe;
            return $ ? H === null || H === yd || H === om ? fe = t.DEPTH24_STENCIL8 : H === na ? fe = t.DEPTH32F_STENCIL8 : H === Jy && (fe = t.DEPTH24_STENCIL8, console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")) : H === null || H === yd || H === om ? fe = t.DEPTH_COMPONENT24 : H === na ? fe = t.DEPTH_COMPONENT32F : H === Jy && (fe = t.DEPTH_COMPONENT16), fe;
        }
        function k($, H) {
            return _($) === !0 || $.isFramebufferTexture && $.minFilter !== Is && $.minFilter !== es ? Math.log2(Math.max(H.width, H.height)) + 1 : $.mipmaps !== void 0 && $.mipmaps.length > 0 ? $.mipmaps.length : $.isCompressedTexture && Array.isArray($.image) ? H.mipmaps.length : 1;
        }
        function N($) {
            const H = $.target;
            H.removeEventListener("dispose", N), L(H), H.isVideoTexture && u.delete(H);
        }
        function D($) {
            const H = $.target;
            H.removeEventListener("dispose", D), A(H);
        }
        function L($) {
            const H = r.get($);
            if (H.__webglInit === void 0) return;
            const fe = $.source, pe = p.get(fe);
            if (pe) {
                const me = pe[H.__cacheKey];
                me.usedTimes--, me.usedTimes === 0 && R($), Object.keys(pe).length === 0 && p.delete(fe);
            }
            r.remove($);
        }
        function R($) {
            const H = r.get($);
            t.deleteTexture(H.__webglTexture);
            const fe = $.source, pe = p.get(fe);
            delete pe[H.__cacheKey], o.memory.textures--;
        }
        function A($) {
            const H = r.get($);
            if ($.depthTexture && ($.depthTexture.dispose(), r.remove($.depthTexture)), $.isWebGLCubeRenderTarget) for(let pe = 0; pe < 6; pe++){
                if (Array.isArray(H.__webglFramebuffer[pe])) for(let me = 0; me < H.__webglFramebuffer[pe].length; me++)t.deleteFramebuffer(H.__webglFramebuffer[pe][me]);
                else t.deleteFramebuffer(H.__webglFramebuffer[pe]);
                H.__webglDepthbuffer && t.deleteRenderbuffer(H.__webglDepthbuffer[pe]);
            }
            else {
                if (Array.isArray(H.__webglFramebuffer)) for(let pe = 0; pe < H.__webglFramebuffer.length; pe++)t.deleteFramebuffer(H.__webglFramebuffer[pe]);
                else t.deleteFramebuffer(H.__webglFramebuffer);
                if (H.__webglDepthbuffer && t.deleteRenderbuffer(H.__webglDepthbuffer), H.__webglMultisampledFramebuffer && t.deleteFramebuffer(H.__webglMultisampledFramebuffer), H.__webglColorRenderbuffer) for(let pe = 0; pe < H.__webglColorRenderbuffer.length; pe++)H.__webglColorRenderbuffer[pe] && t.deleteRenderbuffer(H.__webglColorRenderbuffer[pe]);
                H.__webglDepthRenderbuffer && t.deleteRenderbuffer(H.__webglDepthRenderbuffer);
            }
            const fe = $.textures;
            for(let pe = 0, me = fe.length; pe < me; pe++){
                const Ie = r.get(fe[pe]);
                Ie.__webglTexture && (t.deleteTexture(Ie.__webglTexture), o.memory.textures--), r.remove(fe[pe]);
            }
            r.remove($);
        }
        let P = 0;
        function B() {
            P = 0;
        }
        function U() {
            const $ = P;
            return $ >= i.maxTextures && console.warn("THREE.WebGLTextures: Trying to use " + $ + " texture units while this GPU supports only " + i.maxTextures), P += 1, $;
        }
        function j($) {
            const H = [];
            return H.push($.wrapS), H.push($.wrapT), H.push($.wrapR || 0), H.push($.magFilter), H.push($.minFilter), H.push($.anisotropy), H.push($.internalFormat), H.push($.format), H.push($.type), H.push($.generateMipmaps), H.push($.premultiplyAlpha), H.push($.flipY), H.push($.unpackAlignment), H.push($.colorSpace), H.join();
        }
        function K($, H) {
            const fe = r.get($);
            if ($.isVideoTexture && de($), $.isRenderTargetTexture === !1 && $.version > 0 && fe.__version !== $.version) {
                const pe = $.image;
                if (pe === null) console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");
                else if (pe.complete === !1) console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
                else {
                    ie(fe, $, H);
                    return;
                }
            }
            n.bindTexture(t.TEXTURE_2D, fe.__webglTexture, t.TEXTURE0 + H);
        }
        function q($, H) {
            const fe = r.get($);
            if ($.version > 0 && fe.__version !== $.version) {
                ie(fe, $, H);
                return;
            }
            n.bindTexture(t.TEXTURE_2D_ARRAY, fe.__webglTexture, t.TEXTURE0 + H);
        }
        function te($, H) {
            const fe = r.get($);
            if ($.version > 0 && fe.__version !== $.version) {
                ie(fe, $, H);
                return;
            }
            n.bindTexture(t.TEXTURE_3D, fe.__webglTexture, t.TEXTURE0 + H);
        }
        function W($, H) {
            const fe = r.get($);
            if ($.version > 0 && fe.__version !== $.version) {
                he(fe, $, H);
                return;
            }
            n.bindTexture(t.TEXTURE_CUBE_MAP, fe.__webglTexture, t.TEXTURE0 + H);
        }
        const J = {
            [xb]: t.REPEAT,
            [ll]: t.CLAMP_TO_EDGE,
            [bb]: t.MIRRORED_REPEAT
        }, Q = {
            [Is]: t.NEAREST,
            [n2]: t.NEAREST_MIPMAP_NEAREST,
            [cy]: t.NEAREST_MIPMAP_LINEAR,
            [es]: t.LINEAR,
            [E0]: t.LINEAR_MIPMAP_NEAREST,
            [Fc]: t.LINEAR_MIPMAP_LINEAR
        }, Y = {
            [_6]: t.NEVER,
            [I6]: t.ALWAYS,
            [S6]: t.LESS,
            [h2]: t.LEQUAL,
            [E6]: t.EQUAL,
            [C6]: t.GEQUAL,
            [M6]: t.GREATER,
            [T6]: t.NOTEQUAL
        };
        function le($, H) {
            if (H.type === na && e.has("OES_texture_float_linear") === !1 && (H.magFilter === es || H.magFilter === E0 || H.magFilter === cy || H.magFilter === Fc || H.minFilter === es || H.minFilter === E0 || H.minFilter === cy || H.minFilter === Fc) && console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."), t.texParameteri($, t.TEXTURE_WRAP_S, J[H.wrapS]), t.texParameteri($, t.TEXTURE_WRAP_T, J[H.wrapT]), ($ === t.TEXTURE_3D || $ === t.TEXTURE_2D_ARRAY) && t.texParameteri($, t.TEXTURE_WRAP_R, J[H.wrapR]), t.texParameteri($, t.TEXTURE_MAG_FILTER, Q[H.magFilter]), t.texParameteri($, t.TEXTURE_MIN_FILTER, Q[H.minFilter]), H.compareFunction && (t.texParameteri($, t.TEXTURE_COMPARE_MODE, t.COMPARE_REF_TO_TEXTURE), t.texParameteri($, t.TEXTURE_COMPARE_FUNC, Y[H.compareFunction])), e.has("EXT_texture_filter_anisotropic") === !0) {
                if (H.magFilter === Is || H.minFilter !== cy && H.minFilter !== Fc || H.type === na && e.has("OES_texture_float_linear") === !1) return;
                if (H.anisotropy > 1 || r.get(H).__currentAnisotropy) {
                    const fe = e.get("EXT_texture_filter_anisotropic");
                    t.texParameterf($, fe.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(H.anisotropy, i.getMaxAnisotropy())), r.get(H).__currentAnisotropy = H.anisotropy;
                }
            }
        }
        function ue($, H) {
            let fe = !1;
            $.__webglInit === void 0 && ($.__webglInit = !0, H.addEventListener("dispose", N));
            const pe = H.source;
            let me = p.get(pe);
            me === void 0 && (me = {}, p.set(pe, me));
            const Ie = j(H);
            if (Ie !== $.__cacheKey) {
                me[Ie] === void 0 && (me[Ie] = {
                    texture: t.createTexture(),
                    usedTimes: 0
                }, o.memory.textures++, fe = !0), me[Ie].usedTimes++;
                const Xe = me[$.__cacheKey];
                Xe !== void 0 && (me[$.__cacheKey].usedTimes--, Xe.usedTimes === 0 && R(H)), $.__cacheKey = Ie, $.__webglTexture = me[Ie].texture;
            }
            return fe;
        }
        function ie($, H, fe) {
            let pe = t.TEXTURE_2D;
            (H.isDataArrayTexture || H.isCompressedArrayTexture) && (pe = t.TEXTURE_2D_ARRAY), H.isData3DTexture && (pe = t.TEXTURE_3D);
            const me = ue($, H), Ie = H.source;
            n.bindTexture(pe, $.__webglTexture, t.TEXTURE0 + fe);
            const Xe = r.get(Ie);
            if (Ie.version !== Xe.__version || me === !0) {
                n.activeTexture(t.TEXTURE0 + fe);
                const Ze = Zn.getPrimaries(Zn.workingColorSpace), at = H.colorSpace === Zu ? null : Zn.getPrimaries(H.colorSpace), Je = H.colorSpace === Zu || Ze === at ? t.NONE : t.BROWSER_DEFAULT_WEBGL;
                t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, H.flipY), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, H.premultiplyAlpha), t.pixelStorei(t.UNPACK_ALIGNMENT, H.unpackAlignment), t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL, Je);
                let Pe = S(H.image, !1, i.maxTextureSize);
                Pe = ae(H, Pe);
                const Fe = s.convert(H.format, H.colorSpace), nt = s.convert(H.type);
                let ct = E(H.internalFormat, Fe, nt, H.colorSpace, H.isVideoTexture);
                le(pe, H);
                let st;
                const _e = H.mipmaps, $e = H.isVideoTexture !== !0, ht = Xe.__version === void 0 || me === !0, Se = Ie.dataReady, lt = k(H, Pe);
                if (H.isDepthTexture) ct = T(H.format === am, H.type), ht && ($e ? n.texStorage2D(t.TEXTURE_2D, 1, ct, Pe.width, Pe.height) : n.texImage2D(t.TEXTURE_2D, 0, ct, Pe.width, Pe.height, 0, Fe, nt, null));
                else if (H.isDataTexture) if (_e.length > 0) {
                    $e && ht && n.texStorage2D(t.TEXTURE_2D, lt, ct, _e[0].width, _e[0].height);
                    for(let Re = 0, Ue = _e.length; Re < Ue; Re++)st = _e[Re], $e ? Se && n.texSubImage2D(t.TEXTURE_2D, Re, 0, 0, st.width, st.height, Fe, nt, st.data) : n.texImage2D(t.TEXTURE_2D, Re, ct, st.width, st.height, 0, Fe, nt, st.data);
                    H.generateMipmaps = !1;
                } else $e ? (ht && n.texStorage2D(t.TEXTURE_2D, lt, ct, Pe.width, Pe.height), Se && n.texSubImage2D(t.TEXTURE_2D, 0, 0, 0, Pe.width, Pe.height, Fe, nt, Pe.data)) : n.texImage2D(t.TEXTURE_2D, 0, ct, Pe.width, Pe.height, 0, Fe, nt, Pe.data);
                else if (H.isCompressedTexture) if (H.isCompressedArrayTexture) {
                    $e && ht && n.texStorage3D(t.TEXTURE_2D_ARRAY, lt, ct, _e[0].width, _e[0].height, Pe.depth);
                    for(let Re = 0, Ue = _e.length; Re < Ue; Re++)if (st = _e[Re], H.format !== Hs) if (Fe !== null) if ($e) {
                        if (Se) if (H.layerUpdates.size > 0) {
                            const We = wk(st.width, st.height, H.format, H.type);
                            for (const rt of H.layerUpdates){
                                const pt = st.data.subarray(rt * We / st.data.BYTES_PER_ELEMENT, (rt + 1) * We / st.data.BYTES_PER_ELEMENT);
                                n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY, Re, 0, 0, rt, st.width, st.height, 1, Fe, pt);
                            }
                            H.clearLayerUpdates();
                        } else n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY, Re, 0, 0, 0, st.width, st.height, Pe.depth, Fe, st.data);
                    } else n.compressedTexImage3D(t.TEXTURE_2D_ARRAY, Re, ct, st.width, st.height, Pe.depth, 0, st.data, 0, 0);
                    else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");
                    else $e ? Se && n.texSubImage3D(t.TEXTURE_2D_ARRAY, Re, 0, 0, 0, st.width, st.height, Pe.depth, Fe, nt, st.data) : n.texImage3D(t.TEXTURE_2D_ARRAY, Re, ct, st.width, st.height, Pe.depth, 0, Fe, nt, st.data);
                } else {
                    $e && ht && n.texStorage2D(t.TEXTURE_2D, lt, ct, _e[0].width, _e[0].height);
                    for(let Re = 0, Ue = _e.length; Re < Ue; Re++)st = _e[Re], H.format !== Hs ? Fe !== null ? $e ? Se && n.compressedTexSubImage2D(t.TEXTURE_2D, Re, 0, 0, st.width, st.height, Fe, st.data) : n.compressedTexImage2D(t.TEXTURE_2D, Re, ct, st.width, st.height, 0, st.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : $e ? Se && n.texSubImage2D(t.TEXTURE_2D, Re, 0, 0, st.width, st.height, Fe, nt, st.data) : n.texImage2D(t.TEXTURE_2D, Re, ct, st.width, st.height, 0, Fe, nt, st.data);
                }
                else if (H.isDataArrayTexture) if ($e) {
                    if (ht && n.texStorage3D(t.TEXTURE_2D_ARRAY, lt, ct, Pe.width, Pe.height, Pe.depth), Se) if (H.layerUpdates.size > 0) {
                        const Re = wk(Pe.width, Pe.height, H.format, H.type);
                        for (const Ue of H.layerUpdates){
                            const We = Pe.data.subarray(Ue * Re / Pe.data.BYTES_PER_ELEMENT, (Ue + 1) * Re / Pe.data.BYTES_PER_ELEMENT);
                            n.texSubImage3D(t.TEXTURE_2D_ARRAY, 0, 0, 0, Ue, Pe.width, Pe.height, 1, Fe, nt, We);
                        }
                        H.clearLayerUpdates();
                    } else n.texSubImage3D(t.TEXTURE_2D_ARRAY, 0, 0, 0, 0, Pe.width, Pe.height, Pe.depth, Fe, nt, Pe.data);
                } else n.texImage3D(t.TEXTURE_2D_ARRAY, 0, ct, Pe.width, Pe.height, Pe.depth, 0, Fe, nt, Pe.data);
                else if (H.isData3DTexture) $e ? (ht && n.texStorage3D(t.TEXTURE_3D, lt, ct, Pe.width, Pe.height, Pe.depth), Se && n.texSubImage3D(t.TEXTURE_3D, 0, 0, 0, 0, Pe.width, Pe.height, Pe.depth, Fe, nt, Pe.data)) : n.texImage3D(t.TEXTURE_3D, 0, ct, Pe.width, Pe.height, Pe.depth, 0, Fe, nt, Pe.data);
                else if (H.isFramebufferTexture) {
                    if (ht) if ($e) n.texStorage2D(t.TEXTURE_2D, lt, ct, Pe.width, Pe.height);
                    else {
                        let Re = Pe.width, Ue = Pe.height;
                        for(let We = 0; We < lt; We++)n.texImage2D(t.TEXTURE_2D, We, ct, Re, Ue, 0, Fe, nt, null), Re >>= 1, Ue >>= 1;
                    }
                } else if (_e.length > 0) {
                    if ($e && ht) {
                        const Re = oe(_e[0]);
                        n.texStorage2D(t.TEXTURE_2D, lt, ct, Re.width, Re.height);
                    }
                    for(let Re = 0, Ue = _e.length; Re < Ue; Re++)st = _e[Re], $e ? Se && n.texSubImage2D(t.TEXTURE_2D, Re, 0, 0, Fe, nt, st) : n.texImage2D(t.TEXTURE_2D, Re, ct, Fe, nt, st);
                    H.generateMipmaps = !1;
                } else if ($e) {
                    if (ht) {
                        const Re = oe(Pe);
                        n.texStorage2D(t.TEXTURE_2D, lt, ct, Re.width, Re.height);
                    }
                    Se && n.texSubImage2D(t.TEXTURE_2D, 0, 0, 0, Fe, nt, Pe);
                } else n.texImage2D(t.TEXTURE_2D, 0, ct, Fe, nt, Pe);
                _(H) && b(pe), Xe.__version = Ie.version, H.onUpdate && H.onUpdate(H);
            }
            $.__version = H.version;
        }
        function he($, H, fe) {
            if (H.image.length !== 6) return;
            const pe = ue($, H), me = H.source;
            n.bindTexture(t.TEXTURE_CUBE_MAP, $.__webglTexture, t.TEXTURE0 + fe);
            const Ie = r.get(me);
            if (me.version !== Ie.__version || pe === !0) {
                n.activeTexture(t.TEXTURE0 + fe);
                const Xe = Zn.getPrimaries(Zn.workingColorSpace), Ze = H.colorSpace === Zu ? null : Zn.getPrimaries(H.colorSpace), at = H.colorSpace === Zu || Xe === Ze ? t.NONE : t.BROWSER_DEFAULT_WEBGL;
                t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, H.flipY), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, H.premultiplyAlpha), t.pixelStorei(t.UNPACK_ALIGNMENT, H.unpackAlignment), t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL, at);
                const Je = H.isCompressedTexture || H.image[0].isCompressedTexture, Pe = H.image[0] && H.image[0].isDataTexture, Fe = [];
                for(let Ue = 0; Ue < 6; Ue++)!Je && !Pe ? Fe[Ue] = S(H.image[Ue], !0, i.maxCubemapSize) : Fe[Ue] = Pe ? H.image[Ue].image : H.image[Ue], Fe[Ue] = ae(H, Fe[Ue]);
                const nt = Fe[0], ct = s.convert(H.format, H.colorSpace), st = s.convert(H.type), _e = E(H.internalFormat, ct, st, H.colorSpace), $e = H.isVideoTexture !== !0, ht = Ie.__version === void 0 || pe === !0, Se = me.dataReady;
                let lt = k(H, nt);
                le(t.TEXTURE_CUBE_MAP, H);
                let Re;
                if (Je) {
                    $e && ht && n.texStorage2D(t.TEXTURE_CUBE_MAP, lt, _e, nt.width, nt.height);
                    for(let Ue = 0; Ue < 6; Ue++){
                        Re = Fe[Ue].mipmaps;
                        for(let We = 0; We < Re.length; We++){
                            const rt = Re[We];
                            H.format !== Hs ? ct !== null ? $e ? Se && n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + Ue, We, 0, 0, rt.width, rt.height, ct, rt.data) : n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + Ue, We, _e, rt.width, rt.height, 0, rt.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : $e ? Se && n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + Ue, We, 0, 0, rt.width, rt.height, ct, st, rt.data) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + Ue, We, _e, rt.width, rt.height, 0, ct, st, rt.data);
                        }
                    }
                } else {
                    if (Re = H.mipmaps, $e && ht) {
                        Re.length > 0 && lt++;
                        const Ue = oe(Fe[0]);
                        n.texStorage2D(t.TEXTURE_CUBE_MAP, lt, _e, Ue.width, Ue.height);
                    }
                    for(let Ue = 0; Ue < 6; Ue++)if (Pe) {
                        $e ? Se && n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + Ue, 0, 0, 0, Fe[Ue].width, Fe[Ue].height, ct, st, Fe[Ue].data) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + Ue, 0, _e, Fe[Ue].width, Fe[Ue].height, 0, ct, st, Fe[Ue].data);
                        for(let We = 0; We < Re.length; We++){
                            const pt = Re[We].image[Ue].image;
                            $e ? Se && n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + Ue, We + 1, 0, 0, pt.width, pt.height, ct, st, pt.data) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + Ue, We + 1, _e, pt.width, pt.height, 0, ct, st, pt.data);
                        }
                    } else {
                        $e ? Se && n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + Ue, 0, 0, 0, ct, st, Fe[Ue]) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + Ue, 0, _e, ct, st, Fe[Ue]);
                        for(let We = 0; We < Re.length; We++){
                            const rt = Re[We];
                            $e ? Se && n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + Ue, We + 1, 0, 0, ct, st, rt.image[Ue]) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + Ue, We + 1, _e, ct, st, rt.image[Ue]);
                        }
                    }
                }
                _(H) && b(t.TEXTURE_CUBE_MAP), Ie.__version = me.version, H.onUpdate && H.onUpdate(H);
            }
            $.__version = H.version;
        }
        function ge($, H, fe, pe, me, Ie) {
            const Xe = s.convert(fe.format, fe.colorSpace), Ze = s.convert(fe.type), at = E(fe.internalFormat, Xe, Ze, fe.colorSpace), Je = r.get(H), Pe = r.get(fe);
            if (Pe.__renderTarget = H, !Je.__hasExternalTextures) {
                const Fe = Math.max(1, H.width >> Ie), nt = Math.max(1, H.height >> Ie);
                me === t.TEXTURE_3D || me === t.TEXTURE_2D_ARRAY ? n.texImage3D(me, Ie, at, Fe, nt, H.depth, 0, Xe, Ze, null) : n.texImage2D(me, Ie, at, Fe, nt, 0, Xe, Ze, null);
            }
            n.bindFramebuffer(t.FRAMEBUFFER, $), it(H) ? a.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER, pe, me, Pe.__webglTexture, 0, Be(H)) : (me === t.TEXTURE_2D || me >= t.TEXTURE_CUBE_MAP_POSITIVE_X && me <= t.TEXTURE_CUBE_MAP_NEGATIVE_Z) && t.framebufferTexture2D(t.FRAMEBUFFER, pe, me, Pe.__webglTexture, Ie), n.bindFramebuffer(t.FRAMEBUFFER, null);
        }
        function ve($, H, fe) {
            if (t.bindRenderbuffer(t.RENDERBUFFER, $), H.depthBuffer) {
                const pe = H.depthTexture, me = pe && pe.isDepthTexture ? pe.type : null, Ie = T(H.stencilBuffer, me), Xe = H.stencilBuffer ? t.DEPTH_STENCIL_ATTACHMENT : t.DEPTH_ATTACHMENT, Ze = Be(H);
                it(H) ? a.renderbufferStorageMultisampleEXT(t.RENDERBUFFER, Ze, Ie, H.width, H.height) : fe ? t.renderbufferStorageMultisample(t.RENDERBUFFER, Ze, Ie, H.width, H.height) : t.renderbufferStorage(t.RENDERBUFFER, Ie, H.width, H.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, Xe, t.RENDERBUFFER, $);
            } else {
                const pe = H.textures;
                for(let me = 0; me < pe.length; me++){
                    const Ie = pe[me], Xe = s.convert(Ie.format, Ie.colorSpace), Ze = s.convert(Ie.type), at = E(Ie.internalFormat, Xe, Ze, Ie.colorSpace), Je = Be(H);
                    fe && it(H) === !1 ? t.renderbufferStorageMultisample(t.RENDERBUFFER, Je, at, H.width, H.height) : it(H) ? a.renderbufferStorageMultisampleEXT(t.RENDERBUFFER, Je, at, H.width, H.height) : t.renderbufferStorage(t.RENDERBUFFER, at, H.width, H.height);
                }
            }
            t.bindRenderbuffer(t.RENDERBUFFER, null);
        }
        function Ee($, H) {
            if (H && H.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
            if (n.bindFramebuffer(t.FRAMEBUFFER, $), !(H.depthTexture && H.depthTexture.isDepthTexture)) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
            const pe = r.get(H.depthTexture);
            pe.__renderTarget = H, (!pe.__webglTexture || H.depthTexture.image.width !== H.width || H.depthTexture.image.height !== H.height) && (H.depthTexture.image.width = H.width, H.depthTexture.image.height = H.height, H.depthTexture.needsUpdate = !0), K(H.depthTexture, 0);
            const me = pe.__webglTexture, Ie = Be(H);
            if (H.depthTexture.format === Vp) it(H) ? a.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, me, 0, Ie) : t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, me, 0);
            else if (H.depthTexture.format === am) it(H) ? a.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.TEXTURE_2D, me, 0, Ie) : t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.TEXTURE_2D, me, 0);
            else throw new Error("Unknown depthTexture format");
        }
        function Ce($) {
            const H = r.get($), fe = $.isWebGLCubeRenderTarget === !0;
            if (H.__boundDepthTexture !== $.depthTexture) {
                const pe = $.depthTexture;
                if (H.__depthDisposeCallback && H.__depthDisposeCallback(), pe) {
                    const me = ()=>{
                        delete H.__boundDepthTexture, delete H.__depthDisposeCallback, pe.removeEventListener("dispose", me);
                    };
                    pe.addEventListener("dispose", me), H.__depthDisposeCallback = me;
                }
                H.__boundDepthTexture = pe;
            }
            if ($.depthTexture && !H.__autoAllocateDepthBuffer) {
                if (fe) throw new Error("target.depthTexture not supported in Cube render targets");
                Ee(H.__webglFramebuffer, $);
            } else if (fe) {
                H.__webglDepthbuffer = [];
                for(let pe = 0; pe < 6; pe++)if (n.bindFramebuffer(t.FRAMEBUFFER, H.__webglFramebuffer[pe]), H.__webglDepthbuffer[pe] === void 0) H.__webglDepthbuffer[pe] = t.createRenderbuffer(), ve(H.__webglDepthbuffer[pe], $, !1);
                else {
                    const me = $.stencilBuffer ? t.DEPTH_STENCIL_ATTACHMENT : t.DEPTH_ATTACHMENT, Ie = H.__webglDepthbuffer[pe];
                    t.bindRenderbuffer(t.RENDERBUFFER, Ie), t.framebufferRenderbuffer(t.FRAMEBUFFER, me, t.RENDERBUFFER, Ie);
                }
            } else if (n.bindFramebuffer(t.FRAMEBUFFER, H.__webglFramebuffer), H.__webglDepthbuffer === void 0) H.__webglDepthbuffer = t.createRenderbuffer(), ve(H.__webglDepthbuffer, $, !1);
            else {
                const pe = $.stencilBuffer ? t.DEPTH_STENCIL_ATTACHMENT : t.DEPTH_ATTACHMENT, me = H.__webglDepthbuffer;
                t.bindRenderbuffer(t.RENDERBUFFER, me), t.framebufferRenderbuffer(t.FRAMEBUFFER, pe, t.RENDERBUFFER, me);
            }
            n.bindFramebuffer(t.FRAMEBUFFER, null);
        }
        function Ne($, H, fe) {
            const pe = r.get($);
            H !== void 0 && ge(pe.__webglFramebuffer, $, $.texture, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, 0), fe !== void 0 && Ce($);
        }
        function Ve($) {
            const H = $.texture, fe = r.get($), pe = r.get(H);
            $.addEventListener("dispose", D);
            const me = $.textures, Ie = $.isWebGLCubeRenderTarget === !0, Xe = me.length > 1;
            if (Xe || (pe.__webglTexture === void 0 && (pe.__webglTexture = t.createTexture()), pe.__version = H.version, o.memory.textures++), Ie) {
                fe.__webglFramebuffer = [];
                for(let Ze = 0; Ze < 6; Ze++)if (H.mipmaps && H.mipmaps.length > 0) {
                    fe.__webglFramebuffer[Ze] = [];
                    for(let at = 0; at < H.mipmaps.length; at++)fe.__webglFramebuffer[Ze][at] = t.createFramebuffer();
                } else fe.__webglFramebuffer[Ze] = t.createFramebuffer();
            } else {
                if (H.mipmaps && H.mipmaps.length > 0) {
                    fe.__webglFramebuffer = [];
                    for(let Ze = 0; Ze < H.mipmaps.length; Ze++)fe.__webglFramebuffer[Ze] = t.createFramebuffer();
                } else fe.__webglFramebuffer = t.createFramebuffer();
                if (Xe) for(let Ze = 0, at = me.length; Ze < at; Ze++){
                    const Je = r.get(me[Ze]);
                    Je.__webglTexture === void 0 && (Je.__webglTexture = t.createTexture(), o.memory.textures++);
                }
                if ($.samples > 0 && it($) === !1) {
                    fe.__webglMultisampledFramebuffer = t.createFramebuffer(), fe.__webglColorRenderbuffer = [], n.bindFramebuffer(t.FRAMEBUFFER, fe.__webglMultisampledFramebuffer);
                    for(let Ze = 0; Ze < me.length; Ze++){
                        const at = me[Ze];
                        fe.__webglColorRenderbuffer[Ze] = t.createRenderbuffer(), t.bindRenderbuffer(t.RENDERBUFFER, fe.__webglColorRenderbuffer[Ze]);
                        const Je = s.convert(at.format, at.colorSpace), Pe = s.convert(at.type), Fe = E(at.internalFormat, Je, Pe, at.colorSpace, $.isXRRenderTarget === !0), nt = Be($);
                        t.renderbufferStorageMultisample(t.RENDERBUFFER, nt, Fe, $.width, $.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0 + Ze, t.RENDERBUFFER, fe.__webglColorRenderbuffer[Ze]);
                    }
                    t.bindRenderbuffer(t.RENDERBUFFER, null), $.depthBuffer && (fe.__webglDepthRenderbuffer = t.createRenderbuffer(), ve(fe.__webglDepthRenderbuffer, $, !0)), n.bindFramebuffer(t.FRAMEBUFFER, null);
                }
            }
            if (Ie) {
                n.bindTexture(t.TEXTURE_CUBE_MAP, pe.__webglTexture), le(t.TEXTURE_CUBE_MAP, H);
                for(let Ze = 0; Ze < 6; Ze++)if (H.mipmaps && H.mipmaps.length > 0) for(let at = 0; at < H.mipmaps.length; at++)ge(fe.__webglFramebuffer[Ze][at], $, H, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + Ze, at);
                else ge(fe.__webglFramebuffer[Ze], $, H, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + Ze, 0);
                _(H) && b(t.TEXTURE_CUBE_MAP), n.unbindTexture();
            } else if (Xe) {
                for(let Ze = 0, at = me.length; Ze < at; Ze++){
                    const Je = me[Ze], Pe = r.get(Je);
                    n.bindTexture(t.TEXTURE_2D, Pe.__webglTexture), le(t.TEXTURE_2D, Je), ge(fe.__webglFramebuffer, $, Je, t.COLOR_ATTACHMENT0 + Ze, t.TEXTURE_2D, 0), _(Je) && b(t.TEXTURE_2D);
                }
                n.unbindTexture();
            } else {
                let Ze = t.TEXTURE_2D;
                if (($.isWebGL3DRenderTarget || $.isWebGLArrayRenderTarget) && (Ze = $.isWebGL3DRenderTarget ? t.TEXTURE_3D : t.TEXTURE_2D_ARRAY), n.bindTexture(Ze, pe.__webglTexture), le(Ze, H), H.mipmaps && H.mipmaps.length > 0) for(let at = 0; at < H.mipmaps.length; at++)ge(fe.__webglFramebuffer[at], $, H, t.COLOR_ATTACHMENT0, Ze, at);
                else ge(fe.__webglFramebuffer, $, H, t.COLOR_ATTACHMENT0, Ze, 0);
                _(H) && b(Ze), n.unbindTexture();
            }
            $.depthBuffer && Ce($);
        }
        function we($) {
            const H = $.textures;
            for(let fe = 0, pe = H.length; fe < pe; fe++){
                const me = H[fe];
                if (_(me)) {
                    const Ie = M($), Xe = r.get(me).__webglTexture;
                    n.bindTexture(Ie, Xe), b(Ie), n.unbindTexture();
                }
            }
        }
        const Me = [], se = [];
        function Ye($) {
            if ($.samples > 0) {
                if (it($) === !1) {
                    const H = $.textures, fe = $.width, pe = $.height;
                    let me = t.COLOR_BUFFER_BIT;
                    const Ie = $.stencilBuffer ? t.DEPTH_STENCIL_ATTACHMENT : t.DEPTH_ATTACHMENT, Xe = r.get($), Ze = H.length > 1;
                    if (Ze) for(let at = 0; at < H.length; at++)n.bindFramebuffer(t.FRAMEBUFFER, Xe.__webglMultisampledFramebuffer), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0 + at, t.RENDERBUFFER, null), n.bindFramebuffer(t.FRAMEBUFFER, Xe.__webglFramebuffer), t.framebufferTexture2D(t.DRAW_FRAMEBUFFER, t.COLOR_ATTACHMENT0 + at, t.TEXTURE_2D, null, 0);
                    n.bindFramebuffer(t.READ_FRAMEBUFFER, Xe.__webglMultisampledFramebuffer), n.bindFramebuffer(t.DRAW_FRAMEBUFFER, Xe.__webglFramebuffer);
                    for(let at = 0; at < H.length; at++){
                        if ($.resolveDepthBuffer && ($.depthBuffer && (me |= t.DEPTH_BUFFER_BIT), $.stencilBuffer && $.resolveStencilBuffer && (me |= t.STENCIL_BUFFER_BIT)), Ze) {
                            t.framebufferRenderbuffer(t.READ_FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.RENDERBUFFER, Xe.__webglColorRenderbuffer[at]);
                            const Je = r.get(H[at]).__webglTexture;
                            t.framebufferTexture2D(t.DRAW_FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, Je, 0);
                        }
                        t.blitFramebuffer(0, 0, fe, pe, 0, 0, fe, pe, me, t.NEAREST), l === !0 && (Me.length = 0, se.length = 0, Me.push(t.COLOR_ATTACHMENT0 + at), $.depthBuffer && $.resolveDepthBuffer === !1 && (Me.push(Ie), se.push(Ie), t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER, se)), t.invalidateFramebuffer(t.READ_FRAMEBUFFER, Me));
                    }
                    if (n.bindFramebuffer(t.READ_FRAMEBUFFER, null), n.bindFramebuffer(t.DRAW_FRAMEBUFFER, null), Ze) for(let at = 0; at < H.length; at++){
                        n.bindFramebuffer(t.FRAMEBUFFER, Xe.__webglMultisampledFramebuffer), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0 + at, t.RENDERBUFFER, Xe.__webglColorRenderbuffer[at]);
                        const Je = r.get(H[at]).__webglTexture;
                        n.bindFramebuffer(t.FRAMEBUFFER, Xe.__webglFramebuffer), t.framebufferTexture2D(t.DRAW_FRAMEBUFFER, t.COLOR_ATTACHMENT0 + at, t.TEXTURE_2D, Je, 0);
                    }
                    n.bindFramebuffer(t.DRAW_FRAMEBUFFER, Xe.__webglMultisampledFramebuffer);
                } else if ($.depthBuffer && $.resolveDepthBuffer === !1 && l) {
                    const H = $.stencilBuffer ? t.DEPTH_STENCIL_ATTACHMENT : t.DEPTH_ATTACHMENT;
                    t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER, [
                        H
                    ]);
                }
            }
        }
        function Be($) {
            return Math.min(i.maxSamples, $.samples);
        }
        function it($) {
            const H = r.get($);
            return $.samples > 0 && e.has("WEBGL_multisampled_render_to_texture") === !0 && H.__useRenderToTexture !== !1;
        }
        function de($) {
            const H = o.render.frame;
            u.get($) !== H && (u.set($, H), $.update());
        }
        function ae($, H) {
            const fe = $.colorSpace, pe = $.format, me = $.type;
            return $.isCompressedTexture === !0 || $.isVideoTexture === !0 || fe !== lm && fe !== Zu && (Zn.getTransfer(fe) === hr ? (pe !== Hs || me !== sc) && console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.") : console.error("THREE.WebGLTextures: Unsupported texture color space:", fe)), H;
        }
        function oe($) {
            return typeof HTMLImageElement < "u" && $ instanceof HTMLImageElement ? (c.width = $.naturalWidth || $.width, c.height = $.naturalHeight || $.height) : typeof VideoFrame < "u" && $ instanceof VideoFrame ? (c.width = $.displayWidth, c.height = $.displayHeight) : (c.width = $.width, c.height = $.height), c;
        }
        this.allocateTextureUnit = U, this.resetTextureUnits = B, this.setTexture2D = K, this.setTexture2DArray = q, this.setTexture3D = te, this.setTextureCube = W, this.rebindTextures = Ne, this.setupRenderTarget = Ve, this.updateRenderTargetMipmap = we, this.updateMultisampleRenderTarget = Ye, this.setupDepthRenderbuffer = Ce, this.setupFrameBufferTexture = ge, this.useMultisampledRTT = it;
    }
    function jG(t, e) {
        function n(r, i = Zu) {
            let s;
            const o = Zn.getTransfer(i);
            if (r === sc) return t.UNSIGNED_BYTE;
            if (r === zT) return t.UNSIGNED_SHORT_4_4_4_4;
            if (r === VT) return t.UNSIGNED_SHORT_5_5_5_1;
            if (r === s2) return t.UNSIGNED_INT_5_9_9_9_REV;
            if (r === r2) return t.BYTE;
            if (r === i2) return t.SHORT;
            if (r === Jy) return t.UNSIGNED_SHORT;
            if (r === UT) return t.INT;
            if (r === yd) return t.UNSIGNED_INT;
            if (r === na) return t.FLOAT;
            if (r === yv) return t.HALF_FLOAT;
            if (r === o2) return t.ALPHA;
            if (r === a2) return t.RGB;
            if (r === Hs) return t.RGBA;
            if (r === l2) return t.LUMINANCE;
            if (r === c2) return t.LUMINANCE_ALPHA;
            if (r === Vp) return t.DEPTH_COMPONENT;
            if (r === am) return t.DEPTH_STENCIL;
            if (r === WT) return t.RED;
            if (r === dw) return t.RED_INTEGER;
            if (r === u2) return t.RG;
            if (r === qT) return t.RG_INTEGER;
            if (r === HT) return t.RGBA_INTEGER;
            if (r === M0 || r === T0 || r === C0 || r === I0) if (o === hr) if (s = e.get("WEBGL_compressed_texture_s3tc_srgb"), s !== null) {
                if (r === M0) return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;
                if (r === T0) return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
                if (r === C0) return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
                if (r === I0) return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
            } else return null;
            else if (s = e.get("WEBGL_compressed_texture_s3tc"), s !== null) {
                if (r === M0) return s.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (r === T0) return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (r === C0) return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (r === I0) return s.COMPRESSED_RGBA_S3TC_DXT5_EXT;
            } else return null;
            if (r === oM || r === aM || r === lM || r === cM) if (s = e.get("WEBGL_compressed_texture_pvrtc"), s !== null) {
                if (r === oM) return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                if (r === aM) return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                if (r === lM) return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                if (r === cM) return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
            } else return null;
            if (r === uM || r === dM || r === fM) if (s = e.get("WEBGL_compressed_texture_etc"), s !== null) {
                if (r === uM || r === dM) return o === hr ? s.COMPRESSED_SRGB8_ETC2 : s.COMPRESSED_RGB8_ETC2;
                if (r === fM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : s.COMPRESSED_RGBA8_ETC2_EAC;
            } else return null;
            if (r === hM || r === pM || r === mM || r === gM || r === yM || r === vM || r === xM || r === bM || r === wM || r === _M || r === SM || r === EM || r === MM || r === TM) if (s = e.get("WEBGL_compressed_texture_astc"), s !== null) {
                if (r === hM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : s.COMPRESSED_RGBA_ASTC_4x4_KHR;
                if (r === pM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : s.COMPRESSED_RGBA_ASTC_5x4_KHR;
                if (r === mM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : s.COMPRESSED_RGBA_ASTC_5x5_KHR;
                if (r === gM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : s.COMPRESSED_RGBA_ASTC_6x5_KHR;
                if (r === yM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : s.COMPRESSED_RGBA_ASTC_6x6_KHR;
                if (r === vM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : s.COMPRESSED_RGBA_ASTC_8x5_KHR;
                if (r === xM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : s.COMPRESSED_RGBA_ASTC_8x6_KHR;
                if (r === bM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : s.COMPRESSED_RGBA_ASTC_8x8_KHR;
                if (r === wM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : s.COMPRESSED_RGBA_ASTC_10x5_KHR;
                if (r === _M) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : s.COMPRESSED_RGBA_ASTC_10x6_KHR;
                if (r === SM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : s.COMPRESSED_RGBA_ASTC_10x8_KHR;
                if (r === EM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : s.COMPRESSED_RGBA_ASTC_10x10_KHR;
                if (r === MM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : s.COMPRESSED_RGBA_ASTC_12x10_KHR;
                if (r === TM) return o === hr ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : s.COMPRESSED_RGBA_ASTC_12x12_KHR;
            } else return null;
            if (r === R0 || r === CM || r === IM) if (s = e.get("EXT_texture_compression_bptc"), s !== null) {
                if (r === R0) return o === hr ? s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : s.COMPRESSED_RGBA_BPTC_UNORM_EXT;
                if (r === CM) return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
                if (r === IM) return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;
            } else return null;
            if (r === d2 || r === RM || r === AM || r === NM) if (s = e.get("EXT_texture_compression_rgtc"), s !== null) {
                if (r === R0) return s.COMPRESSED_RED_RGTC1_EXT;
                if (r === RM) return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;
                if (r === AM) return s.COMPRESSED_RED_GREEN_RGTC2_EXT;
                if (r === NM) return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
            } else return null;
            return r === om ? t.UNSIGNED_INT_24_8 : t[r] !== void 0 ? t[r] : null;
        }
        return {
            convert: n
        };
    }
    const n_e = `
void main() {

	gl_Position = vec4( position, 1.0 );

}`, r_e = `
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;
    class i_e {
        constructor(){
            this.texture = null, this.mesh = null, this.depthNear = 0, this.depthFar = 0;
        }
        init(e, n, r) {
            if (this.texture === null) {
                const i = new ui, s = e.properties.get(i);
                s.__webglTexture = n.texture, (n.depthNear !== r.depthNear || n.depthFar !== r.depthFar) && (this.depthNear = n.depthNear, this.depthFar = n.depthFar), this.texture = i;
            }
        }
        getMesh(e) {
            if (this.texture !== null && this.mesh === null) {
                const n = e.cameras[0].viewport, r = new oc({
                    vertexShader: n_e,
                    fragmentShader: r_e,
                    uniforms: {
                        depthColor: {
                            value: this.texture
                        },
                        depthWidth: {
                            value: n.z
                        },
                        depthHeight: {
                            value: n.w
                        }
                    }
                });
                this.mesh = new zi(new xv(20, 20), r);
            }
            return this.mesh;
        }
        reset() {
            this.texture = null, this.mesh = null;
        }
        getDepthTexture() {
            return this.texture;
        }
    }
    class s_e extends Jc {
        constructor(e, n){
            super();
            const r = this;
            let i = null, s = 1, o = null, a = "local-floor", l = 1, c = null, u = null, f = null, p = null, g = null, x = null;
            const S = new i_e, _ = n.getContextAttributes();
            let b = null, M = null;
            const E = [], T = [], k = new ot;
            let N = null;
            const D = new Ei;
            D.viewport = new rr;
            const L = new Ei;
            L.viewport = new rr;
            const R = [
                D,
                L
            ], A = new CG;
            let P = null, B = null;
            this.cameraAutoUpdate = !0, this.enabled = !1, this.isPresenting = !1, this.getController = function(ie) {
                let he = E[ie];
                return he === void 0 && (he = new b1, E[ie] = he), he.getTargetRaySpace();
            }, this.getControllerGrip = function(ie) {
                let he = E[ie];
                return he === void 0 && (he = new b1, E[ie] = he), he.getGripSpace();
            }, this.getHand = function(ie) {
                let he = E[ie];
                return he === void 0 && (he = new b1, E[ie] = he), he.getHandSpace();
            };
            function U(ie) {
                const he = T.indexOf(ie.inputSource);
                if (he === -1) return;
                const ge = E[he];
                ge !== void 0 && (ge.update(ie.inputSource, ie.frame, c || o), ge.dispatchEvent({
                    type: ie.type,
                    data: ie.inputSource
                }));
            }
            function j() {
                i.removeEventListener("select", U), i.removeEventListener("selectstart", U), i.removeEventListener("selectend", U), i.removeEventListener("squeeze", U), i.removeEventListener("squeezestart", U), i.removeEventListener("squeezeend", U), i.removeEventListener("end", j), i.removeEventListener("inputsourceschange", K);
                for(let ie = 0; ie < E.length; ie++){
                    const he = T[ie];
                    he !== null && (T[ie] = null, E[ie].disconnect(he));
                }
                P = null, B = null, S.reset(), e.setRenderTarget(b), g = null, p = null, f = null, i = null, M = null, ue.stop(), r.isPresenting = !1, e.setPixelRatio(N), e.setSize(k.width, k.height, !1), r.dispatchEvent({
                    type: "sessionend"
                });
            }
            this.setFramebufferScaleFactor = function(ie) {
                s = ie, r.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.");
            }, this.setReferenceSpaceType = function(ie) {
                a = ie, r.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.");
            }, this.getReferenceSpace = function() {
                return c || o;
            }, this.setReferenceSpace = function(ie) {
                c = ie;
            }, this.getBaseLayer = function() {
                return p !== null ? p : g;
            }, this.getBinding = function() {
                return f;
            }, this.getFrame = function() {
                return x;
            }, this.getSession = function() {
                return i;
            }, this.setSession = async function(ie) {
                if (i = ie, i !== null) {
                    if (b = e.getRenderTarget(), i.addEventListener("select", U), i.addEventListener("selectstart", U), i.addEventListener("selectend", U), i.addEventListener("squeeze", U), i.addEventListener("squeezestart", U), i.addEventListener("squeezeend", U), i.addEventListener("end", j), i.addEventListener("inputsourceschange", K), _.xrCompatible !== !0 && await n.makeXRCompatible(), N = e.getPixelRatio(), e.getSize(k), typeof XRWebGLBinding < "u" && "createProjectionLayer" in XRWebGLBinding.prototype) {
                        let ge = null, ve = null, Ee = null;
                        _.depth && (Ee = _.stencil ? n.DEPTH24_STENCIL8 : n.DEPTH_COMPONENT24, ge = _.stencil ? am : Vp, ve = _.stencil ? om : yd);
                        const Ce = {
                            colorFormat: n.RGBA8,
                            depthFormat: Ee,
                            scaleFactor: s
                        };
                        f = new XRWebGLBinding(i, n), p = f.createProjectionLayer(Ce), i.updateRenderState({
                            layers: [
                                p
                            ]
                        }), e.setPixelRatio(1), e.setSize(p.textureWidth, p.textureHeight, !1), M = new Kc(p.textureWidth, p.textureHeight, {
                            format: Hs,
                            type: sc,
                            depthTexture: new w2(p.textureWidth, p.textureHeight, ve, void 0, void 0, void 0, void 0, void 0, void 0, ge),
                            stencilBuffer: _.stencil,
                            colorSpace: e.outputColorSpace,
                            samples: _.antialias ? 4 : 0,
                            resolveDepthBuffer: p.ignoreDepthValues === !1
                        });
                    } else {
                        const ge = {
                            antialias: _.antialias,
                            alpha: !0,
                            depth: _.depth,
                            stencil: _.stencil,
                            framebufferScaleFactor: s
                        };
                        g = new XRWebGLLayer(i, n, ge), i.updateRenderState({
                            baseLayer: g
                        }), e.setPixelRatio(1), e.setSize(g.framebufferWidth, g.framebufferHeight, !1), M = new Kc(g.framebufferWidth, g.framebufferHeight, {
                            format: Hs,
                            type: sc,
                            colorSpace: e.outputColorSpace,
                            stencilBuffer: _.stencil
                        });
                    }
                    M.isXRRenderTarget = !0, this.setFoveation(l), c = null, o = await i.requestReferenceSpace(a), ue.setContext(i), ue.start(), r.isPresenting = !0, r.dispatchEvent({
                        type: "sessionstart"
                    });
                }
            }, this.getEnvironmentBlendMode = function() {
                if (i !== null) return i.environmentBlendMode;
            }, this.getDepthTexture = function() {
                return S.getDepthTexture();
            };
            function K(ie) {
                for(let he = 0; he < ie.removed.length; he++){
                    const ge = ie.removed[he], ve = T.indexOf(ge);
                    ve >= 0 && (T[ve] = null, E[ve].disconnect(ge));
                }
                for(let he = 0; he < ie.added.length; he++){
                    const ge = ie.added[he];
                    let ve = T.indexOf(ge);
                    if (ve === -1) {
                        for(let Ce = 0; Ce < E.length; Ce++)if (Ce >= T.length) {
                            T.push(ge), ve = Ce;
                            break;
                        } else if (T[Ce] === null) {
                            T[Ce] = ge, ve = Ce;
                            break;
                        }
                        if (ve === -1) break;
                    }
                    const Ee = E[ve];
                    Ee && Ee.connect(ge);
                }
            }
            const q = new ye, te = new ye;
            function W(ie, he, ge) {
                q.setFromMatrixPosition(he.matrixWorld), te.setFromMatrixPosition(ge.matrixWorld);
                const ve = q.distanceTo(te), Ee = he.projectionMatrix.elements, Ce = ge.projectionMatrix.elements, Ne = Ee[14] / (Ee[10] - 1), Ve = Ee[14] / (Ee[10] + 1), we = (Ee[9] + 1) / Ee[5], Me = (Ee[9] - 1) / Ee[5], se = (Ee[8] - 1) / Ee[0], Ye = (Ce[8] + 1) / Ce[0], Be = Ne * se, it = Ne * Ye, de = ve / (-se + Ye), ae = de * -se;
                if (he.matrixWorld.decompose(ie.position, ie.quaternion, ie.scale), ie.translateX(ae), ie.translateZ(de), ie.matrixWorld.compose(ie.position, ie.quaternion, ie.scale), ie.matrixWorldInverse.copy(ie.matrixWorld).invert(), Ee[10] === -1) ie.projectionMatrix.copy(he.projectionMatrix), ie.projectionMatrixInverse.copy(he.projectionMatrixInverse);
                else {
                    const oe = Ne + de, $ = Ve + de, H = Be - ae, fe = it + (ve - ae), pe = we * Ve / $ * oe, me = Me * Ve / $ * oe;
                    ie.projectionMatrix.makePerspective(H, fe, pe, me, oe, $), ie.projectionMatrixInverse.copy(ie.projectionMatrix).invert();
                }
            }
            function J(ie, he) {
                he === null ? ie.matrixWorld.copy(ie.matrix) : ie.matrixWorld.multiplyMatrices(he.matrixWorld, ie.matrix), ie.matrixWorldInverse.copy(ie.matrixWorld).invert();
            }
            this.updateCamera = function(ie) {
                if (i === null) return;
                let he = ie.near, ge = ie.far;
                S.texture !== null && (S.depthNear > 0 && (he = S.depthNear), S.depthFar > 0 && (ge = S.depthFar)), A.near = L.near = D.near = he, A.far = L.far = D.far = ge, (P !== A.near || B !== A.far) && (i.updateRenderState({
                    depthNear: A.near,
                    depthFar: A.far
                }), P = A.near, B = A.far), D.layers.mask = ie.layers.mask | 2, L.layers.mask = ie.layers.mask | 4, A.layers.mask = D.layers.mask | L.layers.mask;
                const ve = ie.parent, Ee = A.cameras;
                J(A, ve);
                for(let Ce = 0; Ce < Ee.length; Ce++)J(Ee[Ce], ve);
                Ee.length === 2 ? W(A, D, L) : A.projectionMatrix.copy(D.projectionMatrix), Q(ie, A, ve);
            };
            function Q(ie, he, ge) {
                ge === null ? ie.matrix.copy(he.matrixWorld) : (ie.matrix.copy(ge.matrixWorld), ie.matrix.invert(), ie.matrix.multiply(he.matrixWorld)), ie.matrix.decompose(ie.position, ie.quaternion, ie.scale), ie.updateMatrixWorld(!0), ie.projectionMatrix.copy(he.projectionMatrix), ie.projectionMatrixInverse.copy(he.projectionMatrixInverse), ie.isPerspectiveCamera && (ie.fov = Qy * 2 * Math.atan(1 / ie.projectionMatrix.elements[5]), ie.zoom = 1);
            }
            this.getCamera = function() {
                return A;
            }, this.getFoveation = function() {
                if (!(p === null && g === null)) return l;
            }, this.setFoveation = function(ie) {
                l = ie, p !== null && (p.fixedFoveation = ie), g !== null && g.fixedFoveation !== void 0 && (g.fixedFoveation = ie);
            }, this.hasDepthSensing = function() {
                return S.texture !== null;
            }, this.getDepthSensingMesh = function() {
                return S.getMesh(A);
            };
            let Y = null;
            function le(ie, he) {
                if (u = he.getViewerPose(c || o), x = he, u !== null) {
                    const ge = u.views;
                    g !== null && (e.setRenderTargetFramebuffer(M, g.framebuffer), e.setRenderTarget(M));
                    let ve = !1;
                    ge.length !== A.cameras.length && (A.cameras.length = 0, ve = !0);
                    for(let Ne = 0; Ne < ge.length; Ne++){
                        const Ve = ge[Ne];
                        let we = null;
                        if (g !== null) we = g.getViewport(Ve);
                        else {
                            const se = f.getViewSubImage(p, Ve);
                            we = se.viewport, Ne === 0 && (e.setRenderTargetTextures(M, se.colorTexture, p.ignoreDepthValues ? void 0 : se.depthStencilTexture), e.setRenderTarget(M));
                        }
                        let Me = R[Ne];
                        Me === void 0 && (Me = new Ei, Me.layers.enable(Ne), Me.viewport = new rr, R[Ne] = Me), Me.matrix.fromArray(Ve.transform.matrix), Me.matrix.decompose(Me.position, Me.quaternion, Me.scale), Me.projectionMatrix.fromArray(Ve.projectionMatrix), Me.projectionMatrixInverse.copy(Me.projectionMatrix).invert(), Me.viewport.set(we.x, we.y, we.width, we.height), Ne === 0 && (A.matrix.copy(Me.matrix), A.matrix.decompose(A.position, A.quaternion, A.scale)), ve === !0 && A.cameras.push(Me);
                    }
                    const Ee = i.enabledFeatures;
                    if (Ee && Ee.includes("depth-sensing") && i.depthUsage == "gpu-optimized" && f) {
                        const Ne = f.getDepthInformation(ge[0]);
                        Ne && Ne.isValid && Ne.texture && S.init(e, Ne, i.renderState);
                    }
                }
                for(let ge = 0; ge < E.length; ge++){
                    const ve = T[ge], Ee = E[ge];
                    ve !== null && Ee !== void 0 && Ee.update(ve, he, c || o);
                }
                Y && Y(ie, he), he.detectedPlanes && r.dispatchEvent({
                    type: "planesdetected",
                    data: he
                }), x = null;
            }
            const ue = new kG;
            ue.setAnimationLoop(le), this.setAnimationLoop = function(ie) {
                Y = ie;
            }, this.dispose = function() {};
        }
    }
    const dp = new ja, o_e = new fn;
    function a_e(t, e) {
        function n(_, b) {
            _.matrixAutoUpdate === !0 && _.updateMatrix(), b.value.copy(_.matrix);
        }
        function r(_, b) {
            b.color.getRGB(_.fogColor.value, k6(t)), b.isFog ? (_.fogNear.value = b.near, _.fogFar.value = b.far) : b.isFogExp2 && (_.fogDensity.value = b.density);
        }
        function i(_, b, M, E, T) {
            b.isMeshBasicMaterial || b.isMeshLambertMaterial ? s(_, b) : b.isMeshToonMaterial ? (s(_, b), f(_, b)) : b.isMeshPhongMaterial ? (s(_, b), u(_, b)) : b.isMeshStandardMaterial ? (s(_, b), p(_, b), b.isMeshPhysicalMaterial && g(_, b, T)) : b.isMeshMatcapMaterial ? (s(_, b), x(_, b)) : b.isMeshDepthMaterial ? s(_, b) : b.isMeshDistanceMaterial ? (s(_, b), S(_, b)) : b.isMeshNormalMaterial ? s(_, b) : b.isLineBasicMaterial ? (o(_, b), b.isLineDashedMaterial && a(_, b)) : b.isPointsMaterial ? l(_, b, M, E) : b.isSpriteMaterial ? c(_, b) : b.isShadowMaterial ? (_.color.value.copy(b.color), _.opacity.value = b.opacity) : b.isShaderMaterial && (b.uniformsNeedUpdate = !1);
        }
        function s(_, b) {
            _.opacity.value = b.opacity, b.color && _.diffuse.value.copy(b.color), b.emissive && _.emissive.value.copy(b.emissive).multiplyScalar(b.emissiveIntensity), b.map && (_.map.value = b.map, n(b.map, _.mapTransform)), b.alphaMap && (_.alphaMap.value = b.alphaMap, n(b.alphaMap, _.alphaMapTransform)), b.bumpMap && (_.bumpMap.value = b.bumpMap, n(b.bumpMap, _.bumpMapTransform), _.bumpScale.value = b.bumpScale, b.side === To && (_.bumpScale.value *= -1)), b.normalMap && (_.normalMap.value = b.normalMap, n(b.normalMap, _.normalMapTransform), _.normalScale.value.copy(b.normalScale), b.side === To && _.normalScale.value.negate()), b.displacementMap && (_.displacementMap.value = b.displacementMap, n(b.displacementMap, _.displacementMapTransform), _.displacementScale.value = b.displacementScale, _.displacementBias.value = b.displacementBias), b.emissiveMap && (_.emissiveMap.value = b.emissiveMap, n(b.emissiveMap, _.emissiveMapTransform)), b.specularMap && (_.specularMap.value = b.specularMap, n(b.specularMap, _.specularMapTransform)), b.alphaTest > 0 && (_.alphaTest.value = b.alphaTest);
            const M = e.get(b), E = M.envMap, T = M.envMapRotation;
            E && (_.envMap.value = E, dp.copy(T), dp.x *= -1, dp.y *= -1, dp.z *= -1, E.isCubeTexture && E.isRenderTargetTexture === !1 && (dp.y *= -1, dp.z *= -1), _.envMapRotation.value.setFromMatrix4(o_e.makeRotationFromEuler(dp)), _.flipEnvMap.value = E.isCubeTexture && E.isRenderTargetTexture === !1 ? -1 : 1, _.reflectivity.value = b.reflectivity, _.ior.value = b.ior, _.refractionRatio.value = b.refractionRatio), b.lightMap && (_.lightMap.value = b.lightMap, _.lightMapIntensity.value = b.lightMapIntensity, n(b.lightMap, _.lightMapTransform)), b.aoMap && (_.aoMap.value = b.aoMap, _.aoMapIntensity.value = b.aoMapIntensity, n(b.aoMap, _.aoMapTransform));
        }
        function o(_, b) {
            _.diffuse.value.copy(b.color), _.opacity.value = b.opacity, b.map && (_.map.value = b.map, n(b.map, _.mapTransform));
        }
        function a(_, b) {
            _.dashSize.value = b.dashSize, _.totalSize.value = b.dashSize + b.gapSize, _.scale.value = b.scale;
        }
        function l(_, b, M, E) {
            _.diffuse.value.copy(b.color), _.opacity.value = b.opacity, _.size.value = b.size * M, _.scale.value = E * .5, b.map && (_.map.value = b.map, n(b.map, _.uvTransform)), b.alphaMap && (_.alphaMap.value = b.alphaMap, n(b.alphaMap, _.alphaMapTransform)), b.alphaTest > 0 && (_.alphaTest.value = b.alphaTest);
        }
        function c(_, b) {
            _.diffuse.value.copy(b.color), _.opacity.value = b.opacity, _.rotation.value = b.rotation, b.map && (_.map.value = b.map, n(b.map, _.mapTransform)), b.alphaMap && (_.alphaMap.value = b.alphaMap, n(b.alphaMap, _.alphaMapTransform)), b.alphaTest > 0 && (_.alphaTest.value = b.alphaTest);
        }
        function u(_, b) {
            _.specular.value.copy(b.specular), _.shininess.value = Math.max(b.shininess, 1e-4);
        }
        function f(_, b) {
            b.gradientMap && (_.gradientMap.value = b.gradientMap);
        }
        function p(_, b) {
            _.metalness.value = b.metalness, b.metalnessMap && (_.metalnessMap.value = b.metalnessMap, n(b.metalnessMap, _.metalnessMapTransform)), _.roughness.value = b.roughness, b.roughnessMap && (_.roughnessMap.value = b.roughnessMap, n(b.roughnessMap, _.roughnessMapTransform)), b.envMap && (_.envMapIntensity.value = b.envMapIntensity);
        }
        function g(_, b, M) {
            _.ior.value = b.ior, b.sheen > 0 && (_.sheenColor.value.copy(b.sheenColor).multiplyScalar(b.sheen), _.sheenRoughness.value = b.sheenRoughness, b.sheenColorMap && (_.sheenColorMap.value = b.sheenColorMap, n(b.sheenColorMap, _.sheenColorMapTransform)), b.sheenRoughnessMap && (_.sheenRoughnessMap.value = b.sheenRoughnessMap, n(b.sheenRoughnessMap, _.sheenRoughnessMapTransform))), b.clearcoat > 0 && (_.clearcoat.value = b.clearcoat, _.clearcoatRoughness.value = b.clearcoatRoughness, b.clearcoatMap && (_.clearcoatMap.value = b.clearcoatMap, n(b.clearcoatMap, _.clearcoatMapTransform)), b.clearcoatRoughnessMap && (_.clearcoatRoughnessMap.value = b.clearcoatRoughnessMap, n(b.clearcoatRoughnessMap, _.clearcoatRoughnessMapTransform)), b.clearcoatNormalMap && (_.clearcoatNormalMap.value = b.clearcoatNormalMap, n(b.clearcoatNormalMap, _.clearcoatNormalMapTransform), _.clearcoatNormalScale.value.copy(b.clearcoatNormalScale), b.side === To && _.clearcoatNormalScale.value.negate())), b.dispersion > 0 && (_.dispersion.value = b.dispersion), b.iridescence > 0 && (_.iridescence.value = b.iridescence, _.iridescenceIOR.value = b.iridescenceIOR, _.iridescenceThicknessMinimum.value = b.iridescenceThicknessRange[0], _.iridescenceThicknessMaximum.value = b.iridescenceThicknessRange[1], b.iridescenceMap && (_.iridescenceMap.value = b.iridescenceMap, n(b.iridescenceMap, _.iridescenceMapTransform)), b.iridescenceThicknessMap && (_.iridescenceThicknessMap.value = b.iridescenceThicknessMap, n(b.iridescenceThicknessMap, _.iridescenceThicknessMapTransform))), b.transmission > 0 && (_.transmission.value = b.transmission, _.transmissionSamplerMap.value = M.texture, _.transmissionSamplerSize.value.set(M.width, M.height), b.transmissionMap && (_.transmissionMap.value = b.transmissionMap, n(b.transmissionMap, _.transmissionMapTransform)), _.thickness.value = b.thickness, b.thicknessMap && (_.thicknessMap.value = b.thicknessMap, n(b.thicknessMap, _.thicknessMapTransform)), _.attenuationDistance.value = b.attenuationDistance, _.attenuationColor.value.copy(b.attenuationColor)), b.anisotropy > 0 && (_.anisotropyVector.value.set(b.anisotropy * Math.cos(b.anisotropyRotation), b.anisotropy * Math.sin(b.anisotropyRotation)), b.anisotropyMap && (_.anisotropyMap.value = b.anisotropyMap, n(b.anisotropyMap, _.anisotropyMapTransform))), _.specularIntensity.value = b.specularIntensity, _.specularColor.value.copy(b.specularColor), b.specularColorMap && (_.specularColorMap.value = b.specularColorMap, n(b.specularColorMap, _.specularColorMapTransform)), b.specularIntensityMap && (_.specularIntensityMap.value = b.specularIntensityMap, n(b.specularIntensityMap, _.specularIntensityMapTransform));
        }
        function x(_, b) {
            b.matcap && (_.matcap.value = b.matcap);
        }
        function S(_, b) {
            const M = e.get(b).light;
            _.referencePosition.value.setFromMatrixPosition(M.matrixWorld), _.nearDistance.value = M.shadow.camera.near, _.farDistance.value = M.shadow.camera.far;
        }
        return {
            refreshFogUniforms: r,
            refreshMaterialUniforms: i
        };
    }
    function l_e(t, e, n, r) {
        let i = {}, s = {}, o = [];
        const a = t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS);
        function l(M, E) {
            const T = E.program;
            r.uniformBlockBinding(M, T);
        }
        function c(M, E) {
            let T = i[M.id];
            T === void 0 && (x(M), T = u(M), i[M.id] = T, M.addEventListener("dispose", _));
            const k = E.program;
            r.updateUBOMapping(M, k);
            const N = e.render.frame;
            s[M.id] !== N && (p(M), s[M.id] = N);
        }
        function u(M) {
            const E = f();
            M.__bindingPointIndex = E;
            const T = t.createBuffer(), k = M.__size, N = M.usage;
            return t.bindBuffer(t.UNIFORM_BUFFER, T), t.bufferData(t.UNIFORM_BUFFER, k, N), t.bindBuffer(t.UNIFORM_BUFFER, null), t.bindBufferBase(t.UNIFORM_BUFFER, E, T), T;
        }
        function f() {
            for(let M = 0; M < a; M++)if (o.indexOf(M) === -1) return o.push(M), M;
            return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."), 0;
        }
        function p(M) {
            const E = i[M.id], T = M.uniforms, k = M.__cache;
            t.bindBuffer(t.UNIFORM_BUFFER, E);
            for(let N = 0, D = T.length; N < D; N++){
                const L = Array.isArray(T[N]) ? T[N] : [
                    T[N]
                ];
                for(let R = 0, A = L.length; R < A; R++){
                    const P = L[R];
                    if (g(P, N, R, k) === !0) {
                        const B = P.__offset, U = Array.isArray(P.value) ? P.value : [
                            P.value
                        ];
                        let j = 0;
                        for(let K = 0; K < U.length; K++){
                            const q = U[K], te = S(q);
                            typeof q == "number" || typeof q == "boolean" ? (P.__data[0] = q, t.bufferSubData(t.UNIFORM_BUFFER, B + j, P.__data)) : q.isMatrix3 ? (P.__data[0] = q.elements[0], P.__data[1] = q.elements[1], P.__data[2] = q.elements[2], P.__data[3] = 0, P.__data[4] = q.elements[3], P.__data[5] = q.elements[4], P.__data[6] = q.elements[5], P.__data[7] = 0, P.__data[8] = q.elements[6], P.__data[9] = q.elements[7], P.__data[10] = q.elements[8], P.__data[11] = 0) : (q.toArray(P.__data, j), j += te.storage / Float32Array.BYTES_PER_ELEMENT);
                        }
                        t.bufferSubData(t.UNIFORM_BUFFER, B, P.__data);
                    }
                }
            }
            t.bindBuffer(t.UNIFORM_BUFFER, null);
        }
        function g(M, E, T, k) {
            const N = M.value, D = E + "_" + T;
            if (k[D] === void 0) return typeof N == "number" || typeof N == "boolean" ? k[D] = N : k[D] = N.clone(), !0;
            {
                const L = k[D];
                if (typeof N == "number" || typeof N == "boolean") {
                    if (L !== N) return k[D] = N, !0;
                } else if (L.equals(N) === !1) return L.copy(N), !0;
            }
            return !1;
        }
        function x(M) {
            const E = M.uniforms;
            let T = 0;
            const k = 16;
            for(let D = 0, L = E.length; D < L; D++){
                const R = Array.isArray(E[D]) ? E[D] : [
                    E[D]
                ];
                for(let A = 0, P = R.length; A < P; A++){
                    const B = R[A], U = Array.isArray(B.value) ? B.value : [
                        B.value
                    ];
                    for(let j = 0, K = U.length; j < K; j++){
                        const q = U[j], te = S(q), W = T % k, J = W % te.boundary, Q = W + J;
                        T += J, Q !== 0 && k - Q < te.storage && (T += k - Q), B.__data = new Float32Array(te.storage / Float32Array.BYTES_PER_ELEMENT), B.__offset = T, T += te.storage;
                    }
                }
            }
            const N = T % k;
            return N > 0 && (T += k - N), M.__size = T, M.__cache = {}, this;
        }
        function S(M) {
            const E = {
                boundary: 0,
                storage: 0
            };
            return typeof M == "number" || typeof M == "boolean" ? (E.boundary = 4, E.storage = 4) : M.isVector2 ? (E.boundary = 8, E.storage = 8) : M.isVector3 || M.isColor ? (E.boundary = 16, E.storage = 12) : M.isVector4 ? (E.boundary = 16, E.storage = 16) : M.isMatrix3 ? (E.boundary = 48, E.storage = 48) : M.isMatrix4 ? (E.boundary = 64, E.storage = 64) : M.isTexture ? console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.") : console.warn("THREE.WebGLRenderer: Unsupported uniform value type.", M), E;
        }
        function _(M) {
            const E = M.target;
            E.removeEventListener("dispose", _);
            const T = o.indexOf(E.__bindingPointIndex);
            o.splice(T, 1), t.deleteBuffer(i[E.id]), delete i[E.id], delete s[E.id];
        }
        function b() {
            for(const M in i)t.deleteBuffer(i[M]);
            o = [], i = {}, s = {};
        }
        return {
            bind: l,
            update: c,
            dispose: b
        };
    }
    class BG {
        constructor(e = {}){
            const { canvas: n = A6(), context: r = null, depth: i = !0, stencil: s = !1, alpha: o = !1, antialias: a = !1, premultipliedAlpha: l = !0, preserveDrawingBuffer: c = !1, powerPreference: u = "default", failIfMajorPerformanceCaveat: f = !1, reverseDepthBuffer: p = !1 } = e;
            this.isWebGLRenderer = !0;
            let g;
            if (r !== null) {
                if (typeof WebGLRenderingContext < "u" && r instanceof WebGLRenderingContext) throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");
                g = r.getContextAttributes().alpha;
            } else g = o;
            const x = new Uint32Array(4), S = new Int32Array(4);
            let _ = null, b = null;
            const M = [], E = [];
            this.domElement = n, this.debug = {
                checkShaderErrors: !0,
                onShaderError: null
            }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this._outputColorSpace = Jo, this.toneMapping = Vc, this.toneMappingExposure = 1;
            const T = this;
            let k = !1, N = 0, D = 0, L = null, R = -1, A = null;
            const P = new rr, B = new rr;
            let U = null;
            const j = new Ft(0);
            let K = 0, q = n.width, te = n.height, W = 1, J = null, Q = null;
            const Y = new rr(0, 0, q, te), le = new rr(0, 0, q, te);
            let ue = !1;
            const ie = new mw;
            let he = !1, ge = !1;
            this.transmissionResolutionScale = 1;
            const ve = new fn, Ee = new fn, Ce = new ye, Ne = new rr, Ve = {
                background: null,
                fog: null,
                environment: null,
                overrideMaterial: null,
                isScene: !0
            };
            let we = !1;
            function Me() {
                return L === null ? W : 1;
            }
            let se = r;
            function Ye(ce, Oe) {
                return n.getContext(ce, Oe);
            }
            try {
                const ce = {
                    alpha: !0,
                    depth: i,
                    stencil: s,
                    antialias: a,
                    premultipliedAlpha: l,
                    preserveDrawingBuffer: c,
                    powerPreference: u,
                    failIfMajorPerformanceCaveat: f
                };
                if ("setAttribute" in n && n.setAttribute("data-engine", `three.js r${DT}`), n.addEventListener("webglcontextlost", Ue, !1), n.addEventListener("webglcontextrestored", We, !1), n.addEventListener("webglcontextcreationerror", rt, !1), se === null) {
                    const Oe = "webgl2";
                    if (se = Ye(Oe, ce), se === null) throw Ye(Oe) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
                }
            } catch (ce) {
                throw console.error("THREE.WebGLRenderer: " + ce.message), ce;
            }
            let Be, it, de, ae, oe, $, H, fe, pe, me, Ie, Xe, Ze, at, Je, Pe, Fe, nt, ct, st, _e, $e, ht, Se;
            function lt() {
                Be = new bbe(se), Be.init(), $e = new jG(se, Be), it = new pbe(se, Be, e, $e), de = new e_e(se, Be), it.reverseDepthBuffer && p && de.buffers.depth.setReversed(!0), ae = new Sbe(se), oe = new zwe, $ = new t_e(se, Be, de, oe, it, $e, ae), H = new gbe(T), fe = new xbe(T), pe = new Ave(se), ht = new fbe(se, pe), me = new wbe(se, pe, ae, ht), Ie = new Mbe(se, me, pe, ae), ct = new Ebe(se, it, $), Pe = new mbe(oe), Xe = new Uwe(T, H, fe, Be, it, ht, Pe), Ze = new a_e(T, oe), at = new Wwe, Je = new Kwe(Be), nt = new dbe(T, H, fe, de, Ie, g, l), Fe = new Jwe(T, Ie, it), Se = new l_e(se, ae, it, de), st = new hbe(se, Be, ae), _e = new _be(se, Be, ae), ae.programs = Xe.programs, T.capabilities = it, T.extensions = Be, T.properties = oe, T.renderLists = at, T.shadowMap = Fe, T.state = de, T.info = ae;
            }
            lt();
            const Re = new s_e(T, se);
            this.xr = Re, this.getContext = function() {
                return se;
            }, this.getContextAttributes = function() {
                return se.getContextAttributes();
            }, this.forceContextLoss = function() {
                const ce = Be.get("WEBGL_lose_context");
                ce && ce.loseContext();
            }, this.forceContextRestore = function() {
                const ce = Be.get("WEBGL_lose_context");
                ce && ce.restoreContext();
            }, this.getPixelRatio = function() {
                return W;
            }, this.setPixelRatio = function(ce) {
                ce !== void 0 && (W = ce, this.setSize(q, te, !1));
            }, this.getSize = function(ce) {
                return ce.set(q, te);
            }, this.setSize = function(ce, Oe, Ge = !0) {
                if (Re.isPresenting) {
                    console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
                    return;
                }
                q = ce, te = Oe, n.width = Math.floor(ce * W), n.height = Math.floor(Oe * W), Ge === !0 && (n.style.width = ce + "px", n.style.height = Oe + "px"), this.setViewport(0, 0, ce, Oe);
            }, this.getDrawingBufferSize = function(ce) {
                return ce.set(q * W, te * W).floor();
            }, this.setDrawingBufferSize = function(ce, Oe, Ge) {
                q = ce, te = Oe, W = Ge, n.width = Math.floor(ce * Ge), n.height = Math.floor(Oe * Ge), this.setViewport(0, 0, ce, Oe);
            }, this.getCurrentViewport = function(ce) {
                return ce.copy(P);
            }, this.getViewport = function(ce) {
                return ce.copy(Y);
            }, this.setViewport = function(ce, Oe, Ge, je) {
                ce.isVector4 ? Y.set(ce.x, ce.y, ce.z, ce.w) : Y.set(ce, Oe, Ge, je), de.viewport(P.copy(Y).multiplyScalar(W).round());
            }, this.getScissor = function(ce) {
                return ce.copy(le);
            }, this.setScissor = function(ce, Oe, Ge, je) {
                ce.isVector4 ? le.set(ce.x, ce.y, ce.z, ce.w) : le.set(ce, Oe, Ge, je), de.scissor(B.copy(le).multiplyScalar(W).round());
            }, this.getScissorTest = function() {
                return ue;
            }, this.setScissorTest = function(ce) {
                de.setScissorTest(ue = ce);
            }, this.setOpaqueSort = function(ce) {
                J = ce;
            }, this.setTransparentSort = function(ce) {
                Q = ce;
            }, this.getClearColor = function(ce) {
                return ce.copy(nt.getClearColor());
            }, this.setClearColor = function() {
                nt.setClearColor.apply(nt, arguments);
            }, this.getClearAlpha = function() {
                return nt.getClearAlpha();
            }, this.setClearAlpha = function() {
                nt.setClearAlpha.apply(nt, arguments);
            }, this.clear = function(ce = !0, Oe = !0, Ge = !0) {
                let je = 0;
                if (ce) {
                    let Le = !1;
                    if (L !== null) {
                        const dt = L.texture.format;
                        Le = dt === HT || dt === qT || dt === dw;
                    }
                    if (Le) {
                        const dt = L.texture.type, _t = dt === sc || dt === yd || dt === Jy || dt === om || dt === zT || dt === VT, Ct = nt.getClearColor(), Pt = nt.getClearAlpha(), Jt = Ct.r, Xt = Ct.g, yt = Ct.b;
                        _t ? (x[0] = Jt, x[1] = Xt, x[2] = yt, x[3] = Pt, se.clearBufferuiv(se.COLOR, 0, x)) : (S[0] = Jt, S[1] = Xt, S[2] = yt, S[3] = Pt, se.clearBufferiv(se.COLOR, 0, S));
                    } else je |= se.COLOR_BUFFER_BIT;
                }
                Oe && (je |= se.DEPTH_BUFFER_BIT), Ge && (je |= se.STENCIL_BUFFER_BIT, this.state.buffers.stencil.setMask(4294967295)), se.clear(je);
            }, this.clearColor = function() {
                this.clear(!0, !1, !1);
            }, this.clearDepth = function() {
                this.clear(!1, !0, !1);
            }, this.clearStencil = function() {
                this.clear(!1, !1, !0);
            }, this.dispose = function() {
                n.removeEventListener("webglcontextlost", Ue, !1), n.removeEventListener("webglcontextrestored", We, !1), n.removeEventListener("webglcontextcreationerror", rt, !1), nt.dispose(), at.dispose(), Je.dispose(), oe.dispose(), H.dispose(), fe.dispose(), Ie.dispose(), ht.dispose(), Se.dispose(), Xe.dispose(), Re.dispose(), Re.removeEventListener("sessionstart", Fr), Re.removeEventListener("sessionend", za), Po.stop();
            };
            function Ue(ce) {
                ce.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), k = !0;
            }
            function We() {
                console.log("THREE.WebGLRenderer: Context Restored."), k = !1;
                const ce = ae.autoReset, Oe = Fe.enabled, Ge = Fe.autoUpdate, je = Fe.needsUpdate, Le = Fe.type;
                lt(), ae.autoReset = ce, Fe.enabled = Oe, Fe.autoUpdate = Ge, Fe.needsUpdate = je, Fe.type = Le;
            }
            function rt(ce) {
                console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ", ce.statusMessage);
            }
            function pt(ce) {
                const Oe = ce.target;
                Oe.removeEventListener("dispose", pt), Nt(Oe);
            }
            function Nt(ce) {
                Zt(ce), oe.remove(ce);
            }
            function Zt(ce) {
                const Oe = oe.get(ce).programs;
                Oe !== void 0 && (Oe.forEach(function(Ge) {
                    Xe.releaseProgram(Ge);
                }), ce.isShaderMaterial && Xe.releaseShaderCache(ce));
            }
            this.renderBufferDirect = function(ce, Oe, Ge, je, Le, dt) {
                Oe === null && (Oe = Ve);
                const _t = Le.isMesh && Le.matrixWorld.determinant() < 0, Ct = _d(ce, Oe, Ge, je, Le);
                de.setMaterial(je, _t);
                let Pt = Ge.index, Jt = 1;
                if (je.wireframe === !0) {
                    if (Pt = me.getWireframeAttribute(Ge), Pt === void 0) return;
                    Jt = 2;
                }
                const Xt = Ge.drawRange, yt = Ge.attributes.position;
                let Wt = Xt.start * Jt, nn = (Xt.start + Xt.count) * Jt;
                dt !== null && (Wt = Math.max(Wt, dt.start * Jt), nn = Math.min(nn, (dt.start + dt.count) * Jt)), Pt !== null ? (Wt = Math.max(Wt, 0), nn = Math.min(nn, Pt.count)) : yt != null && (Wt = Math.max(Wt, 0), nn = Math.min(nn, yt.count));
                const Pn = nn - Wt;
                if (Pn < 0 || Pn === 1 / 0) return;
                ht.setup(Le, je, Ct, Ge, Pt);
                let kn, bn = st;
                if (Pt !== null && (kn = pe.get(Pt), bn = _e, bn.setIndex(kn)), Le.isMesh) je.wireframe === !0 ? (de.setLineWidth(je.wireframeLinewidth * Me()), bn.setMode(se.LINES)) : bn.setMode(se.TRIANGLES);
                else if (Le.isLine) {
                    let zt = je.linewidth;
                    zt === void 0 && (zt = 1), de.setLineWidth(zt * Me()), Le.isLineSegments ? bn.setMode(se.LINES) : Le.isLineLoop ? bn.setMode(se.LINE_LOOP) : bn.setMode(se.LINE_STRIP);
                } else Le.isPoints ? bn.setMode(se.POINTS) : Le.isSprite && bn.setMode(se.TRIANGLES);
                if (Le.isBatchedMesh) if (Le._multiDrawInstances !== null) bn.renderMultiDrawInstances(Le._multiDrawStarts, Le._multiDrawCounts, Le._multiDrawCount, Le._multiDrawInstances);
                else if (Be.get("WEBGL_multi_draw")) bn.renderMultiDraw(Le._multiDrawStarts, Le._multiDrawCounts, Le._multiDrawCount);
                else {
                    const zt = Le._multiDrawStarts, Un = Le._multiDrawCounts, Sn = Le._multiDrawCount, Zr = Pt ? pe.get(Pt).bytesPerElement : 1, da = oe.get(je).currentProgram.getUniforms();
                    for(let ii = 0; ii < Sn; ii++)da.setValue(se, "_gl_DrawID", ii), bn.render(zt[ii] / Zr, Un[ii]);
                }
                else if (Le.isInstancedMesh) bn.renderInstances(Wt, Pn, Le.count);
                else if (Ge.isInstancedBufferGeometry) {
                    const zt = Ge._maxInstanceCount !== void 0 ? Ge._maxInstanceCount : 1 / 0, Un = Math.min(Ge.instanceCount, zt);
                    bn.renderInstances(Wt, Pn, Un);
                } else bn.render(Wt, Pn);
            };
            function wt(ce, Oe, Ge) {
                ce.transparent === !0 && ce.side === Oc && ce.forceSinglePass === !1 ? (ce.side = To, ce.needsUpdate = !0, fc(ce, Oe, Ge), ce.side = md, ce.needsUpdate = !0, fc(ce, Oe, Ge), ce.side = Oc) : fc(ce, Oe, Ge);
            }
            this.compile = function(ce, Oe, Ge = null) {
                Ge === null && (Ge = ce), b = Je.get(Ge), b.init(Oe), E.push(b), Ge.traverseVisible(function(Le) {
                    Le.isLight && Le.layers.test(Oe.layers) && (b.pushLight(Le), Le.castShadow && b.pushShadow(Le));
                }), ce !== Ge && ce.traverseVisible(function(Le) {
                    Le.isLight && Le.layers.test(Oe.layers) && (b.pushLight(Le), Le.castShadow && b.pushShadow(Le));
                }), b.setupLights();
                const je = new Set;
                return ce.traverse(function(Le) {
                    if (!(Le.isMesh || Le.isPoints || Le.isLine || Le.isSprite)) return;
                    const dt = Le.material;
                    if (dt) if (Array.isArray(dt)) for(let _t = 0; _t < dt.length; _t++){
                        const Ct = dt[_t];
                        wt(Ct, Ge, Le), je.add(Ct);
                    }
                    else wt(dt, Ge, Le), je.add(dt);
                }), E.pop(), b = null, je;
            }, this.compileAsync = function(ce, Oe, Ge = null) {
                const je = this.compile(ce, Oe, Ge);
                return new Promise((Le)=>{
                    function dt() {
                        if (je.forEach(function(_t) {
                            oe.get(_t).currentProgram.isReady() && je.delete(_t);
                        }), je.size === 0) {
                            Le(ce);
                            return;
                        }
                        setTimeout(dt, 10);
                    }
                    Be.get("KHR_parallel_shader_compile") !== null ? dt() : setTimeout(dt, 10);
                });
            };
            let Nn = null;
            function pn(ce) {
                Nn && Nn(ce);
            }
            function Fr() {
                Po.stop();
            }
            function za() {
                Po.start();
            }
            const Po = new kG;
            Po.setAnimationLoop(pn), typeof self < "u" && Po.setContext(self), this.setAnimationLoop = function(ce) {
                Nn = ce, Re.setAnimationLoop(ce), ce === null ? Po.stop() : Po.start();
            }, Re.addEventListener("sessionstart", Fr), Re.addEventListener("sessionend", za), this.render = function(ce, Oe) {
                if (Oe !== void 0 && Oe.isCamera !== !0) {
                    console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
                    return;
                }
                if (k === !0) return;
                if (ce.matrixWorldAutoUpdate === !0 && ce.updateMatrixWorld(), Oe.parent === null && Oe.matrixWorldAutoUpdate === !0 && Oe.updateMatrixWorld(), Re.enabled === !0 && Re.isPresenting === !0 && (Re.cameraAutoUpdate === !0 && Re.updateCamera(Oe), Oe = Re.getCamera()), ce.isScene === !0 && ce.onBeforeRender(T, ce, Oe, L), b = Je.get(ce, E.length), b.init(Oe), E.push(b), Ee.multiplyMatrices(Oe.projectionMatrix, Oe.matrixWorldInverse), ie.setFromProjectionMatrix(Ee), ge = this.localClippingEnabled, he = Pe.init(this.clippingPlanes, ge), _ = at.get(ce, M.length), _.init(), M.push(_), Re.enabled === !0 && Re.isPresenting === !0) {
                    const dt = T.xr.getDepthSensingMesh();
                    dt !== null && ro(dt, Oe, -1 / 0, T.sortObjects);
                }
                ro(ce, Oe, 0, T.sortObjects), _.finish(), T.sortObjects === !0 && _.sort(J, Q), we = Re.enabled === !1 || Re.isPresenting === !1 || Re.hasDepthSensing() === !1, we && nt.addToRenderList(_, ce), this.info.render.frame++, he === !0 && Pe.beginShadows();
                const Ge = b.state.shadowsArray;
                Fe.render(Ge, ce, Oe), he === !0 && Pe.endShadows(), this.info.autoReset === !0 && this.info.reset();
                const je = _.opaque, Le = _.transmissive;
                if (b.setupLights(), Oe.isArrayCamera) {
                    const dt = Oe.cameras;
                    if (Le.length > 0) for(let _t = 0, Ct = dt.length; _t < Ct; _t++){
                        const Pt = dt[_t];
                        io(je, Le, ce, Pt);
                    }
                    we && nt.render(ce);
                    for(let _t = 0, Ct = dt.length; _t < Ct; _t++){
                        const Pt = dt[_t];
                        pl(_, ce, Pt, Pt.viewport);
                    }
                } else Le.length > 0 && io(je, Le, ce, Oe), we && nt.render(ce), pl(_, ce, Oe);
                L !== null && D === 0 && ($.updateMultisampleRenderTarget(L), $.updateRenderTargetMipmap(L)), ce.isScene === !0 && ce.onAfterRender(T, ce, Oe), ht.resetDefaultState(), R = -1, A = null, E.pop(), E.length > 0 ? (b = E[E.length - 1], he === !0 && Pe.setGlobalState(T.clippingPlanes, b.state.camera)) : b = null, M.pop(), M.length > 0 ? _ = M[M.length - 1] : _ = null;
            };
            function ro(ce, Oe, Ge, je) {
                if (ce.visible === !1) return;
                if (ce.layers.test(Oe.layers)) {
                    if (ce.isGroup) Ge = ce.renderOrder;
                    else if (ce.isLOD) ce.autoUpdate === !0 && ce.update(Oe);
                    else if (ce.isLight) b.pushLight(ce), ce.castShadow && b.pushShadow(ce);
                    else if (ce.isSprite) {
                        if (!ce.frustumCulled || ie.intersectsSprite(ce)) {
                            je && Ne.setFromMatrixPosition(ce.matrixWorld).applyMatrix4(Ee);
                            const _t = Ie.update(ce), Ct = ce.material;
                            Ct.visible && _.push(ce, _t, Ct, Ge, Ne.z, null);
                        }
                    } else if ((ce.isMesh || ce.isLine || ce.isPoints) && (!ce.frustumCulled || ie.intersectsObject(ce))) {
                        const _t = Ie.update(ce), Ct = ce.material;
                        if (je && (ce.boundingSphere !== void 0 ? (ce.boundingSphere === null && ce.computeBoundingSphere(), Ne.copy(ce.boundingSphere.center)) : (_t.boundingSphere === null && _t.computeBoundingSphere(), Ne.copy(_t.boundingSphere.center)), Ne.applyMatrix4(ce.matrixWorld).applyMatrix4(Ee)), Array.isArray(Ct)) {
                            const Pt = _t.groups;
                            for(let Jt = 0, Xt = Pt.length; Jt < Xt; Jt++){
                                const yt = Pt[Jt], Wt = Ct[yt.materialIndex];
                                Wt && Wt.visible && _.push(ce, _t, Wt, Ge, Ne.z, yt);
                            }
                        } else Ct.visible && _.push(ce, _t, Ct, Ge, Ne.z, null);
                    }
                }
                const dt = ce.children;
                for(let _t = 0, Ct = dt.length; _t < Ct; _t++)ro(dt[_t], Oe, Ge, je);
            }
            function pl(ce, Oe, Ge, je) {
                const Le = ce.opaque, dt = ce.transmissive, _t = ce.transparent;
                b.setupLightsView(Ge), he === !0 && Pe.setGlobalState(T.clippingPlanes, Ge), je && de.viewport(P.copy(je)), Le.length > 0 && Va(Le, Oe, Ge), dt.length > 0 && Va(dt, Oe, Ge), _t.length > 0 && Va(_t, Oe, Ge), de.buffers.depth.setTest(!0), de.buffers.depth.setMask(!0), de.buffers.color.setMask(!0), de.setPolygonOffset(!1);
            }
            function io(ce, Oe, Ge, je) {
                if ((Ge.isScene === !0 ? Ge.overrideMaterial : null) !== null) return;
                b.state.transmissionRenderTarget[je.id] === void 0 && (b.state.transmissionRenderTarget[je.id] = new Kc(1, 1, {
                    generateMipmaps: !0,
                    type: Be.has("EXT_color_buffer_half_float") || Be.has("EXT_color_buffer_float") ? yv : sc,
                    minFilter: Fc,
                    samples: 4,
                    stencilBuffer: s,
                    resolveDepthBuffer: !1,
                    resolveStencilBuffer: !1,
                    colorSpace: Zn.workingColorSpace
                }));
                const dt = b.state.transmissionRenderTarget[je.id], _t = je.viewport || P;
                dt.setSize(_t.z * T.transmissionResolutionScale, _t.w * T.transmissionResolutionScale);
                const Ct = T.getRenderTarget();
                T.setRenderTarget(dt), T.getClearColor(j), K = T.getClearAlpha(), K < 1 && T.setClearColor(16777215, .5), T.clear(), we && nt.render(Ge);
                const Pt = T.toneMapping;
                T.toneMapping = Vc;
                const Jt = je.viewport;
                if (je.viewport !== void 0 && (je.viewport = void 0), b.setupLightsView(je), he === !0 && Pe.setGlobalState(T.clippingPlanes, je), Va(ce, Ge, je), $.updateMultisampleRenderTarget(dt), $.updateRenderTargetMipmap(dt), Be.has("WEBGL_multisampled_render_to_texture") === !1) {
                    let Xt = !1;
                    for(let yt = 0, Wt = Oe.length; yt < Wt; yt++){
                        const nn = Oe[yt], Pn = nn.object, kn = nn.geometry, bn = nn.material, zt = nn.group;
                        if (bn.side === Oc && Pn.layers.test(je.layers)) {
                            const Un = bn.side;
                            bn.side = To, bn.needsUpdate = !0, wd(Pn, Ge, je, kn, bn, zt), bn.side = Un, bn.needsUpdate = !0, Xt = !0;
                        }
                    }
                    Xt === !0 && ($.updateMultisampleRenderTarget(dt), $.updateRenderTargetMipmap(dt));
                }
                T.setRenderTarget(Ct), T.setClearColor(j, K), Jt !== void 0 && (je.viewport = Jt), T.toneMapping = Pt;
            }
            function Va(ce, Oe, Ge) {
                const je = Oe.isScene === !0 ? Oe.overrideMaterial : null;
                for(let Le = 0, dt = ce.length; Le < dt; Le++){
                    const _t = ce[Le], Ct = _t.object, Pt = _t.geometry, Jt = je === null ? _t.material : je, Xt = _t.group;
                    Ct.layers.test(Ge.layers) && wd(Ct, Oe, Ge, Pt, Jt, Xt);
                }
            }
            function wd(ce, Oe, Ge, je, Le, dt) {
                ce.onBeforeRender(T, Oe, Ge, je, Le, dt), ce.modelViewMatrix.multiplyMatrices(Ge.matrixWorldInverse, ce.matrixWorld), ce.normalMatrix.getNormalMatrix(ce.modelViewMatrix), Le.onBeforeRender(T, Oe, Ge, je, ce, dt), Le.transparent === !0 && Le.side === Oc && Le.forceSinglePass === !1 ? (Le.side = To, Le.needsUpdate = !0, T.renderBufferDirect(Ge, Oe, je, Le, ce, dt), Le.side = md, Le.needsUpdate = !0, T.renderBufferDirect(Ge, Oe, je, Le, ce, dt), Le.side = Oc) : T.renderBufferDirect(Ge, Oe, je, Le, ce, dt), ce.onAfterRender(T, Oe, Ge, je, Le, dt);
            }
            function fc(ce, Oe, Ge) {
                Oe.isScene !== !0 && (Oe = Ve);
                const je = oe.get(ce), Le = b.state.lights, dt = b.state.shadowsArray, _t = Le.state.version, Ct = Xe.getParameters(ce, Le.state, dt, Oe, Ge), Pt = Xe.getProgramCacheKey(Ct);
                let Jt = je.programs;
                je.environment = ce.isMeshStandardMaterial ? Oe.environment : null, je.fog = Oe.fog, je.envMap = (ce.isMeshStandardMaterial ? fe : H).get(ce.envMap || je.environment), je.envMapRotation = je.environment !== null && ce.envMap === null ? Oe.environmentRotation : ce.envMapRotation, Jt === void 0 && (ce.addEventListener("dispose", pt), Jt = new Map, je.programs = Jt);
                let Xt = Jt.get(Pt);
                if (Xt !== void 0) {
                    if (je.currentProgram === Xt && je.lightsStateVersion === _t) return so(ce, Ct), Xt;
                } else Ct.uniforms = Xe.getUniforms(ce), ce.onBeforeCompile(Ct, T), Xt = Xe.acquireProgram(Ct, Pt), Jt.set(Pt, Xt), je.uniforms = Ct.uniforms;
                const yt = je.uniforms;
                return (!ce.isShaderMaterial && !ce.isRawShaderMaterial || ce.clipping === !0) && (yt.clippingPlanes = Pe.uniform), so(ce, Ct), je.needsLights = Ed(ce), je.lightsStateVersion = _t, je.needsLights && (yt.ambientLightColor.value = Le.state.ambient, yt.lightProbe.value = Le.state.probe, yt.directionalLights.value = Le.state.directional, yt.directionalLightShadows.value = Le.state.directionalShadow, yt.spotLights.value = Le.state.spot, yt.spotLightShadows.value = Le.state.spotShadow, yt.rectAreaLights.value = Le.state.rectArea, yt.ltc_1.value = Le.state.rectAreaLTC1, yt.ltc_2.value = Le.state.rectAreaLTC2, yt.pointLights.value = Le.state.point, yt.pointLightShadows.value = Le.state.pointShadow, yt.hemisphereLights.value = Le.state.hemi, yt.directionalShadowMap.value = Le.state.directionalShadowMap, yt.directionalShadowMatrix.value = Le.state.directionalShadowMatrix, yt.spotShadowMap.value = Le.state.spotShadowMap, yt.spotLightMatrix.value = Le.state.spotLightMatrix, yt.spotLightMap.value = Le.state.spotLightMap, yt.pointShadowMap.value = Le.state.pointShadowMap, yt.pointShadowMatrix.value = Le.state.pointShadowMatrix), je.currentProgram = Xt, je.uniformsList = null, Xt;
            }
            function tu(ce) {
                if (ce.uniformsList === null) {
                    const Oe = ce.currentProgram.getUniforms();
                    ce.uniformsList = w1.seqWithValue(Oe.seq, ce.uniforms);
                }
                return ce.uniformsList;
            }
            function so(ce, Oe) {
                const Ge = oe.get(ce);
                Ge.outputColorSpace = Oe.outputColorSpace, Ge.batching = Oe.batching, Ge.batchingColor = Oe.batchingColor, Ge.instancing = Oe.instancing, Ge.instancingColor = Oe.instancingColor, Ge.instancingMorph = Oe.instancingMorph, Ge.skinning = Oe.skinning, Ge.morphTargets = Oe.morphTargets, Ge.morphNormals = Oe.morphNormals, Ge.morphColors = Oe.morphColors, Ge.morphTargetsCount = Oe.morphTargetsCount, Ge.numClippingPlanes = Oe.numClippingPlanes, Ge.numIntersection = Oe.numClipIntersection, Ge.vertexAlphas = Oe.vertexAlphas, Ge.vertexTangents = Oe.vertexTangents, Ge.toneMapping = Oe.toneMapping;
            }
            function _d(ce, Oe, Ge, je, Le) {
                Oe.isScene !== !0 && (Oe = Ve), $.resetTextureUnits();
                const dt = Oe.fog, _t = je.isMeshStandardMaterial ? Oe.environment : null, Ct = L === null ? T.outputColorSpace : L.isXRRenderTarget === !0 ? L.texture.colorSpace : lm, Pt = (je.isMeshStandardMaterial ? fe : H).get(je.envMap || _t), Jt = je.vertexColors === !0 && !!Ge.attributes.color && Ge.attributes.color.itemSize === 4, Xt = !!Ge.attributes.tangent && (!!je.normalMap || je.anisotropy > 0), yt = !!Ge.morphAttributes.position, Wt = !!Ge.morphAttributes.normal, nn = !!Ge.morphAttributes.color;
                let Pn = Vc;
                je.toneMapped && (L === null || L.isXRRenderTarget === !0) && (Pn = T.toneMapping);
                const kn = Ge.morphAttributes.position || Ge.morphAttributes.normal || Ge.morphAttributes.color, bn = kn !== void 0 ? kn.length : 0, zt = oe.get(je), Un = b.state.lights;
                if (he === !0 && (ge === !0 || ce !== A)) {
                    const Hi = ce === A && je.id === R;
                    Pe.setState(je, ce, Hi);
                }
                let Sn = !1;
                je.version === zt.__version ? (zt.needsLights && zt.lightsStateVersion !== Un.state.version || zt.outputColorSpace !== Ct || Le.isBatchedMesh && zt.batching === !1 || !Le.isBatchedMesh && zt.batching === !0 || Le.isBatchedMesh && zt.batchingColor === !0 && Le.colorTexture === null || Le.isBatchedMesh && zt.batchingColor === !1 && Le.colorTexture !== null || Le.isInstancedMesh && zt.instancing === !1 || !Le.isInstancedMesh && zt.instancing === !0 || Le.isSkinnedMesh && zt.skinning === !1 || !Le.isSkinnedMesh && zt.skinning === !0 || Le.isInstancedMesh && zt.instancingColor === !0 && Le.instanceColor === null || Le.isInstancedMesh && zt.instancingColor === !1 && Le.instanceColor !== null || Le.isInstancedMesh && zt.instancingMorph === !0 && Le.morphTexture === null || Le.isInstancedMesh && zt.instancingMorph === !1 && Le.morphTexture !== null || zt.envMap !== Pt || je.fog === !0 && zt.fog !== dt || zt.numClippingPlanes !== void 0 && (zt.numClippingPlanes !== Pe.numPlanes || zt.numIntersection !== Pe.numIntersection) || zt.vertexAlphas !== Jt || zt.vertexTangents !== Xt || zt.morphTargets !== yt || zt.morphNormals !== Wt || zt.morphColors !== nn || zt.toneMapping !== Pn || zt.morphTargetsCount !== bn) && (Sn = !0) : (Sn = !0, zt.__version = je.version);
                let Zr = zt.currentProgram;
                Sn === !0 && (Zr = fc(je, Oe, Le));
                let da = !1, ii = !1, oo = !1;
                const zn = Zr.getUniforms(), is = zt.uniforms;
                if (de.useProgram(Zr.program) && (da = !0, ii = !0, oo = !0), je.id !== R && (R = je.id, ii = !0), da || A !== ce) {
                    de.buffers.depth.getReversed() ? (ve.copy(ce.projectionMatrix), Qme(ve), ege(ve), zn.setValue(se, "projectionMatrix", ve)) : zn.setValue(se, "projectionMatrix", ce.projectionMatrix), zn.setValue(se, "viewMatrix", ce.matrixWorldInverse);
                    const Jr = zn.map.cameraPosition;
                    Jr !== void 0 && Jr.setValue(se, Ce.setFromMatrixPosition(ce.matrixWorld)), it.logarithmicDepthBuffer && zn.setValue(se, "logDepthBufFC", 2 / (Math.log(ce.far + 1) / Math.LN2)), (je.isMeshPhongMaterial || je.isMeshToonMaterial || je.isMeshLambertMaterial || je.isMeshBasicMaterial || je.isMeshStandardMaterial || je.isShaderMaterial) && zn.setValue(se, "isOrthographic", ce.isOrthographicCamera === !0), A !== ce && (A = ce, ii = !0, oo = !0);
                }
                if (Le.isSkinnedMesh) {
                    zn.setOptional(se, Le, "bindMatrix"), zn.setOptional(se, Le, "bindMatrixInverse");
                    const Hi = Le.skeleton;
                    Hi && (Hi.boneTexture === null && Hi.computeBoneTexture(), zn.setValue(se, "boneTexture", Hi.boneTexture, $));
                }
                Le.isBatchedMesh && (zn.setOptional(se, Le, "batchingTexture"), zn.setValue(se, "batchingTexture", Le._matricesTexture, $), zn.setOptional(se, Le, "batchingIdTexture"), zn.setValue(se, "batchingIdTexture", Le._indirectTexture, $), zn.setOptional(se, Le, "batchingColorTexture"), Le._colorsTexture !== null && zn.setValue(se, "batchingColorTexture", Le._colorsTexture, $));
                const Ai = Ge.morphAttributes;
                if ((Ai.position !== void 0 || Ai.normal !== void 0 || Ai.color !== void 0) && ct.update(Le, Ge, Zr), (ii || zt.receiveShadow !== Le.receiveShadow) && (zt.receiveShadow = Le.receiveShadow, zn.setValue(se, "receiveShadow", Le.receiveShadow)), je.isMeshGouraudMaterial && je.envMap !== null && (is.envMap.value = Pt, is.flipEnvMap.value = Pt.isCubeTexture && Pt.isRenderTargetTexture === !1 ? -1 : 1), je.isMeshStandardMaterial && je.envMap === null && Oe.environment !== null && (is.envMapIntensity.value = Oe.environmentIntensity), ii && (zn.setValue(se, "toneMappingExposure", T.toneMappingExposure), zt.needsLights && Sd(is, oo), dt && je.fog === !0 && Ze.refreshFogUniforms(is, dt), Ze.refreshMaterialUniforms(is, je, W, te, b.state.transmissionRenderTarget[ce.id]), w1.upload(se, tu(zt), is, $)), je.isShaderMaterial && je.uniformsNeedUpdate === !0 && (w1.upload(se, tu(zt), is, $), je.uniformsNeedUpdate = !1), je.isSpriteMaterial && zn.setValue(se, "center", Le.center), zn.setValue(se, "modelViewMatrix", Le.modelViewMatrix), zn.setValue(se, "normalMatrix", Le.normalMatrix), zn.setValue(se, "modelMatrix", Le.matrixWorld), je.isShaderMaterial || je.isRawShaderMaterial) {
                    const Hi = je.uniformsGroups;
                    for(let Jr = 0, qn = Hi.length; Jr < qn; Jr++){
                        const Ns = Hi[Jr];
                        Se.update(Ns, Zr), Se.bind(Ns, Zr);
                    }
                }
                return Zr;
            }
            function Sd(ce, Oe) {
                ce.ambientLightColor.needsUpdate = Oe, ce.lightProbe.needsUpdate = Oe, ce.directionalLights.needsUpdate = Oe, ce.directionalLightShadows.needsUpdate = Oe, ce.pointLights.needsUpdate = Oe, ce.pointLightShadows.needsUpdate = Oe, ce.spotLights.needsUpdate = Oe, ce.spotLightShadows.needsUpdate = Oe, ce.rectAreaLights.needsUpdate = Oe, ce.hemisphereLights.needsUpdate = Oe;
            }
            function Ed(ce) {
                return ce.isMeshLambertMaterial || ce.isMeshToonMaterial || ce.isMeshPhongMaterial || ce.isMeshStandardMaterial || ce.isShadowMaterial || ce.isShaderMaterial && ce.lights === !0;
            }
            this.getActiveCubeFace = function() {
                return N;
            }, this.getActiveMipmapLevel = function() {
                return D;
            }, this.getRenderTarget = function() {
                return L;
            }, this.setRenderTargetTextures = function(ce, Oe, Ge) {
                oe.get(ce.texture).__webglTexture = Oe, oe.get(ce.depthTexture).__webglTexture = Ge;
                const je = oe.get(ce);
                je.__hasExternalTextures = !0, je.__autoAllocateDepthBuffer = Ge === void 0, je.__autoAllocateDepthBuffer || Be.has("WEBGL_multisampled_render_to_texture") === !0 && (console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"), je.__useRenderToTexture = !1);
            }, this.setRenderTargetFramebuffer = function(ce, Oe) {
                const Ge = oe.get(ce);
                Ge.__webglFramebuffer = Oe, Ge.__useDefaultFramebuffer = Oe === void 0;
            };
            const Md = se.createFramebuffer();
            this.setRenderTarget = function(ce, Oe = 0, Ge = 0) {
                L = ce, N = Oe, D = Ge;
                let je = !0, Le = null, dt = !1, _t = !1;
                if (ce) {
                    const Pt = oe.get(ce);
                    if (Pt.__useDefaultFramebuffer !== void 0) de.bindFramebuffer(se.FRAMEBUFFER, null), je = !1;
                    else if (Pt.__webglFramebuffer === void 0) $.setupRenderTarget(ce);
                    else if (Pt.__hasExternalTextures) $.rebindTextures(ce, oe.get(ce.texture).__webglTexture, oe.get(ce.depthTexture).__webglTexture);
                    else if (ce.depthBuffer) {
                        const yt = ce.depthTexture;
                        if (Pt.__boundDepthTexture !== yt) {
                            if (yt !== null && oe.has(yt) && (ce.width !== yt.image.width || ce.height !== yt.image.height)) throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");
                            $.setupDepthRenderbuffer(ce);
                        }
                    }
                    const Jt = ce.texture;
                    (Jt.isData3DTexture || Jt.isDataArrayTexture || Jt.isCompressedArrayTexture) && (_t = !0);
                    const Xt = oe.get(ce).__webglFramebuffer;
                    ce.isWebGLCubeRenderTarget ? (Array.isArray(Xt[Oe]) ? Le = Xt[Oe][Ge] : Le = Xt[Oe], dt = !0) : ce.samples > 0 && $.useMultisampledRTT(ce) === !1 ? Le = oe.get(ce).__webglMultisampledFramebuffer : Array.isArray(Xt) ? Le = Xt[Ge] : Le = Xt, P.copy(ce.viewport), B.copy(ce.scissor), U = ce.scissorTest;
                } else P.copy(Y).multiplyScalar(W).floor(), B.copy(le).multiplyScalar(W).floor(), U = ue;
                if (Ge !== 0 && (Le = Md), de.bindFramebuffer(se.FRAMEBUFFER, Le) && je && de.drawBuffers(ce, Le), de.viewport(P), de.scissor(B), de.setScissorTest(U), dt) {
                    const Pt = oe.get(ce.texture);
                    se.framebufferTexture2D(se.FRAMEBUFFER, se.COLOR_ATTACHMENT0, se.TEXTURE_CUBE_MAP_POSITIVE_X + Oe, Pt.__webglTexture, Ge);
                } else if (_t) {
                    const Pt = oe.get(ce.texture), Jt = Oe;
                    se.framebufferTextureLayer(se.FRAMEBUFFER, se.COLOR_ATTACHMENT0, Pt.__webglTexture, Ge, Jt);
                } else if (ce !== null && Ge !== 0) {
                    const Pt = oe.get(ce.texture);
                    se.framebufferTexture2D(se.FRAMEBUFFER, se.COLOR_ATTACHMENT0, se.TEXTURE_2D, Pt.__webglTexture, Ge);
                }
                R = -1;
            }, this.readRenderTargetPixels = function(ce, Oe, Ge, je, Le, dt, _t) {
                if (!(ce && ce.isWebGLRenderTarget)) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
                    return;
                }
                let Ct = oe.get(ce).__webglFramebuffer;
                if (ce.isWebGLCubeRenderTarget && _t !== void 0 && (Ct = Ct[_t]), Ct) {
                    de.bindFramebuffer(se.FRAMEBUFFER, Ct);
                    try {
                        const Pt = ce.texture, Jt = Pt.format, Xt = Pt.type;
                        if (!it.textureFormatReadable(Jt)) {
                            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                            return;
                        }
                        if (!it.textureTypeReadable(Xt)) {
                            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                            return;
                        }
                        Oe >= 0 && Oe <= ce.width - je && Ge >= 0 && Ge <= ce.height - Le && se.readPixels(Oe, Ge, je, Le, $e.convert(Jt), $e.convert(Xt), dt);
                    } finally{
                        const Pt = L !== null ? oe.get(L).__webglFramebuffer : null;
                        de.bindFramebuffer(se.FRAMEBUFFER, Pt);
                    }
                }
            }, this.readRenderTargetPixelsAsync = async function(ce, Oe, Ge, je, Le, dt, _t) {
                if (!(ce && ce.isWebGLRenderTarget)) throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
                let Ct = oe.get(ce).__webglFramebuffer;
                if (ce.isWebGLCubeRenderTarget && _t !== void 0 && (Ct = Ct[_t]), Ct) {
                    const Pt = ce.texture, Jt = Pt.format, Xt = Pt.type;
                    if (!it.textureFormatReadable(Jt)) throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");
                    if (!it.textureTypeReadable(Xt)) throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");
                    if (Oe >= 0 && Oe <= ce.width - je && Ge >= 0 && Ge <= ce.height - Le) {
                        de.bindFramebuffer(se.FRAMEBUFFER, Ct);
                        const yt = se.createBuffer();
                        se.bindBuffer(se.PIXEL_PACK_BUFFER, yt), se.bufferData(se.PIXEL_PACK_BUFFER, dt.byteLength, se.STREAM_READ), se.readPixels(Oe, Ge, je, Le, $e.convert(Jt), $e.convert(Xt), 0);
                        const Wt = L !== null ? oe.get(L).__webglFramebuffer : null;
                        de.bindFramebuffer(se.FRAMEBUFFER, Wt);
                        const nn = se.fenceSync(se.SYNC_GPU_COMMANDS_COMPLETE, 0);
                        return se.flush(), await Jme(se, nn, 4), se.bindBuffer(se.PIXEL_PACK_BUFFER, yt), se.getBufferSubData(se.PIXEL_PACK_BUFFER, 0, dt), se.deleteBuffer(yt), se.deleteSync(nn), dt;
                    } else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.");
                }
            }, this.copyFramebufferToTexture = function(ce, Oe = null, Ge = 0) {
                ce.isTexture !== !0 && (Jg("WebGLRenderer: copyFramebufferToTexture function signature has changed."), Oe = arguments[0] || null, ce = arguments[1]);
                const je = Math.pow(2, -Ge), Le = Math.floor(ce.image.width * je), dt = Math.floor(ce.image.height * je), _t = Oe !== null ? Oe.x : 0, Ct = Oe !== null ? Oe.y : 0;
                $.setTexture2D(ce, 0), se.copyTexSubImage2D(se.TEXTURE_2D, Ge, 0, 0, _t, Ct, Le, dt), de.unbindTexture();
            };
            const Td = se.createFramebuffer(), Cd = se.createFramebuffer();
            this.copyTextureToTexture = function(ce, Oe, Ge = null, je = null, Le = 0, dt = null) {
                ce.isTexture !== !0 && (Jg("WebGLRenderer: copyTextureToTexture function signature has changed."), je = arguments[0] || null, ce = arguments[1], Oe = arguments[2], dt = arguments[3] || 0, Ge = null), dt === null && (Le !== 0 ? (Jg("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."), dt = Le, Le = 0) : dt = 0);
                let _t, Ct, Pt, Jt, Xt, yt, Wt, nn, Pn;
                const kn = ce.isCompressedTexture ? ce.mipmaps[dt] : ce.image;
                if (Ge !== null) _t = Ge.max.x - Ge.min.x, Ct = Ge.max.y - Ge.min.y, Pt = Ge.isBox3 ? Ge.max.z - Ge.min.z : 1, Jt = Ge.min.x, Xt = Ge.min.y, yt = Ge.isBox3 ? Ge.min.z : 0;
                else {
                    const Ai = Math.pow(2, -Le);
                    _t = Math.floor(kn.width * Ai), Ct = Math.floor(kn.height * Ai), ce.isDataArrayTexture ? Pt = kn.depth : ce.isData3DTexture ? Pt = Math.floor(kn.depth * Ai) : Pt = 1, Jt = 0, Xt = 0, yt = 0;
                }
                je !== null ? (Wt = je.x, nn = je.y, Pn = je.z) : (Wt = 0, nn = 0, Pn = 0);
                const bn = $e.convert(Oe.format), zt = $e.convert(Oe.type);
                let Un;
                Oe.isData3DTexture ? ($.setTexture3D(Oe, 0), Un = se.TEXTURE_3D) : Oe.isDataArrayTexture || Oe.isCompressedArrayTexture ? ($.setTexture2DArray(Oe, 0), Un = se.TEXTURE_2D_ARRAY) : ($.setTexture2D(Oe, 0), Un = se.TEXTURE_2D), se.pixelStorei(se.UNPACK_FLIP_Y_WEBGL, Oe.flipY), se.pixelStorei(se.UNPACK_PREMULTIPLY_ALPHA_WEBGL, Oe.premultiplyAlpha), se.pixelStorei(se.UNPACK_ALIGNMENT, Oe.unpackAlignment);
                const Sn = se.getParameter(se.UNPACK_ROW_LENGTH), Zr = se.getParameter(se.UNPACK_IMAGE_HEIGHT), da = se.getParameter(se.UNPACK_SKIP_PIXELS), ii = se.getParameter(se.UNPACK_SKIP_ROWS), oo = se.getParameter(se.UNPACK_SKIP_IMAGES);
                se.pixelStorei(se.UNPACK_ROW_LENGTH, kn.width), se.pixelStorei(se.UNPACK_IMAGE_HEIGHT, kn.height), se.pixelStorei(se.UNPACK_SKIP_PIXELS, Jt), se.pixelStorei(se.UNPACK_SKIP_ROWS, Xt), se.pixelStorei(se.UNPACK_SKIP_IMAGES, yt);
                const zn = ce.isDataArrayTexture || ce.isData3DTexture, is = Oe.isDataArrayTexture || Oe.isData3DTexture;
                if (ce.isDepthTexture) {
                    const Ai = oe.get(ce), Hi = oe.get(Oe), Jr = oe.get(Ai.__renderTarget), qn = oe.get(Hi.__renderTarget);
                    de.bindFramebuffer(se.READ_FRAMEBUFFER, Jr.__webglFramebuffer), de.bindFramebuffer(se.DRAW_FRAMEBUFFER, qn.__webglFramebuffer);
                    for(let Ns = 0; Ns < Pt; Ns++)zn && (se.framebufferTextureLayer(se.READ_FRAMEBUFFER, se.COLOR_ATTACHMENT0, oe.get(ce).__webglTexture, Le, yt + Ns), se.framebufferTextureLayer(se.DRAW_FRAMEBUFFER, se.COLOR_ATTACHMENT0, oe.get(Oe).__webglTexture, dt, Pn + Ns)), se.blitFramebuffer(Jt, Xt, _t, Ct, Wt, nn, _t, Ct, se.DEPTH_BUFFER_BIT, se.NEAREST);
                    de.bindFramebuffer(se.READ_FRAMEBUFFER, null), de.bindFramebuffer(se.DRAW_FRAMEBUFFER, null);
                } else if (Le !== 0 || ce.isRenderTargetTexture || oe.has(ce)) {
                    const Ai = oe.get(ce), Hi = oe.get(Oe);
                    de.bindFramebuffer(se.READ_FRAMEBUFFER, Td), de.bindFramebuffer(se.DRAW_FRAMEBUFFER, Cd);
                    for(let Jr = 0; Jr < Pt; Jr++)zn ? se.framebufferTextureLayer(se.READ_FRAMEBUFFER, se.COLOR_ATTACHMENT0, Ai.__webglTexture, Le, yt + Jr) : se.framebufferTexture2D(se.READ_FRAMEBUFFER, se.COLOR_ATTACHMENT0, se.TEXTURE_2D, Ai.__webglTexture, Le), is ? se.framebufferTextureLayer(se.DRAW_FRAMEBUFFER, se.COLOR_ATTACHMENT0, Hi.__webglTexture, dt, Pn + Jr) : se.framebufferTexture2D(se.DRAW_FRAMEBUFFER, se.COLOR_ATTACHMENT0, se.TEXTURE_2D, Hi.__webglTexture, dt), Le !== 0 ? se.blitFramebuffer(Jt, Xt, _t, Ct, Wt, nn, _t, Ct, se.COLOR_BUFFER_BIT, se.NEAREST) : is ? se.copyTexSubImage3D(Un, dt, Wt, nn, Pn + Jr, Jt, Xt, _t, Ct) : se.copyTexSubImage2D(Un, dt, Wt, nn, Jt, Xt, _t, Ct);
                    de.bindFramebuffer(se.READ_FRAMEBUFFER, null), de.bindFramebuffer(se.DRAW_FRAMEBUFFER, null);
                } else is ? ce.isDataTexture || ce.isData3DTexture ? se.texSubImage3D(Un, dt, Wt, nn, Pn, _t, Ct, Pt, bn, zt, kn.data) : Oe.isCompressedArrayTexture ? se.compressedTexSubImage3D(Un, dt, Wt, nn, Pn, _t, Ct, Pt, bn, kn.data) : se.texSubImage3D(Un, dt, Wt, nn, Pn, _t, Ct, Pt, bn, zt, kn) : ce.isDataTexture ? se.texSubImage2D(se.TEXTURE_2D, dt, Wt, nn, _t, Ct, bn, zt, kn.data) : ce.isCompressedTexture ? se.compressedTexSubImage2D(se.TEXTURE_2D, dt, Wt, nn, kn.width, kn.height, bn, kn.data) : se.texSubImage2D(se.TEXTURE_2D, dt, Wt, nn, _t, Ct, bn, zt, kn);
                se.pixelStorei(se.UNPACK_ROW_LENGTH, Sn), se.pixelStorei(se.UNPACK_IMAGE_HEIGHT, Zr), se.pixelStorei(se.UNPACK_SKIP_PIXELS, da), se.pixelStorei(se.UNPACK_SKIP_ROWS, ii), se.pixelStorei(se.UNPACK_SKIP_IMAGES, oo), dt === 0 && Oe.generateMipmaps && se.generateMipmap(Un), de.unbindTexture();
            }, this.copyTextureToTexture3D = function(ce, Oe, Ge = null, je = null, Le = 0) {
                return ce.isTexture !== !0 && (Jg("WebGLRenderer: copyTextureToTexture3D function signature has changed."), Ge = arguments[0] || null, je = arguments[1] || null, ce = arguments[2], Oe = arguments[3], Le = arguments[4] || 0), Jg('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'), this.copyTextureToTexture(ce, Oe, Ge, je, Le);
            }, this.initRenderTarget = function(ce) {
                oe.get(ce).__webglFramebuffer === void 0 && $.setupRenderTarget(ce);
            }, this.initTexture = function(ce) {
                ce.isCubeTexture ? $.setTextureCube(ce, 0) : ce.isData3DTexture ? $.setTexture3D(ce, 0) : ce.isDataArrayTexture || ce.isCompressedArrayTexture ? $.setTexture2DArray(ce, 0) : $.setTexture2D(ce, 0), de.unbindTexture();
            }, this.resetState = function() {
                N = 0, D = 0, L = null, de.reset(), ht.reset();
            }, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
                detail: this
            }));
        }
        get coordinateSystem() {
            return Ql;
        }
        get outputColorSpace() {
            return this._outputColorSpace;
        }
        set outputColorSpace(e) {
            this._outputColorSpace = e;
            const n = this.getContext();
            n.drawingBufferColorspace = Zn._getDrawingBufferColorSpace(e), n.unpackColorSpace = Zn._getUnpackColorSpace();
        }
    }
    const c_e = Object.freeze(Object.defineProperty({
        __proto__: null,
        ACESFilmicToneMapping: jT,
        AddEquation: Nf,
        AddOperation: l6,
        AdditiveAnimationBlendMode: f2,
        AdditiveBlending: lk,
        AgXToneMapping: h6,
        AlphaFormat: o2,
        AlwaysCompare: I6,
        AlwaysDepth: eM,
        AlwaysStencilFunc: fk,
        AmbientLight: wG,
        AnimationAction: AG,
        AnimationClip: kb,
        AnimationLoader: Eye,
        AnimationMixer: Qye,
        AnimationObjectGroup: Zye,
        AnimationUtils: bye,
        ArcCurve: $6,
        ArrayCamera: CG,
        ArrowHelper: wve,
        AttachedBindMode: dk,
        Audio: IG,
        AudioAnalyser: zye,
        AudioContext: D2,
        AudioListener: jye,
        AudioLoader: Lye,
        AxesHelper: _ve,
        BackSide: To,
        BasicDepthPacking: x6,
        BasicShadowMap: V$,
        BatchedMesh: V6,
        Bone: x2,
        BooleanKeyframeTrack: xm,
        Box2: ave,
        Box3: Co,
        Box3Helper: xve,
        BoxGeometry: vm,
        BoxHelper: vve,
        BufferAttribute: wr,
        BufferGeometry: Fn,
        BufferGeometryLoader: TG,
        ByteType: r2,
        Cache: ed,
        Camera: hw,
        CameraHelper: yve,
        CanvasTexture: qge,
        CapsuleGeometry: tC,
        CatmullRomCurve3: G6,
        CineonToneMapping: d6,
        CircleGeometry: nC,
        ClampToEdgeWrapping: ll,
        Clock: F2,
        Color: Ft,
        ColorKeyframeTrack: k2,
        ColorManagement: Zn,
        CompressedArrayTexture: Vge,
        CompressedCubeTexture: Wge,
        CompressedTexture: QT,
        CompressedTextureLoader: Mye,
        ConeGeometry: rC,
        ConstantAlphaFactor: s6,
        ConstantColorFactor: r6,
        Controls: Eve,
        CubeCamera: L6,
        CubeReflectionMapping: gd,
        CubeRefractionMapping: Qf,
        CubeTexture: pw,
        CubeTextureLoader: Tye,
        CubeUVReflectionMapping: gv,
        CubicBezierCurve: S2,
        CubicBezierCurve3: X6,
        CubicInterpolant: hG,
        CullFaceBack: ak,
        CullFaceFront: z$,
        CullFaceFrontBack: Qpe,
        CullFaceNone: U$,
        Curve: uc,
        CurvePath: Y6,
        CustomBlending: W$,
        CustomToneMapping: f6,
        CylinderGeometry: vv,
        Cylindrical: ove,
        Data3DTexture: XT,
        DataArrayTexture: fw,
        DataTexture: tc,
        DataTextureLoader: Cye,
        DataUtils: mge,
        DecrementStencilOp: hme,
        DecrementWrapStencilOp: mme,
        DefaultLoadingManager: gG,
        DepthFormat: Vp,
        DepthStencilFormat: am,
        DepthTexture: w2,
        DetachedBindMode: m6,
        DirectionalLight: bG,
        DirectionalLightHelper: gve,
        DiscreteInterpolant: pG,
        DodecahedronGeometry: iC,
        DoubleSide: Oc,
        DstAlphaFactor: J$,
        DstColorFactor: e6,
        DynamicCopyUsage: Ame,
        DynamicDrawUsage: Eme,
        DynamicReadUsage: Cme,
        EdgesGeometry: Z6,
        EllipseCurve: eC,
        EqualCompare: E6,
        EqualDepth: nM,
        EqualStencilFunc: xme,
        EquirectangularReflectionMapping: yb,
        EquirectangularRefractionMapping: vb,
        Euler: ja,
        EventDispatcher: Jc,
        ExtrudeGeometry: oC,
        FileLoader: vd,
        Float16BufferAttribute: _ge,
        Float32BufferAttribute: Gt,
        FloatType: na,
        Fog: YT,
        FogExp2: KT,
        FramebufferTexture: zge,
        FrontSide: md,
        Frustum: mw,
        GLBufferAttribute: sve,
        GLSL1: Pme,
        GLSL3: hk,
        GreaterCompare: M6,
        GreaterDepth: iM,
        GreaterEqualCompare: C6,
        GreaterEqualDepth: rM,
        GreaterEqualStencilFunc: Sme,
        GreaterStencilFunc: wme,
        GridHelper: pve,
        Group: dy,
        HalfFloatType: yv,
        HemisphereLight: yG,
        HemisphereLightHelper: hve,
        IcosahedronGeometry: aC,
        ImageBitmapLoader: Oye,
        ImageLoader: Ob,
        ImageUtils: N6,
        IncrementStencilOp: fme,
        IncrementWrapStencilOp: pme,
        InstancedBufferAttribute: tv,
        InstancedBufferGeometry: MG,
        InstancedInterleavedBuffer: ive,
        InstancedMesh: z6,
        Int16BufferAttribute: bge,
        Int32BufferAttribute: wge,
        Int8BufferAttribute: yge,
        IntType: UT,
        InterleavedBuffer: ZT,
        InterleavedBufferAttribute: cm,
        Interpolant: xw,
        InterpolateDiscrete: wb,
        InterpolateLinear: PM,
        InterpolateSmooth: x1,
        InvertStencilOp: gme,
        KeepStencilOp: vp,
        KeyframeTrack: dc,
        LOD: B6,
        LatheGeometry: gw,
        Layers: qp,
        LessCompare: S6,
        LessDepth: tM,
        LessEqualCompare: h2,
        LessEqualDepth: sm,
        LessEqualStencilFunc: bme,
        LessStencilFunc: vme,
        Light: ah,
        LightProbe: EG,
        Line: eh,
        Line3: lve,
        LineBasicMaterial: No,
        LineCurve: E2,
        LineCurve3: K6,
        LineDashedMaterial: uG,
        LineLoop: W6,
        LineSegments: Qc,
        LinearFilter: es,
        LinearInterpolant: P2,
        LinearMipMapLinearFilter: rme,
        LinearMipMapNearestFilter: nme,
        LinearMipmapLinearFilter: Fc,
        LinearMipmapNearestFilter: E0,
        LinearSRGBColorSpace: lm,
        LinearToneMapping: c6,
        LinearTransfer: Sb,
        Loader: ca,
        LoaderUtils: vk,
        LoadingManager: O2,
        LoopOnce: g6,
        LoopPingPong: v6,
        LoopRepeat: y6,
        LuminanceAlphaFormat: c2,
        LuminanceFormat: l2,
        MOUSE: Ku,
        Material: no,
        MaterialLoader: pC,
        MathUtils: Yme,
        Matrix2: z2,
        Matrix3: Mn,
        Matrix4: fn,
        MaxEquation: G$,
        Mesh: zi,
        MeshBasicMaterial: sh,
        MeshDepthMaterial: R2,
        MeshDistanceMaterial: A2,
        MeshLambertMaterial: lG,
        MeshMatcapMaterial: cG,
        MeshNormalMaterial: aG,
        MeshPhongMaterial: sG,
        MeshPhysicalMaterial: iG,
        MeshStandardMaterial: I2,
        MeshToonMaterial: oG,
        MinEquation: $$,
        MirroredRepeatWrapping: bb,
        MixOperation: a6,
        MultiplyBlending: uk,
        MultiplyOperation: uw,
        NearestFilter: Is,
        NearestMipMapLinearFilter: tme,
        NearestMipMapNearestFilter: eme,
        NearestMipmapLinearFilter: cy,
        NearestMipmapNearestFilter: n2,
        NeutralToneMapping: p6,
        NeverCompare: _6,
        NeverDepth: QE,
        NeverStencilFunc: yme,
        NoBlending: sd,
        NoColorSpace: Zu,
        NoToneMapping: Vc,
        NormalAnimationBlendMode: $T,
        NormalBlending: zp,
        NotEqualCompare: T6,
        NotEqualDepth: sM,
        NotEqualStencilFunc: _me,
        NumberKeyframeTrack: Nb,
        Object3D: ir,
        ObjectLoader: Pye,
        ObjectSpaceNormalMap: w6,
        OctahedronGeometry: yw,
        OneFactor: K$,
        OneMinusConstantAlphaFactor: o6,
        OneMinusConstantColorFactor: i6,
        OneMinusDstAlphaFactor: Q$,
        OneMinusDstColorFactor: t6,
        OneMinusSrcAlphaFactor: JE,
        OneMinusSrcColorFactor: Z$,
        OrthographicCamera: ad,
        PCFShadowMap: FT,
        PCFSoftShadowMap: S0,
        PMREMGenerator: _k,
        Path: Cb,
        PerspectiveCamera: Ei,
        Plane: Yu,
        PlaneGeometry: xv,
        PlaneHelper: bve,
        PointLight: xG,
        PointLightHelper: dve,
        Points: q6,
        PointsMaterial: b2,
        PolarGridHelper: mve,
        PolyhedronGeometry: oh,
        PositionalAudio: Uye,
        PropertyBinding: tr,
        PropertyMixer: RG,
        QuadraticBezierCurve: M2,
        QuadraticBezierCurve3: T2,
        Quaternion: Xs,
        QuaternionKeyframeTrack: bw,
        QuaternionLinearInterpolant: mG,
        RED_GREEN_RGTC2_Format: AM,
        RED_RGTC1_Format: d2,
        REVISION: DT,
        RGBADepthPacking: b6,
        RGBAFormat: Hs,
        RGBAIntegerFormat: HT,
        RGBA_ASTC_10x10_Format: EM,
        RGBA_ASTC_10x5_Format: wM,
        RGBA_ASTC_10x6_Format: _M,
        RGBA_ASTC_10x8_Format: SM,
        RGBA_ASTC_12x10_Format: MM,
        RGBA_ASTC_12x12_Format: TM,
        RGBA_ASTC_4x4_Format: hM,
        RGBA_ASTC_5x4_Format: pM,
        RGBA_ASTC_5x5_Format: mM,
        RGBA_ASTC_6x5_Format: gM,
        RGBA_ASTC_6x6_Format: yM,
        RGBA_ASTC_8x5_Format: vM,
        RGBA_ASTC_8x6_Format: xM,
        RGBA_ASTC_8x8_Format: bM,
        RGBA_BPTC_Format: R0,
        RGBA_ETC2_EAC_Format: fM,
        RGBA_PVRTC_2BPPV1_Format: cM,
        RGBA_PVRTC_4BPPV1_Format: lM,
        RGBA_S3TC_DXT1_Format: T0,
        RGBA_S3TC_DXT3_Format: C0,
        RGBA_S3TC_DXT5_Format: I0,
        RGBDepthPacking: lme,
        RGBFormat: a2,
        RGBIntegerFormat: ime,
        RGB_BPTC_SIGNED_Format: CM,
        RGB_BPTC_UNSIGNED_Format: IM,
        RGB_ETC1_Format: uM,
        RGB_ETC2_Format: dM,
        RGB_PVRTC_2BPPV1_Format: aM,
        RGB_PVRTC_4BPPV1_Format: oM,
        RGB_S3TC_DXT1_Format: M0,
        RGDepthPacking: cme,
        RGFormat: u2,
        RGIntegerFormat: qT,
        RawShaderMaterial: rG,
        Ray: ym,
        Raycaster: NG,
        RectAreaLight: _G,
        RedFormat: WT,
        RedIntegerFormat: dw,
        ReinhardToneMapping: u6,
        RenderTarget: GT,
        RenderTarget3D: eve,
        RenderTargetArray: tve,
        RepeatWrapping: xb,
        ReplaceStencilOp: dme,
        ReverseSubtractEquation: H$,
        RingGeometry: lC,
        SIGNED_RED_GREEN_RGTC2_Format: NM,
        SIGNED_RED_RGTC1_Format: RM,
        SRGBColorSpace: Jo,
        SRGBTransfer: hr,
        Scene: y2,
        ShaderChunk: Ln,
        ShaderLib: Gl,
        ShaderMaterial: oc,
        ShadowMaterial: nG,
        Shape: Hp,
        ShapeGeometry: cC,
        ShapePath: Sve,
        ShapeUtils: Wc,
        ShortType: i2,
        Skeleton: JT,
        SkeletonHelper: uve,
        SkinnedMesh: U6,
        Source: Lp,
        Sphere: Ks,
        SphereGeometry: vw,
        Spherical: bk,
        SphericalHarmonics3: SG,
        SplineCurve: C2,
        SpotLight: vG,
        SpotLightHelper: cve,
        Sprite: j6,
        SpriteMaterial: v2,
        SrcAlphaFactor: ZE,
        SrcAlphaSaturateFactor: n6,
        SrcColorFactor: Y$,
        StaticCopyUsage: Rme,
        StaticDrawUsage: Eb,
        StaticReadUsage: Tme,
        StereoCamera: Dye,
        StreamCopyUsage: Nme,
        StreamDrawUsage: Mme,
        StreamReadUsage: Ime,
        StringKeyframeTrack: bm,
        SubtractEquation: q$,
        SubtractiveBlending: ck,
        TOUCH: $l,
        TangentSpaceNormalMap: ih,
        TetrahedronGeometry: uC,
        Texture: ui,
        TextureLoader: Iye,
        TextureUtils: Rve,
        TimestampQuery: kme,
        TorusGeometry: dC,
        TorusKnotGeometry: fC,
        Triangle: Qo,
        TriangleFanDrawMode: ame,
        TriangleStripDrawMode: ome,
        TrianglesDrawMode: sme,
        TubeGeometry: hC,
        UVMapping: BT,
        Uint16BufferAttribute: m2,
        Uint32BufferAttribute: g2,
        Uint8BufferAttribute: vge,
        Uint8ClampedBufferAttribute: xge,
        Uniform: U2,
        UniformsGroup: rve,
        UniformsLib: Mt,
        UniformsUtils: O6,
        UnsignedByteType: sc,
        UnsignedInt248Type: om,
        UnsignedInt5999Type: s2,
        UnsignedIntType: yd,
        UnsignedShort4444Type: zT,
        UnsignedShort5551Type: VT,
        UnsignedShortType: Jy,
        VSMShadowMap: Vl,
        Vector2: ot,
        Vector3: ye,
        Vector4: rr,
        VectorKeyframeTrack: Pb,
        VideoFrameTexture: Uge,
        VideoTexture: H6,
        WebGL3DRenderTarget: sge,
        WebGLArrayRenderTarget: ige,
        WebGLCoordinateSystem: Ql,
        WebGLCubeRenderTarget: D6,
        WebGLRenderTarget: Kc,
        WebGLRenderer: BG,
        WebGLUtils: jG,
        WebGPUCoordinateSystem: Mb,
        WebXRController: b1,
        WireframeGeometry: tG,
        WrapAroundEnding: _b,
        ZeroCurvatureEnding: kp,
        ZeroFactor: X$,
        ZeroSlopeEnding: Op,
        ZeroStencilOp: ume,
        createCanvasElement: A6
    }, Symbol.toStringTag, {
        value: "Module"
    }));
    var MN = {
        exports: {}
    }, vf = {};
    var qz;
    function u_e() {
        return qz || (qz = 1, vf.ConcurrentRoot = 1, vf.ContinuousEventPriority = 4, vf.DefaultEventPriority = 16, vf.DiscreteEventPriority = 1, vf.IdleEventPriority = 536870912, vf.LegacyRoot = 0), vf;
    }
    var Hz;
    function d_e() {
        return Hz || (Hz = 1, MN.exports = u_e()), MN.exports;
    }
    var py = d_e();
    function f_e(t) {
        let e;
        const n = new Set, r = (c, u)=>{
            const f = typeof c == "function" ? c(e) : c;
            if (f !== e) {
                const p = e;
                e = u ? f : Object.assign({}, e, f), n.forEach((g)=>g(e, p));
            }
        }, i = ()=>e, s = (c, u = i, f = Object.is)=>{
            console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");
            let p = u(e);
            function g() {
                const x = u(e);
                if (!f(p, x)) {
                    const S = p;
                    c(p = x, S);
                }
            }
            return n.add(g), ()=>n.delete(g);
        }, l = {
            setState: r,
            getState: i,
            subscribe: (c, u, f)=>u || f ? s(c, u, f) : (n.add(c), ()=>n.delete(c)),
            destroy: ()=>n.clear()
        };
        return e = t(r, i, l), l;
    }
    const h_e = typeof window > "u" || !window.navigator || /ServerSideRendering|^Deno\//.test(window.navigator.userAgent), $z = h_e ? X.useEffect : X.useLayoutEffect;
    function p_e(t) {
        const e = typeof t == "function" ? f_e(t) : t, n = (r = e.getState, i = Object.is)=>{
            const [, s] = X.useReducer((_)=>_ + 1, 0), o = e.getState(), a = X.useRef(o), l = X.useRef(r), c = X.useRef(i), u = X.useRef(!1), f = X.useRef();
            f.current === void 0 && (f.current = r(o));
            let p, g = !1;
            (a.current !== o || l.current !== r || c.current !== i || u.current) && (p = r(o), g = !i(f.current, p)), $z(()=>{
                g && (f.current = p), a.current = o, l.current = r, c.current = i, u.current = !1;
            });
            const x = X.useRef(o);
            $z(()=>{
                const _ = ()=>{
                    try {
                        const M = e.getState(), E = l.current(M);
                        c.current(f.current, E) || (a.current = M, f.current = E, s());
                    } catch  {
                        u.current = !0, s();
                    }
                }, b = e.subscribe(_);
                return e.getState() !== x.current && _(), b;
            }, []);
            const S = g ? p : f.current;
            return X.useDebugValue(S), S;
        };
        return Object.assign(n, e), n[Symbol.iterator] = function() {
            console.warn("[useStore, api] = create() is deprecated and will be removed in v4");
            const r = [
                n,
                e
            ];
            return {
                next () {
                    const i = r.length <= 0;
                    return {
                        value: r.shift(),
                        done: i
                    };
                }
            };
        }, n;
    }
    var TN = {
        exports: {}
    }, CN = {
        exports: {}
    }, IN = {};
    var Gz;
    function m_e() {
        return Gz || (Gz = 1, function(t) {
            function e(W, J) {
                var Q = W.length;
                W.push(J);
                e: for(; 0 < Q;){
                    var Y = Q - 1 >>> 1, le = W[Y];
                    if (0 < i(le, J)) W[Y] = J, W[Q] = le, Q = Y;
                    else break e;
                }
            }
            function n(W) {
                return W.length === 0 ? null : W[0];
            }
            function r(W) {
                if (W.length === 0) return null;
                var J = W[0], Q = W.pop();
                if (Q !== J) {
                    W[0] = Q;
                    e: for(var Y = 0, le = W.length, ue = le >>> 1; Y < ue;){
                        var ie = 2 * (Y + 1) - 1, he = W[ie], ge = ie + 1, ve = W[ge];
                        if (0 > i(he, Q)) ge < le && 0 > i(ve, he) ? (W[Y] = ve, W[ge] = Q, Y = ge) : (W[Y] = he, W[ie] = Q, Y = ie);
                        else if (ge < le && 0 > i(ve, Q)) W[Y] = ve, W[ge] = Q, Y = ge;
                        else break e;
                    }
                }
                return J;
            }
            function i(W, J) {
                var Q = W.sortIndex - J.sortIndex;
                return Q !== 0 ? Q : W.id - J.id;
            }
            if (typeof performance == "object" && typeof performance.now == "function") {
                var s = performance;
                t.unstable_now = function() {
                    return s.now();
                };
            } else {
                var o = Date, a = o.now();
                t.unstable_now = function() {
                    return o.now() - a;
                };
            }
            var l = [], c = [], u = 1, f = null, p = 3, g = !1, x = !1, S = !1, _ = typeof setTimeout == "function" ? setTimeout : null, b = typeof clearTimeout == "function" ? clearTimeout : null, M = typeof setImmediate < "u" ? setImmediate : null;
            typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
            function E(W) {
                for(var J = n(c); J !== null;){
                    if (J.callback === null) r(c);
                    else if (J.startTime <= W) r(c), J.sortIndex = J.expirationTime, e(l, J);
                    else break;
                    J = n(c);
                }
            }
            function T(W) {
                if (S = !1, E(W), !x) if (n(l) !== null) x = !0, q(k);
                else {
                    var J = n(c);
                    J !== null && te(T, J.startTime - W);
                }
            }
            function k(W, J) {
                x = !1, S && (S = !1, b(L), L = -1), g = !0;
                var Q = p;
                try {
                    for(E(J), f = n(l); f !== null && (!(f.expirationTime > J) || W && !P());){
                        var Y = f.callback;
                        if (typeof Y == "function") {
                            f.callback = null, p = f.priorityLevel;
                            var le = Y(f.expirationTime <= J);
                            J = t.unstable_now(), typeof le == "function" ? f.callback = le : f === n(l) && r(l), E(J);
                        } else r(l);
                        f = n(l);
                    }
                    if (f !== null) var ue = !0;
                    else {
                        var ie = n(c);
                        ie !== null && te(T, ie.startTime - J), ue = !1;
                    }
                    return ue;
                } finally{
                    f = null, p = Q, g = !1;
                }
            }
            var N = !1, D = null, L = -1, R = 5, A = -1;
            function P() {
                return !(t.unstable_now() - A < R);
            }
            function B() {
                if (D !== null) {
                    var W = t.unstable_now();
                    A = W;
                    var J = !0;
                    try {
                        J = D(!0, W);
                    } finally{
                        J ? U() : (N = !1, D = null);
                    }
                } else N = !1;
            }
            var U;
            if (typeof M == "function") U = function() {
                M(B);
            };
            else if (typeof MessageChannel < "u") {
                var j = new MessageChannel, K = j.port2;
                j.port1.onmessage = B, U = function() {
                    K.postMessage(null);
                };
            } else U = function() {
                _(B, 0);
            };
            function q(W) {
                D = W, N || (N = !0, U());
            }
            function te(W, J) {
                L = _(function() {
                    W(t.unstable_now());
                }, J);
            }
            t.unstable_IdlePriority = 5, t.unstable_ImmediatePriority = 1, t.unstable_LowPriority = 4, t.unstable_NormalPriority = 3, t.unstable_Profiling = null, t.unstable_UserBlockingPriority = 2, t.unstable_cancelCallback = function(W) {
                W.callback = null;
            }, t.unstable_continueExecution = function() {
                x || g || (x = !0, q(k));
            }, t.unstable_forceFrameRate = function(W) {
                0 > W || 125 < W ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : R = 0 < W ? Math.floor(1e3 / W) : 5;
            }, t.unstable_getCurrentPriorityLevel = function() {
                return p;
            }, t.unstable_getFirstCallbackNode = function() {
                return n(l);
            }, t.unstable_next = function(W) {
                switch(p){
                    case 1:
                    case 2:
                    case 3:
                        var J = 3;
                        break;
                    default:
                        J = p;
                }
                var Q = p;
                p = J;
                try {
                    return W();
                } finally{
                    p = Q;
                }
            }, t.unstable_pauseExecution = function() {}, t.unstable_requestPaint = function() {}, t.unstable_runWithPriority = function(W, J) {
                switch(W){
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        W = 3;
                }
                var Q = p;
                p = W;
                try {
                    return J();
                } finally{
                    p = Q;
                }
            }, t.unstable_scheduleCallback = function(W, J, Q) {
                var Y = t.unstable_now();
                switch(typeof Q == "object" && Q !== null ? (Q = Q.delay, Q = typeof Q == "number" && 0 < Q ? Y + Q : Y) : Q = Y, W){
                    case 1:
                        var le = -1;
                        break;
                    case 2:
                        le = 250;
                        break;
                    case 5:
                        le = 1073741823;
                        break;
                    case 4:
                        le = 1e4;
                        break;
                    default:
                        le = 5e3;
                }
                return le = Q + le, W = {
                    id: u++,
                    callback: J,
                    priorityLevel: W,
                    startTime: Q,
                    expirationTime: le,
                    sortIndex: -1
                }, Q > Y ? (W.sortIndex = Q, e(c, W), n(l) === null && W === n(c) && (S ? (b(L), L = -1) : S = !0, te(T, Q - Y))) : (W.sortIndex = le, e(l, W), x || g || (x = !0, q(k))), W;
            }, t.unstable_shouldYield = P, t.unstable_wrapCallback = function(W) {
                var J = p;
                return function() {
                    var Q = p;
                    p = J;
                    try {
                        return W.apply(this, arguments);
                    } finally{
                        p = Q;
                    }
                };
            };
        }(IN)), IN;
    }
    var Xz;
    function UG() {
        return Xz || (Xz = 1, CN.exports = m_e()), CN.exports;
    }
    var RN, Kz;
    function g_e() {
        return Kz || (Kz = 1, RN = function(e) {
            var n = {}, r = rv(), i = UG(), s = Object.assign;
            function o(m) {
                for(var y = "https://reactjs.org/docs/error-decoder.html?invariant=" + m, C = 1; C < arguments.length; C++)y += "&args[]=" + encodeURIComponent(arguments[C]);
                return "Minified React error #" + m + "; visit " + y + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
            }
            var a = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, l = Symbol.for("react.element"), c = Symbol.for("react.portal"), u = Symbol.for("react.fragment"), f = Symbol.for("react.strict_mode"), p = Symbol.for("react.profiler"), g = Symbol.for("react.provider"), x = Symbol.for("react.context"), S = Symbol.for("react.forward_ref"), _ = Symbol.for("react.suspense"), b = Symbol.for("react.suspense_list"), M = Symbol.for("react.memo"), E = Symbol.for("react.lazy"), T = Symbol.for("react.offscreen"), k = Symbol.iterator;
            function N(m) {
                return m === null || typeof m != "object" ? null : (m = k && m[k] || m["@@iterator"], typeof m == "function" ? m : null);
            }
            function D(m) {
                if (m == null) return null;
                if (typeof m == "function") return m.displayName || m.name || null;
                if (typeof m == "string") return m;
                switch(m){
                    case u:
                        return "Fragment";
                    case c:
                        return "Portal";
                    case p:
                        return "Profiler";
                    case f:
                        return "StrictMode";
                    case _:
                        return "Suspense";
                    case b:
                        return "SuspenseList";
                }
                if (typeof m == "object") switch(m.$$typeof){
                    case x:
                        return (m.displayName || "Context") + ".Consumer";
                    case g:
                        return (m._context.displayName || "Context") + ".Provider";
                    case S:
                        var y = m.render;
                        return m = m.displayName, m || (m = y.displayName || y.name || "", m = m !== "" ? "ForwardRef(" + m + ")" : "ForwardRef"), m;
                    case M:
                        return y = m.displayName || null, y !== null ? y : D(m.type) || "Memo";
                    case E:
                        y = m._payload, m = m._init;
                        try {
                            return D(m(y));
                        } catch  {}
                }
                return null;
            }
            function L(m) {
                var y = m.type;
                switch(m.tag){
                    case 24:
                        return "Cache";
                    case 9:
                        return (y.displayName || "Context") + ".Consumer";
                    case 10:
                        return (y._context.displayName || "Context") + ".Provider";
                    case 18:
                        return "DehydratedFragment";
                    case 11:
                        return m = y.render, m = m.displayName || m.name || "", y.displayName || (m !== "" ? "ForwardRef(" + m + ")" : "ForwardRef");
                    case 7:
                        return "Fragment";
                    case 5:
                        return y;
                    case 4:
                        return "Portal";
                    case 3:
                        return "Root";
                    case 6:
                        return "Text";
                    case 16:
                        return D(y);
                    case 8:
                        return y === f ? "StrictMode" : "Mode";
                    case 22:
                        return "Offscreen";
                    case 12:
                        return "Profiler";
                    case 21:
                        return "Scope";
                    case 13:
                        return "Suspense";
                    case 19:
                        return "SuspenseList";
                    case 25:
                        return "TracingMarker";
                    case 1:
                    case 0:
                    case 17:
                    case 2:
                    case 14:
                    case 15:
                        if (typeof y == "function") return y.displayName || y.name || null;
                        if (typeof y == "string") return y;
                }
                return null;
            }
            function R(m) {
                var y = m, C = m;
                if (m.alternate) for(; y.return;)y = y.return;
                else {
                    m = y;
                    do y = m, y.flags & 4098 && (C = y.return), m = y.return;
                    while (m);
                }
                return y.tag === 3 ? C : null;
            }
            function A(m) {
                if (R(m) !== m) throw Error(o(188));
            }
            function P(m) {
                var y = m.alternate;
                if (!y) {
                    if (y = R(m), y === null) throw Error(o(188));
                    return y !== m ? null : m;
                }
                for(var C = m, O = y;;){
                    var z = C.return;
                    if (z === null) break;
                    var Z = z.alternate;
                    if (Z === null) {
                        if (O = z.return, O !== null) {
                            C = O;
                            continue;
                        }
                        break;
                    }
                    if (z.child === Z.child) {
                        for(Z = z.child; Z;){
                            if (Z === C) return A(z), m;
                            if (Z === O) return A(z), y;
                            Z = Z.sibling;
                        }
                        throw Error(o(188));
                    }
                    if (C.return !== O.return) C = z, O = Z;
                    else {
                        for(var xe = !1, ke = z.child; ke;){
                            if (ke === C) {
                                xe = !0, C = z, O = Z;
                                break;
                            }
                            if (ke === O) {
                                xe = !0, O = z, C = Z;
                                break;
                            }
                            ke = ke.sibling;
                        }
                        if (!xe) {
                            for(ke = Z.child; ke;){
                                if (ke === C) {
                                    xe = !0, C = Z, O = z;
                                    break;
                                }
                                if (ke === O) {
                                    xe = !0, O = Z, C = z;
                                    break;
                                }
                                ke = ke.sibling;
                            }
                            if (!xe) throw Error(o(189));
                        }
                    }
                    if (C.alternate !== O) throw Error(o(190));
                }
                if (C.tag !== 3) throw Error(o(188));
                return C.stateNode.current === C ? m : y;
            }
            function B(m) {
                return m = P(m), m !== null ? U(m) : null;
            }
            function U(m) {
                if (m.tag === 5 || m.tag === 6) return m;
                for(m = m.child; m !== null;){
                    var y = U(m);
                    if (y !== null) return y;
                    m = m.sibling;
                }
                return null;
            }
            function j(m) {
                if (m.tag === 5 || m.tag === 6) return m;
                for(m = m.child; m !== null;){
                    if (m.tag !== 4) {
                        var y = j(m);
                        if (y !== null) return y;
                    }
                    m = m.sibling;
                }
                return null;
            }
            var K = Array.isArray, q = e.getPublicInstance, te = e.getRootHostContext, W = e.getChildHostContext, J = e.prepareForCommit, Q = e.resetAfterCommit, Y = e.createInstance, le = e.appendInitialChild, ue = e.finalizeInitialChildren, ie = e.prepareUpdate, he = e.shouldSetTextContent, ge = e.createTextInstance, ve = e.scheduleTimeout, Ee = e.cancelTimeout, Ce = e.noTimeout, Ne = e.isPrimaryRenderer, Ve = e.supportsMutation, we = e.supportsPersistence, Me = e.supportsHydration, se = e.getInstanceFromNode, Ye = e.preparePortalMount, Be = e.getCurrentEventPriority, it = e.detachDeletedInstance, de = e.supportsMicrotasks, ae = e.scheduleMicrotask, oe = e.supportsTestSelectors, $ = e.findFiberRoot, H = e.getBoundingRect, fe = e.getTextContent, pe = e.isHiddenSubtree, me = e.matchAccessibilityRole, Ie = e.setFocusIfFocusable, Xe = e.setupIntersectionObserver, Ze = e.appendChild, at = e.appendChildToContainer, Je = e.commitTextUpdate, Pe = e.commitMount, Fe = e.commitUpdate, nt = e.insertBefore, ct = e.insertInContainerBefore, st = e.removeChild, _e = e.removeChildFromContainer, $e = e.resetTextContent, ht = e.hideInstance, Se = e.hideTextInstance, lt = e.unhideInstance, Re = e.unhideTextInstance, Ue = e.clearContainer, We = e.cloneInstance, rt = e.createContainerChildSet, pt = e.appendChildToContainerChildSet, Nt = e.finalizeContainerChildren, Zt = e.replaceContainerChildren, wt = e.cloneHiddenInstance, Nn = e.cloneHiddenTextInstance, pn = e.canHydrateInstance, Fr = e.canHydrateTextInstance, za = e.canHydrateSuspenseInstance, Po = e.isSuspenseInstancePending, ro = e.isSuspenseInstanceFallback, pl = e.registerSuspenseInstanceRetry, io = e.getNextHydratableSibling, Va = e.getFirstHydratableChild, wd = e.getFirstHydratableChildWithinContainer, fc = e.getFirstHydratableChildWithinSuspenseInstance, tu = e.hydrateInstance, so = e.hydrateTextInstance, _d = e.hydrateSuspenseInstance, Sd = e.getNextHydratableInstanceAfterSuspenseInstance, Ed = e.commitHydratedContainer, Md = e.commitHydratedSuspenseInstance, Td = e.clearSuspenseBoundary, Cd = e.clearSuspenseBoundaryFromContainer, ce = e.shouldDeleteUnhydratedTailInstances, Oe = e.didNotMatchHydratedContainerTextInstance, Ge = e.didNotMatchHydratedTextInstance, je;
            function Le(m) {
                if (je === void 0) try {
                    throw Error();
                } catch (C) {
                    var y = C.stack.trim().match(/\n( *(at )?)/);
                    je = y && y[1] || "";
                }
                return `
` + je + m;
            }
            var dt = !1;
            function _t(m, y) {
                if (!m || dt) return "";
                dt = !0;
                var C = Error.prepareStackTrace;
                Error.prepareStackTrace = void 0;
                try {
                    if (y) if (y = function() {
                        throw Error();
                    }, Object.defineProperty(y.prototype, "props", {
                        set: function() {
                            throw Error();
                        }
                    }), typeof Reflect == "object" && Reflect.construct) {
                        try {
                            Reflect.construct(y, []);
                        } catch (vt) {
                            var O = vt;
                        }
                        Reflect.construct(m, [], y);
                    } else {
                        try {
                            y.call();
                        } catch (vt) {
                            O = vt;
                        }
                        m.call(y.prototype);
                    }
                    else {
                        try {
                            throw Error();
                        } catch (vt) {
                            O = vt;
                        }
                        m();
                    }
                } catch (vt) {
                    if (vt && O && typeof vt.stack == "string") {
                        for(var z = vt.stack.split(`
`), Z = O.stack.split(`
`), xe = z.length - 1, ke = Z.length - 1; 1 <= xe && 0 <= ke && z[xe] !== Z[ke];)ke--;
                        for(; 1 <= xe && 0 <= ke; xe--, ke--)if (z[xe] !== Z[ke]) {
                            if (xe !== 1 || ke !== 1) do if (xe--, ke--, 0 > ke || z[xe] !== Z[ke]) {
                                var tt = `
` + z[xe].replace(" at new ", " at ");
                                return m.displayName && tt.includes("<anonymous>") && (tt = tt.replace("<anonymous>", m.displayName)), tt;
                            }
                            while (1 <= xe && 0 <= ke);
                            break;
                        }
                    }
                } finally{
                    dt = !1, Error.prepareStackTrace = C;
                }
                return (m = m ? m.displayName || m.name : "") ? Le(m) : "";
            }
            var Ct = Object.prototype.hasOwnProperty, Pt = [], Jt = -1;
            function Xt(m) {
                return {
                    current: m
                };
            }
            function yt(m) {
                0 > Jt || (m.current = Pt[Jt], Pt[Jt] = null, Jt--);
            }
            function Wt(m, y) {
                Jt++, Pt[Jt] = m.current, m.current = y;
            }
            var nn = {}, Pn = Xt(nn), kn = Xt(!1), bn = nn;
            function zt(m, y) {
                var C = m.type.contextTypes;
                if (!C) return nn;
                var O = m.stateNode;
                if (O && O.__reactInternalMemoizedUnmaskedChildContext === y) return O.__reactInternalMemoizedMaskedChildContext;
                var z = {}, Z;
                for(Z in C)z[Z] = y[Z];
                return O && (m = m.stateNode, m.__reactInternalMemoizedUnmaskedChildContext = y, m.__reactInternalMemoizedMaskedChildContext = z), z;
            }
            function Un(m) {
                return m = m.childContextTypes, m != null;
            }
            function Sn() {
                yt(kn), yt(Pn);
            }
            function Zr(m, y, C) {
                if (Pn.current !== nn) throw Error(o(168));
                Wt(Pn, y), Wt(kn, C);
            }
            function da(m, y, C) {
                var O = m.stateNode;
                if (y = y.childContextTypes, typeof O.getChildContext != "function") return C;
                O = O.getChildContext();
                for(var z in O)if (!(z in y)) throw Error(o(108, L(m) || "Unknown", z));
                return s({}, C, O);
            }
            function ii(m) {
                return m = (m = m.stateNode) && m.__reactInternalMemoizedMergedChildContext || nn, bn = Pn.current, Wt(Pn, m), Wt(kn, kn.current), !0;
            }
            function oo(m, y, C) {
                var O = m.stateNode;
                if (!O) throw Error(o(169));
                C ? (m = da(m, y, bn), O.__reactInternalMemoizedMergedChildContext = m, yt(kn), yt(Pn), Wt(Pn, m)) : yt(kn), Wt(kn, C);
            }
            var zn = Math.clz32 ? Math.clz32 : Hi, is = Math.log, Ai = Math.LN2;
            function Hi(m) {
                return m >>>= 0, m === 0 ? 32 : 31 - (is(m) / Ai | 0) | 0;
            }
            var Jr = 64, qn = 4194304;
            function Ns(m) {
                switch(m & -m){
                    case 1:
                        return 1;
                    case 2:
                        return 2;
                    case 4:
                        return 4;
                    case 8:
                        return 8;
                    case 16:
                        return 16;
                    case 32:
                        return 32;
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                        return m & 4194240;
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                        return m & 130023424;
                    case 134217728:
                        return 134217728;
                    case 268435456:
                        return 268435456;
                    case 536870912:
                        return 536870912;
                    case 1073741824:
                        return 1073741824;
                    default:
                        return m;
                }
            }
            function fh(m, y) {
                var C = m.pendingLanes;
                if (C === 0) return 0;
                var O = 0, z = m.suspendedLanes, Z = m.pingedLanes, xe = C & 268435455;
                if (xe !== 0) {
                    var ke = xe & ~z;
                    ke !== 0 ? O = Ns(ke) : (Z &= xe, Z !== 0 && (O = Ns(Z)));
                } else xe = C & ~z, xe !== 0 ? O = Ns(xe) : Z !== 0 && (O = Ns(Z));
                if (O === 0) return 0;
                if (y !== 0 && y !== O && !(y & z) && (z = O & -O, Z = y & -y, z >= Z || z === 16 && (Z & 4194240) !== 0)) return y;
                if (O & 4 && (O |= C & 16), y = m.entangledLanes, y !== 0) for(m = m.entanglements, y &= O; 0 < y;)C = 31 - zn(y), z = 1 << C, O |= m[C], y &= ~z;
                return O;
            }
            function Sv(m, y) {
                switch(m){
                    case 1:
                    case 2:
                    case 4:
                        return y + 250;
                    case 8:
                    case 16:
                    case 32:
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                        return y + 5e3;
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                        return -1;
                    case 134217728:
                    case 268435456:
                    case 536870912:
                    case 1073741824:
                        return -1;
                    default:
                        return -1;
                }
            }
            function Aw(m, y) {
                for(var C = m.suspendedLanes, O = m.pingedLanes, z = m.expirationTimes, Z = m.pendingLanes; 0 < Z;){
                    var xe = 31 - zn(Z), ke = 1 << xe, tt = z[xe];
                    tt === -1 ? (!(ke & C) || ke & O) && (z[xe] = Sv(ke, y)) : tt <= y && (m.expiredLanes |= ke), Z &= ~ke;
                }
            }
            function wm(m) {
                return m = m.pendingLanes & -1073741825, m !== 0 ? m : m & 1073741824 ? 1073741824 : 0;
            }
            function _m(m) {
                for(var y = [], C = 0; 31 > C; C++)y.push(m);
                return y;
            }
            function nu(m, y, C) {
                m.pendingLanes |= y, y !== 536870912 && (m.suspendedLanes = 0, m.pingedLanes = 0), m = m.eventTimes, y = 31 - zn(y), m[y] = C;
            }
            function Sm(m, y) {
                var C = m.pendingLanes & ~y;
                m.pendingLanes = y, m.suspendedLanes = 0, m.pingedLanes = 0, m.expiredLanes &= y, m.mutableReadLanes &= y, m.entangledLanes &= y, y = m.entanglements;
                var O = m.eventTimes;
                for(m = m.expirationTimes; 0 < C;){
                    var z = 31 - zn(C), Z = 1 << z;
                    y[z] = 0, O[z] = -1, m[z] = -1, C &= ~Z;
                }
            }
            function Wa(m, y) {
                var C = m.entangledLanes |= y;
                for(m = m.entanglements; C;){
                    var O = 31 - zn(C), z = 1 << O;
                    z & y | m[O] & y && (m[O] |= y), C &= ~z;
                }
            }
            var On = 0;
            function ml(m) {
                return m &= -m, 1 < m ? 4 < m ? m & 268435455 ? 16 : 536870912 : 4 : 1;
            }
            var ru = i.unstable_scheduleCallback, Id = i.unstable_cancelCallback, hc = i.unstable_shouldYield, xC = i.unstable_requestPaint, xi = i.unstable_now, iu = i.unstable_ImmediatePriority, bC = i.unstable_UserBlockingPriority, Em = i.unstable_NormalPriority, Mm = i.unstable_IdlePriority, hh = null, qa = null;
            function ph(m) {
                if (qa && typeof qa.onCommitFiberRoot == "function") try {
                    qa.onCommitFiberRoot(hh, m, void 0, (m.current.flags & 128) === 128);
                } catch  {}
            }
            function mh(m, y) {
                return m === y && (m !== 0 || 1 / m === 1 / y) || m !== m && y !== y;
            }
            var ms = typeof Object.is == "function" ? Object.is : mh, ko = null, Tm = !1, Ev = !1;
            function Cm(m) {
                ko === null ? ko = [
                    m
                ] : ko.push(m);
            }
            function Im(m) {
                Tm = !0, Cm(m);
            }
            function Oo() {
                if (!Ev && ko !== null) {
                    Ev = !0;
                    var m = 0, y = On;
                    try {
                        var C = ko;
                        for(On = 1; m < C.length; m++){
                            var O = C[m];
                            do O = O(!0);
                            while (O !== null);
                        }
                        ko = null, Tm = !1;
                    } catch (z) {
                        throw ko !== null && (ko = ko.slice(m + 1)), ru(iu, Oo), z;
                    } finally{
                        On = y, Ev = !1;
                    }
                }
                return null;
            }
            var Nw = a.ReactCurrentBatchConfig;
            function fa(m, y) {
                if (ms(m, y)) return !0;
                if (typeof m != "object" || m === null || typeof y != "object" || y === null) return !1;
                var C = Object.keys(m), O = Object.keys(y);
                if (C.length !== O.length) return !1;
                for(O = 0; O < C.length; O++){
                    var z = C[O];
                    if (!Ct.call(y, z) || !ms(m[z], y[z])) return !1;
                }
                return !0;
            }
            function Mv(m) {
                switch(m.tag){
                    case 5:
                        return Le(m.type);
                    case 16:
                        return Le("Lazy");
                    case 13:
                        return Le("Suspense");
                    case 19:
                        return Le("SuspenseList");
                    case 0:
                    case 2:
                    case 15:
                        return m = _t(m.type, !1), m;
                    case 11:
                        return m = _t(m.type.render, !1), m;
                    case 1:
                        return m = _t(m.type, !0), m;
                    default:
                        return "";
                }
            }
            function Ps(m, y) {
                if (m && m.defaultProps) {
                    y = s({}, y), m = m.defaultProps;
                    for(var C in m)y[C] === void 0 && (y[C] = m[C]);
                    return y;
                }
                return y;
            }
            var gh = Xt(null), su = null, gl = null, Rm = null;
            function gs() {
                Rm = gl = su = null;
            }
            function ou(m, y, C) {
                Ne ? (Wt(gh, y._currentValue), y._currentValue = C) : (Wt(gh, y._currentValue2), y._currentValue2 = C);
            }
            function yh(m) {
                var y = gh.current;
                yt(gh), Ne ? m._currentValue = y : m._currentValue2 = y;
            }
            function au(m, y, C) {
                for(; m !== null;){
                    var O = m.alternate;
                    if ((m.childLanes & y) !== y ? (m.childLanes |= y, O !== null && (O.childLanes |= y)) : O !== null && (O.childLanes & y) !== y && (O.childLanes |= y), m === C) break;
                    m = m.return;
                }
            }
            function Rd(m, y) {
                su = m, Rm = gl = null, m = m.dependencies, m !== null && m.firstContext !== null && (m.lanes & y && (Oi = !0), m.firstContext = null);
            }
            function ks(m) {
                var y = Ne ? m._currentValue : m._currentValue2;
                if (Rm !== m) if (m = {
                    context: m,
                    memoizedValue: y,
                    next: null
                }, gl === null) {
                    if (su === null) throw Error(o(308));
                    gl = m, su.dependencies = {
                        lanes: 0,
                        firstContext: m
                    };
                } else gl = gl.next = m;
                return y;
            }
            var Lo = null, Do = !1;
            function Ad(m) {
                m.updateQueue = {
                    baseState: m.memoizedState,
                    firstBaseUpdate: null,
                    lastBaseUpdate: null,
                    shared: {
                        pending: null,
                        interleaved: null,
                        lanes: 0
                    },
                    effects: null
                };
            }
            function Tv(m, y) {
                m = m.updateQueue, y.updateQueue === m && (y.updateQueue = {
                    baseState: m.baseState,
                    firstBaseUpdate: m.firstBaseUpdate,
                    lastBaseUpdate: m.lastBaseUpdate,
                    shared: m.shared,
                    effects: m.effects
                });
            }
            function yl(m, y) {
                return {
                    eventTime: m,
                    lane: y,
                    tag: 0,
                    payload: null,
                    callback: null,
                    next: null
                };
            }
            function pc(m, y) {
                var C = m.updateQueue;
                C !== null && (C = C.shared, ei !== null && m.mode & 1 && !(En & 2) ? (m = C.interleaved, m === null ? (y.next = y, Lo === null ? Lo = [
                    C
                ] : Lo.push(C)) : (y.next = m.next, m.next = y), C.interleaved = y) : (m = C.pending, m === null ? y.next = y : (y.next = m.next, m.next = y), C.pending = y));
            }
            function Am(m, y, C) {
                if (y = y.updateQueue, y !== null && (y = y.shared, (C & 4194240) !== 0)) {
                    var O = y.lanes;
                    O &= m.pendingLanes, C |= O, y.lanes = C, Wa(m, C);
                }
            }
            function Nm(m, y) {
                var C = m.updateQueue, O = m.alternate;
                if (O !== null && (O = O.updateQueue, C === O)) {
                    var z = null, Z = null;
                    if (C = C.firstBaseUpdate, C !== null) {
                        do {
                            var xe = {
                                eventTime: C.eventTime,
                                lane: C.lane,
                                tag: C.tag,
                                payload: C.payload,
                                callback: C.callback,
                                next: null
                            };
                            Z === null ? z = Z = xe : Z = Z.next = xe, C = C.next;
                        }while (C !== null);
                        Z === null ? z = Z = y : Z = Z.next = y;
                    } else z = Z = y;
                    C = {
                        baseState: O.baseState,
                        firstBaseUpdate: z,
                        lastBaseUpdate: Z,
                        shared: O.shared,
                        effects: O.effects
                    }, m.updateQueue = C;
                    return;
                }
                m = C.lastBaseUpdate, m === null ? C.firstBaseUpdate = y : m.next = y, C.lastBaseUpdate = y;
            }
            function Pm(m, y, C, O) {
                var z = m.updateQueue;
                Do = !1;
                var Z = z.firstBaseUpdate, xe = z.lastBaseUpdate, ke = z.shared.pending;
                if (ke !== null) {
                    z.shared.pending = null;
                    var tt = ke, vt = tt.next;
                    tt.next = null, xe === null ? Z = vt : xe.next = vt, xe = tt;
                    var Bt = m.alternate;
                    Bt !== null && (Bt = Bt.updateQueue, ke = Bt.lastBaseUpdate, ke !== xe && (ke === null ? Bt.firstBaseUpdate = vt : ke.next = vt, Bt.lastBaseUpdate = tt));
                }
                if (Z !== null) {
                    var mn = z.baseState;
                    xe = 0, Bt = vt = tt = null, ke = Z;
                    do {
                        var en = ke.lane, Cn = ke.eventTime;
                        if ((O & en) === en) {
                            Bt !== null && (Bt = Bt.next = {
                                eventTime: Cn,
                                lane: 0,
                                tag: ke.tag,
                                payload: ke.payload,
                                callback: ke.callback,
                                next: null
                            });
                            e: {
                                var It = m, Zi = ke;
                                switch(en = y, Cn = C, Zi.tag){
                                    case 1:
                                        if (It = Zi.payload, typeof It == "function") {
                                            mn = It.call(Cn, mn, en);
                                            break e;
                                        }
                                        mn = It;
                                        break e;
                                    case 3:
                                        It.flags = It.flags & -65537 | 128;
                                    case 0:
                                        if (It = Zi.payload, en = typeof It == "function" ? It.call(Cn, mn, en) : It, en == null) break e;
                                        mn = s({}, mn, en);
                                        break e;
                                    case 2:
                                        Do = !0;
                                }
                            }
                            ke.callback !== null && ke.lane !== 0 && (m.flags |= 64, en = z.effects, en === null ? z.effects = [
                                ke
                            ] : en.push(ke));
                        } else Cn = {
                            eventTime: Cn,
                            lane: en,
                            tag: ke.tag,
                            payload: ke.payload,
                            callback: ke.callback,
                            next: null
                        }, Bt === null ? (vt = Bt = Cn, tt = mn) : Bt = Bt.next = Cn, xe |= en;
                        if (ke = ke.next, ke === null) {
                            if (ke = z.shared.pending, ke === null) break;
                            en = ke, ke = en.next, en.next = null, z.lastBaseUpdate = en, z.shared.pending = null;
                        }
                    }while (!0);
                    if (Bt === null && (tt = mn), z.baseState = tt, z.firstBaseUpdate = vt, z.lastBaseUpdate = Bt, y = z.shared.interleaved, y !== null) {
                        z = y;
                        do xe |= z.lane, z = z.next;
                        while (z !== y);
                    } else Z === null && (z.shared.lanes = 0);
                    Xa |= xe, m.lanes = xe, m.memoizedState = mn;
                }
            }
            function Pw(m, y, C) {
                if (m = y.effects, y.effects = null, m !== null) for(y = 0; y < m.length; y++){
                    var O = m[y], z = O.callback;
                    if (z !== null) {
                        if (O.callback = null, O = C, typeof z != "function") throw Error(o(191, z));
                        z.call(O);
                    }
                }
            }
            var kw = new r.Component().refs;
            function Cv(m, y, C, O) {
                y = m.memoizedState, C = C(O, y), C = C == null ? y : s({}, y, C), m.memoizedState = C, m.lanes === 0 && (m.updateQueue.baseState = C);
            }
            var km = {
                isMounted: function(m) {
                    return (m = m._reactInternals) ? R(m) === m : !1;
                },
                enqueueSetState: function(m, y, C) {
                    m = m._reactInternals;
                    var O = Yn(), z = xa(m), Z = yl(O, z);
                    Z.payload = y, C != null && (Z.callback = C), pc(m, Z), y = as(m, z, O), y !== null && Am(y, m, z);
                },
                enqueueReplaceState: function(m, y, C) {
                    m = m._reactInternals;
                    var O = Yn(), z = xa(m), Z = yl(O, z);
                    Z.tag = 1, Z.payload = y, C != null && (Z.callback = C), pc(m, Z), y = as(m, z, O), y !== null && Am(y, m, z);
                },
                enqueueForceUpdate: function(m, y) {
                    m = m._reactInternals;
                    var C = Yn(), O = xa(m), z = yl(C, O);
                    z.tag = 2, y != null && (z.callback = y), pc(m, z), y = as(m, O, C), y !== null && Am(y, m, O);
                }
            };
            function Iv(m, y, C, O, z, Z, xe) {
                return m = m.stateNode, typeof m.shouldComponentUpdate == "function" ? m.shouldComponentUpdate(O, Z, xe) : y.prototype && y.prototype.isPureReactComponent ? !fa(C, O) || !fa(z, Z) : !0;
            }
            function Ow(m, y, C) {
                var O = !1, z = nn, Z = y.contextType;
                return typeof Z == "object" && Z !== null ? Z = ks(Z) : (z = Un(y) ? bn : Pn.current, O = y.contextTypes, Z = (O = O != null) ? zt(m, z) : nn), y = new y(C, Z), m.memoizedState = y.state !== null && y.state !== void 0 ? y.state : null, y.updater = km, m.stateNode = y, y._reactInternals = m, O && (m = m.stateNode, m.__reactInternalMemoizedUnmaskedChildContext = z, m.__reactInternalMemoizedMaskedChildContext = Z), y;
            }
            function Lw(m, y, C, O) {
                m = y.state, typeof y.componentWillReceiveProps == "function" && y.componentWillReceiveProps(C, O), typeof y.UNSAFE_componentWillReceiveProps == "function" && y.UNSAFE_componentWillReceiveProps(C, O), y.state !== m && km.enqueueReplaceState(y, y.state, null);
            }
            function Rv(m, y, C, O) {
                var z = m.stateNode;
                z.props = C, z.state = m.memoizedState, z.refs = kw, Ad(m);
                var Z = y.contextType;
                typeof Z == "object" && Z !== null ? z.context = ks(Z) : (Z = Un(y) ? bn : Pn.current, z.context = zt(m, Z)), z.state = m.memoizedState, Z = y.getDerivedStateFromProps, typeof Z == "function" && (Cv(m, y, Z, C), z.state = m.memoizedState), typeof y.getDerivedStateFromProps == "function" || typeof z.getSnapshotBeforeUpdate == "function" || typeof z.UNSAFE_componentWillMount != "function" && typeof z.componentWillMount != "function" || (y = z.state, typeof z.componentWillMount == "function" && z.componentWillMount(), typeof z.UNSAFE_componentWillMount == "function" && z.UNSAFE_componentWillMount(), y !== z.state && km.enqueueReplaceState(z, z.state, null), Pm(m, C, z, O), z.state = m.memoizedState), typeof z.componentDidMount == "function" && (m.flags |= 4194308);
            }
            var Nd = [], mc = 0, Om = null, Lm = 0, Fo = [], ao = 0, lu = null, vl = 1, xl = "";
            function cu(m, y) {
                Nd[mc++] = Lm, Nd[mc++] = Om, Om = m, Lm = y;
            }
            function Dw(m, y, C) {
                Fo[ao++] = vl, Fo[ao++] = xl, Fo[ao++] = lu, lu = m;
                var O = vl;
                m = xl;
                var z = 32 - zn(O) - 1;
                O &= ~(1 << z), C += 1;
                var Z = 32 - zn(y) + z;
                if (30 < Z) {
                    var xe = z - z % 5;
                    Z = (O & (1 << xe) - 1).toString(32), O >>= xe, z -= xe, vl = 1 << 32 - zn(y) + z | C << z | O, xl = Z + m;
                } else vl = 1 << Z | C << z | O, xl = m;
            }
            function Av(m) {
                m.return !== null && (cu(m, 1), Dw(m, 1, 0));
            }
            function Nv(m) {
                for(; m === Om;)Om = Nd[--mc], Nd[mc] = null, Lm = Nd[--mc], Nd[mc] = null;
                for(; m === lu;)lu = Fo[--ao], Fo[ao] = null, xl = Fo[--ao], Fo[ao] = null, vl = Fo[--ao], Fo[ao] = null;
            }
            var ys = null, $i = null, Ir = !1, Pd = !1, jo = null;
            function Pv(m, y) {
                var C = mo(5, null, null, 0);
                C.elementType = "DELETED", C.stateNode = y, C.return = m, y = m.deletions, y === null ? (m.deletions = [
                    C
                ], m.flags |= 16) : y.push(C);
            }
            function kv(m, y) {
                switch(m.tag){
                    case 5:
                        return y = pn(y, m.type, m.pendingProps), y !== null ? (m.stateNode = y, ys = m, $i = Va(y), !0) : !1;
                    case 6:
                        return y = Fr(y, m.pendingProps), y !== null ? (m.stateNode = y, ys = m, $i = null, !0) : !1;
                    case 13:
                        if (y = za(y), y !== null) {
                            var C = lu !== null ? {
                                id: vl,
                                overflow: xl
                            } : null;
                            return m.memoizedState = {
                                dehydrated: y,
                                treeContext: C,
                                retryLane: 1073741824
                            }, C = mo(18, null, null, 0), C.stateNode = y, C.return = m, m.child = C, ys = m, $i = null, !0;
                        }
                        return !1;
                    default:
                        return !1;
                }
            }
            function Dm(m) {
                return (m.mode & 1) !== 0 && (m.flags & 128) === 0;
            }
            function gc(m) {
                if (Ir) {
                    var y = $i;
                    if (y) {
                        var C = y;
                        if (!kv(m, y)) {
                            if (Dm(m)) throw Error(o(418));
                            y = io(C);
                            var O = ys;
                            y && kv(m, y) ? Pv(O, C) : (m.flags = m.flags & -4097 | 2, Ir = !1, ys = m);
                        }
                    } else {
                        if (Dm(m)) throw Error(o(418));
                        m.flags = m.flags & -4097 | 2, Ir = !1, ys = m;
                    }
                }
            }
            function Fw(m) {
                for(m = m.return; m !== null && m.tag !== 5 && m.tag !== 3 && m.tag !== 13;)m = m.return;
                ys = m;
            }
            function vh(m) {
                if (!Me || m !== ys) return !1;
                if (!Ir) return Fw(m), Ir = !0, !1;
                if (m.tag !== 3 && (m.tag !== 5 || ce(m.type) && !he(m.type, m.memoizedProps))) {
                    var y = $i;
                    if (y) {
                        if (Dm(m)) {
                            for(m = $i; m;)m = io(m);
                            throw Error(o(418));
                        }
                        for(; y;)Pv(m, y), y = io(y);
                    }
                }
                if (Fw(m), m.tag === 13) {
                    if (!Me) throw Error(o(316));
                    if (m = m.memoizedState, m = m !== null ? m.dehydrated : null, !m) throw Error(o(317));
                    $i = Sd(m);
                } else $i = ys ? io(m.stateNode) : null;
                return !0;
            }
            function kd() {
                Me && ($i = ys = null, Pd = Ir = !1);
            }
            function Fm(m) {
                jo === null ? jo = [
                    m
                ] : jo.push(m);
            }
            function Od(m, y, C) {
                if (m = C.ref, m !== null && typeof m != "function" && typeof m != "object") {
                    if (C._owner) {
                        if (C = C._owner, C) {
                            if (C.tag !== 1) throw Error(o(309));
                            var O = C.stateNode;
                        }
                        if (!O) throw Error(o(147, m));
                        var z = O, Z = "" + m;
                        return y !== null && y.ref !== null && typeof y.ref == "function" && y.ref._stringRef === Z ? y.ref : (y = function(xe) {
                            var ke = z.refs;
                            ke === kw && (ke = z.refs = {}), xe === null ? delete ke[Z] : ke[Z] = xe;
                        }, y._stringRef = Z, y);
                    }
                    if (typeof m != "string") throw Error(o(284));
                    if (!C._owner) throw Error(o(290, m));
                }
                return m;
            }
            function yc(m, y) {
                throw m = Object.prototype.toString.call(y), Error(o(31, m === "[object Object]" ? "object with keys {" + Object.keys(y).join(", ") + "}" : m));
            }
            function Ld(m) {
                var y = m._init;
                return y(m._payload);
            }
            function jw(m) {
                function y(He, De) {
                    if (m) {
                        var Qe = He.deletions;
                        Qe === null ? (He.deletions = [
                            De
                        ], He.flags |= 16) : Qe.push(De);
                    }
                }
                function C(He, De) {
                    if (!m) return null;
                    for(; De !== null;)y(He, De), De = De.sibling;
                    return null;
                }
                function O(He, De) {
                    for(He = new Map; De !== null;)De.key !== null ? He.set(De.key, De) : He.set(De.index, De), De = De.sibling;
                    return He;
                }
                function z(He, De) {
                    return He = kl(He, De), He.index = 0, He.sibling = null, He;
                }
                function Z(He, De, Qe) {
                    return He.index = Qe, m ? (Qe = He.alternate, Qe !== null ? (Qe = Qe.index, Qe < De ? (He.flags |= 2, De) : Qe) : (He.flags |= 2, De)) : (He.flags |= 1048576, De);
                }
                function xe(He) {
                    return m && He.alternate === null && (He.flags |= 2), He;
                }
                function ke(He, De, Qe, Et) {
                    return De === null || De.tag !== 6 ? (De = ug(Qe, He.mode, Et), De.return = He, De) : (De = z(De, Qe), De.return = He, De);
                }
                function tt(He, De, Qe, Et) {
                    var $t = Qe.type;
                    return $t === u ? Bt(He, De, Qe.props.children, Et, Qe.key) : De !== null && (De.elementType === $t || typeof $t == "object" && $t !== null && $t.$$typeof === E && Ld($t) === De.type) ? (Et = z(De, Qe.props), Et.ref = Od(He, De, Qe), Et.return = He, Et) : (Et = cg(Qe.type, Qe.key, Qe.props, null, He.mode, Et), Et.ref = Od(He, De, Qe), Et.return = He, Et);
                }
                function vt(He, De, Qe, Et) {
                    return De === null || De.tag !== 4 || De.stateNode.containerInfo !== Qe.containerInfo || De.stateNode.implementation !== Qe.implementation ? (De = dg(Qe, He.mode, Et), De.return = He, De) : (De = z(De, Qe.children || []), De.return = He, De);
                }
                function Bt(He, De, Qe, Et, $t) {
                    return De === null || De.tag !== 7 ? (De = Nu(Qe, He.mode, Et, $t), De.return = He, De) : (De = z(De, Qe), De.return = He, De);
                }
                function mn(He, De, Qe) {
                    if (typeof De == "string" && De !== "" || typeof De == "number") return De = ug("" + De, He.mode, Qe), De.return = He, De;
                    if (typeof De == "object" && De !== null) {
                        switch(De.$$typeof){
                            case l:
                                return Qe = cg(De.type, De.key, De.props, null, He.mode, Qe), Qe.ref = Od(He, null, De), Qe.return = He, Qe;
                            case c:
                                return De = dg(De, He.mode, Qe), De.return = He, De;
                            case E:
                                var Et = De._init;
                                return mn(He, Et(De._payload), Qe);
                        }
                        if (K(De) || N(De)) return De = Nu(De, He.mode, Qe, null), De.return = He, De;
                        yc(He, De);
                    }
                    return null;
                }
                function en(He, De, Qe, Et) {
                    var $t = De !== null ? De.key : null;
                    if (typeof Qe == "string" && Qe !== "" || typeof Qe == "number") return $t !== null ? null : ke(He, De, "" + Qe, Et);
                    if (typeof Qe == "object" && Qe !== null) {
                        switch(Qe.$$typeof){
                            case l:
                                return Qe.key === $t ? tt(He, De, Qe, Et) : null;
                            case c:
                                return Qe.key === $t ? vt(He, De, Qe, Et) : null;
                            case E:
                                return $t = Qe._init, en(He, De, $t(Qe._payload), Et);
                        }
                        if (K(Qe) || N(Qe)) return $t !== null ? null : Bt(He, De, Qe, Et, null);
                        yc(He, Qe);
                    }
                    return null;
                }
                function Cn(He, De, Qe, Et, $t) {
                    if (typeof Et == "string" && Et !== "" || typeof Et == "number") return He = He.get(Qe) || null, ke(De, He, "" + Et, $t);
                    if (typeof Et == "object" && Et !== null) {
                        switch(Et.$$typeof){
                            case l:
                                return He = He.get(Et.key === null ? Qe : Et.key) || null, tt(De, He, Et, $t);
                            case c:
                                return He = He.get(Et.key === null ? Qe : Et.key) || null, vt(De, He, Et, $t);
                            case E:
                                var wn = Et._init;
                                return Cn(He, De, Qe, wn(Et._payload), $t);
                        }
                        if (K(Et) || N(Et)) return He = He.get(Qe) || null, Bt(De, He, Et, $t, null);
                        yc(De, Et);
                    }
                    return null;
                }
                function It(He, De, Qe, Et) {
                    for(var $t = null, wn = null, gn = De, Xn = De = 0, oi = null; gn !== null && Xn < Qe.length; Xn++){
                        gn.index > Xn ? (oi = gn, gn = null) : oi = gn.sibling;
                        var $n = en(He, gn, Qe[Xn], Et);
                        if ($n === null) {
                            gn === null && (gn = oi);
                            break;
                        }
                        m && gn && $n.alternate === null && y(He, gn), De = Z($n, De, Xn), wn === null ? $t = $n : wn.sibling = $n, wn = $n, gn = oi;
                    }
                    if (Xn === Qe.length) return C(He, gn), Ir && cu(He, Xn), $t;
                    if (gn === null) {
                        for(; Xn < Qe.length; Xn++)gn = mn(He, Qe[Xn], Et), gn !== null && (De = Z(gn, De, Xn), wn === null ? $t = gn : wn.sibling = gn, wn = gn);
                        return Ir && cu(He, Xn), $t;
                    }
                    for(gn = O(He, gn); Xn < Qe.length; Xn++)oi = Cn(gn, He, Xn, Qe[Xn], Et), oi !== null && (m && oi.alternate !== null && gn.delete(oi.key === null ? Xn : oi.key), De = Z(oi, De, Xn), wn === null ? $t = oi : wn.sibling = oi, wn = oi);
                    return m && gn.forEach(function(Ol) {
                        return y(He, Ol);
                    }), Ir && cu(He, Xn), $t;
                }
                function Zi(He, De, Qe, Et) {
                    var $t = N(Qe);
                    if (typeof $t != "function") throw Error(o(150));
                    if (Qe = $t.call(Qe), Qe == null) throw Error(o(151));
                    for(var wn = $t = null, gn = De, Xn = De = 0, oi = null, $n = Qe.next(); gn !== null && !$n.done; Xn++, $n = Qe.next()){
                        gn.index > Xn ? (oi = gn, gn = null) : oi = gn.sibling;
                        var Ol = en(He, gn, $n.value, Et);
                        if (Ol === null) {
                            gn === null && (gn = oi);
                            break;
                        }
                        m && gn && Ol.alternate === null && y(He, gn), De = Z(Ol, De, Xn), wn === null ? $t = Ol : wn.sibling = Ol, wn = Ol, gn = oi;
                    }
                    if ($n.done) return C(He, gn), Ir && cu(He, Xn), $t;
                    if (gn === null) {
                        for(; !$n.done; Xn++, $n = Qe.next())$n = mn(He, $n.value, Et), $n !== null && (De = Z($n, De, Xn), wn === null ? $t = $n : wn.sibling = $n, wn = $n);
                        return Ir && cu(He, Xn), $t;
                    }
                    for(gn = O(He, gn); !$n.done; Xn++, $n = Qe.next())$n = Cn(gn, He, Xn, $n.value, Et), $n !== null && (m && $n.alternate !== null && gn.delete($n.key === null ? Xn : $n.key), De = Z($n, De, Xn), wn === null ? $t = $n : wn.sibling = $n, wn = $n);
                    return m && gn.forEach(function(ux) {
                        return y(He, ux);
                    }), Ir && cu(He, Xn), $t;
                }
                function go(He, De, Qe, Et) {
                    if (typeof Qe == "object" && Qe !== null && Qe.type === u && Qe.key === null && (Qe = Qe.props.children), typeof Qe == "object" && Qe !== null) {
                        switch(Qe.$$typeof){
                            case l:
                                e: {
                                    for(var $t = Qe.key, wn = De; wn !== null;){
                                        if (wn.key === $t) {
                                            if ($t = Qe.type, $t === u) {
                                                if (wn.tag === 7) {
                                                    C(He, wn.sibling), De = z(wn, Qe.props.children), De.return = He, He = De;
                                                    break e;
                                                }
                                            } else if (wn.elementType === $t || typeof $t == "object" && $t !== null && $t.$$typeof === E && Ld($t) === wn.type) {
                                                C(He, wn.sibling), De = z(wn, Qe.props), De.ref = Od(He, wn, Qe), De.return = He, He = De;
                                                break e;
                                            }
                                            C(He, wn);
                                            break;
                                        } else y(He, wn);
                                        wn = wn.sibling;
                                    }
                                    Qe.type === u ? (De = Nu(Qe.props.children, He.mode, Et, Qe.key), De.return = He, He = De) : (Et = cg(Qe.type, Qe.key, Qe.props, null, He.mode, Et), Et.ref = Od(He, De, Qe), Et.return = He, He = Et);
                                }
                                return xe(He);
                            case c:
                                e: {
                                    for(wn = Qe.key; De !== null;){
                                        if (De.key === wn) if (De.tag === 4 && De.stateNode.containerInfo === Qe.containerInfo && De.stateNode.implementation === Qe.implementation) {
                                            C(He, De.sibling), De = z(De, Qe.children || []), De.return = He, He = De;
                                            break e;
                                        } else {
                                            C(He, De);
                                            break;
                                        }
                                        else y(He, De);
                                        De = De.sibling;
                                    }
                                    De = dg(Qe, He.mode, Et), De.return = He, He = De;
                                }
                                return xe(He);
                            case E:
                                return wn = Qe._init, go(He, De, wn(Qe._payload), Et);
                        }
                        if (K(Qe)) return It(He, De, Qe, Et);
                        if (N(Qe)) return Zi(He, De, Qe, Et);
                        yc(He, Qe);
                    }
                    return typeof Qe == "string" && Qe !== "" || typeof Qe == "number" ? (Qe = "" + Qe, De !== null && De.tag === 6 ? (C(He, De.sibling), De = z(De, Qe), De.return = He, He = De) : (C(He, De), De = ug(Qe, He.mode, Et), De.return = He, He = De), xe(He)) : C(He, De);
                }
                return go;
            }
            var bl = jw(!0), Bw = jw(!1), Dd = {}, Os = Xt(Dd), uu = Xt(Dd), du = Xt(Dd);
            function ha(m) {
                if (m === Dd) throw Error(o(174));
                return m;
            }
            function jm(m, y) {
                Wt(du, y), Wt(uu, m), Wt(Os, Dd), m = te(y), yt(Os), Wt(Os, m);
            }
            function Fd() {
                yt(Os), yt(uu), yt(du);
            }
            function Uw(m) {
                var y = ha(du.current), C = ha(Os.current);
                y = W(C, m.type, y), C !== y && (Wt(uu, m), Wt(Os, y));
            }
            function Ov(m) {
                uu.current === m && (yt(Os), yt(uu));
            }
            var jr = Xt(0);
            function Bm(m) {
                for(var y = m; y !== null;){
                    if (y.tag === 13) {
                        var C = y.memoizedState;
                        if (C !== null && (C = C.dehydrated, C === null || Po(C) || ro(C))) return y;
                    } else if (y.tag === 19 && y.memoizedProps.revealOrder !== void 0) {
                        if (y.flags & 128) return y;
                    } else if (y.child !== null) {
                        y.child.return = y, y = y.child;
                        continue;
                    }
                    if (y === m) break;
                    for(; y.sibling === null;){
                        if (y.return === null || y.return === m) return null;
                        y = y.return;
                    }
                    y.sibling.return = y.return, y = y.sibling;
                }
                return null;
            }
            var lo = [];
            function fu() {
                for(var m = 0; m < lo.length; m++){
                    var y = lo[m];
                    Ne ? y._workInProgressVersionPrimary = null : y._workInProgressVersionSecondary = null;
                }
                lo.length = 0;
            }
            var xh = a.ReactCurrentDispatcher, co = a.ReactCurrentBatchConfig, hu = 0, Br = null, Ni = null, Pi = null, Um = !1, Ha = !1, pu = 0, bh = 0;
            function ki() {
                throw Error(o(321));
            }
            function zm(m, y) {
                if (y === null) return !1;
                for(var C = 0; C < y.length && C < m.length; C++)if (!ms(m[C], y[C])) return !1;
                return !0;
            }
            function jd(m, y, C, O, z, Z) {
                if (hu = Z, Br = y, y.memoizedState = null, y.updateQueue = null, y.lanes = 0, xh.current = m === null || m.memoizedState === null ? Uv : zv, m = C(O, z), Ha) {
                    Z = 0;
                    do {
                        if (Ha = !1, pu = 0, 25 <= Z) throw Error(o(301));
                        Z += 1, Pi = Ni = null, y.updateQueue = null, xh.current = Vv, m = C(O, z);
                    }while (Ha);
                }
                if (xh.current = Vd, y = Ni !== null && Ni.next !== null, hu = 0, Pi = Ni = Br = null, Um = !1, y) throw Error(o(300));
                return m;
            }
            function vc() {
                var m = pu !== 0;
                return pu = 0, m;
            }
            function pa() {
                var m = {
                    memoizedState: null,
                    baseState: null,
                    baseQueue: null,
                    queue: null,
                    next: null
                };
                return Pi === null ? Br.memoizedState = Pi = m : Pi = Pi.next = m, Pi;
            }
            function ma() {
                if (Ni === null) {
                    var m = Br.alternate;
                    m = m !== null ? m.memoizedState : null;
                } else m = Ni.next;
                var y = Pi === null ? Br.memoizedState : Pi.next;
                if (y !== null) Pi = y, Ni = m;
                else {
                    if (m === null) throw Error(o(310));
                    Ni = m, m = {
                        memoizedState: Ni.memoizedState,
                        baseState: Ni.baseState,
                        baseQueue: Ni.baseQueue,
                        queue: Ni.queue,
                        next: null
                    }, Pi === null ? Br.memoizedState = Pi = m : Pi = Pi.next = m;
                }
                return Pi;
            }
            function $a(m, y) {
                return typeof y == "function" ? y(m) : y;
            }
            function wh(m) {
                var y = ma(), C = y.queue;
                if (C === null) throw Error(o(311));
                C.lastRenderedReducer = m;
                var O = Ni, z = O.baseQueue, Z = C.pending;
                if (Z !== null) {
                    if (z !== null) {
                        var xe = z.next;
                        z.next = Z.next, Z.next = xe;
                    }
                    O.baseQueue = z = Z, C.pending = null;
                }
                if (z !== null) {
                    Z = z.next, O = O.baseState;
                    var ke = xe = null, tt = null, vt = Z;
                    do {
                        var Bt = vt.lane;
                        if ((hu & Bt) === Bt) tt !== null && (tt = tt.next = {
                            lane: 0,
                            action: vt.action,
                            hasEagerState: vt.hasEagerState,
                            eagerState: vt.eagerState,
                            next: null
                        }), O = vt.hasEagerState ? vt.eagerState : m(O, vt.action);
                        else {
                            var mn = {
                                lane: Bt,
                                action: vt.action,
                                hasEagerState: vt.hasEagerState,
                                eagerState: vt.eagerState,
                                next: null
                            };
                            tt === null ? (ke = tt = mn, xe = O) : tt = tt.next = mn, Br.lanes |= Bt, Xa |= Bt;
                        }
                        vt = vt.next;
                    }while (vt !== null && vt !== Z);
                    tt === null ? xe = O : tt.next = ke, ms(O, y.memoizedState) || (Oi = !0), y.memoizedState = O, y.baseState = xe, y.baseQueue = tt, C.lastRenderedState = O;
                }
                if (m = C.interleaved, m !== null) {
                    z = m;
                    do Z = z.lane, Br.lanes |= Z, Xa |= Z, z = z.next;
                    while (z !== m);
                } else z === null && (C.lanes = 0);
                return [
                    y.memoizedState,
                    C.dispatch
                ];
            }
            function _h(m) {
                var y = ma(), C = y.queue;
                if (C === null) throw Error(o(311));
                C.lastRenderedReducer = m;
                var O = C.dispatch, z = C.pending, Z = y.memoizedState;
                if (z !== null) {
                    C.pending = null;
                    var xe = z = z.next;
                    do Z = m(Z, xe.action), xe = xe.next;
                    while (xe !== z);
                    ms(Z, y.memoizedState) || (Oi = !0), y.memoizedState = Z, y.baseQueue === null && (y.baseState = Z), C.lastRenderedState = Z;
                }
                return [
                    Z,
                    O
                ];
            }
            function Lv() {}
            function Dv(m, y) {
                var C = Br, O = ma(), z = y(), Z = !ms(O.memoizedState, z);
                if (Z && (O.memoizedState = z, Oi = !0), O = O.queue, Bd(wl.bind(null, C, O, m), [
                    m
                ]), O.getSnapshot !== y || Z || Pi !== null && Pi.memoizedState.tag & 1) {
                    if (C.flags |= 2048, Eh(9, jv.bind(null, C, O, z, y), void 0, null), ei === null) throw Error(o(349));
                    hu & 30 || Fv(C, y, z);
                }
                return z;
            }
            function Fv(m, y, C) {
                m.flags |= 16384, m = {
                    getSnapshot: y,
                    value: C
                }, y = Br.updateQueue, y === null ? (y = {
                    lastEffect: null,
                    stores: null
                }, Br.updateQueue = y, y.stores = [
                    m
                ]) : (C = y.stores, C === null ? y.stores = [
                    m
                ] : C.push(m));
            }
            function jv(m, y, C, O) {
                y.value = C, y.getSnapshot = O, Vm(y) && as(m, 1, -1);
            }
            function wl(m, y, C) {
                return C(function() {
                    Vm(y) && as(m, 1, -1);
                });
            }
            function Vm(m) {
                var y = m.getSnapshot;
                m = m.value;
                try {
                    var C = y();
                    return !ms(m, C);
                } catch  {
                    return !0;
                }
            }
            function Sh(m) {
                var y = pa();
                return typeof m == "function" && (m = m()), y.memoizedState = y.baseState = m, m = {
                    pending: null,
                    interleaved: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: $a,
                    lastRenderedState: m
                }, y.queue = m, m = m.dispatch = wC.bind(null, Br, m), [
                    y.memoizedState,
                    m
                ];
            }
            function Eh(m, y, C, O) {
                return m = {
                    tag: m,
                    create: y,
                    destroy: C,
                    deps: O,
                    next: null
                }, y = Br.updateQueue, y === null ? (y = {
                    lastEffect: null,
                    stores: null
                }, Br.updateQueue = y, y.lastEffect = m.next = m) : (C = y.lastEffect, C === null ? y.lastEffect = m.next = m : (O = C.next, C.next = m, m.next = O, y.lastEffect = m)), m;
            }
            function zw() {
                return ma().memoizedState;
            }
            function xc(m, y, C, O) {
                var z = pa();
                Br.flags |= m, z.memoizedState = Eh(1 | y, C, void 0, O === void 0 ? null : O);
            }
            function Wm(m, y, C, O) {
                var z = ma();
                O = O === void 0 ? null : O;
                var Z = void 0;
                if (Ni !== null) {
                    var xe = Ni.memoizedState;
                    if (Z = xe.destroy, O !== null && zm(O, xe.deps)) {
                        z.memoizedState = Eh(y, C, Z, O);
                        return;
                    }
                }
                Br.flags |= m, z.memoizedState = Eh(1 | y, C, Z, O);
            }
            function qm(m, y) {
                return xc(8390656, 8, m, y);
            }
            function Bd(m, y) {
                return Wm(2048, 8, m, y);
            }
            function pr(m, y) {
                return Wm(4, 2, m, y);
            }
            function Hm(m, y) {
                return Wm(4, 4, m, y);
            }
            function Mh(m, y) {
                if (typeof y == "function") return m = m(), y(m), function() {
                    y(null);
                };
                if (y != null) return m = m(), y.current = m, function() {
                    y.current = null;
                };
            }
            function Ud(m, y, C) {
                return C = C != null ? C.concat([
                    m
                ]) : null, Wm(4, 4, Mh.bind(null, y, m), C);
            }
            function $m() {}
            function Gm(m, y) {
                var C = ma();
                y = y === void 0 ? null : y;
                var O = C.memoizedState;
                return O !== null && y !== null && zm(y, O[1]) ? O[0] : (C.memoizedState = [
                    m,
                    y
                ], m);
            }
            function zd(m, y) {
                var C = ma();
                y = y === void 0 ? null : y;
                var O = C.memoizedState;
                return O !== null && y !== null && zm(y, O[1]) ? O[0] : (m = m(), C.memoizedState = [
                    m,
                    y
                ], m);
            }
            function Xm(m, y) {
                var C = On;
                On = C !== 0 && 4 > C ? C : 4, m(!0);
                var O = co.transition;
                co.transition = {};
                try {
                    m(!1), y();
                } finally{
                    On = C, co.transition = O;
                }
            }
            function mu() {
                return ma().memoizedState;
            }
            function Vw(m, y, C) {
                var O = xa(m);
                C = {
                    lane: O,
                    action: C,
                    hasEagerState: !1,
                    eagerState: null,
                    next: null
                }, Ww(m) ? Bv(y, C) : (Th(m, y, C), C = Yn(), m = as(m, O, C), m !== null && Ch(m, y, O));
            }
            function wC(m, y, C) {
                var O = xa(m), z = {
                    lane: O,
                    action: C,
                    hasEagerState: !1,
                    eagerState: null,
                    next: null
                };
                if (Ww(m)) Bv(y, z);
                else {
                    Th(m, y, z);
                    var Z = m.alternate;
                    if (m.lanes === 0 && (Z === null || Z.lanes === 0) && (Z = y.lastRenderedReducer, Z !== null)) try {
                        var xe = y.lastRenderedState, ke = Z(xe, C);
                        if (z.hasEagerState = !0, z.eagerState = ke, ms(ke, xe)) return;
                    } catch  {} finally{}
                    C = Yn(), m = as(m, O, C), m !== null && Ch(m, y, O);
                }
            }
            function Ww(m) {
                var y = m.alternate;
                return m === Br || y !== null && y === Br;
            }
            function Bv(m, y) {
                Ha = Um = !0;
                var C = m.pending;
                C === null ? y.next = y : (y.next = C.next, C.next = y), m.pending = y;
            }
            function Th(m, y, C) {
                ei !== null && m.mode & 1 && !(En & 2) ? (m = y.interleaved, m === null ? (C.next = C, Lo === null ? Lo = [
                    y
                ] : Lo.push(y)) : (C.next = m.next, m.next = C), y.interleaved = C) : (m = y.pending, m === null ? C.next = C : (C.next = m.next, m.next = C), y.pending = C);
            }
            function Ch(m, y, C) {
                if (C & 4194240) {
                    var O = y.lanes;
                    O &= m.pendingLanes, C |= O, y.lanes = C, Wa(m, C);
                }
            }
            var Vd = {
                readContext: ks,
                useCallback: ki,
                useContext: ki,
                useEffect: ki,
                useImperativeHandle: ki,
                useInsertionEffect: ki,
                useLayoutEffect: ki,
                useMemo: ki,
                useReducer: ki,
                useRef: ki,
                useState: ki,
                useDebugValue: ki,
                useDeferredValue: ki,
                useTransition: ki,
                useMutableSource: ki,
                useSyncExternalStore: ki,
                useId: ki,
                unstable_isNewReconciler: !1
            }, Uv = {
                readContext: ks,
                useCallback: function(m, y) {
                    return pa().memoizedState = [
                        m,
                        y === void 0 ? null : y
                    ], m;
                },
                useContext: ks,
                useEffect: qm,
                useImperativeHandle: function(m, y, C) {
                    return C = C != null ? C.concat([
                        m
                    ]) : null, xc(4194308, 4, Mh.bind(null, y, m), C);
                },
                useLayoutEffect: function(m, y) {
                    return xc(4194308, 4, m, y);
                },
                useInsertionEffect: function(m, y) {
                    return xc(4, 2, m, y);
                },
                useMemo: function(m, y) {
                    var C = pa();
                    return y = y === void 0 ? null : y, m = m(), C.memoizedState = [
                        m,
                        y
                    ], m;
                },
                useReducer: function(m, y, C) {
                    var O = pa();
                    return y = C !== void 0 ? C(y) : y, O.memoizedState = O.baseState = y, m = {
                        pending: null,
                        interleaved: null,
                        lanes: 0,
                        dispatch: null,
                        lastRenderedReducer: m,
                        lastRenderedState: y
                    }, O.queue = m, m = m.dispatch = Vw.bind(null, Br, m), [
                        O.memoizedState,
                        m
                    ];
                },
                useRef: function(m) {
                    var y = pa();
                    return m = {
                        current: m
                    }, y.memoizedState = m;
                },
                useState: Sh,
                useDebugValue: $m,
                useDeferredValue: function(m) {
                    var y = Sh(m), C = y[0], O = y[1];
                    return qm(function() {
                        var z = co.transition;
                        co.transition = {};
                        try {
                            O(m);
                        } finally{
                            co.transition = z;
                        }
                    }, [
                        m
                    ]), C;
                },
                useTransition: function() {
                    var m = Sh(!1), y = m[0];
                    return m = Xm.bind(null, m[1]), pa().memoizedState = m, [
                        y,
                        m
                    ];
                },
                useMutableSource: function() {},
                useSyncExternalStore: function(m, y, C) {
                    var O = Br, z = pa();
                    if (Ir) {
                        if (C === void 0) throw Error(o(407));
                        C = C();
                    } else {
                        if (C = y(), ei === null) throw Error(o(349));
                        hu & 30 || Fv(O, y, C);
                    }
                    z.memoizedState = C;
                    var Z = {
                        value: C,
                        getSnapshot: y
                    };
                    return z.queue = Z, qm(wl.bind(null, O, Z, m), [
                        m
                    ]), O.flags |= 2048, Eh(9, jv.bind(null, O, Z, C, y), void 0, null), C;
                },
                useId: function() {
                    var m = pa(), y = ei.identifierPrefix;
                    if (Ir) {
                        var C = xl, O = vl;
                        C = (O & ~(1 << 32 - zn(O) - 1)).toString(32) + C, y = ":" + y + "R" + C, C = pu++, 0 < C && (y += "H" + C.toString(32)), y += ":";
                    } else C = bh++, y = ":" + y + "r" + C.toString(32) + ":";
                    return m.memoizedState = y;
                },
                unstable_isNewReconciler: !1
            }, zv = {
                readContext: ks,
                useCallback: Gm,
                useContext: ks,
                useEffect: Bd,
                useImperativeHandle: Ud,
                useInsertionEffect: pr,
                useLayoutEffect: Hm,
                useMemo: zd,
                useReducer: wh,
                useRef: zw,
                useState: function() {
                    return wh($a);
                },
                useDebugValue: $m,
                useDeferredValue: function(m) {
                    var y = wh($a), C = y[0], O = y[1];
                    return Bd(function() {
                        var z = co.transition;
                        co.transition = {};
                        try {
                            O(m);
                        } finally{
                            co.transition = z;
                        }
                    }, [
                        m
                    ]), C;
                },
                useTransition: function() {
                    var m = wh($a)[0], y = ma().memoizedState;
                    return [
                        m,
                        y
                    ];
                },
                useMutableSource: Lv,
                useSyncExternalStore: Dv,
                useId: mu,
                unstable_isNewReconciler: !1
            }, Vv = {
                readContext: ks,
                useCallback: Gm,
                useContext: ks,
                useEffect: Bd,
                useImperativeHandle: Ud,
                useInsertionEffect: pr,
                useLayoutEffect: Hm,
                useMemo: zd,
                useReducer: _h,
                useRef: zw,
                useState: function() {
                    return _h($a);
                },
                useDebugValue: $m,
                useDeferredValue: function(m) {
                    var y = _h($a), C = y[0], O = y[1];
                    return Bd(function() {
                        var z = co.transition;
                        co.transition = {};
                        try {
                            O(m);
                        } finally{
                            co.transition = z;
                        }
                    }, [
                        m
                    ]), C;
                },
                useTransition: function() {
                    var m = _h($a)[0], y = ma().memoizedState;
                    return [
                        m,
                        y
                    ];
                },
                useMutableSource: Lv,
                useSyncExternalStore: Dv,
                useId: mu,
                unstable_isNewReconciler: !1
            };
            function Wv(m, y) {
                try {
                    var C = "", O = y;
                    do C += Mv(O), O = O.return;
                    while (O);
                    var z = C;
                } catch (Z) {
                    z = `
Error generating stack: ` + Z.message + `
` + Z.stack;
                }
                return {
                    value: m,
                    source: y,
                    stack: z
                };
            }
            function Km(m, y) {
                try {
                    console.error(y.value);
                } catch (C) {
                    setTimeout(function() {
                        throw C;
                    });
                }
            }
            var _C = typeof WeakMap == "function" ? WeakMap : Map;
            function qw(m, y, C) {
                C = yl(-1, C), C.tag = 3, C.payload = {
                    element: null
                };
                var O = y.value;
                return C.callback = function() {
                    Xd || (Xd = !0, Sr = O), Km(m, y);
                }, C;
            }
            function Ym(m, y, C) {
                C = yl(-1, C), C.tag = 3;
                var O = m.type.getDerivedStateFromError;
                if (typeof O == "function") {
                    var z = y.value;
                    C.payload = function() {
                        return O(z);
                    }, C.callback = function() {
                        Km(m, y);
                    };
                }
                var Z = m.stateNode;
                return Z !== null && typeof Z.componentDidCatch == "function" && (C.callback = function() {
                    Km(m, y), typeof O != "function" && (va === null ? va = new Set([
                        this
                    ]) : va.add(this));
                    var xe = y.stack;
                    this.componentDidCatch(y.value, {
                        componentStack: xe !== null ? xe : ""
                    });
                }), C;
            }
            function _l(m, y, C) {
                var O = m.pingCache;
                if (O === null) {
                    O = m.pingCache = new _C;
                    var z = new Set;
                    O.set(y, z);
                } else z = O.get(y), z === void 0 && (z = new Set, O.set(y, z));
                z.has(C) || (z.add(C), m = ax.bind(null, m, y, C), y.then(m, m));
            }
            function qv(m) {
                do {
                    var y;
                    if ((y = m.tag === 13) && (y = m.memoizedState, y = y !== null ? y.dehydrated !== null : !0), y) return m;
                    m = m.return;
                }while (m !== null);
                return null;
            }
            function gu(m, y, C, O, z) {
                return m.mode & 1 ? (m.flags |= 65536, m.lanes = z, m) : (m === y ? m.flags |= 65536 : (m.flags |= 128, C.flags |= 131072, C.flags &= -52805, C.tag === 1 && (C.alternate === null ? C.tag = 17 : (y = yl(-1, 1), y.tag = 2, pc(C, y))), C.lanes |= 1), m);
            }
            function bi(m) {
                m.flags |= 4;
            }
            function Wd(m, y) {
                if (m !== null && m.child === y.child) return !0;
                if (y.flags & 16) return !1;
                for(m = y.child; m !== null;){
                    if (m.flags & 12854 || m.subtreeFlags & 12854) return !1;
                    m = m.sibling;
                }
                return !0;
            }
            var uo, yu, Zm, Jm;
            if (Ve) uo = function(m, y) {
                for(var C = y.child; C !== null;){
                    if (C.tag === 5 || C.tag === 6) le(m, C.stateNode);
                    else if (C.tag !== 4 && C.child !== null) {
                        C.child.return = C, C = C.child;
                        continue;
                    }
                    if (C === y) break;
                    for(; C.sibling === null;){
                        if (C.return === null || C.return === y) return;
                        C = C.return;
                    }
                    C.sibling.return = C.return, C = C.sibling;
                }
            }, yu = function() {}, Zm = function(m, y, C, O, z) {
                if (m = m.memoizedProps, m !== O) {
                    var Z = y.stateNode, xe = ha(Os.current);
                    C = ie(Z, C, m, O, z, xe), (y.updateQueue = C) && bi(y);
                }
            }, Jm = function(m, y, C, O) {
                C !== O && bi(y);
            };
            else if (we) {
                uo = function(m, y, C, O) {
                    for(var z = y.child; z !== null;){
                        if (z.tag === 5) {
                            var Z = z.stateNode;
                            C && O && (Z = wt(Z, z.type, z.memoizedProps, z)), le(m, Z);
                        } else if (z.tag === 6) Z = z.stateNode, C && O && (Z = Nn(Z, z.memoizedProps, z)), le(m, Z);
                        else if (z.tag !== 4) {
                            if (z.tag === 22 && z.memoizedState !== null) Z = z.child, Z !== null && (Z.return = z), uo(m, z, !0, !0);
                            else if (z.child !== null) {
                                z.child.return = z, z = z.child;
                                continue;
                            }
                        }
                        if (z === y) break;
                        for(; z.sibling === null;){
                            if (z.return === null || z.return === y) return;
                            z = z.return;
                        }
                        z.sibling.return = z.return, z = z.sibling;
                    }
                };
                var bc = function(m, y, C, O) {
                    for(var z = y.child; z !== null;){
                        if (z.tag === 5) {
                            var Z = z.stateNode;
                            C && O && (Z = wt(Z, z.type, z.memoizedProps, z)), pt(m, Z);
                        } else if (z.tag === 6) Z = z.stateNode, C && O && (Z = Nn(Z, z.memoizedProps, z)), pt(m, Z);
                        else if (z.tag !== 4) {
                            if (z.tag === 22 && z.memoizedState !== null) Z = z.child, Z !== null && (Z.return = z), bc(m, z, !0, !0);
                            else if (z.child !== null) {
                                z.child.return = z, z = z.child;
                                continue;
                            }
                        }
                        if (z === y) break;
                        for(; z.sibling === null;){
                            if (z.return === null || z.return === y) return;
                            z = z.return;
                        }
                        z.sibling.return = z.return, z = z.sibling;
                    }
                };
                yu = function(m, y) {
                    var C = y.stateNode;
                    if (!Wd(m, y)) {
                        m = C.containerInfo;
                        var O = rt(m);
                        bc(O, y, !1, !1), C.pendingChildren = O, bi(y), Nt(m, O);
                    }
                }, Zm = function(m, y, C, O, z) {
                    var Z = m.stateNode, xe = m.memoizedProps;
                    if ((m = Wd(m, y)) && xe === O) y.stateNode = Z;
                    else {
                        var ke = y.stateNode, tt = ha(Os.current), vt = null;
                        xe !== O && (vt = ie(ke, C, xe, O, z, tt)), m && vt === null ? y.stateNode = Z : (Z = We(Z, vt, C, xe, O, y, m, ke), ue(Z, C, O, z, tt) && bi(y), y.stateNode = Z, m ? bi(y) : uo(Z, y, !1, !1));
                    }
                }, Jm = function(m, y, C, O) {
                    C !== O ? (m = ha(du.current), C = ha(Os.current), y.stateNode = ge(O, m, C, y), bi(y)) : y.stateNode = m.stateNode;
                };
            } else yu = function() {}, Zm = function() {}, Jm = function() {};
            function Sl(m, y) {
                if (!Ir) switch(m.tailMode){
                    case "hidden":
                        y = m.tail;
                        for(var C = null; y !== null;)y.alternate !== null && (C = y), y = y.sibling;
                        C === null ? m.tail = null : C.sibling = null;
                        break;
                    case "collapsed":
                        C = m.tail;
                        for(var O = null; C !== null;)C.alternate !== null && (O = C), C = C.sibling;
                        O === null ? y || m.tail === null ? m.tail = null : m.tail.sibling = null : O.sibling = null;
                }
            }
            function Qr(m) {
                var y = m.alternate !== null && m.alternate.child === m.child, C = 0, O = 0;
                if (y) for(var z = m.child; z !== null;)C |= z.lanes | z.childLanes, O |= z.subtreeFlags & 14680064, O |= z.flags & 14680064, z.return = m, z = z.sibling;
                else for(z = m.child; z !== null;)C |= z.lanes | z.childLanes, O |= z.subtreeFlags, O |= z.flags, z.return = m, z = z.sibling;
                return m.subtreeFlags |= O, m.childLanes = C, y;
            }
            function Qm(m, y, C) {
                var O = y.pendingProps;
                switch(Nv(y), y.tag){
                    case 2:
                    case 16:
                    case 15:
                    case 0:
                    case 11:
                    case 7:
                    case 8:
                    case 12:
                    case 9:
                    case 14:
                        return Qr(y), null;
                    case 1:
                        return Un(y.type) && Sn(), Qr(y), null;
                    case 3:
                        return O = y.stateNode, Fd(), yt(kn), yt(Pn), fu(), O.pendingContext && (O.context = O.pendingContext, O.pendingContext = null), (m === null || m.child === null) && (vh(y) ? bi(y) : m === null || m.memoizedState.isDehydrated && !(y.flags & 256) || (y.flags |= 1024, jo !== null && (Uh(jo), jo = null))), yu(m, y), Qr(y), null;
                    case 5:
                        Ov(y), C = ha(du.current);
                        var z = y.type;
                        if (m !== null && y.stateNode != null) Zm(m, y, z, O, C), m.ref !== y.ref && (y.flags |= 512, y.flags |= 2097152);
                        else {
                            if (!O) {
                                if (y.stateNode === null) throw Error(o(166));
                                return Qr(y), null;
                            }
                            if (m = ha(Os.current), vh(y)) {
                                if (!Me) throw Error(o(175));
                                m = tu(y.stateNode, y.type, y.memoizedProps, C, m, y, !Pd), y.updateQueue = m, m !== null && bi(y);
                            } else {
                                var Z = Y(z, O, C, m, y);
                                uo(Z, y, !1, !1), y.stateNode = Z, ue(Z, z, O, C, m) && bi(y);
                            }
                            y.ref !== null && (y.flags |= 512, y.flags |= 2097152);
                        }
                        return Qr(y), null;
                    case 6:
                        if (m && y.stateNode != null) Jm(m, y, m.memoizedProps, O);
                        else {
                            if (typeof O != "string" && y.stateNode === null) throw Error(o(166));
                            if (m = ha(du.current), C = ha(Os.current), vh(y)) {
                                if (!Me) throw Error(o(176));
                                if (m = y.stateNode, O = y.memoizedProps, (C = so(m, O, y, !Pd)) && (z = ys, z !== null)) switch(Z = (z.mode & 1) !== 0, z.tag){
                                    case 3:
                                        Oe(z.stateNode.containerInfo, m, O, Z);
                                        break;
                                    case 5:
                                        Ge(z.type, z.memoizedProps, z.stateNode, m, O, Z);
                                }
                                C && bi(y);
                            } else y.stateNode = ge(O, m, C, y);
                        }
                        return Qr(y), null;
                    case 13:
                        if (yt(jr), O = y.memoizedState, Ir && $i !== null && y.mode & 1 && !(y.flags & 128)) {
                            for(m = $i; m;)m = io(m);
                            return kd(), y.flags |= 98560, y;
                        }
                        if (O !== null && O.dehydrated !== null) {
                            if (O = vh(y), m === null) {
                                if (!O) throw Error(o(318));
                                if (!Me) throw Error(o(344));
                                if (m = y.memoizedState, m = m !== null ? m.dehydrated : null, !m) throw Error(o(317));
                                _d(m, y);
                            } else kd(), !(y.flags & 128) && (y.memoizedState = null), y.flags |= 4;
                            return Qr(y), null;
                        }
                        return jo !== null && (Uh(jo), jo = null), y.flags & 128 ? (y.lanes = C, y) : (O = O !== null, C = !1, m === null ? vh(y) : C = m.memoizedState !== null, O && !C && (y.child.flags |= 8192, y.mode & 1 && (m === null || jr.current & 1 ? qr === 0 && (qr = 3) : og())), y.updateQueue !== null && (y.flags |= 4), Qr(y), null);
                    case 4:
                        return Fd(), yu(m, y), m === null && Ye(y.stateNode.containerInfo), Qr(y), null;
                    case 10:
                        return yh(y.type._context), Qr(y), null;
                    case 17:
                        return Un(y.type) && Sn(), Qr(y), null;
                    case 19:
                        if (yt(jr), z = y.memoizedState, z === null) return Qr(y), null;
                        if (O = (y.flags & 128) !== 0, Z = z.rendering, Z === null) if (O) Sl(z, !1);
                        else {
                            if (qr !== 0 || m !== null && m.flags & 128) for(m = y.child; m !== null;){
                                if (Z = Bm(m), Z !== null) {
                                    for(y.flags |= 128, Sl(z, !1), m = Z.updateQueue, m !== null && (y.updateQueue = m, y.flags |= 4), y.subtreeFlags = 0, m = C, O = y.child; O !== null;)C = O, z = m, C.flags &= 14680066, Z = C.alternate, Z === null ? (C.childLanes = 0, C.lanes = z, C.child = null, C.subtreeFlags = 0, C.memoizedProps = null, C.memoizedState = null, C.updateQueue = null, C.dependencies = null, C.stateNode = null) : (C.childLanes = Z.childLanes, C.lanes = Z.lanes, C.child = Z.child, C.subtreeFlags = 0, C.deletions = null, C.memoizedProps = Z.memoizedProps, C.memoizedState = Z.memoizedState, C.updateQueue = Z.updateQueue, C.type = Z.type, z = Z.dependencies, C.dependencies = z === null ? null : {
                                        lanes: z.lanes,
                                        firstContext: z.firstContext
                                    }), O = O.sibling;
                                    return Wt(jr, jr.current & 1 | 2), y.child;
                                }
                                m = m.sibling;
                            }
                            z.tail !== null && xi() > Sc && (y.flags |= 128, O = !0, Sl(z, !1), y.lanes = 4194304);
                        }
                        else {
                            if (!O) if (m = Bm(Z), m !== null) {
                                if (y.flags |= 128, O = !0, m = m.updateQueue, m !== null && (y.updateQueue = m, y.flags |= 4), Sl(z, !0), z.tail === null && z.tailMode === "hidden" && !Z.alternate && !Ir) return Qr(y), null;
                            } else 2 * xi() - z.renderingStartTime > Sc && C !== 1073741824 && (y.flags |= 128, O = !0, Sl(z, !1), y.lanes = 4194304);
                            z.isBackwards ? (Z.sibling = y.child, y.child = Z) : (m = z.last, m !== null ? m.sibling = Z : y.child = Z, z.last = Z);
                        }
                        return z.tail !== null ? (y = z.tail, z.rendering = y, z.tail = y.sibling, z.renderingStartTime = xi(), y.sibling = null, m = jr.current, Wt(jr, O ? m & 1 | 2 : m & 1), y) : (Qr(y), null);
                    case 22:
                    case 23:
                        return zh(), O = y.memoizedState !== null, m !== null && m.memoizedState !== null !== O && (y.flags |= 8192), O && y.mode & 1 ? os & 1073741824 && (Qr(y), Ve && y.subtreeFlags & 6 && (y.flags |= 8192)) : Qr(y), null;
                    case 24:
                        return null;
                    case 25:
                        return null;
                }
                throw Error(o(156, y.tag));
            }
            var Hv = a.ReactCurrentOwner, Oi = !1;
            function Wr(m, y, C, O) {
                y.child = m === null ? Bw(y, null, C, O) : bl(y, m.child, C, O);
            }
            function mr(m, y, C, O, z) {
                C = C.render;
                var Z = y.ref;
                return Rd(y, z), O = jd(m, y, C, O, Z, z), C = vc(), m !== null && !Oi ? (y.updateQueue = m.updateQueue, y.flags &= -2053, m.lanes &= ~z, Ls(m, y, z)) : (Ir && C && Av(y), y.flags |= 1, Wr(m, y, O, z), y.child);
            }
            function fr(m, y, C, O, z) {
                if (m === null) {
                    var Z = C.type;
                    return typeof Z == "function" && !lg(Z) && Z.defaultProps === void 0 && C.compare === null && C.defaultProps === void 0 ? (y.tag = 15, y.type = Z, El(m, y, Z, O, z)) : (m = cg(C.type, null, O, y, y.mode, z), m.ref = y.ref, m.return = y, y.child = m);
                }
                if (Z = m.child, !(m.lanes & z)) {
                    var xe = Z.memoizedProps;
                    if (C = C.compare, C = C !== null ? C : fa, C(xe, O) && m.ref === y.ref) return Ls(m, y, z);
                }
                return y.flags |= 1, m = kl(Z, O), m.ref = y.ref, m.return = y, y.child = m;
            }
            function El(m, y, C, O, z) {
                if (m !== null && fa(m.memoizedProps, O) && m.ref === y.ref) if (Oi = !1, (m.lanes & z) !== 0) m.flags & 131072 && (Oi = !0);
                else return y.lanes = m.lanes, Ls(m, y, z);
                return Ml(m, y, C, O, z);
            }
            function Gi(m, y, C) {
                var O = y.pendingProps, z = O.children, Z = m !== null ? m.memoizedState : null;
                if (O.mode === "hidden") if (!(y.mode & 1)) y.memoizedState = {
                    baseLanes: 0,
                    cachePool: null
                }, Wt(Tu, os), os |= C;
                else if (C & 1073741824) y.memoizedState = {
                    baseLanes: 0,
                    cachePool: null
                }, O = Z !== null ? Z.baseLanes : C, Wt(Tu, os), os |= O;
                else return m = Z !== null ? Z.baseLanes | C : C, y.lanes = y.childLanes = 1073741824, y.memoizedState = {
                    baseLanes: m,
                    cachePool: null
                }, y.updateQueue = null, Wt(Tu, os), os |= m, null;
                else Z !== null ? (O = Z.baseLanes | C, y.memoizedState = null) : O = C, Wt(Tu, os), os |= O;
                return Wr(m, y, z, C), y.child;
            }
            function vs(m, y) {
                var C = y.ref;
                (m === null && C !== null || m !== null && m.ref !== C) && (y.flags |= 512, y.flags |= 2097152);
            }
            function Ml(m, y, C, O, z) {
                var Z = Un(C) ? bn : Pn.current;
                return Z = zt(y, Z), Rd(y, z), C = jd(m, y, C, O, Z, z), O = vc(), m !== null && !Oi ? (y.updateQueue = m.updateQueue, y.flags &= -2053, m.lanes &= ~z, Ls(m, y, z)) : (Ir && O && Av(y), y.flags |= 1, Wr(m, y, C, z), y.child);
            }
            function vu(m, y, C, O, z) {
                if (Un(C)) {
                    var Z = !0;
                    ii(y);
                } else Z = !1;
                if (Rd(y, z), y.stateNode === null) m !== null && (m.alternate = null, y.alternate = null, y.flags |= 2), Ow(y, C, O), Rv(y, C, O, z), O = !0;
                else if (m === null) {
                    var xe = y.stateNode, ke = y.memoizedProps;
                    xe.props = ke;
                    var tt = xe.context, vt = C.contextType;
                    typeof vt == "object" && vt !== null ? vt = ks(vt) : (vt = Un(C) ? bn : Pn.current, vt = zt(y, vt));
                    var Bt = C.getDerivedStateFromProps, mn = typeof Bt == "function" || typeof xe.getSnapshotBeforeUpdate == "function";
                    mn || typeof xe.UNSAFE_componentWillReceiveProps != "function" && typeof xe.componentWillReceiveProps != "function" || (ke !== O || tt !== vt) && Lw(y, xe, O, vt), Do = !1;
                    var en = y.memoizedState;
                    xe.state = en, Pm(y, O, xe, z), tt = y.memoizedState, ke !== O || en !== tt || kn.current || Do ? (typeof Bt == "function" && (Cv(y, C, Bt, O), tt = y.memoizedState), (ke = Do || Iv(y, C, ke, O, en, tt, vt)) ? (mn || typeof xe.UNSAFE_componentWillMount != "function" && typeof xe.componentWillMount != "function" || (typeof xe.componentWillMount == "function" && xe.componentWillMount(), typeof xe.UNSAFE_componentWillMount == "function" && xe.UNSAFE_componentWillMount()), typeof xe.componentDidMount == "function" && (y.flags |= 4194308)) : (typeof xe.componentDidMount == "function" && (y.flags |= 4194308), y.memoizedProps = O, y.memoizedState = tt), xe.props = O, xe.state = tt, xe.context = vt, O = ke) : (typeof xe.componentDidMount == "function" && (y.flags |= 4194308), O = !1);
                } else {
                    xe = y.stateNode, Tv(m, y), ke = y.memoizedProps, vt = y.type === y.elementType ? ke : Ps(y.type, ke), xe.props = vt, mn = y.pendingProps, en = xe.context, tt = C.contextType, typeof tt == "object" && tt !== null ? tt = ks(tt) : (tt = Un(C) ? bn : Pn.current, tt = zt(y, tt));
                    var Cn = C.getDerivedStateFromProps;
                    (Bt = typeof Cn == "function" || typeof xe.getSnapshotBeforeUpdate == "function") || typeof xe.UNSAFE_componentWillReceiveProps != "function" && typeof xe.componentWillReceiveProps != "function" || (ke !== mn || en !== tt) && Lw(y, xe, O, tt), Do = !1, en = y.memoizedState, xe.state = en, Pm(y, O, xe, z);
                    var It = y.memoizedState;
                    ke !== mn || en !== It || kn.current || Do ? (typeof Cn == "function" && (Cv(y, C, Cn, O), It = y.memoizedState), (vt = Do || Iv(y, C, vt, O, en, It, tt) || !1) ? (Bt || typeof xe.UNSAFE_componentWillUpdate != "function" && typeof xe.componentWillUpdate != "function" || (typeof xe.componentWillUpdate == "function" && xe.componentWillUpdate(O, It, tt), typeof xe.UNSAFE_componentWillUpdate == "function" && xe.UNSAFE_componentWillUpdate(O, It, tt)), typeof xe.componentDidUpdate == "function" && (y.flags |= 4), typeof xe.getSnapshotBeforeUpdate == "function" && (y.flags |= 1024)) : (typeof xe.componentDidUpdate != "function" || ke === m.memoizedProps && en === m.memoizedState || (y.flags |= 4), typeof xe.getSnapshotBeforeUpdate != "function" || ke === m.memoizedProps && en === m.memoizedState || (y.flags |= 1024), y.memoizedProps = O, y.memoizedState = It), xe.props = O, xe.state = It, xe.context = tt, O = vt) : (typeof xe.componentDidUpdate != "function" || ke === m.memoizedProps && en === m.memoizedState || (y.flags |= 4), typeof xe.getSnapshotBeforeUpdate != "function" || ke === m.memoizedProps && en === m.memoizedState || (y.flags |= 1024), O = !1);
                }
                return ss(m, y, C, O, Z, z);
            }
            function ss(m, y, C, O, z, Z) {
                vs(m, y);
                var xe = (y.flags & 128) !== 0;
                if (!O && !xe) return z && oo(y, C, !1), Ls(m, y, Z);
                O = y.stateNode, Hv.current = y;
                var ke = xe && typeof C.getDerivedStateFromError != "function" ? null : O.render();
                return y.flags |= 1, m !== null && xe ? (y.child = bl(y, m.child, null, Z), y.child = bl(y, null, ke, Z)) : Wr(m, y, ke, Z), y.memoizedState = O.state, z && oo(y, C, !0), y.child;
            }
            function Ih(m) {
                var y = m.stateNode;
                y.pendingContext ? Zr(m, y.pendingContext, y.pendingContext !== y.context) : y.context && Zr(m, y.context, !1), jm(m, y.containerInfo);
            }
            function $v(m, y, C, O, z) {
                return kd(), Fm(z), y.flags |= 256, Wr(m, y, C, O), y.child;
            }
            var Rh = {
                dehydrated: null,
                treeContext: null,
                retryLane: 0
            };
            function xu(m) {
                return {
                    baseLanes: m,
                    cachePool: null
                };
            }
            function Gv(m, y, C) {
                var O = y.pendingProps, z = jr.current, Z = !1, xe = (y.flags & 128) !== 0, ke;
                if ((ke = xe) || (ke = m !== null && m.memoizedState === null ? !1 : (z & 2) !== 0), ke ? (Z = !0, y.flags &= -129) : (m === null || m.memoizedState !== null) && (z |= 1), Wt(jr, z & 1), m === null) return gc(y), m = y.memoizedState, m !== null && (m = m.dehydrated, m !== null) ? (y.mode & 1 ? ro(m) ? y.lanes = 8 : y.lanes = 1073741824 : y.lanes = 1, null) : (z = O.children, m = O.fallback, Z ? (O = y.mode, Z = y.child, z = {
                    mode: "hidden",
                    children: z
                }, !(O & 1) && Z !== null ? (Z.childLanes = 0, Z.pendingProps = z) : Z = qh(z, O, 0, null), m = Nu(m, O, C, null), Z.return = y, m.return = y, Z.sibling = m, y.child = Z, y.child.memoizedState = xu(C), y.memoizedState = Rh, m) : ga(y, z));
                if (z = m.memoizedState, z !== null) {
                    if (ke = z.dehydrated, ke !== null) {
                        if (xe) return y.flags & 256 ? (y.flags &= -257, Nh(m, y, C, Error(o(422)))) : y.memoizedState !== null ? (y.child = m.child, y.flags |= 128, null) : (Z = O.fallback, z = y.mode, O = qh({
                            mode: "visible",
                            children: O.children
                        }, z, 0, null), Z = Nu(Z, z, C, null), Z.flags |= 2, O.return = y, Z.return = y, O.sibling = Z, y.child = O, y.mode & 1 && bl(y, m.child, null, C), y.child.memoizedState = xu(C), y.memoizedState = Rh, Z);
                        if (!(y.mode & 1)) y = Nh(m, y, C, null);
                        else if (ro(ke)) y = Nh(m, y, C, Error(o(419)));
                        else if (O = (C & m.childLanes) !== 0, Oi || O) {
                            if (O = ei, O !== null) {
                                switch(C & -C){
                                    case 4:
                                        Z = 2;
                                        break;
                                    case 16:
                                        Z = 8;
                                        break;
                                    case 64:
                                    case 128:
                                    case 256:
                                    case 512:
                                    case 1024:
                                    case 2048:
                                    case 4096:
                                    case 8192:
                                    case 16384:
                                    case 32768:
                                    case 65536:
                                    case 131072:
                                    case 262144:
                                    case 524288:
                                    case 1048576:
                                    case 2097152:
                                    case 4194304:
                                    case 8388608:
                                    case 16777216:
                                    case 33554432:
                                    case 67108864:
                                        Z = 32;
                                        break;
                                    case 536870912:
                                        Z = 268435456;
                                        break;
                                    default:
                                        Z = 0;
                                }
                                O = Z & (O.suspendedLanes | C) ? 0 : Z, O !== 0 && O !== z.retryLane && (z.retryLane = O, as(m, O, -1));
                            }
                            og(), y = Nh(m, y, C, Error(o(421)));
                        } else Po(ke) ? (y.flags |= 128, y.child = m.child, y = Kw.bind(null, m), pl(ke, y), y = null) : (C = z.treeContext, Me && ($i = fc(ke), ys = y, Ir = !0, jo = null, Pd = !1, C !== null && (Fo[ao++] = vl, Fo[ao++] = xl, Fo[ao++] = lu, vl = C.id, xl = C.overflow, lu = y)), y = ga(y, y.pendingProps.children), y.flags |= 4096);
                        return y;
                    }
                    return Z ? (O = eg(m, y, O.children, O.fallback, C), Z = y.child, z = m.child.memoizedState, Z.memoizedState = z === null ? xu(C) : {
                        baseLanes: z.baseLanes | C,
                        cachePool: null
                    }, Z.childLanes = m.childLanes & ~C, y.memoizedState = Rh, O) : (C = Ah(m, y, O.children, C), y.memoizedState = null, C);
                }
                return Z ? (O = eg(m, y, O.children, O.fallback, C), Z = y.child, z = m.child.memoizedState, Z.memoizedState = z === null ? xu(C) : {
                    baseLanes: z.baseLanes | C,
                    cachePool: null
                }, Z.childLanes = m.childLanes & ~C, y.memoizedState = Rh, O) : (C = Ah(m, y, O.children, C), y.memoizedState = null, C);
            }
            function ga(m, y) {
                return y = qh({
                    mode: "visible",
                    children: y
                }, m.mode, 0, null), y.return = m, m.child = y;
            }
            function Ah(m, y, C, O) {
                var z = m.child;
                return m = z.sibling, C = kl(z, {
                    mode: "visible",
                    children: C
                }), !(y.mode & 1) && (C.lanes = O), C.return = y, C.sibling = null, m !== null && (O = y.deletions, O === null ? (y.deletions = [
                    m
                ], y.flags |= 16) : O.push(m)), y.child = C;
            }
            function eg(m, y, C, O, z) {
                var Z = y.mode;
                m = m.child;
                var xe = m.sibling, ke = {
                    mode: "hidden",
                    children: C
                };
                return !(Z & 1) && y.child !== m ? (C = y.child, C.childLanes = 0, C.pendingProps = ke, y.deletions = null) : (C = kl(m, ke), C.subtreeFlags = m.subtreeFlags & 14680064), xe !== null ? O = kl(xe, O) : (O = Nu(O, Z, z, null), O.flags |= 2), O.return = y, C.return = y, C.sibling = O, y.child = C, O;
            }
            function Nh(m, y, C, O) {
                return O !== null && Fm(O), bl(y, m.child, null, C), m = ga(y, y.pendingProps.children), m.flags |= 2, y.memoizedState = null, m;
            }
            function Hw(m, y, C) {
                m.lanes |= y;
                var O = m.alternate;
                O !== null && (O.lanes |= y), au(m.return, y, C);
            }
            function Ga(m, y, C, O, z) {
                var Z = m.memoizedState;
                Z === null ? m.memoizedState = {
                    isBackwards: y,
                    rendering: null,
                    renderingStartTime: 0,
                    last: O,
                    tail: C,
                    tailMode: z
                } : (Z.isBackwards = y, Z.rendering = null, Z.renderingStartTime = 0, Z.last = O, Z.tail = C, Z.tailMode = z);
            }
            function bu(m, y, C) {
                var O = y.pendingProps, z = O.revealOrder, Z = O.tail;
                if (Wr(m, y, O.children, C), O = jr.current, O & 2) O = O & 1 | 2, y.flags |= 128;
                else {
                    if (m !== null && m.flags & 128) e: for(m = y.child; m !== null;){
                        if (m.tag === 13) m.memoizedState !== null && Hw(m, C, y);
                        else if (m.tag === 19) Hw(m, C, y);
                        else if (m.child !== null) {
                            m.child.return = m, m = m.child;
                            continue;
                        }
                        if (m === y) break e;
                        for(; m.sibling === null;){
                            if (m.return === null || m.return === y) break e;
                            m = m.return;
                        }
                        m.sibling.return = m.return, m = m.sibling;
                    }
                    O &= 1;
                }
                if (Wt(jr, O), !(y.mode & 1)) y.memoizedState = null;
                else switch(z){
                    case "forwards":
                        for(C = y.child, z = null; C !== null;)m = C.alternate, m !== null && Bm(m) === null && (z = C), C = C.sibling;
                        C = z, C === null ? (z = y.child, y.child = null) : (z = C.sibling, C.sibling = null), Ga(y, !1, z, C, Z);
                        break;
                    case "backwards":
                        for(C = null, z = y.child, y.child = null; z !== null;){
                            if (m = z.alternate, m !== null && Bm(m) === null) {
                                y.child = z;
                                break;
                            }
                            m = z.sibling, z.sibling = C, C = z, z = m;
                        }
                        Ga(y, !0, C, null, Z);
                        break;
                    case "together":
                        Ga(y, !1, null, null, void 0);
                        break;
                    default:
                        y.memoizedState = null;
                }
                return y.child;
            }
            function Ls(m, y, C) {
                if (m !== null && (y.dependencies = m.dependencies), Xa |= y.lanes, !(C & y.childLanes)) return null;
                if (m !== null && y.child !== m.child) throw Error(o(153));
                if (y.child !== null) {
                    for(m = y.child, C = kl(m, m.pendingProps), y.child = C, C.return = y; m.sibling !== null;)m = m.sibling, C = C.sibling = kl(m, m.pendingProps), C.return = y;
                    C.sibling = null;
                }
                return y.child;
            }
            function tg(m, y, C) {
                switch(y.tag){
                    case 3:
                        Ih(y), kd();
                        break;
                    case 5:
                        Uw(y);
                        break;
                    case 1:
                        Un(y.type) && ii(y);
                        break;
                    case 4:
                        jm(y, y.stateNode.containerInfo);
                        break;
                    case 10:
                        ou(y, y.type._context, y.memoizedProps.value);
                        break;
                    case 13:
                        var O = y.memoizedState;
                        if (O !== null) return O.dehydrated !== null ? (Wt(jr, jr.current & 1), y.flags |= 128, null) : C & y.child.childLanes ? Gv(m, y, C) : (Wt(jr, jr.current & 1), m = Ls(m, y, C), m !== null ? m.sibling : null);
                        Wt(jr, jr.current & 1);
                        break;
                    case 19:
                        if (O = (C & y.childLanes) !== 0, m.flags & 128) {
                            if (O) return bu(m, y, C);
                            y.flags |= 128;
                        }
                        var z = y.memoizedState;
                        if (z !== null && (z.rendering = null, z.tail = null, z.lastEffect = null), Wt(jr, jr.current), O) break;
                        return null;
                    case 22:
                    case 23:
                        return y.lanes = 0, Gi(m, y, C);
                }
                return Ls(m, y, C);
            }
            function ng(m, y) {
                switch(Nv(y), y.tag){
                    case 1:
                        return Un(y.type) && Sn(), m = y.flags, m & 65536 ? (y.flags = m & -65537 | 128, y) : null;
                    case 3:
                        return Fd(), yt(kn), yt(Pn), fu(), m = y.flags, m & 65536 && !(m & 128) ? (y.flags = m & -65537 | 128, y) : null;
                    case 5:
                        return Ov(y), null;
                    case 13:
                        if (yt(jr), m = y.memoizedState, m !== null && m.dehydrated !== null) {
                            if (y.alternate === null) throw Error(o(340));
                            kd();
                        }
                        return m = y.flags, m & 65536 ? (y.flags = m & -65537 | 128, y) : null;
                    case 19:
                        return yt(jr), null;
                    case 4:
                        return Fd(), null;
                    case 10:
                        return yh(y.type._context), null;
                    case 22:
                    case 23:
                        return zh(), null;
                    case 24:
                        return null;
                    default:
                        return null;
                }
            }
            var xs = !1, Li = !1, wu = typeof WeakSet == "function" ? WeakSet : Set, bt = null;
            function Bo(m, y) {
                var C = m.ref;
                if (C !== null) if (typeof C == "function") try {
                    C(null);
                } catch (O) {
                    ws(m, y, O);
                }
                else C.current = null;
            }
            function Tl(m, y, C) {
                try {
                    C();
                } catch (O) {
                    ws(m, y, O);
                }
            }
            var Xv = !1;
            function Kv(m, y) {
                for(J(m.containerInfo), bt = y; bt !== null;)if (m = bt, y = m.child, (m.subtreeFlags & 1028) !== 0 && y !== null) y.return = m, bt = y;
                else for(; bt !== null;){
                    m = bt;
                    try {
                        var C = m.alternate;
                        if (m.flags & 1024) switch(m.tag){
                            case 0:
                            case 11:
                            case 15:
                                break;
                            case 1:
                                if (C !== null) {
                                    var O = C.memoizedProps, z = C.memoizedState, Z = m.stateNode, xe = Z.getSnapshotBeforeUpdate(m.elementType === m.type ? O : Ps(m.type, O), z);
                                    Z.__reactInternalSnapshotBeforeUpdate = xe;
                                }
                                break;
                            case 3:
                                Ve && Ue(m.stateNode.containerInfo);
                                break;
                            case 5:
                            case 6:
                            case 4:
                            case 17:
                                break;
                            default:
                                throw Error(o(163));
                        }
                    } catch (ke) {
                        ws(m, m.return, ke);
                    }
                    if (y = m.sibling, y !== null) {
                        y.return = m.return, bt = y;
                        break;
                    }
                    bt = m.return;
                }
                return C = Xv, Xv = !1, C;
            }
            function Cl(m, y, C) {
                var O = y.updateQueue;
                if (O = O !== null ? O.lastEffect : null, O !== null) {
                    var z = O = O.next;
                    do {
                        if ((z.tag & m) === m) {
                            var Z = z.destroy;
                            z.destroy = void 0, Z !== void 0 && Tl(y, C, Z);
                        }
                        z = z.next;
                    }while (z !== O);
                }
            }
            function Xi(m, y) {
                if (y = y.updateQueue, y = y !== null ? y.lastEffect : null, y !== null) {
                    var C = y = y.next;
                    do {
                        if ((C.tag & m) === m) {
                            var O = C.create;
                            C.destroy = O();
                        }
                        C = C.next;
                    }while (C !== y);
                }
            }
            function bs(m) {
                var y = m.ref;
                if (y !== null) {
                    var C = m.stateNode;
                    switch(m.tag){
                        case 5:
                            m = q(C);
                            break;
                        default:
                            m = C;
                    }
                    typeof y == "function" ? y(m) : y.current = m;
                }
            }
            function _r(m, y, C) {
                if (qa && typeof qa.onCommitFiberUnmount == "function") try {
                    qa.onCommitFiberUnmount(hh, y);
                } catch  {}
                switch(y.tag){
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                        if (m = y.updateQueue, m !== null && (m = m.lastEffect, m !== null)) {
                            var O = m = m.next;
                            do {
                                var z = O, Z = z.destroy;
                                z = z.tag, Z !== void 0 && (z & 2 || z & 4) && Tl(y, C, Z), O = O.next;
                            }while (O !== m);
                        }
                        break;
                    case 1:
                        if (Bo(y, C), m = y.stateNode, typeof m.componentWillUnmount == "function") try {
                            m.props = y.memoizedProps, m.state = y.memoizedState, m.componentWillUnmount();
                        } catch (xe) {
                            ws(y, C, xe);
                        }
                        break;
                    case 5:
                        Bo(y, C);
                        break;
                    case 4:
                        Ve ? Jv(m, y, C) : we && we && (y = y.stateNode.containerInfo, C = rt(y), Zt(y, C));
                }
            }
            function Uo(m, y, C) {
                for(var O = y;;)if (_r(m, O, C), O.child === null || Ve && O.tag === 4) {
                    if (O === y) break;
                    for(; O.sibling === null;){
                        if (O.return === null || O.return === y) return;
                        O = O.return;
                    }
                    O.sibling.return = O.return, O = O.sibling;
                } else O.child.return = O, O = O.child;
            }
            function Yv(m) {
                var y = m.alternate;
                y !== null && (m.alternate = null, Yv(y)), m.child = null, m.deletions = null, m.sibling = null, m.tag === 5 && (y = m.stateNode, y !== null && it(y)), m.stateNode = null, m.return = null, m.dependencies = null, m.memoizedProps = null, m.memoizedState = null, m.pendingProps = null, m.stateNode = null, m.updateQueue = null;
            }
            function Zv(m) {
                return m.tag === 5 || m.tag === 3 || m.tag === 4;
            }
            function rg(m) {
                e: for(;;){
                    for(; m.sibling === null;){
                        if (m.return === null || Zv(m.return)) return null;
                        m = m.return;
                    }
                    for(m.sibling.return = m.return, m = m.sibling; m.tag !== 5 && m.tag !== 6 && m.tag !== 18;){
                        if (m.flags & 2 || m.child === null || m.tag === 4) continue e;
                        m.child.return = m, m = m.child;
                    }
                    if (!(m.flags & 2)) return m.stateNode;
                }
            }
            function ig(m) {
                if (Ve) {
                    e: {
                        for(var y = m.return; y !== null;){
                            if (Zv(y)) break e;
                            y = y.return;
                        }
                        throw Error(o(160));
                    }
                    var C = y;
                    switch(C.tag){
                        case 5:
                            y = C.stateNode, C.flags & 32 && ($e(y), C.flags &= -33), C = rg(m), qd(m, C, y);
                            break;
                        case 3:
                        case 4:
                            y = C.stateNode.containerInfo, C = rg(m), sg(m, C, y);
                            break;
                        default:
                            throw Error(o(161));
                    }
                }
            }
            function sg(m, y, C) {
                var O = m.tag;
                if (O === 5 || O === 6) m = m.stateNode, y ? ct(C, m, y) : at(C, m);
                else if (O !== 4 && (m = m.child, m !== null)) for(sg(m, y, C), m = m.sibling; m !== null;)sg(m, y, C), m = m.sibling;
            }
            function qd(m, y, C) {
                var O = m.tag;
                if (O === 5 || O === 6) m = m.stateNode, y ? nt(C, m, y) : Ze(C, m);
                else if (O !== 4 && (m = m.child, m !== null)) for(qd(m, y, C), m = m.sibling; m !== null;)qd(m, y, C), m = m.sibling;
            }
            function Jv(m, y, C) {
                for(var O = y, z = !1, Z, xe;;){
                    if (!z) {
                        z = O.return;
                        e: for(;;){
                            if (z === null) throw Error(o(160));
                            switch(Z = z.stateNode, z.tag){
                                case 5:
                                    xe = !1;
                                    break e;
                                case 3:
                                    Z = Z.containerInfo, xe = !0;
                                    break e;
                                case 4:
                                    Z = Z.containerInfo, xe = !0;
                                    break e;
                            }
                            z = z.return;
                        }
                        z = !0;
                    }
                    if (O.tag === 5 || O.tag === 6) Uo(m, O, C), xe ? _e(Z, O.stateNode) : st(Z, O.stateNode);
                    else if (O.tag === 18) xe ? Cd(Z, O.stateNode) : Td(Z, O.stateNode);
                    else if (O.tag === 4) {
                        if (O.child !== null) {
                            Z = O.stateNode.containerInfo, xe = !0, O.child.return = O, O = O.child;
                            continue;
                        }
                    } else if (_r(m, O, C), O.child !== null) {
                        O.child.return = O, O = O.child;
                        continue;
                    }
                    if (O === y) break;
                    for(; O.sibling === null;){
                        if (O.return === null || O.return === y) return;
                        O = O.return, O.tag === 4 && (z = !1);
                    }
                    O.sibling.return = O.return, O = O.sibling;
                }
            }
            function wc(m, y) {
                if (Ve) {
                    switch(y.tag){
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                            Cl(3, y, y.return), Xi(3, y), Cl(5, y, y.return);
                            return;
                        case 1:
                            return;
                        case 5:
                            var C = y.stateNode;
                            if (C != null) {
                                var O = y.memoizedProps;
                                m = m !== null ? m.memoizedProps : O;
                                var z = y.type, Z = y.updateQueue;
                                y.updateQueue = null, Z !== null && Fe(C, Z, z, m, O, y);
                            }
                            return;
                        case 6:
                            if (y.stateNode === null) throw Error(o(162));
                            C = y.memoizedProps, Je(y.stateNode, m !== null ? m.memoizedProps : C, C);
                            return;
                        case 3:
                            Me && m !== null && m.memoizedState.isDehydrated && Ed(y.stateNode.containerInfo);
                            return;
                        case 12:
                            return;
                        case 13:
                            Hd(y);
                            return;
                        case 19:
                            Hd(y);
                            return;
                        case 17:
                            return;
                    }
                    throw Error(o(163));
                }
                switch(y.tag){
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                        Cl(3, y, y.return), Xi(3, y), Cl(5, y, y.return);
                        return;
                    case 12:
                        return;
                    case 13:
                        Hd(y);
                        return;
                    case 19:
                        Hd(y);
                        return;
                    case 3:
                        Me && m !== null && m.memoizedState.isDehydrated && Ed(y.stateNode.containerInfo);
                        break;
                    case 22:
                    case 23:
                        return;
                }
                e: if (we) {
                    switch(y.tag){
                        case 1:
                        case 5:
                        case 6:
                            break e;
                        case 3:
                        case 4:
                            y = y.stateNode, Zt(y.containerInfo, y.pendingChildren);
                            break e;
                    }
                    throw Error(o(163));
                }
            }
            function Hd(m) {
                var y = m.updateQueue;
                if (y !== null) {
                    m.updateQueue = null;
                    var C = m.stateNode;
                    C === null && (C = m.stateNode = new wu), y.forEach(function(O) {
                        var z = Yw.bind(null, m, O);
                        C.has(O) || (C.add(O), O.then(z, z));
                    });
                }
            }
            function SC(m, y) {
                for(bt = y; bt !== null;){
                    y = bt;
                    var C = y.deletions;
                    if (C !== null) for(var O = 0; O < C.length; O++){
                        var z = C[O];
                        try {
                            var Z = m;
                            Ve ? Jv(Z, z, y) : Uo(Z, z, y);
                            var xe = z.alternate;
                            xe !== null && (xe.return = null), z.return = null;
                        } catch ($t) {
                            ws(z, y, $t);
                        }
                    }
                    if (C = y.child, y.subtreeFlags & 12854 && C !== null) C.return = y, bt = C;
                    else for(; bt !== null;){
                        y = bt;
                        try {
                            var ke = y.flags;
                            if (ke & 32 && Ve && $e(y.stateNode), ke & 512) {
                                var tt = y.alternate;
                                if (tt !== null) {
                                    var vt = tt.ref;
                                    vt !== null && (typeof vt == "function" ? vt(null) : vt.current = null);
                                }
                            }
                            if (ke & 8192) switch(y.tag){
                                case 13:
                                    if (y.memoizedState !== null) {
                                        var Bt = y.alternate;
                                        (Bt === null || Bt.memoizedState === null) && (jh = xi());
                                    }
                                    break;
                                case 22:
                                    var mn = y.memoizedState !== null, en = y.alternate, Cn = en !== null && en.memoizedState !== null;
                                    if (C = y, Ve) {
                                        e: if (O = C, z = mn, Z = null, Ve) for(var It = O;;){
                                            if (It.tag === 5) {
                                                if (Z === null) {
                                                    Z = It;
                                                    var Zi = It.stateNode;
                                                    z ? ht(Zi) : lt(It.stateNode, It.memoizedProps);
                                                }
                                            } else if (It.tag === 6) {
                                                if (Z === null) {
                                                    var go = It.stateNode;
                                                    z ? Se(go) : Re(go, It.memoizedProps);
                                                }
                                            } else if ((It.tag !== 22 && It.tag !== 23 || It.memoizedState === null || It === O) && It.child !== null) {
                                                It.child.return = It, It = It.child;
                                                continue;
                                            }
                                            if (It === O) break;
                                            for(; It.sibling === null;){
                                                if (It.return === null || It.return === O) break e;
                                                Z === It && (Z = null), It = It.return;
                                            }
                                            Z === It && (Z = null), It.sibling.return = It.return, It = It.sibling;
                                        }
                                    }
                                    if (mn && !Cn && C.mode & 1) {
                                        bt = C;
                                        for(var He = C.child; He !== null;){
                                            for(C = bt = He; bt !== null;){
                                                O = bt;
                                                var De = O.child;
                                                switch(O.tag){
                                                    case 0:
                                                    case 11:
                                                    case 14:
                                                    case 15:
                                                        Cl(4, O, O.return);
                                                        break;
                                                    case 1:
                                                        Bo(O, O.return);
                                                        var Qe = O.stateNode;
                                                        if (typeof Qe.componentWillUnmount == "function") {
                                                            var Et = O.return;
                                                            try {
                                                                Qe.props = O.memoizedProps, Qe.state = O.memoizedState, Qe.componentWillUnmount();
                                                            } catch ($t) {
                                                                ws(O, Et, $t);
                                                            }
                                                        }
                                                        break;
                                                    case 5:
                                                        Bo(O, O.return);
                                                        break;
                                                    case 22:
                                                        if (O.memoizedState !== null) {
                                                            ex(C);
                                                            continue;
                                                        }
                                                }
                                                De !== null ? (De.return = O, bt = De) : ex(C);
                                            }
                                            He = He.sibling;
                                        }
                                    }
                            }
                            switch(ke & 4102){
                                case 2:
                                    ig(y), y.flags &= -3;
                                    break;
                                case 6:
                                    ig(y), y.flags &= -3, wc(y.alternate, y);
                                    break;
                                case 4096:
                                    y.flags &= -4097;
                                    break;
                                case 4100:
                                    y.flags &= -4097, wc(y.alternate, y);
                                    break;
                                case 4:
                                    wc(y.alternate, y);
                            }
                        } catch ($t) {
                            ws(y, y.return, $t);
                        }
                        if (C = y.sibling, C !== null) {
                            C.return = y.return, bt = C;
                            break;
                        }
                        bt = y.return;
                    }
                }
            }
            function Ph(m, y, C) {
                bt = m, kh(m);
            }
            function kh(m, y, C) {
                for(var O = (m.mode & 1) !== 0; bt !== null;){
                    var z = bt, Z = z.child;
                    if (z.tag === 22 && O) {
                        var xe = z.memoizedState !== null || xs;
                        if (!xe) {
                            var ke = z.alternate, tt = ke !== null && ke.memoizedState !== null || Li;
                            ke = xs;
                            var vt = Li;
                            if (xs = xe, (Li = tt) && !vt) for(bt = z; bt !== null;)xe = bt, tt = xe.child, xe.tag === 22 && xe.memoizedState !== null ? _u(z) : tt !== null ? (tt.return = xe, bt = tt) : _u(z);
                            for(; Z !== null;)bt = Z, kh(Z), Z = Z.sibling;
                            bt = z, xs = ke, Li = vt;
                        }
                        Qv(m);
                    } else z.subtreeFlags & 8772 && Z !== null ? (Z.return = z, bt = Z) : Qv(m);
                }
            }
            function Qv(m) {
                for(; bt !== null;){
                    var y = bt;
                    if (y.flags & 8772) {
                        var C = y.alternate;
                        try {
                            if (y.flags & 8772) switch(y.tag){
                                case 0:
                                case 11:
                                case 15:
                                    Li || Xi(5, y);
                                    break;
                                case 1:
                                    var O = y.stateNode;
                                    if (y.flags & 4 && !Li) if (C === null) O.componentDidMount();
                                    else {
                                        var z = y.elementType === y.type ? C.memoizedProps : Ps(y.type, C.memoizedProps);
                                        O.componentDidUpdate(z, C.memoizedState, O.__reactInternalSnapshotBeforeUpdate);
                                    }
                                    var Z = y.updateQueue;
                                    Z !== null && Pw(y, Z, O);
                                    break;
                                case 3:
                                    var xe = y.updateQueue;
                                    if (xe !== null) {
                                        if (C = null, y.child !== null) switch(y.child.tag){
                                            case 5:
                                                C = q(y.child.stateNode);
                                                break;
                                            case 1:
                                                C = y.child.stateNode;
                                        }
                                        Pw(y, xe, C);
                                    }
                                    break;
                                case 5:
                                    var ke = y.stateNode;
                                    C === null && y.flags & 4 && Pe(ke, y.type, y.memoizedProps, y);
                                    break;
                                case 6:
                                    break;
                                case 4:
                                    break;
                                case 12:
                                    break;
                                case 13:
                                    if (Me && y.memoizedState === null) {
                                        var tt = y.alternate;
                                        if (tt !== null) {
                                            var vt = tt.memoizedState;
                                            if (vt !== null) {
                                                var Bt = vt.dehydrated;
                                                Bt !== null && Md(Bt);
                                            }
                                        }
                                    }
                                    break;
                                case 19:
                                case 17:
                                case 21:
                                case 22:
                                case 23:
                                    break;
                                default:
                                    throw Error(o(163));
                            }
                            Li || y.flags & 512 && bs(y);
                        } catch (mn) {
                            ws(y, y.return, mn);
                        }
                    }
                    if (y === m) {
                        bt = null;
                        break;
                    }
                    if (C = y.sibling, C !== null) {
                        C.return = y.return, bt = C;
                        break;
                    }
                    bt = y.return;
                }
            }
            function ex(m) {
                for(; bt !== null;){
                    var y = bt;
                    if (y === m) {
                        bt = null;
                        break;
                    }
                    var C = y.sibling;
                    if (C !== null) {
                        C.return = y.return, bt = C;
                        break;
                    }
                    bt = y.return;
                }
            }
            function _u(m) {
                for(; bt !== null;){
                    var y = bt;
                    try {
                        switch(y.tag){
                            case 0:
                            case 11:
                            case 15:
                                var C = y.return;
                                try {
                                    Xi(4, y);
                                } catch (tt) {
                                    ws(y, C, tt);
                                }
                                break;
                            case 1:
                                var O = y.stateNode;
                                if (typeof O.componentDidMount == "function") {
                                    var z = y.return;
                                    try {
                                        O.componentDidMount();
                                    } catch (tt) {
                                        ws(y, z, tt);
                                    }
                                }
                                var Z = y.return;
                                try {
                                    bs(y);
                                } catch (tt) {
                                    ws(y, Z, tt);
                                }
                                break;
                            case 5:
                                var xe = y.return;
                                try {
                                    bs(y);
                                } catch (tt) {
                                    ws(y, xe, tt);
                                }
                        }
                    } catch (tt) {
                        ws(y, y.return, tt);
                    }
                    if (y === m) {
                        bt = null;
                        break;
                    }
                    var ke = y.sibling;
                    if (ke !== null) {
                        ke.return = y.return, bt = ke;
                        break;
                    }
                    bt = y.return;
                }
            }
            var Oh = 0, Su = 1, Eu = 2, Il = 3, $d = 4;
            if (typeof Symbol == "function" && Symbol.for) {
                var Mu = Symbol.for;
                Oh = Mu("selector.component"), Su = Mu("selector.has_pseudo_class"), Eu = Mu("selector.role"), Il = Mu("selector.test_id"), $d = Mu("selector.text");
            }
            function Lh(m) {
                var y = se(m);
                if (y != null) {
                    if (typeof y.memoizedProps["data-testname"] != "string") throw Error(o(364));
                    return y;
                }
                if (m = $(m), m === null) throw Error(o(362));
                return m.stateNode.current;
            }
            function Dh(m, y) {
                switch(y.$$typeof){
                    case Oh:
                        if (m.type === y.value) return !0;
                        break;
                    case Su:
                        e: {
                            y = y.value, m = [
                                m,
                                0
                            ];
                            for(var C = 0; C < m.length;){
                                var O = m[C++], z = m[C++], Z = y[z];
                                if (O.tag !== 5 || !pe(O)) {
                                    for(; Z != null && Dh(O, Z);)z++, Z = y[z];
                                    if (z === y.length) {
                                        y = !0;
                                        break e;
                                    } else for(O = O.child; O !== null;)m.push(O, z), O = O.sibling;
                                }
                            }
                            y = !1;
                        }
                        return y;
                    case Eu:
                        if (m.tag === 5 && me(m.stateNode, y.value)) return !0;
                        break;
                    case $d:
                        if ((m.tag === 5 || m.tag === 6) && (m = fe(m), m !== null && 0 <= m.indexOf(y.value))) return !0;
                        break;
                    case Il:
                        if (m.tag === 5 && (m = m.memoizedProps["data-testname"], typeof m == "string" && m.toLowerCase() === y.value.toLowerCase())) return !0;
                        break;
                    default:
                        throw Error(o(365));
                }
                return !1;
            }
            function _c(m) {
                switch(m.$$typeof){
                    case Oh:
                        return "<" + (D(m.value) || "Unknown") + ">";
                    case Su:
                        return ":has(" + (_c(m) || "") + ")";
                    case Eu:
                        return '[role="' + m.value + '"]';
                    case $d:
                        return '"' + m.value + '"';
                    case Il:
                        return '[data-testname="' + m.value + '"]';
                    default:
                        throw Error(o(365));
                }
            }
            function fo(m, y) {
                var C = [];
                m = [
                    m,
                    0
                ];
                for(var O = 0; O < m.length;){
                    var z = m[O++], Z = m[O++], xe = y[Z];
                    if (z.tag !== 5 || !pe(z)) {
                        for(; xe != null && Dh(z, xe);)Z++, xe = y[Z];
                        if (Z === y.length) C.push(z);
                        else for(z = z.child; z !== null;)m.push(z, Z), z = z.sibling;
                    }
                }
                return C;
            }
            function Rl(m, y) {
                if (!oe) throw Error(o(363));
                m = Lh(m), m = fo(m, y), y = [], m = Array.from(m);
                for(var C = 0; C < m.length;){
                    var O = m[C++];
                    if (O.tag === 5) pe(O) || y.push(O.stateNode);
                    else for(O = O.child; O !== null;)m.push(O), O = O.sibling;
                }
                return y;
            }
            var tx = Math.ceil, Fh = a.ReactCurrentDispatcher, ya = a.ReactCurrentOwner, lr = a.ReactCurrentBatchConfig, En = 0, ei = null, cr = null, Rr = 0, os = 0, Tu = Xt(0), qr = 0, Gd = null, Xa = 0, ho = 0, Cu = 0, Al = null, si = null, jh = 0, Sc = 1 / 0;
            function Iu() {
                Sc = xi() + 500;
            }
            var Xd = !1, Sr = null, va = null, Kd = !1, Ka = null, Ru = 0, Au = 0, Nl = null, gr = -1, Hr = 0;
            function Yn() {
                return En & 6 ? xi() : gr !== -1 ? gr : gr = xi();
            }
            function xa(m) {
                return m.mode & 1 ? En & 2 && Rr !== 0 ? Rr & -Rr : Nw.transition !== null ? (Hr === 0 && (m = Jr, Jr <<= 1, !(Jr & 4194240) && (Jr = 64), Hr = m), Hr) : (m = On, m !== 0 ? m : Be()) : 1;
            }
            function as(m, y, C) {
                if (50 < Au) throw Au = 0, Nl = null, Error(o(185));
                var O = Ec(m, y);
                return O === null ? null : (nu(O, y, C), (!(En & 2) || O !== ei) && (O === ei && (!(En & 2) && (ho |= y), qr === 4 && Yi(O, Rr)), Ds(O, C), y === 1 && En === 0 && !(m.mode & 1) && (Iu(), Tm && Oo())), O);
            }
            function Ec(m, y) {
                m.lanes |= y;
                var C = m.alternate;
                for(C !== null && (C.lanes |= y), C = m, m = m.return; m !== null;)m.childLanes |= y, C = m.alternate, C !== null && (C.childLanes |= y), C = m, m = m.return;
                return C.tag === 3 ? C.stateNode : null;
            }
            function Ds(m, y) {
                var C = m.callbackNode;
                Aw(m, y);
                var O = fh(m, m === ei ? Rr : 0);
                if (O === 0) C !== null && Id(C), m.callbackNode = null, m.callbackPriority = 0;
                else if (y = O & -O, m.callbackPriority !== y) {
                    if (C != null && Id(C), y === 1) m.tag === 0 ? Im(po.bind(null, m)) : Cm(po.bind(null, m)), de ? ae(function() {
                        En === 0 && Oo();
                    }) : ru(iu, Oo), C = null;
                    else {
                        switch(ml(O)){
                            case 1:
                                C = iu;
                                break;
                            case 4:
                                C = bC;
                                break;
                            case 16:
                                C = Em;
                                break;
                            case 536870912:
                                C = Mm;
                                break;
                            default:
                                C = Em;
                        }
                        C = ag(C, Ki.bind(null, m));
                    }
                    m.callbackPriority = y, m.callbackNode = C;
                }
            }
            function Ki(m, y) {
                if (gr = -1, Hr = 0, En & 6) throw Error(o(327));
                var C = m.callbackNode;
                if (Ya() && m.callbackNode !== C) return null;
                var O = fh(m, m === ei ? Rr : 0);
                if (O === 0) return null;
                if (O & 30 || O & m.expiredLanes || y) y = Vh(m, O);
                else {
                    y = O;
                    var z = En;
                    En |= 2;
                    var Z = ix();
                    (ei !== m || Rr !== y) && (Iu(), Pl(m, y));
                    do try {
                        Gw();
                        break;
                    } catch (ke) {
                        rx(m, ke);
                    }
                    while (!0);
                    gs(), Fh.current = Z, En = z, cr !== null ? y = 0 : (ei = null, Rr = 0, y = qr);
                }
                if (y !== 0) {
                    if (y === 2 && (z = wm(m), z !== 0 && (O = z, y = Bh(m, z))), y === 1) throw C = Gd, Pl(m, 0), Yi(m, O), Ds(m, xi()), C;
                    if (y === 6) Yi(m, O);
                    else {
                        if (z = m.current.alternate, !(O & 30) && !nx(z) && (y = Vh(m, O), y === 2 && (Z = wm(m), Z !== 0 && (O = Z, y = Bh(m, Z))), y === 1)) throw C = Gd, Pl(m, 0), Yi(m, O), Ds(m, xi()), C;
                        switch(m.finishedWork = z, m.finishedLanes = O, y){
                            case 0:
                            case 1:
                                throw Error(o(345));
                            case 2:
                                ba(m, si);
                                break;
                            case 3:
                                if (Yi(m, O), (O & 130023424) === O && (y = jh + 500 - xi(), 10 < y)) {
                                    if (fh(m, 0) !== 0) break;
                                    if (z = m.suspendedLanes, (z & O) !== O) {
                                        Yn(), m.pingedLanes |= m.suspendedLanes & z;
                                        break;
                                    }
                                    m.timeoutHandle = ve(ba.bind(null, m, si), y);
                                    break;
                                }
                                ba(m, si);
                                break;
                            case 4:
                                if (Yi(m, O), (O & 4194240) === O) break;
                                for(y = m.eventTimes, z = -1; 0 < O;){
                                    var xe = 31 - zn(O);
                                    Z = 1 << xe, xe = y[xe], xe > z && (z = xe), O &= ~Z;
                                }
                                if (O = z, O = xi() - O, O = (120 > O ? 120 : 480 > O ? 480 : 1080 > O ? 1080 : 1920 > O ? 1920 : 3e3 > O ? 3e3 : 4320 > O ? 4320 : 1960 * tx(O / 1960)) - O, 10 < O) {
                                    m.timeoutHandle = ve(ba.bind(null, m, si), O);
                                    break;
                                }
                                ba(m, si);
                                break;
                            case 5:
                                ba(m, si);
                                break;
                            default:
                                throw Error(o(329));
                        }
                    }
                }
                return Ds(m, xi()), m.callbackNode === C ? Ki.bind(null, m) : null;
            }
            function Bh(m, y) {
                var C = Al;
                return m.current.memoizedState.isDehydrated && (Pl(m, y).flags |= 256), m = Vh(m, y), m !== 2 && (y = si, si = C, y !== null && Uh(y)), m;
            }
            function Uh(m) {
                si === null ? si = m : si.push.apply(si, m);
            }
            function nx(m) {
                for(var y = m;;){
                    if (y.flags & 16384) {
                        var C = y.updateQueue;
                        if (C !== null && (C = C.stores, C !== null)) for(var O = 0; O < C.length; O++){
                            var z = C[O], Z = z.getSnapshot;
                            z = z.value;
                            try {
                                if (!ms(Z(), z)) return !1;
                            } catch  {
                                return !1;
                            }
                        }
                    }
                    if (C = y.child, y.subtreeFlags & 16384 && C !== null) C.return = y, y = C;
                    else {
                        if (y === m) break;
                        for(; y.sibling === null;){
                            if (y.return === null || y.return === m) return !0;
                            y = y.return;
                        }
                        y.sibling.return = y.return, y = y.sibling;
                    }
                }
                return !0;
            }
            function Yi(m, y) {
                for(y &= ~Cu, y &= ~ho, m.suspendedLanes |= y, m.pingedLanes &= ~y, m = m.expirationTimes; 0 < y;){
                    var C = 31 - zn(y), O = 1 << C;
                    m[C] = -1, y &= ~O;
                }
            }
            function po(m) {
                if (En & 6) throw Error(o(327));
                Ya();
                var y = fh(m, 0);
                if (!(y & 1)) return Ds(m, xi()), null;
                var C = Vh(m, y);
                if (m.tag !== 0 && C === 2) {
                    var O = wm(m);
                    O !== 0 && (y = O, C = Bh(m, O));
                }
                if (C === 1) throw C = Gd, Pl(m, 0), Yi(m, y), Ds(m, xi()), C;
                if (C === 6) throw Error(o(345));
                return m.finishedWork = m.current.alternate, m.finishedLanes = y, ba(m, si), Ds(m, xi()), null;
            }
            function Yd(m) {
                Ka !== null && Ka.tag === 0 && !(En & 6) && Ya();
                var y = En;
                En |= 1;
                var C = lr.transition, O = On;
                try {
                    if (lr.transition = null, On = 1, m) return m();
                } finally{
                    On = O, lr.transition = C, En = y, !(En & 6) && Oo();
                }
            }
            function zh() {
                os = Tu.current, yt(Tu);
            }
            function Pl(m, y) {
                m.finishedWork = null, m.finishedLanes = 0;
                var C = m.timeoutHandle;
                if (C !== Ce && (m.timeoutHandle = Ce, Ee(C)), cr !== null) for(C = cr.return; C !== null;){
                    var O = C;
                    switch(Nv(O), O.tag){
                        case 1:
                            O = O.type.childContextTypes, O != null && Sn();
                            break;
                        case 3:
                            Fd(), yt(kn), yt(Pn), fu();
                            break;
                        case 5:
                            Ov(O);
                            break;
                        case 4:
                            Fd();
                            break;
                        case 13:
                            yt(jr);
                            break;
                        case 19:
                            yt(jr);
                            break;
                        case 10:
                            yh(O.type._context);
                            break;
                        case 22:
                        case 23:
                            zh();
                    }
                    C = C.return;
                }
                if (ei = m, cr = m = kl(m.current, null), Rr = os = y, qr = 0, Gd = null, Cu = ho = Xa = 0, si = Al = null, Lo !== null) {
                    for(y = 0; y < Lo.length; y++)if (C = Lo[y], O = C.interleaved, O !== null) {
                        C.interleaved = null;
                        var z = O.next, Z = C.pending;
                        if (Z !== null) {
                            var xe = Z.next;
                            Z.next = z, O.next = xe;
                        }
                        C.pending = O;
                    }
                    Lo = null;
                }
                return m;
            }
            function rx(m, y) {
                do {
                    var C = cr;
                    try {
                        if (gs(), xh.current = Vd, Um) {
                            for(var O = Br.memoizedState; O !== null;){
                                var z = O.queue;
                                z !== null && (z.pending = null), O = O.next;
                            }
                            Um = !1;
                        }
                        if (hu = 0, Pi = Ni = Br = null, Ha = !1, pu = 0, ya.current = null, C === null || C.return === null) {
                            qr = 1, Gd = y, cr = null;
                            break;
                        }
                        e: {
                            var Z = m, xe = C.return, ke = C, tt = y;
                            if (y = Rr, ke.flags |= 32768, tt !== null && typeof tt == "object" && typeof tt.then == "function") {
                                var vt = tt, Bt = ke, mn = Bt.tag;
                                if (!(Bt.mode & 1) && (mn === 0 || mn === 11 || mn === 15)) {
                                    var en = Bt.alternate;
                                    en ? (Bt.updateQueue = en.updateQueue, Bt.memoizedState = en.memoizedState, Bt.lanes = en.lanes) : (Bt.updateQueue = null, Bt.memoizedState = null);
                                }
                                var Cn = qv(xe);
                                if (Cn !== null) {
                                    Cn.flags &= -257, gu(Cn, xe, ke, Z, y), Cn.mode & 1 && _l(Z, vt, y), y = Cn, tt = vt;
                                    var It = y.updateQueue;
                                    if (It === null) {
                                        var Zi = new Set;
                                        Zi.add(tt), y.updateQueue = Zi;
                                    } else It.add(tt);
                                    break e;
                                } else {
                                    if (!(y & 1)) {
                                        _l(Z, vt, y), og();
                                        break e;
                                    }
                                    tt = Error(o(426));
                                }
                            } else if (Ir && ke.mode & 1) {
                                var go = qv(xe);
                                if (go !== null) {
                                    !(go.flags & 65536) && (go.flags |= 256), gu(go, xe, ke, Z, y), Fm(tt);
                                    break e;
                                }
                            }
                            Z = tt, qr !== 4 && (qr = 2), Al === null ? Al = [
                                Z
                            ] : Al.push(Z), tt = Wv(tt, ke), ke = xe;
                            do {
                                switch(ke.tag){
                                    case 3:
                                        ke.flags |= 65536, y &= -y, ke.lanes |= y;
                                        var He = qw(ke, tt, y);
                                        Nm(ke, He);
                                        break e;
                                    case 1:
                                        Z = tt;
                                        var De = ke.type, Qe = ke.stateNode;
                                        if (!(ke.flags & 128) && (typeof De.getDerivedStateFromError == "function" || Qe !== null && typeof Qe.componentDidCatch == "function" && (va === null || !va.has(Qe)))) {
                                            ke.flags |= 65536, y &= -y, ke.lanes |= y;
                                            var Et = Ym(ke, Z, y);
                                            Nm(ke, Et);
                                            break e;
                                        }
                                }
                                ke = ke.return;
                            }while (ke !== null);
                        }
                        ox(C);
                    } catch ($t) {
                        y = $t, cr === C && C !== null && (cr = C = C.return);
                        continue;
                    }
                    break;
                }while (!0);
            }
            function ix() {
                var m = Fh.current;
                return Fh.current = Vd, m === null ? Vd : m;
            }
            function og() {
                (qr === 0 || qr === 3 || qr === 2) && (qr = 4), ei === null || !(Xa & 268435455) && !(ho & 268435455) || Yi(ei, Rr);
            }
            function Vh(m, y) {
                var C = En;
                En |= 2;
                var O = ix();
                ei === m && Rr === y || Pl(m, y);
                do try {
                    $w();
                    break;
                } catch (z) {
                    rx(m, z);
                }
                while (!0);
                if (gs(), En = C, Fh.current = O, cr !== null) throw Error(o(261));
                return ei = null, Rr = 0, qr;
            }
            function $w() {
                for(; cr !== null;)sx(cr);
            }
            function Gw() {
                for(; cr !== null && !hc();)sx(cr);
            }
            function sx(m) {
                var y = cx(m.alternate, m, os);
                m.memoizedProps = m.pendingProps, y === null ? ox(m) : cr = y, ya.current = null;
            }
            function ox(m) {
                var y = m;
                do {
                    var C = y.alternate;
                    if (m = y.return, y.flags & 32768) {
                        if (C = ng(C, y), C !== null) {
                            C.flags &= 32767, cr = C;
                            return;
                        }
                        if (m !== null) m.flags |= 32768, m.subtreeFlags = 0, m.deletions = null;
                        else {
                            qr = 6, cr = null;
                            return;
                        }
                    } else if (C = Qm(C, y, os), C !== null) {
                        cr = C;
                        return;
                    }
                    if (y = y.sibling, y !== null) {
                        cr = y;
                        return;
                    }
                    cr = y = m;
                }while (y !== null);
                qr === 0 && (qr = 5);
            }
            function ba(m, y) {
                var C = On, O = lr.transition;
                try {
                    lr.transition = null, On = 1, Xw(m, y, C);
                } finally{
                    lr.transition = O, On = C;
                }
                return null;
            }
            function Xw(m, y, C) {
                do Ya();
                while (Ka !== null);
                if (En & 6) throw Error(o(327));
                var O = m.finishedWork, z = m.finishedLanes;
                if (O === null) return null;
                if (m.finishedWork = null, m.finishedLanes = 0, O === m.current) throw Error(o(177));
                m.callbackNode = null, m.callbackPriority = 0;
                var Z = O.lanes | O.childLanes;
                if (Sm(m, Z), m === ei && (cr = ei = null, Rr = 0), !(O.subtreeFlags & 2064) && !(O.flags & 2064) || Kd || (Kd = !0, ag(Em, function() {
                    return Ya(), null;
                })), Z = (O.flags & 15990) !== 0, O.subtreeFlags & 15990 || Z) {
                    Z = lr.transition, lr.transition = null;
                    var xe = On;
                    On = 1;
                    var ke = En;
                    En |= 4, ya.current = null, Kv(m, O), SC(m, O), Q(m.containerInfo), m.current = O, Ph(O), xC(), En = ke, On = xe, lr.transition = Z;
                } else m.current = O;
                if (Kd && (Kd = !1, Ka = m, Ru = z), Z = m.pendingLanes, Z === 0 && (va = null), ph(O.stateNode), Ds(m, xi()), y !== null) for(C = m.onRecoverableError, O = 0; O < y.length; O++)C(y[O]);
                if (Xd) throw Xd = !1, m = Sr, Sr = null, m;
                return Ru & 1 && m.tag !== 0 && Ya(), Z = m.pendingLanes, Z & 1 ? m === Nl ? Au++ : (Au = 0, Nl = m) : Au = 0, Oo(), null;
            }
            function Ya() {
                if (Ka !== null) {
                    var m = ml(Ru), y = lr.transition, C = On;
                    try {
                        if (lr.transition = null, On = 16 > m ? 16 : m, Ka === null) var O = !1;
                        else {
                            if (m = Ka, Ka = null, Ru = 0, En & 6) throw Error(o(331));
                            var z = En;
                            for(En |= 4, bt = m.current; bt !== null;){
                                var Z = bt, xe = Z.child;
                                if (bt.flags & 16) {
                                    var ke = Z.deletions;
                                    if (ke !== null) {
                                        for(var tt = 0; tt < ke.length; tt++){
                                            var vt = ke[tt];
                                            for(bt = vt; bt !== null;){
                                                var Bt = bt;
                                                switch(Bt.tag){
                                                    case 0:
                                                    case 11:
                                                    case 15:
                                                        Cl(8, Bt, Z);
                                                }
                                                var mn = Bt.child;
                                                if (mn !== null) mn.return = Bt, bt = mn;
                                                else for(; bt !== null;){
                                                    Bt = bt;
                                                    var en = Bt.sibling, Cn = Bt.return;
                                                    if (Yv(Bt), Bt === vt) {
                                                        bt = null;
                                                        break;
                                                    }
                                                    if (en !== null) {
                                                        en.return = Cn, bt = en;
                                                        break;
                                                    }
                                                    bt = Cn;
                                                }
                                            }
                                        }
                                        var It = Z.alternate;
                                        if (It !== null) {
                                            var Zi = It.child;
                                            if (Zi !== null) {
                                                It.child = null;
                                                do {
                                                    var go = Zi.sibling;
                                                    Zi.sibling = null, Zi = go;
                                                }while (Zi !== null);
                                            }
                                        }
                                        bt = Z;
                                    }
                                }
                                if (Z.subtreeFlags & 2064 && xe !== null) xe.return = Z, bt = xe;
                                else e: for(; bt !== null;){
                                    if (Z = bt, Z.flags & 2048) switch(Z.tag){
                                        case 0:
                                        case 11:
                                        case 15:
                                            Cl(9, Z, Z.return);
                                    }
                                    var He = Z.sibling;
                                    if (He !== null) {
                                        He.return = Z.return, bt = He;
                                        break e;
                                    }
                                    bt = Z.return;
                                }
                            }
                            var De = m.current;
                            for(bt = De; bt !== null;){
                                xe = bt;
                                var Qe = xe.child;
                                if (xe.subtreeFlags & 2064 && Qe !== null) Qe.return = xe, bt = Qe;
                                else e: for(xe = De; bt !== null;){
                                    if (ke = bt, ke.flags & 2048) try {
                                        switch(ke.tag){
                                            case 0:
                                            case 11:
                                            case 15:
                                                Xi(9, ke);
                                        }
                                    } catch ($t) {
                                        ws(ke, ke.return, $t);
                                    }
                                    if (ke === xe) {
                                        bt = null;
                                        break e;
                                    }
                                    var Et = ke.sibling;
                                    if (Et !== null) {
                                        Et.return = ke.return, bt = Et;
                                        break e;
                                    }
                                    bt = ke.return;
                                }
                            }
                            if (En = z, Oo(), qa && typeof qa.onPostCommitFiberRoot == "function") try {
                                qa.onPostCommitFiberRoot(hh, m);
                            } catch  {}
                            O = !0;
                        }
                        return O;
                    } finally{
                        On = C, lr.transition = y;
                    }
                }
                return !1;
            }
            function Wh(m, y, C) {
                y = Wv(C, y), y = qw(m, y, 1), pc(m, y), y = Yn(), m = Ec(m, 1), m !== null && (nu(m, 1, y), Ds(m, y));
            }
            function ws(m, y, C) {
                if (m.tag === 3) Wh(m, m, C);
                else for(; y !== null;){
                    if (y.tag === 3) {
                        Wh(y, m, C);
                        break;
                    } else if (y.tag === 1) {
                        var O = y.stateNode;
                        if (typeof y.type.getDerivedStateFromError == "function" || typeof O.componentDidCatch == "function" && (va === null || !va.has(O))) {
                            m = Wv(C, m), m = Ym(y, m, 1), pc(y, m), m = Yn(), y = Ec(y, 1), y !== null && (nu(y, 1, m), Ds(y, m));
                            break;
                        }
                    }
                    y = y.return;
                }
            }
            function ax(m, y, C) {
                var O = m.pingCache;
                O !== null && O.delete(y), y = Yn(), m.pingedLanes |= m.suspendedLanes & C, ei === m && (Rr & C) === C && (qr === 4 || qr === 3 && (Rr & 130023424) === Rr && 500 > xi() - jh ? Pl(m, 0) : Cu |= C), Ds(m, y);
            }
            function lx(m, y) {
                y === 0 && (m.mode & 1 ? (y = qn, qn <<= 1, !(qn & 130023424) && (qn = 4194304)) : y = 1);
                var C = Yn();
                m = Ec(m, y), m !== null && (nu(m, y, C), Ds(m, C));
            }
            function Kw(m) {
                var y = m.memoizedState, C = 0;
                y !== null && (C = y.retryLane), lx(m, C);
            }
            function Yw(m, y) {
                var C = 0;
                switch(m.tag){
                    case 13:
                        var O = m.stateNode, z = m.memoizedState;
                        z !== null && (C = z.retryLane);
                        break;
                    case 19:
                        O = m.stateNode;
                        break;
                    default:
                        throw Error(o(314));
                }
                O !== null && O.delete(y), lx(m, C);
            }
            var cx;
            cx = function(m, y, C) {
                if (m !== null) if (m.memoizedProps !== y.pendingProps || kn.current) Oi = !0;
                else {
                    if (!(m.lanes & C) && !(y.flags & 128)) return Oi = !1, tg(m, y, C);
                    Oi = !!(m.flags & 131072);
                }
                else Oi = !1, Ir && y.flags & 1048576 && Dw(y, Lm, y.index);
                switch(y.lanes = 0, y.tag){
                    case 2:
                        var O = y.type;
                        m !== null && (m.alternate = null, y.alternate = null, y.flags |= 2), m = y.pendingProps;
                        var z = zt(y, Pn.current);
                        Rd(y, C), z = jd(null, y, O, m, z, C);
                        var Z = vc();
                        return y.flags |= 1, typeof z == "object" && z !== null && typeof z.render == "function" && z.$$typeof === void 0 ? (y.tag = 1, y.memoizedState = null, y.updateQueue = null, Un(O) ? (Z = !0, ii(y)) : Z = !1, y.memoizedState = z.state !== null && z.state !== void 0 ? z.state : null, Ad(y), z.updater = km, y.stateNode = z, z._reactInternals = y, Rv(y, O, m, C), y = ss(null, y, O, !0, Z, C)) : (y.tag = 0, Ir && Z && Av(y), Wr(null, y, z, C), y = y.child), y;
                    case 16:
                        O = y.elementType;
                        e: {
                            switch(m !== null && (m.alternate = null, y.alternate = null, y.flags |= 2), m = y.pendingProps, z = O._init, O = z(O._payload), y.type = O, z = y.tag = EC(O), m = Ps(O, m), z){
                                case 0:
                                    y = Ml(null, y, O, m, C);
                                    break e;
                                case 1:
                                    y = vu(null, y, O, m, C);
                                    break e;
                                case 11:
                                    y = mr(null, y, O, m, C);
                                    break e;
                                case 14:
                                    y = fr(null, y, O, Ps(O.type, m), C);
                                    break e;
                            }
                            throw Error(o(306, O, ""));
                        }
                        return y;
                    case 0:
                        return O = y.type, z = y.pendingProps, z = y.elementType === O ? z : Ps(O, z), Ml(m, y, O, z, C);
                    case 1:
                        return O = y.type, z = y.pendingProps, z = y.elementType === O ? z : Ps(O, z), vu(m, y, O, z, C);
                    case 3:
                        e: {
                            if (Ih(y), m === null) throw Error(o(387));
                            O = y.pendingProps, Z = y.memoizedState, z = Z.element, Tv(m, y), Pm(y, O, null, C);
                            var xe = y.memoizedState;
                            if (O = xe.element, Me && Z.isDehydrated) if (Z = {
                                element: O,
                                isDehydrated: !1,
                                cache: xe.cache,
                                transitions: xe.transitions
                            }, y.updateQueue.baseState = Z, y.memoizedState = Z, y.flags & 256) {
                                z = Error(o(423)), y = $v(m, y, O, C, z);
                                break e;
                            } else if (O !== z) {
                                z = Error(o(424)), y = $v(m, y, O, C, z);
                                break e;
                            } else for(Me && ($i = wd(y.stateNode.containerInfo), ys = y, Ir = !0, jo = null, Pd = !1), C = Bw(y, null, O, C), y.child = C; C;)C.flags = C.flags & -3 | 4096, C = C.sibling;
                            else {
                                if (kd(), O === z) {
                                    y = Ls(m, y, C);
                                    break e;
                                }
                                Wr(m, y, O, C);
                            }
                            y = y.child;
                        }
                        return y;
                    case 5:
                        return Uw(y), m === null && gc(y), O = y.type, z = y.pendingProps, Z = m !== null ? m.memoizedProps : null, xe = z.children, he(O, z) ? xe = null : Z !== null && he(O, Z) && (y.flags |= 32), vs(m, y), Wr(m, y, xe, C), y.child;
                    case 6:
                        return m === null && gc(y), null;
                    case 13:
                        return Gv(m, y, C);
                    case 4:
                        return jm(y, y.stateNode.containerInfo), O = y.pendingProps, m === null ? y.child = bl(y, null, O, C) : Wr(m, y, O, C), y.child;
                    case 11:
                        return O = y.type, z = y.pendingProps, z = y.elementType === O ? z : Ps(O, z), mr(m, y, O, z, C);
                    case 7:
                        return Wr(m, y, y.pendingProps, C), y.child;
                    case 8:
                        return Wr(m, y, y.pendingProps.children, C), y.child;
                    case 12:
                        return Wr(m, y, y.pendingProps.children, C), y.child;
                    case 10:
                        e: {
                            if (O = y.type._context, z = y.pendingProps, Z = y.memoizedProps, xe = z.value, ou(y, O, xe), Z !== null) if (ms(Z.value, xe)) {
                                if (Z.children === z.children && !kn.current) {
                                    y = Ls(m, y, C);
                                    break e;
                                }
                            } else for(Z = y.child, Z !== null && (Z.return = y); Z !== null;){
                                var ke = Z.dependencies;
                                if (ke !== null) {
                                    xe = Z.child;
                                    for(var tt = ke.firstContext; tt !== null;){
                                        if (tt.context === O) {
                                            if (Z.tag === 1) {
                                                tt = yl(-1, C & -C), tt.tag = 2;
                                                var vt = Z.updateQueue;
                                                if (vt !== null) {
                                                    vt = vt.shared;
                                                    var Bt = vt.pending;
                                                    Bt === null ? tt.next = tt : (tt.next = Bt.next, Bt.next = tt), vt.pending = tt;
                                                }
                                            }
                                            Z.lanes |= C, tt = Z.alternate, tt !== null && (tt.lanes |= C), au(Z.return, C, y), ke.lanes |= C;
                                            break;
                                        }
                                        tt = tt.next;
                                    }
                                } else if (Z.tag === 10) xe = Z.type === y.type ? null : Z.child;
                                else if (Z.tag === 18) {
                                    if (xe = Z.return, xe === null) throw Error(o(341));
                                    xe.lanes |= C, ke = xe.alternate, ke !== null && (ke.lanes |= C), au(xe, C, y), xe = Z.sibling;
                                } else xe = Z.child;
                                if (xe !== null) xe.return = Z;
                                else for(xe = Z; xe !== null;){
                                    if (xe === y) {
                                        xe = null;
                                        break;
                                    }
                                    if (Z = xe.sibling, Z !== null) {
                                        Z.return = xe.return, xe = Z;
                                        break;
                                    }
                                    xe = xe.return;
                                }
                                Z = xe;
                            }
                            Wr(m, y, z.children, C), y = y.child;
                        }
                        return y;
                    case 9:
                        return z = y.type, O = y.pendingProps.children, Rd(y, C), z = ks(z), O = O(z), y.flags |= 1, Wr(m, y, O, C), y.child;
                    case 14:
                        return O = y.type, z = Ps(O, y.pendingProps), z = Ps(O.type, z), fr(m, y, O, z, C);
                    case 15:
                        return El(m, y, y.type, y.pendingProps, C);
                    case 17:
                        return O = y.type, z = y.pendingProps, z = y.elementType === O ? z : Ps(O, z), m !== null && (m.alternate = null, y.alternate = null, y.flags |= 2), y.tag = 1, Un(O) ? (m = !0, ii(y)) : m = !1, Rd(y, C), Ow(y, O, z), Rv(y, O, z, C), ss(null, y, O, !0, m, C);
                    case 19:
                        return bu(m, y, C);
                    case 22:
                        return Gi(m, y, C);
                }
                throw Error(o(156, y.tag));
            };
            function ag(m, y) {
                return ru(m, y);
            }
            function Zw(m, y, C, O) {
                this.tag = m, this.key = C, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = y, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = O, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
            }
            function mo(m, y, C, O) {
                return new Zw(m, y, C, O);
            }
            function lg(m) {
                return m = m.prototype, !(!m || !m.isReactComponent);
            }
            function EC(m) {
                if (typeof m == "function") return lg(m) ? 1 : 0;
                if (m != null) {
                    if (m = m.$$typeof, m === S) return 11;
                    if (m === M) return 14;
                }
                return 2;
            }
            function kl(m, y) {
                var C = m.alternate;
                return C === null ? (C = mo(m.tag, y, m.key, m.mode), C.elementType = m.elementType, C.type = m.type, C.stateNode = m.stateNode, C.alternate = m, m.alternate = C) : (C.pendingProps = y, C.type = m.type, C.flags = 0, C.subtreeFlags = 0, C.deletions = null), C.flags = m.flags & 14680064, C.childLanes = m.childLanes, C.lanes = m.lanes, C.child = m.child, C.memoizedProps = m.memoizedProps, C.memoizedState = m.memoizedState, C.updateQueue = m.updateQueue, y = m.dependencies, C.dependencies = y === null ? null : {
                    lanes: y.lanes,
                    firstContext: y.firstContext
                }, C.sibling = m.sibling, C.index = m.index, C.ref = m.ref, C;
            }
            function cg(m, y, C, O, z, Z) {
                var xe = 2;
                if (O = m, typeof m == "function") lg(m) && (xe = 1);
                else if (typeof m == "string") xe = 5;
                else e: switch(m){
                    case u:
                        return Nu(C.children, z, Z, y);
                    case f:
                        xe = 8, z |= 8;
                        break;
                    case p:
                        return m = mo(12, C, y, z | 2), m.elementType = p, m.lanes = Z, m;
                    case _:
                        return m = mo(13, C, y, z), m.elementType = _, m.lanes = Z, m;
                    case b:
                        return m = mo(19, C, y, z), m.elementType = b, m.lanes = Z, m;
                    case T:
                        return qh(C, z, Z, y);
                    default:
                        if (typeof m == "object" && m !== null) switch(m.$$typeof){
                            case g:
                                xe = 10;
                                break e;
                            case x:
                                xe = 9;
                                break e;
                            case S:
                                xe = 11;
                                break e;
                            case M:
                                xe = 14;
                                break e;
                            case E:
                                xe = 16, O = null;
                                break e;
                        }
                        throw Error(o(130, m == null ? m : typeof m, ""));
                }
                return y = mo(xe, C, y, z), y.elementType = m, y.type = O, y.lanes = Z, y;
            }
            function Nu(m, y, C, O) {
                return m = mo(7, m, O, y), m.lanes = C, m;
            }
            function qh(m, y, C, O) {
                return m = mo(22, m, O, y), m.elementType = T, m.lanes = C, m.stateNode = {}, m;
            }
            function ug(m, y, C) {
                return m = mo(6, m, null, y), m.lanes = C, m;
            }
            function dg(m, y, C) {
                return y = mo(4, m.children !== null ? m.children : [], m.key, y), y.lanes = C, y.stateNode = {
                    containerInfo: m.containerInfo,
                    pendingChildren: null,
                    implementation: m.implementation
                }, y;
            }
            function fg(m, y, C, O, z) {
                this.tag = y, this.containerInfo = m, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = Ce, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = _m(0), this.expirationTimes = _m(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = _m(0), this.identifierPrefix = O, this.onRecoverableError = z, Me && (this.mutableSourceEagerHydrationData = null);
            }
            function Jw(m, y, C, O, z, Z, xe, ke, tt) {
                return m = new fg(m, y, C, ke, tt), y === 1 ? (y = 1, Z === !0 && (y |= 8)) : y = 0, Z = mo(3, null, null, y), m.current = Z, Z.stateNode = m, Z.memoizedState = {
                    element: O,
                    isDehydrated: C,
                    cache: null,
                    transitions: null
                }, Ad(Z), m;
            }
            function Qw(m) {
                if (!m) return nn;
                m = m._reactInternals;
                e: {
                    if (R(m) !== m || m.tag !== 1) throw Error(o(170));
                    var y = m;
                    do {
                        switch(y.tag){
                            case 3:
                                y = y.stateNode.context;
                                break e;
                            case 1:
                                if (Un(y.type)) {
                                    y = y.stateNode.__reactInternalMemoizedMergedChildContext;
                                    break e;
                                }
                        }
                        y = y.return;
                    }while (y !== null);
                    throw Error(o(171));
                }
                if (m.tag === 1) {
                    var C = m.type;
                    if (Un(C)) return da(m, C, y);
                }
                return y;
            }
            function e_(m) {
                var y = m._reactInternals;
                if (y === void 0) throw typeof m.render == "function" ? Error(o(188)) : (m = Object.keys(m).join(","), Error(o(268, m)));
                return m = B(y), m === null ? null : m.stateNode;
            }
            function zo(m, y) {
                if (m = m.memoizedState, m !== null && m.dehydrated !== null) {
                    var C = m.retryLane;
                    m.retryLane = C !== 0 && C < y ? C : y;
                }
            }
            function Hh(m, y) {
                zo(m, y), (m = m.alternate) && zo(m, y);
            }
            function hg(m) {
                return m = B(m), m === null ? null : m.stateNode;
            }
            function t_() {
                return null;
            }
            return n.attemptContinuousHydration = function(m) {
                if (m.tag === 13) {
                    var y = Yn();
                    as(m, 134217728, y), Hh(m, 134217728);
                }
            }, n.attemptHydrationAtCurrentPriority = function(m) {
                if (m.tag === 13) {
                    var y = Yn(), C = xa(m);
                    as(m, C, y), Hh(m, C);
                }
            }, n.attemptSynchronousHydration = function(m) {
                switch(m.tag){
                    case 3:
                        var y = m.stateNode;
                        if (y.current.memoizedState.isDehydrated) {
                            var C = Ns(y.pendingLanes);
                            C !== 0 && (Wa(y, C | 1), Ds(y, xi()), !(En & 6) && (Iu(), Oo()));
                        }
                        break;
                    case 13:
                        var O = Yn();
                        Yd(function() {
                            return as(m, 1, O);
                        }), Hh(m, 1);
                }
            }, n.batchedUpdates = function(m, y) {
                var C = En;
                En |= 1;
                try {
                    return m(y);
                } finally{
                    En = C, En === 0 && (Iu(), Tm && Oo());
                }
            }, n.createComponentSelector = function(m) {
                return {
                    $$typeof: Oh,
                    value: m
                };
            }, n.createContainer = function(m, y, C, O, z, Z, xe) {
                return Jw(m, y, !1, null, C, O, z, Z, xe);
            }, n.createHasPseudoClassSelector = function(m) {
                return {
                    $$typeof: Su,
                    value: m
                };
            }, n.createHydrationContainer = function(m, y, C, O, z, Z, xe, ke, tt) {
                return m = Jw(C, O, !0, m, z, Z, xe, ke, tt), m.context = Qw(null), C = m.current, O = Yn(), z = xa(C), Z = yl(O, z), Z.callback = y ?? null, pc(C, Z), m.current.lanes = z, nu(m, z, O), Ds(m, O), m;
            }, n.createPortal = function(m, y, C) {
                var O = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
                return {
                    $$typeof: c,
                    key: O == null ? null : "" + O,
                    children: m,
                    containerInfo: y,
                    implementation: C
                };
            }, n.createRoleSelector = function(m) {
                return {
                    $$typeof: Eu,
                    value: m
                };
            }, n.createTestNameSelector = function(m) {
                return {
                    $$typeof: Il,
                    value: m
                };
            }, n.createTextSelector = function(m) {
                return {
                    $$typeof: $d,
                    value: m
                };
            }, n.deferredUpdates = function(m) {
                var y = On, C = lr.transition;
                try {
                    return lr.transition = null, On = 16, m();
                } finally{
                    On = y, lr.transition = C;
                }
            }, n.discreteUpdates = function(m, y, C, O, z) {
                var Z = On, xe = lr.transition;
                try {
                    return lr.transition = null, On = 1, m(y, C, O, z);
                } finally{
                    On = Z, lr.transition = xe, En === 0 && Iu();
                }
            }, n.findAllNodes = Rl, n.findBoundingRects = function(m, y) {
                if (!oe) throw Error(o(363));
                y = Rl(m, y), m = [];
                for(var C = 0; C < y.length; C++)m.push(H(y[C]));
                for(y = m.length - 1; 0 < y; y--){
                    C = m[y];
                    for(var O = C.x, z = O + C.width, Z = C.y, xe = Z + C.height, ke = y - 1; 0 <= ke; ke--)if (y !== ke) {
                        var tt = m[ke], vt = tt.x, Bt = vt + tt.width, mn = tt.y, en = mn + tt.height;
                        if (O >= vt && Z >= mn && z <= Bt && xe <= en) {
                            m.splice(y, 1);
                            break;
                        } else if (O !== vt || C.width !== tt.width || en < Z || mn > xe) {
                            if (!(Z !== mn || C.height !== tt.height || Bt < O || vt > z)) {
                                vt > O && (tt.width += vt - O, tt.x = O), Bt < z && (tt.width = z - vt), m.splice(y, 1);
                                break;
                            }
                        } else {
                            mn > Z && (tt.height += mn - Z, tt.y = Z), en < xe && (tt.height = xe - mn), m.splice(y, 1);
                            break;
                        }
                    }
                }
                return m;
            }, n.findHostInstance = e_, n.findHostInstanceWithNoPortals = function(m) {
                return m = P(m), m = m !== null ? j(m) : null, m === null ? null : m.stateNode;
            }, n.findHostInstanceWithWarning = function(m) {
                return e_(m);
            }, n.flushControlled = function(m) {
                var y = En;
                En |= 1;
                var C = lr.transition, O = On;
                try {
                    lr.transition = null, On = 1, m();
                } finally{
                    On = O, lr.transition = C, En = y, En === 0 && (Iu(), Oo());
                }
            }, n.flushPassiveEffects = Ya, n.flushSync = Yd, n.focusWithin = function(m, y) {
                if (!oe) throw Error(o(363));
                for(m = Lh(m), y = fo(m, y), y = Array.from(y), m = 0; m < y.length;){
                    var C = y[m++];
                    if (!pe(C)) {
                        if (C.tag === 5 && Ie(C.stateNode)) return !0;
                        for(C = C.child; C !== null;)y.push(C), C = C.sibling;
                    }
                }
                return !1;
            }, n.getCurrentUpdatePriority = function() {
                return On;
            }, n.getFindAllNodesFailureDescription = function(m, y) {
                if (!oe) throw Error(o(363));
                var C = 0, O = [];
                m = [
                    Lh(m),
                    0
                ];
                for(var z = 0; z < m.length;){
                    var Z = m[z++], xe = m[z++], ke = y[xe];
                    if ((Z.tag !== 5 || !pe(Z)) && (Dh(Z, ke) && (O.push(_c(ke)), xe++, xe > C && (C = xe)), xe < y.length)) for(Z = Z.child; Z !== null;)m.push(Z, xe), Z = Z.sibling;
                }
                if (C < y.length) {
                    for(m = []; C < y.length; C++)m.push(_c(y[C]));
                    return `findAllNodes was able to match part of the selector:
  ` + (O.join(" > ") + `

No matching component was found for:
  `) + m.join(" > ");
                }
                return null;
            }, n.getPublicRootInstance = function(m) {
                if (m = m.current, !m.child) return null;
                switch(m.child.tag){
                    case 5:
                        return q(m.child.stateNode);
                    default:
                        return m.child.stateNode;
                }
            }, n.injectIntoDevTools = function(m) {
                if (m = {
                    bundleType: m.bundleType,
                    version: m.version,
                    rendererPackageName: m.rendererPackageName,
                    rendererConfig: m.rendererConfig,
                    overrideHookState: null,
                    overrideHookStateDeletePath: null,
                    overrideHookStateRenamePath: null,
                    overrideProps: null,
                    overridePropsDeletePath: null,
                    overridePropsRenamePath: null,
                    setErrorHandler: null,
                    setSuspenseHandler: null,
                    scheduleUpdate: null,
                    currentDispatcherRef: a.ReactCurrentDispatcher,
                    findHostInstanceByFiber: hg,
                    findFiberByHostInstance: m.findFiberByHostInstance || t_,
                    findHostInstancesForRefresh: null,
                    scheduleRefresh: null,
                    scheduleRoot: null,
                    setRefreshHandler: null,
                    getCurrentFiber: null,
                    reconcilerVersion: "18.0.0-fc46dba67-20220329"
                }, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u") m = !1;
                else {
                    var y = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                    if (y.isDisabled || !y.supportsFiber) m = !0;
                    else {
                        try {
                            hh = y.inject(m), qa = y;
                        } catch  {}
                        m = !!y.checkDCE;
                    }
                }
                return m;
            }, n.isAlreadyRendering = function() {
                return !1;
            }, n.observeVisibleRects = function(m, y, C, O) {
                if (!oe) throw Error(o(363));
                m = Rl(m, y);
                var z = Xe(m, C, O).disconnect;
                return {
                    disconnect: function() {
                        z();
                    }
                };
            }, n.registerMutableSourceForHydration = function(m, y) {
                var C = y._getVersion;
                C = C(y._source), m.mutableSourceEagerHydrationData == null ? m.mutableSourceEagerHydrationData = [
                    y,
                    C
                ] : m.mutableSourceEagerHydrationData.push(y, C);
            }, n.runWithPriority = function(m, y) {
                var C = On;
                try {
                    return On = m, y();
                } finally{
                    On = C;
                }
            }, n.shouldError = function() {
                return null;
            }, n.shouldSuspend = function() {
                return !1;
            }, n.updateContainer = function(m, y, C, O) {
                var z = y.current, Z = Yn(), xe = xa(z);
                return C = Qw(C), y.context === null ? y.context = C : y.pendingContext = C, y = yl(Z, xe), y.payload = {
                    element: m
                }, O = O === void 0 ? null : O, O !== null && (y.callback = O), pc(z, y), m = as(z, xe, Z), m !== null && Am(m, z, xe), xe;
            }, n;
        }), RN;
    }
    var Yz;
    function y_e() {
        return Yz || (Yz = 1, TN.exports = g_e()), TN.exports;
    }
    var v_e = y_e();
    const x_e = Ao(v_e);
    var Zz = UG();
    const W2 = {}, b_e = (t)=>void Object.assign(W2, t);
    function w_e(t, e) {
        function n(u, { args: f = [], attach: p, ...g }, x) {
            let S = `${u[0].toUpperCase()}${u.slice(1)}`, _;
            if (u === "primitive") {
                if (g.object === void 0) throw new Error("R3F: Primitives without 'object' are invalid!");
                const b = g.object;
                _ = Qg(b, {
                    type: u,
                    root: x,
                    attach: p,
                    primitive: !0
                });
            } else {
                const b = W2[S];
                if (!b) throw new Error(`R3F: ${S} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);
                if (!Array.isArray(f)) throw new Error("R3F: The args prop must be an array!");
                _ = Qg(new b(...f), {
                    type: u,
                    root: x,
                    attach: p,
                    memoizedProps: {
                        args: f
                    }
                });
            }
            return _.__r3f.attach === void 0 && (_.isBufferGeometry ? _.__r3f.attach = "geometry" : _.isMaterial && (_.__r3f.attach = "material")), S !== "inject" && PN(_, g), _;
        }
        function r(u, f) {
            let p = !1;
            if (f) {
                var g, x;
                (g = f.__r3f) != null && g.attach ? NN(u, f, f.__r3f.attach) : f.isObject3D && u.isObject3D && (u.add(f), p = !0), p || (x = u.__r3f) == null || x.objects.push(f), f.__r3f || Qg(f, {}), f.__r3f.parent = u, Mk(f), ey(f);
            }
        }
        function i(u, f, p) {
            let g = !1;
            if (f) {
                var x, S;
                if ((x = f.__r3f) != null && x.attach) NN(u, f, f.__r3f.attach);
                else if (f.isObject3D && u.isObject3D) {
                    f.parent = u, f.dispatchEvent({
                        type: "added"
                    }), u.dispatchEvent({
                        type: "childadded",
                        child: f
                    });
                    const _ = u.children.filter((M)=>M !== f), b = _.indexOf(p);
                    u.children = [
                        ..._.slice(0, b),
                        f,
                        ..._.slice(b)
                    ], g = !0;
                }
                g || (S = u.__r3f) == null || S.objects.push(f), f.__r3f || Qg(f, {}), f.__r3f.parent = u, Mk(f), ey(f);
            }
        }
        function s(u, f, p = !1) {
            u && [
                ...u
            ].forEach((g)=>o(f, g, p));
        }
        function o(u, f, p) {
            if (f) {
                var g, x, S;
                if (f.__r3f && (f.__r3f.parent = null), (g = u.__r3f) != null && g.objects && (u.__r3f.objects = u.__r3f.objects.filter((T)=>T !== f)), (x = f.__r3f) != null && x.attach) n4(u, f, f.__r3f.attach);
                else if (f.isObject3D && u.isObject3D) {
                    var _;
                    u.remove(f), (_ = f.__r3f) != null && _.root && I_e(_1(f), f);
                }
                const M = (S = f.__r3f) == null ? void 0 : S.primitive, E = !M && (p === void 0 ? f.dispose !== null : p);
                if (!M) {
                    var b;
                    s((b = f.__r3f) == null ? void 0 : b.objects, f, E), s(f.children, f, E);
                }
                if (delete f.__r3f, E && f.dispose && f.type !== "Scene") {
                    const T = ()=>{
                        try {
                            f.dispose();
                        } catch  {}
                    };
                    typeof IS_REACT_ACT_ENVIRONMENT > "u" ? Zz.unstable_scheduleCallback(Zz.unstable_IdlePriority, T) : T();
                }
                ey(u);
            }
        }
        function a(u, f, p, g) {
            var x;
            const S = (x = u.__r3f) == null ? void 0 : x.parent;
            if (!S) return;
            const _ = n(f, p, u.__r3f.root);
            if (u.children) {
                for (const b of u.children)b.__r3f && r(_, b);
                u.children = u.children.filter((b)=>!b.__r3f);
            }
            u.__r3f.objects.forEach((b)=>r(_, b)), u.__r3f.objects = [], u.__r3f.autoRemovedBeforeAppend || o(S, u), _.parent && (_.__r3f.autoRemovedBeforeAppend = !0), r(S, _), _.raycast && _.__r3f.eventCount && _1(_).getState().internal.interaction.push(_), [
                g,
                g.alternate
            ].forEach((b)=>{
                b !== null && (b.stateNode = _, b.ref && (typeof b.ref == "function" ? b.ref(_) : b.ref.current = _));
            });
        }
        const l = ()=>{};
        return {
            reconciler: x_e({
                createInstance: n,
                removeChild: o,
                appendChild: r,
                appendInitialChild: r,
                insertBefore: i,
                supportsMutation: !0,
                isPrimaryRenderer: !1,
                supportsPersistence: !1,
                supportsHydration: !1,
                noTimeout: -1,
                appendChildToContainer: (u, f)=>{
                    if (!f) return;
                    const p = u.getState().scene;
                    p.__r3f && (p.__r3f.root = u, r(p, f));
                },
                removeChildFromContainer: (u, f)=>{
                    f && o(u.getState().scene, f);
                },
                insertInContainerBefore: (u, f, p)=>{
                    if (!f || !p) return;
                    const g = u.getState().scene;
                    g.__r3f && i(g, f, p);
                },
                getRootHostContext: ()=>null,
                getChildHostContext: (u)=>u,
                finalizeInitialChildren (u) {
                    var f;
                    return !!((f = u?.__r3f) != null ? f : {}).handlers;
                },
                prepareUpdate (u, f, p, g) {
                    var x;
                    if (((x = u?.__r3f) != null ? x : {}).primitive && g.object && g.object !== u) return [
                        !0
                    ];
                    {
                        const { args: _ = [], children: b, ...M } = g, { args: E = [], children: T, ...k } = p;
                        if (!Array.isArray(_)) throw new Error("R3F: the args prop must be an array!");
                        if (_.some((D, L)=>D !== E[L])) return [
                            !0
                        ];
                        const N = GG(u, M, k, !0);
                        return N.changes.length ? [
                            !1,
                            N
                        ] : null;
                    }
                },
                commitUpdate (u, [f, p], g, x, S, _) {
                    f ? a(u, g, S, _) : PN(u, p);
                },
                commitMount (u, f, p, g) {
                    var x;
                    const S = (x = u.__r3f) != null ? x : {};
                    u.raycast && S.handlers && S.eventCount && _1(u).getState().internal.interaction.push(u);
                },
                getPublicInstance: (u)=>u,
                prepareForCommit: ()=>null,
                preparePortalMount: (u)=>Qg(u.getState().scene),
                resetAfterCommit: ()=>{},
                shouldSetTextContent: ()=>!1,
                clearContainer: ()=>!1,
                hideInstance (u) {
                    var f;
                    const { attach: p, parent: g } = (f = u.__r3f) != null ? f : {};
                    p && g && n4(g, u, p), u.isObject3D && (u.visible = !1), ey(u);
                },
                unhideInstance (u, f) {
                    var p;
                    const { attach: g, parent: x } = (p = u.__r3f) != null ? p : {};
                    g && x && NN(x, u, g), (u.isObject3D && f.visible == null || f.visible) && (u.visible = !0), ey(u);
                },
                createTextInstance: l,
                hideTextInstance: l,
                unhideTextInstance: l,
                getCurrentEventPriority: ()=>e ? e() : py.DefaultEventPriority,
                beforeActiveInstanceBlur: ()=>{},
                afterActiveInstanceBlur: ()=>{},
                detachDeletedInstance: ()=>{},
                now: typeof performance < "u" && Ur.fun(performance.now) ? performance.now : Ur.fun(Date.now) ? Date.now : ()=>0,
                scheduleTimeout: Ur.fun(setTimeout) ? setTimeout : void 0,
                cancelTimeout: Ur.fun(clearTimeout) ? clearTimeout : void 0
            }),
            applyProps: PN
        };
    }
    var Jz, Qz;
    const AN = (t)=>"colorSpace" in t || "outputColorSpace" in t, zG = ()=>{
        var t;
        return (t = W2.ColorManagement) != null ? t : null;
    }, VG = (t)=>t && t.isOrthographicCamera, __e = (t)=>t && t.hasOwnProperty("current"), ww = typeof window < "u" && ((Jz = window.document) != null && Jz.createElement || ((Qz = window.navigator) == null ? void 0 : Qz.product) === "ReactNative") ? X.useLayoutEffect : X.useEffect;
    function WG(t) {
        const e = X.useRef(t);
        return ww(()=>void (e.current = t), [
            t
        ]), e;
    }
    function S_e({ set: t }) {
        return ww(()=>(t(new Promise(()=>null)), ()=>t(!1)), [
            t
        ]), null;
    }
    class qG extends X.Component {
        constructor(...e){
            super(...e), this.state = {
                error: !1
            };
        }
        componentDidCatch(e) {
            this.props.set(e);
        }
        render() {
            return this.state.error ? null : this.props.children;
        }
    }
    qG.getDerivedStateFromError = ()=>({
            error: !0
        });
    const HG = "__default", e4 = new Map, E_e = (t)=>t && !!t.memoized && !!t.changes;
    function $G(t) {
        var e;
        const n = typeof window < "u" ? (e = window.devicePixelRatio) != null ? e : 2 : 1;
        return Array.isArray(t) ? Math.min(Math.max(t[0], n), t[1]) : t;
    }
    const Fx = (t)=>{
        var e;
        return (e = t.__r3f) == null ? void 0 : e.root.getState();
    };
    function _1(t) {
        let e = t.__r3f.root;
        for(; e.getState().previousRoot;)e = e.getState().previousRoot;
        return e;
    }
    const Ur = {
        obj: (t)=>t === Object(t) && !Ur.arr(t) && typeof t != "function",
        fun: (t)=>typeof t == "function",
        str: (t)=>typeof t == "string",
        num: (t)=>typeof t == "number",
        boo: (t)=>typeof t == "boolean",
        und: (t)=>t === void 0,
        arr: (t)=>Array.isArray(t),
        equ (t, e, { arrays: n = "shallow", objects: r = "reference", strict: i = !0 } = {}) {
            if (typeof t != typeof e || !!t != !!e) return !1;
            if (Ur.str(t) || Ur.num(t) || Ur.boo(t)) return t === e;
            const s = Ur.obj(t);
            if (s && r === "reference") return t === e;
            const o = Ur.arr(t);
            if (o && n === "reference") return t === e;
            if ((o || s) && t === e) return !0;
            let a;
            for(a in t)if (!(a in e)) return !1;
            if (s && n === "shallow" && r === "shallow") {
                for(a in i ? e : t)if (!Ur.equ(t[a], e[a], {
                    strict: i,
                    objects: "reference"
                })) return !1;
            } else for(a in i ? e : t)if (t[a] !== e[a]) return !1;
            if (Ur.und(a)) {
                if (o && t.length === 0 && e.length === 0 || s && Object.keys(t).length === 0 && Object.keys(e).length === 0) return !0;
                if (t !== e) return !1;
            }
            return !0;
        }
    };
    function M_e(t) {
        t.dispose && t.type !== "Scene" && t.dispose();
        for(const e in t)e.dispose == null || e.dispose(), delete t[e];
    }
    function Qg(t, e) {
        const n = t;
        return n.__r3f = {
            type: "",
            root: null,
            previousAttach: null,
            memoizedProps: {},
            eventCount: 0,
            handlers: {},
            objects: [],
            parent: null,
            ...e
        }, t;
    }
    function Ek(t, e) {
        let n = t;
        if (e.includes("-")) {
            const r = e.split("-"), i = r.pop();
            return n = r.reduce((s, o)=>s[o], t), {
                target: n,
                key: i
            };
        } else return {
            target: n,
            key: e
        };
    }
    const t4 = /-\d+$/;
    function NN(t, e, n) {
        if (Ur.str(n)) {
            if (t4.test(n)) {
                const s = n.replace(t4, ""), { target: o, key: a } = Ek(t, s);
                Array.isArray(o[a]) || (o[a] = []);
            }
            const { target: r, key: i } = Ek(t, n);
            e.__r3f.previousAttach = r[i], r[i] = e;
        } else e.__r3f.previousAttach = n(t, e);
    }
    function n4(t, e, n) {
        var r, i;
        if (Ur.str(n)) {
            const { target: s, key: o } = Ek(t, n), a = e.__r3f.previousAttach;
            a === void 0 ? delete s[o] : s[o] = a;
        } else (r = e.__r3f) == null || r.previousAttach == null || r.previousAttach(t, e);
        (i = e.__r3f) == null || delete i.previousAttach;
    }
    function GG(t, { children: e, key: n, ref: r, ...i }, { children: s, key: o, ref: a, ...l } = {}, c = !1) {
        const u = t.__r3f, f = Object.entries(i), p = [];
        if (c) {
            const x = Object.keys(l);
            for(let S = 0; S < x.length; S++)i.hasOwnProperty(x[S]) || f.unshift([
                x[S],
                HG + "remove"
            ]);
        }
        f.forEach(([x, S])=>{
            var _;
            if ((_ = t.__r3f) != null && _.primitive && x === "object" || Ur.equ(S, l[x])) return;
            if (/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(x)) return p.push([
                x,
                S,
                !0,
                []
            ]);
            let b = [];
            x.includes("-") && (b = x.split("-")), p.push([
                x,
                S,
                !1,
                b
            ]);
            for(const M in i){
                const E = i[M];
                M.startsWith(`${x}-`) && p.push([
                    M,
                    E,
                    !1,
                    M.split("-")
                ]);
            }
        });
        const g = {
            ...i
        };
        return u != null && u.memoizedProps && u != null && u.memoizedProps.args && (g.args = u.memoizedProps.args), u != null && u.memoizedProps && u != null && u.memoizedProps.attach && (g.attach = u.memoizedProps.attach), {
            memoized: g,
            changes: p
        };
    }
    function PN(t, e) {
        var n;
        const r = t.__r3f, i = r?.root, s = i == null || i.getState == null ? void 0 : i.getState(), { memoized: o, changes: a } = E_e(e) ? e : GG(t, e), l = r?.eventCount;
        t.__r3f && (t.__r3f.memoizedProps = o);
        for(let p = 0; p < a.length; p++){
            let [g, x, S, _] = a[p];
            if (AN(t)) {
                const T = "srgb", k = "srgb-linear";
                g === "encoding" ? (g = "colorSpace", x = x === 3001 ? T : k) : g === "outputEncoding" && (g = "outputColorSpace", x = x === 3001 ? T : k);
            }
            let b = t, M = b[g];
            if (_.length && (M = _.reduce((E, T)=>E[T], t), !(M && M.set))) {
                const [E, ...T] = _.reverse();
                b = T.reverse().reduce((k, N)=>k[N], t), g = E;
            }
            if (x === HG + "remove") if (b.constructor) {
                let E = e4.get(b.constructor);
                E || (E = new b.constructor, e4.set(b.constructor, E)), x = E[g];
            } else x = 0;
            if (S && r) x ? r.handlers[g] = x : delete r.handlers[g], r.eventCount = Object.keys(r.handlers).length;
            else if (M && M.set && (M.copy || M instanceof qp)) {
                if (Array.isArray(x)) M.fromArray ? M.fromArray(x) : M.set(...x);
                else if (M.copy && x && x.constructor && M.constructor === x.constructor) M.copy(x);
                else if (x !== void 0) {
                    var c;
                    const E = (c = M) == null ? void 0 : c.isColor;
                    !E && M.setScalar ? M.setScalar(x) : M instanceof qp && x instanceof qp ? M.mask = x.mask : M.set(x), !zG() && s && !s.linear && E && M.convertSRGBToLinear();
                }
            } else {
                var u;
                if (b[g] = x, (u = b[g]) != null && u.isTexture && b[g].format === Hs && b[g].type === sc && s) {
                    const E = b[g];
                    AN(E) && AN(s.gl) ? E.colorSpace = s.gl.outputColorSpace : E.encoding = s.gl.outputEncoding;
                }
            }
            ey(t);
        }
        if (r && r.parent && t.raycast && l !== r.eventCount) {
            const p = _1(t).getState().internal, g = p.interaction.indexOf(t);
            g > -1 && p.interaction.splice(g, 1), r.eventCount && p.interaction.push(t);
        }
        return !(a.length === 1 && a[0][0] === "onUpdate") && a.length && (n = t.__r3f) != null && n.parent && Mk(t), t;
    }
    function ey(t) {
        var e, n;
        const r = (e = t.__r3f) == null || (n = e.root) == null || n.getState == null ? void 0 : n.getState();
        r && r.internal.frames === 0 && r.invalidate();
    }
    function Mk(t) {
        t.onUpdate == null || t.onUpdate(t);
    }
    function T_e(t, e) {
        t.manual || (VG(t) ? (t.left = e.width / -2, t.right = e.width / 2, t.top = e.height / 2, t.bottom = e.height / -2) : t.aspect = e.width / e.height, t.updateProjectionMatrix(), t.updateMatrixWorld());
    }
    function VS(t) {
        return (t.eventObject || t.object).uuid + "/" + t.index + t.instanceId;
    }
    function C_e() {
        var t;
        const e = typeof self < "u" && self || typeof window < "u" && window;
        if (!e) return py.DefaultEventPriority;
        switch((t = e.event) == null ? void 0 : t.type){
            case "click":
            case "contextmenu":
            case "dblclick":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
                return py.DiscreteEventPriority;
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerenter":
            case "pointerleave":
            case "wheel":
                return py.ContinuousEventPriority;
            default:
                return py.DefaultEventPriority;
        }
    }
    function XG(t, e, n, r) {
        const i = n.get(e);
        i && (n.delete(e), n.size === 0 && (t.delete(r), i.target.releasePointerCapture(r)));
    }
    function I_e(t, e) {
        const { internal: n } = t.getState();
        n.interaction = n.interaction.filter((r)=>r !== e), n.initialHits = n.initialHits.filter((r)=>r !== e), n.hovered.forEach((r, i)=>{
            (r.eventObject === e || r.object === e) && n.hovered.delete(i);
        }), n.capturedMap.forEach((r, i)=>{
            XG(n.capturedMap, e, r, i);
        });
    }
    function R_e(t) {
        function e(l) {
            const { internal: c } = t.getState(), u = l.offsetX - c.initialClick[0], f = l.offsetY - c.initialClick[1];
            return Math.round(Math.sqrt(u * u + f * f));
        }
        function n(l) {
            return l.filter((c)=>[
                    "Move",
                    "Over",
                    "Enter",
                    "Out",
                    "Leave"
                ].some((u)=>{
                    var f;
                    return (f = c.__r3f) == null ? void 0 : f.handlers["onPointer" + u];
                }));
        }
        function r(l, c) {
            const u = t.getState(), f = new Set, p = [], g = c ? c(u.internal.interaction) : u.internal.interaction;
            for(let b = 0; b < g.length; b++){
                const M = Fx(g[b]);
                M && (M.raycaster.camera = void 0);
            }
            u.previousRoot || u.events.compute == null || u.events.compute(l, u);
            function x(b) {
                const M = Fx(b);
                if (!M || !M.events.enabled || M.raycaster.camera === null) return [];
                if (M.raycaster.camera === void 0) {
                    var E;
                    M.events.compute == null || M.events.compute(l, M, (E = M.previousRoot) == null ? void 0 : E.getState()), M.raycaster.camera === void 0 && (M.raycaster.camera = null);
                }
                return M.raycaster.camera ? M.raycaster.intersectObject(b, !0) : [];
            }
            let S = g.flatMap(x).sort((b, M)=>{
                const E = Fx(b.object), T = Fx(M.object);
                return !E || !T ? b.distance - M.distance : T.events.priority - E.events.priority || b.distance - M.distance;
            }).filter((b)=>{
                const M = VS(b);
                return f.has(M) ? !1 : (f.add(M), !0);
            });
            u.events.filter && (S = u.events.filter(S, u));
            for (const b of S){
                let M = b.object;
                for(; M;){
                    var _;
                    (_ = M.__r3f) != null && _.eventCount && p.push({
                        ...b,
                        eventObject: M
                    }), M = M.parent;
                }
            }
            if ("pointerId" in l && u.internal.capturedMap.has(l.pointerId)) for (let b of u.internal.capturedMap.get(l.pointerId).values())f.has(VS(b.intersection)) || p.push(b.intersection);
            return p;
        }
        function i(l, c, u, f) {
            const p = t.getState();
            if (l.length) {
                const g = {
                    stopped: !1
                };
                for (const x of l){
                    const S = Fx(x.object) || p, { raycaster: _, pointer: b, camera: M, internal: E } = S, T = new ye(b.x, b.y, 0).unproject(M), k = (A)=>{
                        var P, B;
                        return (P = (B = E.capturedMap.get(A)) == null ? void 0 : B.has(x.eventObject)) != null ? P : !1;
                    }, N = (A)=>{
                        const P = {
                            intersection: x,
                            target: c.target
                        };
                        E.capturedMap.has(A) ? E.capturedMap.get(A).set(x.eventObject, P) : E.capturedMap.set(A, new Map([
                            [
                                x.eventObject,
                                P
                            ]
                        ])), c.target.setPointerCapture(A);
                    }, D = (A)=>{
                        const P = E.capturedMap.get(A);
                        P && XG(E.capturedMap, x.eventObject, P, A);
                    };
                    let L = {};
                    for(let A in c){
                        let P = c[A];
                        typeof P != "function" && (L[A] = P);
                    }
                    let R = {
                        ...x,
                        ...L,
                        pointer: b,
                        intersections: l,
                        stopped: g.stopped,
                        delta: u,
                        unprojectedPoint: T,
                        ray: _.ray,
                        camera: M,
                        stopPropagation () {
                            const A = "pointerId" in c && E.capturedMap.get(c.pointerId);
                            if ((!A || A.has(x.eventObject)) && (R.stopped = g.stopped = !0, E.hovered.size && Array.from(E.hovered.values()).find((P)=>P.eventObject === x.eventObject))) {
                                const P = l.slice(0, l.indexOf(x));
                                s([
                                    ...P,
                                    x
                                ]);
                            }
                        },
                        target: {
                            hasPointerCapture: k,
                            setPointerCapture: N,
                            releasePointerCapture: D
                        },
                        currentTarget: {
                            hasPointerCapture: k,
                            setPointerCapture: N,
                            releasePointerCapture: D
                        },
                        nativeEvent: c
                    };
                    if (f(R), g.stopped === !0) break;
                }
            }
            return l;
        }
        function s(l) {
            const { internal: c } = t.getState();
            for (const u of c.hovered.values())if (!l.length || !l.find((f)=>f.object === u.object && f.index === u.index && f.instanceId === u.instanceId)) {
                const p = u.eventObject.__r3f, g = p?.handlers;
                if (c.hovered.delete(VS(u)), p != null && p.eventCount) {
                    const x = {
                        ...u,
                        intersections: l
                    };
                    g.onPointerOut == null || g.onPointerOut(x), g.onPointerLeave == null || g.onPointerLeave(x);
                }
            }
        }
        function o(l, c) {
            for(let u = 0; u < c.length; u++){
                const f = c[u].__r3f;
                f == null || f.handlers.onPointerMissed == null || f.handlers.onPointerMissed(l);
            }
        }
        function a(l) {
            switch(l){
                case "onPointerLeave":
                case "onPointerCancel":
                    return ()=>s([]);
                case "onLostPointerCapture":
                    return (c)=>{
                        const { internal: u } = t.getState();
                        "pointerId" in c && u.capturedMap.has(c.pointerId) && requestAnimationFrame(()=>{
                            u.capturedMap.has(c.pointerId) && (u.capturedMap.delete(c.pointerId), s([]));
                        });
                    };
            }
            return function(u) {
                const { onPointerMissed: f, internal: p } = t.getState();
                p.lastEvent.current = u;
                const g = l === "onPointerMove", x = l === "onClick" || l === "onContextMenu" || l === "onDoubleClick", _ = r(u, g ? n : void 0), b = x ? e(u) : 0;
                l === "onPointerDown" && (p.initialClick = [
                    u.offsetX,
                    u.offsetY
                ], p.initialHits = _.map((E)=>E.eventObject)), x && !_.length && b <= 2 && (o(u, p.interaction), f && f(u)), g && s(_);
                function M(E) {
                    const T = E.eventObject, k = T.__r3f, N = k?.handlers;
                    if (k != null && k.eventCount) if (g) {
                        if (N.onPointerOver || N.onPointerEnter || N.onPointerOut || N.onPointerLeave) {
                            const D = VS(E), L = p.hovered.get(D);
                            L ? L.stopped && E.stopPropagation() : (p.hovered.set(D, E), N.onPointerOver == null || N.onPointerOver(E), N.onPointerEnter == null || N.onPointerEnter(E));
                        }
                        N.onPointerMove == null || N.onPointerMove(E);
                    } else {
                        const D = N[l];
                        D ? (!x || p.initialHits.includes(T)) && (o(u, p.interaction.filter((L)=>!p.initialHits.includes(L))), D(E)) : x && p.initialHits.includes(T) && o(u, p.interaction.filter((L)=>!p.initialHits.includes(L)));
                    }
                }
                i(_, u, b, M);
            };
        }
        return {
            handlePointer: a
        };
    }
    const KG = (t)=>!!(t != null && t.render), YG = X.createContext(null), A_e = (t, e)=>{
        const n = p_e((a, l)=>{
            const c = new ye, u = new ye, f = new ye;
            function p(b = l().camera, M = u, E = l().size) {
                const { width: T, height: k, top: N, left: D } = E, L = T / k;
                M.isVector3 ? f.copy(M) : f.set(...M);
                const R = b.getWorldPosition(c).distanceTo(f);
                if (VG(b)) return {
                    width: T / b.zoom,
                    height: k / b.zoom,
                    top: N,
                    left: D,
                    factor: 1,
                    distance: R,
                    aspect: L
                };
                {
                    const A = b.fov * Math.PI / 180, P = 2 * Math.tan(A / 2) * R, B = P * (T / k);
                    return {
                        width: B,
                        height: P,
                        top: N,
                        left: D,
                        factor: T / B,
                        distance: R,
                        aspect: L
                    };
                }
            }
            let g;
            const x = (b)=>a((M)=>({
                        performance: {
                            ...M.performance,
                            current: b
                        }
                    })), S = new ot;
            return {
                set: a,
                get: l,
                gl: null,
                camera: null,
                raycaster: null,
                events: {
                    priority: 1,
                    enabled: !0,
                    connected: !1
                },
                xr: null,
                scene: null,
                invalidate: (b = 1)=>t(l(), b),
                advance: (b, M)=>e(b, M, l()),
                legacy: !1,
                linear: !1,
                flat: !1,
                controls: null,
                clock: new F2,
                pointer: S,
                mouse: S,
                frameloop: "always",
                onPointerMissed: void 0,
                performance: {
                    current: 1,
                    min: .5,
                    max: 1,
                    debounce: 200,
                    regress: ()=>{
                        const b = l();
                        g && clearTimeout(g), b.performance.current !== b.performance.min && x(b.performance.min), g = setTimeout(()=>x(l().performance.max), b.performance.debounce);
                    }
                },
                size: {
                    width: 0,
                    height: 0,
                    top: 0,
                    left: 0,
                    updateStyle: !1
                },
                viewport: {
                    initialDpr: 0,
                    dpr: 0,
                    width: 0,
                    height: 0,
                    top: 0,
                    left: 0,
                    aspect: 0,
                    distance: 0,
                    factor: 0,
                    getCurrentViewport: p
                },
                setEvents: (b)=>a((M)=>({
                            ...M,
                            events: {
                                ...M.events,
                                ...b
                            }
                        })),
                setSize: (b, M, E, T, k)=>{
                    const N = l().camera, D = {
                        width: b,
                        height: M,
                        top: T || 0,
                        left: k || 0,
                        updateStyle: E
                    };
                    a((L)=>({
                            size: D,
                            viewport: {
                                ...L.viewport,
                                ...p(N, u, D)
                            }
                        }));
                },
                setDpr: (b)=>a((M)=>{
                        const E = $G(b);
                        return {
                            viewport: {
                                ...M.viewport,
                                dpr: E,
                                initialDpr: M.viewport.initialDpr || E
                            }
                        };
                    }),
                setFrameloop: (b = "always")=>{
                    const M = l().clock;
                    M.stop(), M.elapsedTime = 0, b !== "never" && (M.start(), M.elapsedTime = 0), a(()=>({
                            frameloop: b
                        }));
                },
                previousRoot: void 0,
                internal: {
                    active: !1,
                    priority: 0,
                    frames: 0,
                    lastEvent: X.createRef(),
                    interaction: [],
                    hovered: new Map,
                    subscribers: [],
                    initialClick: [
                        0,
                        0
                    ],
                    initialHits: [],
                    capturedMap: new Map,
                    subscribe: (b, M, E)=>{
                        const T = l().internal;
                        return T.priority = T.priority + (M > 0 ? 1 : 0), T.subscribers.push({
                            ref: b,
                            priority: M,
                            store: E
                        }), T.subscribers = T.subscribers.sort((k, N)=>k.priority - N.priority), ()=>{
                            const k = l().internal;
                            k != null && k.subscribers && (k.priority = k.priority - (M > 0 ? 1 : 0), k.subscribers = k.subscribers.filter((N)=>N.ref !== b));
                        };
                    }
                }
            };
        }), r = n.getState();
        let i = r.size, s = r.viewport.dpr, o = r.camera;
        return n.subscribe(()=>{
            const { camera: a, size: l, viewport: c, gl: u, set: f } = n.getState();
            if (l.width !== i.width || l.height !== i.height || c.dpr !== s) {
                var p;
                i = l, s = c.dpr, T_e(a, l), u.setPixelRatio(c.dpr);
                const g = (p = l.updateStyle) != null ? p : typeof HTMLCanvasElement < "u" && u.domElement instanceof HTMLCanvasElement;
                u.setSize(l.width, l.height, g);
            }
            a !== o && (o = a, f((g)=>({
                    viewport: {
                        ...g.viewport,
                        ...g.viewport.getCurrentViewport(a)
                    }
                })));
        }), n.subscribe((a)=>t(a)), n;
    };
    function ZG(t, e) {
        const n = {
            callback: t
        };
        return e.add(n), ()=>void e.delete(n);
    }
    let WS, JG = new Set, QG = new Set, N_e = new Set;
    const P_e = (t)=>ZG(t, JG), k_e = (t)=>ZG(t, QG);
    function kN(t, e) {
        if (t.size) for (const { callback: n } of t.values())n(e);
    }
    function jx(t, e) {
        switch(t){
            case "before":
                return kN(JG, e);
            case "after":
                return kN(QG, e);
            case "tail":
                return kN(N_e, e);
        }
    }
    let ON, LN;
    function DN(t, e, n) {
        let r = e.clock.getDelta();
        for(e.frameloop === "never" && typeof t == "number" && (r = t - e.clock.elapsedTime, e.clock.oldTime = e.clock.elapsedTime, e.clock.elapsedTime = t), ON = e.internal.subscribers, WS = 0; WS < ON.length; WS++)LN = ON[WS], LN.ref.current(LN.store.getState(), r, n);
        return !e.internal.priority && e.gl.render && e.gl.render(e.scene, e.camera), e.internal.frames = Math.max(0, e.internal.frames - 1), e.frameloop === "always" ? 1 : e.internal.frames;
    }
    function O_e(t) {
        let e = !1, n = !1, r, i, s;
        function o(c) {
            i = requestAnimationFrame(o), e = !0, r = 0, jx("before", c), n = !0;
            for (const f of t.values()){
                var u;
                s = f.store.getState(), s.internal.active && (s.frameloop === "always" || s.internal.frames > 0) && !((u = s.gl.xr) != null && u.isPresenting) && (r += DN(c, s));
            }
            if (n = !1, jx("after", c), r === 0) return jx("tail", c), e = !1, cancelAnimationFrame(i);
        }
        function a(c, u = 1) {
            var f;
            if (!c) return t.forEach((p)=>a(p.store.getState(), u));
            (f = c.gl.xr) != null && f.isPresenting || !c.internal.active || c.frameloop === "never" || (u > 1 ? c.internal.frames = Math.min(60, c.internal.frames + u) : n ? c.internal.frames = 2 : c.internal.frames = 1, e || (e = !0, requestAnimationFrame(o)));
        }
        function l(c, u = !0, f, p) {
            if (u && jx("before", c), f) DN(c, f, p);
            else for (const g of t.values())DN(c, g.store.getState());
            u && jx("after", c);
        }
        return {
            loop: o,
            invalidate: a,
            advance: l
        };
    }
    function e8() {
        const t = X.useContext(YG);
        if (!t) throw new Error("R3F: Hooks can only be used within the Canvas component!");
        return t;
    }
    function Ac(t = (n)=>n, e) {
        return e8()(t, e);
    }
    function L_e(t, e = 0) {
        const n = e8(), r = n.getState().internal.subscribe, i = WG(t);
        return ww(()=>r(i, e, n), [
            e,
            r,
            n
        ]), null;
    }
    const nv = new Map, { invalidate: r4, advance: i4 } = O_e(nv), { reconciler: DM, applyProps: Vg } = w_e(nv, C_e), Wg = {
        objects: "shallow",
        strict: !1
    }, D_e = (t, e)=>{
        const n = typeof t == "function" ? t(e) : t;
        return KG(n) ? n : new BG({
            powerPreference: "high-performance",
            canvas: e,
            antialias: !0,
            alpha: !0,
            ...t
        });
    };
    function F_e(t, e) {
        const n = typeof HTMLCanvasElement < "u" && t instanceof HTMLCanvasElement;
        if (e) {
            const { width: r, height: i, top: s, left: o, updateStyle: a = n } = e;
            return {
                width: r,
                height: i,
                top: s,
                left: o,
                updateStyle: a
            };
        } else if (typeof HTMLCanvasElement < "u" && t instanceof HTMLCanvasElement && t.parentElement) {
            const { width: r, height: i, top: s, left: o } = t.parentElement.getBoundingClientRect();
            return {
                width: r,
                height: i,
                top: s,
                left: o,
                updateStyle: n
            };
        } else if (typeof OffscreenCanvas < "u" && t instanceof OffscreenCanvas) return {
            width: t.width,
            height: t.height,
            top: 0,
            left: 0,
            updateStyle: n
        };
        return {
            width: 0,
            height: 0,
            top: 0,
            left: 0
        };
    }
    function j_e(t) {
        const e = nv.get(t), n = e?.fiber, r = e?.store;
        e && console.warn("R3F.createRoot should only be called once!");
        const i = typeof reportError == "function" ? reportError : console.error, s = r || A_e(r4, i4), o = n || DM.createContainer(s, py.ConcurrentRoot, null, !1, null, "", i, null);
        e || nv.set(t, {
            fiber: o,
            store: s
        });
        let a, l = !1, c;
        return {
            configure (u = {}) {
                let { gl: f, size: p, scene: g, events: x, onCreated: S, shadows: _ = !1, linear: b = !1, flat: M = !1, legacy: E = !1, orthographic: T = !1, frameloop: k = "always", dpr: N = [
                    1,
                    2
                ], performance: D, raycaster: L, camera: R, onPointerMissed: A } = u, P = s.getState(), B = P.gl;
                P.gl || P.set({
                    gl: B = D_e(f, t)
                });
                let U = P.raycaster;
                U || P.set({
                    raycaster: U = new NG
                });
                const { params: j, ...K } = L || {};
                if (Ur.equ(K, U, Wg) || Vg(U, {
                    ...K
                }), Ur.equ(j, U.params, Wg) || Vg(U, {
                    params: {
                        ...U.params,
                        ...j
                    }
                }), !P.camera || P.camera === c && !Ur.equ(c, R, Wg)) {
                    c = R;
                    const Q = R instanceof hw, Y = Q ? R : T ? new ad(0, 0, 0, 0, .1, 1e3) : new Ei(75, 0, .1, 1e3);
                    Q || (Y.position.z = 5, R && (Vg(Y, R), ("aspect" in R || "left" in R || "right" in R || "bottom" in R || "top" in R) && (Y.manual = !0, Y.updateProjectionMatrix())), !P.camera && !(R != null && R.rotation) && Y.lookAt(0, 0, 0)), P.set({
                        camera: Y
                    }), U.camera = Y;
                }
                if (!P.scene) {
                    let Q;
                    g != null && g.isScene ? Q = g : (Q = new y2, g && Vg(Q, g)), P.set({
                        scene: Qg(Q)
                    });
                }
                if (!P.xr) {
                    var q;
                    const Q = (ue, ie)=>{
                        const he = s.getState();
                        he.frameloop !== "never" && i4(ue, !0, he, ie);
                    }, Y = ()=>{
                        const ue = s.getState();
                        ue.gl.xr.enabled = ue.gl.xr.isPresenting, ue.gl.xr.setAnimationLoop(ue.gl.xr.isPresenting ? Q : null), ue.gl.xr.isPresenting || r4(ue);
                    }, le = {
                        connect () {
                            const ue = s.getState().gl;
                            ue.xr.addEventListener("sessionstart", Y), ue.xr.addEventListener("sessionend", Y);
                        },
                        disconnect () {
                            const ue = s.getState().gl;
                            ue.xr.removeEventListener("sessionstart", Y), ue.xr.removeEventListener("sessionend", Y);
                        }
                    };
                    typeof ((q = B.xr) == null ? void 0 : q.addEventListener) == "function" && le.connect(), P.set({
                        xr: le
                    });
                }
                if (B.shadowMap) {
                    const Q = B.shadowMap.enabled, Y = B.shadowMap.type;
                    if (B.shadowMap.enabled = !!_, Ur.boo(_)) B.shadowMap.type = S0;
                    else if (Ur.str(_)) {
                        var te;
                        const le = {
                            basic: V$,
                            percentage: FT,
                            soft: S0,
                            variance: Vl
                        };
                        B.shadowMap.type = (te = le[_]) != null ? te : S0;
                    } else Ur.obj(_) && Object.assign(B.shadowMap, _);
                    (Q !== B.shadowMap.enabled || Y !== B.shadowMap.type) && (B.shadowMap.needsUpdate = !0);
                }
                const W = zG();
                W && ("enabled" in W ? W.enabled = !E : "legacyMode" in W && (W.legacyMode = E)), l || Vg(B, {
                    outputEncoding: b ? 3e3 : 3001,
                    toneMapping: M ? Vc : jT
                }), P.legacy !== E && P.set(()=>({
                        legacy: E
                    })), P.linear !== b && P.set(()=>({
                        linear: b
                    })), P.flat !== M && P.set(()=>({
                        flat: M
                    })), f && !Ur.fun(f) && !KG(f) && !Ur.equ(f, B, Wg) && Vg(B, f), x && !P.events.handlers && P.set({
                    events: x(s)
                });
                const J = F_e(t, p);
                return Ur.equ(J, P.size, Wg) || P.setSize(J.width, J.height, J.updateStyle, J.top, J.left), N && P.viewport.dpr !== $G(N) && P.setDpr(N), P.frameloop !== k && P.setFrameloop(k), P.onPointerMissed || P.set({
                    onPointerMissed: A
                }), D && !Ur.equ(D, P.performance, Wg) && P.set((Q)=>({
                        performance: {
                            ...Q.performance,
                            ...D
                        }
                    })), a = S, l = !0, this;
            },
            render (u) {
                return l || this.configure(), DM.updateContainer(v.jsx(B_e, {
                    store: s,
                    children: u,
                    onCreated: a,
                    rootElement: t
                }), o, null, ()=>{}), s;
            },
            unmount () {
                t8(t);
            }
        };
    }
    function B_e({ store: t, children: e, onCreated: n, rootElement: r }) {
        return ww(()=>{
            const i = t.getState();
            i.set((s)=>({
                    internal: {
                        ...s.internal,
                        active: !0
                    }
                })), n && n(i), t.getState().events.connected || i.events.connect == null || i.events.connect(r);
        }, []), v.jsx(YG.Provider, {
            value: t,
            children: e
        });
    }
    function t8(t, e) {
        const n = nv.get(t), r = n?.fiber;
        if (r) {
            const i = n?.store.getState();
            i && (i.internal.active = !1), DM.updateContainer(null, r, null, ()=>{
                i && setTimeout(()=>{
                    try {
                        var s, o, a, l;
                        i.events.disconnect == null || i.events.disconnect(), (s = i.gl) == null || (o = s.renderLists) == null || o.dispose == null || o.dispose(), (a = i.gl) == null || a.forceContextLoss == null || a.forceContextLoss(), (l = i.gl) != null && l.xr && i.xr.disconnect(), M_e(i), nv.delete(t);
                    } catch  {}
                }, 500);
            });
        }
    }
    DM.injectIntoDevTools({
        bundleType: 0,
        rendererPackageName: "@react-three/fiber",
        version: X.version
    });
    const FN = {
        onClick: [
            "click",
            !1
        ],
        onContextMenu: [
            "contextmenu",
            !1
        ],
        onDoubleClick: [
            "dblclick",
            !1
        ],
        onWheel: [
            "wheel",
            !0
        ],
        onPointerDown: [
            "pointerdown",
            !0
        ],
        onPointerUp: [
            "pointerup",
            !0
        ],
        onPointerLeave: [
            "pointerleave",
            !0
        ],
        onPointerMove: [
            "pointermove",
            !0
        ],
        onPointerCancel: [
            "pointercancel",
            !0
        ],
        onLostPointerCapture: [
            "lostpointercapture",
            !0
        ]
    };
    function U_e(t) {
        const { handlePointer: e } = R_e(t);
        return {
            priority: 1,
            enabled: !0,
            compute (n, r, i) {
                r.pointer.set(n.offsetX / r.size.width * 2 - 1, -(n.offsetY / r.size.height) * 2 + 1), r.raycaster.setFromCamera(r.pointer, r.camera);
            },
            connected: void 0,
            handlers: Object.keys(FN).reduce((n, r)=>({
                    ...n,
                    [r]: e(r)
                }), {}),
            update: ()=>{
                var n;
                const { events: r, internal: i } = t.getState();
                (n = i.lastEvent) != null && n.current && r.handlers && r.handlers.onPointerMove(i.lastEvent.current);
            },
            connect: (n)=>{
                var r;
                const { set: i, events: s } = t.getState();
                s.disconnect == null || s.disconnect(), i((o)=>({
                        events: {
                            ...o.events,
                            connected: n
                        }
                    })), Object.entries((r = s.handlers) != null ? r : []).forEach(([o, a])=>{
                    const [l, c] = FN[o];
                    n.addEventListener(l, a, {
                        passive: c
                    });
                });
            },
            disconnect: ()=>{
                const { set: n, events: r } = t.getState();
                if (r.connected) {
                    var i;
                    Object.entries((i = r.handlers) != null ? i : []).forEach(([s, o])=>{
                        if (r && r.connected instanceof HTMLElement) {
                            const [a] = FN[s];
                            r.connected.removeEventListener(a, o);
                        }
                    }), n((s)=>({
                            events: {
                                ...s.events,
                                connected: void 0
                            }
                        }));
                }
            }
        };
    }
    function s4(t, e) {
        let n;
        return (...r)=>{
            window.clearTimeout(n), n = window.setTimeout(()=>t(...r), e);
        };
    }
    function z_e({ debounce: t, scroll: e, polyfill: n, offsetSize: r } = {
        debounce: 0,
        scroll: !1,
        offsetSize: !1
    }) {
        const i = n || (typeof window > "u" ? class {
        } : window.ResizeObserver);
        if (!i) throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");
        const [s, o] = X.useState({
            left: 0,
            top: 0,
            width: 0,
            height: 0,
            bottom: 0,
            right: 0,
            x: 0,
            y: 0
        }), a = X.useRef({
            element: null,
            scrollContainers: null,
            resizeObserver: null,
            lastBounds: s,
            orientationHandler: null
        }), l = t ? typeof t == "number" ? t : t.scroll : null, c = t ? typeof t == "number" ? t : t.resize : null, u = X.useRef(!1);
        X.useEffect(()=>(u.current = !0, ()=>void (u.current = !1)));
        const [f, p, g] = X.useMemo(()=>{
            const b = ()=>{
                if (!a.current.element) return;
                const { left: M, top: E, width: T, height: k, bottom: N, right: D, x: L, y: R } = a.current.element.getBoundingClientRect(), A = {
                    left: M,
                    top: E,
                    width: T,
                    height: k,
                    bottom: N,
                    right: D,
                    x: L,
                    y: R
                };
                a.current.element instanceof HTMLElement && r && (A.height = a.current.element.offsetHeight, A.width = a.current.element.offsetWidth), Object.freeze(A), u.current && !H_e(a.current.lastBounds, A) && o(a.current.lastBounds = A);
            };
            return [
                b,
                c ? s4(b, c) : b,
                l ? s4(b, l) : b
            ];
        }, [
            o,
            r,
            l,
            c
        ]);
        function x() {
            a.current.scrollContainers && (a.current.scrollContainers.forEach((b)=>b.removeEventListener("scroll", g, !0)), a.current.scrollContainers = null), a.current.resizeObserver && (a.current.resizeObserver.disconnect(), a.current.resizeObserver = null), a.current.orientationHandler && ("orientation" in screen && "removeEventListener" in screen.orientation ? screen.orientation.removeEventListener("change", a.current.orientationHandler) : "onorientationchange" in window && window.removeEventListener("orientationchange", a.current.orientationHandler));
        }
        function S() {
            a.current.element && (a.current.resizeObserver = new i(g), a.current.resizeObserver.observe(a.current.element), e && a.current.scrollContainers && a.current.scrollContainers.forEach((b)=>b.addEventListener("scroll", g, {
                    capture: !0,
                    passive: !0
                })), a.current.orientationHandler = ()=>{
                g();
            }, "orientation" in screen && "addEventListener" in screen.orientation ? screen.orientation.addEventListener("change", a.current.orientationHandler) : "onorientationchange" in window && window.addEventListener("orientationchange", a.current.orientationHandler));
        }
        const _ = (b)=>{
            !b || b === a.current.element || (x(), a.current.element = b, a.current.scrollContainers = n8(b), S());
        };
        return W_e(g, !!e), V_e(p), X.useEffect(()=>{
            x(), S();
        }, [
            e,
            g,
            p
        ]), X.useEffect(()=>x, []), [
            _,
            s,
            f
        ];
    }
    function V_e(t) {
        X.useEffect(()=>{
            const e = t;
            return window.addEventListener("resize", e), ()=>void window.removeEventListener("resize", e);
        }, [
            t
        ]);
    }
    function W_e(t, e) {
        X.useEffect(()=>{
            if (e) {
                const n = t;
                return window.addEventListener("scroll", n, {
                    capture: !0,
                    passive: !0
                }), ()=>void window.removeEventListener("scroll", n, !0);
            }
        }, [
            t,
            e
        ]);
    }
    function n8(t) {
        const e = [];
        if (!t || t === document.body) return e;
        const { overflow: n, overflowX: r, overflowY: i } = window.getComputedStyle(t);
        return [
            n,
            r,
            i
        ].some((s)=>s === "auto" || s === "scroll") && e.push(t), [
            ...e,
            ...n8(t.parentElement)
        ];
    }
    const q_e = [
        "x",
        "y",
        "top",
        "bottom",
        "left",
        "right",
        "width",
        "height"
    ], H_e = (t, e)=>q_e.every((n)=>t[n] === e[n]);
    var $_e = Object.defineProperty, G_e = Object.defineProperties, X_e = Object.getOwnPropertyDescriptors, o4 = Object.getOwnPropertySymbols, K_e = Object.prototype.hasOwnProperty, Y_e = Object.prototype.propertyIsEnumerable, a4 = (t, e, n)=>e in t ? $_e(t, e, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : t[e] = n, l4 = (t, e)=>{
        for(var n in e || (e = {}))K_e.call(e, n) && a4(t, n, e[n]);
        if (o4) for (var n of o4(e))Y_e.call(e, n) && a4(t, n, e[n]);
        return t;
    }, Z_e = (t, e)=>G_e(t, X_e(e)), c4, u4;
    typeof window < "u" && ((c4 = window.document) != null && c4.createElement || ((u4 = window.navigator) == null ? void 0 : u4.product) === "ReactNative") ? X.useLayoutEffect : X.useEffect;
    function r8(t, e, n) {
        if (!t) return;
        if (n(t) === !0) return t;
        let r = t.child;
        for(; r;){
            const i = r8(r, e, n);
            if (i) return i;
            r = r.sibling;
        }
    }
    function i8(t) {
        try {
            return Object.defineProperties(t, {
                _currentRenderer: {
                    get () {
                        return null;
                    },
                    set () {}
                },
                _currentRenderer2: {
                    get () {
                        return null;
                    },
                    set () {}
                }
            });
        } catch  {
            return t;
        }
    }
    const d4 = console.error;
    console.error = function() {
        const t = [
            ...arguments
        ].join("");
        if (t?.startsWith("Warning:") && t.includes("useContext")) {
            console.error = d4;
            return;
        }
        return d4.apply(this, arguments);
    };
    const q2 = i8(X.createContext(null));
    class s8 extends X.Component {
        render() {
            return X.createElement(q2.Provider, {
                value: this._reactInternals
            }, this.props.children);
        }
    }
    function J_e() {
        const t = X.useContext(q2);
        if (t === null) throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");
        const e = X.useId();
        return X.useMemo(()=>{
            for (const r of [
                t,
                t?.alternate
            ]){
                if (!r) continue;
                const i = r8(r, !1, (s)=>{
                    let o = s.memoizedState;
                    for(; o;){
                        if (o.memoizedState === e) return !0;
                        o = o.next;
                    }
                });
                if (i) return i;
            }
        }, [
            t,
            e
        ]);
    }
    function Q_e() {
        const t = J_e(), [e] = X.useState(()=>new Map);
        e.clear();
        let n = t;
        for(; n;){
            if (n.type && typeof n.type == "object") {
                const i = n.type._context === void 0 && n.type.Provider === n.type ? n.type : n.type._context;
                i && i !== q2 && !e.has(i) && e.set(i, X.useContext(i8(i)));
            }
            n = n.return;
        }
        return e;
    }
    function eSe() {
        const t = Q_e();
        return X.useMemo(()=>Array.from(t.keys()).reduce((e, n)=>(r)=>X.createElement(e, null, X.createElement(n.Provider, Z_e(l4({}, r), {
                        value: t.get(n)
                    }))), (e)=>X.createElement(s8, l4({}, e))), [
            t
        ]);
    }
    const tSe = X.forwardRef(function({ children: e, fallback: n, resize: r, style: i, gl: s, events: o = U_e, eventSource: a, eventPrefix: l, shadows: c, linear: u, flat: f, legacy: p, orthographic: g, frameloop: x, dpr: S, performance: _, raycaster: b, camera: M, scene: E, onPointerMissed: T, onCreated: k, ...N }, D) {
        X.useMemo(()=>b_e(c_e), []);
        const L = eSe(), [R, A] = z_e({
            scroll: !0,
            debounce: {
                scroll: 50,
                resize: 0
            },
            ...r
        }), P = X.useRef(null), B = X.useRef(null);
        X.useImperativeHandle(D, ()=>P.current);
        const U = WG(T), [j, K] = X.useState(!1), [q, te] = X.useState(!1);
        if (j) throw j;
        if (q) throw q;
        const W = X.useRef(null);
        ww(()=>{
            const Q = P.current;
            A.width > 0 && A.height > 0 && Q && (W.current || (W.current = j_e(Q)), W.current.configure({
                gl: s,
                events: o,
                shadows: c,
                linear: u,
                flat: f,
                legacy: p,
                orthographic: g,
                frameloop: x,
                dpr: S,
                performance: _,
                raycaster: b,
                camera: M,
                scene: E,
                size: A,
                onPointerMissed: (...Y)=>U.current == null ? void 0 : U.current(...Y),
                onCreated: (Y)=>{
                    Y.events.connect == null || Y.events.connect(a ? __e(a) ? a.current : a : B.current), l && Y.setEvents({
                        compute: (le, ue)=>{
                            const ie = le[l + "X"], he = le[l + "Y"];
                            ue.pointer.set(ie / ue.size.width * 2 - 1, -(he / ue.size.height) * 2 + 1), ue.raycaster.setFromCamera(ue.pointer, ue.camera);
                        }
                    }), k?.(Y);
                }
            }), W.current.render(v.jsx(L, {
                children: v.jsx(qG, {
                    set: te,
                    children: v.jsx(X.Suspense, {
                        fallback: v.jsx(S_e, {
                            set: K
                        }),
                        children: e
                    })
                })
            })));
        }), X.useEffect(()=>{
            const Q = P.current;
            if (Q) return ()=>t8(Q);
        }, []);
        const J = a ? "none" : "auto";
        return v.jsx("div", {
            ref: B,
            style: {
                position: "relative",
                width: "100%",
                height: "100%",
                overflow: "hidden",
                pointerEvents: J,
                ...i
            },
            ...N,
            children: v.jsx("div", {
                ref: R,
                style: {
                    width: "100%",
                    height: "100%"
                },
                children: v.jsx("canvas", {
                    ref: P,
                    style: {
                        display: "block"
                    },
                    children: n
                })
            })
        });
    }), nSe = X.forwardRef(function(e, n) {
        return v.jsx(s8, {
            children: v.jsx(tSe, {
                ...e,
                ref: n
            })
        });
    });
    function rSe(t, e = "pointer", n = "auto", r = document.body) {
        X.useEffect(()=>{
            if (t) return r.style.cursor = e, ()=>void (r.style.cursor = n);
        }, [
            t
        ]);
    }
    var iSe = Object.defineProperty, sSe = (t, e, n)=>e in t ? iSe(t, e, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : t[e] = n, oSe = (t, e, n)=>(sSe(t, e + "", n), n);
    class aSe {
        constructor(){
            oSe(this, "_listeners");
        }
        addEventListener(e, n) {
            this._listeners === void 0 && (this._listeners = {});
            const r = this._listeners;
            r[e] === void 0 && (r[e] = []), r[e].indexOf(n) === -1 && r[e].push(n);
        }
        hasEventListener(e, n) {
            if (this._listeners === void 0) return !1;
            const r = this._listeners;
            return r[e] !== void 0 && r[e].indexOf(n) !== -1;
        }
        removeEventListener(e, n) {
            if (this._listeners === void 0) return;
            const i = this._listeners[e];
            if (i !== void 0) {
                const s = i.indexOf(n);
                s !== -1 && i.splice(s, 1);
            }
        }
        dispatchEvent(e) {
            if (this._listeners === void 0) return;
            const r = this._listeners[e.type];
            if (r !== void 0) {
                e.target = this;
                const i = r.slice(0);
                for(let s = 0, o = i.length; s < o; s++)i[s].call(this, e);
                e.target = null;
            }
        }
    }
    var lSe = Object.defineProperty, cSe = (t, e, n)=>e in t ? lSe(t, e, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : t[e] = n, on = (t, e, n)=>(cSe(t, typeof e != "symbol" ? e + "" : e, n), n);
    const qS = new ym, f4 = new Yu, uSe = Math.cos(70 * (Math.PI / 180)), h4 = (t, e)=>(t % e + e) % e;
    let dSe = class extends aSe {
        constructor(e, n){
            super(), on(this, "object"), on(this, "domElement"), on(this, "enabled", !0), on(this, "target", new ye), on(this, "minDistance", 0), on(this, "maxDistance", 1 / 0), on(this, "minZoom", 0), on(this, "maxZoom", 1 / 0), on(this, "minPolarAngle", 0), on(this, "maxPolarAngle", Math.PI), on(this, "minAzimuthAngle", -1 / 0), on(this, "maxAzimuthAngle", 1 / 0), on(this, "enableDamping", !1), on(this, "dampingFactor", .05), on(this, "enableZoom", !0), on(this, "zoomSpeed", 1), on(this, "enableRotate", !0), on(this, "rotateSpeed", 1), on(this, "enablePan", !0), on(this, "panSpeed", 1), on(this, "screenSpacePanning", !0), on(this, "keyPanSpeed", 7), on(this, "zoomToCursor", !1), on(this, "autoRotate", !1), on(this, "autoRotateSpeed", 2), on(this, "reverseOrbit", !1), on(this, "reverseHorizontalOrbit", !1), on(this, "reverseVerticalOrbit", !1), on(this, "keys", {
                LEFT: "ArrowLeft",
                UP: "ArrowUp",
                RIGHT: "ArrowRight",
                BOTTOM: "ArrowDown"
            }), on(this, "mouseButtons", {
                LEFT: Ku.ROTATE,
                MIDDLE: Ku.DOLLY,
                RIGHT: Ku.PAN
            }), on(this, "touches", {
                ONE: $l.ROTATE,
                TWO: $l.DOLLY_PAN
            }), on(this, "target0"), on(this, "position0"), on(this, "zoom0"), on(this, "_domElementKeyEvents", null), on(this, "getPolarAngle"), on(this, "getAzimuthalAngle"), on(this, "setPolarAngle"), on(this, "setAzimuthalAngle"), on(this, "getDistance"), on(this, "getZoomScale"), on(this, "listenToKeyEvents"), on(this, "stopListenToKeyEvents"), on(this, "saveState"), on(this, "reset"), on(this, "update"), on(this, "connect"), on(this, "dispose"), on(this, "dollyIn"), on(this, "dollyOut"), on(this, "getScale"), on(this, "setScale"), this.object = e, this.domElement = n, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.zoom0 = this.object.zoom, this.getPolarAngle = ()=>u.phi, this.getAzimuthalAngle = ()=>u.theta, this.setPolarAngle = (_e)=>{
                let $e = h4(_e, 2 * Math.PI), ht = u.phi;
                ht < 0 && (ht += 2 * Math.PI), $e < 0 && ($e += 2 * Math.PI);
                let Se = Math.abs($e - ht);
                2 * Math.PI - Se < Se && ($e < ht ? $e += 2 * Math.PI : ht += 2 * Math.PI), f.phi = $e - ht, r.update();
            }, this.setAzimuthalAngle = (_e)=>{
                let $e = h4(_e, 2 * Math.PI), ht = u.theta;
                ht < 0 && (ht += 2 * Math.PI), $e < 0 && ($e += 2 * Math.PI);
                let Se = Math.abs($e - ht);
                2 * Math.PI - Se < Se && ($e < ht ? $e += 2 * Math.PI : ht += 2 * Math.PI), f.theta = $e - ht, r.update();
            }, this.getDistance = ()=>r.object.position.distanceTo(r.target), this.listenToKeyEvents = (_e)=>{
                _e.addEventListener("keydown", Ze), this._domElementKeyEvents = _e;
            }, this.stopListenToKeyEvents = ()=>{
                this._domElementKeyEvents.removeEventListener("keydown", Ze), this._domElementKeyEvents = null;
            }, this.saveState = ()=>{
                r.target0.copy(r.target), r.position0.copy(r.object.position), r.zoom0 = r.object.zoom;
            }, this.reset = ()=>{
                r.target.copy(r.target0), r.object.position.copy(r.position0), r.object.zoom = r.zoom0, r.object.updateProjectionMatrix(), r.dispatchEvent(i), r.update(), l = a.NONE;
            }, this.update = (()=>{
                const _e = new ye, $e = new ye(0, 1, 0), ht = new Xs().setFromUnitVectors(e.up, $e), Se = ht.clone().invert(), lt = new ye, Re = new Xs, Ue = 2 * Math.PI;
                return function() {
                    const rt = r.object.position;
                    ht.setFromUnitVectors(e.up, $e), Se.copy(ht).invert(), _e.copy(rt).sub(r.target), _e.applyQuaternion(ht), u.setFromVector3(_e), r.autoRotate && l === a.NONE && j(B()), r.enableDamping ? (u.theta += f.theta * r.dampingFactor, u.phi += f.phi * r.dampingFactor) : (u.theta += f.theta, u.phi += f.phi);
                    let pt = r.minAzimuthAngle, Nt = r.maxAzimuthAngle;
                    isFinite(pt) && isFinite(Nt) && (pt < -Math.PI ? pt += Ue : pt > Math.PI && (pt -= Ue), Nt < -Math.PI ? Nt += Ue : Nt > Math.PI && (Nt -= Ue), pt <= Nt ? u.theta = Math.max(pt, Math.min(Nt, u.theta)) : u.theta = u.theta > (pt + Nt) / 2 ? Math.max(pt, u.theta) : Math.min(Nt, u.theta)), u.phi = Math.max(r.minPolarAngle, Math.min(r.maxPolarAngle, u.phi)), u.makeSafe(), r.enableDamping === !0 ? r.target.addScaledVector(g, r.dampingFactor) : r.target.add(g), r.zoomToCursor && R || r.object.isOrthographicCamera ? u.radius = ue(u.radius) : u.radius = ue(u.radius * p), _e.setFromSpherical(u), _e.applyQuaternion(Se), rt.copy(r.target).add(_e), r.object.matrixAutoUpdate || r.object.updateMatrix(), r.object.lookAt(r.target), r.enableDamping === !0 ? (f.theta *= 1 - r.dampingFactor, f.phi *= 1 - r.dampingFactor, g.multiplyScalar(1 - r.dampingFactor)) : (f.set(0, 0, 0), g.set(0, 0, 0));
                    let Zt = !1;
                    if (r.zoomToCursor && R) {
                        let wt = null;
                        if (r.object instanceof Ei && r.object.isPerspectiveCamera) {
                            const Nn = _e.length();
                            wt = ue(Nn * p);
                            const pn = Nn - wt;
                            r.object.position.addScaledVector(D, pn), r.object.updateMatrixWorld();
                        } else if (r.object.isOrthographicCamera) {
                            const Nn = new ye(L.x, L.y, 0);
                            Nn.unproject(r.object), r.object.zoom = Math.max(r.minZoom, Math.min(r.maxZoom, r.object.zoom / p)), r.object.updateProjectionMatrix(), Zt = !0;
                            const pn = new ye(L.x, L.y, 0);
                            pn.unproject(r.object), r.object.position.sub(pn).add(Nn), r.object.updateMatrixWorld(), wt = _e.length();
                        } else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."), r.zoomToCursor = !1;
                        wt !== null && (r.screenSpacePanning ? r.target.set(0, 0, -1).transformDirection(r.object.matrix).multiplyScalar(wt).add(r.object.position) : (qS.origin.copy(r.object.position), qS.direction.set(0, 0, -1).transformDirection(r.object.matrix), Math.abs(r.object.up.dot(qS.direction)) < uSe ? e.lookAt(r.target) : (f4.setFromNormalAndCoplanarPoint(r.object.up, r.target), qS.intersectPlane(f4, r.target))));
                    } else r.object instanceof ad && r.object.isOrthographicCamera && (Zt = p !== 1, Zt && (r.object.zoom = Math.max(r.minZoom, Math.min(r.maxZoom, r.object.zoom / p)), r.object.updateProjectionMatrix()));
                    return p = 1, R = !1, Zt || lt.distanceToSquared(r.object.position) > c || 8 * (1 - Re.dot(r.object.quaternion)) > c ? (r.dispatchEvent(i), lt.copy(r.object.position), Re.copy(r.object.quaternion), Zt = !1, !0) : !1;
                };
            })(), this.connect = (_e)=>{
                r.domElement = _e, r.domElement.style.touchAction = "none", r.domElement.addEventListener("contextmenu", Pe), r.domElement.addEventListener("pointerdown", H), r.domElement.addEventListener("pointercancel", pe), r.domElement.addEventListener("wheel", Xe);
            }, this.dispose = ()=>{
                var _e, $e, ht, Se, lt, Re;
                r.domElement && (r.domElement.style.touchAction = "auto"), (_e = r.domElement) == null || _e.removeEventListener("contextmenu", Pe), ($e = r.domElement) == null || $e.removeEventListener("pointerdown", H), (ht = r.domElement) == null || ht.removeEventListener("pointercancel", pe), (Se = r.domElement) == null || Se.removeEventListener("wheel", Xe), (lt = r.domElement) == null || lt.ownerDocument.removeEventListener("pointermove", fe), (Re = r.domElement) == null || Re.ownerDocument.removeEventListener("pointerup", pe), r._domElementKeyEvents !== null && r._domElementKeyEvents.removeEventListener("keydown", Ze);
            };
            const r = this, i = {
                type: "change"
            }, s = {
                type: "start"
            }, o = {
                type: "end"
            }, a = {
                NONE: -1,
                ROTATE: 0,
                DOLLY: 1,
                PAN: 2,
                TOUCH_ROTATE: 3,
                TOUCH_PAN: 4,
                TOUCH_DOLLY_PAN: 5,
                TOUCH_DOLLY_ROTATE: 6
            };
            let l = a.NONE;
            const c = 1e-6, u = new bk, f = new bk;
            let p = 1;
            const g = new ye, x = new ot, S = new ot, _ = new ot, b = new ot, M = new ot, E = new ot, T = new ot, k = new ot, N = new ot, D = new ye, L = new ot;
            let R = !1;
            const A = [], P = {};
            function B() {
                return 2 * Math.PI / 60 / 60 * r.autoRotateSpeed;
            }
            function U() {
                return Math.pow(.95, r.zoomSpeed);
            }
            function j(_e) {
                r.reverseOrbit || r.reverseHorizontalOrbit ? f.theta += _e : f.theta -= _e;
            }
            function K(_e) {
                r.reverseOrbit || r.reverseVerticalOrbit ? f.phi += _e : f.phi -= _e;
            }
            const q = (()=>{
                const _e = new ye;
                return function(ht, Se) {
                    _e.setFromMatrixColumn(Se, 0), _e.multiplyScalar(-ht), g.add(_e);
                };
            })(), te = (()=>{
                const _e = new ye;
                return function(ht, Se) {
                    r.screenSpacePanning === !0 ? _e.setFromMatrixColumn(Se, 1) : (_e.setFromMatrixColumn(Se, 0), _e.crossVectors(r.object.up, _e)), _e.multiplyScalar(ht), g.add(_e);
                };
            })(), W = (()=>{
                const _e = new ye;
                return function(ht, Se) {
                    const lt = r.domElement;
                    if (lt && r.object instanceof Ei && r.object.isPerspectiveCamera) {
                        const Re = r.object.position;
                        _e.copy(Re).sub(r.target);
                        let Ue = _e.length();
                        Ue *= Math.tan(r.object.fov / 2 * Math.PI / 180), q(2 * ht * Ue / lt.clientHeight, r.object.matrix), te(2 * Se * Ue / lt.clientHeight, r.object.matrix);
                    } else lt && r.object instanceof ad && r.object.isOrthographicCamera ? (q(ht * (r.object.right - r.object.left) / r.object.zoom / lt.clientWidth, r.object.matrix), te(Se * (r.object.top - r.object.bottom) / r.object.zoom / lt.clientHeight, r.object.matrix)) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), r.enablePan = !1);
                };
            })();
            function J(_e) {
                r.object instanceof Ei && r.object.isPerspectiveCamera || r.object instanceof ad && r.object.isOrthographicCamera ? p = _e : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), r.enableZoom = !1);
            }
            function Q(_e) {
                J(p / _e);
            }
            function Y(_e) {
                J(p * _e);
            }
            function le(_e) {
                if (!r.zoomToCursor || !r.domElement) return;
                R = !0;
                const $e = r.domElement.getBoundingClientRect(), ht = _e.clientX - $e.left, Se = _e.clientY - $e.top, lt = $e.width, Re = $e.height;
                L.x = ht / lt * 2 - 1, L.y = -(Se / Re) * 2 + 1, D.set(L.x, L.y, 1).unproject(r.object).sub(r.object.position).normalize();
            }
            function ue(_e) {
                return Math.max(r.minDistance, Math.min(r.maxDistance, _e));
            }
            function ie(_e) {
                x.set(_e.clientX, _e.clientY);
            }
            function he(_e) {
                le(_e), T.set(_e.clientX, _e.clientY);
            }
            function ge(_e) {
                b.set(_e.clientX, _e.clientY);
            }
            function ve(_e) {
                S.set(_e.clientX, _e.clientY), _.subVectors(S, x).multiplyScalar(r.rotateSpeed);
                const $e = r.domElement;
                $e && (j(2 * Math.PI * _.x / $e.clientHeight), K(2 * Math.PI * _.y / $e.clientHeight)), x.copy(S), r.update();
            }
            function Ee(_e) {
                k.set(_e.clientX, _e.clientY), N.subVectors(k, T), N.y > 0 ? Q(U()) : N.y < 0 && Y(U()), T.copy(k), r.update();
            }
            function Ce(_e) {
                M.set(_e.clientX, _e.clientY), E.subVectors(M, b).multiplyScalar(r.panSpeed), W(E.x, E.y), b.copy(M), r.update();
            }
            function Ne(_e) {
                le(_e), _e.deltaY < 0 ? Y(U()) : _e.deltaY > 0 && Q(U()), r.update();
            }
            function Ve(_e) {
                let $e = !1;
                switch(_e.code){
                    case r.keys.UP:
                        W(0, r.keyPanSpeed), $e = !0;
                        break;
                    case r.keys.BOTTOM:
                        W(0, -r.keyPanSpeed), $e = !0;
                        break;
                    case r.keys.LEFT:
                        W(r.keyPanSpeed, 0), $e = !0;
                        break;
                    case r.keys.RIGHT:
                        W(-r.keyPanSpeed, 0), $e = !0;
                        break;
                }
                $e && (_e.preventDefault(), r.update());
            }
            function we() {
                if (A.length == 1) x.set(A[0].pageX, A[0].pageY);
                else {
                    const _e = .5 * (A[0].pageX + A[1].pageX), $e = .5 * (A[0].pageY + A[1].pageY);
                    x.set(_e, $e);
                }
            }
            function Me() {
                if (A.length == 1) b.set(A[0].pageX, A[0].pageY);
                else {
                    const _e = .5 * (A[0].pageX + A[1].pageX), $e = .5 * (A[0].pageY + A[1].pageY);
                    b.set(_e, $e);
                }
            }
            function se() {
                const _e = A[0].pageX - A[1].pageX, $e = A[0].pageY - A[1].pageY, ht = Math.sqrt(_e * _e + $e * $e);
                T.set(0, ht);
            }
            function Ye() {
                r.enableZoom && se(), r.enablePan && Me();
            }
            function Be() {
                r.enableZoom && se(), r.enableRotate && we();
            }
            function it(_e) {
                if (A.length == 1) S.set(_e.pageX, _e.pageY);
                else {
                    const ht = st(_e), Se = .5 * (_e.pageX + ht.x), lt = .5 * (_e.pageY + ht.y);
                    S.set(Se, lt);
                }
                _.subVectors(S, x).multiplyScalar(r.rotateSpeed);
                const $e = r.domElement;
                $e && (j(2 * Math.PI * _.x / $e.clientHeight), K(2 * Math.PI * _.y / $e.clientHeight)), x.copy(S);
            }
            function de(_e) {
                if (A.length == 1) M.set(_e.pageX, _e.pageY);
                else {
                    const $e = st(_e), ht = .5 * (_e.pageX + $e.x), Se = .5 * (_e.pageY + $e.y);
                    M.set(ht, Se);
                }
                E.subVectors(M, b).multiplyScalar(r.panSpeed), W(E.x, E.y), b.copy(M);
            }
            function ae(_e) {
                const $e = st(_e), ht = _e.pageX - $e.x, Se = _e.pageY - $e.y, lt = Math.sqrt(ht * ht + Se * Se);
                k.set(0, lt), N.set(0, Math.pow(k.y / T.y, r.zoomSpeed)), Q(N.y), T.copy(k);
            }
            function oe(_e) {
                r.enableZoom && ae(_e), r.enablePan && de(_e);
            }
            function $(_e) {
                r.enableZoom && ae(_e), r.enableRotate && it(_e);
            }
            function H(_e) {
                var $e, ht;
                r.enabled !== !1 && (A.length === 0 && (($e = r.domElement) == null || $e.ownerDocument.addEventListener("pointermove", fe), (ht = r.domElement) == null || ht.ownerDocument.addEventListener("pointerup", pe)), Fe(_e), _e.pointerType === "touch" ? at(_e) : me(_e));
            }
            function fe(_e) {
                r.enabled !== !1 && (_e.pointerType === "touch" ? Je(_e) : Ie(_e));
            }
            function pe(_e) {
                var $e, ht, Se;
                nt(_e), A.length === 0 && (($e = r.domElement) == null || $e.releasePointerCapture(_e.pointerId), (ht = r.domElement) == null || ht.ownerDocument.removeEventListener("pointermove", fe), (Se = r.domElement) == null || Se.ownerDocument.removeEventListener("pointerup", pe)), r.dispatchEvent(o), l = a.NONE;
            }
            function me(_e) {
                let $e;
                switch(_e.button){
                    case 0:
                        $e = r.mouseButtons.LEFT;
                        break;
                    case 1:
                        $e = r.mouseButtons.MIDDLE;
                        break;
                    case 2:
                        $e = r.mouseButtons.RIGHT;
                        break;
                    default:
                        $e = -1;
                }
                switch($e){
                    case Ku.DOLLY:
                        if (r.enableZoom === !1) return;
                        he(_e), l = a.DOLLY;
                        break;
                    case Ku.ROTATE:
                        if (_e.ctrlKey || _e.metaKey || _e.shiftKey) {
                            if (r.enablePan === !1) return;
                            ge(_e), l = a.PAN;
                        } else {
                            if (r.enableRotate === !1) return;
                            ie(_e), l = a.ROTATE;
                        }
                        break;
                    case Ku.PAN:
                        if (_e.ctrlKey || _e.metaKey || _e.shiftKey) {
                            if (r.enableRotate === !1) return;
                            ie(_e), l = a.ROTATE;
                        } else {
                            if (r.enablePan === !1) return;
                            ge(_e), l = a.PAN;
                        }
                        break;
                    default:
                        l = a.NONE;
                }
                l !== a.NONE && r.dispatchEvent(s);
            }
            function Ie(_e) {
                if (r.enabled !== !1) switch(l){
                    case a.ROTATE:
                        if (r.enableRotate === !1) return;
                        ve(_e);
                        break;
                    case a.DOLLY:
                        if (r.enableZoom === !1) return;
                        Ee(_e);
                        break;
                    case a.PAN:
                        if (r.enablePan === !1) return;
                        Ce(_e);
                        break;
                }
            }
            function Xe(_e) {
                r.enabled === !1 || r.enableZoom === !1 || l !== a.NONE && l !== a.ROTATE || (_e.preventDefault(), r.dispatchEvent(s), Ne(_e), r.dispatchEvent(o));
            }
            function Ze(_e) {
                r.enabled === !1 || r.enablePan === !1 || Ve(_e);
            }
            function at(_e) {
                switch(ct(_e), A.length){
                    case 1:
                        switch(r.touches.ONE){
                            case $l.ROTATE:
                                if (r.enableRotate === !1) return;
                                we(), l = a.TOUCH_ROTATE;
                                break;
                            case $l.PAN:
                                if (r.enablePan === !1) return;
                                Me(), l = a.TOUCH_PAN;
                                break;
                            default:
                                l = a.NONE;
                        }
                        break;
                    case 2:
                        switch(r.touches.TWO){
                            case $l.DOLLY_PAN:
                                if (r.enableZoom === !1 && r.enablePan === !1) return;
                                Ye(), l = a.TOUCH_DOLLY_PAN;
                                break;
                            case $l.DOLLY_ROTATE:
                                if (r.enableZoom === !1 && r.enableRotate === !1) return;
                                Be(), l = a.TOUCH_DOLLY_ROTATE;
                                break;
                            default:
                                l = a.NONE;
                        }
                        break;
                    default:
                        l = a.NONE;
                }
                l !== a.NONE && r.dispatchEvent(s);
            }
            function Je(_e) {
                switch(ct(_e), l){
                    case a.TOUCH_ROTATE:
                        if (r.enableRotate === !1) return;
                        it(_e), r.update();
                        break;
                    case a.TOUCH_PAN:
                        if (r.enablePan === !1) return;
                        de(_e), r.update();
                        break;
                    case a.TOUCH_DOLLY_PAN:
                        if (r.enableZoom === !1 && r.enablePan === !1) return;
                        oe(_e), r.update();
                        break;
                    case a.TOUCH_DOLLY_ROTATE:
                        if (r.enableZoom === !1 && r.enableRotate === !1) return;
                        $(_e), r.update();
                        break;
                    default:
                        l = a.NONE;
                }
            }
            function Pe(_e) {
                r.enabled !== !1 && _e.preventDefault();
            }
            function Fe(_e) {
                A.push(_e);
            }
            function nt(_e) {
                delete P[_e.pointerId];
                for(let $e = 0; $e < A.length; $e++)if (A[$e].pointerId == _e.pointerId) {
                    A.splice($e, 1);
                    return;
                }
            }
            function ct(_e) {
                let $e = P[_e.pointerId];
                $e === void 0 && ($e = new ot, P[_e.pointerId] = $e), $e.set(_e.pageX, _e.pageY);
            }
            function st(_e) {
                const $e = _e.pointerId === A[0].pointerId ? A[1] : A[0];
                return P[$e.pointerId];
            }
            this.dollyIn = (_e = U())=>{
                Y(_e), r.update();
            }, this.dollyOut = (_e = U())=>{
                Q(_e), r.update();
            }, this.getScale = ()=>p, this.setScale = (_e)=>{
                J(_e), r.update();
            }, this.getZoomScale = ()=>U(), n !== void 0 && this.connect(n), this.update();
        }
    };
    const fSe = X.forwardRef(({ makeDefault: t, camera: e, regress: n, domElement: r, enableDamping: i = !0, keyEvents: s = !1, onChange: o, onStart: a, onEnd: l, ...c }, u)=>{
        const f = Ac((N)=>N.invalidate), p = Ac((N)=>N.camera), g = Ac((N)=>N.gl), x = Ac((N)=>N.events), S = Ac((N)=>N.setEvents), _ = Ac((N)=>N.set), b = Ac((N)=>N.get), M = Ac((N)=>N.performance), E = e || p, T = r || x.connected || g.domElement, k = X.useMemo(()=>new dSe(E), [
            E
        ]);
        return L_e(()=>{
            k.enabled && k.update();
        }, -1), X.useEffect(()=>(s && k.connect(s === !0 ? T : s), k.connect(T), ()=>void k.dispose()), [
            s,
            T,
            n,
            k,
            f
        ]), X.useEffect(()=>{
            const N = (R)=>{
                f(), n && M.regress(), o && o(R);
            }, D = (R)=>{
                a && a(R);
            }, L = (R)=>{
                l && l(R);
            };
            return k.addEventListener("change", N), k.addEventListener("start", D), k.addEventListener("end", L), ()=>{
                k.removeEventListener("start", D), k.removeEventListener("end", L), k.removeEventListener("change", N);
            };
        }, [
            o,
            a,
            l,
            k,
            f,
            S
        ]), X.useEffect(()=>{
            if (t) {
                const N = b().controls;
                return _({
                    controls: k
                }), ()=>_({
                        controls: N
                    });
            }
        }, [
            t,
            k
        ]), X.createElement("primitive", ok({
            ref: u,
            object: k,
            enableDamping: i
        }, c));
    });
    var S1 = {
        exports: {}
    }, hSe = S1.exports, p4;
    function pSe() {
        return p4 || (p4 = 1, function(t, e) {
            (function(n, r) {
                t.exports = r();
            })(hSe, function() {
                var n = function() {
                    function r(g) {
                        return o.appendChild(g.dom), g;
                    }
                    function i(g) {
                        for(var x = 0; x < o.children.length; x++)o.children[x].style.display = x === g ? "block" : "none";
                        s = g;
                    }
                    var s = 0, o = document.createElement("div");
                    o.style.cssText = "position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000", o.addEventListener("click", function(g) {
                        g.preventDefault(), i(++s % o.children.length);
                    }, !1);
                    var a = (performance || Date).now(), l = a, c = 0, u = r(new n.Panel("FPS", "#0ff", "#002")), f = r(new n.Panel("MS", "#0f0", "#020"));
                    if (self.performance && self.performance.memory) var p = r(new n.Panel("MB", "#f08", "#201"));
                    return i(0), {
                        REVISION: 16,
                        dom: o,
                        addPanel: r,
                        showPanel: i,
                        begin: function() {
                            a = (performance || Date).now();
                        },
                        end: function() {
                            c++;
                            var g = (performance || Date).now();
                            if (f.update(g - a, 200), g > l + 1e3 && (u.update(1e3 * c / (g - l), 100), l = g, c = 0, p)) {
                                var x = performance.memory;
                                p.update(x.usedJSHeapSize / 1048576, x.jsHeapSizeLimit / 1048576);
                            }
                            return g;
                        },
                        update: function() {
                            a = this.end();
                        },
                        domElement: o,
                        setMode: i
                    };
                };
                return n.Panel = function(r, i, s) {
                    var o = 1 / 0, a = 0, l = Math.round, c = l(window.devicePixelRatio || 1), u = 80 * c, f = 48 * c, p = 3 * c, g = 2 * c, x = 3 * c, S = 15 * c, _ = 74 * c, b = 30 * c, M = document.createElement("canvas");
                    M.width = u, M.height = f, M.style.cssText = "width:80px;height:48px";
                    var E = M.getContext("2d");
                    return E.font = "bold " + 9 * c + "px Helvetica,Arial,sans-serif", E.textBaseline = "top", E.fillStyle = s, E.fillRect(0, 0, u, f), E.fillStyle = i, E.fillText(r, p, g), E.fillRect(x, S, _, b), E.fillStyle = s, E.globalAlpha = .9, E.fillRect(x, S, _, b), {
                        dom: M,
                        update: function(T, k) {
                            o = Math.min(o, T), a = Math.max(a, T), E.fillStyle = s, E.globalAlpha = 1, E.fillRect(0, 0, u, S), E.fillStyle = i, E.fillText(l(T) + " " + r + " (" + l(o) + "-" + l(a) + ")", p, g), E.drawImage(M, x + c, S, _ - c, b, x, S, _ - c, b), E.fillRect(x + _ - c, S, c, b), E.fillStyle = s, E.globalAlpha = .9, E.fillRect(x + _ - c, S, c, l((1 - T / k) * b));
                        }
                    };
                }, n;
            });
        }(S1)), S1.exports;
    }
    var mSe = pSe();
    const gSe = Ao(mSe);
    function ySe(t, e = [], n) {
        const [r, i] = X.useState();
        return X.useLayoutEffect(()=>{
            const s = t();
            return i(s), ()=>void 0;
        }, e), r;
    }
    function vSe({ showPanel: t = 0, className: e, parent: n }) {
        const r = ySe(()=>new gSe, []);
        return X.useEffect(()=>{
            if (r) {
                const i = n && n.current || document.body;
                r.showPanel(t), i?.appendChild(r.dom);
                const s = (e ?? "").split(" ").filter((l)=>l);
                s.length && r.dom.classList.add(...s);
                const o = P_e(()=>r.begin()), a = k_e(()=>r.end());
                return ()=>{
                    s.length && r.dom.classList.remove(...s), i?.removeChild(r.dom), o(), a();
                };
            }
        }, [
            n,
            r,
            e,
            t
        ]), null;
    }
    const qg = typeof performance == "object" && performance && typeof performance.now == "function" ? performance : Date, o8 = new Set, Tk = typeof process == "object" && process ? process : {}, a8 = (t, e, n, r)=>{
        typeof Tk.emitWarning == "function" ? Tk.emitWarning(t, e, n, r) : console.error(`[${n}] ${e}: ${t}`);
    };
    let FM = globalThis.AbortController, m4 = globalThis.AbortSignal;
    if (typeof FM > "u") {
        m4 = class {
            onabort;
            _onabort = [];
            reason;
            aborted = !1;
            addEventListener(r, i) {
                this._onabort.push(i);
            }
        }, FM = class {
            constructor(){
                e();
            }
            signal = new m4;
            abort(r) {
                if (!this.signal.aborted) {
                    this.signal.reason = r, this.signal.aborted = !0;
                    for (const i of this.signal._onabort)i(r);
                    this.signal.onabort?.(r);
                }
            }
        };
        let t = Tk.env?.LRU_CACHE_IGNORE_AC_WARNING !== "1";
        const e = ()=>{
            t && (t = !1, a8("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.", "NO_ABORT_CONTROLLER", "ENOTSUP", e));
        };
    }
    const xSe = (t)=>!o8.has(t), bf = (t)=>t && t === Math.floor(t) && t > 0 && isFinite(t), l8 = (t)=>bf(t) ? t <= Math.pow(2, 8) ? Uint8Array : t <= Math.pow(2, 16) ? Uint16Array : t <= Math.pow(2, 32) ? Uint32Array : t <= Number.MAX_SAFE_INTEGER ? E1 : null : null;
    class E1 extends Array {
        constructor(e){
            super(e), this.fill(0);
        }
    }
    class my {
        heap;
        length;
        static #e = !1;
        static create(e) {
            const n = l8(e);
            if (!n) return [];
            my.#e = !0;
            const r = new my(e, n);
            return my.#e = !1, r;
        }
        constructor(e, n){
            if (!my.#e) throw new TypeError("instantiate Stack using Stack.create(n)");
            this.heap = new n(e), this.length = 0;
        }
        push(e) {
            this.heap[this.length++] = e;
        }
        pop() {
            return this.heap[--this.length];
        }
    }
    class H2 {
        #e;
        #t;
        #n;
        #r;
        #s;
        #c;
        ttl;
        ttlResolution;
        ttlAutopurge;
        updateAgeOnGet;
        updateAgeOnHas;
        allowStale;
        noDisposeOnSet;
        noUpdateTTL;
        maxEntrySize;
        sizeCalculation;
        noDeleteOnFetchRejection;
        noDeleteOnStaleGet;
        allowStaleOnFetchAbort;
        allowStaleOnFetchRejection;
        ignoreFetchAbort;
        #o;
        #a;
        #u;
        #l;
        #i;
        #m;
        #g;
        #f;
        #h;
        #v;
        #p;
        #b;
        #w;
        #x;
        #_;
        #E;
        #y;
        static unsafeExposeInternals(e) {
            return {
                starts: e.#w,
                ttls: e.#x,
                sizes: e.#b,
                keyMap: e.#u,
                keyList: e.#l,
                valList: e.#i,
                next: e.#m,
                prev: e.#g,
                get head () {
                    return e.#f;
                },
                get tail () {
                    return e.#h;
                },
                free: e.#v,
                isBackgroundFetch: (n)=>e.#d(n),
                backgroundFetch: (n, r, i, s)=>e.#L(n, r, i, s),
                moveToTail: (n)=>e.#P(n),
                indexes: (n)=>e.#M(n),
                rindexes: (n)=>e.#T(n),
                isStale: (n)=>e.#S(n)
            };
        }
        get max() {
            return this.#e;
        }
        get maxSize() {
            return this.#t;
        }
        get calculatedSize() {
            return this.#a;
        }
        get size() {
            return this.#o;
        }
        get fetchMethod() {
            return this.#s;
        }
        get memoMethod() {
            return this.#c;
        }
        get dispose() {
            return this.#n;
        }
        get disposeAfter() {
            return this.#r;
        }
        constructor(e){
            const { max: n = 0, ttl: r, ttlResolution: i = 1, ttlAutopurge: s, updateAgeOnGet: o, updateAgeOnHas: a, allowStale: l, dispose: c, disposeAfter: u, noDisposeOnSet: f, noUpdateTTL: p, maxSize: g = 0, maxEntrySize: x = 0, sizeCalculation: S, fetchMethod: _, memoMethod: b, noDeleteOnFetchRejection: M, noDeleteOnStaleGet: E, allowStaleOnFetchRejection: T, allowStaleOnFetchAbort: k, ignoreFetchAbort: N } = e;
            if (n !== 0 && !bf(n)) throw new TypeError("max option must be a nonnegative integer");
            const D = n ? l8(n) : Array;
            if (!D) throw new Error("invalid max value: " + n);
            if (this.#e = n, this.#t = g, this.maxEntrySize = x || this.#t, this.sizeCalculation = S, this.sizeCalculation) {
                if (!this.#t && !this.maxEntrySize) throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");
                if (typeof this.sizeCalculation != "function") throw new TypeError("sizeCalculation set to non-function");
            }
            if (b !== void 0 && typeof b != "function") throw new TypeError("memoMethod must be a function if defined");
            if (this.#c = b, _ !== void 0 && typeof _ != "function") throw new TypeError("fetchMethod must be a function if specified");
            if (this.#s = _, this.#E = !!_, this.#u = new Map, this.#l = new Array(n).fill(void 0), this.#i = new Array(n).fill(void 0), this.#m = new D(n), this.#g = new D(n), this.#f = 0, this.#h = 0, this.#v = my.create(n), this.#o = 0, this.#a = 0, typeof c == "function" && (this.#n = c), typeof u == "function" ? (this.#r = u, this.#p = []) : (this.#r = void 0, this.#p = void 0), this.#_ = !!this.#n, this.#y = !!this.#r, this.noDisposeOnSet = !!f, this.noUpdateTTL = !!p, this.noDeleteOnFetchRejection = !!M, this.allowStaleOnFetchRejection = !!T, this.allowStaleOnFetchAbort = !!k, this.ignoreFetchAbort = !!N, this.maxEntrySize !== 0) {
                if (this.#t !== 0 && !bf(this.#t)) throw new TypeError("maxSize must be a positive integer if specified");
                if (!bf(this.maxEntrySize)) throw new TypeError("maxEntrySize must be a positive integer if specified");
                this.#z();
            }
            if (this.allowStale = !!l, this.noDeleteOnStaleGet = !!E, this.updateAgeOnGet = !!o, this.updateAgeOnHas = !!a, this.ttlResolution = bf(i) || i === 0 ? i : 1, this.ttlAutopurge = !!s, this.ttl = r || 0, this.ttl) {
                if (!bf(this.ttl)) throw new TypeError("ttl must be a positive integer if specified");
                this.#R();
            }
            if (this.#e === 0 && this.ttl === 0 && this.#t === 0) throw new TypeError("At least one of max, maxSize, or ttl is required");
            if (!this.ttlAutopurge && !this.#e && !this.#t) {
                const L = "LRU_CACHE_UNBOUNDED";
                xSe(L) && (o8.add(L), a8("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.", "UnboundedCacheWarning", L, H2));
            }
        }
        getRemainingTTL(e) {
            return this.#u.has(e) ? 1 / 0 : 0;
        }
        #R() {
            const e = new E1(this.#e), n = new E1(this.#e);
            this.#x = e, this.#w = n, this.#D = (s, o, a = qg.now())=>{
                if (n[s] = o !== 0 ? a : 0, e[s] = o, o !== 0 && this.ttlAutopurge) {
                    const l = setTimeout(()=>{
                        this.#S(s) && this.#C(this.#l[s], "expire");
                    }, o + 1);
                    l.unref && l.unref();
                }
            }, this.#A = (s)=>{
                n[s] = e[s] !== 0 ? qg.now() : 0;
            }, this.#I = (s, o)=>{
                if (e[o]) {
                    const a = e[o], l = n[o];
                    if (!a || !l) return;
                    s.ttl = a, s.start = l, s.now = r || i();
                    const c = s.now - l;
                    s.remainingTTL = a - c;
                }
            };
            let r = 0;
            const i = ()=>{
                const s = qg.now();
                if (this.ttlResolution > 0) {
                    r = s;
                    const o = setTimeout(()=>r = 0, this.ttlResolution);
                    o.unref && o.unref();
                }
                return s;
            };
            this.getRemainingTTL = (s)=>{
                const o = this.#u.get(s);
                if (o === void 0) return 0;
                const a = e[o], l = n[o];
                if (!a || !l) return 1 / 0;
                const c = (r || i()) - l;
                return a - c;
            }, this.#S = (s)=>{
                const o = n[s], a = e[s];
                return !!a && !!o && (r || i()) - o > a;
            };
        }
        #A = ()=>{};
        #I = ()=>{};
        #D = ()=>{};
        #S = ()=>!1;
        #z() {
            const e = new E1(this.#e);
            this.#a = 0, this.#b = e, this.#N = (n)=>{
                this.#a -= e[n], e[n] = 0;
            }, this.#F = (n, r, i, s)=>{
                if (this.#d(r)) return 0;
                if (!bf(i)) if (s) {
                    if (typeof s != "function") throw new TypeError("sizeCalculation must be a function");
                    if (i = s(r, n), !bf(i)) throw new TypeError("sizeCalculation return invalid (expect positive integer)");
                } else throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");
                return i;
            }, this.#k = (n, r, i)=>{
                if (e[n] = r, this.#t) {
                    const s = this.#t - e[n];
                    for(; this.#a > s;)this.#O(!0);
                }
                this.#a += e[n], i && (i.entrySize = r, i.totalCalculatedSize = this.#a);
            };
        }
        #N = (e)=>{};
        #k = (e, n, r)=>{};
        #F = (e, n, r, i)=>{
            if (r || i) throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");
            return 0;
        };
        *#M({ allowStale: e = this.allowStale } = {}) {
            if (this.#o) for(let n = this.#h; !(!this.#j(n) || ((e || !this.#S(n)) && (yield n), n === this.#f));)n = this.#g[n];
        }
        *#T({ allowStale: e = this.allowStale } = {}) {
            if (this.#o) for(let n = this.#f; !(!this.#j(n) || ((e || !this.#S(n)) && (yield n), n === this.#h));)n = this.#m[n];
        }
        #j(e) {
            return e !== void 0 && this.#u.get(this.#l[e]) === e;
        }
        *entries() {
            for (const e of this.#M())this.#i[e] !== void 0 && this.#l[e] !== void 0 && !this.#d(this.#i[e]) && (yield [
                this.#l[e],
                this.#i[e]
            ]);
        }
        *rentries() {
            for (const e of this.#T())this.#i[e] !== void 0 && this.#l[e] !== void 0 && !this.#d(this.#i[e]) && (yield [
                this.#l[e],
                this.#i[e]
            ]);
        }
        *keys() {
            for (const e of this.#M()){
                const n = this.#l[e];
                n !== void 0 && !this.#d(this.#i[e]) && (yield n);
            }
        }
        *rkeys() {
            for (const e of this.#T()){
                const n = this.#l[e];
                n !== void 0 && !this.#d(this.#i[e]) && (yield n);
            }
        }
        *values() {
            for (const e of this.#M())this.#i[e] !== void 0 && !this.#d(this.#i[e]) && (yield this.#i[e]);
        }
        *rvalues() {
            for (const e of this.#T())this.#i[e] !== void 0 && !this.#d(this.#i[e]) && (yield this.#i[e]);
        }
        [Symbol.iterator]() {
            return this.entries();
        }
        [Symbol.toStringTag] = "LRUCache";
        find(e, n = {}) {
            for (const r of this.#M()){
                const i = this.#i[r], s = this.#d(i) ? i.__staleWhileFetching : i;
                if (s !== void 0 && e(s, this.#l[r], this)) return this.get(this.#l[r], n);
            }
        }
        forEach(e, n = this) {
            for (const r of this.#M()){
                const i = this.#i[r], s = this.#d(i) ? i.__staleWhileFetching : i;
                s !== void 0 && e.call(n, s, this.#l[r], this);
            }
        }
        rforEach(e, n = this) {
            for (const r of this.#T()){
                const i = this.#i[r], s = this.#d(i) ? i.__staleWhileFetching : i;
                s !== void 0 && e.call(n, s, this.#l[r], this);
            }
        }
        purgeStale() {
            let e = !1;
            for (const n of this.#T({
                allowStale: !0
            }))this.#S(n) && (this.#C(this.#l[n], "expire"), e = !0);
            return e;
        }
        info(e) {
            const n = this.#u.get(e);
            if (n === void 0) return;
            const r = this.#i[n], i = this.#d(r) ? r.__staleWhileFetching : r;
            if (i === void 0) return;
            const s = {
                value: i
            };
            if (this.#x && this.#w) {
                const o = this.#x[n], a = this.#w[n];
                if (o && a) {
                    const l = o - (qg.now() - a);
                    s.ttl = l, s.start = Date.now();
                }
            }
            return this.#b && (s.size = this.#b[n]), s;
        }
        dump() {
            const e = [];
            for (const n of this.#M({
                allowStale: !0
            })){
                const r = this.#l[n], i = this.#i[n], s = this.#d(i) ? i.__staleWhileFetching : i;
                if (s === void 0 || r === void 0) continue;
                const o = {
                    value: s
                };
                if (this.#x && this.#w) {
                    o.ttl = this.#x[n];
                    const a = qg.now() - this.#w[n];
                    o.start = Math.floor(Date.now() - a);
                }
                this.#b && (o.size = this.#b[n]), e.unshift([
                    r,
                    o
                ]);
            }
            return e;
        }
        load(e) {
            this.clear();
            for (const [n, r] of e){
                if (r.start) {
                    const i = Date.now() - r.start;
                    r.start = qg.now() - i;
                }
                this.set(n, r.value, r);
            }
        }
        set(e, n, r = {}) {
            if (n === void 0) return this.delete(e), this;
            const { ttl: i = this.ttl, start: s, noDisposeOnSet: o = this.noDisposeOnSet, sizeCalculation: a = this.sizeCalculation, status: l } = r;
            let { noUpdateTTL: c = this.noUpdateTTL } = r;
            const u = this.#F(e, n, r.size || 0, a);
            if (this.maxEntrySize && u > this.maxEntrySize) return l && (l.set = "miss", l.maxEntrySizeExceeded = !0), this.#C(e, "set"), this;
            let f = this.#o === 0 ? void 0 : this.#u.get(e);
            if (f === void 0) f = this.#o === 0 ? this.#h : this.#v.length !== 0 ? this.#v.pop() : this.#o === this.#e ? this.#O(!1) : this.#o, this.#l[f] = e, this.#i[f] = n, this.#u.set(e, f), this.#m[this.#h] = f, this.#g[f] = this.#h, this.#h = f, this.#o++, this.#k(f, u, l), l && (l.set = "add"), c = !1;
            else {
                this.#P(f);
                const p = this.#i[f];
                if (n !== p) {
                    if (this.#E && this.#d(p)) {
                        p.__abortController.abort(new Error("replaced"));
                        const { __staleWhileFetching: g } = p;
                        g !== void 0 && !o && (this.#_ && this.#n?.(g, e, "set"), this.#y && this.#p?.push([
                            g,
                            e,
                            "set"
                        ]));
                    } else o || (this.#_ && this.#n?.(p, e, "set"), this.#y && this.#p?.push([
                        p,
                        e,
                        "set"
                    ]));
                    if (this.#N(f), this.#k(f, u, l), this.#i[f] = n, l) {
                        l.set = "replace";
                        const g = p && this.#d(p) ? p.__staleWhileFetching : p;
                        g !== void 0 && (l.oldValue = g);
                    }
                } else l && (l.set = "update");
            }
            if (i !== 0 && !this.#x && this.#R(), this.#x && (c || this.#D(f, i, s), l && this.#I(l, f)), !o && this.#y && this.#p) {
                const p = this.#p;
                let g;
                for(; g = p?.shift();)this.#r?.(...g);
            }
            return this;
        }
        pop() {
            try {
                for(; this.#o;){
                    const e = this.#i[this.#f];
                    if (this.#O(!0), this.#d(e)) {
                        if (e.__staleWhileFetching) return e.__staleWhileFetching;
                    } else if (e !== void 0) return e;
                }
            } finally{
                if (this.#y && this.#p) {
                    const e = this.#p;
                    let n;
                    for(; n = e?.shift();)this.#r?.(...n);
                }
            }
        }
        #O(e) {
            const n = this.#f, r = this.#l[n], i = this.#i[n];
            return this.#E && this.#d(i) ? i.__abortController.abort(new Error("evicted")) : (this.#_ || this.#y) && (this.#_ && this.#n?.(i, r, "evict"), this.#y && this.#p?.push([
                i,
                r,
                "evict"
            ])), this.#N(n), e && (this.#l[n] = void 0, this.#i[n] = void 0, this.#v.push(n)), this.#o === 1 ? (this.#f = this.#h = 0, this.#v.length = 0) : this.#f = this.#m[n], this.#u.delete(r), this.#o--, n;
        }
        has(e, n = {}) {
            const { updateAgeOnHas: r = this.updateAgeOnHas, status: i } = n, s = this.#u.get(e);
            if (s !== void 0) {
                const o = this.#i[s];
                if (this.#d(o) && o.__staleWhileFetching === void 0) return !1;
                if (this.#S(s)) i && (i.has = "stale", this.#I(i, s));
                else return r && this.#A(s), i && (i.has = "hit", this.#I(i, s)), !0;
            } else i && (i.has = "miss");
            return !1;
        }
        peek(e, n = {}) {
            const { allowStale: r = this.allowStale } = n, i = this.#u.get(e);
            if (i === void 0 || !r && this.#S(i)) return;
            const s = this.#i[i];
            return this.#d(s) ? s.__staleWhileFetching : s;
        }
        #L(e, n, r, i) {
            const s = n === void 0 ? void 0 : this.#i[n];
            if (this.#d(s)) return s;
            const o = new FM, { signal: a } = r;
            a?.addEventListener("abort", ()=>o.abort(a.reason), {
                signal: o.signal
            });
            const l = {
                signal: o.signal,
                options: r,
                context: i
            }, c = (S, _ = !1)=>{
                const { aborted: b } = o.signal, M = r.ignoreFetchAbort && S !== void 0;
                if (r.status && (b && !_ ? (r.status.fetchAborted = !0, r.status.fetchError = o.signal.reason, M && (r.status.fetchAbortIgnored = !0)) : r.status.fetchResolved = !0), b && !M && !_) return f(o.signal.reason);
                const E = g;
                return this.#i[n] === g && (S === void 0 ? E.__staleWhileFetching ? this.#i[n] = E.__staleWhileFetching : this.#C(e, "fetch") : (r.status && (r.status.fetchUpdated = !0), this.set(e, S, l.options))), S;
            }, u = (S)=>(r.status && (r.status.fetchRejected = !0, r.status.fetchError = S), f(S)), f = (S)=>{
                const { aborted: _ } = o.signal, b = _ && r.allowStaleOnFetchAbort, M = b || r.allowStaleOnFetchRejection, E = M || r.noDeleteOnFetchRejection, T = g;
                if (this.#i[n] === g && (!E || T.__staleWhileFetching === void 0 ? this.#C(e, "fetch") : b || (this.#i[n] = T.__staleWhileFetching)), M) return r.status && T.__staleWhileFetching !== void 0 && (r.status.returnedStale = !0), T.__staleWhileFetching;
                if (T.__returned === T) throw S;
            }, p = (S, _)=>{
                const b = this.#s?.(e, s, l);
                b && b instanceof Promise && b.then((M)=>S(M === void 0 ? void 0 : M), _), o.signal.addEventListener("abort", ()=>{
                    (!r.ignoreFetchAbort || r.allowStaleOnFetchAbort) && (S(void 0), r.allowStaleOnFetchAbort && (S = (M)=>c(M, !0)));
                });
            };
            r.status && (r.status.fetchDispatched = !0);
            const g = new Promise(p).then(c, u), x = Object.assign(g, {
                __abortController: o,
                __staleWhileFetching: s,
                __returned: void 0
            });
            return n === void 0 ? (this.set(e, x, {
                ...l.options,
                status: void 0
            }), n = this.#u.get(e)) : this.#i[n] = x, x;
        }
        #d(e) {
            if (!this.#E) return !1;
            const n = e;
            return !!n && n instanceof Promise && n.hasOwnProperty("__staleWhileFetching") && n.__abortController instanceof FM;
        }
        async fetch(e, n = {}) {
            const { allowStale: r = this.allowStale, updateAgeOnGet: i = this.updateAgeOnGet, noDeleteOnStaleGet: s = this.noDeleteOnStaleGet, ttl: o = this.ttl, noDisposeOnSet: a = this.noDisposeOnSet, size: l = 0, sizeCalculation: c = this.sizeCalculation, noUpdateTTL: u = this.noUpdateTTL, noDeleteOnFetchRejection: f = this.noDeleteOnFetchRejection, allowStaleOnFetchRejection: p = this.allowStaleOnFetchRejection, ignoreFetchAbort: g = this.ignoreFetchAbort, allowStaleOnFetchAbort: x = this.allowStaleOnFetchAbort, context: S, forceRefresh: _ = !1, status: b, signal: M } = n;
            if (!this.#E) return b && (b.fetch = "get"), this.get(e, {
                allowStale: r,
                updateAgeOnGet: i,
                noDeleteOnStaleGet: s,
                status: b
            });
            const E = {
                allowStale: r,
                updateAgeOnGet: i,
                noDeleteOnStaleGet: s,
                ttl: o,
                noDisposeOnSet: a,
                size: l,
                sizeCalculation: c,
                noUpdateTTL: u,
                noDeleteOnFetchRejection: f,
                allowStaleOnFetchRejection: p,
                allowStaleOnFetchAbort: x,
                ignoreFetchAbort: g,
                status: b,
                signal: M
            };
            let T = this.#u.get(e);
            if (T === void 0) {
                b && (b.fetch = "miss");
                const k = this.#L(e, T, E, S);
                return k.__returned = k;
            } else {
                const k = this.#i[T];
                if (this.#d(k)) {
                    const A = r && k.__staleWhileFetching !== void 0;
                    return b && (b.fetch = "inflight", A && (b.returnedStale = !0)), A ? k.__staleWhileFetching : k.__returned = k;
                }
                const N = this.#S(T);
                if (!_ && !N) return b && (b.fetch = "hit"), this.#P(T), i && this.#A(T), b && this.#I(b, T), k;
                const D = this.#L(e, T, E, S), R = D.__staleWhileFetching !== void 0 && r;
                return b && (b.fetch = N ? "stale" : "refresh", R && N && (b.returnedStale = !0)), R ? D.__staleWhileFetching : D.__returned = D;
            }
        }
        async forceFetch(e, n = {}) {
            const r = await this.fetch(e, n);
            if (r === void 0) throw new Error("fetch() returned undefined");
            return r;
        }
        memo(e, n = {}) {
            const r = this.#c;
            if (!r) throw new Error("no memoMethod provided to constructor");
            const { context: i, forceRefresh: s, ...o } = n, a = this.get(e, o);
            if (!s && a !== void 0) return a;
            const l = r(e, a, {
                options: o,
                context: i
            });
            return this.set(e, l, o), l;
        }
        get(e, n = {}) {
            const { allowStale: r = this.allowStale, updateAgeOnGet: i = this.updateAgeOnGet, noDeleteOnStaleGet: s = this.noDeleteOnStaleGet, status: o } = n, a = this.#u.get(e);
            if (a !== void 0) {
                const l = this.#i[a], c = this.#d(l);
                return o && this.#I(o, a), this.#S(a) ? (o && (o.get = "stale"), c ? (o && r && l.__staleWhileFetching !== void 0 && (o.returnedStale = !0), r ? l.__staleWhileFetching : void 0) : (s || this.#C(e, "expire"), o && r && (o.returnedStale = !0), r ? l : void 0)) : (o && (o.get = "hit"), c ? l.__staleWhileFetching : (this.#P(a), i && this.#A(a), l));
            } else o && (o.get = "miss");
        }
        #B(e, n) {
            this.#g[n] = e, this.#m[e] = n;
        }
        #P(e) {
            e !== this.#h && (e === this.#f ? this.#f = this.#m[e] : this.#B(this.#g[e], this.#m[e]), this.#B(this.#h, e), this.#h = e);
        }
        delete(e) {
            return this.#C(e, "delete");
        }
        #C(e, n) {
            let r = !1;
            if (this.#o !== 0) {
                const i = this.#u.get(e);
                if (i !== void 0) if (r = !0, this.#o === 1) this.#U(n);
                else {
                    this.#N(i);
                    const s = this.#i[i];
                    if (this.#d(s) ? s.__abortController.abort(new Error("deleted")) : (this.#_ || this.#y) && (this.#_ && this.#n?.(s, e, n), this.#y && this.#p?.push([
                        s,
                        e,
                        n
                    ])), this.#u.delete(e), this.#l[i] = void 0, this.#i[i] = void 0, i === this.#h) this.#h = this.#g[i];
                    else if (i === this.#f) this.#f = this.#m[i];
                    else {
                        const o = this.#g[i];
                        this.#m[o] = this.#m[i];
                        const a = this.#m[i];
                        this.#g[a] = this.#g[i];
                    }
                    this.#o--, this.#v.push(i);
                }
            }
            if (this.#y && this.#p?.length) {
                const i = this.#p;
                let s;
                for(; s = i?.shift();)this.#r?.(...s);
            }
            return r;
        }
        clear() {
            return this.#U("delete");
        }
        #U(e) {
            for (const n of this.#T({
                allowStale: !0
            })){
                const r = this.#i[n];
                if (this.#d(r)) r.__abortController.abort(new Error("deleted"));
                else {
                    const i = this.#l[n];
                    this.#_ && this.#n?.(r, i, e), this.#y && this.#p?.push([
                        r,
                        i,
                        e
                    ]);
                }
            }
            if (this.#u.clear(), this.#i.fill(void 0), this.#l.fill(void 0), this.#x && this.#w && (this.#x.fill(0), this.#w.fill(0)), this.#b && this.#b.fill(0), this.#f = 0, this.#h = 0, this.#v.length = 0, this.#a = 0, this.#o = 0, this.#y && this.#p) {
                const n = this.#p;
                let r;
                for(; r = n?.shift();)this.#r?.(...r);
            }
        }
    }
    function bSe(t, e, n) {
        var r = this, i = X.useRef(null), s = X.useRef(0), o = X.useRef(null), a = X.useRef([]), l = X.useRef(), c = X.useRef(), u = X.useRef(t), f = X.useRef(!0);
        u.current = t;
        var p = typeof window < "u", g = !e && e !== 0 && p;
        if (typeof t != "function") throw new TypeError("Expected a function");
        e = +e || 0;
        var x = !!(n = n || {}).leading, S = !("trailing" in n) || !!n.trailing, _ = "maxWait" in n, b = "debounceOnServer" in n && !!n.debounceOnServer, M = _ ? Math.max(+n.maxWait || 0, e) : null;
        X.useEffect(function() {
            return f.current = !0, function() {
                f.current = !1;
            };
        }, []);
        var E = X.useMemo(function() {
            var T = function(A) {
                var P = a.current, B = l.current;
                return a.current = l.current = null, s.current = A, c.current = u.current.apply(B, P);
            }, k = function(A, P) {
                g && cancelAnimationFrame(o.current), o.current = g ? requestAnimationFrame(A) : setTimeout(A, P);
            }, N = function(A) {
                if (!f.current) return !1;
                var P = A - i.current;
                return !i.current || P >= e || P < 0 || _ && A - s.current >= M;
            }, D = function(A) {
                return o.current = null, S && a.current ? T(A) : (a.current = l.current = null, c.current);
            }, L = function A() {
                var P = Date.now();
                if (N(P)) return D(P);
                if (f.current) {
                    var B = e - (P - i.current), U = _ ? Math.min(B, M - (P - s.current)) : B;
                    k(A, U);
                }
            }, R = function() {
                if (p || b) {
                    var A = Date.now(), P = N(A);
                    if (a.current = [].slice.call(arguments), l.current = r, i.current = A, P) {
                        if (!o.current && f.current) return s.current = i.current, k(L, e), x ? T(i.current) : c.current;
                        if (_) return k(L, e), T(i.current);
                    }
                    return o.current || k(L, e), c.current;
                }
            };
            return R.cancel = function() {
                o.current && (g ? cancelAnimationFrame(o.current) : clearTimeout(o.current)), s.current = 0, a.current = i.current = l.current = o.current = null;
            }, R.isPending = function() {
                return !!o.current;
            }, R.flush = function() {
                return o.current ? D(Date.now()) : c.current;
            }, R;
        }, [
            x,
            _,
            e,
            M,
            S,
            g,
            p,
            b
        ]);
        return E;
    }
    var Qx = {
        exports: {}
    };
    var wSe = Qx.exports, g4;
    function _Se() {
        return g4 || (g4 = 1, function(t, e) {
            (function(n, r) {
                r(e);
            })(wSe, function(n) {
                var r = {}, i = {
                    exports: {}
                };
                (function(ae) {
                    var oe = function(fe) {
                        return typeof fe < "u" && fe.versions != null && fe.versions.node != null && fe + "" == "[object process]";
                    };
                    ae.exports.isNode = oe, ae.exports.platform = typeof process < "u" && oe(process) ? "node" : "browser";
                    var $ = ae.exports.platform === "node" && wf;
                    ae.exports.isMainThread = ae.exports.platform === "node" ? (!$ || $.isMainThread) && !process.connected : typeof Window < "u", ae.exports.cpus = ae.exports.platform === "browser" ? self.navigator.hardwareConcurrency : wf.cpus().length;
                })(i);
                var s = i.exports, o = {}, a;
                function l() {
                    if (a) return o;
                    a = 1;
                    function ae(fe, pe) {
                        var me = this;
                        if (!(this instanceof ae)) throw new SyntaxError("Constructor must be called with the new operator");
                        if (typeof fe != "function") throw new SyntaxError("Function parameter handler(resolve, reject) missing");
                        var Ie = [], Xe = [];
                        this.resolved = !1, this.rejected = !1, this.pending = !0;
                        var Ze = function(Fe, nt) {
                            Ie.push(Fe), Xe.push(nt);
                        };
                        this.then = function(Pe, Fe) {
                            return new ae(function(nt, ct) {
                                var st = Pe ? oe(Pe, nt, ct) : nt, _e = Fe ? oe(Fe, nt, ct) : ct;
                                Ze(st, _e);
                            }, me);
                        };
                        var at = function(Fe) {
                            return me.resolved = !0, me.rejected = !1, me.pending = !1, Ie.forEach(function(nt) {
                                nt(Fe);
                            }), Ze = function(ct, st) {
                                ct(Fe);
                            }, at = Je = function() {}, me;
                        }, Je = function(Fe) {
                            return me.resolved = !1, me.rejected = !0, me.pending = !1, Xe.forEach(function(nt) {
                                nt(Fe);
                            }), Ze = function(ct, st) {
                                st(Fe);
                            }, at = Je = function() {}, me;
                        };
                        this.cancel = function() {
                            return pe ? pe.cancel() : Je(new $), me;
                        }, this.timeout = function(Pe) {
                            if (pe) pe.timeout(Pe);
                            else {
                                var Fe = setTimeout(function() {
                                    Je(new H("Promise timed out after " + Pe + " ms"));
                                }, Pe);
                                me.always(function() {
                                    clearTimeout(Fe);
                                });
                            }
                            return me;
                        }, fe(function(Pe) {
                            at(Pe);
                        }, function(Pe) {
                            Je(Pe);
                        });
                    }
                    function oe(fe, pe, me) {
                        return function(Ie) {
                            try {
                                var Xe = fe(Ie);
                                Xe && typeof Xe.then == "function" && typeof Xe.catch == "function" ? Xe.then(pe, me) : pe(Xe);
                            } catch (Ze) {
                                me(Ze);
                            }
                        };
                    }
                    ae.prototype.catch = function(fe) {
                        return this.then(null, fe);
                    }, ae.prototype.always = function(fe) {
                        return this.then(fe, fe);
                    }, ae.prototype.finally = function(fe) {
                        var pe = this, me = function() {
                            return new ae(function(Xe) {
                                return Xe();
                            }).then(fe).then(function() {
                                return pe;
                            });
                        };
                        return this.then(me, me);
                    }, ae.all = function(fe) {
                        return new ae(function(pe, me) {
                            var Ie = fe.length, Xe = [];
                            Ie ? fe.forEach(function(Ze, at) {
                                Ze.then(function(Je) {
                                    Xe[at] = Je, Ie--, Ie == 0 && pe(Xe);
                                }, function(Je) {
                                    Ie = 0, me(Je);
                                });
                            }) : pe(Xe);
                        });
                    }, ae.defer = function() {
                        var fe = {};
                        return fe.promise = new ae(function(pe, me) {
                            fe.resolve = pe, fe.reject = me;
                        }), fe;
                    };
                    function $(fe) {
                        this.message = fe || "promise cancelled", this.stack = new Error().stack;
                    }
                    $.prototype = new Error, $.prototype.constructor = Error, $.prototype.name = "CancellationError", ae.CancellationError = $;
                    function H(fe) {
                        this.message = fe || "timeout exceeded", this.stack = new Error().stack;
                    }
                    return H.prototype = new Error, H.prototype.constructor = Error, H.prototype.name = "TimeoutError", ae.TimeoutError = H, o.Promise = ae, o;
                }
                function c(ae, oe) {
                    (oe == null || oe > ae.length) && (oe = ae.length);
                    for(var $ = 0, H = Array(oe); $ < oe; $++)H[$] = ae[$];
                    return H;
                }
                function u(ae, oe) {
                    var $ = typeof Symbol < "u" && ae[Symbol.iterator] || ae["@@iterator"];
                    if (!$) {
                        if (Array.isArray(ae) || ($ = b(ae)) || oe) {
                            $ && (ae = $);
                            var H = 0, fe = function() {};
                            return {
                                s: fe,
                                n: function() {
                                    return H >= ae.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: ae[H++]
                                    };
                                },
                                e: function(Xe) {
                                    throw Xe;
                                },
                                f: fe
                            };
                        }
                        throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                    }
                    var pe, me = !0, Ie = !1;
                    return {
                        s: function() {
                            $ = $.call(ae);
                        },
                        n: function() {
                            var Xe = $.next();
                            return me = Xe.done, Xe;
                        },
                        e: function(Xe) {
                            Ie = !0, pe = Xe;
                        },
                        f: function() {
                            try {
                                me || $.return == null || $.return();
                            } finally{
                                if (Ie) throw pe;
                            }
                        }
                    };
                }
                function f(ae, oe, $) {
                    return (oe = S(oe)) in ae ? Object.defineProperty(ae, oe, {
                        value: $,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : ae[oe] = $, ae;
                }
                function p(ae, oe) {
                    var $ = Object.keys(ae);
                    if (Object.getOwnPropertySymbols) {
                        var H = Object.getOwnPropertySymbols(ae);
                        oe && (H = H.filter(function(fe) {
                            return Object.getOwnPropertyDescriptor(ae, fe).enumerable;
                        })), $.push.apply($, H);
                    }
                    return $;
                }
                function g(ae) {
                    for(var oe = 1; oe < arguments.length; oe++){
                        var $ = arguments[oe] != null ? arguments[oe] : {};
                        oe % 2 ? p(Object($), !0).forEach(function(H) {
                            f(ae, H, $[H]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(ae, Object.getOwnPropertyDescriptors($)) : p(Object($)).forEach(function(H) {
                            Object.defineProperty(ae, H, Object.getOwnPropertyDescriptor($, H));
                        });
                    }
                    return ae;
                }
                function x(ae, oe) {
                    if (typeof ae != "object" || !ae) return ae;
                    var $ = ae[Symbol.toPrimitive];
                    if ($ !== void 0) {
                        var H = $.call(ae, oe);
                        if (typeof H != "object") return H;
                        throw new TypeError("@@toPrimitive must return a primitive value.");
                    }
                    return (oe === "string" ? String : Number)(ae);
                }
                function S(ae) {
                    var oe = x(ae, "string");
                    return typeof oe == "symbol" ? oe : oe + "";
                }
                function _(ae) {
                    "@babel/helpers - typeof";
                    return _ = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(oe) {
                        return typeof oe;
                    } : function(oe) {
                        return oe && typeof Symbol == "function" && oe.constructor === Symbol && oe !== Symbol.prototype ? "symbol" : typeof oe;
                    }, _(ae);
                }
                function b(ae, oe) {
                    if (ae) {
                        if (typeof ae == "string") return c(ae, oe);
                        var $ = {}.toString.call(ae).slice(8, -1);
                        return $ === "Object" && ae.constructor && ($ = ae.constructor.name), $ === "Map" || $ === "Set" ? Array.from(ae) : $ === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test($) ? c(ae, oe) : void 0;
                    }
                }
                var M = {
                    exports: {}
                }, E = {}, T;
                function k() {
                    return T || (T = 1, E.validateOptions = function(oe, $, H) {
                        if (oe) {
                            var fe = oe ? Object.keys(oe) : [], pe = fe.find(function(Ie) {
                                return !$.includes(Ie);
                            });
                            if (pe) throw new Error('Object "' + H + '" contains an unknown option "' + pe + '"');
                            var me = $.find(function(Ie) {
                                return Object.prototype[Ie] && !fe.includes(Ie);
                            });
                            if (me) throw new Error('Object "' + H + '" contains an inherited option "' + me + '" which is not defined in the object itself but in its prototype. Only plain objects are allowed. Please remove the option from the prototype or override it with a value "undefined".');
                            return oe;
                        }
                    }, E.workerOptsNames = [
                        "credentials",
                        "name",
                        "type"
                    ], E.forkOptsNames = [
                        "cwd",
                        "detached",
                        "env",
                        "execPath",
                        "execArgv",
                        "gid",
                        "serialization",
                        "signal",
                        "killSignal",
                        "silent",
                        "stdio",
                        "uid",
                        "windowsVerbatimArguments",
                        "timeout"
                    ], E.workerThreadOptsNames = [
                        "argv",
                        "env",
                        "eval",
                        "execArgv",
                        "stdin",
                        "stdout",
                        "stderr",
                        "workerData",
                        "trackUnmanagedFds",
                        "transferList",
                        "resourceLimits",
                        "name"
                    ]), E;
                }
                var N, D;
                function L() {
                    return D || (D = 1, N = `!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).worker=n()}(this,(function(){"use strict";function e(n){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(n)}function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var t={};var r=function(e,n){this.message=e,this.transfer=n},o={};function i(e,n){var t=this;if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");if("function"!=typeof e)throw new SyntaxError("Function parameter handler(resolve, reject) missing");var r=[],o=[];this.resolved=!1,this.rejected=!1,this.pending=!0;var a=function(e,n){r.push(e),o.push(n)};this.then=function(e,n){return new i((function(t,r){var o=e?u(e,t,r):t,i=n?u(n,t,r):r;a(o,i)}),t)};var f=function(e){return t.resolved=!0,t.rejected=!1,t.pending=!1,r.forEach((function(n){n(e)})),a=function(n,t){n(e)},f=d=function(){},t},d=function(e){return t.resolved=!1,t.rejected=!0,t.pending=!1,o.forEach((function(n){n(e)})),a=function(n,t){t(e)},f=d=function(){},t};this.cancel=function(){return n?n.cancel():d(new s),t},this.timeout=function(e){if(n)n.timeout(e);else{var r=setTimeout((function(){d(new c("Promise timed out after "+e+" ms"))}),e);t.always((function(){clearTimeout(r)}))}return t},e((function(e){f(e)}),(function(e){d(e)}))}function u(e,n,t){return function(r){try{var o=e(r);o&&"function"==typeof o.then&&"function"==typeof o.catch?o.then(n,t):n(o)}catch(e){t(e)}}}function s(e){this.message=e||"promise cancelled",this.stack=(new Error).stack}function c(e){this.message=e||"timeout exceeded",this.stack=(new Error).stack}return i.prototype.catch=function(e){return this.then(null,e)},i.prototype.always=function(e){return this.then(e,e)},i.prototype.finally=function(e){var n=this,t=function(){return new i((function(e){return e()})).then(e).then((function(){return n}))};return this.then(t,t)},i.all=function(e){return new i((function(n,t){var r=e.length,o=[];r?e.forEach((function(e,i){e.then((function(e){o[i]=e,0==--r&&n(o)}),(function(e){r=0,t(e)}))})):n(o)}))},i.defer=function(){var e={};return e.promise=new i((function(n,t){e.resolve=n,e.reject=t})),e},s.prototype=new Error,s.prototype.constructor=Error,s.prototype.name="CancellationError",i.CancellationError=s,c.prototype=new Error,c.prototype.constructor=Error,c.prototype.name="TimeoutError",i.TimeoutError=c,o.Promise=i,function(n){var t=r,i=o.Promise,u="__workerpool-cleanup__",s={exit:function(){}},c={addAbortListener:function(e){s.abortListeners.push(e)},emit:s.emit};if("undefined"!=typeof self&&"function"==typeof postMessage&&"function"==typeof addEventListener)s.on=function(e,n){addEventListener(e,(function(e){n(e.data)}))},s.send=function(e,n){n?postMessage(e,n):postMessage(e)};else{if("undefined"==typeof process)throw new Error("Script must be executed as a worker");var a;try{a=require("worker_threads")}catch(n){if("object"!==e(n)||null===n||"MODULE_NOT_FOUND"!==n.code)throw n}if(a&&null!==a.parentPort){var f=a.parentPort;s.send=f.postMessage.bind(f),s.on=f.on.bind(f),s.exit=process.exit.bind(process)}else s.on=process.on.bind(process),s.send=function(e){process.send(e)},s.on("disconnect",(function(){process.exit(1)})),s.exit=process.exit.bind(process)}function d(e){return Object.getOwnPropertyNames(e).reduce((function(n,t){return Object.defineProperty(n,t,{value:e[t],enumerable:!0})}),{})}function l(e){return e&&"function"==typeof e.then&&"function"==typeof e.catch}s.methods={},s.methods.run=function(e,n){var t=new Function("return ("+e+").apply(this, arguments);");return t.worker=c,t.apply(t,n)},s.methods.methods=function(){return Object.keys(s.methods)},s.terminationHandler=void 0,s.abortListenerTimeout=1e3,s.abortListeners=[],s.terminateAndExit=function(e){var n=function(){s.exit(e)};if(!s.terminationHandler)return n();var t=s.terminationHandler(e);return l(t)?(t.then(n,n),t):(n(),new i((function(e,n){n(new Error("Worker terminating"))})))},s.cleanup=function(e){if(!s.abortListeners.length)return s.send({id:e,method:u,error:d(new Error("Worker terminating"))}),new i((function(e){e()}));var n,t=s.abortListeners.map((function(e){return e()})),r=new i((function(e,t){n=setTimeout((function(){t(new Error("Timeout occured waiting for abort handler, killing worker"))}),s.abortListenerTimeout)})),o=i.all(t).then((function(){clearTimeout(n),s.abortListeners.length||(s.abortListeners=[])}),(function(){clearTimeout(n),s.exit()}));return i.all([o,r]).then((function(){s.send({id:e,method:u,error:null})}),(function(n){s.send({id:e,method:u,error:n?d(n):null})}))};var p=null;s.on("message",(function(e){if("__workerpool-terminate__"===e)return s.terminateAndExit(0);if(e.method===u)return s.cleanup(e.id);try{var n=s.methods[e.method];if(!n)throw new Error('Unknown method "'+e.method+'"');p=e.id;var r=n.apply(n,e.params);l(r)?r.then((function(n){n instanceof t?s.send({id:e.id,result:n.message,error:null},n.transfer):s.send({id:e.id,result:n,error:null}),p=null})).catch((function(n){s.send({id:e.id,result:null,error:d(n)}),p=null})):(r instanceof t?s.send({id:e.id,result:r.message,error:null},r.transfer):s.send({id:e.id,result:r,error:null}),p=null)}catch(n){s.send({id:e.id,result:null,error:d(n)})}})),s.register=function(e,n){if(e)for(var t in e)e.hasOwnProperty(t)&&(s.methods[t]=e[t],s.methods[t].worker=c);n&&(s.terminationHandler=n.onTerminate,s.abortListenerTimeout=n.abortListenerTimeout||1e3),s.send("ready")},s.emit=function(e){if(p){if(e instanceof t)return void s.send({id:p,isEvent:!0,payload:e.message},e.transfer);s.send({id:p,isEvent:!0,payload:e})}},n.add=s.register,n.emit=s.emit}(t),n(t)}));
//# sourceMappingURL=worker.min.js.map
`), N;
                }
                var R;
                function A() {
                    if (R) return M.exports;
                    R = 1;
                    var ae = l(), oe = ae.Promise, $ = s, H = k(), fe = H.validateOptions, pe = H.forkOptsNames, me = H.workerThreadOptsNames, Ie = H.workerOptsNames, Xe = "__workerpool-terminate__", Ze = "__workerpool-cleanup__";
                    function at() {
                        var Re = Pe();
                        if (!Re) throw new Error("WorkerPool: workerType = 'thread' is not supported, Node >= 11.7.0 required");
                        return Re;
                    }
                    function Je() {
                        if (typeof Worker != "function" && ((typeof Worker > "u" ? "undefined" : _(Worker)) !== "object" || typeof Worker.prototype.constructor != "function")) throw new Error("WorkerPool: Web Workers not supported");
                    }
                    function Pe() {
                        try {
                            return wf;
                        } catch (Re) {
                            if (_(Re) === "object" && Re !== null && Re.code === "MODULE_NOT_FOUND") return null;
                            throw Re;
                        }
                    }
                    function Fe() {
                        if ($.platform === "browser") {
                            if (typeof Blob > "u") throw new Error("Blob not supported by the browser");
                            if (!window.URL || typeof window.URL.createObjectURL != "function") throw new Error("URL.createObjectURL not supported by the browser");
                            var Re = new Blob([
                                L()
                            ], {
                                type: "text/javascript"
                            });
                            return window.URL.createObjectURL(Re);
                        } else return __dirname + "/worker.js";
                    }
                    function nt(Re, Ue) {
                        if (Ue.workerType === "web") return Je(), ct(Re, Ue.workerOpts, Worker);
                        if (Ue.workerType === "thread") return We = at(), st(Re, We, Ue);
                        if (Ue.workerType === "process" || !Ue.workerType) return _e(Re, $e(Ue), wf);
                        if ($.platform === "browser") return Je(), ct(Re, Ue.workerOpts, Worker);
                        var We = Pe();
                        return We ? st(Re, We, Ue) : _e(Re, $e(Ue), wf);
                    }
                    function ct(Re, Ue, We) {
                        fe(Ue, Ie, "workerOpts");
                        var rt = new We(Re, Ue);
                        return rt.isBrowserWorker = !0, rt.on = function(pt, Nt) {
                            this.addEventListener(pt, function(Zt) {
                                Nt(Zt.data);
                            });
                        }, rt.send = function(pt, Nt) {
                            this.postMessage(pt, Nt);
                        }, rt;
                    }
                    function st(Re, Ue, We) {
                        var rt, pt;
                        fe(We?.workerThreadOpts, me, "workerThreadOpts");
                        var Nt = new Ue.Worker(Re, g({
                            stdout: (rt = We?.emitStdStreams) !== null && rt !== void 0 ? rt : !1,
                            stderr: (pt = We?.emitStdStreams) !== null && pt !== void 0 ? pt : !1
                        }, We?.workerThreadOpts));
                        return Nt.isWorkerThread = !0, Nt.send = function(Zt, wt) {
                            this.postMessage(Zt, wt);
                        }, Nt.kill = function() {
                            return this.terminate(), !0;
                        }, Nt.disconnect = function() {
                            this.terminate();
                        }, We != null && We.emitStdStreams && (Nt.stdout.on("data", function(Zt) {
                            return Nt.emit("stdout", Zt);
                        }), Nt.stderr.on("data", function(Zt) {
                            return Nt.emit("stderr", Zt);
                        })), Nt;
                    }
                    function _e(Re, Ue, We) {
                        fe(Ue.forkOpts, pe, "forkOpts");
                        var rt = We.fork(Re, Ue.forkArgs, Ue.forkOpts), pt = rt.send;
                        return rt.send = function(Nt) {
                            return pt.call(rt, Nt);
                        }, Ue.emitStdStreams && (rt.stdout.on("data", function(Nt) {
                            return rt.emit("stdout", Nt);
                        }), rt.stderr.on("data", function(Nt) {
                            return rt.emit("stderr", Nt);
                        })), rt.isChildProcess = !0, rt;
                    }
                    function $e(Re) {
                        Re = Re || {};
                        var Ue = process.execArgv.join(" "), We = Ue.indexOf("--inspect") !== -1, rt = Ue.indexOf("--debug-brk") !== -1, pt = [];
                        return We && (pt.push("--inspect=" + Re.debugPort), rt && pt.push("--debug-brk")), process.execArgv.forEach(function(Nt) {
                            Nt.indexOf("--max-old-space-size") > -1 && pt.push(Nt);
                        }), Object.assign({}, Re, {
                            forkArgs: Re.forkArgs,
                            forkOpts: Object.assign({}, Re.forkOpts, {
                                execArgv: (Re.forkOpts && Re.forkOpts.execArgv || []).concat(pt),
                                stdio: Re.emitStdStreams ? "pipe" : void 0
                            })
                        });
                    }
                    function ht(Re) {
                        for(var Ue = new Error(""), We = Object.keys(Re), rt = 0; rt < We.length; rt++)Ue[We[rt]] = Re[We[rt]];
                        return Ue;
                    }
                    function Se(Re, Ue) {
                        if (Object.keys(Re.processing).length === 1) {
                            var We = Object.values(Re.processing)[0];
                            We.options && typeof We.options.on == "function" && We.options.on(Ue);
                        }
                    }
                    function lt(Re, Ue) {
                        var We = this, rt = Ue || {};
                        this.script = Re || Fe(), this.worker = nt(this.script, rt), this.debugPort = rt.debugPort, this.forkOpts = rt.forkOpts, this.forkArgs = rt.forkArgs, this.workerOpts = rt.workerOpts, this.workerThreadOpts = rt.workerThreadOpts, this.workerTerminateTimeout = rt.workerTerminateTimeout, Re || (this.worker.ready = !0), this.requestQueue = [], this.worker.on("stdout", function(wt) {
                            Se(We, {
                                stdout: wt.toString()
                            });
                        }), this.worker.on("stderr", function(wt) {
                            Se(We, {
                                stderr: wt.toString()
                            });
                        }), this.worker.on("message", function(wt) {
                            if (!We.terminated) if (typeof wt == "string" && wt === "ready") We.worker.ready = !0, Nt();
                            else {
                                var Nn = wt.id, pn = We.processing[Nn];
                                if (pn !== void 0 && (wt.isEvent ? pn.options && typeof pn.options.on == "function" && pn.options.on(wt.payload) : (delete We.processing[Nn], We.terminating === !0 && We.terminate(), wt.error ? pn.resolver.reject(ht(wt.error)) : pn.resolver.resolve(wt.result))), wt.method === Ze) {
                                    var Fr = We.tracking[wt.id];
                                    Fr !== void 0 && (wt.error ? (clearTimeout(Fr.timeoutId), Fr.resolver.reject(ht(wt.error))) : (We.tracking && clearTimeout(Fr.timeoutId), Fr.resolver.resolve(Fr.result))), delete We.tracking[Nn];
                                }
                            }
                        });
                        function pt(wt) {
                            We.terminated = !0;
                            for(var Nn in We.processing)We.processing[Nn] !== void 0 && We.processing[Nn].resolver.reject(wt);
                            We.processing = Object.create(null);
                        }
                        function Nt() {
                            var wt = u(We.requestQueue.splice(0)), Nn;
                            try {
                                for(wt.s(); !(Nn = wt.n()).done;){
                                    var pn = Nn.value;
                                    We.worker.send(pn.message, pn.transfer);
                                }
                            } catch (Fr) {
                                wt.e(Fr);
                            } finally{
                                wt.f();
                            }
                        }
                        var Zt = this.worker;
                        this.worker.on("error", pt), this.worker.on("exit", function(wt, Nn) {
                            var pn = `Workerpool Worker terminated Unexpectedly
`;
                            pn += "    exitCode: `" + wt + "`\n", pn += "    signalCode: `" + Nn + "`\n", pn += "    workerpool.script: `" + We.script + "`\n", pn += "    spawnArgs: `" + Zt.spawnargs + "`\n", pn += "    spawnfile: `" + Zt.spawnfile + "`\n", pn += "    stdout: `" + Zt.stdout + "`\n", pn += "    stderr: `" + Zt.stderr + "`\n", pt(new Error(pn));
                        }), this.processing = Object.create(null), this.tracking = Object.create(null), this.terminating = !1, this.terminated = !1, this.cleaning = !1, this.terminationHandler = null, this.lastId = 0;
                    }
                    return lt.prototype.methods = function() {
                        return this.exec("methods");
                    }, lt.prototype.exec = function(Re, Ue, We, rt) {
                        We || (We = oe.defer());
                        var pt = ++this.lastId;
                        this.processing[pt] = {
                            id: pt,
                            resolver: We,
                            options: rt
                        };
                        var Nt = {
                            message: {
                                id: pt,
                                method: Re,
                                params: Ue
                            },
                            transfer: rt && rt.transfer
                        };
                        this.terminated ? We.reject(new Error("Worker is terminated")) : this.worker.ready ? this.worker.send(Nt.message, Nt.transfer) : this.requestQueue.push(Nt);
                        var Zt = this;
                        return We.promise.catch(function(wt) {
                            if (wt instanceof oe.CancellationError || wt instanceof oe.TimeoutError) return Zt.tracking[pt] = {
                                id: pt,
                                resolver: oe.defer()
                            }, delete Zt.processing[pt], Zt.tracking[pt].resolver.promise = Zt.tracking[pt].resolver.promise.catch(function(Nn) {
                                delete Zt.tracking[pt];
                                var pn = Zt.terminateAndNotify(!0).then(function() {
                                    throw Nn;
                                }, function(Fr) {
                                    throw Fr;
                                });
                                return pn;
                            }), Zt.worker.send({
                                id: pt,
                                method: Ze
                            }), Zt.tracking[pt].timeoutId = setTimeout(function() {
                                Zt.tracking[pt].resolver.reject(wt);
                            }, Zt.workerTerminateTimeout), Zt.tracking[pt].resolver.promise;
                            throw wt;
                        });
                    }, lt.prototype.busy = function() {
                        return this.cleaning || Object.keys(this.processing).length > 0;
                    }, lt.prototype.terminate = function(Re, Ue) {
                        var We = this;
                        if (Re) {
                            for(var rt in this.processing)this.processing[rt] !== void 0 && this.processing[rt].resolver.reject(new Error("Worker terminated"));
                            this.processing = Object.create(null);
                        }
                        for(var pt = 0, Nt = Object.values(We.tracking); pt < Nt.length; pt++){
                            var Zt = Nt[pt];
                            clearTimeout(Zt.timeoutId), Zt.resolver.reject(new Error("Worker Terminating"));
                        }
                        if (We.tracking = Object.create(null), typeof Ue == "function" && (this.terminationHandler = Ue), this.busy()) this.terminating = !0;
                        else {
                            var wt = function(Fr) {
                                if (We.terminated = !0, We.cleaning = !1, We.worker != null && We.worker.removeAllListeners && We.worker.removeAllListeners("message"), We.worker = null, We.terminating = !1, We.terminationHandler) We.terminationHandler(Fr, We);
                                else if (Fr) throw Fr;
                            };
                            if (this.worker) if (typeof this.worker.kill == "function") {
                                if (this.worker.killed) {
                                    wt(new Error("worker already killed!"));
                                    return;
                                }
                                var Nn = setTimeout(function() {
                                    We.worker && We.worker.kill();
                                }, this.workerTerminateTimeout);
                                this.worker.once("exit", function() {
                                    clearTimeout(Nn), We.worker && (We.worker.killed = !0), wt();
                                }), this.worker.ready ? this.worker.send(Xe) : this.requestQueue.push({
                                    message: Xe
                                }), this.cleaning = !0;
                                return;
                            } else if (typeof this.worker.terminate == "function") this.worker.terminate(), this.worker.killed = !0;
                            else throw new Error("Failed to terminate worker");
                            wt();
                        }
                    }, lt.prototype.terminateAndNotify = function(Re, Ue) {
                        var We = oe.defer();
                        return Ue && We.promise.timeout(Ue), this.terminate(Re, function(rt, pt) {
                            rt ? We.reject(rt) : We.resolve(pt);
                        }), We.promise;
                    }, M.exports = lt, M.exports._tryRequireWorkerThreads = Pe, M.exports._setupProcessWorker = _e, M.exports._setupBrowserWorker = ct, M.exports._setupWorkerThreadWorker = st, M.exports.ensureWorkerThreads = at, M.exports;
                }
                var P, B;
                function U() {
                    if (B) return P;
                    B = 1;
                    var ae = 65535;
                    P = oe;
                    function oe() {
                        this.ports = Object.create(null), this.length = 0;
                    }
                    return oe.prototype.nextAvailableStartingAt = function($) {
                        for(; this.ports[$] === !0;)$++;
                        if ($ >= ae) throw new Error("WorkerPool debug port limit reached: " + $ + ">= " + ae);
                        return this.ports[$] = !0, this.length++, $;
                    }, oe.prototype.releasePort = function($) {
                        delete this.ports[$], this.length--;
                    }, P;
                }
                var j, K;
                function q() {
                    if (K) return j;
                    K = 1;
                    var ae = l(), oe = ae.Promise, $ = A(), H = s, fe = U(), pe = new fe;
                    function me(Je, Pe) {
                        typeof Je == "string" ? this.script = Je || null : (this.script = null, Pe = Je), this.workers = [], this.tasks = [], Pe = Pe || {}, this.forkArgs = Object.freeze(Pe.forkArgs || []), this.forkOpts = Object.freeze(Pe.forkOpts || {}), this.workerOpts = Object.freeze(Pe.workerOpts || {}), this.workerThreadOpts = Object.freeze(Pe.workerThreadOpts || {}), this.debugPortStart = Pe.debugPortStart || 43210, this.nodeWorker = Pe.nodeWorker, this.workerType = Pe.workerType || Pe.nodeWorker || "auto", this.maxQueueSize = Pe.maxQueueSize || 1 / 0, this.workerTerminateTimeout = Pe.workerTerminateTimeout || 1e3, this.onCreateWorker = Pe.onCreateWorker || function() {
                            return null;
                        }, this.onTerminateWorker = Pe.onTerminateWorker || function() {
                            return null;
                        }, this.emitStdStreams = Pe.emitStdStreams || !1, Pe && "maxWorkers" in Pe ? (Ie(Pe.maxWorkers), this.maxWorkers = Pe.maxWorkers) : this.maxWorkers = Math.max((H.cpus || 4) - 1, 1), Pe && "minWorkers" in Pe && (Pe.minWorkers === "max" ? this.minWorkers = this.maxWorkers : (Xe(Pe.minWorkers), this.minWorkers = Pe.minWorkers, this.maxWorkers = Math.max(this.minWorkers, this.maxWorkers)), this._ensureMinWorkers()), this._boundNext = this._next.bind(this), this.workerType === "thread" && $.ensureWorkerThreads();
                    }
                    me.prototype.exec = function(Je, Pe, Fe) {
                        if (Pe && !Array.isArray(Pe)) throw new TypeError('Array expected as argument "params"');
                        if (typeof Je == "string") {
                            var nt = oe.defer();
                            if (this.tasks.length >= this.maxQueueSize) throw new Error("Max queue size of " + this.maxQueueSize + " reached");
                            var ct = this.tasks, st = {
                                method: Je,
                                params: Pe,
                                resolver: nt,
                                timeout: null,
                                options: Fe
                            };
                            ct.push(st);
                            var _e = nt.promise.timeout;
                            return nt.promise.timeout = function(ht) {
                                return ct.indexOf(st) !== -1 ? (st.timeout = ht, nt.promise) : _e.call(nt.promise, ht);
                            }, this._next(), nt.promise;
                        } else {
                            if (typeof Je == "function") return this.exec("run", [
                                String(Je),
                                Pe
                            ], Fe);
                            throw new TypeError('Function or string expected as argument "method"');
                        }
                    }, me.prototype.proxy = function() {
                        if (arguments.length > 0) throw new Error("No arguments expected");
                        var Je = this;
                        return this.exec("methods").then(function(Pe) {
                            var Fe = {};
                            return Pe.forEach(function(nt) {
                                Fe[nt] = function() {
                                    return Je.exec(nt, Array.prototype.slice.call(arguments));
                                };
                            }), Fe;
                        });
                    }, me.prototype._next = function() {
                        if (this.tasks.length > 0) {
                            var Je = this._getWorker();
                            if (Je) {
                                var Pe = this, Fe = this.tasks.shift();
                                if (Fe.resolver.promise.pending) {
                                    var nt = Je.exec(Fe.method, Fe.params, Fe.resolver, Fe.options).then(Pe._boundNext).catch(function() {
                                        if (Je.terminated) return Pe._removeWorker(Je);
                                    }).then(function() {
                                        Pe._next();
                                    });
                                    typeof Fe.timeout == "number" && nt.timeout(Fe.timeout);
                                } else Pe._next();
                            }
                        }
                    }, me.prototype._getWorker = function() {
                        for(var Je = this.workers, Pe = 0; Pe < Je.length; Pe++){
                            var Fe = Je[Pe];
                            if (Fe.busy() === !1) return Fe;
                        }
                        return Je.length < this.maxWorkers ? (Fe = this._createWorkerHandler(), Je.push(Fe), Fe) : null;
                    }, me.prototype._removeWorker = function(Je) {
                        var Pe = this;
                        return pe.releasePort(Je.debugPort), this._removeWorkerFromList(Je), this._ensureMinWorkers(), new oe(function(Fe, nt) {
                            Je.terminate(!1, function(ct) {
                                Pe.onTerminateWorker({
                                    forkArgs: Je.forkArgs,
                                    forkOpts: Je.forkOpts,
                                    workerThreadOpts: Je.workerThreadOpts,
                                    script: Je.script
                                }), ct ? nt(ct) : Fe(Je);
                            });
                        });
                    }, me.prototype._removeWorkerFromList = function(Je) {
                        var Pe = this.workers.indexOf(Je);
                        Pe !== -1 && this.workers.splice(Pe, 1);
                    }, me.prototype.terminate = function(Je, Pe) {
                        var Fe = this;
                        this.tasks.forEach(function($e) {
                            $e.resolver.reject(new Error("Pool terminated"));
                        }), this.tasks.length = 0;
                        var nt = function(ht) {
                            pe.releasePort(ht.debugPort), this._removeWorkerFromList(ht);
                        }, ct = nt.bind(this), st = [], _e = this.workers.slice();
                        return _e.forEach(function($e) {
                            var ht = $e.terminateAndNotify(Je, Pe).then(ct).always(function() {
                                Fe.onTerminateWorker({
                                    forkArgs: $e.forkArgs,
                                    forkOpts: $e.forkOpts,
                                    workerThreadOpts: $e.workerThreadOpts,
                                    script: $e.script
                                });
                            });
                            st.push(ht);
                        }), oe.all(st);
                    }, me.prototype.stats = function() {
                        var Je = this.workers.length, Pe = this.workers.filter(function(Fe) {
                            return Fe.busy();
                        }).length;
                        return {
                            totalWorkers: Je,
                            busyWorkers: Pe,
                            idleWorkers: Je - Pe,
                            pendingTasks: this.tasks.length,
                            activeTasks: Pe
                        };
                    }, me.prototype._ensureMinWorkers = function() {
                        if (this.minWorkers) for(var Je = this.workers.length; Je < this.minWorkers; Je++)this.workers.push(this._createWorkerHandler());
                    }, me.prototype._createWorkerHandler = function() {
                        var Je = this.onCreateWorker({
                            forkArgs: this.forkArgs,
                            forkOpts: this.forkOpts,
                            workerOpts: this.workerOpts,
                            workerThreadOpts: this.workerThreadOpts,
                            script: this.script
                        }) || {};
                        return new $(Je.script || this.script, {
                            forkArgs: Je.forkArgs || this.forkArgs,
                            forkOpts: Je.forkOpts || this.forkOpts,
                            workerOpts: Je.workerOpts || this.workerOpts,
                            workerThreadOpts: Je.workerThreadOpts || this.workerThreadOpts,
                            debugPort: pe.nextAvailableStartingAt(this.debugPortStart),
                            workerType: this.workerType,
                            workerTerminateTimeout: this.workerTerminateTimeout,
                            emitStdStreams: this.emitStdStreams
                        });
                    };
                    function Ie(Je) {
                        if (!Ze(Je) || !at(Je) || Je < 1) throw new TypeError("Option maxWorkers must be an integer number >= 1");
                    }
                    function Xe(Je) {
                        if (!Ze(Je) || !at(Je) || Je < 0) throw new TypeError("Option minWorkers must be an integer number >= 0");
                    }
                    function Ze(Je) {
                        return typeof Je == "number";
                    }
                    function at(Je) {
                        return Math.round(Je) == Je;
                    }
                    return j = me, j;
                }
                var te = {}, W, J;
                function Q() {
                    if (J) return W;
                    J = 1;
                    function ae(oe, $) {
                        this.message = oe, this.transfer = $;
                    }
                    return W = ae, W;
                }
                var Y;
                function le() {
                    return Y || (Y = 1, function(ae) {
                        var oe = Q(), $ = l().Promise, H = "__workerpool-terminate__", fe = "__workerpool-cleanup__", pe = 1e3, me = {
                            exit: function() {}
                        }, Ie = {
                            addAbortListener: function(nt) {
                                me.abortListeners.push(nt);
                            },
                            emit: me.emit
                        };
                        if (typeof self < "u" && typeof postMessage == "function" && typeof addEventListener == "function") me.on = function(Fe, nt) {
                            addEventListener(Fe, function(ct) {
                                nt(ct.data);
                            });
                        }, me.send = function(Fe, nt) {
                            nt ? postMessage(Fe, nt) : postMessage(Fe);
                        };
                        else if (typeof process < "u") {
                            var Xe;
                            try {
                                Xe = wf;
                            } catch (Fe) {
                                if (!(_(Fe) === "object" && Fe !== null && Fe.code === "MODULE_NOT_FOUND")) throw Fe;
                            }
                            if (Xe && Xe.parentPort !== null) {
                                var Ze = Xe.parentPort;
                                me.send = Ze.postMessage.bind(Ze), me.on = Ze.on.bind(Ze), me.exit = process.exit.bind(process);
                            } else me.on = process.on.bind(process), me.send = function(Fe) {
                                process.send(Fe);
                            }, me.on("disconnect", function() {
                                process.exit(1);
                            }), me.exit = process.exit.bind(process);
                        } else throw new Error("Script must be executed as a worker");
                        function at(Fe) {
                            return Object.getOwnPropertyNames(Fe).reduce(function(nt, ct) {
                                return Object.defineProperty(nt, ct, {
                                    value: Fe[ct],
                                    enumerable: !0
                                });
                            }, {});
                        }
                        function Je(Fe) {
                            return Fe && typeof Fe.then == "function" && typeof Fe.catch == "function";
                        }
                        me.methods = {}, me.methods.run = function(nt, ct) {
                            var st = new Function("return (" + nt + ").apply(this, arguments);");
                            return st.worker = Ie, st.apply(st, ct);
                        }, me.methods.methods = function() {
                            return Object.keys(me.methods);
                        }, me.terminationHandler = void 0, me.abortListenerTimeout = pe, me.abortListeners = [], me.terminateAndExit = function(Fe) {
                            var nt = function() {
                                me.exit(Fe);
                            };
                            if (!me.terminationHandler) return nt();
                            var ct = me.terminationHandler(Fe);
                            return Je(ct) ? (ct.then(nt, nt), ct) : (nt(), new $(function(st, _e) {
                                _e(new Error("Worker terminating"));
                            }));
                        }, me.cleanup = function(Fe) {
                            if (!me.abortListeners.length) return me.send({
                                id: Fe,
                                method: fe,
                                error: at(new Error("Worker terminating"))
                            }), new $(function(Se) {
                                Se();
                            });
                            var nt = function() {
                                me.exit();
                            }, ct = function() {
                                me.abortListeners.length || (me.abortListeners = []);
                            }, st = me.abortListeners.map(function(Se) {
                                return Se();
                            }), _e, $e = new $(function(Se, lt) {
                                _e = setTimeout(function() {
                                    lt(new Error("Timeout occured waiting for abort handler, killing worker"));
                                }, me.abortListenerTimeout);
                            }), ht = $.all(st).then(function() {
                                clearTimeout(_e), ct();
                            }, function() {
                                clearTimeout(_e), nt();
                            });
                            return $.all([
                                ht,
                                $e
                            ]).then(function() {
                                me.send({
                                    id: Fe,
                                    method: fe,
                                    error: null
                                });
                            }, function(Se) {
                                me.send({
                                    id: Fe,
                                    method: fe,
                                    error: Se ? at(Se) : null
                                });
                            });
                        };
                        var Pe = null;
                        me.on("message", function(Fe) {
                            if (Fe === H) return me.terminateAndExit(0);
                            if (Fe.method === fe) return me.cleanup(Fe.id);
                            try {
                                var nt = me.methods[Fe.method];
                                if (nt) {
                                    Pe = Fe.id;
                                    var ct = nt.apply(nt, Fe.params);
                                    Je(ct) ? ct.then(function(st) {
                                        st instanceof oe ? me.send({
                                            id: Fe.id,
                                            result: st.message,
                                            error: null
                                        }, st.transfer) : me.send({
                                            id: Fe.id,
                                            result: st,
                                            error: null
                                        }), Pe = null;
                                    }).catch(function(st) {
                                        me.send({
                                            id: Fe.id,
                                            result: null,
                                            error: at(st)
                                        }), Pe = null;
                                    }) : (ct instanceof oe ? me.send({
                                        id: Fe.id,
                                        result: ct.message,
                                        error: null
                                    }, ct.transfer) : me.send({
                                        id: Fe.id,
                                        result: ct,
                                        error: null
                                    }), Pe = null);
                                } else throw new Error('Unknown method "' + Fe.method + '"');
                            } catch (st) {
                                me.send({
                                    id: Fe.id,
                                    result: null,
                                    error: at(st)
                                });
                            }
                        }), me.register = function(Fe, nt) {
                            if (Fe) for(var ct in Fe)Fe.hasOwnProperty(ct) && (me.methods[ct] = Fe[ct], me.methods[ct].worker = Ie);
                            nt && (me.terminationHandler = nt.onTerminate, me.abortListenerTimeout = nt.abortListenerTimeout || pe), me.send("ready");
                        }, me.emit = function(Fe) {
                            if (Pe) {
                                if (Fe instanceof oe) {
                                    me.send({
                                        id: Pe,
                                        isEvent: !0,
                                        payload: Fe.message
                                    }, Fe.transfer);
                                    return;
                                }
                                me.send({
                                    id: Pe,
                                    isEvent: !0,
                                    payload: Fe
                                });
                            }
                        }, ae.add = me.register, ae.emit = me.emit;
                    }(te)), te;
                }
                var ue = s.platform, ie = s.isMainThread, he = s.cpus;
                function ge(ae, oe) {
                    var $ = q();
                    return new $(ae, oe);
                }
                var ve = r.pool = ge;
                function Ee(ae, oe) {
                    var $ = le();
                    $.add(ae, oe);
                }
                var Ce = r.worker = Ee;
                function Ne(ae) {
                    var oe = le();
                    oe.emit(ae);
                }
                var Ve = r.workerEmit = Ne, we = l(), Me = we.Promise, se = r.Promise = Me, Ye = r.Transfer = Q(), Be = r.platform = ue, it = r.isMainThread = ie, de = r.cpus = he;
                n.Promise = se, n.Transfer = Ye, n.cpus = de, n.default = r, n.isMainThread = it, n.platform = Be, n.pool = ve, n.worker = Ce, n.workerEmit = Ve, Object.defineProperty(n, "__esModule", {
                    value: !0
                });
            });
        }(Qx, Qx.exports)), Qx.exports;
    }
    var SSe = _Se();
    const $2 = ({ minX: t, maxX: e, minZ: n, maxZ: r })=>Array.from({
            length: e - t
        }, (i, s)=>Array.from({
                length: r - n
            }, (o, a)=>{
                const l = t + s, c = n + a;
                return {
                    id: `${l}:${c}`,
                    x: l,
                    z: c
                };
            })).flat(), ESe = ({ config: t, currentHash: e, hash: n, chunks: r })=>{
        const i = X.useMemo(()=>Array.from(r.values()).map(({ chunk: s, texture: o })=>v.jsxs("mesh", {
                    position: [
                        s.x * t.chunkSize * 1.001,
                        -1,
                        s.z * t.chunkSize * 1.001
                    ],
                    rotation: [
                        -Math.PI / 2,
                        0,
                        0
                    ],
                    receiveShadow: !0,
                    children: [
                        v.jsx("planeGeometry", {
                            args: [
                                t.chunkSize,
                                t.chunkSize
                            ]
                        }),
                        v.jsx("meshStandardMaterial", {
                            color: 16777215,
                            map: o
                        })
                    ]
                }, `chunk-${s.id}`)), [
            n
        ]);
        return v.jsxs(v.Fragment, {
            children: [
                v.jsx("mesh", {
                    position: [
                        t.plotSize / 2,
                        0,
                        t.plotSize / 2
                    ],
                    children: v.jsx("boxGeometry", {
                        args: [
                            t.plotSize,
                            1,
                            t.plotSize
                        ]
                    })
                }),
                i,
                $2(e).map(({ id: s, x: o, z: a })=>v.jsxs("mesh", {
                        position: [
                            o * t.chunkSize * 1.001,
                            -2,
                            a * t.chunkSize * 1.001
                        ],
                        rotation: [
                            -Math.PI / 2,
                            0,
                            0
                        ],
                        receiveShadow: !0,
                        children: [
                            v.jsx("planeGeometry", {
                                args: [
                                    t.chunkSize,
                                    t.chunkSize
                                ]
                            }),
                            v.jsx("meshStandardMaterial", {
                                color: 3425622
                            })
                        ]
                    }, `placeholder-chunk-${s}`))
            ]
        });
    }, MSe = ({ chunkSize: t, offset: e = 0 })=>{
        const { camera: n, size: r } = Ac(({ camera: i, size: s })=>({
                camera: i,
                size: s
            }));
        return X.useEffect(()=>{
            n instanceof ad || console.error("This computation is designed for an orthographic camera.");
        }, [
            n
        ]), X.useMemo(()=>()=>{
                const i = (n.top - n.bottom) / n.zoom, o = (n.right - n.left) / n.zoom * .5, a = i * .5, l = t / 2, c = Math.floor((n.position.x - o + l) / t) - e, u = Math.ceil((n.position.x + o + l) / t) + e, f = Math.floor((n.position.z - a + l) / t) - e, p = Math.ceil((n.position.z + a + l) / t) + e;
                return {
                    hash: `[${c} → ${u}]:[${f} → ${p}]`,
                    count: (u - c) * (p - f),
                    minX: c,
                    maxX: u,
                    minZ: f,
                    maxZ: p
                };
            }, [
            n,
            r,
            t,
            e
        ]);
    };
    async function TSe(t, e, { concurrency: n = Number.POSITIVE_INFINITY, stopOnError: r = !0, signal: i } = {}) {
        return new Promise((s, o)=>{
            if (t[Symbol.iterator] === void 0 && t[Symbol.asyncIterator] === void 0) throw new TypeError(`Expected \`input\` to be either an \`Iterable\` or \`AsyncIterable\`, got (${typeof t})`);
            if (typeof e != "function") throw new TypeError("Mapper function is required");
            if (!(Number.isSafeInteger(n) && n >= 1 || n === Number.POSITIVE_INFINITY)) throw new TypeError(`Expected \`concurrency\` to be an integer from 1 and up or \`Infinity\`, got \`${n}\` (${typeof n})`);
            const a = [], l = [], c = new Map;
            let u = !1, f = !1, p = !1, g = 0, x = 0;
            const S = t[Symbol.iterator] === void 0 ? t[Symbol.asyncIterator]() : t[Symbol.iterator](), _ = ()=>{
                E(i.reason);
            }, b = ()=>{
                i?.removeEventListener("abort", _);
            }, M = (k)=>{
                s(k), b();
            }, E = (k)=>{
                u = !0, f = !0, o(k), b();
            };
            i && (i.aborted && E(i.reason), i.addEventListener("abort", _, {
                once: !0
            }));
            const T = async ()=>{
                if (f) return;
                const k = await S.next(), N = x;
                if (x++, k.done) {
                    if (p = !0, g === 0 && !f) {
                        if (!r && l.length > 0) {
                            E(new AggregateError(l));
                            return;
                        }
                        if (f = !0, c.size === 0) {
                            M(a);
                            return;
                        }
                        const D = [];
                        for (const [L, R] of a.entries())c.get(L) !== y4 && D.push(R);
                        M(D);
                    }
                    return;
                }
                g++, (async ()=>{
                    try {
                        const D = await k.value;
                        if (f) return;
                        const L = await e(D, N);
                        L === y4 && c.set(N, L), a[N] = L, g--, await T();
                    } catch (D) {
                        if (r) E(D);
                        else {
                            l.push(D), g--;
                            try {
                                await T();
                            } catch (L) {
                                E(L);
                            }
                        }
                    }
                })();
            };
            (async ()=>{
                for(let k = 0; k < n; k++){
                    try {
                        await T();
                    } catch (N) {
                        E(N);
                        break;
                    }
                    if (p || u) break;
                }
            })();
        });
    }
    const y4 = Symbol("skip"), CSe = async ({ pool: t, mapId: e, seed: n, hash: r, skip: i, concurrency: s = 1 / 0, onChunk: o, onComplete: a, abort: { signal: l } = new AbortController })=>{
        const c = new KW.Timer;
        return c.start(), console.info(`	[generator] Started generator for [${r.count} chunks] ${r.hash}`), performance.mark(`generator-${r.hash}-start`), TSe($2(r).filter(({ id: u })=>!i.includes(u)), async ({ z: u, x: f })=>{
            const p = t.exec("chunkOf", [
                {
                    seed: n,
                    mapId: e,
                    plotCount: B$.plotCount,
                    x: f,
                    z: u
                }
            ]);
            return o?.(p), p;
        }, {
            concurrency: s,
            stopOnError: !1,
            signal: l
        }).then((u)=>(a?.(u), console.info(`	[generator]	- Finished [generated ${(100 * u.length / r.count).toFixed(0)}%] [${c.format()}]`), performance.mark(`generator-${r.hash}-end`), performance.measure(`generator-${r.hash}`, `generator-${r.hash}-start`, `generator-${r.hash}-end`), u)).catch((u)=>{
            performance.mark(`generator-${r.hash}-end`), performance.measure(`generator-${r.hash}`, `generator-${r.hash}-start`, `generator-${r.hash}-end`), console.warn(u);
        });
    }, ISe = "/assets/chunkOf-DxorOsXE.js", RSe = ({ mapId: t, config: e, zoom: n, offset: r = 0, limit: i = 1024, onCamera: s })=>{
        const { camera: o } = Ac(({ camera: M })=>({
                camera: M
            })), a = X.useMemo(()=>SSe.pool(ISe, {
                workerOpts: {
                    type: "module"
                }
            }), []), l = X.useMemo(()=>new H2({
                max: i,
                ttl: 0
            }), []), [c, u] = X.useState(void 0), f = X.useRef(!1);
        rSe(f.current, "progress", "default");
        const p = X.useRef([]), g = X.useRef(new AbortController), x = MSe({
            chunkSize: e.chunkSize,
            offset: r
        }), [S, _] = X.useState(x()), b = bSe(async ()=>{
            s?.({
                x: o.position.x,
                z: o.position.z,
                zoom: o.zoom
            });
            const M = x();
            if (_(M), $2(M).forEach(({ id: T })=>{
                l.get(T);
            }), p.current.includes(M)) return;
            p.current.push(M), new KW.Timer().start(), console.info(`[Chunks] Requesting chunks [${M.count}] ${M.hash}`), g.current.abort(`New generator request [${M.hash}]`), f.current = !0, CSe({
                pool: a,
                mapId: t,
                seed: t,
                hash: M,
                skip: [
                    ...l.keys()
                ],
                abort: g.current = new AbortController,
                onComplete (T) {
                    f.current = !1, p.current = [], performance.mark("generator-onComplete-start");
                    for (const { tiles: k, ...N } of T){
                        const D = new tc(new Uint8Array(N.texture.data), N.texture.size, N.texture.size);
                        D.needsUpdate = !0, l.set(N.id, {
                            chunk: N,
                            texture: D
                        });
                    }
                    performance.mark("generator-onComplete-end"), performance.measure("generator-onComplete", "generator-onComplete-start", "generator-onComplete-end"), u(M.hash);
                }
            });
        }, 1e3);
        return X.useEffect(()=>(b(), ()=>{
                l.clear(), g.current.abort("Unmounted"), a.terminate();
            }), []), v.jsxs(v.Fragment, {
            children: [
                v.jsx("directionalLight", {
                    castShadow: !0,
                    color: 16777215,
                    intensity: 2.5,
                    position: [
                        0,
                        256,
                        256
                    ],
                    "shadow-mapSize": [
                        4096,
                        4096
                    ],
                    "shadow-bias": -1e-4,
                    "shadow-normalBias": .1,
                    "shadow-radius": 15
                }),
                v.jsx(fSe, {
                    enableRotate: !1,
                    enablePan: !0,
                    enableZoom: !0,
                    enableDamping: !0,
                    screenSpacePanning: !0,
                    zoomToCursor: !0,
                    zoom0: n,
                    minZoom: .05,
                    maxZoom: 1,
                    mouseButtons: f.current ? {
                        LEFT: Ku.PAN
                    } : {
                        LEFT: Ku.PAN
                    },
                    touches: f.current ? {
                        ONE: $l.PAN,
                        TWO: $l.DOLLY_PAN
                    } : {
                        ONE: $l.PAN,
                        TWO: $l.DOLLY_PAN
                    },
                    onEnd: b,
                    makeDefault: !0
                }),
                v.jsx(ESe, {
                    config: e,
                    chunks: l,
                    hash: c,
                    currentHash: S
                })
            ]
        });
    }, ASe = ({ zoom: t, children: e })=>v.jsxs(nSe, {
            frameloop: "demand",
            gl: {
                preserveDrawingBuffer: !1,
                powerPreference: "high-performance",
                toneMapping: jT,
                toneMappingExposure: 1,
                antialias: !0
            },
            camera: {
                zoom: t,
                position: [
                    0,
                    16,
                    0
                ],
                up: [
                    0,
                    0,
                    -1
                ],
                near: .1,
                far: 4096
            },
            shadows: !0,
            dpr: [
                1,
                2
            ],
            orthographic: !0,
            children: [
                v.jsx("color", {
                    attach: "background",
                    args: [
                        1053968
                    ]
                }),
                v.jsx(vSe, {}),
                v.jsx("ambientLight", {
                    intensity: .25
                }),
                e
            ]
        }), NSe = ({ mapId: t, config: e, zoom: n = 8 })=>v.jsx("div", {
            className: dn([
                "w-screen",
                "h-screen",
                "overflow-hidden"
            ]),
            children: v.jsx(ASe, {
                zoom: n,
                children: v.jsx(RSe, {
                    mapId: t,
                    config: e,
                    zoom: n
                })
            })
        }), PSe = G.object({
        x: G.number().optional(),
        z: G.number().optional(),
        zoomToId: G.string().optional()
    }), c8 = jt("/$locale/apps/derivean/map/$mapId")({
        validateSearch: Vr(PSe),
        async loader ({ context: { queryClient: t, kysely: e, session: n }, params: { mapId: r } }) {
            const i = await n();
            return {
                user: i,
                cycle: await t.ensureQueryData({
                    queryKey: [
                        "map",
                        r,
                        "cycle"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (s)=>(await s.selectFrom("Cycle as c").select((o)=>o.fn.count("c.id").as("count")).where("c.userId", "=", i.id).executeTakeFirstOrThrow()).count);
                    }
                })
            };
        },
        component () {
            const { mapId: t } = c8.useParams();
            return v.jsx(NSe, {
                mapId: t,
                config: B$,
                zoom: .1
            });
        }
    }), u8 = jt("/$locale/apps/derivean/db/schema")({
        async loader ({ context: { kysely: t } }) {
            return {
                tables: await t.introspection.getTables()
            };
        },
        component () {
            const { tables: t } = u8.useLoaderData(), e = ({ dataType: i, isNullable: s })=>{
                const o = i.toLowerCase();
                let a = `z.never({message: '${i}'})`;
                switch(o){
                    case "integer":
                        {
                            a = "z.number().int()";
                            break;
                        }
                    case "float4":
                        {
                            a = "z.number()";
                            break;
                        }
                    case "datetime":
                        {
                            a = "z.string()";
                            break;
                        }
                    case "boolean":
                        {
                            a = "withBoolSchema()";
                            break;
                        }
                    case "text":
                        a = "z.string()";
                }
                return o.startsWith("varchar") && (a = `z.string()${s ? "" : ".min(1)"}`), `
// ${i} / ${s ? "nullable" : "not nullable"}
${a}${s ? ".nullish()" : ""}
`;
            }, n = t.map((i)=>{
                const s = i.name.replaceAll("_", "");
                return `
export const with${s}Schema = <
    TShapeSchema extends ShapeSchema,
    TFilterSchema extends FilterSchema,
>({
    shape,
    filter,
}: {
    shape: TShapeSchema;
    filter: TFilterSchema;
}) => {
    return withSourceSchema({
        entity: IdentitySchema.merge(z.object({
                ${i.columns.filter(({ name: o })=>o !== "id").map((o)=>`
    "${o.name}": ${e(o)}
        `.trim()).join(`,
			`)},
        })),
        shape,
        filter,
        sort: [${i.columns.map((o)=>`"${o.name}"`).join(", ")}],
    });
}

export type ${s}Entity = ReturnType<typeof with${s}Schema>['~entity'];
            `.trim();
            }), r = t.map((i)=>{
                const s = i.name.replaceAll("_", "");
                return `${i.name}: ${s}Entity;`;
            });
            return v.jsxs("pre", {
                children: [
                    `
import {
    IdentitySchema,
    withSourceSchema,
    type FilterSchema,
    type ShapeSchema,
    withBoolSchema,
} from "@use-pico/common";
import { z } from "zod";
            `.trim(),
                    `

${n.join(`

`)}`,
                    `

export interface Database {
    ${r.join(`
	`)}
}
                `
                ]
            });
        }
    }), v4 = vi(), kSe = [
        v4({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "User name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsx(Rt, {
                    to: "/$locale/apps/derivean/root/user/$id/view",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: e
                });
            },
            size: 14
        }),
        v4({
            name: "login",
            header () {
                return v.jsx(ne, {
                    label: "User login (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            size: 14
        })
    ], OSe = ({ table: t, ...e })=>{
        const n = kr([
            [
                "GameMap"
            ],
            [
                "Management"
            ],
            [
                "User_Inventory"
            ]
        ]), r = an({
            async mutationFn ({ userId: i }) {
                return At.transaction().execute(async (s)=>{
                    await s.deleteFrom("Map").where("userId", "=", i).execute();
                });
            },
            async onSuccess () {
                await n();
            }
        });
        return v.jsx(gi, {
            table: yi({
                ...t,
                columns: kSe
            }),
            action: {
                row ({ data: i }) {
                    return v.jsx(Or, {
                        children: v.jsx(cO, {
                            icon: Ri,
                            onClick: ()=>{
                                r.mutateAsync({
                                    userId: i.id
                                });
                            },
                            children: v.jsx(ne, {
                                label: "Reset game (menu)"
                            })
                        })
                    });
                }
            },
            ...e
        });
    }, LSe = lae({
        shape: G.object({
            name: G.string().min(1),
            login: G.string().min(1),
            password: G.string().min(1)
        }),
        filter: Qs.merge(G.object({
            login: G.string().optional(),
            password: G.string().optional()
        }))
    }), M1 = jt("/$locale/apps/derivean/root/user/list")({
        validateSearch: Vr(mi(LSe)),
        loaderDeps ({ search: { filter: t, cursor: e } }) {
            return {
                filter: t,
                cursor: e
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r } }) {
            return t.ensureQueryData({
                queryKey: [
                    "User",
                    "list-count",
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute((i)=>Dr({
                            select: i.selectFrom("User as u").select([
                                "u.id",
                                "u.name",
                                "u.login"
                            ]),
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                login: G.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component: ()=>{
            const { data: t, count: e } = M1.useLoaderData(), { filter: n, cursor: r, selection: i } = M1.useSearch(), s = M1.useNavigate(), { tva: o } = Lr({
                from: "__root__"
            }), a = o().slots;
            return v.jsx("div", {
                className: a.base(),
                children: v.jsx(OSe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, s)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of users (label)"
                        }),
                        ...fi(s)
                    }
                })
            });
        }
    }), DSe = ({ entity: t, ...e })=>{
        const { locale: n } = tn({
            from: "/$locale"
        });
        return v.jsxs(gm, {
            ...e,
            children: [
                v.jsx(Cr, {
                    icon: AO,
                    to: "/$locale/apps/derivean/root/user/$id/view",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "View detail (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: Da,
                    to: "/$locale/apps/derivean/root/user/$id/building/list",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Building list (menu)"
                    })
                })
            ]
        });
    }, FSe = (t)=>{
        const { locale: e } = tn({
            from: "/$locale"
        });
        return v.jsx(pv, {
            title: ({ entity: n })=>v.jsx(mv, {
                    icon: AO,
                    title: n.name
                }),
            actions: ()=>v.jsx(v.Fragment, {
                    children: v.jsx(Rt, {
                        icon: mT,
                        to: "/$locale/apps/derivean/root/user/list",
                        params: {
                            locale: e
                        },
                        children: v.jsx(ne, {
                            label: "User list (label)"
                        })
                    })
                }),
            ...t
        });
    }, d8 = jt("/$locale/apps/derivean/root/user/$id")({
        async loader ({ context: { kysely: t }, params: { id: e } }) {
            return t.transaction().execute(async (n)=>({
                    entity: await lc({
                        select: n.selectFrom("User as u").select([
                            "u.id",
                            "u.name"
                        ]).where("u.id", "=", e),
                        output: G.object({
                            id: G.string().min(1),
                            name: G.string().min(1)
                        })
                    })
                }));
        },
        component () {
            const { tva: t } = Lr({
                from: "__root__"
            }), { entity: e } = d8.useLoaderData(), n = t().slots;
            return v.jsxs("div", {
                className: n.base(),
                children: [
                    v.jsx(FSe, {
                        entity: e
                    }),
                    v.jsx(DSe, {
                        entity: e
                    }),
                    v.jsx(fl, {})
                ]
            });
        }
    }), _w = aae({
        shape: G.object({
            code: G.string().min(1),
            label: G.string().min(1),
            group: G.string().nullish(),
            sort: Bc()
        }),
        filter: Qs.merge(G.object({
            code: G.string().optional(),
            group: G.string().optional()
        }))
    }), x4 = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(_w.shape),
            defaultValues: {
                sort: 0,
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "code",
                    label: v.jsx(ne, {
                        label: "Tag code (label)"
                    }),
                    required: !0,
                    children: v.jsx("input", {
                        type: "text",
                        className: o.input(),
                        ...s.register("code")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "label",
                    label: v.jsx(ne, {
                        label: "Tag label (label)"
                    }),
                    required: !0,
                    children: v.jsx("input", {
                        type: "text",
                        className: o.input(),
                        ...s.register("label")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "group",
                    label: v.jsx(ne, {
                        label: "Tag group (label)"
                    }),
                    children: v.jsx("input", {
                        type: "text",
                        className: o.input(),
                        ...s.register("group")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "sort",
                    label: v.jsx(ne, {
                        label: "Tag sort (label)"
                    }),
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("sort")
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: sb,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, jN = vi(), jSe = [
        jN({
            name: "label",
            header () {
                return v.jsx(ne, {
                    label: "Tag label (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            size: 14
        }),
        jN({
            name: "code",
            header () {
                return v.jsx(ne, {
                    label: "Tag code (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            size: 14
        }),
        jN({
            name: "group",
            header () {
                return v.jsx(ne, {
                    label: "Tag group (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "group",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("group", t.group);
                }
            },
            size: 24
        })
    ], f8 = ({ group: t, table: e, ...n })=>{
        const r = kr([
            [
                "Tag"
            ],
            [
                "Resource"
            ]
        ]);
        return v.jsx(gi, {
            table: yi({
                ...e,
                columns: jSe
            }),
            action: {
                table () {
                    return v.jsx(Or, {
                        children: v.jsx(Wn, {
                            label: v.jsx(ne, {
                                label: "Create tag (menu)"
                            }),
                            textTitle: v.jsx(ne, {
                                label: "Create tag (modal)"
                            }),
                            icon: sb,
                            children: v.jsx(x4, {
                                defaultValues: {
                                    group: t
                                },
                                mutation: an({
                                    async mutationFn (i) {
                                        return or.promise(At.transaction().execute((s)=>s.insertInto("Tag").values({
                                                id: Kn(),
                                                ...i
                                            }).returningAll().executeTakeFirstOrThrow()), Zs("Create tag"));
                                    },
                                    async onSuccess () {
                                        await r();
                                    }
                                })
                            })
                        })
                    });
                },
                row ({ data: i }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit tag (modal)"
                                }),
                                icon: sb,
                                children: v.jsx(x4, {
                                    defaultValues: {
                                        group: t,
                                        ...i
                                    },
                                    mutation: an({
                                        async mutationFn (s) {
                                            return or.promise(At.transaction().execute((o)=>o.updateTable("Tag").set(s).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow()), Zs("Edit tag"));
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete tag (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>{
                                        await At.transaction().execute((s)=>s.deleteFrom("Tag").where("id", "=", i.id).execute());
                                    },
                                    textContent: v.jsx(ne, {
                                        label: "Tag delete (content)"
                                    }),
                                    textToast: "Tag delete",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, T1 = jt("/$locale/apps/derivean/root/tag/list")({
        validateSearch: Vr(mi(_w)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Tag",
                    "list-count",
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (i)=>Dr({
                            select: i.selectFrom("Tag as t").select([
                                "t.id",
                                "t.code",
                                "t.label",
                                "t.group",
                                "t.sort"
                            ]).orderBy("t.sort", "desc"),
                            output: G.object({
                                id: G.string().min(1),
                                code: G.string().min(1),
                                label: G.string().min(1),
                                group: G.string().nullish(),
                                sort: G.number().int().nonnegative()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component: ()=>{
            const { data: t, count: e } = T1.useLoaderData(), { filter: n, cursor: r, selection: i } = T1.useSearch(), s = T1.useNavigate(), { tva: o } = Lr({
                from: "__root__"
            }), a = o().slots;
            return v.jsx("div", {
                className: a.base(),
                children: v.jsx(f8, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, s)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of items"
                        }),
                        ...fi(s)
                    }
                })
            });
        }
    }), BSe = ({ group: t, ...e })=>v.jsx(fq, {
            icon: sb,
            table: (n)=>v.jsx(f8, {
                    group: t,
                    ...n
                }),
            render: ({ entities: n })=>v.jsx(mq, {
                    tags: n
                }),
            queryKey: "Tag",
            query: async ({ filter: n, cursor: r })=>At.transaction().execute(async (i)=>Dr({
                        select: i.selectFrom("Tag as t").select([
                            "t.id",
                            "t.code",
                            "t.label",
                            "t.group",
                            "t.sort"
                        ]),
                        output: _w.entity,
                        query ({ select: s, where: o }) {
                            let a = s;
                            if (o?.id && (a = a.where("t.id", "=", o.id)), o?.idIn && (a = a.where("t.id", "in", o.idIn)), o?.fulltext) {
                                const l = `%${o.fulltext}%`.toLowerCase();
                                a = a.where((c)=>c.or([
                                        c("t.code", "like", l),
                                        c("t.group", "like", l),
                                        c("t.label", "like", l),
                                        c("t.id", "like", l)
                                    ]));
                            }
                            return a;
                        },
                        filter: n,
                        cursor: r
                    })),
            ...e
        }), h8 = oae({
        shape: G.object({
            name: G.string().min(1),
            weight: Bc(),
            tagIds: G.array(G.string()).optional(),
            image: G.instanceof(FileList, {
                message: "You must upload a file."
            }).transform((t)=>t[0]).refine((t)=>(t && t.size < 5 * 1024 * 1024, !0), {
                message: sa.text("File size must be less than 5MB")
            }).refine((t)=>t ? [
                    "image/png",
                    "image/jpeg",
                    "image/webp"
                ].includes(t.type) : !0, {
                message: "Only PNG/JPEG/WEBP files are allowed."
            }).optional()
        }),
        filter: Qs.merge(G.object({
            name: G.string().optional()
        }))
    }), b4 = ({ group: t = "resource", mutation: e, defaultValues: n, variant: r, tva: i = fs, css: s })=>{
        const o = hs({
            resolver: ps(h8.shape),
            defaultValues: {
                name: "",
                weight: 1,
                ...n
            }
        }), a = i({
            ...r,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: s
        }).slots;
        return v.jsxs("form", {
            className: a.base(),
            onSubmit: to({
                form: o,
                mutation: e
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: o.formState,
                    name: "name",
                    label: v.jsx(ne, {
                        label: "Resource name (label)"
                    }),
                    children: v.jsx("input", {
                        type: "text",
                        className: a.input(),
                        ...o.register("name")
                    })
                }),
                v.jsx(yn, {
                    formState: o.formState,
                    name: "weight",
                    label: v.jsx(ne, {
                        label: "Resource weight (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Weight is used to compute, how fast a resource moves on the road (hint)"
                    }),
                    required: !0,
                    children: v.jsx("input", {
                        type: "number",
                        className: a.input(),
                        min: 1,
                        ...o.register("weight")
                    })
                }),
                v.jsx(yn, {
                    formState: o.formState,
                    name: "image",
                    label: v.jsx(ne, {
                        label: "Resource image (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Resource image (hint)"
                    }),
                    children: v.jsx("input", {
                        type: "file",
                        className: a.input(),
                        ...o.register("image")
                    })
                }),
                v.jsx(yn, {
                    formState: o.formState,
                    name: "tagIds",
                    label: v.jsx(ne, {
                        label: "Resource tags (label)"
                    }),
                    children: v.jsx(Ro, {
                        control: o.control,
                        name: "tagIds",
                        render: ({ field: { ref: l, ...c } })=>v.jsx(BSe, {
                                group: t,
                                textTitle: v.jsx(ne, {
                                    label: "Select resource tags (title)"
                                }),
                                textSelect: v.jsx(ne, {
                                    label: "Select resource tags (label)"
                                }),
                                allowEmpty: !0,
                                ...c
                            })
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: Kr,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, Hg = vi(), USe = [
        Hg({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Resource name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsx(Rt, {
                    icon: v.jsx("div", {
                        className: dn([
                            "border-2",
                            "border-purple-400",
                            "rounded-md",
                            "w-[64px]",
                            "h-[64px]",
                            "bg-contain",
                            `bg-${t.id}`
                        ])
                    }),
                    to: "/$locale/apps/derivean/root/resource/$id/view",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: e
                });
            },
            size: 18
        }),
        Hg({
            name: "weight",
            header () {
                return v.jsx(ne, {
                    label: "Resource weight (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 12
        }),
        Hg({
            name: "countProduction",
            header () {
                return v.jsx(ne, {
                    label: "Resource production count (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(Gs, {
                    css: {
                        base: t !== void 0 && t === 0 ? [
                            "bg-red-100",
                            "text-red-500",
                            "border-red-600"
                        ] : []
                    },
                    children: Vn({
                        number: t
                    })
                });
            },
            size: 12
        }),
        Hg({
            name: "countRequirement",
            header () {
                return v.jsx(ne, {
                    label: "Resource requirement count (label)"
                });
            },
            render ({ data: t, value: e }) {
                return v.jsx(Gs, {
                    css: {
                        base: t.countRequirement === 0 && t.countProductionRequirement === 0 ? [
                            "bg-red-100",
                            "text-red-500",
                            "border-red-600"
                        ] : []
                    },
                    children: Vn({
                        number: e
                    })
                });
            },
            size: 12
        }),
        Hg({
            name: "countProductionRequirement",
            header () {
                return v.jsx(ne, {
                    label: "Resource production requirement count (label)"
                });
            },
            render ({ data: t, value: e }) {
                return v.jsx(Gs, {
                    css: {
                        base: t.countRequirement === 0 && t.countProductionRequirement === 0 ? [
                            "bg-red-100",
                            "text-red-500",
                            "border-red-600"
                        ] : []
                    },
                    children: Vn({
                        number: e
                    })
                });
            },
            size: 18
        }),
        Hg({
            name: "tags",
            header () {
                return v.jsx(ne, {
                    label: "Resource tags (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(mq, {
                    tags: t
                });
            },
            size: 32
        })
    ], p8 = ({ group: t, table: e, ...n })=>{
        const r = kr([
            [
                "Resource"
            ],
            [
                "Resource_Tag"
            ]
        ]);
        return v.jsx(gi, {
            table: yi({
                ...e,
                columns: USe
            }),
            action: {
                table () {
                    return v.jsx(Or, {
                        children: v.jsx(Wn, {
                            label: v.jsx(ne, {
                                label: "Create resource (menu)"
                            }),
                            textTitle: v.jsx(ne, {
                                label: "Create resource (modal)"
                            }),
                            icon: Kr,
                            children: ({ close: i })=>v.jsx(b4, {
                                    group: t,
                                    mutation: an({
                                        async mutationFn ({ image: s, tagIds: o = [], ...a }) {
                                            return At.transaction().execute(async (l)=>{
                                                const c = await l.insertInto("Resource").values({
                                                    id: Kn(),
                                                    ...a,
                                                    image: s ? await Zy(s) : null
                                                }).returningAll().executeTakeFirstOrThrow();
                                                return o.length && await l.insertInto("Resource_Tag").values(o.map((u)=>({
                                                        id: Kn(),
                                                        resourceId: c.id,
                                                        tagId: u
                                                    }))).execute(), c;
                                            });
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit resource (modal)"
                                }),
                                icon: Kr,
                                children: ({ close: s })=>v.jsx(b4, {
                                        defaultValues: {
                                            ...i,
                                            tagIds: i.tags.map(({ id: o })=>o)
                                        },
                                        mutation: an({
                                            async mutationFn ({ image: o, tagIds: a, ...l }) {
                                                return or.promise(At.transaction().execute(async (c)=>{
                                                    const u = await c.updateTable("Resource").set({
                                                        ...l,
                                                        image: o ? await Zy(o) : null
                                                    }).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow();
                                                    return await c.deleteFrom("Resource_Tag").where("resourceId", "=", u.id).execute(), a?.length && await c.insertInto("Resource_Tag").values(a.map((f)=>({
                                                            id: Kn(),
                                                            resourceId: u.id,
                                                            tagId: f
                                                        }))).execute(), u;
                                                }), Zs("Update resource"));
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete resource (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Resource").where("id", "=", i.id).execute()),
                                    textContent: v.jsx(ne, {
                                        label: "Resource delete (content)"
                                    }),
                                    textToast: "Resource delete",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, C1 = jt("/$locale/apps/derivean/root/resource/list")({
        validateSearch: Vr(mi(h8)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Resource",
                    "list-count",
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute((i)=>Dr({
                            select: i.selectFrom("Resource as r").select([
                                "r.id",
                                "r.name",
                                "r.weight",
                                (s)=>s.selectFrom("Tag as t").select((o)=>ci`json_group_array(json_object(
                                            'id', ${o.ref("t.id")},
                                            'code', ${o.ref("t.code")},
                                            'group', ${o.ref("t.group")},
                                            'sort', ${o.ref("t.sort")},
                                            'label', ${o.ref("t.label")}
                                        ))`.as("tags")).where("t.id", "in", s.selectFrom("Resource_Tag as rt").select("rt.tagId").whereRef("rt.resourceId", "=", "r.id")).as("tags"),
                                (s)=>s.selectFrom("Blueprint_Requirement").select((o)=>o.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countRequirement"),
                                (s)=>s.selectFrom("Blueprint_Production").select((o)=>o.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countProduction"),
                                (s)=>s.selectFrom("Blueprint_Production_Requirement").select((o)=>o.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countProductionRequirement")
                            ]).orderBy("r.name", "asc"),
                            query ({ select: s, where: o }) {
                                let a = s;
                                if (o?.fulltext) {
                                    const l = `%${o.fulltext}%`.toLowerCase();
                                    a = a.where((c)=>c.or([
                                            c("r.id", "like", l),
                                            c("r.name", "like", l),
                                            c("r.id", "in", c.selectFrom("Resource_Tag as rt").innerJoin("Tag as t", "t.id", "rt.tagId").select("rt.resourceId").where((u)=>u.or([
                                                    u("t.code", "like", l),
                                                    u("t.label", "like", l),
                                                    u("t.group", "like", l)
                                                ])))
                                        ]));
                                }
                                return a;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                weight: Bc(),
                                countRequirement: G.number().nonnegative(),
                                countProduction: G.number().nonnegative(),
                                countProductionRequirement: G.number().nonnegative(),
                                tags: Cs(_w.entity)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component: ()=>{
            const { data: t, count: e } = C1.useLoaderData(), { filter: n, cursor: r, selection: i } = C1.useSearch(), s = C1.useNavigate(), { tva: o } = Lr({
                from: "__root__"
            }), a = o().slots;
            return v.jsx("div", {
                className: a.base(),
                children: v.jsx(p8, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, s)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of items"
                        }),
                        ...fi(s)
                    }
                })
            });
        }
    }), zSe = ({ entity: t, ...e })=>{
        const { locale: n } = tn({
            from: "/$locale"
        });
        return v.jsx(gm, {
            ...e,
            children: v.jsx(Cr, {
                icon: Kr,
                to: "/$locale/apps/derivean/root/resource/$id/view",
                params: {
                    locale: n,
                    id: t.id
                },
                children: v.jsx(ne, {
                    label: "View detail (menu)"
                })
            })
        });
    }, VSe = (t)=>{
        const { locale: e } = tn({
            from: "/$locale"
        });
        return v.jsx(pv, {
            title: ({ entity: n })=>v.jsx(mv, {
                    icon: Kr,
                    title: n.name
                }),
            actions: ()=>v.jsx(v.Fragment, {
                    children: v.jsx(Rt, {
                        icon: mT,
                        to: "/$locale/apps/derivean/root/resource/list",
                        params: {
                            locale: e
                        },
                        children: v.jsx(ne, {
                            label: "Resource list (label)"
                        })
                    })
                }),
            ...t
        });
    }, m8 = jt("/$locale/apps/derivean/root/resource/$id")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { id: n } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Resource",
                    n
                ],
                async queryFn () {
                    return e.transaction().execute(async (r)=>({
                            entity: await lc({
                                select: r.selectFrom("Resource as r").select([
                                    "r.id",
                                    "r.name",
                                    "r.image"
                                ]).where("r.id", "=", n),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    image: G.string().nullish()
                                })
                            })
                        }));
                }
            });
        },
        component: ()=>{
            const { tva: t } = Lr({
                from: "__root__"
            }), { entity: e } = m8.useLoaderData(), n = t().slots;
            return v.jsxs("div", {
                className: n.base(),
                children: [
                    v.jsx(VSe, {
                        entity: e
                    }),
                    v.jsx(zSe, {
                        entity: e
                    }),
                    v.jsx(fl, {})
                ]
            });
        }
    }), I1 = jt("/$locale/apps/derivean/root/region/list")({
        validateSearch: Vr(mi(e2)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Region",
                    "list-count",
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute((i)=>Dr({
                            select: i.selectFrom("Region as r").select([
                                "r.id",
                                "r.name",
                                "r.probability",
                                "r.limit"
                            ]).orderBy("r.name", "asc"),
                            query ({ select: s, where: o }) {
                                let a = s;
                                if (o?.fulltext) {
                                    const l = `%${o.fulltext}%`.toLowerCase();
                                    a = a.where((c)=>c.or([
                                            c("r.id", "like", l),
                                            c("r.name", "like", l)
                                        ]));
                                }
                                return a;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                probability: G.number().int().min(0),
                                limit: G.number().int().min(0)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component: ()=>{
            const { data: t, count: e } = I1.useLoaderData(), { filter: n, cursor: r, selection: i } = I1.useSearch(), s = I1.useNavigate(), { tva: o } = Lr({
                from: "__root__"
            }), a = o().slots;
            return v.jsx("div", {
                className: a.base(),
                children: v.jsx(D$, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, s)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of items"
                        }),
                        ...fi(s)
                    }
                })
            });
        }
    }), WSe = jt("/$locale/apps/derivean/root/region/$id")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { id: n } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Region",
                    n
                ],
                async queryFn () {
                    return e.transaction().execute(async (r)=>({
                            entity: await lc({
                                select: r.selectFrom("Region as r").select([
                                    "r.id",
                                    "r.name",
                                    "r.image"
                                ]).where("r.id", "=", n),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    image: G.string().nullish()
                                })
                            })
                        }));
                }
            });
        },
        component: ()=>{
            const { tva: t } = Lr({
                from: "__root__"
            }), e = t().slots;
            return v.jsx("div", {
                className: e.base(),
                children: v.jsx(fl, {})
            });
        }
    }), G2 = "icon-[gala--clock]", zf = "icon-[mingcute--inventory-line]", qSe = Tn({
        slot: {
            item: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "bg-sky-100",
                "border",
                "rounded-sm",
                "border-sky-300",
                "py-1",
                "px-2",
                "bg-sky-100",
                "border-sky-300",
                "text-sky-500"
            ]
        },
        variant: {
            missing: {
                true: []
            }
        },
        match: [
            {
                if: {
                    missing: !0
                },
                then: {
                    item: [
                        "bg-amber-100",
                        "border-amber-300"
                    ]
                }
            }
        ],
        defaults: {
            missing: !1
        }
    }), g8 = ({ dependencies: t, variant: e, tva: n = qSe, css: r, ...i })=>{
        const s = n({
            ...e,
            css: r
        }).slots;
        return v.jsx(Jf, {
            items: t,
            render: ({ entity: o })=>v.jsx("div", {
                    className: s.item(),
                    children: v.jsx("div", {
                        children: o.name
                    })
                }),
            ...i
        });
    };
    var HS = {}, w4;
    function HSe() {
        if (w4) return HS;
        w4 = 1;
        function t(r, i, s, o) {
            var a = new Set;
            return function(l) {
                if (!a.has(l)) {
                    var c = new Set, u = [], f = [];
                    for(f.push({
                        node: l,
                        processed: !1
                    }); f.length > 0;){
                        var p = f[f.length - 1], g = p.processed, x = p.node;
                        if (g) f.pop(), u.pop(), c.delete(x), a.add(x), (!i || r.get(x).length === 0) && s.push(x);
                        else {
                            if (a.has(x)) {
                                f.pop();
                                continue;
                            } else if (c.has(x)) {
                                if (o) {
                                    f.pop();
                                    continue;
                                }
                                throw u.push(x), new n(u);
                            }
                            c.add(x), u.push(x);
                            for(var S = r.get(x), _ = S.length - 1; _ >= 0; _--)f.push({
                                node: S[_],
                                processed: !1
                            });
                            p.processed = !0;
                        }
                    }
                }
            };
        }
        var e = HS.DepGraph = function(i) {
            this.nodes = new Map, this.outgoingEdges = new Map, this.incomingEdges = new Map, this.circular = i && !!i.circular;
        };
        e.prototype = {
            size: function() {
                return this.nodes.size;
            },
            addNode: function(r, i) {
                this.hasNode(r) || (arguments.length === 2 ? this.nodes.set(r, i) : this.nodes.set(r, r), this.outgoingEdges.set(r, []), this.incomingEdges.set(r, []));
            },
            removeNode: function(r) {
                this.hasNode(r) && (this.nodes.delete(r), this.outgoingEdges.delete(r), this.incomingEdges.delete(r), [
                    this.incomingEdges,
                    this.outgoingEdges
                ].forEach(function(i) {
                    i.forEach(function(s) {
                        var o = s.indexOf(r);
                        o >= 0 && s.splice(o, 1);
                    });
                }));
            },
            hasNode: function(r) {
                return this.nodes.has(r);
            },
            getNodeData: function(r) {
                if (this.hasNode(r)) return this.nodes.get(r);
                throw new Error("Node does not exist: " + r);
            },
            setNodeData: function(r, i) {
                if (this.hasNode(r)) this.nodes.set(r, i);
                else throw new Error("Node does not exist: " + r);
            },
            addDependency: function(r, i) {
                if (!this.hasNode(r)) throw new Error("Node does not exist: " + r);
                if (!this.hasNode(i)) throw new Error("Node does not exist: " + i);
                return this.outgoingEdges.get(r).indexOf(i) === -1 && this.outgoingEdges.get(r).push(i), this.incomingEdges.get(i).indexOf(r) === -1 && this.incomingEdges.get(i).push(r), !0;
            },
            removeDependency: function(r, i) {
                var s;
                this.hasNode(r) && (s = this.outgoingEdges.get(r).indexOf(i), s >= 0 && this.outgoingEdges.get(r).splice(s, 1)), this.hasNode(i) && (s = this.incomingEdges.get(i).indexOf(r), s >= 0 && this.incomingEdges.get(i).splice(s, 1));
            },
            clone: function() {
                var r = this, i = new e;
                return r.nodes.forEach(function(s, o) {
                    i.nodes.set(o, s), i.outgoingEdges.set(o, r.outgoingEdges.get(o).slice(0)), i.incomingEdges.set(o, r.incomingEdges.get(o).slice(0));
                }), i.circular = r.circular, i;
            },
            directDependenciesOf: function(r) {
                if (this.hasNode(r)) return this.outgoingEdges.get(r).slice(0);
                throw new Error("Node does not exist: " + r);
            },
            directDependantsOf: function(r) {
                if (this.hasNode(r)) return this.incomingEdges.get(r).slice(0);
                throw new Error("Node does not exist: " + r);
            },
            dependenciesOf: function(r, i) {
                if (this.hasNode(r)) {
                    var s = [], o = t(this.outgoingEdges, i, s, this.circular);
                    o(r);
                    var a = s.indexOf(r);
                    return a >= 0 && s.splice(a, 1), s;
                } else throw new Error("Node does not exist: " + r);
            },
            dependantsOf: function(r, i) {
                if (this.hasNode(r)) {
                    var s = [], o = t(this.incomingEdges, i, s, this.circular);
                    o(r);
                    var a = s.indexOf(r);
                    return a >= 0 && s.splice(a, 1), s;
                } else throw new Error("Node does not exist: " + r);
            },
            overallOrder: function(r) {
                var i = this, s = [], o = Array.from(this.nodes.keys());
                if (o.length === 0) return s;
                if (!this.circular) {
                    var a = t(this.outgoingEdges, !1, [], this.circular);
                    o.forEach(function(c) {
                        a(c);
                    });
                }
                var l = t(this.outgoingEdges, r, s, this.circular);
                return o.filter(function(c) {
                    return i.incomingEdges.get(c).length === 0;
                }).forEach(function(c) {
                    l(c);
                }), this.circular && o.filter(function(c) {
                    return s.indexOf(c) === -1;
                }).forEach(function(c) {
                    l(c);
                }), s;
            },
            entryNodes: function() {
                var r = this;
                return Array.from(this.nodes.keys()).filter(function(i) {
                    return r.incomingEdges.get(i).length === 0;
                });
            }
        }, e.prototype.directDependentsOf = e.prototype.directDependantsOf, e.prototype.dependentsOf = e.prototype.dependantsOf;
        var n = HS.DepGraphCycleError = function(r) {
            var i = "Dependency Cycle Found: " + r.join(" -> "), s = new Error(i);
            return s.cyclePath = r, Object.setPrototypeOf(s, Object.getPrototypeOf(this)), Error.captureStackTrace && Error.captureStackTrace(s, n), s;
        };
        return n.prototype = Object.create(Error.prototype, {
            constructor: {
                value: Error,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), Object.setPrototypeOf(n, Error), HS;
    }
    var y8 = HSe();
    const Sw = async ({ tx: t })=>{
        const e = new y8.DepGraph({
            circular: !1
        });
        for await (const { id: n, name: r } of await t.selectFrom("Blueprint").select([
            "id",
            "name"
        ]).execute())e.addNode(n, r);
        for await (const { blueprintId: n, dependencyId: r } of await t.selectFrom("Blueprint_Dependency").select([
            "blueprintId",
            "dependencyId"
        ]).execute())e.addDependency(n, r);
        return e;
    }, Lb = async ({ tx: t })=>{
        const e = Sw({
            tx: t
        }), n = await t.selectFrom("Blueprint as bl").select([
            "bl.id"
        ]).execute();
        for await (const r of n){
            const i = (await e).dependenciesOf(r.id);
            await t.updateTable("Blueprint").set({
                sort: i.length
            }).where("id", "=", r.id).execute();
        }
    }, v8 = async ({ tx: t, blueprintId: e })=>{
        await t.deleteFrom("Blueprint_Inventory").where("blueprintId", "=", e).execute();
        const n = await t.selectFrom("Blueprint_Requirement").select([
            "resourceId",
            "amount"
        ]).where("blueprintId", "=", e).execute();
        for await (const { resourceId: i, amount: s } of n)await t.insertInto("Blueprint_Inventory").values({
            id: Kn(),
            blueprintId: e,
            inventoryId: (await t.insertInto("Inventory").values({
                id: Kn(),
                resourceId: i,
                amount: 0,
                limit: s,
                type: "construction"
            }).returning("id").executeTakeFirstOrThrow()).id
        }).execute();
        const r = await t.selectFrom(t.selectFrom("Blueprint_Production").select([
            "resourceId",
            "amount"
        ]).where("blueprintId", "=", e).union(t.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Blueprint_Production as bp", "bp.id", "bpr.blueprintProductionId").select([
            "bpr.resourceId",
            "bpr.amount"
        ]).where("bp.blueprintId", "=", e)).union(t.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Blueprint_Production as bp", "bp.id", "bpr.blueprintProductionId").select([
            "bpr.resourceId",
            "bpr.amount"
        ]).where("bp.blueprintId", "=", e)).as("resources")).select([
            "resourceId",
            (i)=>i.fn.max("amount").as("amount")
        ]).groupBy("resourceId").orderBy("amount", "desc").execute();
        for await (const { resourceId: i, amount: s } of r)await t.insertInto("Blueprint_Inventory").values({
            id: Kn(),
            blueprintId: e,
            inventoryId: (await t.insertInto("Inventory").values({
                id: Kn(),
                resourceId: i,
                amount: 0,
                limit: s * 5,
                type: "storage"
            }).returning("id").executeTakeFirstOrThrow()).id
        }).execute();
    }, $Se = Tn({
        slot: {
            item: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "bg-sky-100",
                "border",
                "rounded-sm",
                "border-sky-300",
                "py-1",
                "px-2"
            ]
        },
        variant: {
            passive: {
                true: []
            },
            missing: {
                true: []
            }
        },
        match: [
            {
                if: {
                    passive: !0
                },
                then: {
                    item: [
                        "bg-purple-100",
                        "border-purple-300",
                        "text-purple-500"
                    ]
                }
            },
            {
                if: {
                    passive: !1
                },
                then: {
                    item: [
                        "bg-sky-100",
                        "border-sky-300",
                        "text-sky-500"
                    ]
                }
            },
            {
                if: {
                    missing: !0
                },
                then: {
                    item: [
                        "bg-amber-100",
                        "border-amber-300"
                    ]
                }
            }
        ],
        defaults: {
            passive: !1,
            missing: !1
        }
    }), gC = ({ requirements: t, diff: e, variant: n, tva: r = $Se, css: i, ...s })=>{
        const o = r({
            ...n,
            css: i
        }).slots;
        return v.jsx(Jf, {
            items: t,
            render: ({ entity: a })=>{
                const l = e?.find((u)=>u.resourceId === a.resourceId), c = l?.amount ? l.amount - a.amount : -a.amount;
                return v.jsxs("div", {
                    className: o.item({
                        css: !e || c >= 0 ? [] : [
                            "text-red-700",
                            "bg-red-100",
                            "border-red-300"
                        ],
                        passive: a.passive
                    }),
                    children: [
                        v.jsx("div", {
                            children: a.name
                        }),
                        v.jsxs("div", {
                            className: "text-md font-bold text-slate-500",
                            children: [
                                "x",
                                Vn({
                                    number: a.amount
                                })
                            ]
                        }),
                        e ? c >= 0 ? v.jsx(vn, {
                            icon: "icon-[pajamas--check-sm]",
                            css: {
                                base: [
                                    "text-emerald-600"
                                ]
                            }
                        }) : v.jsxs("div", {
                            className: "flex flex-row gao-2 items-center text-sm text-red-500",
                            children: [
                                v.jsx(vn, {
                                    icon: "icon-[charm--cross]",
                                    css: {
                                        base: [
                                            "text-red-500"
                                        ]
                                    }
                                }),
                                "(",
                                Vn({
                                    number: c
                                }),
                                ")"
                            ]
                        }) : null
                    ]
                });
            },
            ...s
        });
    }, Bx = vi(), GSe = [
        Bx({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Building name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsxs("div", {
                    className: "flex flex-row gap-2 items-center",
                    children: [
                        v.jsx(Rt, {
                            icon: v.jsx("div", {
                                className: dn([
                                    "border-2",
                                    "border-purple-400",
                                    "rounded-md",
                                    "w-[64px]",
                                    "h-[64px]",
                                    "bg-contain",
                                    `bg-${t.id}`
                                ])
                            }),
                            to: "/$locale/apps/derivean/root/blueprint/$id/view",
                            params: {
                                locale: n,
                                id: t.id
                            },
                            children: e
                        }),
                        v.jsx(Rt, {
                            icon: "icon-[ph--graph-light]",
                            to: "/$locale/apps/derivean/root/editor",
                            params: {
                                locale: n
                            },
                            search: {
                                zoomTo: t.id
                            }
                        })
                    ]
                });
            },
            size: 18
        }),
        Bx({
            name: "dependencies",
            header () {
                return v.jsx(ne, {
                    label: "Blueprint dependencies (label)"
                });
            },
            render ({ value: t }) {
                return t.length > 0 ? v.jsxs("div", {
                    className: "flex flex-col flex-wrap gap-2 w-full",
                    children: [
                        v.jsx(g8, {
                            textTitle: v.jsx(ne, {
                                label: "Blueprint dependencies (title)"
                            }),
                            dependencies: t
                        }),
                        v.jsx("div", {
                            className: "border-b border-slate-200"
                        })
                    ]
                }) : v.jsx(ne, {
                    label: "No dependencies (label)"
                });
            },
            size: 32
        }),
        Bx({
            name: "requirements",
            header () {
                return v.jsx(ne, {
                    label: "Required resources (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(gC, {
                    textTitle: v.jsx(ne, {
                        label: "Blueprint requirements (title)"
                    }),
                    textEmpty: v.jsx(ne, {
                        label: "No requirements (label)"
                    }),
                    requirements: t
                });
            },
            size: 32
        }),
        Bx({
            name: "cycles",
            header () {
                return v.jsx(ne, {
                    label: "Construction cycles (label)"
                });
            },
            render ({ value: t }) {
                return v.jsxs("div", {
                    className: "flex flex-row items-center gap-2",
                    children: [
                        v.jsx(vn, {
                            icon: G2
                        }),
                        Vn({
                            number: t
                        })
                    ]
                });
            },
            size: 8
        }),
        Bx({
            name: "limit",
            header () {
                return v.jsx(ne, {
                    label: "Building limit (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 8
        })
    ], x8 = ({ dependencies: t, table: e, ...n })=>{
        const r = kr([
            [
                "Blueprint_Inventory"
            ],
            [
                "Blueprint"
            ],
            [
                "Inventory"
            ]
        ]), i = an({
            async mutationFn () {
                return At.transaction().execute(async (s)=>{
                    const o = await s.selectFrom("Blueprint").select([
                        "id"
                    ]).execute();
                    for await (const { id: a } of o)await v8({
                        tx: s,
                        blueprintId: a
                    });
                });
            },
            async onSuccess () {
                await r();
            },
            onError (s) {
                console.error(s);
            }
        });
        return v.jsx(gi, {
            table: yi({
                ...e,
                columns: GSe,
                context: {
                    dependencies: t
                }
            }),
            action: {
                table () {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(cO, {
                                icon: zf,
                                onClick: ()=>{
                                    or.promise(i.mutateAsync(), Zs("Fill inventories"));
                                },
                                children: v.jsx(ne, {
                                    label: "Fill inventories (label)"
                                })
                            }),
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Create blueprint (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Create blueprint (modal)"
                                }),
                                icon: ar,
                                children: ({ close: s })=>v.jsx(YE, {
                                        mutation: an({
                                            async mutationFn ({ image: o, regionIds: a, ...l }) {
                                                At.transaction().execute(async (c)=>{
                                                    const u = await c.insertInto("Blueprint").values({
                                                        id: Kn(),
                                                        ...l,
                                                        image: o ? await Zy(o) : null
                                                    }).returningAll().executeTakeFirstOrThrow();
                                                    return a?.length && await c.insertInto("Blueprint_Region").values(a.map((f)=>({
                                                            id: Kn(),
                                                            blueprintId: u.id,
                                                            regionId: f
                                                        }))).execute(), await Lb({
                                                        tx: c
                                                    }), u;
                                                });
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            })
                        ]
                    });
                },
                row ({ data: s }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit blueprint (modal)"
                                }),
                                icon: ar,
                                children: ({ close: o })=>v.jsx(YE, {
                                        defaultValues: {
                                            ...s,
                                            regionIds: s.regions.map((a)=>a.id)
                                        },
                                        mutation: an({
                                            async mutationFn ({ image: a, regionIds: l, ...c }) {
                                                return At.transaction().execute(async (u)=>{
                                                    const f = await u.updateTable("Blueprint").set({
                                                        ...c,
                                                        image: a ? await Zy(a) : null
                                                    }).where("id", "=", s.id).returningAll().executeTakeFirstOrThrow();
                                                    return await u.deleteFrom("Blueprint_Region").where("blueprintId", "=", f.id).execute(), l?.length && await u.insertInto("Blueprint_Region").values(l.map((p)=>({
                                                            id: Kn(),
                                                            blueprintId: f.id,
                                                            regionId: p
                                                        }))).execute(), await Lb({
                                                        tx: u
                                                    }), f;
                                                });
                                            },
                                            async onSuccess () {
                                                await r(), o();
                                            }
                                        })
                                    })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete blueprint (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>At.transaction().execute(async (o)=>o.deleteFrom("Blueprint").where("id", "=", s.id).execute()),
                                    textContent: v.jsx(ne, {
                                        label: "Delete blueprint (content)"
                                    }),
                                    textToast: "Delete blueprint",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, lh = Koe({
        shape: G.object({
            dependencyId: G.string().min(1)
        }),
        filter: Qs.merge(G.object({
            blueprintId: G.string().optional(),
            dependencyId: G.string().optional()
        }))
    }), wv = tae({
        shape: G.object({
            resourceId: G.string().min(1),
            amount: fd(),
            passive: G.boolean()
        }),
        filter: Qs.merge(G.object({
            blueprintId: G.string().optional(),
            resourceId: G.string().optional()
        }))
    }), R1 = jt("/$locale/apps/derivean/root/blueprint/list")({
        validateSearch: Vr(mi(t2)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r } }) {
            return {
                data: await t.ensureQueryData({
                    queryKey: [
                        "Blueprint",
                        "list-count",
                        {
                            filter: n,
                            cursor: r
                        }
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (s)=>Dr({
                                select: s.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.image",
                                    "bl.name",
                                    "bl.sort",
                                    "bl.cycles",
                                    "bl.limit",
                                    (o)=>o.selectFrom("Blueprint_Region as br").innerJoin("Region as r", "r.id", "br.regionId").select((a)=>Ff.jsonGroupArray({
                                                id: a.ref("r.id"),
                                                name: a.ref("r.name")
                                            }).as("regions")).whereRef("br.blueprintId", "=", "bl.id").as("regions"),
                                    (o)=>o.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select((a)=>ci`json_group_array(json_object(
                                                'id', ${a.ref("br.id")},
                                                'amount', ${a.ref("br.amount")},
                                                'passive', ${a.ref("br.passive")},
                                                'resourceId', ${a.ref("br.resourceId")},
                                                'blueprintId', ${a.ref("br.blueprintId")},
                                                'name', ${a.ref("r.name")}
                                            ))`.as("requirements")).whereRef("br.blueprintId", "=", "bl.id").as("requirements"),
                                    (o)=>o.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as bl2", "bl2.id", "bd.dependencyId").select((a)=>ci`json_group_array(json_object(
                                                        'id', ${a.ref("bd.id")},
                                                        'dependencyId', ${a.ref("bd.dependencyId")},
                                                        'blueprintId', ${a.ref("bd.blueprintId")},
                                                        'name', ${a.ref("bl2.name")}
                                                    ))`.as("requirements")).whereRef("bd.blueprintId", "=", "bl.id").orderBy("bl2.name", "asc").as("dependencies")
                                ]).orderBy("bl.sort", "asc").orderBy("bl.name", "asc"),
                                query ({ select: o, where: a }) {
                                    let l = o;
                                    if (a?.id && (l = l.where("bl.id", "=", a.id)), a?.fulltext) {
                                        const c = `%${a.fulltext}%`.toLowerCase();
                                        l = l.where((u)=>u.or([
                                                u("bl.id", "like", c),
                                                u("bl.name", "like", c)
                                            ]));
                                    }
                                    return l;
                                },
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    image: G.string().nullish(),
                                    cycles: G.number().nonnegative(),
                                    sort: G.number().nonnegative(),
                                    limit: G.number().nonnegative(),
                                    regions: Cs(G.object({
                                        id: G.string().min(1),
                                        name: G.string().min(1)
                                    })),
                                    requirements: Cs(wv.entity.merge(G.object({
                                        name: G.string().min(1)
                                    }))),
                                    dependencies: Cs(lh.entity.merge(G.object({
                                        name: G.string().min(1)
                                    })))
                                }),
                                filter: n,
                                cursor: r
                            }));
                    }
                }),
                dependencies: await e.transaction().execute(async (s)=>Sw({
                        tx: s
                    }))
            };
        },
        component () {
            const { data: { data: t, count: e }, dependencies: n } = R1.useLoaderData(), { filter: r, cursor: i, selection: s } = R1.useSearch(), o = R1.useNavigate(), { tva: a } = Lr({
                from: "__root__"
            }), l = a().slots;
            return v.jsx("div", {
                className: l.base(),
                children: v.jsx(x8, {
                    dependencies: n,
                    table: {
                        data: t,
                        filter: {
                            value: r,
                            set: hi(o)
                        },
                        selection: {
                            type: "multi",
                            value: s,
                            set: aa(o)
                        }
                    },
                    fulltext: {
                        value: r?.fulltext,
                        set: pi(r?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: i,
                        textTotal: v.jsx(ne, {
                            label: "Number of blueprints"
                        }),
                        ...fi(o)
                    }
                })
            });
        }
    }), XSe = ({ entity: t, ...e })=>{
        const { locale: n } = tn({
            from: "/$locale"
        });
        return v.jsxs(gm, {
            ...e,
            children: [
                v.jsx(Cr, {
                    icon: ar,
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "View detail (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: Da,
                    to: "/$locale/apps/derivean/root/blueprint/$id/dependencies",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Blueprint dependencies (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: Kr,
                    to: "/$locale/apps/derivean/root/blueprint/$id/requirements",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Required resources (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: ul,
                    to: "/$locale/apps/derivean/root/blueprint/$id/production",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Resource production (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: zf,
                    to: "/$locale/apps/derivean/root/blueprint/$id/inventory",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Blueprint inventory (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: "icon-[solar--bomb-minimalistic-outline]",
                    to: "/$locale/apps/derivean/root/blueprint/$id/conflicts",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Blueprint conflicts (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: G5,
                    to: "/$locale/apps/derivean/root/blueprint/$id/edit",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Edit (menu)"
                    })
                })
            ]
        });
    }, KSe = (t)=>{
        const { locale: e } = tn({
            from: "/$locale"
        });
        return v.jsx(pv, {
            title: ({ entity: n })=>v.jsx(mv, {
                    icon: ar,
                    title: n.name
                }),
            actions: ({ entity: n })=>v.jsxs(v.Fragment, {
                    children: [
                        v.jsx(Rt, {
                            icon: mT,
                            to: "/$locale/apps/derivean/root/blueprint/list",
                            params: {
                                locale: e
                            },
                            children: v.jsx(ne, {
                                label: "Blueprint list (label)"
                            })
                        }),
                        v.jsx(Rt, {
                            icon: "icon-[ph--graph-light]",
                            to: "/$locale/apps/derivean/root/editor",
                            params: {
                                locale: e
                            },
                            search: {
                                zoomTo: n.id
                            },
                            children: v.jsx(ne, {
                                label: "Editor (label)"
                            })
                        })
                    ]
                }),
            ...t
        });
    }, b8 = jt("/$locale/apps/derivean/root/blueprint/$id")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { id: n } }) {
            return {
                entity: await t.ensureQueryData({
                    queryKey: [
                        "Blueprint",
                        "fetch",
                        n
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>lc({
                                select: i.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.name",
                                    "bl.sort",
                                    "bl.cycles",
                                    (s)=>s.selectFrom("Blueprint_Region as br").innerJoin("Region as r", "r.id", "br.regionId").select((o)=>Ff.jsonGroupArray({
                                                id: o.ref("r.id"),
                                                name: o.ref("r.name")
                                            }).as("regions")).whereRef("br.blueprintId", "=", "bl.id").as("regions"),
                                    (s)=>s.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select((o)=>Ff.jsonGroupArray({
                                                id: o.ref("br.id"),
                                                amount: o.ref("br.amount"),
                                                passive: o.ref("br.passive"),
                                                resourceId: o.ref("br.resourceId"),
                                                blueprintId: o.ref("br.blueprintId"),
                                                name: o.ref("r.name")
                                            }).as("requirements")).whereRef("br.blueprintId", "=", "bl.id").as("requirements"),
                                    (s)=>s.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as bl2", "bl2.id", "bd.dependencyId").select((o)=>Ff.jsonGroupArray({
                                                id: o.ref("bd.id"),
                                                dependencyId: o.ref("bd.dependencyId"),
                                                blueprintId: o.ref("bd.blueprintId"),
                                                name: o.ref("bl2.name")
                                            }).as("requirements")).whereRef("bd.blueprintId", "=", "bl.id").orderBy("bl2.name", "asc").as("dependencies")
                                ]).where("bl.id", "=", n).orderBy("bl.name", "asc"),
                                query ({ select: s, where: o }) {
                                    let a = s;
                                    if (o?.fulltext) {
                                        const l = `%${o.fulltext}%`.toLowerCase();
                                        a = a.where((c)=>c.or([
                                                c("bl.id", "like", l),
                                                c("bl.name", "like", l),
                                                c("bl.id", "in", c.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select("br.blueprintId").where((u)=>u.or([
                                                        u("r.name", "like", l)
                                                    ]))),
                                                c("bl.id", "in", c.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as b", "b.id", "bd.dependencyId").select("bd.blueprintId").where((u)=>u.or([
                                                        u("b.name", "like", l)
                                                    ])))
                                            ]));
                                    }
                                    return a;
                                },
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    cycles: G.number().nonnegative(),
                                    sort: G.number().nonnegative(),
                                    regions: Cs(G.object({
                                        id: G.string().min(1),
                                        name: G.string().min(1)
                                    })),
                                    requirements: Cs(wv.entity.merge(G.object({
                                        name: G.string().min(1)
                                    }))),
                                    dependencies: Cs(lh.entity.merge(G.object({
                                        name: G.string().min(1)
                                    })))
                                })
                            }));
                    }
                }),
                graph: await e.transaction().execute(async (i)=>Sw({
                        tx: i
                    }))
            };
        },
        component () {
            const { tva: t } = Lr({
                from: "__root__"
            }), { entity: e } = b8.useLoaderData(), n = t().slots;
            return v.jsxs("div", {
                className: n.base(),
                children: [
                    v.jsx(KSe, {
                        entity: e
                    }),
                    v.jsx(XSe, {
                        entity: e
                    }),
                    v.jsx(fl, {})
                ]
            });
        }
    }), YSe = jt("/$locale/apps/derivean/map/$mapId/view")({}), _4 = vi(), ZSe = [
        _4({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Building name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsxs("div", {
                    className: "flex flex-row gap-2 items-center",
                    children: [
                        v.jsx(Rt, {
                            icon: "icon-[ph--graph-light]",
                            to: "/$locale/apps/derivean/game",
                            params: {
                                locale: n
                            },
                            search: {
                                blueprintId: t.id
                            }
                        }),
                        v.jsx(Rt, {
                            icon: v.jsx("div", {
                                className: dn([
                                    "border-2",
                                    "border-purple-400",
                                    "rounded-md",
                                    "w-[64px]",
                                    "h-[64px]",
                                    "bg-contain",
                                    `bg-${t.id}`
                                ])
                            }),
                            to: "/$locale/apps/derivean/game/blueprint/$id/view",
                            params: {
                                locale: n,
                                id: t.id
                            },
                            children: e
                        })
                    ]
                });
            },
            size: 18
        }),
        _4({
            name: "cycles",
            header () {
                return v.jsx(ne, {
                    label: "Construction cycles (label)"
                });
            },
            render ({ value: t }) {
                return v.jsxs("div", {
                    className: "flex flex-row items-center gap-2",
                    children: [
                        v.jsx(vn, {
                            icon: G2
                        }),
                        Vn({
                            number: t
                        })
                    ]
                });
            },
            size: 8
        })
    ], JSe = ({ table: t, ...e })=>v.jsx(gi, {
            table: yi({
                ...t,
                columns: ZSe
            }),
            ...e
        }), A1 = jt("/$locale/apps/derivean/game/blueprint/list")({
        validateSearch: Vr(mi(t2)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e, session: n }, deps: { filter: r, cursor: i } }) {
            const s = await n();
            return {
                data: await t.ensureQueryData({
                    queryKey: [
                        "Blueprint",
                        "list-count",
                        {
                            filter: r,
                            cursor: i
                        }
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (a)=>Dr({
                                select: a.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.name",
                                    "bl.cycles"
                                ]).where("bl.id", "in", a.selectFrom("Building as bg").select("bg.blueprintId").where("bg.userId", "=", s.id)).orderBy("bl.sort", "asc").orderBy("bl.name", "asc"),
                                query ({ select: l, where: c }) {
                                    let u = l;
                                    if (c?.id && (u = u.where("bl.id", "=", c.id)), c?.fulltext) {
                                        const f = `%${c.fulltext}%`.toLowerCase();
                                        u = u.where((p)=>p.or([
                                                p("bl.id", "like", f),
                                                p("bl.name", "like", f)
                                            ]));
                                    }
                                    return u;
                                },
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    cycles: G.number().nonnegative()
                                }),
                                filter: r,
                                cursor: i
                            }));
                    }
                })
            };
        },
        component () {
            const { data: { data: t, count: e } } = A1.useLoaderData(), { filter: n, cursor: r } = A1.useSearch(), i = A1.useNavigate(), { tva: s } = Lr({
                from: "__root__"
            }), o = s().slots;
            return v.jsx("div", {
                className: o.base(),
                children: v.jsx(JSe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of blueprints"
                        }),
                        ...fi(i)
                    }
                })
            });
        }
    }), QSe = ({ entity: t, ...e })=>{
        const { locale: n } = tn({
            from: "/$locale"
        });
        return v.jsxs(gm, {
            ...e,
            children: [
                v.jsx(Cr, {
                    icon: ar,
                    to: "/$locale/apps/derivean/game/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "View detail (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: Da,
                    to: "/$locale/apps/derivean/game/blueprint/$id/dependencies",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Blueprint dependencies (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: Kr,
                    to: "/$locale/apps/derivean/game/blueprint/$id/requirements",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Required resources (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: ul,
                    to: "/$locale/apps/derivean/game/blueprint/$id/production",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Resource production (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: "icon-[solar--bomb-minimalistic-outline]",
                    to: "/$locale/apps/derivean/game/blueprint/$id/conflicts",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Blueprint conflicts (menu)"
                    })
                })
            ]
        });
    }, e1e = (t)=>{
        const { locale: e } = tn({
            from: "/$locale"
        });
        return v.jsx(pv, {
            title: ({ entity: n })=>v.jsx(mv, {
                    icon: ar,
                    title: n.name
                }),
            actions: ()=>v.jsx(v.Fragment, {
                    children: v.jsx(Rt, {
                        icon: mT,
                        to: "/$locale/apps/derivean/game/blueprint/list",
                        params: {
                            locale: e
                        },
                        children: v.jsx(ne, {
                            label: "Blueprint list (label)"
                        })
                    })
                }),
            ...t
        });
    }, w8 = jt("/$locale/apps/derivean/game/blueprint/$id")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { id: n } }) {
            return {
                entity: await t.ensureQueryData({
                    queryKey: [
                        "Blueprint",
                        "fetch",
                        n
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>lc({
                                select: i.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.name",
                                    "bl.cycles"
                                ]).where("bl.id", "=", n).orderBy("bl.name", "asc"),
                                query ({ select: s, where: o }) {
                                    let a = s;
                                    if (o?.fulltext) {
                                        const l = `%${o.fulltext}%`.toLowerCase();
                                        a = a.where((c)=>c.or([
                                                c("bl.id", "like", l),
                                                c("bl.name", "like", l),
                                                c("bl.id", "in", c.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select("br.blueprintId").where((u)=>u.or([
                                                        u("r.name", "like", l)
                                                    ]))),
                                                c("bl.id", "in", c.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as b", "b.id", "bd.dependencyId").select("bd.blueprintId").where((u)=>u.or([
                                                        u("b.name", "like", l)
                                                    ])))
                                            ]));
                                    }
                                    return a;
                                },
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    cycles: G.number().nonnegative()
                                })
                            }));
                    }
                }),
                graph: await e.transaction().execute(async (i)=>Sw({
                        tx: i
                    }))
            };
        },
        component () {
            const { tva: t } = Lr({
                from: "__root__"
            }), { entity: e } = w8.useLoaderData(), n = t().slots;
            return v.jsxs("div", {
                className: n.base(),
                children: [
                    v.jsx(e1e, {
                        entity: e
                    }),
                    v.jsx(QSe, {
                        entity: e
                    }),
                    v.jsx(fl, {})
                ]
            });
        }
    }), t1e = jt("/$locale/apps/derivean/root/user/$id/view")({
        component () {
            return "yep";
        }
    }), n1e = jt("/$locale/apps/derivean/root/resource/$id/view")({
        component () {
            const { entity: { image: t } } = Wi({
                from: "/$locale/apps/derivean/root/resource/$id"
            });
            return v.jsx(v.Fragment, {
                children: v.jsx("img", {
                    src: t || void 0
                })
            });
        }
    }), r1e = jt("/$locale/apps/derivean/root/region/$id/view")({
        component () {
            const { entity: { image: t } } = Wi({
                from: "/$locale/apps/derivean/root/region/$id"
            });
            return v.jsx(v.Fragment, {
                children: t ? v.jsx("img", {
                    src: t || void 0
                }) : "no image"
            });
        }
    }), X2 = "icon-[carbon--document-requirements]", i1e = ({ entity: t, ...e })=>{
        const { locale: n } = tn({
            from: "/$locale"
        });
        return v.jsxs(gm, {
            ...e,
            children: [
                v.jsx(Cr, {
                    icon: X2,
                    to: "/$locale/apps/derivean/root/blueprint/production/$id/requirements",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Production requirements (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: Kr,
                    to: "/$locale/apps/derivean/root/blueprint/production/$id/resources",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Production resource requirements (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: ar,
                    to: "/$locale/apps/derivean/root/blueprint/production/$id/dependencies",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Production resource dependencies (menu)"
                    })
                })
            ]
        });
    }, s1e = (t)=>{
        const { locale: e } = tn({
            from: "/$locale"
        });
        return v.jsx(pv, {
            title: ({ entity: n })=>v.jsx(mv, {
                    icon: ul,
                    title: n.resource,
                    subtitle: n.blueprint
                }),
            actions: ({ entity: n })=>v.jsx(v.Fragment, {
                    children: v.jsx(Rt, {
                        icon: ar,
                        to: "/$locale/apps/derivean/root/blueprint/$id/production",
                        params: {
                            locale: e,
                            id: n.blueprintId
                        },
                        children: v.jsx(ne, {
                            label: "Building base detail (label)"
                        })
                    })
                }),
            ...t
        });
    }, _8 = jt("/$locale/apps/derivean/root/blueprint/production/$id")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { id: n } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production",
                    n
                ],
                async queryFn () {
                    return e.transaction().execute(async (r)=>({
                            entity: await lc({
                                select: r.selectFrom("Blueprint_Production as bp").innerJoin("Resource as r", "r.id", "bp.resourceId").innerJoin("Blueprint as bl", "bl.id", "bp.blueprintId").select([
                                    "bp.id",
                                    "bp.amount",
                                    "bp.cycles",
                                    "r.name as resource",
                                    "bp.blueprintId",
                                    "bl.name as blueprint"
                                ]).where("bp.id", "=", n),
                                output: G.object({
                                    id: G.string().min(1),
                                    resource: G.string().min(1),
                                    blueprint: G.string().min(1),
                                    blueprintId: G.string().min(1),
                                    amount: G.number().nonnegative(),
                                    cycles: G.number().int().nonnegative()
                                })
                            })
                        }));
                }
            });
        },
        component () {
            const { entity: t } = _8.useLoaderData(), { tva: e } = Lr({
                from: "__root__"
            }), n = e().slots;
            return v.jsxs("div", {
                className: n.base(),
                children: [
                    v.jsx(s1e, {
                        entity: t
                    }),
                    v.jsx(i1e, {
                        entity: t
                    }),
                    v.jsx(fl, {})
                ]
            });
        }
    }), o1e = ({ graph: t, blueprintId: e, mode: n = "dependencies", reverse: r = !1 })=>{
        try {
            const i = ((s)=>r ? s.reverse() : s)(n === "dependants" ? t.dependantsOf(e) : t.dependenciesOf(e));
            return v.jsxs("div", {
                className: dn([
                    "flex",
                    "flex-row",
                    "flex-wrap",
                    "gap-2",
                    "items-center"
                ]),
                children: [
                    i.length > 0 ? v.jsx(vn, {
                        css: {
                            base: [
                                "text-emerald-500"
                            ]
                        },
                        icon: "icon-[charm--circle-tick]"
                    }) : v.jsx(vn, {
                        css: {
                            base: [
                                "text-amber-500"
                            ]
                        },
                        icon: "icon-[fe--question]"
                    }),
                    i.length > 0 ? i.map((s)=>v.jsx(Gs, {
                            css: {
                                base: [
                                    "bg-emerald-200",
                                    "text-emerald-700",
                                    "border-emerald-500"
                                ]
                            },
                            children: t.getNodeData(s)
                        }, Kn())) : v.jsx(ne, {
                        css: {
                            base: [
                                "text-amber-500",
                                "font-bold"
                            ]
                        },
                        label: "No dependents (label)"
                    })
                ]
            });
        } catch (i) {
            return i instanceof y8.DepGraphCycleError ? v.jsxs("div", {
                className: dn([
                    "flex",
                    "flex-row",
                    "gap-2",
                    "items-center"
                ]),
                children: [
                    v.jsx(vn, {
                        css: {
                            base: [
                                "text-red-500"
                            ]
                        },
                        icon: "icon-[charm--circle-cross]"
                    }),
                    i.cyclePath.map((s)=>v.jsx(Gs, {
                            css: {
                                base: [
                                    "bg-red-200",
                                    "text-red-700",
                                    "border-red-500"
                                ]
                            },
                            children: t.getNodeData(s)
                        }, Kn()))
                ]
            }) : "kaboom";
        }
    }, a1e = ({ dependencies: t, ...e })=>v.jsx(j5, {
            items: [
                {
                    id: "name",
                    label: v.jsx(ne, {
                        label: "Building name (label)"
                    }),
                    render ({ entity: n }) {
                        return n.name;
                    }
                },
                {
                    id: "cycles",
                    label: v.jsx(ne, {
                        label: "Construction cycles (label)"
                    }),
                    render ({ entity: n }) {
                        return Vn({
                            number: n.cycles
                        });
                    }
                },
                {
                    id: "regions",
                    label: v.jsx(ne, {
                        label: "Regions (label)"
                    }),
                    render ({ entity: n }) {
                        return v.jsx(Jf, {
                            items: n.regions,
                            css: {
                                base: [
                                    "flex",
                                    "flex-row",
                                    "gap-2"
                                ]
                            },
                            textEmpty: v.jsx(ne, {
                                label: "No regions (label)"
                            }),
                            render: ({ entity: r })=>v.jsx("div", {
                                    className: dn([
                                        "p-2",
                                        "border",
                                        "border-blue-300",
                                        "bg-blue-50",
                                        "rounded-sm"
                                    ]),
                                    children: r.name
                                })
                        });
                    }
                },
                {
                    id: "requirements",
                    label: v.jsx(ne, {
                        label: "Required resources (label)"
                    }),
                    render ({ entity: n }) {
                        return v.jsx(gC, {
                            requirements: n.requirements,
                            textEmpty: v.jsx(ne, {
                                label: "No requirements (label)"
                            })
                        });
                    }
                },
                {
                    id: "dependencies",
                    label: v.jsx(ne, {
                        label: "Blueprint dependencies (label)"
                    }),
                    render ({ entity: n }) {
                        return v.jsx(g8, {
                            dependencies: n.dependencies,
                            textEmpty: v.jsx(ne, {
                                label: "No dependencies (label)"
                            })
                        });
                    }
                },
                {
                    id: "deps",
                    label: v.jsx(ne, {
                        label: "Blueprint dependency graph (label)"
                    }),
                    render ({ entity: n }) {
                        return v.jsx(o1e, {
                            graph: t,
                            blueprintId: n.id
                        });
                    }
                },
                {
                    id: "preview",
                    render ({ entity: n }) {
                        return v.jsx("div", {
                            className: dn([
                                "mx-auto",
                                "border-2",
                                "border-purple-400",
                                "rounded-md",
                                "w-[256px]",
                                "h-[256px]",
                                "bg-contain",
                                `bg-${n.id}`
                            ])
                        });
                    }
                }
            ],
            ...e
        }), S8 = jt("/$locale/apps/derivean/root/blueprint/$id/view")({
        async loader ({ context: { kysely: t } }) {
            return {
                dependencies: await t.transaction().execute(async (e)=>Sw({
                        tx: e
                    }))
            };
        },
        component () {
            const { dependencies: t } = S8.useLoaderData(), { entity: e } = Wi({
                from: "/$locale/apps/derivean/root/blueprint/$id"
            });
            return v.jsx("div", {
                className: "w-1/2 mx-auto",
                children: v.jsx(a1e, {
                    dependencies: t,
                    entity: e
                })
            });
        }
    }), Ew = ({ group: t, ...e })=>v.jsx(hq, {
            icon: Kr,
            textTitle: v.jsx(ne, {
                label: "Select resource (title)"
            }),
            textSelect: v.jsx(ne, {
                label: "Select resource (label)"
            }),
            table: (n)=>v.jsx(p8, {
                    group: t,
                    ...n
                }),
            render: ({ entity: n })=>n.name,
            queryKey: "Resource",
            query: async ({ filter: n, cursor: r })=>At.transaction().execute(async (i)=>Dr({
                        select: i.selectFrom("Resource as r").select([
                            "r.id",
                            "r.name",
                            "r.weight",
                            (s)=>s.selectFrom("Tag as t").select((o)=>ci`json_group_array(json_object(
                                                'id', ${o.ref("t.id")},
                                                'code', ${o.ref("t.code")},
                                                'group', ${o.ref("t.group")},
                                                'sort', ${o.ref("t.sort")},
                                                'label', ${o.ref("t.label")}
                                            ))`.as("tags")).where("t.id", "in", i.selectFrom("Resource_Tag as rt").select("rt.tagId").where("rt.resourceId", "=", s.ref("r.id"))).as("tags"),
                            (s)=>s.selectFrom("Blueprint_Requirement").select((o)=>o.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countRequirement"),
                            (s)=>s.selectFrom("Blueprint_Production").select((o)=>o.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countProduction"),
                            (s)=>s.selectFrom("Blueprint_Production_Requirement").select((o)=>o.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countProductionRequirement")
                        ]).orderBy("r.name", "asc"),
                        query ({ select: s, where: o }) {
                            let a = s;
                            if (o?.id && (a = a.where("r.id", "=", o.id)), o?.fulltext) {
                                const l = `%${o.fulltext}%`.toLowerCase();
                                a = a.where((c)=>c.or([
                                        c("r.id", "like", l),
                                        c("r.name", "like", l),
                                        c("r.id", "in", c.selectFrom("Resource_Tag as rt").innerJoin("Tag as t", "t.id", "rt.tagId").select("rt.resourceId").where((u)=>u.or([
                                                u("t.code", "like", l),
                                                u("t.label", "like", l),
                                                u("t.group", "like", l)
                                            ])))
                                    ]));
                            }
                            return a;
                        },
                        output: G.object({
                            id: G.string().min(1),
                            name: G.string().min(1),
                            weight: Bc(),
                            tags: Cs(_w.entity),
                            countRequirement: G.number().nonnegative(),
                            countProduction: G.number().nonnegative(),
                            countProductionRequirement: G.number().nonnegative()
                        }),
                        filter: n,
                        cursor: r
                    })),
            ...e
        }), S4 = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(wv.shape),
            defaultValues: {
                amount: 1,
                passive: !1,
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "resourceId",
                    label: v.jsx(ne, {
                        label: "Requirement (label)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "resourceId",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(Ew, {
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "amount",
                    label: v.jsx(ne, {
                        label: "Amount (label)"
                    }),
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("amount")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "passive",
                    label: v.jsx(ne, {
                        label: "Passive requirement (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Passive requirement (hint)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "passive",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(F5, {
                                ...l
                            })
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: Kr,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, BN = vi(), l1e = [
        BN({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceID", t.resourceId);
                }
            },
            size: 22
        }),
        BN({
            name: "amount",
            header () {
                return v.jsx(ne, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 10
        }),
        BN({
            name: "passive",
            header () {
                return v.jsx(ne, {
                    label: "Passive requirement (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(pT, {
                    value: t
                });
            },
            size: 10
        })
    ], c1e = ({ blueprintId: t, table: e, ...n })=>{
        const r = kr([
            [
                "Blueprint"
            ],
            [
                "Blueprint_Requirement"
            ],
            [
                "Blueprint_Resource_Requirement"
            ],
            [
                "Resource"
            ]
        ]);
        return v.jsx(gi, {
            table: yi({
                ...e,
                columns: l1e
            }),
            action: {
                table () {
                    return v.jsx(Or, {
                        children: v.jsx(Wn, {
                            label: v.jsx(ne, {
                                label: "Create requirement item (menu)"
                            }),
                            textTitle: v.jsx(ne, {
                                label: "Create requirement item (modal)"
                            }),
                            icon: Kr,
                            children: v.jsx(S4, {
                                mutation: an({
                                    async mutationFn (i) {
                                        return At.transaction().execute(async (s)=>s.insertInto("Blueprint_Requirement").values({
                                                id: Kn(),
                                                ...i,
                                                blueprintId: t
                                            }).execute());
                                    },
                                    async onSuccess () {
                                        await r();
                                    }
                                })
                            })
                        })
                    });
                },
                row ({ data: i }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit requirement item (modal)"
                                }),
                                icon: Kr,
                                children: v.jsx(S4, {
                                    defaultValues: i,
                                    mutation: an({
                                        async mutationFn (s) {
                                            return At.transaction().execute(async (o)=>o.updateTable("Blueprint_Requirement").set(s).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete requirement item (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Requirement").where("id", "=", i.id).execute()),
                                    textContent: v.jsx(ne, {
                                        label: "Delete requirement item (content)"
                                    }),
                                    textToast: "Delete requirement item",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, e0 = jt("/$locale/apps/derivean/root/blueprint/$id/requirements")({
        validateSearch: Vr(mi(wv)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Requirement",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select([
                                "br.id",
                                "r.name",
                                "br.resourceId",
                                "br.amount",
                                "br.passive"
                            ]).where("br.blueprintId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("br.id", "=", a.id)), a?.idIn && (l = l.where("br.id", "in", a.idIn)), a?.resourceId && (l = l.where("br.resourceId", "=", a.resourceId)), l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                resourceId: G.string().min(1),
                                amount: G.number().nonnegative(),
                                passive: hl()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = e0.useLoaderData(), { filter: n, cursor: r, selection: i } = e0.useSearch(), { id: s } = e0.useParams(), o = e0.useNavigate(), { tva: a } = Lr({
                from: "__root__"
            }), l = a().slots;
            return v.jsx("div", {
                className: l.base(),
                children: v.jsx(c1e, {
                    blueprintId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of requirements (label)"
                        }),
                        ...fi(o)
                    }
                })
            });
        }
    }), K2 = Zoe({
        shape: G.object({
            resourceId: G.string().min(1),
            amount: fd(),
            cycles: Bc()
        }),
        filter: Qs.merge(G.object({
            blueprintId: G.string().optional(),
            resourceId: G.string().optional()
        }))
    }), E4 = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(K2.shape),
            defaultValues: {
                amount: 1,
                cycles: 1,
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "resourceId",
                    label: v.jsx(ne, {
                        label: "Resource name (label)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "resourceId",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(Ew, {
                                textTitle: v.jsx(ne, {
                                    label: "Select resource (title)"
                                }),
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "amount",
                    label: v.jsx(ne, {
                        label: "Amount (label)"
                    }),
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("amount")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "cycles",
                    label: v.jsx(ne, {
                        label: "Production cycles (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Production cycles (hint)"
                    }),
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("cycles")
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: ul,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, Mw = (t)=>v.jsx(hq, {
            icon: ar,
            textTitle: v.jsx(ne, {
                label: "Select blueprint (title)"
            }),
            table: ({ table: e, ...n })=>v.jsx(x8, {
                    table: {
                        ...e,
                        hidden: [
                            "requirements",
                            "dependencies"
                        ]
                    },
                    ...n
                }),
            render: ({ entity: e })=>e.name,
            queryKey: "Blueprint",
            query: async ({ filter: e, cursor: n })=>At.transaction().execute(async (r)=>Dr({
                        select: r.selectFrom("Blueprint as b").select([
                            "b.id",
                            "b.name",
                            "b.sort",
                            "b.cycles",
                            "b.limit",
                            (i)=>i.selectFrom("Blueprint_Region as br").innerJoin("Region as r", "r.id", "br.regionId").select((s)=>Ff.jsonGroupArray({
                                        id: s.ref("r.id"),
                                        name: s.ref("r.name")
                                    }).as("regions")).whereRef("br.blueprintId", "=", "b.id").as("regions"),
                            (i)=>i.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select((s)=>ci`json_group_array(json_object(
                                                    'id', ${s.ref("br.id")},
                                                    'amount', ${s.ref("br.amount")},
                                                    'passive', ${s.ref("br.passive")},
                                                    'resourceId', ${s.ref("br.resourceId")},
                                                    'blueprintId', ${s.ref("br.blueprintId")},
                                                    'name', ${s.ref("r.name")}
                                                ))`.as("requirements")).whereRef("br.blueprintId", "=", "b.id").as("requirements"),
                            (i)=>i.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as b", "b.id", "bd.blueprintId").select((s)=>ci`json_group_array(json_object(
                                                    'id', ${s.ref("bd.id")},
                                                    'dependencyId', ${s.ref("bd.dependencyId")},
                                                    'blueprintId', ${s.ref("bd.blueprintId")},
                                                    'name', ${s.ref("b.name")}
                                                ))`.as("requirements")).whereRef("bd.blueprintId", "=", "b.id").as("dependencies")
                        ]).orderBy("b.name", "asc"),
                        query ({ select: i, where: s }) {
                            let o = i;
                            if (s?.id && (o = o.where("b.id", "=", s.id)), s?.fulltext) {
                                const a = `%${s.fulltext}%`.toLowerCase();
                                o = o.where((l)=>l.or([
                                        l("b.id", "like", a),
                                        l("b.name", "like", a)
                                    ]));
                            }
                            return o;
                        },
                        output: G.object({
                            id: G.string().min(1),
                            name: G.string().min(1),
                            cycles: G.number().nonnegative(),
                            sort: G.number().nonnegative(),
                            limit: G.number().nonnegative(),
                            regions: Cs(G.object({
                                id: G.string().min(1),
                                name: G.string().min(1)
                            })),
                            requirements: Cs(wv.entity.merge(G.object({
                                name: G.string().min(1)
                            }))),
                            dependencies: Cs(lh.entity.merge(G.object({
                                name: G.string().min(1)
                            })))
                        }),
                        filter: e,
                        cursor: n
                    })),
            ...t
        }), u1e = G.object({
        blueprintId: G.string().min(1)
    }), d1e = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(u1e),
            defaultValues: e
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "blueprintId",
                    label: v.jsx(ne, {
                        label: "Target blueprint (label)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "blueprintId",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(Mw, {
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: ar,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, $g = vi(), f1e = [
        $g({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Resource name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsx(Rt, {
                    icon: ul,
                    to: "/$locale/apps/derivean/root/blueprint/production/$id/requirements",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: e
                });
            },
            size: 18
        }),
        $g({
            name: "amount",
            header () {
                return v.jsx(ne, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 8
        }),
        $g({
            name: "cycles",
            header () {
                return v.jsx(ne, {
                    label: "Production cycles (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 8
        }),
        $g({
            name: "requirements",
            header () {
                return v.jsx(ne, {
                    label: "Required resources (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(gC, {
                    textTitle: v.jsx(ne, {
                        label: "Resource requirements (title)"
                    }),
                    textEmpty: v.jsx(ne, {
                        label: "No requirements (label)"
                    }),
                    requirements: t
                });
            },
            size: 32
        }),
        $g({
            name: "resources",
            header () {
                return v.jsx(ne, {
                    label: "Required production resources (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(Jf, {
                    items: t,
                    render: ({ entity: e })=>v.jsxs("div", {
                            className: dn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "bg-sky-100",
                                "border",
                                "rounded-sm",
                                "border-sky-300",
                                "py-1",
                                "px-2"
                            ]),
                            children: [
                                v.jsx("div", {
                                    children: e.name
                                }),
                                v.jsxs("div", {
                                    className: "text-md font-bold text-slate-500",
                                    children: [
                                        "x",
                                        Vn({
                                            number: e.amount
                                        })
                                    ]
                                })
                            ]
                        })
                });
            },
            size: 32
        }),
        $g({
            name: "dependencies",
            header () {
                return v.jsx(ne, {
                    label: "Required production dependencies (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(Jf, {
                    items: t,
                    render: ({ entity: e })=>v.jsx("div", {
                            className: dn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "bg-sky-100",
                                "border",
                                "rounded-sm",
                                "border-sky-300",
                                "py-1",
                                "px-2"
                            ]),
                            children: v.jsx("div", {
                                children: e.name
                            })
                        })
                });
            },
            size: 32
        })
    ], h1e = ({ blueprintId: t, table: e, ...n })=>{
        const r = kr([
            [
                "Blueprint"
            ],
            [
                "Blueprint_Production"
            ],
            [
                "Blueprint_Production_Requirement"
            ],
            [
                "Resource"
            ]
        ]);
        return v.jsx(gi, {
            table: yi({
                ...e,
                columns: f1e
            }),
            action: {
                table () {
                    return v.jsx(Or, {
                        children: v.jsx(Wn, {
                            label: v.jsx(ne, {
                                label: "Create blueprint production (menu)"
                            }),
                            textTitle: v.jsx(ne, {
                                label: "Create blueprint production (modal)"
                            }),
                            icon: ul,
                            children: ({ close: i })=>v.jsx(E4, {
                                    mutation: an({
                                        async mutationFn (s) {
                                            return At.transaction().execute(async (o)=>await o.insertInto("Blueprint_Production").values({
                                                    id: Kn(),
                                                    ...s,
                                                    blueprintId: t
                                                }).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit blueprint production (modal)"
                                }),
                                icon: ul,
                                children: v.jsx(E4, {
                                    defaultValues: i,
                                    mutation: an({
                                        async mutationFn (s) {
                                            return At.transaction().execute(async (o)=>o.updateTable("Blueprint_Production").set(s).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Move production to (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Move production to (modal)"
                                }),
                                icon: Kr,
                                children: ({ close: s })=>v.jsx(d1e, {
                                        mutation: an({
                                            async mutationFn (o) {
                                                return At.transaction().execute(async (a)=>{
                                                    await a.updateTable("Blueprint_Production").set({
                                                        blueprintId: o.blueprintId
                                                    }).where("id", "=", i.id).execute();
                                                });
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete blueprint production (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Production").where("id", "=", i.id).execute()),
                                    textContent: v.jsx(ne, {
                                        label: "Delete blueprint production (content)"
                                    }),
                                    textToast: "Delete blueprint production",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, Tw = Joe({
        shape: G.object({
            blueprintId: G.string().min(1)
        }),
        filter: Qs
    }), Cw = Qoe({
        shape: G.object({
            resourceId: G.string().min(1),
            amount: fd(),
            passive: G.boolean()
        }),
        filter: Qs.merge(G.object({
            blueprintProductionId: G.string().optional(),
            resourceId: G.string().optional()
        }))
    }), Iw = eae({
        shape: G.object({
            resourceId: G.string().min(1),
            amount: fd()
        }),
        filter: Qs.merge(G.object({
            resourceId: G.string().optional()
        }))
    }), t0 = jt("/$locale/apps/derivean/root/blueprint/$id/production")({
        validateSearch: Vr(mi(K2)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Production as bp").innerJoin("Blueprint as bl", "bl.id", "bp.blueprintId").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                "bp.id",
                                "r.name",
                                "bp.amount",
                                "bp.blueprintId",
                                "bp.cycles",
                                "bp.resourceId",
                                (o)=>o.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select((a)=>ci`json_group_array(json_object(
                                                'id', ${a.ref("bpr.id")},
                                                'amount', ${a.ref("bpr.amount")},
                                                'passive', ${a.ref("bpr.passive")},
                                                'blueprintProductionId', ${a.ref("bpr.blueprintProductionId")},
                                                'resourceId', ${a.ref("bpr.resourceId")},
                                                'name', ${a.ref("r.name")}
                                            ))`.as("requirements")).whereRef("bpr.blueprintProductionId", "=", "bp.id").as("requirements"),
                                (o)=>o.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select((a)=>ci`json_group_array(json_object(
                                                'id', ${a.ref("bpr.id")},
                                                'amount', ${a.ref("bpr.amount")},
                                                'blueprintProductionId', ${a.ref("bpr.blueprintProductionId")},
                                                'resourceId', ${a.ref("bpr.resourceId")},
                                                'name', ${a.ref("r.name")}
                                            ))`.as("requirements")).whereRef("bpr.blueprintProductionId", "=", "bp.id").as("resources"),
                                (o)=>o.selectFrom("Blueprint_Production_Dependency as bpd").innerJoin("Blueprint as bl2", "bl2.id", "bpd.blueprintId").select((a)=>ci`json_group_array(json_object(
                                                'id', ${a.ref("bpd.id")},
                                                'blueprintProductionId', ${a.ref("bpd.blueprintProductionId")},
                                                'blueprintId', ${a.ref("bpd.blueprintId")},
                                                'name', ${a.ref("bl2.name")}
                                            ))`.as("requirements")).whereRef("bpd.blueprintProductionId", "=", "bp.id").as("dependencies")
                            ]).where("bp.blueprintId", "=", i).orderBy("r.name", "asc"),
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                blueprintId: G.string().min(1),
                                resourceId: G.string().min(1),
                                amount: G.number().nonnegative(),
                                cycles: G.number().nonnegative(),
                                requirements: Cs(Cw.entity.merge(G.object({
                                    name: G.string().min(1)
                                }))),
                                resources: Cs(Iw.entity.merge(G.object({
                                    name: G.string().min(1)
                                }))),
                                dependencies: Cs(Tw.entity.merge(G.object({
                                    name: G.string().min(1)
                                })))
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = t0.useLoaderData(), { filter: n, cursor: r, selection: i } = t0.useSearch(), { id: s } = t0.useParams(), o = t0.useNavigate(), { tva: a } = Lr({
                from: "__root__"
            }), l = a().slots;
            return v.jsx("div", {
                className: l.base(),
                children: v.jsx(h1e, {
                    blueprintId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of productions (label)"
                        }),
                        ...fi(o)
                    }
                })
            });
        }
    }), p1e = ({ label: t, ...e })=>v.jsx(ne, {
            label: `Inventory type - ${t}`,
            ...e
        }), m1e = rae({
        shape: G.object({
            resourceId: G.string().min(1),
            amount: fd(),
            limit: fd(),
            type: G.enum([
                "storage",
                "construction"
            ])
        }),
        filter: Qs.merge(G.object({
            resourceId: G.string().optional(),
            type: G.enum([
                "storage",
                "construction"
            ]).optional()
        }))
    }), M4 = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(m1e.shape),
            defaultValues: {
                amount: 0,
                limit: 0,
                type: "storage",
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "resourceId",
                    label: v.jsx(ne, {
                        label: "Resource name (label)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "resourceId",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(Ew, {
                                textTitle: v.jsx(ne, {
                                    label: "Select resource (title)"
                                }),
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "type",
                    label: v.jsx(ne, {
                        label: "Inventory type (label)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "type",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(B5, {
                                items: [
                                    {
                                        id: "storage",
                                        value: sa.text("Inventory type - storage")
                                    },
                                    {
                                        id: "construction",
                                        value: sa.text("Inventory type - construction")
                                    }
                                ],
                                render: ({ entity: c })=>c.value,
                                ...l
                            })
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "amount",
                    label: v.jsx(ne, {
                        label: "Amount (label)"
                    }),
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("amount")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "limit",
                    label: v.jsx(ne, {
                        label: "Inventory limit (label)"
                    }),
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("limit")
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: zf,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, $S = vi(), g1e = [
        $S({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Resource name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceId", t.resourceId);
                }
            },
            size: 18
        }),
        $S({
            name: "type",
            header () {
                return v.jsx(ne, {
                    label: "Inventory type (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(p1e, {
                    label: t
                });
            },
            filter: {
                path: "type",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("type", t.type);
                }
            },
            size: 12
        }),
        $S({
            name: "amount",
            header () {
                return v.jsx(ne, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 12
        }),
        $S({
            name: "limit",
            header () {
                return v.jsx(ne, {
                    label: "Inventory limit (label)"
                });
            },
            render ({ value: t, data: e }) {
                return v.jsxs("div", {
                    className: "flex flex-row items-center gap-2 w-full",
                    children: [
                        v.jsx("div", {
                            children: Vn({
                                number: t
                            })
                        }),
                        v.jsx(vT, {
                            value: 100 * e.amount / e.limit
                        })
                    ]
                });
            },
            size: 14
        })
    ], y1e = ({ blueprintId: t, table: e, ...n })=>{
        const r = kr([
            [
                "Blueprint_Inventory"
            ]
        ]), i = an({
            async mutationFn () {
                return At.transaction().execute(async (s)=>v8({
                        tx: s,
                        blueprintId: t
                    }));
            },
            async onSuccess () {
                await r();
            },
            onError (s) {
                console.error(s);
            }
        });
        return v.jsx(gi, {
            table: yi({
                ...e,
                columns: g1e
            }),
            action: {
                table () {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Create inventory item (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Create inventory item (modal)"
                                }),
                                icon: zf,
                                children: v.jsx(M4, {
                                    mutation: an({
                                        async mutationFn (s) {
                                            return or.promise(At.transaction().execute(async (o)=>o.insertInto("Blueprint_Inventory").values({
                                                    id: Kn(),
                                                    blueprintId: t,
                                                    inventoryId: (await o.insertInto("Inventory").values({
                                                        id: Kn(),
                                                        ...s
                                                    }).returningAll().executeTakeFirstOrThrow()).id
                                                }).returningAll().executeTakeFirstOrThrow()), Zs("Create inventory item"));
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            v.jsx(cO, {
                                icon: zf,
                                onClick: ()=>{
                                    i.mutate();
                                },
                                children: v.jsx(ne, {
                                    label: "Fill inventory (label)"
                                })
                            })
                        ]
                    });
                },
                row ({ data: s }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit inventory item (modal)"
                                }),
                                icon: zf,
                                children: v.jsx(M4, {
                                    defaultValues: s,
                                    mutation: an({
                                        async mutationFn (o) {
                                            return or.promise(At.transaction().execute(async (a)=>a.updateTable("Inventory").set(o).where("id", "=", s.inventoryId).returningAll().executeTakeFirstOrThrow()), Zs("Update inventory item"));
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete inventory item (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>At.transaction().execute(async (o)=>o.deleteFrom("Inventory").where("id", "=", s.inventoryId).execute()),
                                    textContent: v.jsx(ne, {
                                        label: "Inventory item delete (content)"
                                    }),
                                    textToast: "Inventory item delete",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, v1e = Yoe({
        shape: G.object({
            blueprintId: G.string().min(1),
            inventoryId: G.string().min(1)
        }),
        filter: Qs.merge(G.object({
            blueprintId: G.string().optional(),
            inventoryId: G.string().optional()
        }))
    }), n0 = jt("/$locale/apps/derivean/root/blueprint/$id/inventory")({
        validateSearch: Vr(mi(v1e)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Inventory",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute((s)=>Dr({
                            select: s.selectFrom("Blueprint_Inventory as bi").innerJoin("Inventory as i", "i.id", "bi.inventoryId").innerJoin("Resource as r", "r.id", "i.resourceId").select([
                                "bi.id",
                                "r.name",
                                "i.amount",
                                "i.limit",
                                "i.type",
                                "i.resourceId",
                                "bi.blueprintId",
                                "bi.inventoryId"
                            ]).where("bi.blueprintId", "=", i).orderBy("i.type", "asc").orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                if (a?.id && (l = l.where("bi.id", "=", a.id)), a?.idIn && (l = l.where("bi.id", "in", a.idIn)), a?.fulltext) {
                                    const c = `%${a.fulltext}%`.toLowerCase();
                                    l = l.where((u)=>u.or([
                                            u("bi.id", "like", `%${c}%`),
                                            u("r.id", "like", `%${c}%`),
                                            u("r.name", "like", `%${c}%`),
                                            u("r.id", "in", u.selectFrom("Resource_Tag as rt").innerJoin("Tag as t", "t.id", "rt.tagId").select("rt.resourceId").where((f)=>f.or([
                                                    f("t.code", "like", c),
                                                    f("t.label", "like", c),
                                                    f("t.group", "like", c)
                                                ])))
                                        ]));
                                }
                                return l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                type: G.enum([
                                    "storage",
                                    "construction"
                                ]),
                                resourceId: G.string().min(1),
                                blueprintId: G.string().min(1),
                                inventoryId: G.string().min(1),
                                amount: G.number().nonnegative(),
                                limit: G.number().int().nonnegative()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = n0.useLoaderData(), { filter: n, cursor: r, selection: i } = n0.useSearch(), { id: s } = n0.useParams(), o = n0.useNavigate(), { tva: a } = Lr({
                from: "__root__"
            }), l = a().slots;
            return v.jsx("div", {
                className: l.base(),
                children: v.jsx(y1e, {
                    blueprintId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of items"
                        }),
                        ...fi(o)
                    }
                })
            });
        }
    }), E8 = jt("/$locale/apps/derivean/root/blueprint/$id/edit")({
        component: ()=>{
            const { entity: t } = Wi({
                from: "/$locale/apps/derivean/root/blueprint/$id"
            }), e = E8.useNavigate(), n = kr([
                [
                    "Blueprint"
                ]
            ]);
            return v.jsx("div", {
                className: "w-1/2 mx-auto",
                children: v.jsx(YE, {
                    defaultValues: t,
                    mutation: an({
                        async mutationFn ({ image: r, regionIds: i, ...s }) {
                            return At.transaction().execute(async (o)=>{
                                await o.updateTable("Blueprint").set({
                                    ...s,
                                    image: r ? await YW(r) : null
                                }).where("id", "=", t.id).returningAll().executeTakeFirstOrThrow(), await o.deleteFrom("Blueprint_Region").where("blueprintId", "=", t.id).execute(), i?.length && await o.insertInto("Blueprint_Region").values(i.map((a)=>({
                                        id: Kn(),
                                        blueprintId: t.id,
                                        regionId: a
                                    }))).execute();
                            });
                        },
                        async onSuccess () {
                            await n(), e({
                                to: "/$locale/apps/derivean/root/blueprint/$id/view",
                                params: {
                                    id: t.id
                                }
                            });
                        }
                    })
                })
            });
        }
    }), T4 = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(lh.shape),
            defaultValues: e
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "dependencyId",
                    label: v.jsx(ne, {
                        label: "Blueprint dependency (label)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "dependencyId",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(Mw, {
                                textTitle: v.jsx(ne, {
                                    label: "Select blueprint (title)"
                                }),
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: ar,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, x1e = vi(), b1e = [
        x1e({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Required building (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsx(Rt, {
                    icon: ar,
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: t.dependencyId
                    },
                    children: e
                });
            },
            size: 22
        })
    ], w1e = ({ blueprintId: t, table: e, ...n })=>{
        const r = kr([
            [
                "Blueprint_Dependency"
            ],
            [
                "Blueprint"
            ]
        ]);
        return v.jsx(gi, {
            table: yi({
                ...e,
                columns: b1e
            }),
            action: {
                table () {
                    return v.jsx(Or, {
                        children: v.jsx(Wn, {
                            label: v.jsx(ne, {
                                label: "Create blueprint dependency (menu)"
                            }),
                            textTitle: v.jsx(ne, {
                                label: "Create blueprint dependency (modal)"
                            }),
                            icon: ar,
                            children: ({ close: i })=>v.jsx(T4, {
                                    mutation: an({
                                        async mutationFn (s) {
                                            return or.promise(At.transaction().execute(async (o)=>{
                                                const a = o.insertInto("Blueprint_Dependency").values({
                                                    id: Kn(),
                                                    ...s,
                                                    blueprintId: t
                                                }).returningAll().executeTakeFirstOrThrow();
                                                return await Lb({
                                                    tx: o
                                                }), a;
                                            }), Zs("Create blueprint dependency"));
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit blueprint dependency (modal)"
                                }),
                                icon: ar,
                                children: ({ close: s })=>v.jsx(T4, {
                                        defaultValues: i,
                                        mutation: an({
                                            async mutationFn (o) {
                                                return or.promise(At.transaction().execute(async (a)=>a.updateTable("Blueprint_Dependency").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow()), Zs("Update blueprint dependency"));
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete blueprint dependency (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Dependency").where("id", "=", i.id).execute()),
                                    textContent: v.jsx(ne, {
                                        label: "Delete blueprint dependency (content)"
                                    }),
                                    textToast: "Delete blueprint dependency",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, r0 = jt("/$locale/apps/derivean/root/blueprint/$id/dependencies")({
        validateSearch: Vr(mi(lh)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Dependency",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as bl", "bl.id", "bd.dependencyId").select([
                                "bd.id",
                                "bl.name",
                                "bd.blueprintId",
                                "bd.dependencyId"
                            ]).where("bd.blueprintId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bd.id", "=", a.id)), a?.idIn && (l = l.where("bd.id", "in", a.idIn)), a?.blueprintId && (l = l.where("bd.blueprintId", "=", a.blueprintId)), a?.dependencyId && (l = l.where("bd.dependencyId", "=", a.dependencyId)), l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                blueprintId: G.string().min(1),
                                dependencyId: G.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = r0.useLoaderData(), { filter: n, cursor: r, selection: i } = r0.useSearch(), { id: s } = r0.useParams(), o = r0.useNavigate(), { tva: a } = Lr({
                from: "__root__"
            }), l = a().slots;
            return v.jsx("div", {
                className: l.base(),
                children: v.jsx(w1e, {
                    blueprintId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of requirements (label)"
                        }),
                        ...fi(o)
                    }
                })
            });
        }
    }), _1e = Xoe({
        shape: G.object({
            conflictId: G.string().min(1)
        }),
        filter: Qs
    }), C4 = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(_1e.shape),
            defaultValues: e
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "conflictId",
                    label: v.jsx(ne, {
                        label: "Blueprint conflict (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Blueprint conflict (hint)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "conflictId",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(Mw, {
                                textTitle: v.jsx(ne, {
                                    label: "Select blueprint conflict (title)"
                                }),
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: ar,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, S1e = vi(), E1e = [
        S1e({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Conflict building (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsx(Rt, {
                    icon: ar,
                    to: "/$locale/apps/derivean/root/blueprint/$id/conflicts",
                    params: {
                        locale: n,
                        id: t.conflictId
                    },
                    children: e
                });
            },
            size: 22
        })
    ], M1e = ({ blueprintId: t, table: e, ...n })=>{
        const r = kr([
            [
                "Blueprint_Conflict"
            ],
            [
                "Blueprint"
            ]
        ]);
        return v.jsx(gi, {
            table: yi({
                ...e,
                columns: E1e
            }),
            action: {
                table () {
                    return v.jsx(Or, {
                        children: v.jsx(Wn, {
                            label: v.jsx(ne, {
                                label: "Create blueprint conflict (menu)"
                            }),
                            textTitle: v.jsx(ne, {
                                label: "Create blueprint conflict (modal)"
                            }),
                            icon: ar,
                            children: ({ close: i })=>v.jsx(C4, {
                                    mutation: an({
                                        async mutationFn (s) {
                                            return or.promise(At.transaction().execute(async (o)=>{
                                                const a = o.insertInto("Blueprint_Conflict").values({
                                                    id: Kn(),
                                                    ...s,
                                                    blueprintId: t
                                                }).returningAll().executeTakeFirstOrThrow();
                                                return await Lb({
                                                    tx: o
                                                }), a;
                                            }), Zs("Create blueprint conflict"));
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit blueprint conflict (modal)"
                                }),
                                icon: ar,
                                children: ({ close: s })=>v.jsx(C4, {
                                        defaultValues: i,
                                        mutation: an({
                                            async mutationFn (o) {
                                                return or.promise(At.transaction().execute(async (a)=>a.updateTable("Blueprint_Conflict").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow()), Zs("Update blueprint conflict"));
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete blueprint conflict (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Conflict").where("id", "=", i.id).execute()),
                                    textContent: v.jsx(ne, {
                                        label: "Delete blueprint conflict (content)"
                                    }),
                                    textToast: "Delete blueprint conflict",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, i0 = jt("/$locale/apps/derivean/root/blueprint/$id/conflicts")({
        validateSearch: Vr(mi(lh)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Conflict",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Conflict as bc").innerJoin("Blueprint as bl", "bl.id", "bc.conflictId").select([
                                "bc.id",
                                "bl.name",
                                "bc.blueprintId",
                                "bc.conflictId"
                            ]).where("bc.blueprintId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bc.id", "=", a.id)), a?.idIn && (l = l.where("bc.id", "in", a.idIn)), l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                blueprintId: G.string().min(1),
                                conflictId: G.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = i0.useLoaderData(), { filter: n, cursor: r, selection: i } = i0.useSearch(), { id: s } = i0.useParams(), o = i0.useNavigate(), { tva: a } = Lr({
                from: "__root__"
            }), l = a().slots;
            return v.jsx("div", {
                className: l.base(),
                children: v.jsx(M1e, {
                    blueprintId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of conflicts (label)"
                        }),
                        ...fi(o)
                    }
                })
            });
        }
    }), T1e = ({ land: t })=>{
        const { mapId: e, locale: n } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsx("div", {
            className: dn([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100"
            ]),
            children: v.jsxs("div", {
                className: "flex flex-row items-center justify-between",
                children: [
                    v.jsx(Rt, {
                        to: "/$locale/apps/derivean/map/$mapId/land/list",
                        params: {
                            locale: n,
                            mapId: e
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    }),
                    v.jsx("div", {
                        className: "flex flex-col items-end text-xs",
                        children: v.jsx("div", {
                            className: "flex flex-row gap-1 items-center",
                            children: v.jsx("div", {
                                className: "font-bold",
                                children: Vn({
                                    number: t.position
                                })
                            })
                        })
                    })
                ]
            })
        });
    }, C1e = Tn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-4",
                "w-4/12",
                "border-l-2",
                "border-slate-200",
                "shadow-xs",
                "relative",
                "max-h-screen"
            ],
            title: [
                "flex",
                "flex-row",
                "justify-between",
                "items-center",
                "px-4",
                "py-4",
                "shadow-md"
            ],
            content: [
                "flex",
                "flex-col",
                "gap-2",
                "max-h-full",
                "overflow-y-auto",
                "px-4",
                "mb-4"
            ]
        },
        variant: {},
        defaults: {}
    }), ua = ({ icon: t, textTitle: e, textSubTitle: n, variant: r, tva: i = C1e, css: s, children: o })=>{
        const { mapId: a, locale: l } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        }), c = i({
            ...r,
            css: s
        }).slots;
        return v.jsxs("div", {
            className: c.base(),
            children: [
                v.jsxs("div", {
                    className: c.title(),
                    children: [
                        v.jsxs("div", {
                            className: "flex flex-col gap-2 font-bold",
                            children: [
                                v.jsxs("div", {
                                    className: "flex flex-row gap-2 items-center",
                                    children: [
                                        v.jsx(vn, {
                                            icon: t,
                                            css: {
                                                base: [
                                                    "text-slate-500"
                                                ]
                                            }
                                        }),
                                        e
                                    ]
                                }),
                                n ? v.jsx("div", {
                                    className: "flex flex-row gap-2 items-center text-sm text-slate-500",
                                    children: n
                                }) : null
                            ]
                        }),
                        v.jsx(Rt, {
                            to: "/$locale/apps/derivean/map/$mapId/view",
                            params: {
                                locale: l,
                                mapId: a
                            },
                            children: v.jsx(Dn, {
                                iconEnabled: MO,
                                variant: {
                                    variant: "subtle"
                                }
                            })
                        })
                    ]
                }),
                v.jsx("div", {
                    className: c.content(),
                    children: o
                })
            ]
        });
    }, Y2 = "icon-[lucide--land-plot]", I1e = ({ land: t, ...e })=>v.jsx(ua, {
            icon: Y2,
            textTitle: v.jsx(ne, {
                label: "Land list (label)"
            }),
            ...e,
            children: t.map((n)=>v.jsx(T1e, {
                    land: n
                }, n.id))
        }), M8 = jt("/$locale/apps/derivean/map/$mapId/land/list")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n } }) {
            return {
                land: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "land",
                        "list"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (r)=>As({
                                select: r.selectFrom("Land as l").innerJoin("Region as r", "r.id", "l.regionId").select([
                                    "l.id",
                                    "r.name",
                                    "l.mapId",
                                    "l.position"
                                ]).where("l.mapId", "=", n).orderBy("r.name"),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    mapId: G.string().min(1),
                                    position: G.number()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { land: t } = M8.useLoaderData();
            return v.jsx(I1e, {
                land: t
            });
        }
    }), R1e = jt("/$locale/apps/derivean/map/$mapId/land/$landId")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, landId: r } }) {
            return {
                land: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "land",
                        r,
                        "fetch"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>lc({
                                select: i.selectFrom("Land as l").innerJoin("Region as r", "r.id", "l.regionId").select([
                                    "l.id",
                                    "r.name",
                                    "l.mapId"
                                ]).where("l.id", "=", r),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    mapId: G.string().min(1)
                                })
                            }));
                    }
                })
            };
        }
    }), A1e = ({ building: t })=>{
        const { mapId: e, locale: n } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsx("div", {
            className: dn([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100"
            ]),
            children: v.jsxs("div", {
                className: "flex flex-row items-center justify-between",
                children: [
                    v.jsx(Rt, {
                        icon: Da,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: n,
                            mapId: e,
                            buildingId: t.id
                        },
                        children: t.name
                    }),
                    v.jsx(Rt, {
                        icon: Y2,
                        to: "/$locale/apps/derivean/map/$mapId/building/list",
                        params: {
                            locale: n,
                            mapId: e
                        },
                        search: {
                            zoomToId: t.landId
                        },
                        children: t.land
                    })
                ]
            })
        });
    }, N1e = ({ building: t, ...e })=>v.jsx(ua, {
            icon: Da,
            textTitle: v.jsx(ne, {
                label: "Building list (label)"
            }),
            ...e,
            children: t.length > 0 ? t.map((n)=>v.jsx(A1e, {
                    building: n
                }, n.id)) : v.jsx("div", {
                className: dn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: v.jsx(ne, {
                    label: "No buildings yet. (label)"
                })
            })
        }), T8 = jt("/$locale/apps/derivean/map/$mapId/building/list")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n } }) {
            return {
                building: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        "list"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (r)=>As({
                                select: r.selectFrom("Building as b").innerJoin("Blueprint as bl", "bl.id", "b.blueprintId").innerJoin("Land as l", "l.id", "b.landId").innerJoin("Region as r", "r.id", "l.regionId").select([
                                    "b.id",
                                    "bl.name",
                                    "b.landId",
                                    "r.name as land"
                                ]).where("l.mapId", "=", n).orderBy("bl.name", "asc"),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    landId: G.string().min(1),
                                    land: G.string().min(1)
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = T8.useLoaderData();
            return v.jsx(N1e, {
                building: t
            });
        }
    }), P1e = jt("/$locale/apps/derivean/map/$mapId/building/$buildingId")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r } }) {
            return {
                building: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "fetch"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>lc({
                                select: i.selectFrom("Building as b").innerJoin("Blueprint as bl", "bl.id", "b.blueprintId").innerJoin("Land as l", "l.id", "b.landId").innerJoin("Region as r", "r.id", "l.regionId").select([
                                    "b.id",
                                    "bl.name",
                                    "b.blueprintId",
                                    "r.name as land",
                                    "b.constructionId",
                                    "b.productionId",
                                    "b.recurringProductionId"
                                ]).where("b.id", "=", r),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    blueprintId: G.string().min(1),
                                    land: G.string().min(1),
                                    constructionId: G.string().nullish(),
                                    productionId: G.string().nullish(),
                                    recurringProductionId: G.string().nullish()
                                })
                            }));
                    }
                })
            };
        }
    }), k1e = jt("/$locale/apps/derivean/map/$mapId/blueprint/$blueprintId")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { blueprintId: n } }) {
            return {
                blueprint: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        "blueprint",
                        n,
                        "fetch"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (r)=>lc({
                                select: r.selectFrom("Blueprint as b").select([
                                    "b.id",
                                    "b.name"
                                ]).where("b.id", "=", n),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1)
                                })
                            }));
                    }
                })
            };
        }
    }), O1e = ({ entity: t, ...e })=>{
        const { locale: n } = tn({
            from: "/$locale"
        });
        return v.jsxs(gm, {
            ...e,
            children: [
                v.jsx(Cr, {
                    icon: X2,
                    to: "/$locale/apps/derivean/game/blueprint/production/$id/requirements",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Production requirements (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: Kr,
                    to: "/$locale/apps/derivean/game/blueprint/production/$id/resources",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Production resource requirements (menu)"
                    })
                }),
                v.jsx(Cr, {
                    icon: ar,
                    to: "/$locale/apps/derivean/game/blueprint/production/$id/dependencies",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: v.jsx(ne, {
                        label: "Production resource dependencies (menu)"
                    })
                })
            ]
        });
    }, L1e = (t)=>{
        const { locale: e } = tn({
            from: "/$locale"
        });
        return v.jsx(pv, {
            title: ({ entity: n })=>v.jsx(mv, {
                    icon: ul,
                    title: n.resource,
                    subtitle: n.blueprint
                }),
            actions: ({ entity: n })=>v.jsx(v.Fragment, {
                    children: v.jsx(Rt, {
                        icon: ar,
                        to: "/$locale/apps/derivean/game/blueprint/$id/production",
                        params: {
                            locale: e,
                            id: n.blueprintId
                        },
                        children: v.jsx(ne, {
                            label: "Building base detail (label)"
                        })
                    })
                }),
            ...t
        });
    }, C8 = jt("/$locale/apps/derivean/game/blueprint/production/$id")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { id: n } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production",
                    n
                ],
                async queryFn () {
                    return e.transaction().execute(async (r)=>({
                            entity: await lc({
                                select: r.selectFrom("Blueprint_Production as bp").innerJoin("Resource as r", "r.id", "bp.resourceId").innerJoin("Blueprint as bl", "bl.id", "bp.blueprintId").select([
                                    "bp.id",
                                    "bp.amount",
                                    "bp.cycles",
                                    "r.name as resource",
                                    "bp.blueprintId",
                                    "bl.name as blueprint"
                                ]).where("bp.id", "=", n),
                                output: G.object({
                                    id: G.string().min(1),
                                    resource: G.string().min(1),
                                    blueprint: G.string().min(1),
                                    blueprintId: G.string().min(1),
                                    amount: G.number().nonnegative(),
                                    cycles: G.number().int().nonnegative()
                                })
                            })
                        }));
                }
            });
        },
        component () {
            const { entity: t } = C8.useLoaderData(), { tva: e } = Lr({
                from: "__root__"
            }), n = e().slots;
            return v.jsxs("div", {
                className: n.base(),
                children: [
                    v.jsx(L1e, {
                        entity: t
                    }),
                    v.jsx(O1e, {
                        entity: t
                    }),
                    v.jsx(fl, {})
                ]
            });
        }
    }), D1e = (t)=>v.jsx(j5, {
            items: [
                {
                    id: "name",
                    label: v.jsx(ne, {
                        label: "Building name (label)"
                    }),
                    render ({ entity: e }) {
                        return e.name;
                    }
                },
                {
                    id: "cycles",
                    label: v.jsx(ne, {
                        label: "Construction cycles (label)"
                    }),
                    render ({ entity: e }) {
                        return Vn({
                            number: e.cycles
                        });
                    }
                }
            ],
            ...t
        }), F1e = jt("/$locale/apps/derivean/game/blueprint/$id/view")({
        component () {
            const { entity: t } = Wi({
                from: "/$locale/apps/derivean/game/blueprint/$id"
            });
            return v.jsx("div", {
                className: "w-1/2 mx-auto",
                children: v.jsx(D1e, {
                    entity: t
                })
            });
        }
    }), UN = vi(), j1e = [
        UN({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceID", t.resourceId);
                }
            },
            size: 22
        }),
        UN({
            name: "amount",
            header () {
                return v.jsx(ne, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 10
        }),
        UN({
            name: "passive",
            header () {
                return v.jsx(ne, {
                    label: "Passive requirement (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(pT, {
                    value: t
                });
            },
            size: 10
        })
    ], B1e = ({ table: t, ...e })=>v.jsx(gi, {
            table: yi({
                ...t,
                columns: j1e
            }),
            ...e
        }), N1 = jt("/$locale/apps/derivean/game/blueprint/$id/requirements")({
        validateSearch: Vr(mi(wv)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Requirement",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select([
                                "br.id",
                                "r.name",
                                "br.resourceId",
                                "br.amount",
                                "br.passive"
                            ]).where("br.blueprintId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("br.id", "=", a.id)), a?.idIn && (l = l.where("br.id", "in", a.idIn)), a?.resourceId && (l = l.where("br.resourceId", "=", a.resourceId)), l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                resourceId: G.string().min(1),
                                amount: G.number().nonnegative(),
                                passive: hl()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = N1.useLoaderData(), { filter: n, cursor: r } = N1.useSearch(), i = N1.useNavigate(), { tva: s } = Lr({
                from: "__root__"
            }), o = s().slots;
            return v.jsx("div", {
                className: o.base(),
                children: v.jsx(B1e, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of requirements (label)"
                        }),
                        ...fi(i)
                    }
                })
            });
        }
    }), Gg = vi(), U1e = [
        Gg({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Resource name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsx(Rt, {
                    icon: ul,
                    to: "/$locale/apps/derivean/game/blueprint/production/$id/requirements",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: e
                });
            },
            size: 18
        }),
        Gg({
            name: "amount",
            header () {
                return v.jsx(ne, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 8
        }),
        Gg({
            name: "cycles",
            header () {
                return v.jsx(ne, {
                    label: "Production cycles (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 8
        }),
        Gg({
            name: "requirements",
            header () {
                return v.jsx(ne, {
                    label: "Required resources (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(gC, {
                    textTitle: v.jsx(ne, {
                        label: "Resource requirements (title)"
                    }),
                    textEmpty: v.jsx(ne, {
                        label: "No requirements (label)"
                    }),
                    requirements: t
                });
            },
            size: 32
        }),
        Gg({
            name: "resources",
            header () {
                return v.jsx(ne, {
                    label: "Required production resources (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(Jf, {
                    items: t,
                    render: ({ entity: e })=>v.jsxs("div", {
                            className: dn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "bg-sky-100",
                                "border",
                                "rounded-sm",
                                "border-sky-300",
                                "py-1",
                                "px-2"
                            ]),
                            children: [
                                v.jsx("div", {
                                    children: e.name
                                }),
                                v.jsxs("div", {
                                    className: "text-md font-bold text-slate-500",
                                    children: [
                                        "x",
                                        Vn({
                                            number: e.amount
                                        })
                                    ]
                                })
                            ]
                        })
                });
            },
            size: 32
        }),
        Gg({
            name: "dependencies",
            header () {
                return v.jsx(ne, {
                    label: "Required production dependencies (label)"
                });
            },
            render ({ value: t }) {
                const { locale: e } = tn({
                    from: "/$locale"
                });
                return v.jsx(Jf, {
                    items: t,
                    render: ({ entity: n })=>v.jsx("div", {
                            className: dn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "bg-sky-100",
                                "border",
                                "rounded-sm",
                                "border-sky-300",
                                "py-1",
                                "px-2"
                            ]),
                            children: v.jsx(Rt, {
                                to: "/$locale/apps/derivean/game/blueprint/$id/requirements",
                                params: {
                                    locale: e,
                                    id: n.blueprintId
                                },
                                children: n.name
                            })
                        })
                });
            },
            size: 32
        })
    ], z1e = ({ table: t, ...e })=>v.jsx(gi, {
            table: yi({
                ...t,
                columns: U1e
            }),
            ...e
        }), P1 = jt("/$locale/apps/derivean/game/blueprint/$id/production")({
        validateSearch: Vr(mi(K2)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Production as bp").innerJoin("Blueprint as bl", "bl.id", "bp.blueprintId").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                "bp.id",
                                "r.name",
                                "bp.amount",
                                "bp.blueprintId",
                                "bp.cycles",
                                "bp.resourceId",
                                (o)=>o.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select((a)=>ci`json_group_array(json_object(
                                                'id', ${a.ref("bpr.id")},
                                                'amount', ${a.ref("bpr.amount")},
                                                'passive', ${a.ref("bpr.passive")},
                                                'blueprintProductionId', ${a.ref("bpr.blueprintProductionId")},
                                                'resourceId', ${a.ref("bpr.resourceId")},
                                                'name', ${a.ref("r.name")}
                                            ))`.as("requirements")).whereRef("bpr.blueprintProductionId", "=", "bp.id").as("requirements"),
                                (o)=>o.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select((a)=>ci`json_group_array(json_object(
                                                'id', ${a.ref("bpr.id")},
                                                'amount', ${a.ref("bpr.amount")},
                                                'blueprintProductionId', ${a.ref("bpr.blueprintProductionId")},
                                                'resourceId', ${a.ref("bpr.resourceId")},
                                                'name', ${a.ref("r.name")}
                                            ))`.as("requirements")).whereRef("bpr.blueprintProductionId", "=", "bp.id").as("resources"),
                                (o)=>o.selectFrom("Blueprint_Production_Dependency as bpd").innerJoin("Blueprint as bl2", "bl2.id", "bpd.blueprintId").select((a)=>ci`json_group_array(json_object(
                                                'id', ${a.ref("bpd.id")},
                                                'blueprintProductionId', ${a.ref("bpd.blueprintProductionId")},
                                                'blueprintId', ${a.ref("bpd.blueprintId")},
                                                'name', ${a.ref("bl2.name")}
                                            ))`.as("requirements")).whereRef("bpd.blueprintProductionId", "=", "bp.id").as("dependencies")
                            ]).where("bp.blueprintId", "=", i).orderBy("r.name", "asc"),
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                blueprintId: G.string().min(1),
                                resourceId: G.string().min(1),
                                amount: G.number().nonnegative(),
                                cycles: G.number().nonnegative(),
                                requirements: Cs(Cw.entity.merge(G.object({
                                    name: G.string().min(1)
                                }))),
                                resources: Cs(Iw.entity.merge(G.object({
                                    name: G.string().min(1)
                                }))),
                                dependencies: Cs(Tw.entity.merge(G.object({
                                    name: G.string().min(1)
                                })))
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = P1.useLoaderData(), { filter: n, cursor: r } = P1.useSearch(), i = P1.useNavigate(), { tva: s } = Lr({
                from: "__root__"
            }), o = s().slots;
            return v.jsx("div", {
                className: o.base(),
                children: v.jsx(z1e, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of productions (label)"
                        }),
                        ...fi(i)
                    }
                })
            });
        }
    }), V1e = vi(), W1e = [
        V1e({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Required building (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsx(Rt, {
                    icon: ar,
                    to: "/$locale/apps/derivean/game/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: t.dependencyId
                    },
                    children: e
                });
            },
            size: 22
        })
    ], q1e = ({ table: t, ...e })=>v.jsx(gi, {
            table: yi({
                ...t,
                columns: W1e
            }),
            ...e
        }), k1 = jt("/$locale/apps/derivean/game/blueprint/$id/dependencies")({
        validateSearch: Vr(mi(lh)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Dependency",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as bl", "bl.id", "bd.dependencyId").select([
                                "bd.id",
                                "bl.name",
                                "bd.blueprintId",
                                "bd.dependencyId"
                            ]).where("bd.blueprintId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bd.id", "=", a.id)), a?.idIn && (l = l.where("bd.id", "in", a.idIn)), a?.blueprintId && (l = l.where("bd.blueprintId", "=", a.blueprintId)), a?.dependencyId && (l = l.where("bd.dependencyId", "=", a.dependencyId)), l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                blueprintId: G.string().min(1),
                                dependencyId: G.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = k1.useLoaderData(), { filter: n, cursor: r } = k1.useSearch(), i = k1.useNavigate(), { tva: s } = Lr({
                from: "__root__"
            }), o = s().slots;
            return v.jsx("div", {
                className: o.base(),
                children: v.jsx(q1e, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of dependencies (label)"
                        }),
                        ...fi(i)
                    }
                })
            });
        }
    }), H1e = vi(), $1e = [
        H1e({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Conflict building (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsx(Rt, {
                    icon: ar,
                    to: "/$locale/apps/derivean/game/blueprint/$id/conflicts",
                    params: {
                        locale: n,
                        id: t.conflictId
                    },
                    children: e
                });
            },
            size: 22
        })
    ], G1e = ({ table: t, ...e })=>v.jsx(gi, {
            table: yi({
                ...t,
                columns: $1e
            }),
            ...e
        }), O1 = jt("/$locale/apps/derivean/game/blueprint/$id/conflicts")({
        validateSearch: Vr(mi(lh)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Conflict",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Conflict as bc").innerJoin("Blueprint as bl", "bl.id", "bc.conflictId").select([
                                "bc.id",
                                "bl.name",
                                "bc.blueprintId",
                                "bc.conflictId"
                            ]).where("bc.blueprintId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bc.id", "=", a.id)), a?.idIn && (l = l.where("bc.id", "in", a.idIn)), l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                blueprintId: G.string().min(1),
                                conflictId: G.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = O1.useLoaderData(), { filter: n, cursor: r } = O1.useSearch(), i = O1.useNavigate(), { tva: s } = Lr({
                from: "__root__"
            }), o = s().slots;
            return v.jsx("div", {
                className: o.base(),
                children: v.jsx(G1e, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of conflicts (label)"
                        }),
                        ...fi(i)
                    }
                })
            });
        }
    }), I8 = nae({
        shape: G.object({
            blueprintId: G.string().min(1),
            constructionId: G.string().optional(),
            productionId: G.string().optional(),
            recurringProductionId: G.string().optional(),
            x: fd(),
            y: fd()
        }),
        filter: Qs.merge(G.object({
            userId: G.string().optional(),
            blueprintId: G.string().optional(),
            name: G.string().optional()
        }))
    }), X1e = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(I8.shape),
            defaultValues: e
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "blueprintId",
                    label: v.jsx(ne, {
                        label: "Select blueprint (label)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "blueprintId",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(Mw, {
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: Da,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, K1e = vi(), Y1e = [
        K1e({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Building name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsxs("div", {
                    className: "flex flex-row gap-2",
                    children: [
                        v.jsx(Rt, {
                            icon: ar,
                            to: "/$locale/apps/derivean/root/blueprint/$id/view",
                            params: {
                                locale: n,
                                id: t.blueprintId
                            }
                        }),
                        e
                    ]
                });
            },
            size: 14
        })
    ], Z1e = ({ table: t, ...e })=>{
        const n = kr([
            [
                "Building"
            ]
        ]);
        return v.jsx(gi, {
            table: yi({
                ...t,
                columns: Y1e
            }),
            action: {
                row ({ data: r }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit building (modal)"
                                }),
                                icon: Da,
                                children: v.jsx(X1e, {
                                    defaultValues: r,
                                    mutation: an({
                                        async mutationFn (i) {
                                            return or.promise(At.transaction().execute((s)=>s.updateTable("Building").set(i).where("id", "=", r.id).returningAll().executeTakeFirstOrThrow()), Zs("Edit building"));
                                        },
                                        async onSuccess () {
                                            await n();
                                        }
                                    })
                                })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete building (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>At.transaction().execute(async (i)=>i.deleteFrom("Building").where("id", "=", r.id).execute()),
                                    textContent: v.jsx(ne, {
                                        label: "Building delete (content)"
                                    }),
                                    textToast: "Building delete",
                                    invalidator: n
                                })
                            })
                        ]
                    });
                }
            },
            ...e
        });
    }, L1 = jt("/$locale/apps/derivean/root/user/$id/building/list")({
        validateSearch: Vr(mi(I8)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Building",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute((s)=>Dr({
                            select: s.selectFrom("Building as b").innerJoin("Blueprint as bl", "bl.id", "b.blueprintId").select([
                                "b.id",
                                "bl.name",
                                "b.blueprintId"
                            ]).where("b.userId", "=", i),
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                blueprintId: G.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = L1.useLoaderData(), { filter: n, cursor: r, selection: i } = L1.useSearch(), s = L1.useNavigate(), { tva: o } = Lr({
                from: "__root__"
            }), a = o().slots;
            return v.jsx("div", {
                className: a.base(),
                children: v.jsx(Z1e, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, s)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of buildings (label)"
                        }),
                        ...fi(s)
                    }
                })
            });
        }
    }), I4 = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(Iw.shape),
            defaultValues: {
                amount: 1,
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "resourceId",
                    label: v.jsx(ne, {
                        label: "Requirement (label)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "resourceId",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(Ew, {
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "amount",
                    label: v.jsx(ne, {
                        label: "Amount (label)"
                    }),
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("amount")
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: Kr,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, R4 = vi(), J1e = [
        R4({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceID", t.resourceId);
                }
            },
            size: 22
        }),
        R4({
            name: "amount",
            header () {
                return v.jsx(ne, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 10
        })
    ], Q1e = ({ blueprintProductionId: t, table: e, ...n })=>{
        const r = kr([
            [
                "Blueprint_Production_Resource"
            ],
            [
                "Blueprint_Production"
            ],
            [
                "Resource"
            ]
        ]);
        return v.jsx(gi, {
            table: yi({
                ...e,
                columns: J1e
            }),
            action: {
                table () {
                    return v.jsx(Or, {
                        children: v.jsx(Wn, {
                            label: v.jsx(ne, {
                                label: "Create production resource requirement (menu)"
                            }),
                            textTitle: v.jsx(ne, {
                                label: "Create production resource requirement (modal)"
                            }),
                            icon: Kr,
                            children: ({ close: i })=>v.jsx(I4, {
                                    mutation: an({
                                        async mutationFn (s) {
                                            return At.transaction().execute(async (o)=>o.insertInto("Blueprint_Production_Resource").values({
                                                    id: Kn(),
                                                    ...s,
                                                    blueprintProductionId: t
                                                }).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit production resource requirement (modal)"
                                }),
                                icon: Kr,
                                children: ({ close: s })=>v.jsx(I4, {
                                        defaultValues: i,
                                        mutation: an({
                                            async mutationFn (o) {
                                                return At.transaction().execute(async (a)=>a.updateTable("Blueprint_Production_Resource").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow());
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete production resource requirement (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Production_Resource").where("id", "=", i.id).execute()),
                                    textContent: v.jsx(ne, {
                                        label: "Delete production resource requirement (content)"
                                    }),
                                    textToast: "Delete production resource requirement item",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, s0 = jt("/$locale/apps/derivean/root/blueprint/production/$id/resources")({
        validateSearch: Vr(mi(Iw)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Resource",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                "bpr.id",
                                "r.name",
                                "bpr.resourceId",
                                "bpr.amount"
                            ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bpr.id", "=", a.id)), a?.idIn && (l = l.where("bpr.id", "in", a.idIn)), a?.resourceId && (l = l.where("bpr.resourceId", "=", a.resourceId)), l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                resourceId: G.string().min(1),
                                amount: G.number().nonnegative()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = s0.useLoaderData(), { filter: n, cursor: r, selection: i } = s0.useSearch(), { id: s } = s0.useParams(), o = s0.useNavigate();
            return v.jsx(v.Fragment, {
                children: v.jsx(Q1e, {
                    blueprintProductionId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of production resource requirements (label)"
                        }),
                        ...fi(o)
                    }
                })
            });
        }
    }), A4 = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(Cw.shape),
            defaultValues: {
                amount: 1,
                passive: !1,
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "resourceId",
                    label: v.jsx(ne, {
                        label: "Requirement (label)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "resourceId",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(Ew, {
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "amount",
                    label: v.jsx(ne, {
                        label: "Amount (label)"
                    }),
                    children: v.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("amount")
                    })
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "passive",
                    label: v.jsx(ne, {
                        label: "Passive requirement (label)"
                    }),
                    hint: v.jsx(ne, {
                        label: "Passive requirement (hint)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "passive",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(F5, {
                                ...l
                            })
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: Kr,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, zN = vi(), eEe = [
        zN({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceID", t.resourceId);
                }
            },
            size: 12
        }),
        zN({
            name: "amount",
            header () {
                return v.jsx(ne, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 10
        }),
        zN({
            name: "passive",
            header () {
                return v.jsx(ne, {
                    label: "Passive requirement (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(pT, {
                    value: t
                });
            },
            size: 10
        })
    ], tEe = ({ blueprintProductionId: t, table: e, ...n })=>{
        const r = kr([
            [
                "Blueprint_Production_Requirement"
            ],
            [
                "Blueprint_Production"
            ],
            [
                "Resource"
            ]
        ]);
        return v.jsx(gi, {
            table: yi({
                ...e,
                columns: eEe
            }),
            action: {
                table () {
                    return v.jsx(Or, {
                        children: v.jsx(Wn, {
                            label: v.jsx(ne, {
                                label: "Create production requirement (menu)"
                            }),
                            textTitle: v.jsx(ne, {
                                label: "Create production requirement (modal)"
                            }),
                            icon: Kr,
                            children: ({ close: i })=>v.jsx(A4, {
                                    mutation: an({
                                        async mutationFn (s) {
                                            return At.transaction().execute(async (o)=>o.insertInto("Blueprint_Production_Requirement").values({
                                                    id: Kn(),
                                                    ...s,
                                                    blueprintProductionId: t
                                                }).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit production requirement (modal)"
                                }),
                                icon: Kr,
                                children: ({ close: s })=>v.jsx(A4, {
                                        defaultValues: i,
                                        mutation: an({
                                            async mutationFn (o) {
                                                return At.transaction().execute(async (a)=>a.updateTable("Blueprint_Production_Requirement").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow());
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete production requirement (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Production_Requirement").where("id", "=", i.id).execute()),
                                    textContent: v.jsx(ne, {
                                        label: "Delete production requirement (content)"
                                    }),
                                    textToast: "Delete production requirement item",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, o0 = jt("/$locale/apps/derivean/root/blueprint/production/$id/requirements")({
        validateSearch: Vr(mi(Cw)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Requirement",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                "bpr.id",
                                "r.name",
                                "bpr.resourceId",
                                "bpr.amount",
                                "bpr.passive"
                            ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bpr.id", "=", a.id)), a?.idIn && (l = l.where("bpr.id", "in", a.idIn)), a?.resourceId && (l = l.where("bpr.resourceId", "=", a.resourceId)), l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                resourceId: G.string().min(1),
                                amount: G.number().nonnegative(),
                                passive: hl()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = o0.useLoaderData(), { filter: n, cursor: r, selection: i } = o0.useSearch(), { id: s } = o0.useParams(), o = o0.useNavigate();
            return v.jsx(v.Fragment, {
                children: v.jsx(tEe, {
                    blueprintProductionId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of production requirements (label)"
                        }),
                        ...fi(o)
                    }
                })
            });
        }
    }), N4 = ({ mutation: t, defaultValues: e, variant: n, tva: r = fs, css: i })=>{
        const s = hs({
            resolver: ps(Tw.shape),
            defaultValues: e
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return v.jsxs("form", {
            className: o.base(),
            onSubmit: to({
                form: s,
                mutation: t
            }),
            children: [
                v.jsx(rs, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                v.jsx(yn, {
                    formState: s.formState,
                    name: "blueprintId",
                    label: v.jsx(ne, {
                        label: "Blueprint dependency (label)"
                    }),
                    children: v.jsx(Ro, {
                        control: s.control,
                        name: "blueprintId",
                        render: ({ field: { ref: a, ...l } })=>v.jsx(Mw, {
                                textTitle: v.jsx(ne, {
                                    label: "Select blueprint (title)"
                                }),
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                v.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: v.jsx(Dn, {
                        iconEnabled: ar,
                        type: "submit",
                        children: v.jsx(ne, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, nEe = vi(), rEe = [
        nEe({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Required building (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsx(Rt, {
                    icon: ar,
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: t.blueprintId
                    },
                    children: e
                });
            },
            size: 22
        })
    ], iEe = ({ blueprintProductionId: t, table: e, ...n })=>{
        const r = kr([
            [
                "Blueprint_Production_Dependency"
            ],
            [
                "Blueprint"
            ]
        ]);
        return v.jsx(gi, {
            table: yi({
                ...e,
                columns: rEe
            }),
            action: {
                table () {
                    return v.jsx(Or, {
                        children: v.jsx(Wn, {
                            label: v.jsx(ne, {
                                label: "Create blueprint production dependency (menu)"
                            }),
                            textTitle: v.jsx(ne, {
                                label: "Create blueprint production dependency (modal)"
                            }),
                            icon: ar,
                            children: ({ close: i })=>v.jsx(N4, {
                                    mutation: an({
                                        async mutationFn (s) {
                                            return or.promise(At.transaction().execute(async (o)=>{
                                                const a = o.insertInto("Blueprint_Production_Dependency").values({
                                                    id: Kn(),
                                                    ...s,
                                                    blueprintProductionId: t
                                                }).returningAll().executeTakeFirstOrThrow();
                                                return await Lb({
                                                    tx: o
                                                }), a;
                                            }), Zs("Create blueprint production dependency"));
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return v.jsxs(Or, {
                        children: [
                            v.jsx(Wn, {
                                label: v.jsx(ne, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Edit blueprint production dependency (modal)"
                                }),
                                icon: ar,
                                children: ({ close: s })=>v.jsx(N4, {
                                        defaultValues: i,
                                        mutation: an({
                                            async mutationFn (o) {
                                                return or.promise(At.transaction().execute(async (a)=>a.updateTable("Blueprint_Production_Dependency").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow()), Zs("Update blueprint production dependency"));
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            v.jsx(Wn, {
                                icon: Ri,
                                label: v.jsx(ne, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: v.jsx(ne, {
                                    label: "Delete blueprint production dependency (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: v.jsx(la, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Production_Dependency").where("id", "=", i.id).execute()),
                                    textContent: v.jsx(ne, {
                                        label: "Delete blueprint production dependency (content)"
                                    }),
                                    textToast: "Delete blueprint production dependency",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, a0 = jt("/$locale/apps/derivean/root/blueprint/production/$id/dependencies")({
        validateSearch: Vr(mi(Tw)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Dependency",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Production_Dependency as bpd").innerJoin("Blueprint as bl", "bl.id", "bpd.blueprintId").select([
                                "bpd.id",
                                "bl.name",
                                "bpd.blueprintId"
                            ]).where("bpd.blueprintProductionId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bpd.id", "=", a.id)), a?.idIn && (l = l.where("bpd.id", "in", a.idIn)), l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                blueprintId: G.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = a0.useLoaderData(), { filter: n, cursor: r, selection: i } = a0.useSearch(), { id: s } = a0.useParams(), o = a0.useNavigate(), { tva: a } = Lr({
                from: "__root__"
            }), l = a().slots;
            return v.jsx("div", {
                className: l.base(),
                children: v.jsx(iEe, {
                    blueprintProductionId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: aa(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of dependencies (label)"
                        }),
                        ...fi(o)
                    }
                })
            });
        }
    }), sEe = jt("/$locale/apps/derivean/map/$mapId/road/$roadId/view")({
        component () {
            return "mrdka";
        }
    }), oEe = Tn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "bg-white",
                "border",
                "border-slate-300",
                "p-2",
                "hover:bg-slate-100",
                "cursor-draggable"
            ]
        },
        variant: {
            isDragging: {
                true: []
            }
        },
        match: [
            {
                if: {
                    isDragging: !0
                },
                then: {
                    base: [
                        "cursor-grabbing",
                        "bg-slate-100"
                    ]
                }
            }
        ],
        defaults: {
            isDragging: !1
        }
    }), Ck = "icon-[emojione-monotone--construction]", aEe = async ({ userId: t, blueprintId: e, landId: n, plotId: r, plan: i, valid: s })=>At.transaction().execute(async (o)=>{
            const a = await o.selectFrom("Blueprint as b").select([
                "b.cycles"
            ]).where("b.id", "=", e).executeTakeFirstOrThrow(), l = await o.insertInto("Building").values({
                id: Kn(),
                userId: t,
                blueprintId: e,
                landId: n,
                constructionId: (await o.insertInto("Construction").values({
                    id: Kn(),
                    userId: t,
                    cycle: 0,
                    cycles: a.cycles,
                    plan: i
                }).returning("id").executeTakeFirstOrThrow()).id,
                plotId: r,
                valid: s
            }).returningAll().executeTakeFirstOrThrow(), c = await o.selectFrom("Inventory as i").select([
                "i.amount",
                "i.limit",
                "i.resourceId",
                "i.type"
            ]).where("i.id", "in", o.selectFrom("Blueprint_Inventory as bi").select("bi.inventoryId").where("bi.blueprintId", "=", e)).execute();
            for await (const { amount: u, limit: f, resourceId: p, type: g } of c)await o.insertInto("Building_Inventory").values({
                id: Kn(),
                buildingId: l.id,
                inventoryId: (await o.insertInto("Inventory").values({
                    id: Kn(),
                    amount: u,
                    limit: f,
                    resourceId: p,
                    type: g
                }).returning("id").executeTakeFirstOrThrow()).id
            }).execute();
            return l;
        }), Z2 = X.memo(({ cycles: t })=>v.jsxs("div", {
            className: dn([
                "flex",
                "flex-row",
                "items-center",
                "gap-2"
            ]),
            children: [
                v.jsx(vn, {
                    css: {
                        base: [
                            "text-slate-400"
                        ]
                    },
                    icon: G2
                }),
                v.jsx("div", {
                    className: "font-bold text-md",
                    children: Vn({
                        number: t
                    })
                })
            ]
        })), lEe = ({ blueprint: t, land: e, userId: n, variant: r, tva: i = oEe, css: s })=>{
        const { mapId: o, locale: a } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        }), l = dm(), c = kr([
            [
                "GameMap"
            ]
        ]), u = an({
            async mutationFn ({ blueprintId: p, landId: g, plotId: x }) {
                const S = await aEe({
                    userId: n,
                    blueprintId: p,
                    landId: g,
                    plotId: x,
                    plan: !0,
                    valid: !1
                });
                l({
                    to: "/$locale/apps/derivean/map/$mapId/land/$landId/construction",
                    params: {
                        locale: a,
                        mapId: o,
                        landId: e.id
                    },
                    search: {
                        zoomToId: S.id
                    }
                });
            },
            async onSuccess () {
                await c();
            },
            onError (p) {
                console.error(p);
            }
        }), f = i({
            ...r,
            css: s
        }).slots;
        return v.jsx("div", {
            className: f.base(),
            children: v.jsxs("div", {
                className: "flex flex-row gap-2 items-center justify-between",
                children: [
                    v.jsxs("div", {
                        className: "flex flex-row gap-2",
                        children: [
                            v.jsxs(Gs, {
                                children: [
                                    "x",
                                    t.count
                                ]
                            }),
                            v.jsx(Rt, {
                                to: "/$locale/apps/derivean/map/$mapId/blueprint/$blueprintId/requirements",
                                params: {
                                    locale: a,
                                    mapId: o,
                                    blueprintId: t.id
                                },
                                css: {
                                    base: [
                                        "font-bold"
                                    ]
                                },
                                children: t.name
                            })
                        ]
                    }),
                    v.jsxs("div", {
                        className: "flex flex-row gap-2",
                        children: [
                            v.jsx(Z2, {
                                cycles: t.cycles
                            }),
                            v.jsx(Dn, {
                                iconEnabled: Ck,
                                iconDisabled: Ck,
                                loading: u.isPending,
                                onClick: ()=>{
                                    u.mutate({
                                        blueprintId: t.id,
                                        landId: e.id,
                                        plotId: "unknown`"
                                    });
                                }
                            })
                        ]
                    })
                ]
            })
        });
    }, cEe = ({ userId: t, land: e, blueprints: n, ...r })=>{
        const { locale: i, mapId: s } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsx(ua, {
            icon: Ck,
            textTitle: v.jsx(Rt, {
                to: "/$locale/apps/derivean/map/$mapId/land/$landId/construction",
                params: {
                    locale: i,
                    mapId: s,
                    landId: e.id
                },
                search: {
                    zoomToId: e.id
                },
                children: e.name
            }),
            textSubTitle: v.jsx(ne, {
                label: "Construction (label)"
            }),
            ...r,
            children: n.length > 0 ? n.map((o)=>v.jsx(lEe, {
                    blueprint: o,
                    userId: t,
                    land: e
                }, o.id)) : v.jsx("div", {
                className: dn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: v.jsx(ne, {
                    label: "There are no available blueprints (label)"
                })
            })
        });
    }, R8 = jt("/$locale/apps/derivean/map/$mapId/land/$landId/construction")({
        async loader ({ context: { queryClient: t, kysely: e, session: n }, params: { mapId: r, landId: i } }) {
            const s = await n();
            return {
                user: s,
                blueprints: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        r,
                        "land",
                        i,
                        "construction",
                        "list"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (o)=>As({
                                select: o.selectFrom(o.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.name",
                                    "bl.sort",
                                    "bl.cycles",
                                    (a)=>a.selectFrom("Building as bg").select((l)=>l.fn.count("bg.id").as("count")).whereRef("bg.blueprintId", "=", "bl.id").where("bg.userId", "=", s.id).where("bg.landId", "is", i).as("count"),
                                    (a)=>a.case().when(a.not(a.exists(a.selectFrom("Blueprint_Dependency as bd").select(a.lit(1).as("one")).whereRef("bd.blueprintId", "=", "bl.id").where((l)=>l.not(l.exists(l.selectFrom("Building as b").innerJoin("Land as l", "l.id", "b.landId").select(l.lit(1).as("one")).where("b.constructionId", "is", null).where("b.userId", "=", s.id).where("l.mapId", "=", r).whereRef("b.blueprintId", "=", "bd.dependencyId"))))))).then(a.lit(!0)).else(a.lit(!1)).end().as("withAvailableBuildings")
                                ]).where("bl.id", "not in", o.selectFrom("Blueprint_Conflict as bc").select("bc.conflictId").where("bc.blueprintId", "in", o.selectFrom("Building as bg").innerJoin("Land as l", "l.id", "bg.landId").select("bg.blueprintId").where("bg.userId", "=", s.id).where("l.mapId", "=", r))).where("bl.id", "in", o.selectFrom("Blueprint_Region as br").innerJoin("Land as l", "l.regionId", "br.regionId").select("br.blueprintId").where("l.id", "=", i)).as("blueprint")).selectAll().where("withAvailableBuildings", "=", !0).orderBy("blueprint.sort", "asc"),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    count: G.number().int().nonnegative(),
                                    cycles: G.number().int().nonnegative(),
                                    sort: G.number().int().nonnegative(),
                                    withAvailableBuildings: hl()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { user: t, blueprints: e } = R8.useLoaderData(), { land: n } = Wi({
                from: "/$locale/apps/derivean/map/$mapId/land/$landId"
            });
            return v.jsx(cEe, {
                userId: t.id,
                land: n,
                blueprints: e
            });
        }
    }), fp = [
        "p-4",
        "border",
        "border-slate-300",
        "w-full",
        "justify-start"
    ], $p = "icon-[hugeicons--package-receive]", Ik = "icon-[heroicons--queue-list]", jM = "icon-[hugeicons--package-sent]", A8 = "icon-[icon-park-outline--transport]", uEe = ({ building: t })=>{
        const { mapId: e, locale: n } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsxs(ua, {
            icon: Da,
            textTitle: v.jsx(Rt, {
                to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                params: {
                    locale: n,
                    mapId: e,
                    buildingId: t.id
                },
                search: {
                    zoomToId: t.id
                },
                children: t.name
            }),
            textSubTitle: t.land,
            children: [
                v.jsx(Rt, {
                    icon: ul,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: fp
                    },
                    children: v.jsx(ne, {
                        label: "Building production (label)"
                    })
                }),
                v.jsx(Rt, {
                    icon: Ik,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/queue",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: fp
                    },
                    children: v.jsx(ne, {
                        label: "Production queue (label)"
                    })
                }),
                v.jsx(Rt, {
                    icon: zf,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/inventory",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: fp
                    },
                    children: v.jsx(ne, {
                        label: "Building inventory (label)"
                    })
                }),
                v.jsx(Rt, {
                    icon: jM,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/supply",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: fp
                    },
                    children: v.jsx(ne, {
                        label: "Supply list (label)"
                    })
                }),
                v.jsx(Rt, {
                    icon: $p,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/demand",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: fp
                    },
                    children: v.jsx(ne, {
                        label: "Demand list (label)"
                    })
                }),
                v.jsx(Rt, {
                    icon: A8,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/transport",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: fp
                    },
                    children: v.jsx(ne, {
                        label: "Transport list (label)"
                    })
                }),
                v.jsx(Rt, {
                    icon: Da,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/link",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: fp
                    },
                    children: v.jsx(ne, {
                        label: "Building links (label)"
                    })
                }),
                v.jsx("div", {
                    className: "border-b border-slate-300"
                }),
                v.jsx("div", {
                    className: dn([
                        "w-full",
                        "h-96",
                        "bg-contain",
                        "p-2",
                        `bg-${t.blueprintId}`
                    ])
                })
            ]
        });
    }, J2 = "icon-[hugeicons--package]", dEe = ({ mapId: t, userId: e, requirement: n })=>{
        const r = kr([
            [
                "GameMap"
            ]
        ]), i = n.available || 0, s = an({
            async mutationFn ({ demandId: a }) {
                return At.transaction().execute(async (l)=>{
                    const { priority: c } = await l.selectFrom("Demand as d").select((u)=>u.fn.max("d.priority").as("priority")).where("d.mapId", "=", t).where("d.userId", "=", e).where("d.id", "!=", a).executeTakeFirstOrThrow();
                    return l.updateTable("Demand").set({
                        priority: c + 1
                    }).where("id", "=", a).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        }), o = an({
            async mutationFn ({ demandId: a }) {
                return At.transaction().execute(async (l)=>{
                    const { priority: c } = await l.selectFrom("Demand as d").select((u)=>u.fn.min("d.priority").as("priority")).where("d.mapId", "=", t).where("d.userId", "=", e).where("d.id", "!=", a).executeTakeFirstOrThrow();
                    return l.updateTable("Demand").set({
                        priority: c - 1
                    }).where("id", "=", a).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        });
        return v.jsxs("div", {
            className: dn([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100",
                n.supply ? [
                    "bg-purple-50",
                    "border-purple-400",
                    "hover:bg-purple-50",
                    "hover:border-purple-400"
                ] : [
                    "bg-red-50",
                    "border-red-400",
                    "hover:bg-red-50",
                    "hover:border-red-400"
                ],
                n.transport || i >= n.amount ? [
                    "bg-green-50",
                    "border-green-400",
                    "hover:bg-green-50",
                    "hover:border-green-400"
                ] : void 0
            ]),
            children: [
                v.jsxs("div", {
                    className: "flex flex-row items-center justify-between",
                    children: [
                        v.jsxs("div", {
                            className: dn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                n.supply ? [
                                    "text-purple-600"
                                ] : [
                                    "text-red-600"
                                ],
                                n.transport || i >= n.amount ? [
                                    "text-green-600"
                                ] : void 0
                            ]),
                            children: [
                                n.supply || i >= n.amount ? v.jsx(vn, {
                                    icon: $p
                                }) : v.jsx(vn, {
                                    icon: J2
                                }),
                                v.jsx("div", {
                                    className: "font-bold",
                                    children: n.name
                                })
                            ]
                        }),
                        v.jsxs("div", {
                            className: "flex flex-row gap-1 items-center",
                            children: [
                                v.jsx("div", {
                                    children: Vn({
                                        number: i
                                    })
                                }),
                                v.jsx("div", {
                                    children: "/"
                                }),
                                v.jsx("div", {
                                    className: "font-bold",
                                    children: Vn({
                                        number: n.amount
                                    })
                                })
                            ]
                        })
                    ]
                }),
                v.jsx(vT, {
                    value: 100 * i / n.amount,
                    css: {
                        progress: i >= n.amount ? [
                            "bg-green-500"
                        ] : void 0
                    }
                }),
                n.demand ? v.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between w-full",
                    children: [
                        v.jsx(Dn, {
                            iconEnabled: $5,
                            variant: {
                                variant: "subtle"
                            },
                            loading: s.isPending || o.isPending,
                            onClick: ()=>{
                                n.demand && s.mutate({
                                    demandId: n.demand.id
                                });
                            },
                            children: v.jsx(ne, {
                                label: "Priority up (label)"
                            })
                        }),
                        v.jsx(Gs, {
                            css: {
                                base: [
                                    "bg-purple-50",
                                    "border-purple-400",
                                    "text-purple-600"
                                ]
                            },
                            children: n.demand.priority
                        }),
                        v.jsx(Dn, {
                            iconEnabled: H5,
                            variant: {
                                variant: "subtle"
                            },
                            loading: s.isPending || o.isPending,
                            onClick: ()=>{
                                n.demand && o.mutate({
                                    demandId: n.demand.id
                                });
                            },
                            children: v.jsx(ne, {
                                label: "Priority down (label)"
                            })
                        })
                    ]
                }) : null
            ]
        });
    }, fEe = ({ userId: t, building: e, requirement: n, ...r })=>{
        const { locale: i, mapId: s } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsx(ua, {
            icon: X2,
            textTitle: v.jsx(ne, {
                label: "Construction requirements (label)"
            }),
            textSubTitle: v.jsx(Rt, {
                to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                params: {
                    locale: i,
                    mapId: s,
                    buildingId: e.id
                },
                search: {
                    zoomToId: e.id
                },
                children: e.name
            }),
            ...r,
            children: n.length > 0 ? n.map((o)=>v.jsx(dEe, {
                    mapId: s,
                    userId: t,
                    requirement: o
                }, o.id)) : v.jsx("div", {
                className: dn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-green-400",
                    "p-4",
                    "bg-green-200",
                    "font-bold"
                ]),
                children: v.jsx(ne, {
                    label: "There are no construction requirements (label)"
                })
            })
        });
    }, N8 = jt("/$locale/apps/derivean/map/$mapId/building/$buildingId/view")({
        async loader ({ context: { queryClient: t, kysely: e, session: n }, params: { mapId: r, buildingId: i } }) {
            return {
                user: await n(),
                requirement: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        r,
                        "building",
                        i,
                        "construction",
                        "requirement"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (o)=>As({
                                select: o.selectFrom("Blueprint_Requirement as br").innerJoin("Building as bg", (a)=>a.onRef("bg.blueprintId", "=", "br.blueprintId").on("bg.id", "=", i)).innerJoin("Resource as r", "r.id", "br.resourceId").select([
                                    "br.id",
                                    "r.name",
                                    "br.amount",
                                    "br.passive",
                                    (a)=>a.selectFrom("Transport as t").select((l)=>l.fn.count("t.id").as("transport")).whereRef("t.targetId", "=", "bg.id").whereRef("t.resourceId", "=", "br.resourceId").as("transport"),
                                    (a)=>a.selectFrom("Supply as s").innerJoin("Building as b", "b.id", "s.buildingId").innerJoin("Blueprint as bp", "bp.id", "b.blueprintId").select((l)=>Ff.jsonObject({
                                                id: l.ref("s.id"),
                                                buildingId: l.ref("s.buildingId"),
                                                name: l.ref("bp.name")
                                            }).as("supply")).whereRef("s.resourceId", "=", "br.resourceId").where("s.buildingId", "in", a.selectFrom("Building_To_Building as btb").select("btb.linkId").where("btb.buildingId", "=", i)).as("supply"),
                                    (a)=>a.selectFrom("Inventory as i").select([
                                            "i.amount"
                                        ]).where("i.id", "in", o.selectFrom("Building_Inventory as bi").select("bi.inventoryId").where("bi.buildingId", "=", i)).whereRef("i.resourceId", "=", "br.resourceId").where("i.type", "=", "construction").limit(1).as("available"),
                                    (a)=>a.selectFrom("Demand as d").select((l)=>Ff.jsonObject({
                                                id: l.ref("d.id"),
                                                priority: l.ref("d.priority")
                                            }).as("demand")).whereRef("d.resourceId", "=", "br.resourceId").where("d.buildingId", "=", i).as("demand")
                                ]).orderBy("r.name", "asc"),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    amount: G.number().nonnegative(),
                                    transport: G.number().nonnegative(),
                                    available: G.number().nonnegative().nullish(),
                                    supply: FF(G.object({
                                        id: G.string().min(1),
                                        buildingId: G.string().min(1),
                                        name: G.string().min(1)
                                    })).nullish(),
                                    demand: FF(G.object({
                                        id: G.string().min(1),
                                        priority: G.number()
                                    })).nullish(),
                                    passive: hl()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = Wi({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { user: e, requirement: n } = N8.useLoaderData();
            return t.constructionId ? v.jsx(fEe, {
                userId: e.id,
                building: t,
                requirement: n
            }) : v.jsx(uEe, {
                building: t
            });
        }
    }), hEe = ({ transport: t })=>{
        const { mapId: e, locale: n } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsxs("div", {
            className: dn([
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                "hover:border-slate-300",
                "hover:bg-slate-100"
            ]),
            children: [
                v.jsx("div", {
                    className: "font-bold",
                    children: t.resource
                }),
                v.jsx(Rt, {
                    icon: Da,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.sourceId
                    },
                    search: {
                        zoomToId: t.sourceId
                    },
                    children: t.source
                }),
                v.jsxs(Gs, {
                    children: [
                        "x",
                        t.amount
                    ]
                })
            ]
        });
    }, pEe = ({ building: t, transport: e, ...n })=>{
        const { mapId: r, locale: i } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsx(ua, {
            icon: A8,
            textTitle: v.jsx(ne, {
                label: "Transport list (label)"
            }),
            textSubTitle: v.jsxs(v.Fragment, {
                children: [
                    v.jsx(Rt, {
                        icon: La,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: t.id
                        }
                    }),
                    v.jsx(Rt, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/transport",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...n,
            children: e.length > 0 ? e.map((s)=>v.jsx(hEe, {
                    transport: s
                }, s.id)) : v.jsx("div", {
                className: dn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-green-400",
                    "p-4",
                    "bg-green-200",
                    "font-bold"
                ]),
                children: v.jsx(ne, {
                    label: "There is nothing on the way to this building. (label)"
                })
            })
        });
    }, P8 = jt("/$locale/apps/derivean/map/$mapId/building/$buildingId/transport")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r } }) {
            return {
                transport: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "transport",
                        "list"
                    ],
                    queryFn: async ()=>e.transaction().execute(async (i)=>As({
                                select: i.selectFrom("Transport as t").innerJoin("Building as source", "source.id", "t.sourceId").innerJoin("Blueprint as bl", "bl.id", "source.blueprintId").innerJoin("Resource as r", "r.id", "t.resourceId").select([
                                    "t.id",
                                    "r.name as resource",
                                    "source.id as sourceId",
                                    "bl.name as source",
                                    "t.amount"
                                ]).where("t.targetId", "=", r).orderBy("r.name", "asc"),
                                output: G.object({
                                    id: G.string().min(1),
                                    resource: G.string().min(1),
                                    source: G.string().min(1),
                                    sourceId: G.string().min(1),
                                    amount: G.number()
                                })
                            }))
                })
            };
        },
        component () {
            const { building: t } = Wi({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { transport: e } = P8.useLoaderData();
            return v.jsx(pEe, {
                building: t,
                transport: e
            });
        }
    }), mEe = ({ supply: t })=>{
        const e = kr([
            [
                "GameMap"
            ]
        ]), n = an({
            async mutationFn ({ supplyId: r }) {
                return At.transaction().execute(async (i)=>i.deleteFrom("Supply").where("id", "=", r).execute());
            },
            async onSuccess () {
                await e();
            }
        });
        return v.jsxs("div", {
            className: dn([
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                "hover:border-slate-300",
                "hover:bg-slate-100"
            ]),
            children: [
                v.jsx("div", {
                    className: "flex flex-row gap-2 items-center",
                    children: t.name
                }),
                v.jsx(Dn, {
                    iconEnabled: Ri,
                    loading: n.isPending,
                    onClick: ()=>{
                        n.mutate({
                            supplyId: t.id
                        });
                    },
                    variant: {
                        variant: "danger"
                    }
                })
            ]
        });
    }, gEe = ({ building: t, supply: e, ...n })=>{
        const { mapId: r, locale: i } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsx(ua, {
            icon: jM,
            textTitle: v.jsx(ne, {
                label: "Supply of (label)"
            }),
            textSubTitle: v.jsxs(v.Fragment, {
                children: [
                    v.jsx(Rt, {
                        icon: La,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: t.id
                        }
                    }),
                    v.jsx(Rt, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/supply",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...n,
            children: e.length > 0 ? e.map((s)=>v.jsx(mEe, {
                    supply: s
                }, s.id)) : v.jsx("div", {
                className: dn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: v.jsx(ne, {
                    label: "This building does not supply anything. (label)"
                })
            })
        });
    }, k8 = jt("/$locale/apps/derivean/map/$mapId/building/$buildingId/supply")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r } }) {
            return {
                supply: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "supply",
                        "list"
                    ],
                    queryFn: async ()=>e.transaction().execute(async (i)=>As({
                                select: i.selectFrom("Supply as s").innerJoin("Resource as r", "r.id", "s.resourceId").select([
                                    "s.id",
                                    "r.name"
                                ]).where("s.buildingId", "=", r).orderBy("r.name", "asc"),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1)
                                })
                            }))
                })
            };
        },
        component () {
            const { building: t } = Wi({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { supply: e } = k8.useLoaderData();
            return v.jsx(gEe, {
                building: t,
                supply: e
            });
        }
    }), yEe = ({ building: t, link: e })=>{
        const { mapId: n, locale: r } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsx("div", {
            className: dn([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100"
            ]),
            children: v.jsxs("div", {
                className: "flex flex-row items-center justify-between",
                children: [
                    v.jsx(Rt, {
                        icon: Da,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: r,
                            mapId: n,
                            buildingId: e.id
                        },
                        search: {
                            zoomToId: e.id
                        },
                        children: e.name
                    }),
                    v.jsx(Rt, {
                        icon: Y2,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/link",
                        params: {
                            locale: r,
                            mapId: n,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: e.landId
                        },
                        children: e.land
                    })
                ]
            })
        });
    }, vEe = ({ building: t, link: e, ...n })=>{
        const { locale: r, mapId: i } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsx(ua, {
            icon: Da,
            textTitle: v.jsx(ne, {
                label: "Building links (label)"
            }),
            textSubTitle: v.jsxs(v.Fragment, {
                children: [
                    v.jsx(Rt, {
                        icon: La,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: r,
                            mapId: i,
                            buildingId: t.id
                        }
                    }),
                    v.jsx(Rt, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/link",
                        params: {
                            locale: r,
                            mapId: i,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...n,
            children: e.length > 0 ? e.map((s)=>v.jsx(yEe, {
                    building: t,
                    link: s
                }, s.id)) : v.jsx("div", {
                className: dn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: v.jsx(ne, {
                    label: "No linked buildings. (label)"
                })
            })
        });
    }, O8 = jt("/$locale/apps/derivean/map/$mapId/building/$buildingId/link")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r } }) {
            return {
                link: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "link"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>As({
                                select: i.selectFrom("Building_To_Building as btb").innerJoin("Building as b", "b.id", "btb.linkId").innerJoin("Land as l", "l.id", "b.landId").innerJoin("Region as r", "r.id", "l.regionId").innerJoin("Blueprint as bp", "bp.id", "b.blueprintId").select([
                                    "btb.id",
                                    "bp.name",
                                    "b.landId",
                                    "r.name as land"
                                ]).where("btb.buildingId", "=", r).orderBy("bp.name"),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    landId: G.string().min(1),
                                    land: G.string().min(1)
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = Wi({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { link: e } = O8.useLoaderData();
            return v.jsx(vEe, {
                link: e,
                building: t
            });
        }
    }), xEe = G.object({
        buildingId: G.string().min(1),
        resourceId: G.string().min(1),
        mapId: G.string().min(1),
        userId: G.string().min(1),
        amount: fd()
    }), bEe = ({ mapId: t, userId: e, inventory: n })=>{
        const r = kr([
            [
                "GameMap"
            ]
        ]), i = an({
            async mutationFn ({ buildingId: l, resourceId: c, supplyId: u, mapId: f, userId: p }) {
                return At.transaction().execute(async (g)=>u ? g.deleteFrom("Supply").where("id", "=", u).execute() : g.insertInto("Supply").values({
                        id: Kn(),
                        buildingId: l,
                        resourceId: c,
                        mapId: f,
                        userId: p
                    }).execute());
            },
            async onSuccess () {
                await r();
            }
        }), s = an({
            async mutationFn ({ buildingId: l, resourceId: c, demandId: u, mapId: f, userId: p, amount: g }) {
                return At.transaction().execute(async (x)=>{
                    if (u) return x.deleteFrom("Demand").where("id", "=", u).execute();
                    const { sum: S } = await x.selectFrom("Transport as t").select((b)=>b.fn.sum("t.amount").as("sum")).where("t.resourceId", "=", c).where("t.targetId", "=", l).executeTakeFirstOrThrow(), _ = g + (S || 0);
                    if (n.limit > 0 && _ <= 0) {
                        or.error(sa.text("Not enough space (inventory is full/all resources are already on the way) (toast)"));
                        return;
                    }
                    return x.insertInto("Demand").values({
                        id: Kn(),
                        buildingId: l,
                        resourceId: c,
                        mapId: f,
                        userId: p,
                        amount: n.limit > 0 ? _ : 1,
                        priority: 0,
                        type: "storage"
                    }).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        }), o = hs({
            resolver: ps(xEe),
            defaultValues: {
                mapId: t,
                userId: e,
                buildingId: n.buildingId,
                resourceId: n.resourceId,
                amount: n.limit > 0 ? n.limit - n.amount : 1
            }
        }), a = fs({
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting
        }).slots;
        return v.jsxs("div", {
            className: dn([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100",
                n.limit > 0 && n.amount >= n.limit ? [
                    "border-amber-400",
                    "bg-amber-50",
                    "hover:bg-amber-50",
                    "hover:border-amber-600"
                ] : void 0,
                n.supplyId || n.demandId ? [
                    "bg-purple-50",
                    "border-purple-400",
                    "hover:bg-purple-50",
                    "hover:border-purple-400"
                ] : void 0
            ]),
            children: [
                v.jsxs("div", {
                    className: "flex flex-row items-center justify-between",
                    children: [
                        v.jsxs("div", {
                            className: dn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                n.supplyId || n.demandId ? [
                                    "text-purple-600"
                                ] : void 0
                            ]),
                            children: [
                                v.jsx("div", {
                                    className: "font-bold",
                                    children: n.name
                                }),
                                n.supplyId ? v.jsx(vn, {
                                    icon: jM
                                }) : null,
                                n.demandId ? v.jsx(vn, {
                                    icon: $p
                                }) : null
                            ]
                        }),
                        Vn({
                            number: n.amount
                        }),
                        " /",
                        " ",
                        Vn({
                            number: n.limit
                        })
                    ]
                }),
                v.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between",
                    children: [
                        v.jsx(Dn, {
                            iconEnabled: n.supplyId ? Ri : jM,
                            loading: i.isPending,
                            onClick: ()=>{
                                i.mutate({
                                    mapId: t,
                                    userId: e,
                                    buildingId: n.buildingId,
                                    resourceId: n.resourceId,
                                    supplyId: n.supplyId
                                });
                            },
                            variant: {
                                variant: "subtle"
                            },
                            children: n.supplyId ? v.jsx(ne, {
                                label: "Cancel supply (label)"
                            }) : v.jsx(ne, {
                                label: "Supply resource (label)"
                            })
                        }),
                        v.jsx("div", {
                            className: dn([
                                "border-2",
                                "border-purple-400",
                                "rounded-md",
                                "w-[64px]",
                                "h-[64px]",
                                "bg-contain",
                                `bg-${n.resourceId}`
                            ])
                        }),
                        n.demandId ? v.jsx(Dn, {
                            iconEnabled: Ri,
                            loading: s.isPending,
                            onClick: ()=>{
                                s.mutate({
                                    mapId: t,
                                    userId: e,
                                    buildingId: n.buildingId,
                                    resourceId: n.resourceId,
                                    amount: 0,
                                    demandId: n.demandId
                                });
                            },
                            variant: {
                                variant: "subtle"
                            },
                            children: v.jsx(ne, {
                                label: "Cancel demand (label)"
                            })
                        }) : v.jsx(pm, {
                            textTitle: v.jsx(ne, {
                                label: "Demand resource (title)"
                            }),
                            target: v.jsx(Dn, {
                                iconEnabled: $p,
                                variant: {
                                    variant: "subtle"
                                },
                                children: v.jsx(ne, {
                                    label: "Demand resource (label)"
                                })
                            }),
                            css: {
                                modal: [
                                    "w-1/3"
                                ]
                            },
                            children: v.jsxs("form", {
                                className: a.base(),
                                onSubmit: to({
                                    form: o,
                                    mutation: s
                                }),
                                children: [
                                    v.jsx(rs, {
                                        variant: {
                                            highlight: !0
                                        },
                                        error: o.formState.errors.root
                                    }),
                                    v.jsx(yn, {
                                        formState: o.formState,
                                        name: "amount",
                                        label: v.jsx(ne, {
                                            label: "Demanded amount (label)"
                                        }),
                                        children: v.jsx("input", {
                                            type: "number",
                                            min: 1,
                                            max: n.limit - n.amount,
                                            className: a.input(),
                                            ...o.register("amount")
                                        })
                                    }),
                                    v.jsx(Dn, {
                                        iconEnabled: $p,
                                        iconDisabled: J2,
                                        type: "submit",
                                        children: v.jsx(ne, {
                                            label: "Submit demand (submit)"
                                        })
                                    })
                                ]
                            })
                        })
                    ]
                }),
                n.limit > 0 ? v.jsx(vT, {
                    variant: {
                        size: "md"
                    },
                    value: 100 * n.amount / n.limit,
                    css: {
                        progress: n.amount >= n.limit ? [
                            "bg-amber-500"
                        ] : void 0
                    }
                }) : null
            ]
        });
    }, wEe = ({ building: t, userId: e, inventory: n, fulltextProps: r, ...i })=>{
        const { locale: s, mapId: o } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsxs(ua, {
            icon: zf,
            textTitle: v.jsx(ne, {
                label: "Inventory (label)"
            }),
            textSubTitle: v.jsxs(v.Fragment, {
                children: [
                    v.jsx(Rt, {
                        icon: La,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: s,
                            mapId: o,
                            buildingId: t.id
                        }
                    }),
                    v.jsx(Rt, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/inventory",
                        params: {
                            locale: s,
                            mapId: o,
                            buildingId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...i,
            children: [
                v.jsx(q5, {
                    ...r
                }),
                v.jsx("div", {
                    children: v.jsx(ne, {
                        label: "Inventory - storage (label)",
                        css: {
                            base: [
                                "font-bold",
                                "text-slate-500"
                            ]
                        }
                    })
                }),
                n.length > 0 ? n.map((a)=>v.jsx(bEe, {
                        mapId: o,
                        userId: e,
                        inventory: a
                    }, a.id)) : v.jsx("div", {
                    className: dn([
                        "flex",
                        "items-center",
                        "justify-center",
                        "rounded-sm",
                        "border",
                        "border-amber-400",
                        "p-4",
                        "bg-amber-200",
                        "font-bold"
                    ]),
                    children: v.jsx(ne, {
                        label: "No inventory storage. (label)"
                    })
                })
            ]
        });
    }, D1 = jt("/$locale/apps/derivean/map/$mapId/building/$buildingId/inventory")({
        validateSearch: Vr(G.object({
            fulltext: G.string().optional()
        })),
        loaderDeps ({ search: { fulltext: t } }) {
            return {
                fulltext: t
            };
        },
        async loader ({ context: { queryClient: t, kysely: e, session: n }, deps: { fulltext: r }, params: { mapId: i, buildingId: s } }) {
            return {
                user: await n(),
                inventory: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        i,
                        "building",
                        s,
                        "inventory",
                        "storage",
                        {
                            fulltext: r
                        }
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (a)=>As({
                                select: a.selectFrom("Inventory as i").innerJoin("Building_Inventory as bi", (l)=>l.on("bi.buildingId", "=", s).onRef("bi.inventoryId", "=", "i.id")).innerJoin("Resource as r", "r.id", "i.resourceId").leftJoin("Supply as s", (l)=>l.onRef("s.resourceId", "=", "i.resourceId").on("s.buildingId", "=", s)).leftJoin("Demand as d", (l)=>l.onRef("d.resourceId", "=", "i.resourceId").on("d.buildingId", "=", s)).select([
                                    "i.id",
                                    "i.amount",
                                    "i.limit",
                                    "r.name",
                                    "bi.buildingId",
                                    "i.resourceId",
                                    "s.id as supplyId",
                                    "d.id as demandId"
                                ]).where("i.type", "in", [
                                    "storage"
                                ]).orderBy("r.name"),
                                query ({ select: l, where: c }) {
                                    let u = l;
                                    if (c?.fulltext) {
                                        const f = `%${c.fulltext}%`.toLowerCase();
                                        u = u.where((p)=>p.or([
                                                p("r.name", "like", f)
                                            ]));
                                    }
                                    return u;
                                },
                                output: G.object({
                                    id: G.string().min(1),
                                    buildingId: G.string().min(1),
                                    resourceId: G.string().min(1),
                                    amount: G.number().nonnegative(),
                                    limit: G.number().nonnegative(),
                                    name: G.string().min(1),
                                    supplyId: G.string().nullish(),
                                    demandId: G.string().nullish()
                                }),
                                filter: {
                                    fulltext: r
                                }
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = Wi({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { fulltext: e } = D1.useSearch(), n = D1.useNavigate(), { user: r, inventory: i } = D1.useLoaderData();
            return v.jsx(wEe, {
                building: t,
                userId: r.id,
                inventory: i,
                fulltextProps: {
                    value: e,
                    onFulltext (s) {
                        n({
                            search: {
                                fulltext: s
                            }
                        });
                    }
                }
            });
        }
    }), _Ee = ({ mapId: t, userId: e, demand: n })=>{
        const r = kr([
            [
                "GameMap"
            ]
        ]), i = an({
            async mutationFn ({ demandId: a }) {
                return At.transaction().execute(async (l)=>l.deleteFrom("Demand").where("id", "=", a).execute());
            },
            async onSuccess () {
                await r();
            }
        }), s = an({
            async mutationFn ({ demandId: a }) {
                return At.transaction().execute(async (l)=>{
                    const { priority: c } = await l.selectFrom("Demand as d").select((u)=>u.fn.max("d.priority").as("priority")).where("d.mapId", "=", t).where("d.userId", "=", e).where("d.id", "!=", a).executeTakeFirstOrThrow();
                    return l.updateTable("Demand").set({
                        priority: c + 1
                    }).where("id", "=", a).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        }), o = an({
            async mutationFn ({ demandId: a }) {
                return At.transaction().execute(async (l)=>{
                    const { priority: c } = await l.selectFrom("Demand as d").select((u)=>u.fn.min("d.priority").as("priority")).where("d.mapId", "=", t).where("d.userId", "=", e).where("d.id", "!=", a).executeTakeFirstOrThrow();
                    return l.updateTable("Demand").set({
                        priority: c - 1
                    }).where("id", "=", a).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        });
        return v.jsxs("div", {
            className: dn([
                "flex",
                "flex-col",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                n.transport ? [
                    "text-green-600",
                    "bg-green-50",
                    "border-green-400"
                ] : void 0
            ]),
            children: [
                v.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between w-full",
                    children: [
                        v.jsxs("div", {
                            className: "flex flex-row gap-2 items-center",
                            children: [
                                (n.transport || 0) > 0 ? v.jsx(vn, {
                                    icon: $p
                                }) : v.jsx(vn, {
                                    icon: J2
                                }),
                                v.jsx("div", {
                                    className: "font-bold",
                                    children: n.name
                                })
                            ]
                        }),
                        v.jsxs("div", {
                            className: "flex flex-row gap-2 items-center",
                            children: [
                                v.jsxs(Gs, {
                                    css: {
                                        base: n.transport ? [
                                            "bg-green-50",
                                            "border-green-400",
                                            "hover:bg-green-50",
                                            "hover:border-green-400"
                                        ] : void 0
                                    },
                                    children: [
                                        "x",
                                        Vn({
                                            number: n.amount
                                        })
                                    ]
                                }),
                                v.jsx(Dn, {
                                    iconEnabled: Ri,
                                    loading: i.isPending,
                                    onClick: ()=>{
                                        i.mutate({
                                            demandId: n.id
                                        });
                                    },
                                    variant: {
                                        variant: "danger"
                                    }
                                })
                            ]
                        })
                    ]
                }),
                v.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between w-full",
                    children: [
                        v.jsx(Dn, {
                            iconEnabled: $5,
                            variant: {
                                variant: "subtle"
                            },
                            loading: s.isPending || o.isPending,
                            onClick: ()=>{
                                s.mutate({
                                    demandId: n.id
                                });
                            },
                            children: v.jsx(ne, {
                                label: "Priority up (label)"
                            })
                        }),
                        v.jsx(Gs, {
                            css: {
                                base: [
                                    "bg-purple-50",
                                    "border-purple-400",
                                    "text-purple-600"
                                ]
                            },
                            children: n.priority
                        }),
                        v.jsx(Dn, {
                            iconEnabled: H5,
                            variant: {
                                variant: "subtle"
                            },
                            loading: s.isPending || o.isPending,
                            onClick: ()=>{
                                o.mutate({
                                    demandId: n.id
                                });
                            },
                            children: v.jsx(ne, {
                                label: "Priority down (label)"
                            })
                        })
                    ]
                })
            ]
        });
    }, SEe = ({ userId: t, building: e, demand: n, ...r })=>{
        const { mapId: i, locale: s } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsx(ua, {
            icon: $p,
            textTitle: v.jsx(ne, {
                label: "Demand (label)"
            }),
            textSubTitle: v.jsxs(v.Fragment, {
                children: [
                    v.jsx(Rt, {
                        icon: La,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: e.id
                        }
                    }),
                    v.jsx(Rt, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/demand",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: e.id
                        },
                        search: {
                            zoomToId: e.id
                        },
                        children: e.name
                    })
                ]
            }),
            ...r,
            children: n.length > 0 ? n.map((o)=>v.jsx(_Ee, {
                    mapId: i,
                    userId: t,
                    demand: o
                }, o.id)) : v.jsx("div", {
                className: dn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-green-400",
                    "p-4",
                    "bg-green-200",
                    "font-bold"
                ]),
                children: v.jsx(ne, {
                    label: "This building does not demand anything. (label)"
                })
            })
        });
    }, L8 = jt("/$locale/apps/derivean/map/$mapId/building/$buildingId/demand")({
        async loader ({ context: { queryClient: t, kysely: e, session: n }, params: { mapId: r, buildingId: i } }) {
            return {
                user: await n(),
                demand: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        r,
                        "building",
                        i,
                        "demand",
                        "list"
                    ],
                    queryFn: async ()=>e.transaction().execute(async (o)=>As({
                                select: o.selectFrom("Demand as d").innerJoin("Building_Inventory as bi", "bi.buildingId", "d.buildingId").innerJoin("Inventory as i", (a)=>a.onRef("i.id", "=", "bi.inventoryId").onRef("i.resourceId", "=", "d.resourceId")).innerJoin("Resource as r", "r.id", "d.resourceId").select([
                                    "d.id",
                                    "r.name",
                                    "d.amount",
                                    "i.limit",
                                    "d.priority",
                                    "i.amount as available",
                                    (a)=>a.selectFrom("Transport as t").select((l)=>l.fn.sum("t.amount").as("transport")).whereRef("t.targetId", "=", "d.buildingId").whereRef("t.resourceId", "=", "d.resourceId").as("transport")
                                ]).where("d.buildingId", "=", i).where("i.type", "=", "storage").where("d.type", "=", "storage").orderBy("r.name", "asc"),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    amount: G.number(),
                                    available: G.number(),
                                    priority: G.number(),
                                    limit: G.number(),
                                    transport: G.number().nullish()
                                })
                            }))
                })
            };
        },
        component () {
            const { building: t } = Wi({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { user: e, demand: n } = L8.useLoaderData();
            return v.jsx(SEe, {
                userId: e.id,
                building: t,
                demand: n
            });
        }
    }), D8 = ({ requirement: t })=>{
        const e = (t.available || 0) >= t.amount;
        return v.jsxs("div", {
            className: dn([
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                "hover:border-slate-300",
                "hover:bg-slate-100",
                t.passive ? [
                    "border-purple-300",
                    "hover:border-purple-500",
                    "hover:bg-purple-100"
                ] : void 0,
                t.available === void 0 || e ? void 0 : [
                    "border-red-500",
                    "bg-red-50",
                    "hover:bg-red-50",
                    "hover:border-red-600"
                ]
            ]),
            children: [
                v.jsx("div", {
                    className: "font-bold",
                    children: t.name
                }),
                t.available === void 0 ? v.jsxs(Gs, {
                    children: [
                        "x",
                        Vn({
                            number: t.amount
                        })
                    ]
                }) : v.jsxs(Gs, {
                    css: {
                        base: e ? [
                            "bg-green-200",
                            "border-green-500"
                        ] : [
                            "bg-red-200",
                            "border-red-500"
                        ]
                    },
                    children: [
                        v.jsx("div", {
                            className: "font-bold",
                            children: Vn({
                                number: t.available
                            })
                        }),
                        v.jsx("div", {
                            children: "/"
                        }),
                        v.jsx("div", {
                            className: "font-light",
                            children: Vn({
                                number: t.amount
                            })
                        })
                    ]
                })
            ]
        });
    }, EEe = ({ blueprint: t, requirement: e, ...n })=>v.jsxs(ua, {
            icon: Kr,
            textTitle: v.jsx(ne, {
                label: "Building requirements (label)"
            }),
            textSubTitle: t.name,
            ...n,
            children: [
                e.length > 0 ? e.map((r)=>v.jsx(D8, {
                        requirement: r
                    }, r.id)) : v.jsx("div", {
                    className: dn([
                        "flex",
                        "items-center",
                        "justify-center",
                        "rounded-sm",
                        "border",
                        "border-green-400",
                        "p-4",
                        "bg-green-200",
                        "font-bold"
                    ]),
                    children: v.jsx(ne, {
                        label: "There are no requirements. (label)"
                    })
                }),
                v.jsx("div", {
                    className: "border-b border-slate-300"
                }),
                v.jsx("div", {
                    className: dn([
                        "w-full",
                        "h-96",
                        "bg-contain",
                        "p-2",
                        `bg-${t.id}`
                    ])
                })
            ]
        }), F8 = jt("/$locale/apps/derivean/map/$mapId/blueprint/$blueprintId/requirements")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { blueprintId: n } }) {
            return {
                requirement: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        "blueprint",
                        n,
                        "requirements"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (r)=>As({
                                select: r.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select([
                                    "br.id",
                                    "r.name",
                                    "br.amount",
                                    "br.passive"
                                ]).where("br.blueprintId", "=", n),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    amount: G.number().nonnegative(),
                                    passive: hl()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { blueprint: t } = Wi({
                from: "/$locale/apps/derivean/map/$mapId/blueprint/$blueprintId"
            }), { requirement: e } = F8.useLoaderData();
            return v.jsx(EEe, {
                blueprint: t,
                requirement: e
            });
        }
    }), P4 = vi(), MEe = [
        P4({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceID", t.resourceId);
                }
            },
            size: 22
        }),
        P4({
            name: "amount",
            header () {
                return v.jsx(ne, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 10
        })
    ], TEe = ({ table: t, ...e })=>v.jsx(gi, {
            table: yi({
                ...t,
                columns: MEe
            }),
            ...e
        }), F1 = jt("/$locale/apps/derivean/game/blueprint/production/$id/resources")({
        validateSearch: Vr(mi(Iw)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Resource",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                "bpr.id",
                                "r.name",
                                "bpr.resourceId",
                                "bpr.amount"
                            ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bpr.id", "=", a.id)), a?.idIn && (l = l.where("bpr.id", "in", a.idIn)), a?.resourceId && (l = l.where("bpr.resourceId", "=", a.resourceId)), l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                resourceId: G.string().min(1),
                                amount: G.number().nonnegative()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = F1.useLoaderData(), { filter: n, cursor: r } = F1.useSearch(), i = F1.useNavigate();
            return v.jsx(v.Fragment, {
                children: v.jsx(TEe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of production resource requirements (label)"
                        }),
                        ...fi(i)
                    }
                })
            });
        }
    }), VN = vi(), CEe = [
        VN({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceID", t.resourceId);
                }
            },
            size: 12
        }),
        VN({
            name: "amount",
            header () {
                return v.jsx(ne, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return Vn({
                    number: t
                });
            },
            size: 10
        }),
        VN({
            name: "passive",
            header () {
                return v.jsx(ne, {
                    label: "Passive requirement (label)"
                });
            },
            render ({ value: t }) {
                return v.jsx(pT, {
                    value: t
                });
            },
            size: 10
        })
    ], IEe = ({ table: t, ...e })=>v.jsx(gi, {
            table: yi({
                ...t,
                columns: CEe
            }),
            ...e
        }), j1 = jt("/$locale/apps/derivean/game/blueprint/production/$id/requirements")({
        validateSearch: Vr(mi(Cw)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Requirement",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                "bpr.id",
                                "r.name",
                                "bpr.resourceId",
                                "bpr.amount",
                                "bpr.passive"
                            ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bpr.id", "=", a.id)), a?.idIn && (l = l.where("bpr.id", "in", a.idIn)), a?.resourceId && (l = l.where("bpr.resourceId", "=", a.resourceId)), l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                resourceId: G.string().min(1),
                                amount: G.number().nonnegative(),
                                passive: hl()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = j1.useLoaderData(), { filter: n, cursor: r } = j1.useSearch(), i = j1.useNavigate();
            return v.jsx(v.Fragment, {
                children: v.jsx(IEe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of production requirements (label)"
                        }),
                        ...fi(i)
                    }
                })
            });
        }
    }), REe = vi(), AEe = [
        REe({
            name: "name",
            header () {
                return v.jsx(ne, {
                    label: "Required building (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = tn({
                    from: "/$locale"
                });
                return v.jsx(Rt, {
                    icon: ar,
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: t.blueprintId
                    },
                    children: e
                });
            },
            size: 22
        })
    ], NEe = ({ table: t, ...e })=>v.jsx(gi, {
            table: yi({
                ...t,
                columns: AEe
            }),
            ...e
        }), B1 = jt("/$locale/apps/derivean/game/blueprint/production/$id/dependencies")({
        validateSearch: Vr(mi(Tw)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Dependency",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Dr({
                            select: s.selectFrom("Blueprint_Production_Dependency as bpd").innerJoin("Blueprint as bl", "bl.id", "bpd.blueprintId").select([
                                "bpd.id",
                                "bl.name",
                                "bpd.blueprintId"
                            ]).where("bpd.blueprintProductionId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bpd.id", "=", a.id)), a?.idIn && (l = l.where("bpd.id", "in", a.idIn)), l;
                            },
                            output: G.object({
                                id: G.string().min(1),
                                name: G.string().min(1),
                                blueprintId: G.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = B1.useLoaderData(), { filter: n, cursor: r } = B1.useSearch(), i = B1.useNavigate(), { tva: s } = Lr({
                from: "__root__"
            }), o = s().slots;
            return v.jsx("div", {
                className: o.base(),
                children: v.jsx(NEe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: hi(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: pi(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: v.jsx(ne, {
                            label: "Number of dependencies (label)"
                        }),
                        ...fi(i)
                    }
                })
            });
        }
    }), PEe = ({ queue: t, inventory: e })=>{
        const n = e.find((i)=>i.resourceId === t.resourceId), r = n && n.amount + t.amount > n.limit;
        return v.jsxs("div", {
            className: dn([
                "flex",
                "flex-col",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                "hover:border-slate-300",
                r ? [
                    "border-red-400",
                    "hover:border-red-600"
                ] : void 0
            ]),
            children: [
                v.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between w-full",
                    children: [
                        v.jsx("div", {
                            className: "font-bold",
                            children: t.name
                        }),
                        v.jsx("div", {
                            className: "flex flex-row gap-2 items-center",
                            children: v.jsxs(Gs, {
                                children: [
                                    "x",
                                    Vn({
                                        number: t.amount
                                    })
                                ]
                            })
                        }),
                        v.jsx(Z2, {
                            cycles: t.cycles
                        })
                    ]
                }),
                v.jsx(vT, {
                    css: {
                        progress: r ? [
                            "bg-red-500"
                        ] : void 0
                    },
                    value: 100 * t.cycle / t.cycles
                })
            ]
        });
    }, kEe = ({ building: t, queue: e, inventory: n, ...r })=>{
        const { mapId: i, locale: s } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsx(ua, {
            icon: Ik,
            textTitle: v.jsx(ne, {
                label: "Production queue (label)"
            }),
            textSubTitle: v.jsxs(v.Fragment, {
                children: [
                    v.jsx(Rt, {
                        icon: La,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: t.id
                        }
                    }),
                    v.jsx(Rt, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...r,
            children: e.length > 0 ? e.map((o)=>v.jsx(PEe, {
                    queue: o,
                    inventory: n
                }, o.id)) : v.jsxs("div", {
                className: dn([
                    "flex",
                    "flex-col",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: [
                    v.jsx(ne, {
                        label: "Production queue is empty. (label)"
                    }),
                    v.jsx(Rt, {
                        icon: Ik,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: t.id
                        },
                        children: v.jsx(ne, {
                            label: "Plan queue (label)"
                        })
                    })
                ]
            })
        });
    }, j8 = jt("/$locale/apps/derivean/map/$mapId/building/$buildingId/production/queue")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r } }) {
            return {
                queue: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "production",
                        "queue"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>As({
                                select: i.selectFrom("Production as p").innerJoin("Blueprint_Production as bp", "bp.id", "p.blueprintProductionId").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                    "p.id",
                                    "r.name",
                                    "bp.resourceId",
                                    "p.cycle",
                                    "bp.amount",
                                    "bp.cycles"
                                ]).where("p.buildingId", "=", r),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    resourceId: G.string().min(1),
                                    amount: G.number().nonnegative(),
                                    cycle: G.number().int().nonnegative(),
                                    cycles: G.number().int().nonnegative()
                                })
                            }));
                    }
                }),
                inventory: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "inventory",
                        "list"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>As({
                                select: i.selectFrom("Inventory as i").innerJoin("Resource as r", "r.id", "i.resourceId").select([
                                    "i.id",
                                    "i.resourceId",
                                    "i.amount",
                                    "i.limit",
                                    "r.name"
                                ]).where("i.id", "in", i.selectFrom("Building_Inventory as bi").select("bi.inventoryId").where("bi.buildingId", "=", r)).orderBy("r.name"),
                                query ({ select: s, where: o }) {
                                    let a = s;
                                    if (o?.fulltext) {
                                        const l = `%${o.fulltext}%`.toLowerCase();
                                        a = a.where((c)=>c.or([
                                                c("r.name", "like", l)
                                            ]));
                                    }
                                    return a;
                                },
                                output: G.object({
                                    id: G.string().min(1),
                                    resourceId: G.string().min(1),
                                    amount: G.number().nonnegative(),
                                    limit: G.number().nonnegative(),
                                    name: G.string().min(1)
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = Wi({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { queue: e, inventory: n } = j8.useLoaderData();
            return v.jsx(kEe, {
                building: t,
                queue: e,
                inventory: n
            });
        }
    }), k4 = "icon-[tabler--basket]", OEe = "icon-[oui--refresh]", LEe = ({ building: t, production: e })=>{
        const { mapId: n, locale: r } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        }), i = kr([
            [
                "GameMap"
            ]
        ]), s = an({
            async mutationFn ({ blueprintProductionId: c, buildingId: u }) {
                return At.transaction().execute(async (f)=>f.updateTable("Building").set({
                        productionId: c
                    }).where("id", "=", u).execute());
            },
            async onSuccess () {
                await i();
            }
        }), o = an({
            async mutationFn ({ buildingId: c }) {
                return At.transaction().execute(async (u)=>u.updateTable("Building").set({
                        productionId: null
                    }).where("id", "=", c).execute());
            },
            async onSuccess () {
                await i();
            }
        }), a = an({
            async mutationFn ({ blueprintProductionId: c, buildingId: u }) {
                return At.transaction().execute(async (f)=>f.updateTable("Building").set({
                        recurringProductionId: c
                    }).where("id", "=", u).execute());
            },
            async onSuccess () {
                await i();
            }
        }), l = an({
            async mutationFn ({ buildingId: c }) {
                return At.transaction().execute(async (u)=>u.updateTable("Building").set({
                        recurringProductionId: null
                    }).where("id", "=", c).execute());
            },
            async onSuccess () {
                await i();
            }
        });
        return v.jsxs("div", {
            className: dn([
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                e.withAvailableResources ? [
                    "bg-green-50",
                    "border-green-500"
                ] : [
                    "bg-red-50",
                    "border-red-500"
                ]
            ]),
            children: [
                v.jsxs("div", {
                    className: "flex flex-row gap-2 items-center",
                    children: [
                        t.productionId === e.id ? v.jsx(Dn, {
                            iconEnabled: k4,
                            loading: o.isPending,
                            onClick: ()=>{
                                o.mutate({
                                    buildingId: t.id
                                });
                            }
                        }) : v.jsx(Dn, {
                            iconEnabled: "icon-[solar--play-outline]",
                            loading: s.isPending,
                            onClick: ()=>{
                                s.mutate({
                                    blueprintProductionId: e.id,
                                    buildingId: t.id
                                });
                            }
                        }),
                        t.recurringProductionId === e.id ? v.jsx(Dn, {
                            iconEnabled: k4,
                            loading: l.isPending,
                            onClick: ()=>{
                                l.mutate({
                                    buildingId: t.id
                                });
                            }
                        }) : v.jsx(Dn, {
                            iconEnabled: OEe,
                            loading: a.isPending,
                            onClick: ()=>{
                                a.mutate({
                                    blueprintProductionId: e.id,
                                    buildingId: t.id
                                });
                            }
                        }),
                        v.jsxs(Rt, {
                            to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/$productionId/requirements",
                            params: {
                                locale: r,
                                mapId: n,
                                buildingId: t.id,
                                productionId: e.id
                            },
                            children: [
                                e.name,
                                v.jsxs(Gs, {
                                    children: [
                                        "x",
                                        Vn({
                                            number: e.amount
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                }),
                v.jsx(Z2, {
                    cycles: e.cycles
                })
            ]
        });
    }, DEe = ({ building: t, production: e, ...n })=>{
        const { mapId: r, locale: i } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsx(ua, {
            icon: ul,
            textTitle: v.jsx(ne, {
                label: "Building production (label)"
            }),
            textSubTitle: v.jsxs(v.Fragment, {
                children: [
                    v.jsx(Rt, {
                        icon: La,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: t.id
                        }
                    }),
                    v.jsx(Rt, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...n,
            children: e.length > 0 ? e.map((s)=>v.jsx(LEe, {
                    building: t,
                    production: s
                }, s.id)) : v.jsx("div", {
                className: dn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: v.jsx(ne, {
                    label: "This building does not produce anything. (label)"
                })
            })
        });
    }, B8 = jt("/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list")({
        async loader ({ context: { queryClient: t, kysely: e, session: n }, params: { mapId: r, buildingId: i } }) {
            const s = await n();
            return {
                production: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        r,
                        "building",
                        i,
                        "production",
                        "list"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (o)=>As({
                                select: o.selectFrom("Blueprint_Production as bp").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                    "bp.id",
                                    "r.name",
                                    "bp.amount",
                                    "bp.cycles",
                                    (a)=>a.case().when(a.not(a.exists(a.selectFrom("Blueprint_Production_Requirement as bpr").select(a.lit(1).as("one")).whereRef("bpr.blueprintProductionId", "=", "bp.id").where((l)=>l.not(l.exists(l.selectFrom("Inventory as i").select(l.lit(1).as("one")).where("i.id", "in", l.selectFrom("Building_Inventory").select("inventoryId").where("buildingId", "=", i)).where("i.type", "in", [
                                                "storage"
                                            ]).whereRef("i.resourceId", "=", "bpr.resourceId").whereRef("i.amount", ">=", "bpr.amount"))))))).then(a.lit(!0)).else(a.lit(!1)).end().as("withAvailableResources")
                                ]).where("bp.blueprintId", "=", o.selectFrom("Building as b").select("b.blueprintId").where("b.id", "=", i)).where((a)=>a.not(a.exists(a.selectFrom("Blueprint_Production_Dependency as bpd").select("bpd.blueprintProductionId").whereRef("bpd.blueprintProductionId", "=", "bp.id").where((l)=>l.not(l.exists(l.selectFrom("Building as b").select("b.blueprintId").where("b.userId", "=", s.id).where("b.constructionId", "is", null).whereRef("b.blueprintId", "=", "bpd.blueprintId"))))))).where((a)=>a.not(a.exists(a.selectFrom("Blueprint_Production_Resource as bpr").select("bpr.blueprintProductionId").whereRef("bpr.blueprintProductionId", "=", "bp.id").where((l)=>l.not(l.exists(l.selectFrom("Inventory as i").select("i.resourceId").where("i.id", "in", l.selectFrom("Building_Inventory").select("inventoryId").where("buildingId", "=", i)).whereRef("i.resourceId", "=", "bpr.resourceId").whereRef("i.amount", ">=", "bpr.amount"))))))).orderBy("r.name"),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    amount: G.number().nonnegative(),
                                    cycles: G.number().int().nonnegative(),
                                    withAvailableResources: hl()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = Wi({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { production: e } = B8.useLoaderData();
            return v.jsx(DEe, {
                building: t,
                production: e
            });
        }
    }), FEe = jt("/$locale/apps/derivean/map/$mapId/building/$buildingId/production/$productionId")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r, productionId: i } }) {
            return {
                production: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "production",
                        i,
                        "fetch"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (s)=>lc({
                                select: s.selectFrom("Blueprint_Production as bp").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                    "bp.id",
                                    "bp.amount",
                                    "r.name"
                                ]).where("bp.id", "=", i),
                                output: G.object({
                                    id: G.string().min(1),
                                    amount: G.number().nonnegative(),
                                    name: G.string().min(1)
                                })
                            }));
                    }
                })
            };
        }
    }), jEe = ({ building: t, production: e, requirement: n, ...r })=>{
        const { mapId: i, locale: s } = tn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return v.jsx(ua, {
            icon: Kr,
            textTitle: v.jsx(ne, {
                label: "Production requirements (label)"
            }),
            textSubTitle: v.jsxs(v.Fragment, {
                children: [
                    v.jsx(Rt, {
                        icon: La,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: t.id
                        }
                    }),
                    v.jsx(Rt, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    }),
                    v.jsx("div", {
                        children: e.name
                    })
                ]
            }),
            ...r,
            children: n.length > 0 ? n.map((o)=>v.jsx(D8, {
                    requirement: o
                }, o.id)) : v.jsx("div", {
                className: dn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-green-400",
                    "p-4",
                    "bg-green-200",
                    "font-bold"
                ]),
                children: v.jsx(ne, {
                    label: "There are no requirements. (label)"
                })
            })
        });
    }, U8 = jt("/$locale/apps/derivean/map/$mapId/building/$buildingId/production/$productionId/requirements")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r, productionId: i } }) {
            return {
                requirement: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "production",
                        i,
                        "requirement",
                        "list"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (s)=>As({
                                select: s.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                    "bpr.id",
                                    "r.name",
                                    "bpr.amount",
                                    "bpr.passive",
                                    (o)=>o.selectFrom("Inventory as i").select([
                                            "i.amount"
                                        ]).where("i.id", "in", s.selectFrom("Building_Inventory as bi").select("bi.inventoryId").where("bi.buildingId", "=", r)).whereRef("i.resourceId", "=", "bpr.resourceId").where("i.type", "=", "storage").orderBy("i.amount", "desc").limit(1).as("available")
                                ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                                output: G.object({
                                    id: G.string().min(1),
                                    name: G.string().min(1),
                                    amount: G.number().nonnegative(),
                                    available: G.number().nonnegative().nullish(),
                                    passive: hl()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = Wi({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { production: e } = Wi({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/$productionId"
            }), { requirement: n } = U8.useLoaderData();
            return v.jsx(jEe, {
                building: t,
                production: e,
                requirement: n
            });
        }
    }), Q2 = Qse.update({
        id: "/$locale",
        path: "/$locale",
        getParentRoute: ()=>PO
    }), BEe = noe.update({
        id: "/",
        path: "/",
        getParentRoute: ()=>PO
    }), UEe = roe.update({
        id: "/",
        path: "/",
        getParentRoute: ()=>Q2
    }), ch = soe.update({
        id: "/apps/derivean",
        path: "/apps/derivean",
        getParentRoute: ()=>Q2
    }), Ua = loe.update({
        id: "/root",
        path: "/root",
        getParentRoute: ()=>ch
    }), z8 = coe.update({
        id: "/map",
        path: "/map",
        getParentRoute: ()=>ch
    }), Rw = uoe.update({
        id: "/game",
        path: "/game",
        getParentRoute: ()=>ch
    }), zEe = moe.update({
        id: "/",
        path: "/",
        getParentRoute: ()=>Ua
    }), VEe = $q.update({
        id: "/",
        path: "/",
        getParentRoute: ()=>Rw
    }), WEe = sk.update({
        id: "/editor",
        path: "/editor",
        getParentRoute: ()=>Ua
    }), qEe = $pe.update({
        id: "/public/register",
        path: "/public/register",
        getParentRoute: ()=>ch
    }), HEe = Gpe.update({
        id: "/public/logout",
        path: "/public/logout",
        getParentRoute: ()=>ch
    }), $Ee = Zpe.update({
        id: "/public/login",
        path: "/public/login",
        getParentRoute: ()=>ch
    }), uh = c8.update({
        id: "/$mapId",
        path: "/$mapId",
        getParentRoute: ()=>z8
    }), GEe = u8.update({
        id: "/db/schema",
        path: "/db/schema",
        getParentRoute: ()=>ch
    }), XEe = M1.update({
        id: "/user/list",
        path: "/user/list",
        getParentRoute: ()=>Ua
    }), eL = d8.update({
        id: "/user/$id",
        path: "/user/$id",
        getParentRoute: ()=>Ua
    }), KEe = T1.update({
        id: "/tag/list",
        path: "/tag/list",
        getParentRoute: ()=>Ua
    }), YEe = C1.update({
        id: "/resource/list",
        path: "/resource/list",
        getParentRoute: ()=>Ua
    }), V8 = m8.update({
        id: "/resource/$id",
        path: "/resource/$id",
        getParentRoute: ()=>Ua
    }), ZEe = I1.update({
        id: "/region/list",
        path: "/region/list",
        getParentRoute: ()=>Ua
    }), W8 = WSe.update({
        id: "/region/$id",
        path: "/region/$id",
        getParentRoute: ()=>Ua
    }), JEe = R1.update({
        id: "/blueprint/list",
        path: "/blueprint/list",
        getParentRoute: ()=>Ua
    }), dh = b8.update({
        id: "/blueprint/$id",
        path: "/blueprint/$id",
        getParentRoute: ()=>Ua
    }), QEe = YSe.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>uh
    }), eMe = A1.update({
        id: "/blueprint/list",
        path: "/blueprint/list",
        getParentRoute: ()=>Rw
    }), _v = w8.update({
        id: "/blueprint/$id",
        path: "/blueprint/$id",
        getParentRoute: ()=>Rw
    }), tMe = t1e.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>eL
    }), nMe = n1e.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>V8
    }), rMe = r1e.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>W8
    }), yC = _8.update({
        id: "/blueprint/production/$id",
        path: "/blueprint/production/$id",
        getParentRoute: ()=>Ua
    }), iMe = S8.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>dh
    }), sMe = e0.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>dh
    }), oMe = t0.update({
        id: "/production",
        path: "/production",
        getParentRoute: ()=>dh
    }), aMe = n0.update({
        id: "/inventory",
        path: "/inventory",
        getParentRoute: ()=>dh
    }), lMe = E8.update({
        id: "/edit",
        path: "/edit",
        getParentRoute: ()=>dh
    }), cMe = r0.update({
        id: "/dependencies",
        path: "/dependencies",
        getParentRoute: ()=>dh
    }), uMe = i0.update({
        id: "/conflicts",
        path: "/conflicts",
        getParentRoute: ()=>dh
    }), dMe = M8.update({
        id: "/land/list",
        path: "/land/list",
        getParentRoute: ()=>uh
    }), q8 = R1e.update({
        id: "/land/$landId",
        path: "/land/$landId",
        getParentRoute: ()=>uh
    }), fMe = T8.update({
        id: "/building/list",
        path: "/building/list",
        getParentRoute: ()=>uh
    }), eu = P1e.update({
        id: "/building/$buildingId",
        path: "/building/$buildingId",
        getParentRoute: ()=>uh
    }), H8 = k1e.update({
        id: "/blueprint/$blueprintId",
        path: "/blueprint/$blueprintId",
        getParentRoute: ()=>uh
    }), vC = C8.update({
        id: "/blueprint/production/$id",
        path: "/blueprint/production/$id",
        getParentRoute: ()=>Rw
    }), hMe = F1e.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>_v
    }), pMe = N1.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>_v
    }), mMe = P1.update({
        id: "/production",
        path: "/production",
        getParentRoute: ()=>_v
    }), gMe = k1.update({
        id: "/dependencies",
        path: "/dependencies",
        getParentRoute: ()=>_v
    }), yMe = O1.update({
        id: "/conflicts",
        path: "/conflicts",
        getParentRoute: ()=>_v
    }), vMe = L1.update({
        id: "/building/list",
        path: "/building/list",
        getParentRoute: ()=>eL
    }), xMe = s0.update({
        id: "/resources",
        path: "/resources",
        getParentRoute: ()=>yC
    }), bMe = o0.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>yC
    }), wMe = a0.update({
        id: "/dependencies",
        path: "/dependencies",
        getParentRoute: ()=>yC
    }), _Me = sEe.update({
        id: "/road/$roadId/view",
        path: "/road/$roadId/view",
        getParentRoute: ()=>uh
    }), SMe = R8.update({
        id: "/construction",
        path: "/construction",
        getParentRoute: ()=>q8
    }), EMe = N8.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>eu
    }), MMe = P8.update({
        id: "/transport",
        path: "/transport",
        getParentRoute: ()=>eu
    }), TMe = k8.update({
        id: "/supply",
        path: "/supply",
        getParentRoute: ()=>eu
    }), CMe = O8.update({
        id: "/link",
        path: "/link",
        getParentRoute: ()=>eu
    }), IMe = D1.update({
        id: "/inventory",
        path: "/inventory",
        getParentRoute: ()=>eu
    }), RMe = L8.update({
        id: "/demand",
        path: "/demand",
        getParentRoute: ()=>eu
    }), AMe = F8.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>H8
    }), NMe = F1.update({
        id: "/resources",
        path: "/resources",
        getParentRoute: ()=>vC
    }), PMe = j1.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>vC
    }), kMe = B1.update({
        id: "/dependencies",
        path: "/dependencies",
        getParentRoute: ()=>vC
    }), OMe = j8.update({
        id: "/production/queue",
        path: "/production/queue",
        getParentRoute: ()=>eu
    }), LMe = B8.update({
        id: "/production/list",
        path: "/production/list",
        getParentRoute: ()=>eu
    }), $8 = FEe.update({
        id: "/production/$productionId",
        path: "/production/$productionId",
        getParentRoute: ()=>eu
    }), DMe = U8.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>$8
    }), FMe = {
        LocaleAppsDeriveanGameBlueprintIdConflictsRoute: yMe,
        LocaleAppsDeriveanGameBlueprintIdDependenciesRoute: gMe,
        LocaleAppsDeriveanGameBlueprintIdProductionRoute: mMe,
        LocaleAppsDeriveanGameBlueprintIdRequirementsRoute: pMe,
        LocaleAppsDeriveanGameBlueprintIdViewRoute: hMe
    }, jMe = _v._addFileChildren(FMe), BMe = {
        LocaleAppsDeriveanGameBlueprintProductionIdDependenciesRoute: kMe,
        LocaleAppsDeriveanGameBlueprintProductionIdRequirementsRoute: PMe,
        LocaleAppsDeriveanGameBlueprintProductionIdResourcesRoute: NMe
    }, UMe = vC._addFileChildren(BMe), zMe = {
        LocaleAppsDeriveanGameIndexRoute: VEe,
        LocaleAppsDeriveanGameBlueprintIdRoute: jMe,
        LocaleAppsDeriveanGameBlueprintListRoute: eMe,
        LocaleAppsDeriveanGameBlueprintProductionIdRoute: UMe
    }, VMe = Rw._addFileChildren(zMe), WMe = {
        LocaleAppsDeriveanMapMapIdBlueprintBlueprintIdRequirementsRoute: AMe
    }, qMe = H8._addFileChildren(WMe), HMe = {
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdProductionProductionIdRequirementsRoute: DMe
    }, $Me = $8._addFileChildren(HMe), GMe = {
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdDemandRoute: RMe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdInventoryRoute: IMe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdLinkRoute: CMe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdSupplyRoute: TMe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdTransportRoute: MMe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdViewRoute: EMe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdProductionProductionIdRoute: $Me,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdProductionListRoute: LMe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdProductionQueueRoute: OMe
    }, XMe = eu._addFileChildren(GMe), KMe = {
        LocaleAppsDeriveanMapMapIdLandLandIdConstructionRoute: SMe
    }, YMe = q8._addFileChildren(KMe), ZMe = {
        LocaleAppsDeriveanMapMapIdViewRoute: QEe,
        LocaleAppsDeriveanMapMapIdBlueprintBlueprintIdRoute: qMe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdRoute: XMe,
        LocaleAppsDeriveanMapMapIdBuildingListRoute: fMe,
        LocaleAppsDeriveanMapMapIdLandLandIdRoute: YMe,
        LocaleAppsDeriveanMapMapIdLandListRoute: dMe,
        LocaleAppsDeriveanMapMapIdRoadRoadIdViewRoute: _Me
    }, JMe = uh._addFileChildren(ZMe), QMe = {
        LocaleAppsDeriveanMapMapIdRoute: JMe
    }, eTe = z8._addFileChildren(QMe), tTe = {
        LocaleAppsDeriveanRootBlueprintIdConflictsRoute: uMe,
        LocaleAppsDeriveanRootBlueprintIdDependenciesRoute: cMe,
        LocaleAppsDeriveanRootBlueprintIdEditRoute: lMe,
        LocaleAppsDeriveanRootBlueprintIdInventoryRoute: aMe,
        LocaleAppsDeriveanRootBlueprintIdProductionRoute: oMe,
        LocaleAppsDeriveanRootBlueprintIdRequirementsRoute: sMe,
        LocaleAppsDeriveanRootBlueprintIdViewRoute: iMe
    }, nTe = dh._addFileChildren(tTe), rTe = {
        LocaleAppsDeriveanRootRegionIdViewRoute: rMe
    }, iTe = W8._addFileChildren(rTe), sTe = {
        LocaleAppsDeriveanRootResourceIdViewRoute: nMe
    }, oTe = V8._addFileChildren(sTe), aTe = {
        LocaleAppsDeriveanRootUserIdViewRoute: tMe,
        LocaleAppsDeriveanRootUserIdBuildingListRoute: vMe
    }, lTe = eL._addFileChildren(aTe), cTe = {
        LocaleAppsDeriveanRootBlueprintProductionIdDependenciesRoute: wMe,
        LocaleAppsDeriveanRootBlueprintProductionIdRequirementsRoute: bMe,
        LocaleAppsDeriveanRootBlueprintProductionIdResourcesRoute: xMe
    }, uTe = yC._addFileChildren(cTe), dTe = {
        LocaleAppsDeriveanRootEditorRoute: WEe,
        LocaleAppsDeriveanRootIndexRoute: zEe,
        LocaleAppsDeriveanRootBlueprintIdRoute: nTe,
        LocaleAppsDeriveanRootBlueprintListRoute: JEe,
        LocaleAppsDeriveanRootRegionIdRoute: iTe,
        LocaleAppsDeriveanRootRegionListRoute: ZEe,
        LocaleAppsDeriveanRootResourceIdRoute: oTe,
        LocaleAppsDeriveanRootResourceListRoute: YEe,
        LocaleAppsDeriveanRootTagListRoute: KEe,
        LocaleAppsDeriveanRootUserIdRoute: lTe,
        LocaleAppsDeriveanRootUserListRoute: XEe,
        LocaleAppsDeriveanRootBlueprintProductionIdRoute: uTe
    }, fTe = Ua._addFileChildren(dTe), hTe = {
        LocaleAppsDeriveanGameRoute: VMe,
        LocaleAppsDeriveanMapRoute: eTe,
        LocaleAppsDeriveanRootRoute: fTe,
        LocaleAppsDeriveanDbSchemaRoute: GEe,
        LocaleAppsDeriveanPublicLoginRoute: $Ee,
        LocaleAppsDeriveanPublicLogoutRoute: HEe,
        LocaleAppsDeriveanPublicRegisterRoute: qEe
    }, pTe = ch._addFileChildren(hTe), mTe = {
        LocaleIndexRoute: UEe,
        LocaleAppsDeriveanRoute: pTe
    }, gTe = Q2._addFileChildren(mTe), yTe = {
        IndexRoute: BEe,
        LocaleRoute: gTe
    }, vTe = PO._addFileChildren(yTe)._addFileTypes(), G8 = new j9({
        defaultOptions: {
            queries: {
                placeholderData: M9
            }
        }
    }), xTe = lX({
        routeTree: vTe,
        context: {
            queryClient: G8,
            tva: Ure,
            async session () {
                return tw.parse(null);
            },
            kysely: At
        },
        scrollRestoration: !0,
        defaultPendingComponent: Nse,
        defaultPreload: "intent",
        defaultPreloadStaleTime: 0,
        defaultPendingMinMs: 200
    }), O4 = document.getElementById("app");
    jY({
        limit: {
            maxRequests: 10,
            perMilliseconds: 100
        }
    });
    O4.innerHTML || Jse.createRoot(O4).render(v.jsx(X.StrictMode, {
        children: v.jsx(q9, {
            client: G8,
            children: v.jsx(hX, {
                router: xTe
            })
        })
    }));
})();
