"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[975],{4726:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>a,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>r});var t=s(5893),o=s(1151);const c={title:"Basic Schema"},a=void 0,i={id:"how-to/schema/basic-schema",title:"Basic Schema",description:"All the stuff in the @use-pico is built on top of schemas, so you'll get validation and types in one go.",source:"@site/docs/how-to/schema/basic-schema.md",sourceDirName:"how-to/schema",slug:"/how-to/schema/basic-schema",permalink:"/pico/docs/how-to/schema/basic-schema",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Basic Schema"},sidebar:"docs",previous:{title:"Schema Usage",permalink:"/pico/docs/category/schema-usage"},next:{title:"Dull Schema",permalink:"/pico/docs/how-to/schema/dull-schema"}},h={},r=[{value:"Usage",id:"usage",level:2},{value:"Define schema",id:"define-schema",level:3},{value:"Use schema",id:"use-schema",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{title:"Installation",type:"tip",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ npm install @use-pico/schema\n"})})}),"\n",(0,t.jsxs)(n.p,{children:["All the stuff in the ",(0,t.jsx)(n.strong,{children:"@use-pico"})," is built on top of schemas, so you'll get ",(0,t.jsx)(n.em,{children:"validation"})," and ",(0,t.jsx)(n.em,{children:"types"})," in one go."]}),"\n",(0,t.jsxs)(n.p,{children:["Read the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/docs/concepts/schema/back-story",children:"back-story"})}),", why there is another schema library."]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Here is the concept, how to create and organize schema, so you can use it in the ",(0,t.jsx)(n.strong,{children:"most simple way"}),"."]})}),"\n",(0,t.jsx)(n.h3,{id:"define-schema",children:"Define schema"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="./src/schema/CoolSchema.ts"',children:'import {\n    type PicoSchema,\n    schema\n} from "@use-pico/schema";\n\n/**\n * This is the simple part as you may know it:\n * define schema using "schema" function, then use "object" factory\n * to define the shape of you object. Or whatever else `z.` offers.\n */\nconst CoolSchema = schema(z => z.object({\n    /**\n     * See what `z.` offers.\n     */\n    myPropery:        z.string,\n    optionalProperty: z.string$,\n}));\n/**\n * This is a little hack TypeScript gives us: use the same name\n * for Schema itself and for it\'s type.\n *\n * With this, you can export only one name.\n */\nexport type CoolSchema = typeof CoolSchema;\n/**\n * Same kind of TypeScript hack:\n * Export namespace which will get merged with the type.\n */\nexport namespace CoolSchema {\n    /**\n     * Export Schema Type, so you can use it as you need.\n     */\n    export type Type = PicoSchema.Output<CoolSchema>;\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"use-schema",children:"Use schema"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Now you have quite ",(0,t.jsx)(n.strong,{children:"cool thing"}),": schema itself as ",(0,t.jsx)(n.code,{children:"CoolSchema"}),", schema type as ",(0,t.jsx)(n.code,{children:"CoolSchema"})," and the inferred type as ",(0,t.jsx)(n.code,{children:"CoolSchema.Type"}),".\nIt's not necessary to import any other files/types."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="./src/UseTheSchema.ts"',children:'import {CoolSchema} from "./schema/CoolSchema";\n\n/**\n * Because you\'ve hidden Schema type extraction, you can just use\n * it\'s type.\n */\nconst MyConst: CoolSchema.Type = {\n    myPropery: "Hello",\n};\n'})})]})}function m(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>i,a:()=>a});var t=s(7294);const o={},c=t.createContext(o);function a(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);